// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: landlord.proto

package com.kys.pb;

public final class LandlordBase {
  private LandlordBase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   ** 斗地主消息号 
   * </pre>
   *
   * Protobuf enum {@code pb_landlord.MSG}
   */
  public enum MSG
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEFAULT_LANDLORD = 0;</code>
     */
    DEFAULT_LANDLORD(0),
    /**
     * <pre>
     ** 游戏场次配置信息 
     * </pre>
     *
     * <code>GetRoomInfo = 1;</code>
     */
    GetRoomInfo(1),
    /**
     * <pre>
     ** 请求房间信息 
     * </pre>
     *
     * <code>GetRoomConfig = 2;</code>
     */
    GetRoomConfig(2),
    /**
     * <pre>
     ** 快速匹配 
     * </pre>
     *
     * <code>QuickJoin = 3;</code>
     */
    QuickJoin(3),
    /**
     * <pre>
     ** 取消匹配 
     * </pre>
     *
     * <code>CancleJoin = 4;</code>
     */
    CancleJoin(4),
    /**
     * <pre>
     ** 玩家返回游戏 
     * </pre>
     *
     * <code>RetryReturnGame = 6;</code>
     */
    RetryReturnGame(6),
    /**
     * <pre>
     ** 请求房间的index 
     * </pre>
     *
     * <code>QueryIndex = 101;</code>
     */
    QueryIndex(101),
    /**
     * <pre>
     ** 进入房间 
     * </pre>
     *
     * <code>EnterRoom = 102;</code>
     */
    EnterRoom(102),
    /**
     * <pre>
     ** 叫地主 
     * </pre>
     *
     * <code>DoCatch = 103;</code>
     */
    DoCatch(103),
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>PlayCards = 104;</code>
     */
    PlayCards(104),
    /**
     * <pre>
     ** 掉线后，恢复游戏 
     * </pre>
     *
     * <code>RecoverGame = 105;</code>
     */
    RecoverGame(105),
    /**
     * <pre>
     ** 玩家离开房间 
     * </pre>
     *
     * <code>LeaveRoom = 106;</code>
     */
    LeaveRoom(106),
    /**
     * <pre>
     ** 托管 
     * </pre>
     *
     * <code>AutoPlay = 107;</code>
     */
    AutoPlay(107),
    /**
     * <pre>
     ** 发送互动表情 
     * </pre>
     *
     * <code>SendAction = 108;</code>
     */
    SendAction(108),
    /**
     * <pre>
     ** 二人场-叫地主
     * </pre>
     *
     * <code>T_DoCatch = 201;</code>
     */
    T_DoCatch(201),
    /**
     * <pre>
     ** 二人场-出牌
     * </pre>
     *
     * <code>T_PlayCards = 202;</code>
     */
    T_PlayCards(202),
    /**
     * <pre>
     ** 二人场-掉线后，恢复游戏
     * </pre>
     *
     * <code>T_RecoverGame = 203;</code>
     */
    T_RecoverGame(203),
    /**
     * <pre>
     ** 二人场-玩家离开房间
     * </pre>
     *
     * <code>T_LeaveRoom = 204;</code>
     */
    T_LeaveRoom(204),
    /**
     * <pre>
     ** 比赛场-请求赛事信息
     * </pre>
     *
     * <code>M_GetMatchInfo = 301;</code>
     */
    M_GetMatchInfo(301),
    /**
     * <pre>
     ** 比赛场-请求赛事详细信息
     * </pre>
     *
     * <code>M_GetMatchDetail = 302;</code>
     */
    M_GetMatchDetail(302),
    /**
     * <pre>
     ** 比赛场-请求赛事记录信息
     * </pre>
     *
     * <code>M_GetMatchRecord = 303;</code>
     */
    M_GetMatchRecord(303),
    /**
     * <pre>
     ** 比赛场-请求赛事信息
     * </pre>
     *
     * <code>M_OwnMatchRecord = 304;</code>
     */
    M_OwnMatchRecord(304),
    /**
     * <pre>
     ** 比赛场-请求赛事报名
     * </pre>
     *
     * <code>M_MatchApply = 305;</code>
     */
    M_MatchApply(305),
    /**
     * <pre>
     ** 比赛场-请求取消赛事
     * </pre>
     *
     * <code>M_MatchCancel = 306;</code>
     */
    M_MatchCancel(306),
    /**
     * <pre>
     ** 比赛场-赛事配置
     * </pre>
     *
     * <code>M_MatchConfig = 307;</code>
     */
    M_MatchConfig(307),
    /**
     * <pre>
     ** 比赛场-获取比赛中玩家积分头像等信息
     * </pre>
     *
     * <code>M_MatchScore = 308;</code>
     */
    M_MatchScore(308),
    /**
     * <pre>
     ** 比赛场-强行退赛接口
     * </pre>
     *
     * <code>M_ForceQuit = 309;</code>
     */
    M_ForceQuit(309),
    /**
     * <pre>
     ** 比赛场-离开比赛报名界面
     * </pre>
     *
     * <code>M_LeaveMatch = 310;</code>
     */
    M_LeaveMatch(310),
    /**
     * <pre>
     ** 请求抽红包 
     * </pre>
     *
     * <code>DrawWinCup = 401;</code>
     */
    DrawWinCup(401),
    /**
     * <pre>
     ** 请求玩家抽红包的比赛数 
     * </pre>
     *
     * <code>GetLotteryCount = 402;</code>
     */
    GetLotteryCount(402),
    /**
     * <pre>
     ** 请求财神红包信息 
     * </pre>
     *
     * <code>GodLight = 601;</code>
     */
    GodLight(601),
    /**
     * <pre>
     ** 获取财神红包奖励 
     * </pre>
     *
     * <code>GodLightAward = 602;</code>
     */
    GodLightAward(602),
    /**
     * <pre>
     ** Push 玩家应该加入的房间号和url 
     * </pre>
     *
     * <code>B_RoomIdUrl = 1001;</code>
     */
    B_RoomIdUrl(1001),
    /**
     * <pre>
     ** Push 通知叫地主 
     * </pre>
     *
     * <code>B_DoCatch = 1002;</code>
     */
    B_DoCatch(1002),
    /**
     * <pre>
     ** Push 有玩家进行托管了 
     * </pre>
     *
     * <code>B_AutoPlay = 1003;</code>
     */
    B_AutoPlay(1003),
    /**
     * <pre>
     ** Push 游戏开始，发牌 
     * </pre>
     *
     * <code>B_GameStart = 1004;</code>
     */
    B_GameStart(1004),
    /**
     * <pre>
     ** Push 上个玩家叫地主结果 
     * </pre>
     *
     * <code>B_CatchResult = 1005;</code>
     */
    B_CatchResult(1005),
    /**
     * <pre>
     ** Push 发地主牌 
     * </pre>
     *
     * <code>B_SendDiZhuCard = 1006;</code>
     */
    B_SendDiZhuCard(1006),
    /**
     * <pre>
     ** Push 出牌玩家 
     * </pre>
     *
     * <code>B_NextPlayer = 1007;</code>
     */
    B_NextPlayer(1007),
    /**
     * <pre>
     ** Push 上个玩家出牌信息 
     * </pre>
     *
     * <code>B_PlayCards = 1008;</code>
     */
    B_PlayCards(1008),
    /**
     * <pre>
     ** Push 游戏结算信息 
     * </pre>
     *
     * <code>B_GameSettle = 1009;</code>
     */
    B_GameSettle(1009),
    /**
     * <pre>
     ** Push 互动表情消息 
     * </pre>
     *
     * <code>B_SendAction = 1010;</code>
     */
    B_SendAction(1010),
    /**
     * <pre>
     ** Push 二人场-有玩家进行托管了 
     * </pre>
     *
     * <code>B_T_AutoPlay = 1101;</code>
     */
    B_T_AutoPlay(1101),
    /**
     * <pre>
     ** Push 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>B_T_GameStart = 1102;</code>
     */
    B_T_GameStart(1102),
    /**
     * <pre>
     ** Push 二人场-通知叫地主 
     * </pre>
     *
     * <code>B_T_DoCatch = 1103;</code>
     */
    B_T_DoCatch(1103),
    /**
     * <pre>
     ** Push 二人场-上个玩家叫地主结果 
     * </pre>
     *
     * <code>B_T_CatchResult = 1104;</code>
     */
    B_T_CatchResult(1104),
    /**
     * <pre>
     ** Push 二人场-发地主牌 
     * </pre>
     *
     * <code>B_T_SendDiZhuCard = 1105;</code>
     */
    B_T_SendDiZhuCard(1105),
    /**
     * <pre>
     ** Push 二人场-游戏结算信息 
     * </pre>
     *
     * <code>B_T_GameSettle = 1106;</code>
     */
    B_T_GameSettle(1106),
    /**
     * <pre>
     ** Push 比赛场-赛事列表的推送 
     * </pre>
     *
     * <code>B_M_MatchList = 1201;</code>
     */
    B_M_MatchList(1201),
    /**
     * <pre>
     ** Push 比赛场-赛事准备开始的推送 
     * </pre>
     *
     * <code>B_M_MatchStart = 1202;</code>
     */
    B_M_MatchStart(1202),
    /**
     * <pre>
     ** Push 比赛场-赛事结束等待的推送 
     * </pre>
     *
     * <code>B_M_MatchEnd = 1203;</code>
     */
    B_M_MatchEnd(1203),
    /**
     * <pre>
     ** Push 比赛场-赛事结算的推送 
     * </pre>
     *
     * <code>B_M_MatchResult = 1204;</code>
     */
    B_M_MatchResult(1204),
    /**
     * <pre>
     ** 财神红包状态 
     * </pre>
     *
     * <code>B_GodLightStatus = 1301;</code>
     */
    B_GodLightStatus(1301),
    /**
     * <pre>
     ** 财神红包池 
     * </pre>
     *
     * <code>B_GodLightPool = 1302;</code>
     */
    B_GodLightPool(1302),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DEFAULT_LANDLORD = 0;</code>
     */
    public static final int DEFAULT_LANDLORD_VALUE = 0;
    /**
     * <pre>
     ** 游戏场次配置信息 
     * </pre>
     *
     * <code>GetRoomInfo = 1;</code>
     */
    public static final int GetRoomInfo_VALUE = 1;
    /**
     * <pre>
     ** 请求房间信息 
     * </pre>
     *
     * <code>GetRoomConfig = 2;</code>
     */
    public static final int GetRoomConfig_VALUE = 2;
    /**
     * <pre>
     ** 快速匹配 
     * </pre>
     *
     * <code>QuickJoin = 3;</code>
     */
    public static final int QuickJoin_VALUE = 3;
    /**
     * <pre>
     ** 取消匹配 
     * </pre>
     *
     * <code>CancleJoin = 4;</code>
     */
    public static final int CancleJoin_VALUE = 4;
    /**
     * <pre>
     ** 玩家返回游戏 
     * </pre>
     *
     * <code>RetryReturnGame = 6;</code>
     */
    public static final int RetryReturnGame_VALUE = 6;
    /**
     * <pre>
     ** 请求房间的index 
     * </pre>
     *
     * <code>QueryIndex = 101;</code>
     */
    public static final int QueryIndex_VALUE = 101;
    /**
     * <pre>
     ** 进入房间 
     * </pre>
     *
     * <code>EnterRoom = 102;</code>
     */
    public static final int EnterRoom_VALUE = 102;
    /**
     * <pre>
     ** 叫地主 
     * </pre>
     *
     * <code>DoCatch = 103;</code>
     */
    public static final int DoCatch_VALUE = 103;
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>PlayCards = 104;</code>
     */
    public static final int PlayCards_VALUE = 104;
    /**
     * <pre>
     ** 掉线后，恢复游戏 
     * </pre>
     *
     * <code>RecoverGame = 105;</code>
     */
    public static final int RecoverGame_VALUE = 105;
    /**
     * <pre>
     ** 玩家离开房间 
     * </pre>
     *
     * <code>LeaveRoom = 106;</code>
     */
    public static final int LeaveRoom_VALUE = 106;
    /**
     * <pre>
     ** 托管 
     * </pre>
     *
     * <code>AutoPlay = 107;</code>
     */
    public static final int AutoPlay_VALUE = 107;
    /**
     * <pre>
     ** 发送互动表情 
     * </pre>
     *
     * <code>SendAction = 108;</code>
     */
    public static final int SendAction_VALUE = 108;
    /**
     * <pre>
     ** 二人场-叫地主
     * </pre>
     *
     * <code>T_DoCatch = 201;</code>
     */
    public static final int T_DoCatch_VALUE = 201;
    /**
     * <pre>
     ** 二人场-出牌
     * </pre>
     *
     * <code>T_PlayCards = 202;</code>
     */
    public static final int T_PlayCards_VALUE = 202;
    /**
     * <pre>
     ** 二人场-掉线后，恢复游戏
     * </pre>
     *
     * <code>T_RecoverGame = 203;</code>
     */
    public static final int T_RecoverGame_VALUE = 203;
    /**
     * <pre>
     ** 二人场-玩家离开房间
     * </pre>
     *
     * <code>T_LeaveRoom = 204;</code>
     */
    public static final int T_LeaveRoom_VALUE = 204;
    /**
     * <pre>
     ** 比赛场-请求赛事信息
     * </pre>
     *
     * <code>M_GetMatchInfo = 301;</code>
     */
    public static final int M_GetMatchInfo_VALUE = 301;
    /**
     * <pre>
     ** 比赛场-请求赛事详细信息
     * </pre>
     *
     * <code>M_GetMatchDetail = 302;</code>
     */
    public static final int M_GetMatchDetail_VALUE = 302;
    /**
     * <pre>
     ** 比赛场-请求赛事记录信息
     * </pre>
     *
     * <code>M_GetMatchRecord = 303;</code>
     */
    public static final int M_GetMatchRecord_VALUE = 303;
    /**
     * <pre>
     ** 比赛场-请求赛事信息
     * </pre>
     *
     * <code>M_OwnMatchRecord = 304;</code>
     */
    public static final int M_OwnMatchRecord_VALUE = 304;
    /**
     * <pre>
     ** 比赛场-请求赛事报名
     * </pre>
     *
     * <code>M_MatchApply = 305;</code>
     */
    public static final int M_MatchApply_VALUE = 305;
    /**
     * <pre>
     ** 比赛场-请求取消赛事
     * </pre>
     *
     * <code>M_MatchCancel = 306;</code>
     */
    public static final int M_MatchCancel_VALUE = 306;
    /**
     * <pre>
     ** 比赛场-赛事配置
     * </pre>
     *
     * <code>M_MatchConfig = 307;</code>
     */
    public static final int M_MatchConfig_VALUE = 307;
    /**
     * <pre>
     ** 比赛场-获取比赛中玩家积分头像等信息
     * </pre>
     *
     * <code>M_MatchScore = 308;</code>
     */
    public static final int M_MatchScore_VALUE = 308;
    /**
     * <pre>
     ** 比赛场-强行退赛接口
     * </pre>
     *
     * <code>M_ForceQuit = 309;</code>
     */
    public static final int M_ForceQuit_VALUE = 309;
    /**
     * <pre>
     ** 比赛场-离开比赛报名界面
     * </pre>
     *
     * <code>M_LeaveMatch = 310;</code>
     */
    public static final int M_LeaveMatch_VALUE = 310;
    /**
     * <pre>
     ** 请求抽红包 
     * </pre>
     *
     * <code>DrawWinCup = 401;</code>
     */
    public static final int DrawWinCup_VALUE = 401;
    /**
     * <pre>
     ** 请求玩家抽红包的比赛数 
     * </pre>
     *
     * <code>GetLotteryCount = 402;</code>
     */
    public static final int GetLotteryCount_VALUE = 402;
    /**
     * <pre>
     ** 请求财神红包信息 
     * </pre>
     *
     * <code>GodLight = 601;</code>
     */
    public static final int GodLight_VALUE = 601;
    /**
     * <pre>
     ** 获取财神红包奖励 
     * </pre>
     *
     * <code>GodLightAward = 602;</code>
     */
    public static final int GodLightAward_VALUE = 602;
    /**
     * <pre>
     ** Push 玩家应该加入的房间号和url 
     * </pre>
     *
     * <code>B_RoomIdUrl = 1001;</code>
     */
    public static final int B_RoomIdUrl_VALUE = 1001;
    /**
     * <pre>
     ** Push 通知叫地主 
     * </pre>
     *
     * <code>B_DoCatch = 1002;</code>
     */
    public static final int B_DoCatch_VALUE = 1002;
    /**
     * <pre>
     ** Push 有玩家进行托管了 
     * </pre>
     *
     * <code>B_AutoPlay = 1003;</code>
     */
    public static final int B_AutoPlay_VALUE = 1003;
    /**
     * <pre>
     ** Push 游戏开始，发牌 
     * </pre>
     *
     * <code>B_GameStart = 1004;</code>
     */
    public static final int B_GameStart_VALUE = 1004;
    /**
     * <pre>
     ** Push 上个玩家叫地主结果 
     * </pre>
     *
     * <code>B_CatchResult = 1005;</code>
     */
    public static final int B_CatchResult_VALUE = 1005;
    /**
     * <pre>
     ** Push 发地主牌 
     * </pre>
     *
     * <code>B_SendDiZhuCard = 1006;</code>
     */
    public static final int B_SendDiZhuCard_VALUE = 1006;
    /**
     * <pre>
     ** Push 出牌玩家 
     * </pre>
     *
     * <code>B_NextPlayer = 1007;</code>
     */
    public static final int B_NextPlayer_VALUE = 1007;
    /**
     * <pre>
     ** Push 上个玩家出牌信息 
     * </pre>
     *
     * <code>B_PlayCards = 1008;</code>
     */
    public static final int B_PlayCards_VALUE = 1008;
    /**
     * <pre>
     ** Push 游戏结算信息 
     * </pre>
     *
     * <code>B_GameSettle = 1009;</code>
     */
    public static final int B_GameSettle_VALUE = 1009;
    /**
     * <pre>
     ** Push 互动表情消息 
     * </pre>
     *
     * <code>B_SendAction = 1010;</code>
     */
    public static final int B_SendAction_VALUE = 1010;
    /**
     * <pre>
     ** Push 二人场-有玩家进行托管了 
     * </pre>
     *
     * <code>B_T_AutoPlay = 1101;</code>
     */
    public static final int B_T_AutoPlay_VALUE = 1101;
    /**
     * <pre>
     ** Push 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>B_T_GameStart = 1102;</code>
     */
    public static final int B_T_GameStart_VALUE = 1102;
    /**
     * <pre>
     ** Push 二人场-通知叫地主 
     * </pre>
     *
     * <code>B_T_DoCatch = 1103;</code>
     */
    public static final int B_T_DoCatch_VALUE = 1103;
    /**
     * <pre>
     ** Push 二人场-上个玩家叫地主结果 
     * </pre>
     *
     * <code>B_T_CatchResult = 1104;</code>
     */
    public static final int B_T_CatchResult_VALUE = 1104;
    /**
     * <pre>
     ** Push 二人场-发地主牌 
     * </pre>
     *
     * <code>B_T_SendDiZhuCard = 1105;</code>
     */
    public static final int B_T_SendDiZhuCard_VALUE = 1105;
    /**
     * <pre>
     ** Push 二人场-游戏结算信息 
     * </pre>
     *
     * <code>B_T_GameSettle = 1106;</code>
     */
    public static final int B_T_GameSettle_VALUE = 1106;
    /**
     * <pre>
     ** Push 比赛场-赛事列表的推送 
     * </pre>
     *
     * <code>B_M_MatchList = 1201;</code>
     */
    public static final int B_M_MatchList_VALUE = 1201;
    /**
     * <pre>
     ** Push 比赛场-赛事准备开始的推送 
     * </pre>
     *
     * <code>B_M_MatchStart = 1202;</code>
     */
    public static final int B_M_MatchStart_VALUE = 1202;
    /**
     * <pre>
     ** Push 比赛场-赛事结束等待的推送 
     * </pre>
     *
     * <code>B_M_MatchEnd = 1203;</code>
     */
    public static final int B_M_MatchEnd_VALUE = 1203;
    /**
     * <pre>
     ** Push 比赛场-赛事结算的推送 
     * </pre>
     *
     * <code>B_M_MatchResult = 1204;</code>
     */
    public static final int B_M_MatchResult_VALUE = 1204;
    /**
     * <pre>
     ** 财神红包状态 
     * </pre>
     *
     * <code>B_GodLightStatus = 1301;</code>
     */
    public static final int B_GodLightStatus_VALUE = 1301;
    /**
     * <pre>
     ** 财神红包池 
     * </pre>
     *
     * <code>B_GodLightPool = 1302;</code>
     */
    public static final int B_GodLightPool_VALUE = 1302;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MSG valueOf(int value) {
      return forNumber(value);
    }

    public static MSG forNumber(int value) {
      switch (value) {
        case 0: return DEFAULT_LANDLORD;
        case 1: return GetRoomInfo;
        case 2: return GetRoomConfig;
        case 3: return QuickJoin;
        case 4: return CancleJoin;
        case 6: return RetryReturnGame;
        case 101: return QueryIndex;
        case 102: return EnterRoom;
        case 103: return DoCatch;
        case 104: return PlayCards;
        case 105: return RecoverGame;
        case 106: return LeaveRoom;
        case 107: return AutoPlay;
        case 108: return SendAction;
        case 201: return T_DoCatch;
        case 202: return T_PlayCards;
        case 203: return T_RecoverGame;
        case 204: return T_LeaveRoom;
        case 301: return M_GetMatchInfo;
        case 302: return M_GetMatchDetail;
        case 303: return M_GetMatchRecord;
        case 304: return M_OwnMatchRecord;
        case 305: return M_MatchApply;
        case 306: return M_MatchCancel;
        case 307: return M_MatchConfig;
        case 308: return M_MatchScore;
        case 309: return M_ForceQuit;
        case 310: return M_LeaveMatch;
        case 401: return DrawWinCup;
        case 402: return GetLotteryCount;
        case 601: return GodLight;
        case 602: return GodLightAward;
        case 1001: return B_RoomIdUrl;
        case 1002: return B_DoCatch;
        case 1003: return B_AutoPlay;
        case 1004: return B_GameStart;
        case 1005: return B_CatchResult;
        case 1006: return B_SendDiZhuCard;
        case 1007: return B_NextPlayer;
        case 1008: return B_PlayCards;
        case 1009: return B_GameSettle;
        case 1010: return B_SendAction;
        case 1101: return B_T_AutoPlay;
        case 1102: return B_T_GameStart;
        case 1103: return B_T_DoCatch;
        case 1104: return B_T_CatchResult;
        case 1105: return B_T_SendDiZhuCard;
        case 1106: return B_T_GameSettle;
        case 1201: return B_M_MatchList;
        case 1202: return B_M_MatchStart;
        case 1203: return B_M_MatchEnd;
        case 1204: return B_M_MatchResult;
        case 1301: return B_GodLightStatus;
        case 1302: return B_GodLightPool;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MSG>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MSG> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MSG>() {
            public MSG findValueByNumber(int number) {
              return MSG.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return LandlordBase.getDescriptor().getEnumTypes().get(0);
    }

    private static final MSG[] VALUES = values();

    public static MSG valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MSG(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_landlord.MSG)
  }

  /**
   * <pre>
   ** 玩家结算状态 
   * </pre>
   *
   * Protobuf enum {@code pb_landlord.PlayerState}
   */
  public enum PlayerState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** 无状态 
     * </pre>
     *
     * <code>None = 0;</code>
     */
    None(0),
    /**
     * <pre>
     ** 免赔 
     * </pre>
     *
     * <code>MianPei = 1;</code>
     */
    MianPei(1),
    /**
     * <pre>
     ** 挂机 
     * </pre>
     *
     * <code>GuaJi = 2;</code>
     */
    GuaJi(2),
    /**
     * <pre>
     ** 上限 
     * </pre>
     *
     * <code>ShangXian = 3;</code>
     */
    ShangXian(3),
    /**
     * <pre>
     ** 封顶 
     * </pre>
     *
     * <code>FengDing = 4;</code>
     */
    FengDing(4),
    /**
     * <pre>
     ** 破产 
     * </pre>
     *
     * <code>PoChan = 5;</code>
     */
    PoChan(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** 无状态 
     * </pre>
     *
     * <code>None = 0;</code>
     */
    public static final int None_VALUE = 0;
    /**
     * <pre>
     ** 免赔 
     * </pre>
     *
     * <code>MianPei = 1;</code>
     */
    public static final int MianPei_VALUE = 1;
    /**
     * <pre>
     ** 挂机 
     * </pre>
     *
     * <code>GuaJi = 2;</code>
     */
    public static final int GuaJi_VALUE = 2;
    /**
     * <pre>
     ** 上限 
     * </pre>
     *
     * <code>ShangXian = 3;</code>
     */
    public static final int ShangXian_VALUE = 3;
    /**
     * <pre>
     ** 封顶 
     * </pre>
     *
     * <code>FengDing = 4;</code>
     */
    public static final int FengDing_VALUE = 4;
    /**
     * <pre>
     ** 破产 
     * </pre>
     *
     * <code>PoChan = 5;</code>
     */
    public static final int PoChan_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static PlayerState valueOf(int value) {
      return forNumber(value);
    }

    public static PlayerState forNumber(int value) {
      switch (value) {
        case 0: return None;
        case 1: return MianPei;
        case 2: return GuaJi;
        case 3: return ShangXian;
        case 4: return FengDing;
        case 5: return PoChan;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PlayerState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PlayerState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PlayerState>() {
            public PlayerState findValueByNumber(int number) {
              return PlayerState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return LandlordBase.getDescriptor().getEnumTypes().get(1);
    }

    private static final PlayerState[] VALUES = values();

    public static PlayerState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PlayerState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_landlord.PlayerState)
  }

  /**
   * <pre>
   ** 游戏状态枚举 
   * </pre>
   *
   * Protobuf enum {@code pb_landlord.GameStateEnum}
   */
  public enum GameStateEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** 创建房间 （仅第一个加入房间的人触发的事件）
     * </pre>
     *
     * <code>Enter = 0;</code>
     */
    Enter(0),
    /**
     * <pre>
     ** 成员加入,人齐直接跳转到start 
     * </pre>
     *
     * <code>Join = 1;</code>
     */
    Join(1),
    /**
     * <pre>
     ** 开始游戏,给玩家发牌17张牌 
     * </pre>
     *
     * <code>Start = 2;</code>
     */
    Start(2),
    /**
     * <pre>
     ** 抢地主 
     * </pre>
     *
     * <code>Catch = 3;</code>
     */
    Catch(3),
    /**
     * <pre>
     ** 现实底牌，开始出牌 
     * </pre>
     *
     * <code>Reveal = 4;</code>
     */
    Reveal(4),
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>PlayCard = 5;</code>
     */
    PlayCard(5),
    /**
     * <pre>
     ** 结算 
     * </pre>
     *
     * <code>Settle = 6;</code>
     */
    Settle(6),
    /**
     * <code>ReStart = 7;</code>
     */
    ReStart(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** 创建房间 （仅第一个加入房间的人触发的事件）
     * </pre>
     *
     * <code>Enter = 0;</code>
     */
    public static final int Enter_VALUE = 0;
    /**
     * <pre>
     ** 成员加入,人齐直接跳转到start 
     * </pre>
     *
     * <code>Join = 1;</code>
     */
    public static final int Join_VALUE = 1;
    /**
     * <pre>
     ** 开始游戏,给玩家发牌17张牌 
     * </pre>
     *
     * <code>Start = 2;</code>
     */
    public static final int Start_VALUE = 2;
    /**
     * <pre>
     ** 抢地主 
     * </pre>
     *
     * <code>Catch = 3;</code>
     */
    public static final int Catch_VALUE = 3;
    /**
     * <pre>
     ** 现实底牌，开始出牌 
     * </pre>
     *
     * <code>Reveal = 4;</code>
     */
    public static final int Reveal_VALUE = 4;
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>PlayCard = 5;</code>
     */
    public static final int PlayCard_VALUE = 5;
    /**
     * <pre>
     ** 结算 
     * </pre>
     *
     * <code>Settle = 6;</code>
     */
    public static final int Settle_VALUE = 6;
    /**
     * <code>ReStart = 7;</code>
     */
    public static final int ReStart_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static GameStateEnum valueOf(int value) {
      return forNumber(value);
    }

    public static GameStateEnum forNumber(int value) {
      switch (value) {
        case 0: return Enter;
        case 1: return Join;
        case 2: return Start;
        case 3: return Catch;
        case 4: return Reveal;
        case 5: return PlayCard;
        case 6: return Settle;
        case 7: return ReStart;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GameStateEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GameStateEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameStateEnum>() {
            public GameStateEnum findValueByNumber(int number) {
              return GameStateEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return LandlordBase.getDescriptor().getEnumTypes().get(2);
    }

    private static final GameStateEnum[] VALUES = values();

    public static GameStateEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GameStateEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_landlord.GameStateEnum)
  }

  /**
   * <pre>
   ** 牌型枚举 
   * </pre>
   *
   * Protobuf enum {@code pb_landlord.CardTypeEnum}
   */
  public enum CardTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** 不出 
     * </pre>
     *
     * <code>cgZERO = 0;</code>
     */
    cgZERO(0),
    /**
     * <pre>
     ** 错误 
     * </pre>
     *
     * <code>cgERROR = -1;</code>
     */
    cgERROR(-1),
    /**
     * <pre>
     ** 单张 
     * </pre>
     *
     * <code>cgSINGLE = 1;</code>
     */
    cgSINGLE(1),
    /**
     * <pre>
     ** 一对 
     * </pre>
     *
     * <code>cgDOUBLE = 2;</code>
     */
    cgDOUBLE(2),
    /**
     * <pre>
     ** 三张 
     * </pre>
     *
     * <code>cgTHREE = 3;</code>
     */
    cgTHREE(3),
    /**
     * <pre>
     ** 三带一 
     * </pre>
     *
     * <code>cgTHREE_TAKE_ONE = 4;</code>
     */
    cgTHREE_TAKE_ONE(4),
    /**
     * <pre>
     ** 三带对 
     * </pre>
     *
     * <code>cgTHREE_TAKE_TWO = 5;</code>
     */
    cgTHREE_TAKE_TWO(5),
    /**
     * <pre>
     ** 单顺	连子 
     * </pre>
     *
     * <code>cgSINGLE_LINE = 6;</code>
     */
    cgSINGLE_LINE(6),
    /**
     * <pre>
     ** 双顺	连对 
     * </pre>
     *
     * <code>cgDOUBLE_LINE = 7;</code>
     */
    cgDOUBLE_LINE(7),
    /**
     * <pre>
     ** 三顺	飞机 
     * </pre>
     *
     * <code>cgTHREE_LINE = 8;</code>
     */
    cgTHREE_LINE(8),
    /**
     * <pre>
     ** 飞机	带翅膀 
     * </pre>
     *
     * <code>cgTHREE_TAKE_ONE_LINE = 9;</code>
     */
    cgTHREE_TAKE_ONE_LINE(9),
    /**
     * <pre>
     ** 飞机	带翅膀 
     * </pre>
     *
     * <code>cgTHREE_TAKE_TWO_LINE = 10;</code>
     */
    cgTHREE_TAKE_TWO_LINE(10),
    /**
     * <pre>
     ** 四带二	
     * </pre>
     *
     * <code>cgFOUR_TAKE_SINGLE = 11;</code>
     */
    cgFOUR_TAKE_SINGLE(11),
    /**
     * <pre>
     ** 四带二对 
     * </pre>
     *
     * <code>cgFOUR_TAKE_PAIR = 12;</code>
     */
    cgFOUR_TAKE_PAIR(12),
    /**
     * <pre>
     ** 炸弹 
     * </pre>
     *
     * <code>cgBOMB_CARD = 13;</code>
     */
    cgBOMB_CARD(13),
    /**
     * <pre>
     ** 王炸 
     * </pre>
     *
     * <code>cgKING_CARD = 14;</code>
     */
    cgKING_CARD(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** 不出 
     * </pre>
     *
     * <code>cgZERO = 0;</code>
     */
    public static final int cgZERO_VALUE = 0;
    /**
     * <pre>
     ** 错误 
     * </pre>
     *
     * <code>cgERROR = -1;</code>
     */
    public static final int cgERROR_VALUE = -1;
    /**
     * <pre>
     ** 单张 
     * </pre>
     *
     * <code>cgSINGLE = 1;</code>
     */
    public static final int cgSINGLE_VALUE = 1;
    /**
     * <pre>
     ** 一对 
     * </pre>
     *
     * <code>cgDOUBLE = 2;</code>
     */
    public static final int cgDOUBLE_VALUE = 2;
    /**
     * <pre>
     ** 三张 
     * </pre>
     *
     * <code>cgTHREE = 3;</code>
     */
    public static final int cgTHREE_VALUE = 3;
    /**
     * <pre>
     ** 三带一 
     * </pre>
     *
     * <code>cgTHREE_TAKE_ONE = 4;</code>
     */
    public static final int cgTHREE_TAKE_ONE_VALUE = 4;
    /**
     * <pre>
     ** 三带对 
     * </pre>
     *
     * <code>cgTHREE_TAKE_TWO = 5;</code>
     */
    public static final int cgTHREE_TAKE_TWO_VALUE = 5;
    /**
     * <pre>
     ** 单顺	连子 
     * </pre>
     *
     * <code>cgSINGLE_LINE = 6;</code>
     */
    public static final int cgSINGLE_LINE_VALUE = 6;
    /**
     * <pre>
     ** 双顺	连对 
     * </pre>
     *
     * <code>cgDOUBLE_LINE = 7;</code>
     */
    public static final int cgDOUBLE_LINE_VALUE = 7;
    /**
     * <pre>
     ** 三顺	飞机 
     * </pre>
     *
     * <code>cgTHREE_LINE = 8;</code>
     */
    public static final int cgTHREE_LINE_VALUE = 8;
    /**
     * <pre>
     ** 飞机	带翅膀 
     * </pre>
     *
     * <code>cgTHREE_TAKE_ONE_LINE = 9;</code>
     */
    public static final int cgTHREE_TAKE_ONE_LINE_VALUE = 9;
    /**
     * <pre>
     ** 飞机	带翅膀 
     * </pre>
     *
     * <code>cgTHREE_TAKE_TWO_LINE = 10;</code>
     */
    public static final int cgTHREE_TAKE_TWO_LINE_VALUE = 10;
    /**
     * <pre>
     ** 四带二	
     * </pre>
     *
     * <code>cgFOUR_TAKE_SINGLE = 11;</code>
     */
    public static final int cgFOUR_TAKE_SINGLE_VALUE = 11;
    /**
     * <pre>
     ** 四带二对 
     * </pre>
     *
     * <code>cgFOUR_TAKE_PAIR = 12;</code>
     */
    public static final int cgFOUR_TAKE_PAIR_VALUE = 12;
    /**
     * <pre>
     ** 炸弹 
     * </pre>
     *
     * <code>cgBOMB_CARD = 13;</code>
     */
    public static final int cgBOMB_CARD_VALUE = 13;
    /**
     * <pre>
     ** 王炸 
     * </pre>
     *
     * <code>cgKING_CARD = 14;</code>
     */
    public static final int cgKING_CARD_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static CardTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static CardTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return cgZERO;
        case -1: return cgERROR;
        case 1: return cgSINGLE;
        case 2: return cgDOUBLE;
        case 3: return cgTHREE;
        case 4: return cgTHREE_TAKE_ONE;
        case 5: return cgTHREE_TAKE_TWO;
        case 6: return cgSINGLE_LINE;
        case 7: return cgDOUBLE_LINE;
        case 8: return cgTHREE_LINE;
        case 9: return cgTHREE_TAKE_ONE_LINE;
        case 10: return cgTHREE_TAKE_TWO_LINE;
        case 11: return cgFOUR_TAKE_SINGLE;
        case 12: return cgFOUR_TAKE_PAIR;
        case 13: return cgBOMB_CARD;
        case 14: return cgKING_CARD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CardTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CardTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CardTypeEnum>() {
            public CardTypeEnum findValueByNumber(int number) {
              return CardTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return LandlordBase.getDescriptor().getEnumTypes().get(3);
    }

    private static final CardTypeEnum[] VALUES = values();

    public static CardTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CardTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_landlord.CardTypeEnum)
  }

  /**
   * <pre>
   ** 赛事类型 
   * </pre>
   *
   * Protobuf enum {@code pb_landlord.MatchType}
   */
  public enum MatchType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** 缺省 
     * </pre>
     *
     * <code>defaultType = 0;</code>
     */
    defaultType(0),
    /**
     * <pre>
     ** 二人场 
     * </pre>
     *
     * <code>Two_Player = 1;</code>
     */
    Two_Player(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** 缺省 
     * </pre>
     *
     * <code>defaultType = 0;</code>
     */
    public static final int defaultType_VALUE = 0;
    /**
     * <pre>
     ** 二人场 
     * </pre>
     *
     * <code>Two_Player = 1;</code>
     */
    public static final int Two_Player_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MatchType valueOf(int value) {
      return forNumber(value);
    }

    public static MatchType forNumber(int value) {
      switch (value) {
        case 0: return defaultType;
        case 1: return Two_Player;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MatchType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MatchType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MatchType>() {
            public MatchType findValueByNumber(int number) {
              return MatchType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return LandlordBase.getDescriptor().getEnumTypes().get(4);
    }

    private static final MatchType[] VALUES = values();

    public static MatchType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MatchType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_landlord.MatchType)
  }

  public interface UserInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.UserInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 用户ID 
     * </pre>
     *
     * <code>int32 playerId = 1;</code>
     */
    int getPlayerId();

    /**
     * <pre>
     ** 用户昵称 
     * </pre>
     *
     * <code>string playerName = 2;</code>
     */
    String getPlayerName();
    /**
     * <pre>
     ** 用户昵称 
     * </pre>
     *
     * <code>string playerName = 2;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    /**
     * <pre>
     ** 用户头像 
     * </pre>
     *
     * <code>string playerPortrait = 3;</code>
     */
    String getPlayerPortrait();
    /**
     * <pre>
     ** 用户头像 
     * </pre>
     *
     * <code>string playerPortrait = 3;</code>
     */
    com.google.protobuf.ByteString
        getPlayerPortraitBytes();

    /**
     * <pre>
     ** 用户性别1男2女0未知 
     * </pre>
     *
     * <code>int32 playerSex = 4;</code>
     */
    int getPlayerSex();

    /**
     * <pre>
     ** 当前金币数量 
     * </pre>
     *
     * <code>int32 playerGoldCoin = 5;</code>
     */
    int getPlayerGoldCoin();

    /**
     * <pre>
     ** 当前钻石数量 
     * </pre>
     *
     * <code>int32 playerDiamond = 6;</code>
     */
    int getPlayerDiamond();

    /**
     * <pre>
     ** 当前红包数 
     * </pre>
     *
     * <code>int32 playerWinCup = 7;</code>
     */
    int getPlayerWinCup();

    /**
     * <pre>
     ** 历史获得红包数 
     * </pre>
     *
     * <code>int32 historyWinCup = 8;</code>
     */
    int getHistoryWinCup();

    /**
     * <pre>
     ** vip等级 
     * </pre>
     *
     * <code>int32 vipLv = 9;</code>
     */
    int getVipLv();
  }
  /**
   * <pre>
   ** 用户信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.UserInfo}
   */
  public  static final class UserInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.UserInfo)
      UserInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserInfo.newBuilder() to construct.
    private UserInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserInfo() {
      playerName_ = "";
      playerPortrait_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new UserInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              playerName_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              playerPortrait_ = s;
              break;
            }
            case 32: {

              playerSex_ = input.readInt32();
              break;
            }
            case 40: {

              playerGoldCoin_ = input.readInt32();
              break;
            }
            case 48: {

              playerDiamond_ = input.readInt32();
              break;
            }
            case 56: {

              playerWinCup_ = input.readInt32();
              break;
            }
            case 64: {

              historyWinCup_ = input.readInt32();
              break;
            }
            case 72: {

              vipLv_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_UserInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_UserInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UserInfo.class, Builder.class);
    }

    public static final int PLAYERID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <pre>
     ** 用户ID 
     * </pre>
     *
     * <code>int32 playerId = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int PLAYERNAME_FIELD_NUMBER = 2;
    private volatile Object playerName_;
    /**
     * <pre>
     ** 用户昵称 
     * </pre>
     *
     * <code>string playerName = 2;</code>
     */
    public String getPlayerName() {
      Object ref = playerName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        playerName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 用户昵称 
     * </pre>
     *
     * <code>string playerName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      Object ref = playerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERPORTRAIT_FIELD_NUMBER = 3;
    private volatile Object playerPortrait_;
    /**
     * <pre>
     ** 用户头像 
     * </pre>
     *
     * <code>string playerPortrait = 3;</code>
     */
    public String getPlayerPortrait() {
      Object ref = playerPortrait_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        playerPortrait_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 用户头像 
     * </pre>
     *
     * <code>string playerPortrait = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerPortraitBytes() {
      Object ref = playerPortrait_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        playerPortrait_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERSEX_FIELD_NUMBER = 4;
    private int playerSex_;
    /**
     * <pre>
     ** 用户性别1男2女0未知 
     * </pre>
     *
     * <code>int32 playerSex = 4;</code>
     */
    public int getPlayerSex() {
      return playerSex_;
    }

    public static final int PLAYERGOLDCOIN_FIELD_NUMBER = 5;
    private int playerGoldCoin_;
    /**
     * <pre>
     ** 当前金币数量 
     * </pre>
     *
     * <code>int32 playerGoldCoin = 5;</code>
     */
    public int getPlayerGoldCoin() {
      return playerGoldCoin_;
    }

    public static final int PLAYERDIAMOND_FIELD_NUMBER = 6;
    private int playerDiamond_;
    /**
     * <pre>
     ** 当前钻石数量 
     * </pre>
     *
     * <code>int32 playerDiamond = 6;</code>
     */
    public int getPlayerDiamond() {
      return playerDiamond_;
    }

    public static final int PLAYERWINCUP_FIELD_NUMBER = 7;
    private int playerWinCup_;
    /**
     * <pre>
     ** 当前红包数 
     * </pre>
     *
     * <code>int32 playerWinCup = 7;</code>
     */
    public int getPlayerWinCup() {
      return playerWinCup_;
    }

    public static final int HISTORYWINCUP_FIELD_NUMBER = 8;
    private int historyWinCup_;
    /**
     * <pre>
     ** 历史获得红包数 
     * </pre>
     *
     * <code>int32 historyWinCup = 8;</code>
     */
    public int getHistoryWinCup() {
      return historyWinCup_;
    }

    public static final int VIPLV_FIELD_NUMBER = 9;
    private int vipLv_;
    /**
     * <pre>
     ** vip等级 
     * </pre>
     *
     * <code>int32 vipLv = 9;</code>
     */
    public int getVipLv() {
      return vipLv_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (playerId_ != 0) {
        output.writeInt32(1, playerId_);
      }
      if (!getPlayerNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, playerName_);
      }
      if (!getPlayerPortraitBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, playerPortrait_);
      }
      if (playerSex_ != 0) {
        output.writeInt32(4, playerSex_);
      }
      if (playerGoldCoin_ != 0) {
        output.writeInt32(5, playerGoldCoin_);
      }
      if (playerDiamond_ != 0) {
        output.writeInt32(6, playerDiamond_);
      }
      if (playerWinCup_ != 0) {
        output.writeInt32(7, playerWinCup_);
      }
      if (historyWinCup_ != 0) {
        output.writeInt32(8, historyWinCup_);
      }
      if (vipLv_ != 0) {
        output.writeInt32(9, vipLv_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (playerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (!getPlayerNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, playerName_);
      }
      if (!getPlayerPortraitBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, playerPortrait_);
      }
      if (playerSex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, playerSex_);
      }
      if (playerGoldCoin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, playerGoldCoin_);
      }
      if (playerDiamond_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, playerDiamond_);
      }
      if (playerWinCup_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, playerWinCup_);
      }
      if (historyWinCup_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, historyWinCup_);
      }
      if (vipLv_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, vipLv_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UserInfo)) {
        return super.equals(obj);
      }
      UserInfo other = (UserInfo) obj;

      if (getPlayerId()
          != other.getPlayerId()) return false;
      if (!getPlayerName()
          .equals(other.getPlayerName())) return false;
      if (!getPlayerPortrait()
          .equals(other.getPlayerPortrait())) return false;
      if (getPlayerSex()
          != other.getPlayerSex()) return false;
      if (getPlayerGoldCoin()
          != other.getPlayerGoldCoin()) return false;
      if (getPlayerDiamond()
          != other.getPlayerDiamond()) return false;
      if (getPlayerWinCup()
          != other.getPlayerWinCup()) return false;
      if (getHistoryWinCup()
          != other.getHistoryWinCup()) return false;
      if (getVipLv()
          != other.getVipLv()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerId();
      hash = (37 * hash) + PLAYERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerName().hashCode();
      hash = (37 * hash) + PLAYERPORTRAIT_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerPortrait().hashCode();
      hash = (37 * hash) + PLAYERSEX_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerSex();
      hash = (37 * hash) + PLAYERGOLDCOIN_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerGoldCoin();
      hash = (37 * hash) + PLAYERDIAMOND_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerDiamond();
      hash = (37 * hash) + PLAYERWINCUP_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerWinCup();
      hash = (37 * hash) + HISTORYWINCUP_FIELD_NUMBER;
      hash = (53 * hash) + getHistoryWinCup();
      hash = (37 * hash) + VIPLV_FIELD_NUMBER;
      hash = (53 * hash) + getVipLv();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UserInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UserInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UserInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UserInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UserInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UserInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UserInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UserInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UserInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UserInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UserInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UserInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UserInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 用户信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.UserInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.UserInfo)
        UserInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_UserInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_UserInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UserInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.UserInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        playerId_ = 0;

        playerName_ = "";

        playerPortrait_ = "";

        playerSex_ = 0;

        playerGoldCoin_ = 0;

        playerDiamond_ = 0;

        playerWinCup_ = 0;

        historyWinCup_ = 0;

        vipLv_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_UserInfo_descriptor;
      }

      @Override
      public UserInfo getDefaultInstanceForType() {
        return UserInfo.getDefaultInstance();
      }

      @Override
      public UserInfo build() {
        UserInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public UserInfo buildPartial() {
        UserInfo result = new UserInfo(this);
        result.playerId_ = playerId_;
        result.playerName_ = playerName_;
        result.playerPortrait_ = playerPortrait_;
        result.playerSex_ = playerSex_;
        result.playerGoldCoin_ = playerGoldCoin_;
        result.playerDiamond_ = playerDiamond_;
        result.playerWinCup_ = playerWinCup_;
        result.historyWinCup_ = historyWinCup_;
        result.vipLv_ = vipLv_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UserInfo) {
          return mergeFrom((UserInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UserInfo other) {
        if (other == UserInfo.getDefaultInstance()) return this;
        if (other.getPlayerId() != 0) {
          setPlayerId(other.getPlayerId());
        }
        if (!other.getPlayerName().isEmpty()) {
          playerName_ = other.playerName_;
          onChanged();
        }
        if (!other.getPlayerPortrait().isEmpty()) {
          playerPortrait_ = other.playerPortrait_;
          onChanged();
        }
        if (other.getPlayerSex() != 0) {
          setPlayerSex(other.getPlayerSex());
        }
        if (other.getPlayerGoldCoin() != 0) {
          setPlayerGoldCoin(other.getPlayerGoldCoin());
        }
        if (other.getPlayerDiamond() != 0) {
          setPlayerDiamond(other.getPlayerDiamond());
        }
        if (other.getPlayerWinCup() != 0) {
          setPlayerWinCup(other.getPlayerWinCup());
        }
        if (other.getHistoryWinCup() != 0) {
          setHistoryWinCup(other.getHistoryWinCup());
        }
        if (other.getVipLv() != 0) {
          setVipLv(other.getVipLv());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UserInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UserInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int playerId_ ;
      /**
       * <pre>
       ** 用户ID 
       * </pre>
       *
       * <code>int32 playerId = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <pre>
       ** 用户ID 
       * </pre>
       *
       * <code>int32 playerId = 1;</code>
       */
      public Builder setPlayerId(int value) {
        
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 用户ID 
       * </pre>
       *
       * <code>int32 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        
        playerId_ = 0;
        onChanged();
        return this;
      }

      private Object playerName_ = "";
      /**
       * <pre>
       ** 用户昵称 
       * </pre>
       *
       * <code>string playerName = 2;</code>
       */
      public String getPlayerName() {
        Object ref = playerName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 用户昵称 
       * </pre>
       *
       * <code>string playerName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 用户昵称 
       * </pre>
       *
       * <code>string playerName = 2;</code>
       */
      public Builder setPlayerName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 用户昵称 
       * </pre>
       *
       * <code>string playerName = 2;</code>
       */
      public Builder clearPlayerName() {
        
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 用户昵称 
       * </pre>
       *
       * <code>string playerName = 2;</code>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerName_ = value;
        onChanged();
        return this;
      }

      private Object playerPortrait_ = "";
      /**
       * <pre>
       ** 用户头像 
       * </pre>
       *
       * <code>string playerPortrait = 3;</code>
       */
      public String getPlayerPortrait() {
        Object ref = playerPortrait_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          playerPortrait_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 用户头像 
       * </pre>
       *
       * <code>string playerPortrait = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerPortraitBytes() {
        Object ref = playerPortrait_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          playerPortrait_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 用户头像 
       * </pre>
       *
       * <code>string playerPortrait = 3;</code>
       */
      public Builder setPlayerPortrait(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerPortrait_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 用户头像 
       * </pre>
       *
       * <code>string playerPortrait = 3;</code>
       */
      public Builder clearPlayerPortrait() {
        
        playerPortrait_ = getDefaultInstance().getPlayerPortrait();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 用户头像 
       * </pre>
       *
       * <code>string playerPortrait = 3;</code>
       */
      public Builder setPlayerPortraitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerPortrait_ = value;
        onChanged();
        return this;
      }

      private int playerSex_ ;
      /**
       * <pre>
       ** 用户性别1男2女0未知 
       * </pre>
       *
       * <code>int32 playerSex = 4;</code>
       */
      public int getPlayerSex() {
        return playerSex_;
      }
      /**
       * <pre>
       ** 用户性别1男2女0未知 
       * </pre>
       *
       * <code>int32 playerSex = 4;</code>
       */
      public Builder setPlayerSex(int value) {
        
        playerSex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 用户性别1男2女0未知 
       * </pre>
       *
       * <code>int32 playerSex = 4;</code>
       */
      public Builder clearPlayerSex() {
        
        playerSex_ = 0;
        onChanged();
        return this;
      }

      private int playerGoldCoin_ ;
      /**
       * <pre>
       ** 当前金币数量 
       * </pre>
       *
       * <code>int32 playerGoldCoin = 5;</code>
       */
      public int getPlayerGoldCoin() {
        return playerGoldCoin_;
      }
      /**
       * <pre>
       ** 当前金币数量 
       * </pre>
       *
       * <code>int32 playerGoldCoin = 5;</code>
       */
      public Builder setPlayerGoldCoin(int value) {
        
        playerGoldCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前金币数量 
       * </pre>
       *
       * <code>int32 playerGoldCoin = 5;</code>
       */
      public Builder clearPlayerGoldCoin() {
        
        playerGoldCoin_ = 0;
        onChanged();
        return this;
      }

      private int playerDiamond_ ;
      /**
       * <pre>
       ** 当前钻石数量 
       * </pre>
       *
       * <code>int32 playerDiamond = 6;</code>
       */
      public int getPlayerDiamond() {
        return playerDiamond_;
      }
      /**
       * <pre>
       ** 当前钻石数量 
       * </pre>
       *
       * <code>int32 playerDiamond = 6;</code>
       */
      public Builder setPlayerDiamond(int value) {
        
        playerDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前钻石数量 
       * </pre>
       *
       * <code>int32 playerDiamond = 6;</code>
       */
      public Builder clearPlayerDiamond() {
        
        playerDiamond_ = 0;
        onChanged();
        return this;
      }

      private int playerWinCup_ ;
      /**
       * <pre>
       ** 当前红包数 
       * </pre>
       *
       * <code>int32 playerWinCup = 7;</code>
       */
      public int getPlayerWinCup() {
        return playerWinCup_;
      }
      /**
       * <pre>
       ** 当前红包数 
       * </pre>
       *
       * <code>int32 playerWinCup = 7;</code>
       */
      public Builder setPlayerWinCup(int value) {
        
        playerWinCup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前红包数 
       * </pre>
       *
       * <code>int32 playerWinCup = 7;</code>
       */
      public Builder clearPlayerWinCup() {
        
        playerWinCup_ = 0;
        onChanged();
        return this;
      }

      private int historyWinCup_ ;
      /**
       * <pre>
       ** 历史获得红包数 
       * </pre>
       *
       * <code>int32 historyWinCup = 8;</code>
       */
      public int getHistoryWinCup() {
        return historyWinCup_;
      }
      /**
       * <pre>
       ** 历史获得红包数 
       * </pre>
       *
       * <code>int32 historyWinCup = 8;</code>
       */
      public Builder setHistoryWinCup(int value) {
        
        historyWinCup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 历史获得红包数 
       * </pre>
       *
       * <code>int32 historyWinCup = 8;</code>
       */
      public Builder clearHistoryWinCup() {
        
        historyWinCup_ = 0;
        onChanged();
        return this;
      }

      private int vipLv_ ;
      /**
       * <pre>
       ** vip等级 
       * </pre>
       *
       * <code>int32 vipLv = 9;</code>
       */
      public int getVipLv() {
        return vipLv_;
      }
      /**
       * <pre>
       ** vip等级 
       * </pre>
       *
       * <code>int32 vipLv = 9;</code>
       */
      public Builder setVipLv(int value) {
        
        vipLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** vip等级 
       * </pre>
       *
       * <code>int32 vipLv = 9;</code>
       */
      public Builder clearVipLv() {
        
        vipLv_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.UserInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.UserInfo)
    private static final UserInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UserInfo();
    }

    public static UserInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserInfo>
        PARSER = new com.google.protobuf.AbstractParser<UserInfo>() {
      @Override
      public UserInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UserInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public UserInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RoomConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.RoomConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 模式id 
     * </pre>
     *
     * <code>int32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     ** 底分 
     * </pre>
     *
     * <code>int32 base_score = 2;</code>
     */
    int getBaseScore();

    /**
     * <pre>
     ** 场景类型：1金豆场 2钻石场 
     * </pre>
     *
     * <code>int32 scene_type = 3;</code>
     */
    int getSceneType();

    /**
     * <pre>
     ** 进场需要的最少金豆/钻石数 
     * </pre>
     *
     * <code>int32 min_limit = 4;</code>
     */
    int getMinLimit();

    /**
     * <pre>
     ** 进场需要的最大金豆/钻石数，-1则为没有上限 
     * </pre>
     *
     * <code>int32 max_limit = 5;</code>
     */
    int getMaxLimit();

    /**
     * <pre>
     ** 入场费，每局游戏开始之前收的费，最小单位1金豆 
     * </pre>
     *
     * <code>int32 table_fee = 6;</code>
     */
    int getTableFee();

    /**
     * <pre>
     ** 抽奖条件（场数） 
     * </pre>
     *
     * <code>int32 lottery_count = 7;</code>
     */
    int getLotteryCount();

    /**
     * <pre>
     ** 抽奖条件（0玩，1赢,-1无抽奖）
     * </pre>
     *
     * <code>int32 lotteryType = 8;</code>
     */
    int getLotteryType();

    /**
     * <pre>
     ** 最大倍数 
     * </pre>
     *
     * <code>int32 maxRatio = 9;</code>
     */
    int getMaxRatio();

    /**
     * <pre>
     ** 连续进入需要的最少金豆/钻石 
     * </pre>
     *
     * <code>int32 min_continue_limit = 10;</code>
     */
    int getMinContinueLimit();

    /**
     * <pre>
     ** 货币不足时，弹出复活礼包类型: 1补充复活(新) 2复活礼包(旧) 
     * </pre>
     *
     * <code>int32 revive_type = 11;</code>
     */
    int getReviveType();

    /**
     * <pre>
     ** 最高领取红包 
     * </pre>
     *
     * <code>int32 hb_max = 12;</code>
     */
    int getHbMax();
  }
  /**
   * <pre>
   ** 游戏模式 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.RoomConfig}
   */
  public  static final class RoomConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.RoomConfig)
      RoomConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RoomConfig.newBuilder() to construct.
    private RoomConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RoomConfig() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RoomConfig();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RoomConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 16: {

              baseScore_ = input.readInt32();
              break;
            }
            case 24: {

              sceneType_ = input.readInt32();
              break;
            }
            case 32: {

              minLimit_ = input.readInt32();
              break;
            }
            case 40: {

              maxLimit_ = input.readInt32();
              break;
            }
            case 48: {

              tableFee_ = input.readInt32();
              break;
            }
            case 56: {

              lotteryCount_ = input.readInt32();
              break;
            }
            case 64: {

              lotteryType_ = input.readInt32();
              break;
            }
            case 72: {

              maxRatio_ = input.readInt32();
              break;
            }
            case 80: {

              minContinueLimit_ = input.readInt32();
              break;
            }
            case 88: {

              reviveType_ = input.readInt32();
              break;
            }
            case 96: {

              hbMax_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_RoomConfig_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_RoomConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RoomConfig.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     ** 模式id 
     * </pre>
     *
     * <code>int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int BASE_SCORE_FIELD_NUMBER = 2;
    private int baseScore_;
    /**
     * <pre>
     ** 底分 
     * </pre>
     *
     * <code>int32 base_score = 2;</code>
     */
    public int getBaseScore() {
      return baseScore_;
    }

    public static final int SCENE_TYPE_FIELD_NUMBER = 3;
    private int sceneType_;
    /**
     * <pre>
     ** 场景类型：1金豆场 2钻石场 
     * </pre>
     *
     * <code>int32 scene_type = 3;</code>
     */
    public int getSceneType() {
      return sceneType_;
    }

    public static final int MIN_LIMIT_FIELD_NUMBER = 4;
    private int minLimit_;
    /**
     * <pre>
     ** 进场需要的最少金豆/钻石数 
     * </pre>
     *
     * <code>int32 min_limit = 4;</code>
     */
    public int getMinLimit() {
      return minLimit_;
    }

    public static final int MAX_LIMIT_FIELD_NUMBER = 5;
    private int maxLimit_;
    /**
     * <pre>
     ** 进场需要的最大金豆/钻石数，-1则为没有上限 
     * </pre>
     *
     * <code>int32 max_limit = 5;</code>
     */
    public int getMaxLimit() {
      return maxLimit_;
    }

    public static final int TABLE_FEE_FIELD_NUMBER = 6;
    private int tableFee_;
    /**
     * <pre>
     ** 入场费，每局游戏开始之前收的费，最小单位1金豆 
     * </pre>
     *
     * <code>int32 table_fee = 6;</code>
     */
    public int getTableFee() {
      return tableFee_;
    }

    public static final int LOTTERY_COUNT_FIELD_NUMBER = 7;
    private int lotteryCount_;
    /**
     * <pre>
     ** 抽奖条件（场数） 
     * </pre>
     *
     * <code>int32 lottery_count = 7;</code>
     */
    public int getLotteryCount() {
      return lotteryCount_;
    }

    public static final int LOTTERYTYPE_FIELD_NUMBER = 8;
    private int lotteryType_;
    /**
     * <pre>
     ** 抽奖条件（0玩，1赢,-1无抽奖）
     * </pre>
     *
     * <code>int32 lotteryType = 8;</code>
     */
    public int getLotteryType() {
      return lotteryType_;
    }

    public static final int MAXRATIO_FIELD_NUMBER = 9;
    private int maxRatio_;
    /**
     * <pre>
     ** 最大倍数 
     * </pre>
     *
     * <code>int32 maxRatio = 9;</code>
     */
    public int getMaxRatio() {
      return maxRatio_;
    }

    public static final int MIN_CONTINUE_LIMIT_FIELD_NUMBER = 10;
    private int minContinueLimit_;
    /**
     * <pre>
     ** 连续进入需要的最少金豆/钻石 
     * </pre>
     *
     * <code>int32 min_continue_limit = 10;</code>
     */
    public int getMinContinueLimit() {
      return minContinueLimit_;
    }

    public static final int REVIVE_TYPE_FIELD_NUMBER = 11;
    private int reviveType_;
    /**
     * <pre>
     ** 货币不足时，弹出复活礼包类型: 1补充复活(新) 2复活礼包(旧) 
     * </pre>
     *
     * <code>int32 revive_type = 11;</code>
     */
    public int getReviveType() {
      return reviveType_;
    }

    public static final int HB_MAX_FIELD_NUMBER = 12;
    private int hbMax_;
    /**
     * <pre>
     ** 最高领取红包 
     * </pre>
     *
     * <code>int32 hb_max = 12;</code>
     */
    public int getHbMax() {
      return hbMax_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (baseScore_ != 0) {
        output.writeInt32(2, baseScore_);
      }
      if (sceneType_ != 0) {
        output.writeInt32(3, sceneType_);
      }
      if (minLimit_ != 0) {
        output.writeInt32(4, minLimit_);
      }
      if (maxLimit_ != 0) {
        output.writeInt32(5, maxLimit_);
      }
      if (tableFee_ != 0) {
        output.writeInt32(6, tableFee_);
      }
      if (lotteryCount_ != 0) {
        output.writeInt32(7, lotteryCount_);
      }
      if (lotteryType_ != 0) {
        output.writeInt32(8, lotteryType_);
      }
      if (maxRatio_ != 0) {
        output.writeInt32(9, maxRatio_);
      }
      if (minContinueLimit_ != 0) {
        output.writeInt32(10, minContinueLimit_);
      }
      if (reviveType_ != 0) {
        output.writeInt32(11, reviveType_);
      }
      if (hbMax_ != 0) {
        output.writeInt32(12, hbMax_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (baseScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, baseScore_);
      }
      if (sceneType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sceneType_);
      }
      if (minLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, minLimit_);
      }
      if (maxLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxLimit_);
      }
      if (tableFee_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tableFee_);
      }
      if (lotteryCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, lotteryCount_);
      }
      if (lotteryType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, lotteryType_);
      }
      if (maxRatio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, maxRatio_);
      }
      if (minContinueLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, minContinueLimit_);
      }
      if (reviveType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, reviveType_);
      }
      if (hbMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, hbMax_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RoomConfig)) {
        return super.equals(obj);
      }
      RoomConfig other = (RoomConfig) obj;

      if (getId()
          != other.getId()) return false;
      if (getBaseScore()
          != other.getBaseScore()) return false;
      if (getSceneType()
          != other.getSceneType()) return false;
      if (getMinLimit()
          != other.getMinLimit()) return false;
      if (getMaxLimit()
          != other.getMaxLimit()) return false;
      if (getTableFee()
          != other.getTableFee()) return false;
      if (getLotteryCount()
          != other.getLotteryCount()) return false;
      if (getLotteryType()
          != other.getLotteryType()) return false;
      if (getMaxRatio()
          != other.getMaxRatio()) return false;
      if (getMinContinueLimit()
          != other.getMinContinueLimit()) return false;
      if (getReviveType()
          != other.getReviveType()) return false;
      if (getHbMax()
          != other.getHbMax()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + BASE_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getBaseScore();
      hash = (37 * hash) + SCENE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSceneType();
      hash = (37 * hash) + MIN_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getMinLimit();
      hash = (37 * hash) + MAX_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxLimit();
      hash = (37 * hash) + TABLE_FEE_FIELD_NUMBER;
      hash = (53 * hash) + getTableFee();
      hash = (37 * hash) + LOTTERY_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getLotteryCount();
      hash = (37 * hash) + LOTTERYTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getLotteryType();
      hash = (37 * hash) + MAXRATIO_FIELD_NUMBER;
      hash = (53 * hash) + getMaxRatio();
      hash = (37 * hash) + MIN_CONTINUE_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getMinContinueLimit();
      hash = (37 * hash) + REVIVE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getReviveType();
      hash = (37 * hash) + HB_MAX_FIELD_NUMBER;
      hash = (53 * hash) + getHbMax();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RoomConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RoomConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RoomConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RoomConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RoomConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RoomConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RoomConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 游戏模式 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.RoomConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.RoomConfig)
        RoomConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_RoomConfig_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_RoomConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RoomConfig.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.RoomConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        baseScore_ = 0;

        sceneType_ = 0;

        minLimit_ = 0;

        maxLimit_ = 0;

        tableFee_ = 0;

        lotteryCount_ = 0;

        lotteryType_ = 0;

        maxRatio_ = 0;

        minContinueLimit_ = 0;

        reviveType_ = 0;

        hbMax_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_RoomConfig_descriptor;
      }

      @Override
      public RoomConfig getDefaultInstanceForType() {
        return RoomConfig.getDefaultInstance();
      }

      @Override
      public RoomConfig build() {
        RoomConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RoomConfig buildPartial() {
        RoomConfig result = new RoomConfig(this);
        result.id_ = id_;
        result.baseScore_ = baseScore_;
        result.sceneType_ = sceneType_;
        result.minLimit_ = minLimit_;
        result.maxLimit_ = maxLimit_;
        result.tableFee_ = tableFee_;
        result.lotteryCount_ = lotteryCount_;
        result.lotteryType_ = lotteryType_;
        result.maxRatio_ = maxRatio_;
        result.minContinueLimit_ = minContinueLimit_;
        result.reviveType_ = reviveType_;
        result.hbMax_ = hbMax_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RoomConfig) {
          return mergeFrom((RoomConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RoomConfig other) {
        if (other == RoomConfig.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getBaseScore() != 0) {
          setBaseScore(other.getBaseScore());
        }
        if (other.getSceneType() != 0) {
          setSceneType(other.getSceneType());
        }
        if (other.getMinLimit() != 0) {
          setMinLimit(other.getMinLimit());
        }
        if (other.getMaxLimit() != 0) {
          setMaxLimit(other.getMaxLimit());
        }
        if (other.getTableFee() != 0) {
          setTableFee(other.getTableFee());
        }
        if (other.getLotteryCount() != 0) {
          setLotteryCount(other.getLotteryCount());
        }
        if (other.getLotteryType() != 0) {
          setLotteryType(other.getLotteryType());
        }
        if (other.getMaxRatio() != 0) {
          setMaxRatio(other.getMaxRatio());
        }
        if (other.getMinContinueLimit() != 0) {
          setMinContinueLimit(other.getMinContinueLimit());
        }
        if (other.getReviveType() != 0) {
          setReviveType(other.getReviveType());
        }
        if (other.getHbMax() != 0) {
          setHbMax(other.getHbMax());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RoomConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RoomConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       ** 模式id 
       * </pre>
       *
       * <code>int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       ** 模式id 
       * </pre>
       *
       * <code>int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 模式id 
       * </pre>
       *
       * <code>int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int baseScore_ ;
      /**
       * <pre>
       ** 底分 
       * </pre>
       *
       * <code>int32 base_score = 2;</code>
       */
      public int getBaseScore() {
        return baseScore_;
      }
      /**
       * <pre>
       ** 底分 
       * </pre>
       *
       * <code>int32 base_score = 2;</code>
       */
      public Builder setBaseScore(int value) {
        
        baseScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 底分 
       * </pre>
       *
       * <code>int32 base_score = 2;</code>
       */
      public Builder clearBaseScore() {
        
        baseScore_ = 0;
        onChanged();
        return this;
      }

      private int sceneType_ ;
      /**
       * <pre>
       ** 场景类型：1金豆场 2钻石场 
       * </pre>
       *
       * <code>int32 scene_type = 3;</code>
       */
      public int getSceneType() {
        return sceneType_;
      }
      /**
       * <pre>
       ** 场景类型：1金豆场 2钻石场 
       * </pre>
       *
       * <code>int32 scene_type = 3;</code>
       */
      public Builder setSceneType(int value) {
        
        sceneType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 场景类型：1金豆场 2钻石场 
       * </pre>
       *
       * <code>int32 scene_type = 3;</code>
       */
      public Builder clearSceneType() {
        
        sceneType_ = 0;
        onChanged();
        return this;
      }

      private int minLimit_ ;
      /**
       * <pre>
       ** 进场需要的最少金豆/钻石数 
       * </pre>
       *
       * <code>int32 min_limit = 4;</code>
       */
      public int getMinLimit() {
        return minLimit_;
      }
      /**
       * <pre>
       ** 进场需要的最少金豆/钻石数 
       * </pre>
       *
       * <code>int32 min_limit = 4;</code>
       */
      public Builder setMinLimit(int value) {
        
        minLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 进场需要的最少金豆/钻石数 
       * </pre>
       *
       * <code>int32 min_limit = 4;</code>
       */
      public Builder clearMinLimit() {
        
        minLimit_ = 0;
        onChanged();
        return this;
      }

      private int maxLimit_ ;
      /**
       * <pre>
       ** 进场需要的最大金豆/钻石数，-1则为没有上限 
       * </pre>
       *
       * <code>int32 max_limit = 5;</code>
       */
      public int getMaxLimit() {
        return maxLimit_;
      }
      /**
       * <pre>
       ** 进场需要的最大金豆/钻石数，-1则为没有上限 
       * </pre>
       *
       * <code>int32 max_limit = 5;</code>
       */
      public Builder setMaxLimit(int value) {
        
        maxLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 进场需要的最大金豆/钻石数，-1则为没有上限 
       * </pre>
       *
       * <code>int32 max_limit = 5;</code>
       */
      public Builder clearMaxLimit() {
        
        maxLimit_ = 0;
        onChanged();
        return this;
      }

      private int tableFee_ ;
      /**
       * <pre>
       ** 入场费，每局游戏开始之前收的费，最小单位1金豆 
       * </pre>
       *
       * <code>int32 table_fee = 6;</code>
       */
      public int getTableFee() {
        return tableFee_;
      }
      /**
       * <pre>
       ** 入场费，每局游戏开始之前收的费，最小单位1金豆 
       * </pre>
       *
       * <code>int32 table_fee = 6;</code>
       */
      public Builder setTableFee(int value) {
        
        tableFee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 入场费，每局游戏开始之前收的费，最小单位1金豆 
       * </pre>
       *
       * <code>int32 table_fee = 6;</code>
       */
      public Builder clearTableFee() {
        
        tableFee_ = 0;
        onChanged();
        return this;
      }

      private int lotteryCount_ ;
      /**
       * <pre>
       ** 抽奖条件（场数） 
       * </pre>
       *
       * <code>int32 lottery_count = 7;</code>
       */
      public int getLotteryCount() {
        return lotteryCount_;
      }
      /**
       * <pre>
       ** 抽奖条件（场数） 
       * </pre>
       *
       * <code>int32 lottery_count = 7;</code>
       */
      public Builder setLotteryCount(int value) {
        
        lotteryCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 抽奖条件（场数） 
       * </pre>
       *
       * <code>int32 lottery_count = 7;</code>
       */
      public Builder clearLotteryCount() {
        
        lotteryCount_ = 0;
        onChanged();
        return this;
      }

      private int lotteryType_ ;
      /**
       * <pre>
       ** 抽奖条件（0玩，1赢,-1无抽奖）
       * </pre>
       *
       * <code>int32 lotteryType = 8;</code>
       */
      public int getLotteryType() {
        return lotteryType_;
      }
      /**
       * <pre>
       ** 抽奖条件（0玩，1赢,-1无抽奖）
       * </pre>
       *
       * <code>int32 lotteryType = 8;</code>
       */
      public Builder setLotteryType(int value) {
        
        lotteryType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 抽奖条件（0玩，1赢,-1无抽奖）
       * </pre>
       *
       * <code>int32 lotteryType = 8;</code>
       */
      public Builder clearLotteryType() {
        
        lotteryType_ = 0;
        onChanged();
        return this;
      }

      private int maxRatio_ ;
      /**
       * <pre>
       ** 最大倍数 
       * </pre>
       *
       * <code>int32 maxRatio = 9;</code>
       */
      public int getMaxRatio() {
        return maxRatio_;
      }
      /**
       * <pre>
       ** 最大倍数 
       * </pre>
       *
       * <code>int32 maxRatio = 9;</code>
       */
      public Builder setMaxRatio(int value) {
        
        maxRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 最大倍数 
       * </pre>
       *
       * <code>int32 maxRatio = 9;</code>
       */
      public Builder clearMaxRatio() {
        
        maxRatio_ = 0;
        onChanged();
        return this;
      }

      private int minContinueLimit_ ;
      /**
       * <pre>
       ** 连续进入需要的最少金豆/钻石 
       * </pre>
       *
       * <code>int32 min_continue_limit = 10;</code>
       */
      public int getMinContinueLimit() {
        return minContinueLimit_;
      }
      /**
       * <pre>
       ** 连续进入需要的最少金豆/钻石 
       * </pre>
       *
       * <code>int32 min_continue_limit = 10;</code>
       */
      public Builder setMinContinueLimit(int value) {
        
        minContinueLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 连续进入需要的最少金豆/钻石 
       * </pre>
       *
       * <code>int32 min_continue_limit = 10;</code>
       */
      public Builder clearMinContinueLimit() {
        
        minContinueLimit_ = 0;
        onChanged();
        return this;
      }

      private int reviveType_ ;
      /**
       * <pre>
       ** 货币不足时，弹出复活礼包类型: 1补充复活(新) 2复活礼包(旧) 
       * </pre>
       *
       * <code>int32 revive_type = 11;</code>
       */
      public int getReviveType() {
        return reviveType_;
      }
      /**
       * <pre>
       ** 货币不足时，弹出复活礼包类型: 1补充复活(新) 2复活礼包(旧) 
       * </pre>
       *
       * <code>int32 revive_type = 11;</code>
       */
      public Builder setReviveType(int value) {
        
        reviveType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 货币不足时，弹出复活礼包类型: 1补充复活(新) 2复活礼包(旧) 
       * </pre>
       *
       * <code>int32 revive_type = 11;</code>
       */
      public Builder clearReviveType() {
        
        reviveType_ = 0;
        onChanged();
        return this;
      }

      private int hbMax_ ;
      /**
       * <pre>
       ** 最高领取红包 
       * </pre>
       *
       * <code>int32 hb_max = 12;</code>
       */
      public int getHbMax() {
        return hbMax_;
      }
      /**
       * <pre>
       ** 最高领取红包 
       * </pre>
       *
       * <code>int32 hb_max = 12;</code>
       */
      public Builder setHbMax(int value) {
        
        hbMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 最高领取红包 
       * </pre>
       *
       * <code>int32 hb_max = 12;</code>
       */
      public Builder clearHbMax() {
        
        hbMax_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.RoomConfig)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.RoomConfig)
    private static final RoomConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RoomConfig();
    }

    public static RoomConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoomConfig>
        PARSER = new com.google.protobuf.AbstractParser<RoomConfig>() {
      @Override
      public RoomConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RoomConfig> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RoomConfig> getParserForType() {
      return PARSER;
    }

    @Override
    public RoomConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SeatInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.SeatInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 玩家基础信息 
     * </pre>
     *
     * <code>.pb_landlord.UserInfo userinfo = 1;</code>
     */
    boolean hasUserinfo();
    /**
     * <pre>
     ** 玩家基础信息 
     * </pre>
     *
     * <code>.pb_landlord.UserInfo userinfo = 1;</code>
     */
    UserInfo getUserinfo();
    /**
     * <pre>
     ** 玩家基础信息 
     * </pre>
     *
     * <code>.pb_landlord.UserInfo userinfo = 1;</code>
     */
    UserInfoOrBuilder getUserinfoOrBuilder();

    /**
     * <pre>
     ** 玩家座位号 
     * </pre>
     *
     * <code>int32 seatID = 2;</code>
     */
    int getSeatID();
  }
  /**
   * <pre>
   ** 玩家座位信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.SeatInfo}
   */
  public  static final class SeatInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.SeatInfo)
      SeatInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SeatInfo.newBuilder() to construct.
    private SeatInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SeatInfo() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SeatInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SeatInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              UserInfo.Builder subBuilder = null;
              if (userinfo_ != null) {
                subBuilder = userinfo_.toBuilder();
              }
              userinfo_ = input.readMessage(UserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userinfo_);
                userinfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              seatID_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_SeatInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_SeatInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SeatInfo.class, Builder.class);
    }

    public static final int USERINFO_FIELD_NUMBER = 1;
    private UserInfo userinfo_;
    /**
     * <pre>
     ** 玩家基础信息 
     * </pre>
     *
     * <code>.pb_landlord.UserInfo userinfo = 1;</code>
     */
    public boolean hasUserinfo() {
      return userinfo_ != null;
    }
    /**
     * <pre>
     ** 玩家基础信息 
     * </pre>
     *
     * <code>.pb_landlord.UserInfo userinfo = 1;</code>
     */
    public UserInfo getUserinfo() {
      return userinfo_ == null ? UserInfo.getDefaultInstance() : userinfo_;
    }
    /**
     * <pre>
     ** 玩家基础信息 
     * </pre>
     *
     * <code>.pb_landlord.UserInfo userinfo = 1;</code>
     */
    public UserInfoOrBuilder getUserinfoOrBuilder() {
      return getUserinfo();
    }

    public static final int SEATID_FIELD_NUMBER = 2;
    private int seatID_;
    /**
     * <pre>
     ** 玩家座位号 
     * </pre>
     *
     * <code>int32 seatID = 2;</code>
     */
    public int getSeatID() {
      return seatID_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (userinfo_ != null) {
        output.writeMessage(1, getUserinfo());
      }
      if (seatID_ != 0) {
        output.writeInt32(2, seatID_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (userinfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getUserinfo());
      }
      if (seatID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatID_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SeatInfo)) {
        return super.equals(obj);
      }
      SeatInfo other = (SeatInfo) obj;

      if (hasUserinfo() != other.hasUserinfo()) return false;
      if (hasUserinfo()) {
        if (!getUserinfo()
            .equals(other.getUserinfo())) return false;
      }
      if (getSeatID()
          != other.getSeatID()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUserinfo()) {
        hash = (37 * hash) + USERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getUserinfo().hashCode();
      }
      hash = (37 * hash) + SEATID_FIELD_NUMBER;
      hash = (53 * hash) + getSeatID();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SeatInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SeatInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SeatInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SeatInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SeatInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SeatInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SeatInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SeatInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SeatInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SeatInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SeatInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SeatInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SeatInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 玩家座位信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.SeatInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.SeatInfo)
        SeatInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_SeatInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_SeatInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SeatInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.SeatInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (userinfoBuilder_ == null) {
          userinfo_ = null;
        } else {
          userinfo_ = null;
          userinfoBuilder_ = null;
        }
        seatID_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_SeatInfo_descriptor;
      }

      @Override
      public SeatInfo getDefaultInstanceForType() {
        return SeatInfo.getDefaultInstance();
      }

      @Override
      public SeatInfo build() {
        SeatInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SeatInfo buildPartial() {
        SeatInfo result = new SeatInfo(this);
        if (userinfoBuilder_ == null) {
          result.userinfo_ = userinfo_;
        } else {
          result.userinfo_ = userinfoBuilder_.build();
        }
        result.seatID_ = seatID_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SeatInfo) {
          return mergeFrom((SeatInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SeatInfo other) {
        if (other == SeatInfo.getDefaultInstance()) return this;
        if (other.hasUserinfo()) {
          mergeUserinfo(other.getUserinfo());
        }
        if (other.getSeatID() != 0) {
          setSeatID(other.getSeatID());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SeatInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SeatInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private UserInfo userinfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          UserInfo, UserInfo.Builder, UserInfoOrBuilder> userinfoBuilder_;
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      public boolean hasUserinfo() {
        return userinfoBuilder_ != null || userinfo_ != null;
      }
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      public UserInfo getUserinfo() {
        if (userinfoBuilder_ == null) {
          return userinfo_ == null ? UserInfo.getDefaultInstance() : userinfo_;
        } else {
          return userinfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      public Builder setUserinfo(UserInfo value) {
        if (userinfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userinfo_ = value;
          onChanged();
        } else {
          userinfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      public Builder setUserinfo(
          UserInfo.Builder builderForValue) {
        if (userinfoBuilder_ == null) {
          userinfo_ = builderForValue.build();
          onChanged();
        } else {
          userinfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      public Builder mergeUserinfo(UserInfo value) {
        if (userinfoBuilder_ == null) {
          if (userinfo_ != null) {
            userinfo_ =
              UserInfo.newBuilder(userinfo_).mergeFrom(value).buildPartial();
          } else {
            userinfo_ = value;
          }
          onChanged();
        } else {
          userinfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      public Builder clearUserinfo() {
        if (userinfoBuilder_ == null) {
          userinfo_ = null;
          onChanged();
        } else {
          userinfo_ = null;
          userinfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      public UserInfo.Builder getUserinfoBuilder() {
        
        onChanged();
        return getUserinfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      public UserInfoOrBuilder getUserinfoOrBuilder() {
        if (userinfoBuilder_ != null) {
          return userinfoBuilder_.getMessageOrBuilder();
        } else {
          return userinfo_ == null ?
              UserInfo.getDefaultInstance() : userinfo_;
        }
      }
      /**
       * <pre>
       ** 玩家基础信息 
       * </pre>
       *
       * <code>.pb_landlord.UserInfo userinfo = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          UserInfo, UserInfo.Builder, UserInfoOrBuilder>
          getUserinfoFieldBuilder() {
        if (userinfoBuilder_ == null) {
          userinfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              UserInfo, UserInfo.Builder, UserInfoOrBuilder>(
                  getUserinfo(),
                  getParentForChildren(),
                  isClean());
          userinfo_ = null;
        }
        return userinfoBuilder_;
      }

      private int seatID_ ;
      /**
       * <pre>
       ** 玩家座位号 
       * </pre>
       *
       * <code>int32 seatID = 2;</code>
       */
      public int getSeatID() {
        return seatID_;
      }
      /**
       * <pre>
       ** 玩家座位号 
       * </pre>
       *
       * <code>int32 seatID = 2;</code>
       */
      public Builder setSeatID(int value) {
        
        seatID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家座位号 
       * </pre>
       *
       * <code>int32 seatID = 2;</code>
       */
      public Builder clearSeatID() {
        
        seatID_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.SeatInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.SeatInfo)
    private static final SeatInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SeatInfo();
    }

    public static SeatInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SeatInfo>
        PARSER = new com.google.protobuf.AbstractParser<SeatInfo>() {
      @Override
      public SeatInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SeatInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SeatInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SeatInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public SeatInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecoverPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.RecoverPlayerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 玩家座位号 
     * </pre>
     *
     * <code>int32 seatID = 1;</code>
     */
    int getSeatID();

    /**
     * <pre>
     ** 剩余牌的张数 
     * </pre>
     *
     * <code>int32 remainCards = 2;</code>
     */
    int getRemainCards();

    /**
     * <pre>
     ** 面前的牌 
     * </pre>
     *
     * <code>repeated int32 lastCards = 3;</code>
     */
    java.util.List<Integer> getLastCardsList();
    /**
     * <pre>
     ** 面前的牌 
     * </pre>
     *
     * <code>repeated int32 lastCards = 3;</code>
     */
    int getLastCardsCount();
    /**
     * <pre>
     ** 面前的牌 
     * </pre>
     *
     * <code>repeated int32 lastCards = 3;</code>
     */
    int getLastCards(int index);

    /**
     * <pre>
     ** 是否是托管 
     * </pre>
     *
     * <code>bool isAuto = 4;</code>
     */
    boolean getIsAuto();

    /**
     * <pre>
     ** 是否出牌，0未到出牌，1是出了牌，若3未空，则是不要 
     * </pre>
     *
     * <code>bool isPlay = 5;</code>
     */
    boolean getIsPlay();

    /**
     * <pre>
     ** 叫地主阶段使用，叫地主的分0不叫，1-3分，-1为还没轮到叫分 
     * </pre>
     *
     * <code>int32 catchPoint = 6;</code>
     */
    int getCatchPoint();
  }
  /**
   * <pre>
   ** 玩家恢复信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.RecoverPlayerInfo}
   */
  public  static final class RecoverPlayerInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.RecoverPlayerInfo)
      RecoverPlayerInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecoverPlayerInfo.newBuilder() to construct.
    private RecoverPlayerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecoverPlayerInfo() {
      lastCards_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RecoverPlayerInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecoverPlayerInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seatID_ = input.readInt32();
              break;
            }
            case 16: {

              remainCards_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                lastCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              lastCards_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                lastCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                lastCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {

              isAuto_ = input.readBool();
              break;
            }
            case 40: {

              isPlay_ = input.readBool();
              break;
            }
            case 48: {

              catchPoint_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          lastCards_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_RecoverPlayerInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_RecoverPlayerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RecoverPlayerInfo.class, Builder.class);
    }

    public static final int SEATID_FIELD_NUMBER = 1;
    private int seatID_;
    /**
     * <pre>
     ** 玩家座位号 
     * </pre>
     *
     * <code>int32 seatID = 1;</code>
     */
    public int getSeatID() {
      return seatID_;
    }

    public static final int REMAINCARDS_FIELD_NUMBER = 2;
    private int remainCards_;
    /**
     * <pre>
     ** 剩余牌的张数 
     * </pre>
     *
     * <code>int32 remainCards = 2;</code>
     */
    public int getRemainCards() {
      return remainCards_;
    }

    public static final int LASTCARDS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList lastCards_;
    /**
     * <pre>
     ** 面前的牌 
     * </pre>
     *
     * <code>repeated int32 lastCards = 3;</code>
     */
    public java.util.List<Integer>
        getLastCardsList() {
      return lastCards_;
    }
    /**
     * <pre>
     ** 面前的牌 
     * </pre>
     *
     * <code>repeated int32 lastCards = 3;</code>
     */
    public int getLastCardsCount() {
      return lastCards_.size();
    }
    /**
     * <pre>
     ** 面前的牌 
     * </pre>
     *
     * <code>repeated int32 lastCards = 3;</code>
     */
    public int getLastCards(int index) {
      return lastCards_.getInt(index);
    }
    private int lastCardsMemoizedSerializedSize = -1;

    public static final int ISAUTO_FIELD_NUMBER = 4;
    private boolean isAuto_;
    /**
     * <pre>
     ** 是否是托管 
     * </pre>
     *
     * <code>bool isAuto = 4;</code>
     */
    public boolean getIsAuto() {
      return isAuto_;
    }

    public static final int ISPLAY_FIELD_NUMBER = 5;
    private boolean isPlay_;
    /**
     * <pre>
     ** 是否出牌，0未到出牌，1是出了牌，若3未空，则是不要 
     * </pre>
     *
     * <code>bool isPlay = 5;</code>
     */
    public boolean getIsPlay() {
      return isPlay_;
    }

    public static final int CATCHPOINT_FIELD_NUMBER = 6;
    private int catchPoint_;
    /**
     * <pre>
     ** 叫地主阶段使用，叫地主的分0不叫，1-3分，-1为还没轮到叫分 
     * </pre>
     *
     * <code>int32 catchPoint = 6;</code>
     */
    public int getCatchPoint() {
      return catchPoint_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (seatID_ != 0) {
        output.writeInt32(1, seatID_);
      }
      if (remainCards_ != 0) {
        output.writeInt32(2, remainCards_);
      }
      if (getLastCardsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(lastCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < lastCards_.size(); i++) {
        output.writeInt32NoTag(lastCards_.getInt(i));
      }
      if (isAuto_ != false) {
        output.writeBool(4, isAuto_);
      }
      if (isPlay_ != false) {
        output.writeBool(5, isPlay_);
      }
      if (catchPoint_ != 0) {
        output.writeInt32(6, catchPoint_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seatID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatID_);
      }
      if (remainCards_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, remainCards_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lastCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(lastCards_.getInt(i));
        }
        size += dataSize;
        if (!getLastCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lastCardsMemoizedSerializedSize = dataSize;
      }
      if (isAuto_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isAuto_);
      }
      if (isPlay_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isPlay_);
      }
      if (catchPoint_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, catchPoint_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RecoverPlayerInfo)) {
        return super.equals(obj);
      }
      RecoverPlayerInfo other = (RecoverPlayerInfo) obj;

      if (getSeatID()
          != other.getSeatID()) return false;
      if (getRemainCards()
          != other.getRemainCards()) return false;
      if (!getLastCardsList()
          .equals(other.getLastCardsList())) return false;
      if (getIsAuto()
          != other.getIsAuto()) return false;
      if (getIsPlay()
          != other.getIsPlay()) return false;
      if (getCatchPoint()
          != other.getCatchPoint()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEATID_FIELD_NUMBER;
      hash = (53 * hash) + getSeatID();
      hash = (37 * hash) + REMAINCARDS_FIELD_NUMBER;
      hash = (53 * hash) + getRemainCards();
      if (getLastCardsCount() > 0) {
        hash = (37 * hash) + LASTCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getLastCardsList().hashCode();
      }
      hash = (37 * hash) + ISAUTO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsAuto());
      hash = (37 * hash) + ISPLAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsPlay());
      hash = (37 * hash) + CATCHPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getCatchPoint();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RecoverPlayerInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RecoverPlayerInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RecoverPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RecoverPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RecoverPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RecoverPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RecoverPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RecoverPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RecoverPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RecoverPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RecoverPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RecoverPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RecoverPlayerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 玩家恢复信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.RecoverPlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.RecoverPlayerInfo)
        RecoverPlayerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_RecoverPlayerInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_RecoverPlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RecoverPlayerInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.RecoverPlayerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        seatID_ = 0;

        remainCards_ = 0;

        lastCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        isAuto_ = false;

        isPlay_ = false;

        catchPoint_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_RecoverPlayerInfo_descriptor;
      }

      @Override
      public RecoverPlayerInfo getDefaultInstanceForType() {
        return RecoverPlayerInfo.getDefaultInstance();
      }

      @Override
      public RecoverPlayerInfo build() {
        RecoverPlayerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RecoverPlayerInfo buildPartial() {
        RecoverPlayerInfo result = new RecoverPlayerInfo(this);
        int from_bitField0_ = bitField0_;
        result.seatID_ = seatID_;
        result.remainCards_ = remainCards_;
        if (((bitField0_ & 0x00000001) != 0)) {
          lastCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.lastCards_ = lastCards_;
        result.isAuto_ = isAuto_;
        result.isPlay_ = isPlay_;
        result.catchPoint_ = catchPoint_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RecoverPlayerInfo) {
          return mergeFrom((RecoverPlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RecoverPlayerInfo other) {
        if (other == RecoverPlayerInfo.getDefaultInstance()) return this;
        if (other.getSeatID() != 0) {
          setSeatID(other.getSeatID());
        }
        if (other.getRemainCards() != 0) {
          setRemainCards(other.getRemainCards());
        }
        if (!other.lastCards_.isEmpty()) {
          if (lastCards_.isEmpty()) {
            lastCards_ = other.lastCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLastCardsIsMutable();
            lastCards_.addAll(other.lastCards_);
          }
          onChanged();
        }
        if (other.getIsAuto() != false) {
          setIsAuto(other.getIsAuto());
        }
        if (other.getIsPlay() != false) {
          setIsPlay(other.getIsPlay());
        }
        if (other.getCatchPoint() != 0) {
          setCatchPoint(other.getCatchPoint());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RecoverPlayerInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RecoverPlayerInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seatID_ ;
      /**
       * <pre>
       ** 玩家座位号 
       * </pre>
       *
       * <code>int32 seatID = 1;</code>
       */
      public int getSeatID() {
        return seatID_;
      }
      /**
       * <pre>
       ** 玩家座位号 
       * </pre>
       *
       * <code>int32 seatID = 1;</code>
       */
      public Builder setSeatID(int value) {
        
        seatID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家座位号 
       * </pre>
       *
       * <code>int32 seatID = 1;</code>
       */
      public Builder clearSeatID() {
        
        seatID_ = 0;
        onChanged();
        return this;
      }

      private int remainCards_ ;
      /**
       * <pre>
       ** 剩余牌的张数 
       * </pre>
       *
       * <code>int32 remainCards = 2;</code>
       */
      public int getRemainCards() {
        return remainCards_;
      }
      /**
       * <pre>
       ** 剩余牌的张数 
       * </pre>
       *
       * <code>int32 remainCards = 2;</code>
       */
      public Builder setRemainCards(int value) {
        
        remainCards_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 剩余牌的张数 
       * </pre>
       *
       * <code>int32 remainCards = 2;</code>
       */
      public Builder clearRemainCards() {
        
        remainCards_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList lastCards_ = emptyIntList();
      private void ensureLastCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          lastCards_ = mutableCopy(lastCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 面前的牌 
       * </pre>
       *
       * <code>repeated int32 lastCards = 3;</code>
       */
      public java.util.List<Integer>
          getLastCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(lastCards_) : lastCards_;
      }
      /**
       * <pre>
       ** 面前的牌 
       * </pre>
       *
       * <code>repeated int32 lastCards = 3;</code>
       */
      public int getLastCardsCount() {
        return lastCards_.size();
      }
      /**
       * <pre>
       ** 面前的牌 
       * </pre>
       *
       * <code>repeated int32 lastCards = 3;</code>
       */
      public int getLastCards(int index) {
        return lastCards_.getInt(index);
      }
      /**
       * <pre>
       ** 面前的牌 
       * </pre>
       *
       * <code>repeated int32 lastCards = 3;</code>
       */
      public Builder setLastCards(
          int index, int value) {
        ensureLastCardsIsMutable();
        lastCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 面前的牌 
       * </pre>
       *
       * <code>repeated int32 lastCards = 3;</code>
       */
      public Builder addLastCards(int value) {
        ensureLastCardsIsMutable();
        lastCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 面前的牌 
       * </pre>
       *
       * <code>repeated int32 lastCards = 3;</code>
       */
      public Builder addAllLastCards(
          Iterable<? extends Integer> values) {
        ensureLastCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lastCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 面前的牌 
       * </pre>
       *
       * <code>repeated int32 lastCards = 3;</code>
       */
      public Builder clearLastCards() {
        lastCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private boolean isAuto_ ;
      /**
       * <pre>
       ** 是否是托管 
       * </pre>
       *
       * <code>bool isAuto = 4;</code>
       */
      public boolean getIsAuto() {
        return isAuto_;
      }
      /**
       * <pre>
       ** 是否是托管 
       * </pre>
       *
       * <code>bool isAuto = 4;</code>
       */
      public Builder setIsAuto(boolean value) {
        
        isAuto_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否是托管 
       * </pre>
       *
       * <code>bool isAuto = 4;</code>
       */
      public Builder clearIsAuto() {
        
        isAuto_ = false;
        onChanged();
        return this;
      }

      private boolean isPlay_ ;
      /**
       * <pre>
       ** 是否出牌，0未到出牌，1是出了牌，若3未空，则是不要 
       * </pre>
       *
       * <code>bool isPlay = 5;</code>
       */
      public boolean getIsPlay() {
        return isPlay_;
      }
      /**
       * <pre>
       ** 是否出牌，0未到出牌，1是出了牌，若3未空，则是不要 
       * </pre>
       *
       * <code>bool isPlay = 5;</code>
       */
      public Builder setIsPlay(boolean value) {
        
        isPlay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否出牌，0未到出牌，1是出了牌，若3未空，则是不要 
       * </pre>
       *
       * <code>bool isPlay = 5;</code>
       */
      public Builder clearIsPlay() {
        
        isPlay_ = false;
        onChanged();
        return this;
      }

      private int catchPoint_ ;
      /**
       * <pre>
       ** 叫地主阶段使用，叫地主的分0不叫，1-3分，-1为还没轮到叫分 
       * </pre>
       *
       * <code>int32 catchPoint = 6;</code>
       */
      public int getCatchPoint() {
        return catchPoint_;
      }
      /**
       * <pre>
       ** 叫地主阶段使用，叫地主的分0不叫，1-3分，-1为还没轮到叫分 
       * </pre>
       *
       * <code>int32 catchPoint = 6;</code>
       */
      public Builder setCatchPoint(int value) {
        
        catchPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 叫地主阶段使用，叫地主的分0不叫，1-3分，-1为还没轮到叫分 
       * </pre>
       *
       * <code>int32 catchPoint = 6;</code>
       */
      public Builder clearCatchPoint() {
        
        catchPoint_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.RecoverPlayerInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.RecoverPlayerInfo)
    private static final RecoverPlayerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RecoverPlayerInfo();
    }

    public static RecoverPlayerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecoverPlayerInfo>
        PARSER = new com.google.protobuf.AbstractParser<RecoverPlayerInfo>() {
      @Override
      public RecoverPlayerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecoverPlayerInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecoverPlayerInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RecoverPlayerInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public RecoverPlayerInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerSettleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.PlayerSettle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 座位号 
     * </pre>
     *
     * <code>int32 seatId = 1;</code>
     */
    int getSeatId();

    /**
     * <pre>
     ** 玩家本局得分变化 
     * </pre>
     *
     * <code>int32 scoreChange = 2;</code>
     */
    int getScoreChange();

    /**
     * <pre>
     ** 玩家得分变化类型，1金豆，2钻石 
     * </pre>
     *
     * <code>int32 scoreType = 3;</code>
     */
    int getScoreType();

    /**
     * <pre>
     ** 玩家总金豆数 
     * </pre>
     *
     * <code>int32 allChip = 4;</code>
     */
    int getAllChip();

    /**
     * <pre>
     ** 玩家总钻石数 
     * </pre>
     *
     * <code>int32 allDiamond = 5;</code>
     */
    int getAllDiamond();

    /**
     * <pre>
     ** 玩家剩余手牌 
     * </pre>
     *
     * <code>repeated int32 remainCards = 6;</code>
     */
    java.util.List<Integer> getRemainCardsList();
    /**
     * <pre>
     ** 玩家剩余手牌 
     * </pre>
     *
     * <code>repeated int32 remainCards = 6;</code>
     */
    int getRemainCardsCount();
    /**
     * <pre>
     ** 玩家剩余手牌 
     * </pre>
     *
     * <code>repeated int32 remainCards = 6;</code>
     */
    int getRemainCards(int index);

    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    java.util.List<PlayerState> getStatesList();
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    int getStatesCount();
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    PlayerState getStates(int index);
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    java.util.List<Integer>
    getStatesValueList();
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    int getStatesValue(int index);
  }
  /**
   * <pre>
   ** 结算信息中具体每个玩家的信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.PlayerSettle}
   */
  public  static final class PlayerSettle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.PlayerSettle)
      PlayerSettleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlayerSettle.newBuilder() to construct.
    private PlayerSettle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerSettle() {
      remainCards_ = emptyIntList();
      states_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlayerSettle();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerSettle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seatId_ = input.readInt32();
              break;
            }
            case 16: {

              scoreChange_ = input.readInt32();
              break;
            }
            case 24: {

              scoreType_ = input.readInt32();
              break;
            }
            case 32: {

              allChip_ = input.readInt32();
              break;
            }
            case 40: {

              allDiamond_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                remainCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              remainCards_.addInt(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                remainCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                remainCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                states_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              states_.add(rawValue);
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  states_ = new java.util.ArrayList<Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                states_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          remainCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          states_ = java.util.Collections.unmodifiableList(states_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_PlayerSettle_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_PlayerSettle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlayerSettle.class, Builder.class);
    }

    public static final int SEATID_FIELD_NUMBER = 1;
    private int seatId_;
    /**
     * <pre>
     ** 座位号 
     * </pre>
     *
     * <code>int32 seatId = 1;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    public static final int SCORECHANGE_FIELD_NUMBER = 2;
    private int scoreChange_;
    /**
     * <pre>
     ** 玩家本局得分变化 
     * </pre>
     *
     * <code>int32 scoreChange = 2;</code>
     */
    public int getScoreChange() {
      return scoreChange_;
    }

    public static final int SCORETYPE_FIELD_NUMBER = 3;
    private int scoreType_;
    /**
     * <pre>
     ** 玩家得分变化类型，1金豆，2钻石 
     * </pre>
     *
     * <code>int32 scoreType = 3;</code>
     */
    public int getScoreType() {
      return scoreType_;
    }

    public static final int ALLCHIP_FIELD_NUMBER = 4;
    private int allChip_;
    /**
     * <pre>
     ** 玩家总金豆数 
     * </pre>
     *
     * <code>int32 allChip = 4;</code>
     */
    public int getAllChip() {
      return allChip_;
    }

    public static final int ALLDIAMOND_FIELD_NUMBER = 5;
    private int allDiamond_;
    /**
     * <pre>
     ** 玩家总钻石数 
     * </pre>
     *
     * <code>int32 allDiamond = 5;</code>
     */
    public int getAllDiamond() {
      return allDiamond_;
    }

    public static final int REMAINCARDS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.IntList remainCards_;
    /**
     * <pre>
     ** 玩家剩余手牌 
     * </pre>
     *
     * <code>repeated int32 remainCards = 6;</code>
     */
    public java.util.List<Integer>
        getRemainCardsList() {
      return remainCards_;
    }
    /**
     * <pre>
     ** 玩家剩余手牌 
     * </pre>
     *
     * <code>repeated int32 remainCards = 6;</code>
     */
    public int getRemainCardsCount() {
      return remainCards_.size();
    }
    /**
     * <pre>
     ** 玩家剩余手牌 
     * </pre>
     *
     * <code>repeated int32 remainCards = 6;</code>
     */
    public int getRemainCards(int index) {
      return remainCards_.getInt(index);
    }
    private int remainCardsMemoizedSerializedSize = -1;

    public static final int STATES_FIELD_NUMBER = 7;
    private java.util.List<Integer> states_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        Integer, PlayerState> states_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                Integer, PlayerState>() {
              public PlayerState convert(Integer from) {
                @SuppressWarnings("deprecation")
                PlayerState result = PlayerState.valueOf(from);
                return result == null ? PlayerState.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    public java.util.List<PlayerState> getStatesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          Integer, PlayerState>(states_, states_converter_);
    }
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    public int getStatesCount() {
      return states_.size();
    }
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    public PlayerState getStates(int index) {
      return states_converter_.convert(states_.get(index));
    }
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    public java.util.List<Integer>
    getStatesValueList() {
      return states_;
    }
    /**
     * <pre>
     ** 玩家结算状态，最多两个值 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerState states = 7;</code>
     */
    public int getStatesValue(int index) {
      return states_.get(index);
    }
    private int statesMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (seatId_ != 0) {
        output.writeInt32(1, seatId_);
      }
      if (scoreChange_ != 0) {
        output.writeInt32(2, scoreChange_);
      }
      if (scoreType_ != 0) {
        output.writeInt32(3, scoreType_);
      }
      if (allChip_ != 0) {
        output.writeInt32(4, allChip_);
      }
      if (allDiamond_ != 0) {
        output.writeInt32(5, allDiamond_);
      }
      if (getRemainCardsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(remainCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < remainCards_.size(); i++) {
        output.writeInt32NoTag(remainCards_.getInt(i));
      }
      if (getStatesList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(statesMemoizedSerializedSize);
      }
      for (int i = 0; i < states_.size(); i++) {
        output.writeEnumNoTag(states_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatId_);
      }
      if (scoreChange_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, scoreChange_);
      }
      if (scoreType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, scoreType_);
      }
      if (allChip_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, allChip_);
      }
      if (allDiamond_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, allDiamond_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < remainCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(remainCards_.getInt(i));
        }
        size += dataSize;
        if (!getRemainCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        remainCardsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < states_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(states_.get(i));
        }
        size += dataSize;
        if (!getStatesList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }statesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PlayerSettle)) {
        return super.equals(obj);
      }
      PlayerSettle other = (PlayerSettle) obj;

      if (getSeatId()
          != other.getSeatId()) return false;
      if (getScoreChange()
          != other.getScoreChange()) return false;
      if (getScoreType()
          != other.getScoreType()) return false;
      if (getAllChip()
          != other.getAllChip()) return false;
      if (getAllDiamond()
          != other.getAllDiamond()) return false;
      if (!getRemainCardsList()
          .equals(other.getRemainCardsList())) return false;
      if (!states_.equals(other.states_)) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEATID_FIELD_NUMBER;
      hash = (53 * hash) + getSeatId();
      hash = (37 * hash) + SCORECHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getScoreChange();
      hash = (37 * hash) + SCORETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getScoreType();
      hash = (37 * hash) + ALLCHIP_FIELD_NUMBER;
      hash = (53 * hash) + getAllChip();
      hash = (37 * hash) + ALLDIAMOND_FIELD_NUMBER;
      hash = (53 * hash) + getAllDiamond();
      if (getRemainCardsCount() > 0) {
        hash = (37 * hash) + REMAINCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getRemainCardsList().hashCode();
      }
      if (getStatesCount() > 0) {
        hash = (37 * hash) + STATES_FIELD_NUMBER;
        hash = (53 * hash) + states_.hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PlayerSettle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlayerSettle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlayerSettle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlayerSettle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlayerSettle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlayerSettle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlayerSettle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlayerSettle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlayerSettle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PlayerSettle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlayerSettle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlayerSettle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PlayerSettle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 结算信息中具体每个玩家的信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.PlayerSettle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.PlayerSettle)
        PlayerSettleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_PlayerSettle_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_PlayerSettle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PlayerSettle.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.PlayerSettle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        seatId_ = 0;

        scoreChange_ = 0;

        scoreType_ = 0;

        allChip_ = 0;

        allDiamond_ = 0;

        remainCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        states_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_PlayerSettle_descriptor;
      }

      @Override
      public PlayerSettle getDefaultInstanceForType() {
        return PlayerSettle.getDefaultInstance();
      }

      @Override
      public PlayerSettle build() {
        PlayerSettle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PlayerSettle buildPartial() {
        PlayerSettle result = new PlayerSettle(this);
        int from_bitField0_ = bitField0_;
        result.seatId_ = seatId_;
        result.scoreChange_ = scoreChange_;
        result.scoreType_ = scoreType_;
        result.allChip_ = allChip_;
        result.allDiamond_ = allDiamond_;
        if (((bitField0_ & 0x00000001) != 0)) {
          remainCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.remainCards_ = remainCards_;
        if (((bitField0_ & 0x00000002) != 0)) {
          states_ = java.util.Collections.unmodifiableList(states_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.states_ = states_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PlayerSettle) {
          return mergeFrom((PlayerSettle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PlayerSettle other) {
        if (other == PlayerSettle.getDefaultInstance()) return this;
        if (other.getSeatId() != 0) {
          setSeatId(other.getSeatId());
        }
        if (other.getScoreChange() != 0) {
          setScoreChange(other.getScoreChange());
        }
        if (other.getScoreType() != 0) {
          setScoreType(other.getScoreType());
        }
        if (other.getAllChip() != 0) {
          setAllChip(other.getAllChip());
        }
        if (other.getAllDiamond() != 0) {
          setAllDiamond(other.getAllDiamond());
        }
        if (!other.remainCards_.isEmpty()) {
          if (remainCards_.isEmpty()) {
            remainCards_ = other.remainCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRemainCardsIsMutable();
            remainCards_.addAll(other.remainCards_);
          }
          onChanged();
        }
        if (!other.states_.isEmpty()) {
          if (states_.isEmpty()) {
            states_ = other.states_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStatesIsMutable();
            states_.addAll(other.states_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PlayerSettle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PlayerSettle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seatId_ ;
      /**
       * <pre>
       ** 座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <pre>
       ** 座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public Builder setSeatId(int value) {
        
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public Builder clearSeatId() {
        
        seatId_ = 0;
        onChanged();
        return this;
      }

      private int scoreChange_ ;
      /**
       * <pre>
       ** 玩家本局得分变化 
       * </pre>
       *
       * <code>int32 scoreChange = 2;</code>
       */
      public int getScoreChange() {
        return scoreChange_;
      }
      /**
       * <pre>
       ** 玩家本局得分变化 
       * </pre>
       *
       * <code>int32 scoreChange = 2;</code>
       */
      public Builder setScoreChange(int value) {
        
        scoreChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家本局得分变化 
       * </pre>
       *
       * <code>int32 scoreChange = 2;</code>
       */
      public Builder clearScoreChange() {
        
        scoreChange_ = 0;
        onChanged();
        return this;
      }

      private int scoreType_ ;
      /**
       * <pre>
       ** 玩家得分变化类型，1金豆，2钻石 
       * </pre>
       *
       * <code>int32 scoreType = 3;</code>
       */
      public int getScoreType() {
        return scoreType_;
      }
      /**
       * <pre>
       ** 玩家得分变化类型，1金豆，2钻石 
       * </pre>
       *
       * <code>int32 scoreType = 3;</code>
       */
      public Builder setScoreType(int value) {
        
        scoreType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家得分变化类型，1金豆，2钻石 
       * </pre>
       *
       * <code>int32 scoreType = 3;</code>
       */
      public Builder clearScoreType() {
        
        scoreType_ = 0;
        onChanged();
        return this;
      }

      private int allChip_ ;
      /**
       * <pre>
       ** 玩家总金豆数 
       * </pre>
       *
       * <code>int32 allChip = 4;</code>
       */
      public int getAllChip() {
        return allChip_;
      }
      /**
       * <pre>
       ** 玩家总金豆数 
       * </pre>
       *
       * <code>int32 allChip = 4;</code>
       */
      public Builder setAllChip(int value) {
        
        allChip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家总金豆数 
       * </pre>
       *
       * <code>int32 allChip = 4;</code>
       */
      public Builder clearAllChip() {
        
        allChip_ = 0;
        onChanged();
        return this;
      }

      private int allDiamond_ ;
      /**
       * <pre>
       ** 玩家总钻石数 
       * </pre>
       *
       * <code>int32 allDiamond = 5;</code>
       */
      public int getAllDiamond() {
        return allDiamond_;
      }
      /**
       * <pre>
       ** 玩家总钻石数 
       * </pre>
       *
       * <code>int32 allDiamond = 5;</code>
       */
      public Builder setAllDiamond(int value) {
        
        allDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家总钻石数 
       * </pre>
       *
       * <code>int32 allDiamond = 5;</code>
       */
      public Builder clearAllDiamond() {
        
        allDiamond_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList remainCards_ = emptyIntList();
      private void ensureRemainCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          remainCards_ = mutableCopy(remainCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 玩家剩余手牌 
       * </pre>
       *
       * <code>repeated int32 remainCards = 6;</code>
       */
      public java.util.List<Integer>
          getRemainCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(remainCards_) : remainCards_;
      }
      /**
       * <pre>
       ** 玩家剩余手牌 
       * </pre>
       *
       * <code>repeated int32 remainCards = 6;</code>
       */
      public int getRemainCardsCount() {
        return remainCards_.size();
      }
      /**
       * <pre>
       ** 玩家剩余手牌 
       * </pre>
       *
       * <code>repeated int32 remainCards = 6;</code>
       */
      public int getRemainCards(int index) {
        return remainCards_.getInt(index);
      }
      /**
       * <pre>
       ** 玩家剩余手牌 
       * </pre>
       *
       * <code>repeated int32 remainCards = 6;</code>
       */
      public Builder setRemainCards(
          int index, int value) {
        ensureRemainCardsIsMutable();
        remainCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家剩余手牌 
       * </pre>
       *
       * <code>repeated int32 remainCards = 6;</code>
       */
      public Builder addRemainCards(int value) {
        ensureRemainCardsIsMutable();
        remainCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家剩余手牌 
       * </pre>
       *
       * <code>repeated int32 remainCards = 6;</code>
       */
      public Builder addAllRemainCards(
          Iterable<? extends Integer> values) {
        ensureRemainCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, remainCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家剩余手牌 
       * </pre>
       *
       * <code>repeated int32 remainCards = 6;</code>
       */
      public Builder clearRemainCards() {
        remainCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<Integer> states_ =
        java.util.Collections.emptyList();
      private void ensureStatesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          states_ = new java.util.ArrayList<Integer>(states_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public java.util.List<PlayerState> getStatesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            Integer, PlayerState>(states_, states_converter_);
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public int getStatesCount() {
        return states_.size();
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public PlayerState getStates(int index) {
        return states_converter_.convert(states_.get(index));
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public Builder setStates(
          int index, PlayerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatesIsMutable();
        states_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public Builder addStates(PlayerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatesIsMutable();
        states_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public Builder addAllStates(
          Iterable<? extends PlayerState> values) {
        ensureStatesIsMutable();
        for (PlayerState value : values) {
          states_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public Builder clearStates() {
        states_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public java.util.List<Integer>
      getStatesValueList() {
        return java.util.Collections.unmodifiableList(states_);
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public int getStatesValue(int index) {
        return states_.get(index);
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public Builder setStatesValue(
          int index, int value) {
        ensureStatesIsMutable();
        states_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public Builder addStatesValue(int value) {
        ensureStatesIsMutable();
        states_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家结算状态，最多两个值 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerState states = 7;</code>
       */
      public Builder addAllStatesValue(
          Iterable<Integer> values) {
        ensureStatesIsMutable();
        for (int value : values) {
          states_.add(value);
        }
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.PlayerSettle)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.PlayerSettle)
    private static final PlayerSettle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayerSettle();
    }

    public static PlayerSettle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerSettle>
        PARSER = new com.google.protobuf.AbstractParser<PlayerSettle>() {
      @Override
      public PlayerSettle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerSettle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerSettle> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PlayerSettle> getParserForType() {
      return PARSER;
    }

    @Override
    public PlayerSettle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MatchInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.MatchInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 赛事ID 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    int getMatchId();

    /**
     * <pre>
     ** 赛事类型 
     * </pre>
     *
     * <code>.pb_landlord.MatchType matchType = 2;</code>
     */
    int getMatchTypeValue();
    /**
     * <pre>
     ** 赛事类型 
     * </pre>
     *
     * <code>.pb_landlord.MatchType matchType = 2;</code>
     */
    MatchType getMatchType();

    /**
     * <pre>
     ** 赛事轮数 
     * </pre>
     *
     * <code>int32 round = 3;</code>
     */
    int getRound();

    /**
     * <pre>
     ** 赛事总人数 
     * </pre>
     *
     * <code>int32 total = 4;</code>
     */
    int getTotal();

    /**
     * <pre>
     ** 当前参赛人数 
     * </pre>
     *
     * <code>int32 join = 5;</code>
     */
    int getJoin();

    /**
     * <pre>
     ** 报名费 
     * </pre>
     *
     * <code>int32 cost = 6;</code>
     */
    int getCost();

    /**
     * <pre>
     ** 冠军奖品类型 1金豆 2钻石 3红包 
     * </pre>
     *
     * <code>int32 winnerType = 7;</code>
     */
    int getWinnerType();

    /**
     * <pre>
     ** 冠军奖品数量，如果是红包，则单位为分 
     * </pre>
     *
     * <code>int32 winnerNum = 8;</code>
     */
    int getWinnerNum();

    /**
     * <pre>
     ** 赛事时间 
     * </pre>
     *
     * <code>string matchTime = 9;</code>
     */
    String getMatchTime();
    /**
     * <pre>
     ** 赛事时间 
     * </pre>
     *
     * <code>string matchTime = 9;</code>
     */
    com.google.protobuf.ByteString
        getMatchTimeBytes();

    /**
     * <pre>
     ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
     * </pre>
     *
     * <code>int32 costType = 10;</code>
     */
    int getCostType();

    /**
     * <pre>
     ** 报名限制 
     * </pre>
     *
     * <code>int32 enterLimit = 11;</code>
     */
    int getEnterLimit();

    /**
     * <pre>
     ** 玩家是否报名 
     * </pre>
     *
     * <code>bool isJoin = 12;</code>
     */
    boolean getIsJoin();
  }
  /**
   * <pre>
   ** 赛事信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.MatchInfo}
   */
  public  static final class MatchInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.MatchInfo)
      MatchInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MatchInfo.newBuilder() to construct.
    private MatchInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MatchInfo() {
      matchType_ = 0;
      matchTime_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MatchInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MatchInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              matchId_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              matchType_ = rawValue;
              break;
            }
            case 24: {

              round_ = input.readInt32();
              break;
            }
            case 32: {

              total_ = input.readInt32();
              break;
            }
            case 40: {

              join_ = input.readInt32();
              break;
            }
            case 48: {

              cost_ = input.readInt32();
              break;
            }
            case 56: {

              winnerType_ = input.readInt32();
              break;
            }
            case 64: {

              winnerNum_ = input.readInt32();
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              matchTime_ = s;
              break;
            }
            case 80: {

              costType_ = input.readInt32();
              break;
            }
            case 88: {

              enterLimit_ = input.readInt32();
              break;
            }
            case 96: {

              isJoin_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_MatchInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_MatchInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MatchInfo.class, Builder.class);
    }

    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <pre>
     ** 赛事ID 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    public int getMatchId() {
      return matchId_;
    }

    public static final int MATCHTYPE_FIELD_NUMBER = 2;
    private int matchType_;
    /**
     * <pre>
     ** 赛事类型 
     * </pre>
     *
     * <code>.pb_landlord.MatchType matchType = 2;</code>
     */
    public int getMatchTypeValue() {
      return matchType_;
    }
    /**
     * <pre>
     ** 赛事类型 
     * </pre>
     *
     * <code>.pb_landlord.MatchType matchType = 2;</code>
     */
    public MatchType getMatchType() {
      @SuppressWarnings("deprecation")
      MatchType result = MatchType.valueOf(matchType_);
      return result == null ? MatchType.UNRECOGNIZED : result;
    }

    public static final int ROUND_FIELD_NUMBER = 3;
    private int round_;
    /**
     * <pre>
     ** 赛事轮数 
     * </pre>
     *
     * <code>int32 round = 3;</code>
     */
    public int getRound() {
      return round_;
    }

    public static final int TOTAL_FIELD_NUMBER = 4;
    private int total_;
    /**
     * <pre>
     ** 赛事总人数 
     * </pre>
     *
     * <code>int32 total = 4;</code>
     */
    public int getTotal() {
      return total_;
    }

    public static final int JOIN_FIELD_NUMBER = 5;
    private int join_;
    /**
     * <pre>
     ** 当前参赛人数 
     * </pre>
     *
     * <code>int32 join = 5;</code>
     */
    public int getJoin() {
      return join_;
    }

    public static final int COST_FIELD_NUMBER = 6;
    private int cost_;
    /**
     * <pre>
     ** 报名费 
     * </pre>
     *
     * <code>int32 cost = 6;</code>
     */
    public int getCost() {
      return cost_;
    }

    public static final int WINNERTYPE_FIELD_NUMBER = 7;
    private int winnerType_;
    /**
     * <pre>
     ** 冠军奖品类型 1金豆 2钻石 3红包 
     * </pre>
     *
     * <code>int32 winnerType = 7;</code>
     */
    public int getWinnerType() {
      return winnerType_;
    }

    public static final int WINNERNUM_FIELD_NUMBER = 8;
    private int winnerNum_;
    /**
     * <pre>
     ** 冠军奖品数量，如果是红包，则单位为分 
     * </pre>
     *
     * <code>int32 winnerNum = 8;</code>
     */
    public int getWinnerNum() {
      return winnerNum_;
    }

    public static final int MATCHTIME_FIELD_NUMBER = 9;
    private volatile Object matchTime_;
    /**
     * <pre>
     ** 赛事时间 
     * </pre>
     *
     * <code>string matchTime = 9;</code>
     */
    public String getMatchTime() {
      Object ref = matchTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        matchTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 赛事时间 
     * </pre>
     *
     * <code>string matchTime = 9;</code>
     */
    public com.google.protobuf.ByteString
        getMatchTimeBytes() {
      Object ref = matchTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        matchTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COSTTYPE_FIELD_NUMBER = 10;
    private int costType_;
    /**
     * <pre>
     ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
     * </pre>
     *
     * <code>int32 costType = 10;</code>
     */
    public int getCostType() {
      return costType_;
    }

    public static final int ENTERLIMIT_FIELD_NUMBER = 11;
    private int enterLimit_;
    /**
     * <pre>
     ** 报名限制 
     * </pre>
     *
     * <code>int32 enterLimit = 11;</code>
     */
    public int getEnterLimit() {
      return enterLimit_;
    }

    public static final int ISJOIN_FIELD_NUMBER = 12;
    private boolean isJoin_;
    /**
     * <pre>
     ** 玩家是否报名 
     * </pre>
     *
     * <code>bool isJoin = 12;</code>
     */
    public boolean getIsJoin() {
      return isJoin_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (matchId_ != 0) {
        output.writeInt32(1, matchId_);
      }
      if (matchType_ != MatchType.defaultType.getNumber()) {
        output.writeEnum(2, matchType_);
      }
      if (round_ != 0) {
        output.writeInt32(3, round_);
      }
      if (total_ != 0) {
        output.writeInt32(4, total_);
      }
      if (join_ != 0) {
        output.writeInt32(5, join_);
      }
      if (cost_ != 0) {
        output.writeInt32(6, cost_);
      }
      if (winnerType_ != 0) {
        output.writeInt32(7, winnerType_);
      }
      if (winnerNum_ != 0) {
        output.writeInt32(8, winnerNum_);
      }
      if (!getMatchTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, matchTime_);
      }
      if (costType_ != 0) {
        output.writeInt32(10, costType_);
      }
      if (enterLimit_ != 0) {
        output.writeInt32(11, enterLimit_);
      }
      if (isJoin_ != false) {
        output.writeBool(12, isJoin_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (matchId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchId_);
      }
      if (matchType_ != MatchType.defaultType.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, matchType_);
      }
      if (round_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, round_);
      }
      if (total_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, total_);
      }
      if (join_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, join_);
      }
      if (cost_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cost_);
      }
      if (winnerType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, winnerType_);
      }
      if (winnerNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, winnerNum_);
      }
      if (!getMatchTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, matchTime_);
      }
      if (costType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, costType_);
      }
      if (enterLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, enterLimit_);
      }
      if (isJoin_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isJoin_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MatchInfo)) {
        return super.equals(obj);
      }
      MatchInfo other = (MatchInfo) obj;

      if (getMatchId()
          != other.getMatchId()) return false;
      if (matchType_ != other.matchType_) return false;
      if (getRound()
          != other.getRound()) return false;
      if (getTotal()
          != other.getTotal()) return false;
      if (getJoin()
          != other.getJoin()) return false;
      if (getCost()
          != other.getCost()) return false;
      if (getWinnerType()
          != other.getWinnerType()) return false;
      if (getWinnerNum()
          != other.getWinnerNum()) return false;
      if (!getMatchTime()
          .equals(other.getMatchTime())) return false;
      if (getCostType()
          != other.getCostType()) return false;
      if (getEnterLimit()
          != other.getEnterLimit()) return false;
      if (getIsJoin()
          != other.getIsJoin()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MATCHID_FIELD_NUMBER;
      hash = (53 * hash) + getMatchId();
      hash = (37 * hash) + MATCHTYPE_FIELD_NUMBER;
      hash = (53 * hash) + matchType_;
      hash = (37 * hash) + ROUND_FIELD_NUMBER;
      hash = (53 * hash) + getRound();
      hash = (37 * hash) + TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + getTotal();
      hash = (37 * hash) + JOIN_FIELD_NUMBER;
      hash = (53 * hash) + getJoin();
      hash = (37 * hash) + COST_FIELD_NUMBER;
      hash = (53 * hash) + getCost();
      hash = (37 * hash) + WINNERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getWinnerType();
      hash = (37 * hash) + WINNERNUM_FIELD_NUMBER;
      hash = (53 * hash) + getWinnerNum();
      hash = (37 * hash) + MATCHTIME_FIELD_NUMBER;
      hash = (53 * hash) + getMatchTime().hashCode();
      hash = (37 * hash) + COSTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCostType();
      hash = (37 * hash) + ENTERLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getEnterLimit();
      hash = (37 * hash) + ISJOIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsJoin());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MatchInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MatchInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MatchInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MatchInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MatchInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MatchInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MatchInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 赛事信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.MatchInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.MatchInfo)
        MatchInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_MatchInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_MatchInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MatchInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.MatchInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        matchId_ = 0;

        matchType_ = 0;

        round_ = 0;

        total_ = 0;

        join_ = 0;

        cost_ = 0;

        winnerType_ = 0;

        winnerNum_ = 0;

        matchTime_ = "";

        costType_ = 0;

        enterLimit_ = 0;

        isJoin_ = false;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_MatchInfo_descriptor;
      }

      @Override
      public MatchInfo getDefaultInstanceForType() {
        return MatchInfo.getDefaultInstance();
      }

      @Override
      public MatchInfo build() {
        MatchInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MatchInfo buildPartial() {
        MatchInfo result = new MatchInfo(this);
        result.matchId_ = matchId_;
        result.matchType_ = matchType_;
        result.round_ = round_;
        result.total_ = total_;
        result.join_ = join_;
        result.cost_ = cost_;
        result.winnerType_ = winnerType_;
        result.winnerNum_ = winnerNum_;
        result.matchTime_ = matchTime_;
        result.costType_ = costType_;
        result.enterLimit_ = enterLimit_;
        result.isJoin_ = isJoin_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MatchInfo) {
          return mergeFrom((MatchInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MatchInfo other) {
        if (other == MatchInfo.getDefaultInstance()) return this;
        if (other.getMatchId() != 0) {
          setMatchId(other.getMatchId());
        }
        if (other.matchType_ != 0) {
          setMatchTypeValue(other.getMatchTypeValue());
        }
        if (other.getRound() != 0) {
          setRound(other.getRound());
        }
        if (other.getTotal() != 0) {
          setTotal(other.getTotal());
        }
        if (other.getJoin() != 0) {
          setJoin(other.getJoin());
        }
        if (other.getCost() != 0) {
          setCost(other.getCost());
        }
        if (other.getWinnerType() != 0) {
          setWinnerType(other.getWinnerType());
        }
        if (other.getWinnerNum() != 0) {
          setWinnerNum(other.getWinnerNum());
        }
        if (!other.getMatchTime().isEmpty()) {
          matchTime_ = other.matchTime_;
          onChanged();
        }
        if (other.getCostType() != 0) {
          setCostType(other.getCostType());
        }
        if (other.getEnterLimit() != 0) {
          setEnterLimit(other.getEnterLimit());
        }
        if (other.getIsJoin() != false) {
          setIsJoin(other.getIsJoin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MatchInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MatchInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int matchId_ ;
      /**
       * <pre>
       ** 赛事ID 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <pre>
       ** 赛事ID 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder setMatchId(int value) {
        
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事ID 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder clearMatchId() {
        
        matchId_ = 0;
        onChanged();
        return this;
      }

      private int matchType_ = 0;
      /**
       * <pre>
       ** 赛事类型 
       * </pre>
       *
       * <code>.pb_landlord.MatchType matchType = 2;</code>
       */
      public int getMatchTypeValue() {
        return matchType_;
      }
      /**
       * <pre>
       ** 赛事类型 
       * </pre>
       *
       * <code>.pb_landlord.MatchType matchType = 2;</code>
       */
      public Builder setMatchTypeValue(int value) {
        matchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事类型 
       * </pre>
       *
       * <code>.pb_landlord.MatchType matchType = 2;</code>
       */
      public MatchType getMatchType() {
        @SuppressWarnings("deprecation")
        MatchType result = MatchType.valueOf(matchType_);
        return result == null ? MatchType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       ** 赛事类型 
       * </pre>
       *
       * <code>.pb_landlord.MatchType matchType = 2;</code>
       */
      public Builder setMatchType(MatchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        matchType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事类型 
       * </pre>
       *
       * <code>.pb_landlord.MatchType matchType = 2;</code>
       */
      public Builder clearMatchType() {
        
        matchType_ = 0;
        onChanged();
        return this;
      }

      private int round_ ;
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 round = 3;</code>
       */
      public int getRound() {
        return round_;
      }
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 round = 3;</code>
       */
      public Builder setRound(int value) {
        
        round_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 round = 3;</code>
       */
      public Builder clearRound() {
        
        round_ = 0;
        onChanged();
        return this;
      }

      private int total_ ;
      /**
       * <pre>
       ** 赛事总人数 
       * </pre>
       *
       * <code>int32 total = 4;</code>
       */
      public int getTotal() {
        return total_;
      }
      /**
       * <pre>
       ** 赛事总人数 
       * </pre>
       *
       * <code>int32 total = 4;</code>
       */
      public Builder setTotal(int value) {
        
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事总人数 
       * </pre>
       *
       * <code>int32 total = 4;</code>
       */
      public Builder clearTotal() {
        
        total_ = 0;
        onChanged();
        return this;
      }

      private int join_ ;
      /**
       * <pre>
       ** 当前参赛人数 
       * </pre>
       *
       * <code>int32 join = 5;</code>
       */
      public int getJoin() {
        return join_;
      }
      /**
       * <pre>
       ** 当前参赛人数 
       * </pre>
       *
       * <code>int32 join = 5;</code>
       */
      public Builder setJoin(int value) {
        
        join_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前参赛人数 
       * </pre>
       *
       * <code>int32 join = 5;</code>
       */
      public Builder clearJoin() {
        
        join_ = 0;
        onChanged();
        return this;
      }

      private int cost_ ;
      /**
       * <pre>
       ** 报名费 
       * </pre>
       *
       * <code>int32 cost = 6;</code>
       */
      public int getCost() {
        return cost_;
      }
      /**
       * <pre>
       ** 报名费 
       * </pre>
       *
       * <code>int32 cost = 6;</code>
       */
      public Builder setCost(int value) {
        
        cost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 报名费 
       * </pre>
       *
       * <code>int32 cost = 6;</code>
       */
      public Builder clearCost() {
        
        cost_ = 0;
        onChanged();
        return this;
      }

      private int winnerType_ ;
      /**
       * <pre>
       ** 冠军奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 7;</code>
       */
      public int getWinnerType() {
        return winnerType_;
      }
      /**
       * <pre>
       ** 冠军奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 7;</code>
       */
      public Builder setWinnerType(int value) {
        
        winnerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 冠军奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 7;</code>
       */
      public Builder clearWinnerType() {
        
        winnerType_ = 0;
        onChanged();
        return this;
      }

      private int winnerNum_ ;
      /**
       * <pre>
       ** 冠军奖品数量，如果是红包，则单位为分 
       * </pre>
       *
       * <code>int32 winnerNum = 8;</code>
       */
      public int getWinnerNum() {
        return winnerNum_;
      }
      /**
       * <pre>
       ** 冠军奖品数量，如果是红包，则单位为分 
       * </pre>
       *
       * <code>int32 winnerNum = 8;</code>
       */
      public Builder setWinnerNum(int value) {
        
        winnerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 冠军奖品数量，如果是红包，则单位为分 
       * </pre>
       *
       * <code>int32 winnerNum = 8;</code>
       */
      public Builder clearWinnerNum() {
        
        winnerNum_ = 0;
        onChanged();
        return this;
      }

      private Object matchTime_ = "";
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string matchTime = 9;</code>
       */
      public String getMatchTime() {
        Object ref = matchTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          matchTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string matchTime = 9;</code>
       */
      public com.google.protobuf.ByteString
          getMatchTimeBytes() {
        Object ref = matchTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          matchTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string matchTime = 9;</code>
       */
      public Builder setMatchTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        matchTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string matchTime = 9;</code>
       */
      public Builder clearMatchTime() {
        
        matchTime_ = getDefaultInstance().getMatchTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string matchTime = 9;</code>
       */
      public Builder setMatchTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        matchTime_ = value;
        onChanged();
        return this;
      }

      private int costType_ ;
      /**
       * <pre>
       ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
       * </pre>
       *
       * <code>int32 costType = 10;</code>
       */
      public int getCostType() {
        return costType_;
      }
      /**
       * <pre>
       ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
       * </pre>
       *
       * <code>int32 costType = 10;</code>
       */
      public Builder setCostType(int value) {
        
        costType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
       * </pre>
       *
       * <code>int32 costType = 10;</code>
       */
      public Builder clearCostType() {
        
        costType_ = 0;
        onChanged();
        return this;
      }

      private int enterLimit_ ;
      /**
       * <pre>
       ** 报名限制 
       * </pre>
       *
       * <code>int32 enterLimit = 11;</code>
       */
      public int getEnterLimit() {
        return enterLimit_;
      }
      /**
       * <pre>
       ** 报名限制 
       * </pre>
       *
       * <code>int32 enterLimit = 11;</code>
       */
      public Builder setEnterLimit(int value) {
        
        enterLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 报名限制 
       * </pre>
       *
       * <code>int32 enterLimit = 11;</code>
       */
      public Builder clearEnterLimit() {
        
        enterLimit_ = 0;
        onChanged();
        return this;
      }

      private boolean isJoin_ ;
      /**
       * <pre>
       ** 玩家是否报名 
       * </pre>
       *
       * <code>bool isJoin = 12;</code>
       */
      public boolean getIsJoin() {
        return isJoin_;
      }
      /**
       * <pre>
       ** 玩家是否报名 
       * </pre>
       *
       * <code>bool isJoin = 12;</code>
       */
      public Builder setIsJoin(boolean value) {
        
        isJoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家是否报名 
       * </pre>
       *
       * <code>bool isJoin = 12;</code>
       */
      public Builder clearIsJoin() {
        
        isJoin_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.MatchInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.MatchInfo)
    private static final MatchInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MatchInfo();
    }

    public static MatchInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MatchInfo>
        PARSER = new com.google.protobuf.AbstractParser<MatchInfo>() {
      @Override
      public MatchInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MatchInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MatchInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public MatchInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MatchAwardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.MatchAward)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 排名开始 
     * </pre>
     *
     * <code>int32 rankStart = 1;</code>
     */
    int getRankStart();

    /**
     * <pre>
     ** 排名结束,包含这一名 
     * </pre>
     *
     * <code>int32 rankEnd = 2;</code>
     */
    int getRankEnd();

    /**
     * <pre>
     ** 奖励类型 1金豆 2钻石 3红包  
     * </pre>
     *
     * <code>int32 awardType = 3;</code>
     */
    int getAwardType();

    /**
     * <pre>
     ** 奖励数量 
     * </pre>
     *
     * <code>int32 awardNum = 4;</code>
     */
    int getAwardNum();
  }
  /**
   * <pre>
   ** 赛事奖励 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.MatchAward}
   */
  public  static final class MatchAward extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.MatchAward)
      MatchAwardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MatchAward.newBuilder() to construct.
    private MatchAward(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MatchAward() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MatchAward();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MatchAward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              rankStart_ = input.readInt32();
              break;
            }
            case 16: {

              rankEnd_ = input.readInt32();
              break;
            }
            case 24: {

              awardType_ = input.readInt32();
              break;
            }
            case 32: {

              awardNum_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_MatchAward_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_MatchAward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MatchAward.class, Builder.class);
    }

    public static final int RANKSTART_FIELD_NUMBER = 1;
    private int rankStart_;
    /**
     * <pre>
     ** 排名开始 
     * </pre>
     *
     * <code>int32 rankStart = 1;</code>
     */
    public int getRankStart() {
      return rankStart_;
    }

    public static final int RANKEND_FIELD_NUMBER = 2;
    private int rankEnd_;
    /**
     * <pre>
     ** 排名结束,包含这一名 
     * </pre>
     *
     * <code>int32 rankEnd = 2;</code>
     */
    public int getRankEnd() {
      return rankEnd_;
    }

    public static final int AWARDTYPE_FIELD_NUMBER = 3;
    private int awardType_;
    /**
     * <pre>
     ** 奖励类型 1金豆 2钻石 3红包  
     * </pre>
     *
     * <code>int32 awardType = 3;</code>
     */
    public int getAwardType() {
      return awardType_;
    }

    public static final int AWARDNUM_FIELD_NUMBER = 4;
    private int awardNum_;
    /**
     * <pre>
     ** 奖励数量 
     * </pre>
     *
     * <code>int32 awardNum = 4;</code>
     */
    public int getAwardNum() {
      return awardNum_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (rankStart_ != 0) {
        output.writeInt32(1, rankStart_);
      }
      if (rankEnd_ != 0) {
        output.writeInt32(2, rankEnd_);
      }
      if (awardType_ != 0) {
        output.writeInt32(3, awardType_);
      }
      if (awardNum_ != 0) {
        output.writeInt32(4, awardNum_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (rankStart_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rankStart_);
      }
      if (rankEnd_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rankEnd_);
      }
      if (awardType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, awardType_);
      }
      if (awardNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, awardNum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MatchAward)) {
        return super.equals(obj);
      }
      MatchAward other = (MatchAward) obj;

      if (getRankStart()
          != other.getRankStart()) return false;
      if (getRankEnd()
          != other.getRankEnd()) return false;
      if (getAwardType()
          != other.getAwardType()) return false;
      if (getAwardNum()
          != other.getAwardNum()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RANKSTART_FIELD_NUMBER;
      hash = (53 * hash) + getRankStart();
      hash = (37 * hash) + RANKEND_FIELD_NUMBER;
      hash = (53 * hash) + getRankEnd();
      hash = (37 * hash) + AWARDTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getAwardType();
      hash = (37 * hash) + AWARDNUM_FIELD_NUMBER;
      hash = (53 * hash) + getAwardNum();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MatchAward parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchAward parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchAward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchAward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchAward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchAward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchAward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MatchAward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MatchAward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MatchAward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MatchAward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MatchAward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MatchAward prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 赛事奖励 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.MatchAward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.MatchAward)
        MatchAwardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_MatchAward_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_MatchAward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MatchAward.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.MatchAward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        rankStart_ = 0;

        rankEnd_ = 0;

        awardType_ = 0;

        awardNum_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_MatchAward_descriptor;
      }

      @Override
      public MatchAward getDefaultInstanceForType() {
        return MatchAward.getDefaultInstance();
      }

      @Override
      public MatchAward build() {
        MatchAward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MatchAward buildPartial() {
        MatchAward result = new MatchAward(this);
        result.rankStart_ = rankStart_;
        result.rankEnd_ = rankEnd_;
        result.awardType_ = awardType_;
        result.awardNum_ = awardNum_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MatchAward) {
          return mergeFrom((MatchAward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MatchAward other) {
        if (other == MatchAward.getDefaultInstance()) return this;
        if (other.getRankStart() != 0) {
          setRankStart(other.getRankStart());
        }
        if (other.getRankEnd() != 0) {
          setRankEnd(other.getRankEnd());
        }
        if (other.getAwardType() != 0) {
          setAwardType(other.getAwardType());
        }
        if (other.getAwardNum() != 0) {
          setAwardNum(other.getAwardNum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MatchAward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MatchAward) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int rankStart_ ;
      /**
       * <pre>
       ** 排名开始 
       * </pre>
       *
       * <code>int32 rankStart = 1;</code>
       */
      public int getRankStart() {
        return rankStart_;
      }
      /**
       * <pre>
       ** 排名开始 
       * </pre>
       *
       * <code>int32 rankStart = 1;</code>
       */
      public Builder setRankStart(int value) {
        
        rankStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 排名开始 
       * </pre>
       *
       * <code>int32 rankStart = 1;</code>
       */
      public Builder clearRankStart() {
        
        rankStart_ = 0;
        onChanged();
        return this;
      }

      private int rankEnd_ ;
      /**
       * <pre>
       ** 排名结束,包含这一名 
       * </pre>
       *
       * <code>int32 rankEnd = 2;</code>
       */
      public int getRankEnd() {
        return rankEnd_;
      }
      /**
       * <pre>
       ** 排名结束,包含这一名 
       * </pre>
       *
       * <code>int32 rankEnd = 2;</code>
       */
      public Builder setRankEnd(int value) {
        
        rankEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 排名结束,包含这一名 
       * </pre>
       *
       * <code>int32 rankEnd = 2;</code>
       */
      public Builder clearRankEnd() {
        
        rankEnd_ = 0;
        onChanged();
        return this;
      }

      private int awardType_ ;
      /**
       * <pre>
       ** 奖励类型 1金豆 2钻石 3红包  
       * </pre>
       *
       * <code>int32 awardType = 3;</code>
       */
      public int getAwardType() {
        return awardType_;
      }
      /**
       * <pre>
       ** 奖励类型 1金豆 2钻石 3红包  
       * </pre>
       *
       * <code>int32 awardType = 3;</code>
       */
      public Builder setAwardType(int value) {
        
        awardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 奖励类型 1金豆 2钻石 3红包  
       * </pre>
       *
       * <code>int32 awardType = 3;</code>
       */
      public Builder clearAwardType() {
        
        awardType_ = 0;
        onChanged();
        return this;
      }

      private int awardNum_ ;
      /**
       * <pre>
       ** 奖励数量 
       * </pre>
       *
       * <code>int32 awardNum = 4;</code>
       */
      public int getAwardNum() {
        return awardNum_;
      }
      /**
       * <pre>
       ** 奖励数量 
       * </pre>
       *
       * <code>int32 awardNum = 4;</code>
       */
      public Builder setAwardNum(int value) {
        
        awardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 奖励数量 
       * </pre>
       *
       * <code>int32 awardNum = 4;</code>
       */
      public Builder clearAwardNum() {
        
        awardNum_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.MatchAward)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.MatchAward)
    private static final MatchAward DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MatchAward();
    }

    public static MatchAward getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MatchAward>
        PARSER = new com.google.protobuf.AbstractParser<MatchAward>() {
      @Override
      public MatchAward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchAward(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MatchAward> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MatchAward> getParserForType() {
      return PARSER;
    }

    @Override
    public MatchAward getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MatchRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.MatchRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 赛事id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    int getMatchId();

    /**
     * <pre>
     ** 时间 
     * </pre>
     *
     * <code>int32 time = 2;</code>
     */
    int getTime();

    /**
     * <pre>
     ** 冠军奖品类型 1金豆 2钻石 3红包 
     * </pre>
     *
     * <code>int32 winnerType = 3;</code>
     */
    int getWinnerType();

    /**
     * <pre>
     ** 冠军奖品数量 
     * </pre>
     *
     * <code>int32 winnerNum = 4;</code>
     */
    int getWinnerNum();

    /**
     * <pre>
     ** 头像url 
     * </pre>
     *
     * <code>string portrait = 5;</code>
     */
    String getPortrait();
    /**
     * <pre>
     ** 头像url 
     * </pre>
     *
     * <code>string portrait = 5;</code>
     */
    com.google.protobuf.ByteString
        getPortraitBytes();

    /**
     * <pre>
     ** 昵称 
     * </pre>
     *
     * <code>string playerName = 6;</code>
     */
    String getPlayerName();
    /**
     * <pre>
     ** 昵称 
     * </pre>
     *
     * <code>string playerName = 6;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();
  }
  /**
   * <pre>
   ** 赛事记录 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.MatchRecord}
   */
  public  static final class MatchRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.MatchRecord)
      MatchRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MatchRecord.newBuilder() to construct.
    private MatchRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MatchRecord() {
      portrait_ = "";
      playerName_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MatchRecord();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MatchRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              matchId_ = input.readInt32();
              break;
            }
            case 16: {

              time_ = input.readInt32();
              break;
            }
            case 24: {

              winnerType_ = input.readInt32();
              break;
            }
            case 32: {

              winnerNum_ = input.readInt32();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              portrait_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              playerName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_MatchRecord_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_MatchRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MatchRecord.class, Builder.class);
    }

    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <pre>
     ** 赛事id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    public int getMatchId() {
      return matchId_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <pre>
     ** 时间 
     * </pre>
     *
     * <code>int32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int WINNERTYPE_FIELD_NUMBER = 3;
    private int winnerType_;
    /**
     * <pre>
     ** 冠军奖品类型 1金豆 2钻石 3红包 
     * </pre>
     *
     * <code>int32 winnerType = 3;</code>
     */
    public int getWinnerType() {
      return winnerType_;
    }

    public static final int WINNERNUM_FIELD_NUMBER = 4;
    private int winnerNum_;
    /**
     * <pre>
     ** 冠军奖品数量 
     * </pre>
     *
     * <code>int32 winnerNum = 4;</code>
     */
    public int getWinnerNum() {
      return winnerNum_;
    }

    public static final int PORTRAIT_FIELD_NUMBER = 5;
    private volatile Object portrait_;
    /**
     * <pre>
     ** 头像url 
     * </pre>
     *
     * <code>string portrait = 5;</code>
     */
    public String getPortrait() {
      Object ref = portrait_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        portrait_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 头像url 
     * </pre>
     *
     * <code>string portrait = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPortraitBytes() {
      Object ref = portrait_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        portrait_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERNAME_FIELD_NUMBER = 6;
    private volatile Object playerName_;
    /**
     * <pre>
     ** 昵称 
     * </pre>
     *
     * <code>string playerName = 6;</code>
     */
    public String getPlayerName() {
      Object ref = playerName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        playerName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 昵称 
     * </pre>
     *
     * <code>string playerName = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      Object ref = playerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (matchId_ != 0) {
        output.writeInt32(1, matchId_);
      }
      if (time_ != 0) {
        output.writeInt32(2, time_);
      }
      if (winnerType_ != 0) {
        output.writeInt32(3, winnerType_);
      }
      if (winnerNum_ != 0) {
        output.writeInt32(4, winnerNum_);
      }
      if (!getPortraitBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, portrait_);
      }
      if (!getPlayerNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, playerName_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (matchId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchId_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      if (winnerType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, winnerType_);
      }
      if (winnerNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, winnerNum_);
      }
      if (!getPortraitBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, portrait_);
      }
      if (!getPlayerNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, playerName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MatchRecord)) {
        return super.equals(obj);
      }
      MatchRecord other = (MatchRecord) obj;

      if (getMatchId()
          != other.getMatchId()) return false;
      if (getTime()
          != other.getTime()) return false;
      if (getWinnerType()
          != other.getWinnerType()) return false;
      if (getWinnerNum()
          != other.getWinnerNum()) return false;
      if (!getPortrait()
          .equals(other.getPortrait())) return false;
      if (!getPlayerName()
          .equals(other.getPlayerName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MATCHID_FIELD_NUMBER;
      hash = (53 * hash) + getMatchId();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + WINNERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getWinnerType();
      hash = (37 * hash) + WINNERNUM_FIELD_NUMBER;
      hash = (53 * hash) + getWinnerNum();
      hash = (37 * hash) + PORTRAIT_FIELD_NUMBER;
      hash = (53 * hash) + getPortrait().hashCode();
      hash = (37 * hash) + PLAYERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MatchRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MatchRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MatchRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MatchRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MatchRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MatchRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MatchRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 赛事记录 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.MatchRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.MatchRecord)
        MatchRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_MatchRecord_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_MatchRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MatchRecord.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.MatchRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        matchId_ = 0;

        time_ = 0;

        winnerType_ = 0;

        winnerNum_ = 0;

        portrait_ = "";

        playerName_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_MatchRecord_descriptor;
      }

      @Override
      public MatchRecord getDefaultInstanceForType() {
        return MatchRecord.getDefaultInstance();
      }

      @Override
      public MatchRecord build() {
        MatchRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MatchRecord buildPartial() {
        MatchRecord result = new MatchRecord(this);
        result.matchId_ = matchId_;
        result.time_ = time_;
        result.winnerType_ = winnerType_;
        result.winnerNum_ = winnerNum_;
        result.portrait_ = portrait_;
        result.playerName_ = playerName_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MatchRecord) {
          return mergeFrom((MatchRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MatchRecord other) {
        if (other == MatchRecord.getDefaultInstance()) return this;
        if (other.getMatchId() != 0) {
          setMatchId(other.getMatchId());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getWinnerType() != 0) {
          setWinnerType(other.getWinnerType());
        }
        if (other.getWinnerNum() != 0) {
          setWinnerNum(other.getWinnerNum());
        }
        if (!other.getPortrait().isEmpty()) {
          portrait_ = other.portrait_;
          onChanged();
        }
        if (!other.getPlayerName().isEmpty()) {
          playerName_ = other.playerName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MatchRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MatchRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int matchId_ ;
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder setMatchId(int value) {
        
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder clearMatchId() {
        
        matchId_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       ** 时间 
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       ** 时间 
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public Builder setTime(int value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 时间 
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public Builder clearTime() {
        
        time_ = 0;
        onChanged();
        return this;
      }

      private int winnerType_ ;
      /**
       * <pre>
       ** 冠军奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 3;</code>
       */
      public int getWinnerType() {
        return winnerType_;
      }
      /**
       * <pre>
       ** 冠军奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 3;</code>
       */
      public Builder setWinnerType(int value) {
        
        winnerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 冠军奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 3;</code>
       */
      public Builder clearWinnerType() {
        
        winnerType_ = 0;
        onChanged();
        return this;
      }

      private int winnerNum_ ;
      /**
       * <pre>
       ** 冠军奖品数量 
       * </pre>
       *
       * <code>int32 winnerNum = 4;</code>
       */
      public int getWinnerNum() {
        return winnerNum_;
      }
      /**
       * <pre>
       ** 冠军奖品数量 
       * </pre>
       *
       * <code>int32 winnerNum = 4;</code>
       */
      public Builder setWinnerNum(int value) {
        
        winnerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 冠军奖品数量 
       * </pre>
       *
       * <code>int32 winnerNum = 4;</code>
       */
      public Builder clearWinnerNum() {
        
        winnerNum_ = 0;
        onChanged();
        return this;
      }

      private Object portrait_ = "";
      /**
       * <pre>
       ** 头像url 
       * </pre>
       *
       * <code>string portrait = 5;</code>
       */
      public String getPortrait() {
        Object ref = portrait_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          portrait_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 头像url 
       * </pre>
       *
       * <code>string portrait = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPortraitBytes() {
        Object ref = portrait_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          portrait_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 头像url 
       * </pre>
       *
       * <code>string portrait = 5;</code>
       */
      public Builder setPortrait(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        portrait_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 头像url 
       * </pre>
       *
       * <code>string portrait = 5;</code>
       */
      public Builder clearPortrait() {
        
        portrait_ = getDefaultInstance().getPortrait();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 头像url 
       * </pre>
       *
       * <code>string portrait = 5;</code>
       */
      public Builder setPortraitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        portrait_ = value;
        onChanged();
        return this;
      }

      private Object playerName_ = "";
      /**
       * <pre>
       ** 昵称 
       * </pre>
       *
       * <code>string playerName = 6;</code>
       */
      public String getPlayerName() {
        Object ref = playerName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 昵称 
       * </pre>
       *
       * <code>string playerName = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 昵称 
       * </pre>
       *
       * <code>string playerName = 6;</code>
       */
      public Builder setPlayerName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 昵称 
       * </pre>
       *
       * <code>string playerName = 6;</code>
       */
      public Builder clearPlayerName() {
        
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 昵称 
       * </pre>
       *
       * <code>string playerName = 6;</code>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerName_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.MatchRecord)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.MatchRecord)
    private static final MatchRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MatchRecord();
    }

    public static MatchRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MatchRecord>
        PARSER = new com.google.protobuf.AbstractParser<MatchRecord>() {
      @Override
      public MatchRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MatchRecord> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MatchRecord> getParserForType() {
      return PARSER;
    }

    @Override
    public MatchRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OwnHistoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.OwnHistory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 赛事id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    int getMatchId();

    /**
     * <pre>
     ** 时间 
     * </pre>
     *
     * <code>int32 time = 2;</code>
     */
    int getTime();

    /**
     * <pre>
     ** 我的奖品类型 1金豆 2钻石 3红包 
     * </pre>
     *
     * <code>int32 winnerType = 3;</code>
     */
    int getWinnerType();

    /**
     * <pre>
     ** 我的奖品数量 
     * </pre>
     *
     * <code>int32 winnerNum = 4;</code>
     */
    int getWinnerNum();

    /**
     * <pre>
     ** 我的名次
     * </pre>
     *
     * <code>int32 mineRank = 5;</code>
     */
    int getMineRank();
  }
  /**
   * <pre>
   ** 个人记录 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.OwnHistory}
   */
  public  static final class OwnHistory extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.OwnHistory)
      OwnHistoryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OwnHistory.newBuilder() to construct.
    private OwnHistory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OwnHistory() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new OwnHistory();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OwnHistory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              matchId_ = input.readInt32();
              break;
            }
            case 16: {

              time_ = input.readInt32();
              break;
            }
            case 24: {

              winnerType_ = input.readInt32();
              break;
            }
            case 32: {

              winnerNum_ = input.readInt32();
              break;
            }
            case 40: {

              mineRank_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_OwnHistory_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_OwnHistory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OwnHistory.class, Builder.class);
    }

    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <pre>
     ** 赛事id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    public int getMatchId() {
      return matchId_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <pre>
     ** 时间 
     * </pre>
     *
     * <code>int32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int WINNERTYPE_FIELD_NUMBER = 3;
    private int winnerType_;
    /**
     * <pre>
     ** 我的奖品类型 1金豆 2钻石 3红包 
     * </pre>
     *
     * <code>int32 winnerType = 3;</code>
     */
    public int getWinnerType() {
      return winnerType_;
    }

    public static final int WINNERNUM_FIELD_NUMBER = 4;
    private int winnerNum_;
    /**
     * <pre>
     ** 我的奖品数量 
     * </pre>
     *
     * <code>int32 winnerNum = 4;</code>
     */
    public int getWinnerNum() {
      return winnerNum_;
    }

    public static final int MINERANK_FIELD_NUMBER = 5;
    private int mineRank_;
    /**
     * <pre>
     ** 我的名次
     * </pre>
     *
     * <code>int32 mineRank = 5;</code>
     */
    public int getMineRank() {
      return mineRank_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (matchId_ != 0) {
        output.writeInt32(1, matchId_);
      }
      if (time_ != 0) {
        output.writeInt32(2, time_);
      }
      if (winnerType_ != 0) {
        output.writeInt32(3, winnerType_);
      }
      if (winnerNum_ != 0) {
        output.writeInt32(4, winnerNum_);
      }
      if (mineRank_ != 0) {
        output.writeInt32(5, mineRank_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (matchId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchId_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      if (winnerType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, winnerType_);
      }
      if (winnerNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, winnerNum_);
      }
      if (mineRank_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mineRank_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof OwnHistory)) {
        return super.equals(obj);
      }
      OwnHistory other = (OwnHistory) obj;

      if (getMatchId()
          != other.getMatchId()) return false;
      if (getTime()
          != other.getTime()) return false;
      if (getWinnerType()
          != other.getWinnerType()) return false;
      if (getWinnerNum()
          != other.getWinnerNum()) return false;
      if (getMineRank()
          != other.getMineRank()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MATCHID_FIELD_NUMBER;
      hash = (53 * hash) + getMatchId();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + WINNERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getWinnerType();
      hash = (37 * hash) + WINNERNUM_FIELD_NUMBER;
      hash = (53 * hash) + getWinnerNum();
      hash = (37 * hash) + MINERANK_FIELD_NUMBER;
      hash = (53 * hash) + getMineRank();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static OwnHistory parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OwnHistory parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OwnHistory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OwnHistory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OwnHistory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OwnHistory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OwnHistory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OwnHistory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static OwnHistory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static OwnHistory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static OwnHistory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OwnHistory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(OwnHistory prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 个人记录 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.OwnHistory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.OwnHistory)
        OwnHistoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_OwnHistory_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_OwnHistory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OwnHistory.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.OwnHistory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        matchId_ = 0;

        time_ = 0;

        winnerType_ = 0;

        winnerNum_ = 0;

        mineRank_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_OwnHistory_descriptor;
      }

      @Override
      public OwnHistory getDefaultInstanceForType() {
        return OwnHistory.getDefaultInstance();
      }

      @Override
      public OwnHistory build() {
        OwnHistory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public OwnHistory buildPartial() {
        OwnHistory result = new OwnHistory(this);
        result.matchId_ = matchId_;
        result.time_ = time_;
        result.winnerType_ = winnerType_;
        result.winnerNum_ = winnerNum_;
        result.mineRank_ = mineRank_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OwnHistory) {
          return mergeFrom((OwnHistory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OwnHistory other) {
        if (other == OwnHistory.getDefaultInstance()) return this;
        if (other.getMatchId() != 0) {
          setMatchId(other.getMatchId());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getWinnerType() != 0) {
          setWinnerType(other.getWinnerType());
        }
        if (other.getWinnerNum() != 0) {
          setWinnerNum(other.getWinnerNum());
        }
        if (other.getMineRank() != 0) {
          setMineRank(other.getMineRank());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OwnHistory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OwnHistory) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int matchId_ ;
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder setMatchId(int value) {
        
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder clearMatchId() {
        
        matchId_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       ** 时间 
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       ** 时间 
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public Builder setTime(int value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 时间 
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public Builder clearTime() {
        
        time_ = 0;
        onChanged();
        return this;
      }

      private int winnerType_ ;
      /**
       * <pre>
       ** 我的奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 3;</code>
       */
      public int getWinnerType() {
        return winnerType_;
      }
      /**
       * <pre>
       ** 我的奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 3;</code>
       */
      public Builder setWinnerType(int value) {
        
        winnerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 我的奖品类型 1金豆 2钻石 3红包 
       * </pre>
       *
       * <code>int32 winnerType = 3;</code>
       */
      public Builder clearWinnerType() {
        
        winnerType_ = 0;
        onChanged();
        return this;
      }

      private int winnerNum_ ;
      /**
       * <pre>
       ** 我的奖品数量 
       * </pre>
       *
       * <code>int32 winnerNum = 4;</code>
       */
      public int getWinnerNum() {
        return winnerNum_;
      }
      /**
       * <pre>
       ** 我的奖品数量 
       * </pre>
       *
       * <code>int32 winnerNum = 4;</code>
       */
      public Builder setWinnerNum(int value) {
        
        winnerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 我的奖品数量 
       * </pre>
       *
       * <code>int32 winnerNum = 4;</code>
       */
      public Builder clearWinnerNum() {
        
        winnerNum_ = 0;
        onChanged();
        return this;
      }

      private int mineRank_ ;
      /**
       * <pre>
       ** 我的名次
       * </pre>
       *
       * <code>int32 mineRank = 5;</code>
       */
      public int getMineRank() {
        return mineRank_;
      }
      /**
       * <pre>
       ** 我的名次
       * </pre>
       *
       * <code>int32 mineRank = 5;</code>
       */
      public Builder setMineRank(int value) {
        
        mineRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 我的名次
       * </pre>
       *
       * <code>int32 mineRank = 5;</code>
       */
      public Builder clearMineRank() {
        
        mineRank_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.OwnHistory)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.OwnHistory)
    private static final OwnHistory DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OwnHistory();
    }

    public static OwnHistory getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OwnHistory>
        PARSER = new com.google.protobuf.AbstractParser<OwnHistory>() {
      @Override
      public OwnHistory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OwnHistory(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OwnHistory> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<OwnHistory> getParserForType() {
      return PARSER;
    }

    @Override
    public OwnHistory getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MatchJoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.MatchJoin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 赛事id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    int getMatchId();

    /**
     * <pre>
     ** 参赛人数 
     * </pre>
     *
     * <code>int32 join = 2;</code>
     */
    int getJoin();
  }
  /**
   * <pre>
   ** 参赛人数
   * </pre>
   *
   * Protobuf type {@code pb_landlord.MatchJoin}
   */
  public  static final class MatchJoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.MatchJoin)
      MatchJoinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MatchJoin.newBuilder() to construct.
    private MatchJoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MatchJoin() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MatchJoin();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MatchJoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              matchId_ = input.readInt32();
              break;
            }
            case 16: {

              join_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_MatchJoin_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_MatchJoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MatchJoin.class, Builder.class);
    }

    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <pre>
     ** 赛事id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    public int getMatchId() {
      return matchId_;
    }

    public static final int JOIN_FIELD_NUMBER = 2;
    private int join_;
    /**
     * <pre>
     ** 参赛人数 
     * </pre>
     *
     * <code>int32 join = 2;</code>
     */
    public int getJoin() {
      return join_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (matchId_ != 0) {
        output.writeInt32(1, matchId_);
      }
      if (join_ != 0) {
        output.writeInt32(2, join_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (matchId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchId_);
      }
      if (join_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, join_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MatchJoin)) {
        return super.equals(obj);
      }
      MatchJoin other = (MatchJoin) obj;

      if (getMatchId()
          != other.getMatchId()) return false;
      if (getJoin()
          != other.getJoin()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MATCHID_FIELD_NUMBER;
      hash = (53 * hash) + getMatchId();
      hash = (37 * hash) + JOIN_FIELD_NUMBER;
      hash = (53 * hash) + getJoin();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MatchJoin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchJoin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchJoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchJoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchJoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MatchJoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MatchJoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MatchJoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MatchJoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MatchJoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MatchJoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MatchJoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MatchJoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 参赛人数
     * </pre>
     *
     * Protobuf type {@code pb_landlord.MatchJoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.MatchJoin)
        MatchJoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_MatchJoin_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_MatchJoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MatchJoin.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.MatchJoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        matchId_ = 0;

        join_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_MatchJoin_descriptor;
      }

      @Override
      public MatchJoin getDefaultInstanceForType() {
        return MatchJoin.getDefaultInstance();
      }

      @Override
      public MatchJoin build() {
        MatchJoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MatchJoin buildPartial() {
        MatchJoin result = new MatchJoin(this);
        result.matchId_ = matchId_;
        result.join_ = join_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MatchJoin) {
          return mergeFrom((MatchJoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MatchJoin other) {
        if (other == MatchJoin.getDefaultInstance()) return this;
        if (other.getMatchId() != 0) {
          setMatchId(other.getMatchId());
        }
        if (other.getJoin() != 0) {
          setJoin(other.getJoin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MatchJoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MatchJoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int matchId_ ;
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder setMatchId(int value) {
        
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder clearMatchId() {
        
        matchId_ = 0;
        onChanged();
        return this;
      }

      private int join_ ;
      /**
       * <pre>
       ** 参赛人数 
       * </pre>
       *
       * <code>int32 join = 2;</code>
       */
      public int getJoin() {
        return join_;
      }
      /**
       * <pre>
       ** 参赛人数 
       * </pre>
       *
       * <code>int32 join = 2;</code>
       */
      public Builder setJoin(int value) {
        
        join_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 参赛人数 
       * </pre>
       *
       * <code>int32 join = 2;</code>
       */
      public Builder clearJoin() {
        
        join_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.MatchJoin)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.MatchJoin)
    private static final MatchJoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MatchJoin();
    }

    public static MatchJoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MatchJoin>
        PARSER = new com.google.protobuf.AbstractParser<MatchJoin>() {
      @Override
      public MatchJoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchJoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MatchJoin> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MatchJoin> getParserForType() {
      return PARSER;
    }

    @Override
    public MatchJoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerScoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.PlayerScore)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 playerId = 1;</code>
     */
    int getPlayerId();

    /**
     * <pre>
     ** 如果请求type不为1，则不传头像url 
     * </pre>
     *
     * <code>string playerPortrait = 2;</code>
     */
    String getPlayerPortrait();
    /**
     * <pre>
     ** 如果请求type不为1，则不传头像url 
     * </pre>
     *
     * <code>string playerPortrait = 2;</code>
     */
    com.google.protobuf.ByteString
        getPlayerPortraitBytes();

    /**
     * <code>int32 score = 3;</code>
     */
    int getScore();

    /**
     * <pre>
     ** 排名 
     * </pre>
     *
     * <code>int32 rank = 4;</code>
     */
    int getRank();
  }
  /**
   * <pre>
   ** 玩家比赛中积分信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.PlayerScore}
   */
  public  static final class PlayerScore extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.PlayerScore)
      PlayerScoreOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlayerScore.newBuilder() to construct.
    private PlayerScore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerScore() {
      playerPortrait_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlayerScore();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerScore(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              playerPortrait_ = s;
              break;
            }
            case 24: {

              score_ = input.readInt32();
              break;
            }
            case 32: {

              rank_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordBase.internal_static_pb_landlord_PlayerScore_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordBase.internal_static_pb_landlord_PlayerScore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlayerScore.class, Builder.class);
    }

    public static final int PLAYERID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>int32 playerId = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int PLAYERPORTRAIT_FIELD_NUMBER = 2;
    private volatile Object playerPortrait_;
    /**
     * <pre>
     ** 如果请求type不为1，则不传头像url 
     * </pre>
     *
     * <code>string playerPortrait = 2;</code>
     */
    public String getPlayerPortrait() {
      Object ref = playerPortrait_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        playerPortrait_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 如果请求type不为1，则不传头像url 
     * </pre>
     *
     * <code>string playerPortrait = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerPortraitBytes() {
      Object ref = playerPortrait_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        playerPortrait_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCORE_FIELD_NUMBER = 3;
    private int score_;
    /**
     * <code>int32 score = 3;</code>
     */
    public int getScore() {
      return score_;
    }

    public static final int RANK_FIELD_NUMBER = 4;
    private int rank_;
    /**
     * <pre>
     ** 排名 
     * </pre>
     *
     * <code>int32 rank = 4;</code>
     */
    public int getRank() {
      return rank_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (playerId_ != 0) {
        output.writeInt32(1, playerId_);
      }
      if (!getPlayerPortraitBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, playerPortrait_);
      }
      if (score_ != 0) {
        output.writeInt32(3, score_);
      }
      if (rank_ != 0) {
        output.writeInt32(4, rank_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (playerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (!getPlayerPortraitBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, playerPortrait_);
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, score_);
      }
      if (rank_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rank_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PlayerScore)) {
        return super.equals(obj);
      }
      PlayerScore other = (PlayerScore) obj;

      if (getPlayerId()
          != other.getPlayerId()) return false;
      if (!getPlayerPortrait()
          .equals(other.getPlayerPortrait())) return false;
      if (getScore()
          != other.getScore()) return false;
      if (getRank()
          != other.getRank()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerId();
      hash = (37 * hash) + PLAYERPORTRAIT_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerPortrait().hashCode();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (37 * hash) + RANK_FIELD_NUMBER;
      hash = (53 * hash) + getRank();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PlayerScore parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlayerScore parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlayerScore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlayerScore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlayerScore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlayerScore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlayerScore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlayerScore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlayerScore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PlayerScore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlayerScore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlayerScore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PlayerScore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 玩家比赛中积分信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.PlayerScore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.PlayerScore)
        PlayerScoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordBase.internal_static_pb_landlord_PlayerScore_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordBase.internal_static_pb_landlord_PlayerScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PlayerScore.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordBase.PlayerScore.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        playerId_ = 0;

        playerPortrait_ = "";

        score_ = 0;

        rank_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordBase.internal_static_pb_landlord_PlayerScore_descriptor;
      }

      @Override
      public PlayerScore getDefaultInstanceForType() {
        return PlayerScore.getDefaultInstance();
      }

      @Override
      public PlayerScore build() {
        PlayerScore result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PlayerScore buildPartial() {
        PlayerScore result = new PlayerScore(this);
        result.playerId_ = playerId_;
        result.playerPortrait_ = playerPortrait_;
        result.score_ = score_;
        result.rank_ = rank_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PlayerScore) {
          return mergeFrom((PlayerScore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PlayerScore other) {
        if (other == PlayerScore.getDefaultInstance()) return this;
        if (other.getPlayerId() != 0) {
          setPlayerId(other.getPlayerId());
        }
        if (!other.getPlayerPortrait().isEmpty()) {
          playerPortrait_ = other.playerPortrait_;
          onChanged();
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        if (other.getRank() != 0) {
          setRank(other.getRank());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PlayerScore parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PlayerScore) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int playerId_ ;
      /**
       * <code>int32 playerId = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>int32 playerId = 1;</code>
       */
      public Builder setPlayerId(int value) {
        
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        
        playerId_ = 0;
        onChanged();
        return this;
      }

      private Object playerPortrait_ = "";
      /**
       * <pre>
       ** 如果请求type不为1，则不传头像url 
       * </pre>
       *
       * <code>string playerPortrait = 2;</code>
       */
      public String getPlayerPortrait() {
        Object ref = playerPortrait_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          playerPortrait_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 如果请求type不为1，则不传头像url 
       * </pre>
       *
       * <code>string playerPortrait = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerPortraitBytes() {
        Object ref = playerPortrait_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          playerPortrait_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 如果请求type不为1，则不传头像url 
       * </pre>
       *
       * <code>string playerPortrait = 2;</code>
       */
      public Builder setPlayerPortrait(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerPortrait_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 如果请求type不为1，则不传头像url 
       * </pre>
       *
       * <code>string playerPortrait = 2;</code>
       */
      public Builder clearPlayerPortrait() {
        
        playerPortrait_ = getDefaultInstance().getPlayerPortrait();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 如果请求type不为1，则不传头像url 
       * </pre>
       *
       * <code>string playerPortrait = 2;</code>
       */
      public Builder setPlayerPortraitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerPortrait_ = value;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <code>int32 score = 3;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>int32 score = 3;</code>
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 score = 3;</code>
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }

      private int rank_ ;
      /**
       * <pre>
       ** 排名 
       * </pre>
       *
       * <code>int32 rank = 4;</code>
       */
      public int getRank() {
        return rank_;
      }
      /**
       * <pre>
       ** 排名 
       * </pre>
       *
       * <code>int32 rank = 4;</code>
       */
      public Builder setRank(int value) {
        
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 排名 
       * </pre>
       *
       * <code>int32 rank = 4;</code>
       */
      public Builder clearRank() {
        
        rank_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.PlayerScore)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.PlayerScore)
    private static final PlayerScore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayerScore();
    }

    public static PlayerScore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerScore>
        PARSER = new com.google.protobuf.AbstractParser<PlayerScore>() {
      @Override
      public PlayerScore parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerScore(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerScore> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PlayerScore> getParserForType() {
      return PARSER;
    }

    @Override
    public PlayerScore getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_UserInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_UserInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_RoomConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_RoomConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_SeatInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_SeatInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_RecoverPlayerInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_RecoverPlayerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_PlayerSettle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_PlayerSettle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_MatchInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_MatchInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_MatchAward_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_MatchAward_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_MatchRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_MatchRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_OwnHistory_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_OwnHistory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_MatchJoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_MatchJoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_PlayerScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_PlayerScore_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016landlord.proto\022\013pb_landlord\"\306\001\n\010UserIn" +
      "fo\022\020\n\010playerId\030\001 \001(\005\022\022\n\nplayerName\030\002 \001(\t" +
      "\022\026\n\016playerPortrait\030\003 \001(\t\022\021\n\tplayerSex\030\004 " +
      "\001(\005\022\026\n\016playerGoldCoin\030\005 \001(\005\022\025\n\rplayerDia" +
      "mond\030\006 \001(\005\022\024\n\014playerWinCup\030\007 \001(\005\022\025\n\rhist" +
      "oryWinCup\030\010 \001(\005\022\r\n\005vipLv\030\t \001(\005\"\370\001\n\nRoomC" +
      "onfig\022\n\n\002id\030\001 \001(\005\022\022\n\nbase_score\030\002 \001(\005\022\022\n" +
      "\nscene_type\030\003 \001(\005\022\021\n\tmin_limit\030\004 \001(\005\022\021\n\t" +
      "max_limit\030\005 \001(\005\022\021\n\ttable_fee\030\006 \001(\005\022\025\n\rlo" +
      "ttery_count\030\007 \001(\005\022\023\n\013lotteryType\030\010 \001(\005\022\020" +
      "\n\010maxRatio\030\t \001(\005\022\032\n\022min_continue_limit\030\n" +
      " \001(\005\022\023\n\013revive_type\030\013 \001(\005\022\016\n\006hb_max\030\014 \001(" +
      "\005\"C\n\010SeatInfo\022\'\n\010userinfo\030\001 \001(\0132\025.pb_lan" +
      "dlord.UserInfo\022\016\n\006seatID\030\002 \001(\005\"\177\n\021Recove" +
      "rPlayerInfo\022\016\n\006seatID\030\001 \001(\005\022\023\n\013remainCar" +
      "ds\030\002 \001(\005\022\021\n\tlastCards\030\003 \003(\005\022\016\n\006isAuto\030\004 " +
      "\001(\010\022\016\n\006isPlay\030\005 \001(\010\022\022\n\ncatchPoint\030\006 \001(\005\"" +
      "\252\001\n\014PlayerSettle\022\016\n\006seatId\030\001 \001(\005\022\023\n\013scor" +
      "eChange\030\002 \001(\005\022\021\n\tscoreType\030\003 \001(\005\022\017\n\007allC" +
      "hip\030\004 \001(\005\022\022\n\nallDiamond\030\005 \001(\005\022\023\n\013remainC" +
      "ards\030\006 \003(\005\022(\n\006states\030\007 \003(\0162\030.pb_landlord" +
      ".PlayerState\"\361\001\n\tMatchInfo\022\017\n\007matchId\030\001 " +
      "\001(\005\022)\n\tmatchType\030\002 \001(\0162\026.pb_landlord.Mat" +
      "chType\022\r\n\005round\030\003 \001(\005\022\r\n\005total\030\004 \001(\005\022\014\n\004" +
      "join\030\005 \001(\005\022\014\n\004cost\030\006 \001(\005\022\022\n\nwinnerType\030\007" +
      " \001(\005\022\021\n\twinnerNum\030\010 \001(\005\022\021\n\tmatchTime\030\t \001" +
      "(\t\022\020\n\010costType\030\n \001(\005\022\022\n\nenterLimit\030\013 \001(\005" +
      "\022\016\n\006isJoin\030\014 \001(\010\"U\n\nMatchAward\022\021\n\trankSt" +
      "art\030\001 \001(\005\022\017\n\007rankEnd\030\002 \001(\005\022\021\n\tawardType\030" +
      "\003 \001(\005\022\020\n\010awardNum\030\004 \001(\005\"y\n\013MatchRecord\022\017" +
      "\n\007matchId\030\001 \001(\005\022\014\n\004time\030\002 \001(\005\022\022\n\nwinnerT" +
      "ype\030\003 \001(\005\022\021\n\twinnerNum\030\004 \001(\005\022\020\n\010portrait" +
      "\030\005 \001(\t\022\022\n\nplayerName\030\006 \001(\t\"d\n\nOwnHistory" +
      "\022\017\n\007matchId\030\001 \001(\005\022\014\n\004time\030\002 \001(\005\022\022\n\nwinne" +
      "rType\030\003 \001(\005\022\021\n\twinnerNum\030\004 \001(\005\022\020\n\010mineRa" +
      "nk\030\005 \001(\005\"*\n\tMatchJoin\022\017\n\007matchId\030\001 \001(\005\022\014" +
      "\n\004join\030\002 \001(\005\"T\n\013PlayerScore\022\020\n\010playerId\030" +
      "\001 \001(\005\022\026\n\016playerPortrait\030\002 \001(\t\022\r\n\005score\030\003" +
      " \001(\005\022\014\n\004rank\030\004 \001(\005*\377\007\n\003MSG\022\024\n\020DEFAULT_LA" +
      "NDLORD\020\000\022\017\n\013GetRoomInfo\020\001\022\021\n\rGetRoomConf" +
      "ig\020\002\022\r\n\tQuickJoin\020\003\022\016\n\nCancleJoin\020\004\022\023\n\017R" +
      "etryReturnGame\020\006\022\016\n\nQueryIndex\020e\022\r\n\tEnte" +
      "rRoom\020f\022\013\n\007DoCatch\020g\022\r\n\tPlayCards\020h\022\017\n\013R" +
      "ecoverGame\020i\022\r\n\tLeaveRoom\020j\022\014\n\010AutoPlay\020" +
      "k\022\016\n\nSendAction\020l\022\016\n\tT_DoCatch\020\311\001\022\020\n\013T_P" +
      "layCards\020\312\001\022\022\n\rT_RecoverGame\020\313\001\022\020\n\013T_Lea" +
      "veRoom\020\314\001\022\023\n\016M_GetMatchInfo\020\255\002\022\025\n\020M_GetM" +
      "atchDetail\020\256\002\022\025\n\020M_GetMatchRecord\020\257\002\022\025\n\020" +
      "M_OwnMatchRecord\020\260\002\022\021\n\014M_MatchApply\020\261\002\022\022" +
      "\n\rM_MatchCancel\020\262\002\022\022\n\rM_MatchConfig\020\263\002\022\021" +
      "\n\014M_MatchScore\020\264\002\022\020\n\013M_ForceQuit\020\265\002\022\021\n\014M" +
      "_LeaveMatch\020\266\002\022\017\n\nDrawWinCup\020\221\003\022\024\n\017GetLo" +
      "tteryCount\020\222\003\022\r\n\010GodLight\020\331\004\022\022\n\rGodLight" +
      "Award\020\332\004\022\020\n\013B_RoomIdUrl\020\351\007\022\016\n\tB_DoCatch\020" +
      "\352\007\022\017\n\nB_AutoPlay\020\353\007\022\020\n\013B_GameStart\020\354\007\022\022\n" +
      "\rB_CatchResult\020\355\007\022\024\n\017B_SendDiZhuCard\020\356\007\022" +
      "\021\n\014B_NextPlayer\020\357\007\022\020\n\013B_PlayCards\020\360\007\022\021\n\014" +
      "B_GameSettle\020\361\007\022\021\n\014B_SendAction\020\362\007\022\021\n\014B_" +
      "T_AutoPlay\020\315\010\022\022\n\rB_T_GameStart\020\316\010\022\020\n\013B_T" +
      "_DoCatch\020\317\010\022\024\n\017B_T_CatchResult\020\320\010\022\026\n\021B_T" +
      "_SendDiZhuCard\020\321\010\022\023\n\016B_T_GameSettle\020\322\010\022\022" +
      "\n\rB_M_MatchList\020\261\t\022\023\n\016B_M_MatchStart\020\262\t\022" +
      "\021\n\014B_M_MatchEnd\020\263\t\022\024\n\017B_M_MatchResult\020\264\t" +
      "\022\025\n\020B_GodLightStatus\020\225\n\022\023\n\016B_GodLightPoo" +
      "l\020\226\n*X\n\013PlayerState\022\010\n\004None\020\000\022\013\n\007MianPei" +
      "\020\001\022\t\n\005GuaJi\020\002\022\r\n\tShangXian\020\003\022\014\n\010FengDing" +
      "\020\004\022\n\n\006PoChan\020\005*m\n\rGameStateEnum\022\t\n\005Enter" +
      "\020\000\022\010\n\004Join\020\001\022\t\n\005Start\020\002\022\t\n\005Catch\020\003\022\n\n\006Re" +
      "veal\020\004\022\014\n\010PlayCard\020\005\022\n\n\006Settle\020\006\022\013\n\007ReSt" +
      "art\020\007*\303\002\n\014CardTypeEnum\022\n\n\006cgZERO\020\000\022\024\n\007cg" +
      "ERROR\020\377\377\377\377\377\377\377\377\377\001\022\014\n\010cgSINGLE\020\001\022\014\n\010cgDOUB" +
      "LE\020\002\022\013\n\007cgTHREE\020\003\022\024\n\020cgTHREE_TAKE_ONE\020\004\022" +
      "\024\n\020cgTHREE_TAKE_TWO\020\005\022\021\n\rcgSINGLE_LINE\020\006" +
      "\022\021\n\rcgDOUBLE_LINE\020\007\022\020\n\014cgTHREE_LINE\020\010\022\031\n" +
      "\025cgTHREE_TAKE_ONE_LINE\020\t\022\031\n\025cgTHREE_TAKE" +
      "_TWO_LINE\020\n\022\026\n\022cgFOUR_TAKE_SINGLE\020\013\022\024\n\020c" +
      "gFOUR_TAKE_PAIR\020\014\022\017\n\013cgBOMB_CARD\020\r\022\017\n\013cg" +
      "KING_CARD\020\016*,\n\tMatchType\022\017\n\013defaultType\020" +
      "\000\022\016\n\nTwo_Player\020\001B\032\n\ncom.kys.pbB\014Landlor" +
      "dBaseb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_pb_landlord_UserInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pb_landlord_UserInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_UserInfo_descriptor,
        new String[] { "PlayerId", "PlayerName", "PlayerPortrait", "PlayerSex", "PlayerGoldCoin", "PlayerDiamond", "PlayerWinCup", "HistoryWinCup", "VipLv", });
    internal_static_pb_landlord_RoomConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pb_landlord_RoomConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_RoomConfig_descriptor,
        new String[] { "Id", "BaseScore", "SceneType", "MinLimit", "MaxLimit", "TableFee", "LotteryCount", "LotteryType", "MaxRatio", "MinContinueLimit", "ReviveType", "HbMax", });
    internal_static_pb_landlord_SeatInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pb_landlord_SeatInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_SeatInfo_descriptor,
        new String[] { "Userinfo", "SeatID", });
    internal_static_pb_landlord_RecoverPlayerInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_pb_landlord_RecoverPlayerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_RecoverPlayerInfo_descriptor,
        new String[] { "SeatID", "RemainCards", "LastCards", "IsAuto", "IsPlay", "CatchPoint", });
    internal_static_pb_landlord_PlayerSettle_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_pb_landlord_PlayerSettle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_PlayerSettle_descriptor,
        new String[] { "SeatId", "ScoreChange", "ScoreType", "AllChip", "AllDiamond", "RemainCards", "States", });
    internal_static_pb_landlord_MatchInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_pb_landlord_MatchInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_MatchInfo_descriptor,
        new String[] { "MatchId", "MatchType", "Round", "Total", "Join", "Cost", "WinnerType", "WinnerNum", "MatchTime", "CostType", "EnterLimit", "IsJoin", });
    internal_static_pb_landlord_MatchAward_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_pb_landlord_MatchAward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_MatchAward_descriptor,
        new String[] { "RankStart", "RankEnd", "AwardType", "AwardNum", });
    internal_static_pb_landlord_MatchRecord_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_pb_landlord_MatchRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_MatchRecord_descriptor,
        new String[] { "MatchId", "Time", "WinnerType", "WinnerNum", "Portrait", "PlayerName", });
    internal_static_pb_landlord_OwnHistory_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_pb_landlord_OwnHistory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_OwnHistory_descriptor,
        new String[] { "MatchId", "Time", "WinnerType", "WinnerNum", "MineRank", });
    internal_static_pb_landlord_MatchJoin_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_pb_landlord_MatchJoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_MatchJoin_descriptor,
        new String[] { "MatchId", "Join", });
    internal_static_pb_landlord_PlayerScore_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_pb_landlord_PlayerScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_PlayerScore_descriptor,
        new String[] { "PlayerId", "PlayerPortrait", "Score", "Rank", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
