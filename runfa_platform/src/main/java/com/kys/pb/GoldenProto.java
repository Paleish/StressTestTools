// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: golden.proto

package com.kys.pb;

public final class GoldenProto {
  private GoldenProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   ** 梦想金花消息号 
   * </pre>
   *
   * Protobuf enum {@code pb_golden.MSG}
   */
  public enum MSG
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEFAULT_GOLDEN = 0;</code>
     */
    DEFAULT_GOLDEN(0),
    /**
     * <pre>
     ** 金花大厅-获取房间信息列表 
     * </pre>
     *
     * <code>GetRoomInfo = 1;</code>
     */
    GetRoomInfo(1),
    /**
     * <pre>
     ** 金花游戏-加入桌子 
     * </pre>
     *
     * <code>JoinRoom = 101;</code>
     */
    JoinRoom(101),
    /**
     * <pre>
     ** 金花游戏-退出桌子 
     * </pre>
     *
     * <code>ExitRoom = 102;</code>
     */
    ExitRoom(102),
    /**
     * <pre>
     ** 金花游戏-玩家表态 
     * </pre>
     *
     * <code>Bet = 103;</code>
     */
    Bet(103),
    /**
     * <pre>
     ** 玩家加入推送 
     * </pre>
     *
     * <code>B_AddPlayer = 1001;</code>
     */
    B_AddPlayer(1001),
    /**
     * <pre>
     ** 玩家离开推送 
     * </pre>
     *
     * <code>B_ExitPlayer = 1002;</code>
     */
    B_ExitPlayer(1002),
    /**
     * <pre>
     ** 进入等待状态的推送 
     * </pre>
     *
     * <code>B_TableWait = 1003;</code>
     */
    B_TableWait(1003),
    /**
     * <pre>
     ** 进入准备状态的推送 
     * </pre>
     *
     * <code>B_TableReady = 1004;</code>
     */
    B_TableReady(1004),
    /**
     * <pre>
     ** 游戏开始的推送 
     * </pre>
     *
     * <code>B_TableStart = 1005;</code>
     */
    B_TableStart(1005),
    /**
     * <pre>
     ** 开始表态的推送 
     * </pre>
     *
     * <code>B_BetStart = 1006;</code>
     */
    B_BetStart(1006),
    /**
     * <pre>
     ** 表态结果的推送 
     * </pre>
     *
     * <code>B_BetEnd = 1007;</code>
     */
    B_BetEnd(1007),
    /**
     * <pre>
     ** 结算消息的推送 
     * </pre>
     *
     * <code>B_TableSettle = 1008;</code>
     */
    B_TableSettle(1008),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DEFAULT_GOLDEN = 0;</code>
     */
    public static final int DEFAULT_GOLDEN_VALUE = 0;
    /**
     * <pre>
     ** 金花大厅-获取房间信息列表 
     * </pre>
     *
     * <code>GetRoomInfo = 1;</code>
     */
    public static final int GetRoomInfo_VALUE = 1;
    /**
     * <pre>
     ** 金花游戏-加入桌子 
     * </pre>
     *
     * <code>JoinRoom = 101;</code>
     */
    public static final int JoinRoom_VALUE = 101;
    /**
     * <pre>
     ** 金花游戏-退出桌子 
     * </pre>
     *
     * <code>ExitRoom = 102;</code>
     */
    public static final int ExitRoom_VALUE = 102;
    /**
     * <pre>
     ** 金花游戏-玩家表态 
     * </pre>
     *
     * <code>Bet = 103;</code>
     */
    public static final int Bet_VALUE = 103;
    /**
     * <pre>
     ** 玩家加入推送 
     * </pre>
     *
     * <code>B_AddPlayer = 1001;</code>
     */
    public static final int B_AddPlayer_VALUE = 1001;
    /**
     * <pre>
     ** 玩家离开推送 
     * </pre>
     *
     * <code>B_ExitPlayer = 1002;</code>
     */
    public static final int B_ExitPlayer_VALUE = 1002;
    /**
     * <pre>
     ** 进入等待状态的推送 
     * </pre>
     *
     * <code>B_TableWait = 1003;</code>
     */
    public static final int B_TableWait_VALUE = 1003;
    /**
     * <pre>
     ** 进入准备状态的推送 
     * </pre>
     *
     * <code>B_TableReady = 1004;</code>
     */
    public static final int B_TableReady_VALUE = 1004;
    /**
     * <pre>
     ** 游戏开始的推送 
     * </pre>
     *
     * <code>B_TableStart = 1005;</code>
     */
    public static final int B_TableStart_VALUE = 1005;
    /**
     * <pre>
     ** 开始表态的推送 
     * </pre>
     *
     * <code>B_BetStart = 1006;</code>
     */
    public static final int B_BetStart_VALUE = 1006;
    /**
     * <pre>
     ** 表态结果的推送 
     * </pre>
     *
     * <code>B_BetEnd = 1007;</code>
     */
    public static final int B_BetEnd_VALUE = 1007;
    /**
     * <pre>
     ** 结算消息的推送 
     * </pre>
     *
     * <code>B_TableSettle = 1008;</code>
     */
    public static final int B_TableSettle_VALUE = 1008;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MSG valueOf(int value) {
      return forNumber(value);
    }

    public static MSG forNumber(int value) {
      switch (value) {
        case 0: return DEFAULT_GOLDEN;
        case 1: return GetRoomInfo;
        case 101: return JoinRoom;
        case 102: return ExitRoom;
        case 103: return Bet;
        case 1001: return B_AddPlayer;
        case 1002: return B_ExitPlayer;
        case 1003: return B_TableWait;
        case 1004: return B_TableReady;
        case 1005: return B_TableStart;
        case 1006: return B_BetStart;
        case 1007: return B_BetEnd;
        case 1008: return B_TableSettle;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MSG>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MSG> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MSG>() {
            public MSG findValueByNumber(int number) {
              return MSG.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return GoldenProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final MSG[] VALUES = values();

    public static MSG valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MSG(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_golden.MSG)
  }

  /**
   * <pre>
   ** 桌子状态 
   * </pre>
   *
   * Protobuf enum {@code pb_golden.TableStatus}
   */
  public enum TableStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** 占位 
     * </pre>
     *
     * <code>TSNONE = 0;</code>
     */
    TSNONE(0),
    /**
     * <pre>
     ** 匹配等待 
     * </pre>
     *
     * <code>TSWAIT = 1;</code>
     */
    TSWAIT(1),
    /**
     * <pre>
     ** 准备开局 
     * </pre>
     *
     * <code>TSREADY = 2;</code>
     */
    TSREADY(2),
    /**
     * <pre>
     ** 游戏中 
     * </pre>
     *
     * <code>TSPLAY = 3;</code>
     */
    TSPLAY(3),
    /**
     * <pre>
     ** 结算状态 
     * </pre>
     *
     * <code>TSSETTLE = 4;</code>
     */
    TSSETTLE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** 占位 
     * </pre>
     *
     * <code>TSNONE = 0;</code>
     */
    public static final int TSNONE_VALUE = 0;
    /**
     * <pre>
     ** 匹配等待 
     * </pre>
     *
     * <code>TSWAIT = 1;</code>
     */
    public static final int TSWAIT_VALUE = 1;
    /**
     * <pre>
     ** 准备开局 
     * </pre>
     *
     * <code>TSREADY = 2;</code>
     */
    public static final int TSREADY_VALUE = 2;
    /**
     * <pre>
     ** 游戏中 
     * </pre>
     *
     * <code>TSPLAY = 3;</code>
     */
    public static final int TSPLAY_VALUE = 3;
    /**
     * <pre>
     ** 结算状态 
     * </pre>
     *
     * <code>TSSETTLE = 4;</code>
     */
    public static final int TSSETTLE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TableStatus valueOf(int value) {
      return forNumber(value);
    }

    public static TableStatus forNumber(int value) {
      switch (value) {
        case 0: return TSNONE;
        case 1: return TSWAIT;
        case 2: return TSREADY;
        case 3: return TSPLAY;
        case 4: return TSSETTLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TableStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TableStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TableStatus>() {
            public TableStatus findValueByNumber(int number) {
              return TableStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return GoldenProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final TableStatus[] VALUES = values();

    public static TableStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TableStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_golden.TableStatus)
  }

  /**
   * <pre>
   ** 玩家状态 
   * </pre>
   *
   * Protobuf enum {@code pb_golden.PlayerStatus}
   */
  public enum PlayerStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PSNONE = 0;</code>
     */
    PSNONE(0),
    /**
     * <pre>
     ** 新加入的玩家 
     * </pre>
     *
     * <code>PSNEW = 1;</code>
     */
    PSNEW(1),
    /**
     * <pre>
     ** 正在玩 
     * </pre>
     *
     * <code>PSPLAY = 2;</code>
     */
    PSPLAY(2),
    /**
     * <pre>
     ** 已弃牌 
     * </pre>
     *
     * <code>PSFOLD = 3;</code>
     */
    PSFOLD(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PSNONE = 0;</code>
     */
    public static final int PSNONE_VALUE = 0;
    /**
     * <pre>
     ** 新加入的玩家 
     * </pre>
     *
     * <code>PSNEW = 1;</code>
     */
    public static final int PSNEW_VALUE = 1;
    /**
     * <pre>
     ** 正在玩 
     * </pre>
     *
     * <code>PSPLAY = 2;</code>
     */
    public static final int PSPLAY_VALUE = 2;
    /**
     * <pre>
     ** 已弃牌 
     * </pre>
     *
     * <code>PSFOLD = 3;</code>
     */
    public static final int PSFOLD_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static PlayerStatus valueOf(int value) {
      return forNumber(value);
    }

    public static PlayerStatus forNumber(int value) {
      switch (value) {
        case 0: return PSNONE;
        case 1: return PSNEW;
        case 2: return PSPLAY;
        case 3: return PSFOLD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PlayerStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PlayerStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PlayerStatus>() {
            public PlayerStatus findValueByNumber(int number) {
              return PlayerStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return GoldenProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final PlayerStatus[] VALUES = values();

    public static PlayerStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PlayerStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_golden.PlayerStatus)
  }

  /**
   * <pre>
   ** 牌型枚举 
   * </pre>
   *
   * Protobuf enum {@code pb_golden.CardType}
   */
  public enum CardType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CTNONE = 0;</code>
     */
    CTNONE(0),
    /**
     * <pre>
     ** 对子 
     * </pre>
     *
     * <code>PAIR = 1;</code>
     */
    PAIR(1),
    /**
     * <pre>
     ** 顺子 
     * </pre>
     *
     * <code>STRAIGHT = 2;</code>
     */
    STRAIGHT(2),
    /**
     * <pre>
     ** 同花 
     * </pre>
     *
     * <code>FLUSH = 3;</code>
     */
    FLUSH(3),
    /**
     * <pre>
     ** 同花顺 
     * </pre>
     *
     * <code>SF = 4;</code>
     */
    SF(4),
    /**
     * <pre>
     ** 炸弹 
     * </pre>
     *
     * <code>BOOM = 5;</code>
     */
    BOOM(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CTNONE = 0;</code>
     */
    public static final int CTNONE_VALUE = 0;
    /**
     * <pre>
     ** 对子 
     * </pre>
     *
     * <code>PAIR = 1;</code>
     */
    public static final int PAIR_VALUE = 1;
    /**
     * <pre>
     ** 顺子 
     * </pre>
     *
     * <code>STRAIGHT = 2;</code>
     */
    public static final int STRAIGHT_VALUE = 2;
    /**
     * <pre>
     ** 同花 
     * </pre>
     *
     * <code>FLUSH = 3;</code>
     */
    public static final int FLUSH_VALUE = 3;
    /**
     * <pre>
     ** 同花顺 
     * </pre>
     *
     * <code>SF = 4;</code>
     */
    public static final int SF_VALUE = 4;
    /**
     * <pre>
     ** 炸弹 
     * </pre>
     *
     * <code>BOOM = 5;</code>
     */
    public static final int BOOM_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static CardType valueOf(int value) {
      return forNumber(value);
    }

    public static CardType forNumber(int value) {
      switch (value) {
        case 0: return CTNONE;
        case 1: return PAIR;
        case 2: return STRAIGHT;
        case 3: return FLUSH;
        case 4: return SF;
        case 5: return BOOM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CardType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CardType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CardType>() {
            public CardType findValueByNumber(int number) {
              return CardType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return GoldenProto.getDescriptor().getEnumTypes().get(3);
    }

    private static final CardType[] VALUES = values();

    public static CardType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CardType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pb_golden.CardType)
  }

  public interface RoomInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_golden.RoomInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 房间类型 
     * </pre>
     *
     * <code>int32 level = 1;</code>
     */
    int getLevel();

    /**
     * <pre>
     ** 房间底分 
     * </pre>
     *
     * <code>int32 score = 2;</code>
     */
    int getScore();

    /**
     * <pre>
     ** 进入下限 
     * </pre>
     *
     * <code>int32 limit = 3;</code>
     */
    int getLimit();

    /**
     * <pre>
     ** 下注上限 
     * </pre>
     *
     * <code>int32 maxBet = 4;</code>
     */
    int getMaxBet();

    /**
     * <pre>
     ** 继续游戏的下限 
     * </pre>
     *
     * <code>int32 goOnLimit = 5;</code>
     */
    int getGoOnLimit();

    /**
     * <pre>
     ** 房间准备时间（秒） 
     * </pre>
     *
     * <code>int32 readyTime = 6;</code>
     */
    int getReadyTime();

    /**
     * <pre>
     ** 玩家表态时间（秒） 
     * </pre>
     *
     * <code>int32 betTime = 7;</code>
     */
    int getBetTime();

    /**
     * <pre>
     ** 房间名称 
     * </pre>
     *
     * <code>string name = 8;</code>
     */
    String getName();
    /**
     * <pre>
     ** 房间名称 
     * </pre>
     *
     * <code>string name = 8;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * <pre>
   ** 房间信息对象 
   * </pre>
   *
   * Protobuf type {@code pb_golden.RoomInfo}
   */
  public  static final class RoomInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_golden.RoomInfo)
      RoomInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RoomInfo.newBuilder() to construct.
    private RoomInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RoomInfo() {
      name_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RoomInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RoomInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              level_ = input.readInt32();
              break;
            }
            case 16: {

              score_ = input.readInt32();
              break;
            }
            case 24: {

              limit_ = input.readInt32();
              break;
            }
            case 32: {

              maxBet_ = input.readInt32();
              break;
            }
            case 40: {

              goOnLimit_ = input.readInt32();
              break;
            }
            case 48: {

              readyTime_ = input.readInt32();
              break;
            }
            case 56: {

              betTime_ = input.readInt32();
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GoldenProto.internal_static_pb_golden_RoomInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GoldenProto.internal_static_pb_golden_RoomInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RoomInfo.class, Builder.class);
    }

    public static final int LEVEL_FIELD_NUMBER = 1;
    private int level_;
    /**
     * <pre>
     ** 房间类型 
     * </pre>
     *
     * <code>int32 level = 1;</code>
     */
    public int getLevel() {
      return level_;
    }

    public static final int SCORE_FIELD_NUMBER = 2;
    private int score_;
    /**
     * <pre>
     ** 房间底分 
     * </pre>
     *
     * <code>int32 score = 2;</code>
     */
    public int getScore() {
      return score_;
    }

    public static final int LIMIT_FIELD_NUMBER = 3;
    private int limit_;
    /**
     * <pre>
     ** 进入下限 
     * </pre>
     *
     * <code>int32 limit = 3;</code>
     */
    public int getLimit() {
      return limit_;
    }

    public static final int MAXBET_FIELD_NUMBER = 4;
    private int maxBet_;
    /**
     * <pre>
     ** 下注上限 
     * </pre>
     *
     * <code>int32 maxBet = 4;</code>
     */
    public int getMaxBet() {
      return maxBet_;
    }

    public static final int GOONLIMIT_FIELD_NUMBER = 5;
    private int goOnLimit_;
    /**
     * <pre>
     ** 继续游戏的下限 
     * </pre>
     *
     * <code>int32 goOnLimit = 5;</code>
     */
    public int getGoOnLimit() {
      return goOnLimit_;
    }

    public static final int READYTIME_FIELD_NUMBER = 6;
    private int readyTime_;
    /**
     * <pre>
     ** 房间准备时间（秒） 
     * </pre>
     *
     * <code>int32 readyTime = 6;</code>
     */
    public int getReadyTime() {
      return readyTime_;
    }

    public static final int BETTIME_FIELD_NUMBER = 7;
    private int betTime_;
    /**
     * <pre>
     ** 玩家表态时间（秒） 
     * </pre>
     *
     * <code>int32 betTime = 7;</code>
     */
    public int getBetTime() {
      return betTime_;
    }

    public static final int NAME_FIELD_NUMBER = 8;
    private volatile Object name_;
    /**
     * <pre>
     ** 房间名称 
     * </pre>
     *
     * <code>string name = 8;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 房间名称 
     * </pre>
     *
     * <code>string name = 8;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (level_ != 0) {
        output.writeInt32(1, level_);
      }
      if (score_ != 0) {
        output.writeInt32(2, score_);
      }
      if (limit_ != 0) {
        output.writeInt32(3, limit_);
      }
      if (maxBet_ != 0) {
        output.writeInt32(4, maxBet_);
      }
      if (goOnLimit_ != 0) {
        output.writeInt32(5, goOnLimit_);
      }
      if (readyTime_ != 0) {
        output.writeInt32(6, readyTime_);
      }
      if (betTime_ != 0) {
        output.writeInt32(7, betTime_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, name_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, level_);
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, score_);
      }
      if (limit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, limit_);
      }
      if (maxBet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxBet_);
      }
      if (goOnLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, goOnLimit_);
      }
      if (readyTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, readyTime_);
      }
      if (betTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, betTime_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RoomInfo)) {
        return super.equals(obj);
      }
      RoomInfo other = (RoomInfo) obj;

      if (getLevel()
          != other.getLevel()) return false;
      if (getScore()
          != other.getScore()) return false;
      if (getLimit()
          != other.getLimit()) return false;
      if (getMaxBet()
          != other.getMaxBet()) return false;
      if (getGoOnLimit()
          != other.getGoOnLimit()) return false;
      if (getReadyTime()
          != other.getReadyTime()) return false;
      if (getBetTime()
          != other.getBetTime()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (37 * hash) + LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getLimit();
      hash = (37 * hash) + MAXBET_FIELD_NUMBER;
      hash = (53 * hash) + getMaxBet();
      hash = (37 * hash) + GOONLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getGoOnLimit();
      hash = (37 * hash) + READYTIME_FIELD_NUMBER;
      hash = (53 * hash) + getReadyTime();
      hash = (37 * hash) + BETTIME_FIELD_NUMBER;
      hash = (53 * hash) + getBetTime();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RoomInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RoomInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RoomInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RoomInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RoomInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 房间信息对象 
     * </pre>
     *
     * Protobuf type {@code pb_golden.RoomInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_golden.RoomInfo)
        RoomInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GoldenProto.internal_static_pb_golden_RoomInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GoldenProto.internal_static_pb_golden_RoomInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RoomInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.GoldenProto.RoomInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        level_ = 0;

        score_ = 0;

        limit_ = 0;

        maxBet_ = 0;

        goOnLimit_ = 0;

        readyTime_ = 0;

        betTime_ = 0;

        name_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GoldenProto.internal_static_pb_golden_RoomInfo_descriptor;
      }

      @Override
      public RoomInfo getDefaultInstanceForType() {
        return RoomInfo.getDefaultInstance();
      }

      @Override
      public RoomInfo build() {
        RoomInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RoomInfo buildPartial() {
        RoomInfo result = new RoomInfo(this);
        result.level_ = level_;
        result.score_ = score_;
        result.limit_ = limit_;
        result.maxBet_ = maxBet_;
        result.goOnLimit_ = goOnLimit_;
        result.readyTime_ = readyTime_;
        result.betTime_ = betTime_;
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RoomInfo) {
          return mergeFrom((RoomInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RoomInfo other) {
        if (other == RoomInfo.getDefaultInstance()) return this;
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        if (other.getLimit() != 0) {
          setLimit(other.getLimit());
        }
        if (other.getMaxBet() != 0) {
          setMaxBet(other.getMaxBet());
        }
        if (other.getGoOnLimit() != 0) {
          setGoOnLimit(other.getGoOnLimit());
        }
        if (other.getReadyTime() != 0) {
          setReadyTime(other.getReadyTime());
        }
        if (other.getBetTime() != 0) {
          setBetTime(other.getBetTime());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RoomInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RoomInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       ** 房间类型 
       * </pre>
       *
       * <code>int32 level = 1;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       ** 房间类型 
       * </pre>
       *
       * <code>int32 level = 1;</code>
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 房间类型 
       * </pre>
       *
       * <code>int32 level = 1;</code>
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <pre>
       ** 房间底分 
       * </pre>
       *
       * <code>int32 score = 2;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <pre>
       ** 房间底分 
       * </pre>
       *
       * <code>int32 score = 2;</code>
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 房间底分 
       * </pre>
       *
       * <code>int32 score = 2;</code>
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }

      private int limit_ ;
      /**
       * <pre>
       ** 进入下限 
       * </pre>
       *
       * <code>int32 limit = 3;</code>
       */
      public int getLimit() {
        return limit_;
      }
      /**
       * <pre>
       ** 进入下限 
       * </pre>
       *
       * <code>int32 limit = 3;</code>
       */
      public Builder setLimit(int value) {
        
        limit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 进入下限 
       * </pre>
       *
       * <code>int32 limit = 3;</code>
       */
      public Builder clearLimit() {
        
        limit_ = 0;
        onChanged();
        return this;
      }

      private int maxBet_ ;
      /**
       * <pre>
       ** 下注上限 
       * </pre>
       *
       * <code>int32 maxBet = 4;</code>
       */
      public int getMaxBet() {
        return maxBet_;
      }
      /**
       * <pre>
       ** 下注上限 
       * </pre>
       *
       * <code>int32 maxBet = 4;</code>
       */
      public Builder setMaxBet(int value) {
        
        maxBet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 下注上限 
       * </pre>
       *
       * <code>int32 maxBet = 4;</code>
       */
      public Builder clearMaxBet() {
        
        maxBet_ = 0;
        onChanged();
        return this;
      }

      private int goOnLimit_ ;
      /**
       * <pre>
       ** 继续游戏的下限 
       * </pre>
       *
       * <code>int32 goOnLimit = 5;</code>
       */
      public int getGoOnLimit() {
        return goOnLimit_;
      }
      /**
       * <pre>
       ** 继续游戏的下限 
       * </pre>
       *
       * <code>int32 goOnLimit = 5;</code>
       */
      public Builder setGoOnLimit(int value) {
        
        goOnLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 继续游戏的下限 
       * </pre>
       *
       * <code>int32 goOnLimit = 5;</code>
       */
      public Builder clearGoOnLimit() {
        
        goOnLimit_ = 0;
        onChanged();
        return this;
      }

      private int readyTime_ ;
      /**
       * <pre>
       ** 房间准备时间（秒） 
       * </pre>
       *
       * <code>int32 readyTime = 6;</code>
       */
      public int getReadyTime() {
        return readyTime_;
      }
      /**
       * <pre>
       ** 房间准备时间（秒） 
       * </pre>
       *
       * <code>int32 readyTime = 6;</code>
       */
      public Builder setReadyTime(int value) {
        
        readyTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 房间准备时间（秒） 
       * </pre>
       *
       * <code>int32 readyTime = 6;</code>
       */
      public Builder clearReadyTime() {
        
        readyTime_ = 0;
        onChanged();
        return this;
      }

      private int betTime_ ;
      /**
       * <pre>
       ** 玩家表态时间（秒） 
       * </pre>
       *
       * <code>int32 betTime = 7;</code>
       */
      public int getBetTime() {
        return betTime_;
      }
      /**
       * <pre>
       ** 玩家表态时间（秒） 
       * </pre>
       *
       * <code>int32 betTime = 7;</code>
       */
      public Builder setBetTime(int value) {
        
        betTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家表态时间（秒） 
       * </pre>
       *
       * <code>int32 betTime = 7;</code>
       */
      public Builder clearBetTime() {
        
        betTime_ = 0;
        onChanged();
        return this;
      }

      private Object name_ = "";
      /**
       * <pre>
       ** 房间名称 
       * </pre>
       *
       * <code>string name = 8;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 房间名称 
       * </pre>
       *
       * <code>string name = 8;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 房间名称 
       * </pre>
       *
       * <code>string name = 8;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 房间名称 
       * </pre>
       *
       * <code>string name = 8;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 房间名称 
       * </pre>
       *
       * <code>string name = 8;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_golden.RoomInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_golden.RoomInfo)
    private static final RoomInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RoomInfo();
    }

    public static RoomInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoomInfo>
        PARSER = new com.google.protobuf.AbstractParser<RoomInfo>() {
      @Override
      public RoomInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RoomInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RoomInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public RoomInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SeatInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_golden.SeatInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 座位序号 
     * </pre>
     *
     * <code>int32 index = 1;</code>
     */
    int getIndex();

    /**
     * <pre>
     ** 玩家id 
     * </pre>
     *
     * <code>int32 uid = 2;</code>
     */
    int getUid();

    /**
     * <pre>
     ** 玩家身上的金币 
     * </pre>
     *
     * <code>int64 uchip = 3;</code>
     */
    long getUchip();

    /**
     * <pre>
     ** 玩家vip等级 
     * </pre>
     *
     * <code>int32 vipLv = 4;</code>
     */
    int getVipLv();

    /**
     * <pre>
     ** 玩家昵称 
     * </pre>
     *
     * <code>string nickName = 5;</code>
     */
    String getNickName();
    /**
     * <pre>
     ** 玩家昵称 
     * </pre>
     *
     * <code>string nickName = 5;</code>
     */
    com.google.protobuf.ByteString
        getNickNameBytes();

    /**
     * <pre>
     ** 头像url地址 
     * </pre>
     *
     * <code>string headUrl = 6;</code>
     */
    String getHeadUrl();
    /**
     * <pre>
     ** 头像url地址 
     * </pre>
     *
     * <code>string headUrl = 6;</code>
     */
    com.google.protobuf.ByteString
        getHeadUrlBytes();

    /**
     * <pre>
     ** 玩家当前状态 
     * </pre>
     *
     * <code>.pb_golden.PlayerStatus status = 7;</code>
     */
    int getStatusValue();
    /**
     * <pre>
     ** 玩家当前状态 
     * </pre>
     *
     * <code>.pb_golden.PlayerStatus status = 7;</code>
     */
    PlayerStatus getStatus();

    /**
     * <pre>
     ** 已经下注的总值 
     * </pre>
     *
     * <code>int32 bet = 8;</code>
     */
    int getBet();

    /**
     * <pre>
     ** 当前玩家的牌 
     * </pre>
     *
     * <code>int32 card = 9;</code>
     */
    int getCard();
  }
  /**
   * Protobuf type {@code pb_golden.SeatInfo}
   */
  public  static final class SeatInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_golden.SeatInfo)
      SeatInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SeatInfo.newBuilder() to construct.
    private SeatInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SeatInfo() {
      nickName_ = "";
      headUrl_ = "";
      status_ = 0;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SeatInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SeatInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              index_ = input.readInt32();
              break;
            }
            case 16: {

              uid_ = input.readInt32();
              break;
            }
            case 24: {

              uchip_ = input.readInt64();
              break;
            }
            case 32: {

              vipLv_ = input.readInt32();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              nickName_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              headUrl_ = s;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 64: {

              bet_ = input.readInt32();
              break;
            }
            case 72: {

              card_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GoldenProto.internal_static_pb_golden_SeatInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GoldenProto.internal_static_pb_golden_SeatInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SeatInfo.class, Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <pre>
     ** 座位序号 
     * </pre>
     *
     * <code>int32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int UID_FIELD_NUMBER = 2;
    private int uid_;
    /**
     * <pre>
     ** 玩家id 
     * </pre>
     *
     * <code>int32 uid = 2;</code>
     */
    public int getUid() {
      return uid_;
    }

    public static final int UCHIP_FIELD_NUMBER = 3;
    private long uchip_;
    /**
     * <pre>
     ** 玩家身上的金币 
     * </pre>
     *
     * <code>int64 uchip = 3;</code>
     */
    public long getUchip() {
      return uchip_;
    }

    public static final int VIPLV_FIELD_NUMBER = 4;
    private int vipLv_;
    /**
     * <pre>
     ** 玩家vip等级 
     * </pre>
     *
     * <code>int32 vipLv = 4;</code>
     */
    public int getVipLv() {
      return vipLv_;
    }

    public static final int NICKNAME_FIELD_NUMBER = 5;
    private volatile Object nickName_;
    /**
     * <pre>
     ** 玩家昵称 
     * </pre>
     *
     * <code>string nickName = 5;</code>
     */
    public String getNickName() {
      Object ref = nickName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        nickName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 玩家昵称 
     * </pre>
     *
     * <code>string nickName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNickNameBytes() {
      Object ref = nickName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        nickName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HEADURL_FIELD_NUMBER = 6;
    private volatile Object headUrl_;
    /**
     * <pre>
     ** 头像url地址 
     * </pre>
     *
     * <code>string headUrl = 6;</code>
     */
    public String getHeadUrl() {
      Object ref = headUrl_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        headUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 头像url地址 
     * </pre>
     *
     * <code>string headUrl = 6;</code>
     */
    public com.google.protobuf.ByteString
        getHeadUrlBytes() {
      Object ref = headUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        headUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 7;
    private int status_;
    /**
     * <pre>
     ** 玩家当前状态 
     * </pre>
     *
     * <code>.pb_golden.PlayerStatus status = 7;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     ** 玩家当前状态 
     * </pre>
     *
     * <code>.pb_golden.PlayerStatus status = 7;</code>
     */
    public PlayerStatus getStatus() {
      @SuppressWarnings("deprecation")
      PlayerStatus result = PlayerStatus.valueOf(status_);
      return result == null ? PlayerStatus.UNRECOGNIZED : result;
    }

    public static final int BET_FIELD_NUMBER = 8;
    private int bet_;
    /**
     * <pre>
     ** 已经下注的总值 
     * </pre>
     *
     * <code>int32 bet = 8;</code>
     */
    public int getBet() {
      return bet_;
    }

    public static final int CARD_FIELD_NUMBER = 9;
    private int card_;
    /**
     * <pre>
     ** 当前玩家的牌 
     * </pre>
     *
     * <code>int32 card = 9;</code>
     */
    public int getCard() {
      return card_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0) {
        output.writeInt32(1, index_);
      }
      if (uid_ != 0) {
        output.writeInt32(2, uid_);
      }
      if (uchip_ != 0L) {
        output.writeInt64(3, uchip_);
      }
      if (vipLv_ != 0) {
        output.writeInt32(4, vipLv_);
      }
      if (!getNickNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, nickName_);
      }
      if (!getHeadUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, headUrl_);
      }
      if (status_ != PlayerStatus.PSNONE.getNumber()) {
        output.writeEnum(7, status_);
      }
      if (bet_ != 0) {
        output.writeInt32(8, bet_);
      }
      if (card_ != 0) {
        output.writeInt32(9, card_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (uid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, uid_);
      }
      if (uchip_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, uchip_);
      }
      if (vipLv_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, vipLv_);
      }
      if (!getNickNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, nickName_);
      }
      if (!getHeadUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, headUrl_);
      }
      if (status_ != PlayerStatus.PSNONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, status_);
      }
      if (bet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, bet_);
      }
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, card_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SeatInfo)) {
        return super.equals(obj);
      }
      SeatInfo other = (SeatInfo) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (getUid()
          != other.getUid()) return false;
      if (getUchip()
          != other.getUchip()) return false;
      if (getVipLv()
          != other.getVipLv()) return false;
      if (!getNickName()
          .equals(other.getNickName())) return false;
      if (!getHeadUrl()
          .equals(other.getHeadUrl())) return false;
      if (status_ != other.status_) return false;
      if (getBet()
          != other.getBet()) return false;
      if (getCard()
          != other.getCard()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + getUid();
      hash = (37 * hash) + UCHIP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUchip());
      hash = (37 * hash) + VIPLV_FIELD_NUMBER;
      hash = (53 * hash) + getVipLv();
      hash = (37 * hash) + NICKNAME_FIELD_NUMBER;
      hash = (53 * hash) + getNickName().hashCode();
      hash = (37 * hash) + HEADURL_FIELD_NUMBER;
      hash = (53 * hash) + getHeadUrl().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + BET_FIELD_NUMBER;
      hash = (53 * hash) + getBet();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SeatInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SeatInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SeatInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SeatInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SeatInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SeatInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SeatInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SeatInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SeatInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SeatInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SeatInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SeatInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SeatInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pb_golden.SeatInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_golden.SeatInfo)
        SeatInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GoldenProto.internal_static_pb_golden_SeatInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GoldenProto.internal_static_pb_golden_SeatInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SeatInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.GoldenProto.SeatInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        index_ = 0;

        uid_ = 0;

        uchip_ = 0L;

        vipLv_ = 0;

        nickName_ = "";

        headUrl_ = "";

        status_ = 0;

        bet_ = 0;

        card_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GoldenProto.internal_static_pb_golden_SeatInfo_descriptor;
      }

      @Override
      public SeatInfo getDefaultInstanceForType() {
        return SeatInfo.getDefaultInstance();
      }

      @Override
      public SeatInfo build() {
        SeatInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SeatInfo buildPartial() {
        SeatInfo result = new SeatInfo(this);
        result.index_ = index_;
        result.uid_ = uid_;
        result.uchip_ = uchip_;
        result.vipLv_ = vipLv_;
        result.nickName_ = nickName_;
        result.headUrl_ = headUrl_;
        result.status_ = status_;
        result.bet_ = bet_;
        result.card_ = card_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SeatInfo) {
          return mergeFrom((SeatInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SeatInfo other) {
        if (other == SeatInfo.getDefaultInstance()) return this;
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getUid() != 0) {
          setUid(other.getUid());
        }
        if (other.getUchip() != 0L) {
          setUchip(other.getUchip());
        }
        if (other.getVipLv() != 0) {
          setVipLv(other.getVipLv());
        }
        if (!other.getNickName().isEmpty()) {
          nickName_ = other.nickName_;
          onChanged();
        }
        if (!other.getHeadUrl().isEmpty()) {
          headUrl_ = other.headUrl_;
          onChanged();
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.getBet() != 0) {
          setBet(other.getBet());
        }
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SeatInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SeatInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 座位序号 
       * </pre>
       *
       * <code>int32 index = 1;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 座位序号 
       * </pre>
       *
       * <code>int32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 座位序号 
       * </pre>
       *
       * <code>int32 index = 1;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private int uid_ ;
      /**
       * <pre>
       ** 玩家id 
       * </pre>
       *
       * <code>int32 uid = 2;</code>
       */
      public int getUid() {
        return uid_;
      }
      /**
       * <pre>
       ** 玩家id 
       * </pre>
       *
       * <code>int32 uid = 2;</code>
       */
      public Builder setUid(int value) {
        
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家id 
       * </pre>
       *
       * <code>int32 uid = 2;</code>
       */
      public Builder clearUid() {
        
        uid_ = 0;
        onChanged();
        return this;
      }

      private long uchip_ ;
      /**
       * <pre>
       ** 玩家身上的金币 
       * </pre>
       *
       * <code>int64 uchip = 3;</code>
       */
      public long getUchip() {
        return uchip_;
      }
      /**
       * <pre>
       ** 玩家身上的金币 
       * </pre>
       *
       * <code>int64 uchip = 3;</code>
       */
      public Builder setUchip(long value) {
        
        uchip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家身上的金币 
       * </pre>
       *
       * <code>int64 uchip = 3;</code>
       */
      public Builder clearUchip() {
        
        uchip_ = 0L;
        onChanged();
        return this;
      }

      private int vipLv_ ;
      /**
       * <pre>
       ** 玩家vip等级 
       * </pre>
       *
       * <code>int32 vipLv = 4;</code>
       */
      public int getVipLv() {
        return vipLv_;
      }
      /**
       * <pre>
       ** 玩家vip等级 
       * </pre>
       *
       * <code>int32 vipLv = 4;</code>
       */
      public Builder setVipLv(int value) {
        
        vipLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家vip等级 
       * </pre>
       *
       * <code>int32 vipLv = 4;</code>
       */
      public Builder clearVipLv() {
        
        vipLv_ = 0;
        onChanged();
        return this;
      }

      private Object nickName_ = "";
      /**
       * <pre>
       ** 玩家昵称 
       * </pre>
       *
       * <code>string nickName = 5;</code>
       */
      public String getNickName() {
        Object ref = nickName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          nickName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 玩家昵称 
       * </pre>
       *
       * <code>string nickName = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNickNameBytes() {
        Object ref = nickName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          nickName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 玩家昵称 
       * </pre>
       *
       * <code>string nickName = 5;</code>
       */
      public Builder setNickName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nickName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家昵称 
       * </pre>
       *
       * <code>string nickName = 5;</code>
       */
      public Builder clearNickName() {
        
        nickName_ = getDefaultInstance().getNickName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家昵称 
       * </pre>
       *
       * <code>string nickName = 5;</code>
       */
      public Builder setNickNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nickName_ = value;
        onChanged();
        return this;
      }

      private Object headUrl_ = "";
      /**
       * <pre>
       ** 头像url地址 
       * </pre>
       *
       * <code>string headUrl = 6;</code>
       */
      public String getHeadUrl() {
        Object ref = headUrl_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          headUrl_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 头像url地址 
       * </pre>
       *
       * <code>string headUrl = 6;</code>
       */
      public com.google.protobuf.ByteString
          getHeadUrlBytes() {
        Object ref = headUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          headUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 头像url地址 
       * </pre>
       *
       * <code>string headUrl = 6;</code>
       */
      public Builder setHeadUrl(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        headUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 头像url地址 
       * </pre>
       *
       * <code>string headUrl = 6;</code>
       */
      public Builder clearHeadUrl() {
        
        headUrl_ = getDefaultInstance().getHeadUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 头像url地址 
       * </pre>
       *
       * <code>string headUrl = 6;</code>
       */
      public Builder setHeadUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        headUrl_ = value;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <pre>
       ** 玩家当前状态 
       * </pre>
       *
       * <code>.pb_golden.PlayerStatus status = 7;</code>
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <pre>
       ** 玩家当前状态 
       * </pre>
       *
       * <code>.pb_golden.PlayerStatus status = 7;</code>
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家当前状态 
       * </pre>
       *
       * <code>.pb_golden.PlayerStatus status = 7;</code>
       */
      public PlayerStatus getStatus() {
        @SuppressWarnings("deprecation")
        PlayerStatus result = PlayerStatus.valueOf(status_);
        return result == null ? PlayerStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       ** 玩家当前状态 
       * </pre>
       *
       * <code>.pb_golden.PlayerStatus status = 7;</code>
       */
      public Builder setStatus(PlayerStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家当前状态 
       * </pre>
       *
       * <code>.pb_golden.PlayerStatus status = 7;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private int bet_ ;
      /**
       * <pre>
       ** 已经下注的总值 
       * </pre>
       *
       * <code>int32 bet = 8;</code>
       */
      public int getBet() {
        return bet_;
      }
      /**
       * <pre>
       ** 已经下注的总值 
       * </pre>
       *
       * <code>int32 bet = 8;</code>
       */
      public Builder setBet(int value) {
        
        bet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 已经下注的总值 
       * </pre>
       *
       * <code>int32 bet = 8;</code>
       */
      public Builder clearBet() {
        
        bet_ = 0;
        onChanged();
        return this;
      }

      private int card_ ;
      /**
       * <pre>
       ** 当前玩家的牌 
       * </pre>
       *
       * <code>int32 card = 9;</code>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <pre>
       ** 当前玩家的牌 
       * </pre>
       *
       * <code>int32 card = 9;</code>
       */
      public Builder setCard(int value) {
        
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前玩家的牌 
       * </pre>
       *
       * <code>int32 card = 9;</code>
       */
      public Builder clearCard() {
        
        card_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_golden.SeatInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_golden.SeatInfo)
    private static final SeatInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SeatInfo();
    }

    public static SeatInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SeatInfo>
        PARSER = new com.google.protobuf.AbstractParser<SeatInfo>() {
      @Override
      public SeatInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SeatInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SeatInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SeatInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public SeatInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TableInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_golden.TableInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 桌子id 
     * </pre>
     *
     * <code>int32 tableId = 1;</code>
     */
    int getTableId();

    /**
     * <pre>
     ** 桌子状态 
     * </pre>
     *
     * <code>.pb_golden.TableStatus status = 2;</code>
     */
    int getStatusValue();
    /**
     * <pre>
     ** 桌子状态 
     * </pre>
     *
     * <code>.pb_golden.TableStatus status = 2;</code>
     */
    TableStatus getStatus();

    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    java.util.List<SeatInfo>
        getSeatListList();
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    SeatInfo getSeatList(int index);
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    int getSeatListCount();
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    java.util.List<? extends SeatInfoOrBuilder>
        getSeatListOrBuilderList();
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    SeatInfoOrBuilder getSeatListOrBuilder(
        int index);

    /**
     * <pre>
     ** 当前奖池 
     * </pre>
     *
     * <code>int32 totalGold = 4;</code>
     */
    int getTotalGold();

    /**
     * <pre>
     ** 公共牌 
     * </pre>
     *
     * <code>int32 shareCard = 5;</code>
     */
    int getShareCard();

    /**
     * <pre>
     ** 当前操作的座位id 
     * </pre>
     *
     * <code>int32 seatId = 6;</code>
     */
    int getSeatId();

    /**
     * <pre>
     ** 当前操作剩余的等待时间(毫秒值) 
     * </pre>
     *
     * <code>int32 waitTime = 7;</code>
     */
    int getWaitTime();

    /**
     * <pre>
     ** 当前最大下注值 
     * </pre>
     *
     * <code>int32 maxBetGold = 8;</code>
     */
    int getMaxBetGold();

    /**
     * <pre>
     ** 当前消息序号 
     * </pre>
     *
     * <code>int32 index = 9;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** 桌子对象 
   * </pre>
   *
   * Protobuf type {@code pb_golden.TableInfo}
   */
  public  static final class TableInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_golden.TableInfo)
      TableInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TableInfo.newBuilder() to construct.
    private TableInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TableInfo() {
      status_ = 0;
      seatList_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TableInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TableInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              tableId_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                seatList_ = new java.util.ArrayList<SeatInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              seatList_.add(
                  input.readMessage(SeatInfo.parser(), extensionRegistry));
              break;
            }
            case 32: {

              totalGold_ = input.readInt32();
              break;
            }
            case 40: {

              shareCard_ = input.readInt32();
              break;
            }
            case 48: {

              seatId_ = input.readInt32();
              break;
            }
            case 56: {

              waitTime_ = input.readInt32();
              break;
            }
            case 64: {

              maxBetGold_ = input.readInt32();
              break;
            }
            case 72: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          seatList_ = java.util.Collections.unmodifiableList(seatList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GoldenProto.internal_static_pb_golden_TableInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GoldenProto.internal_static_pb_golden_TableInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TableInfo.class, Builder.class);
    }

    public static final int TABLEID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <pre>
     ** 桌子id 
     * </pre>
     *
     * <code>int32 tableId = 1;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <pre>
     ** 桌子状态 
     * </pre>
     *
     * <code>.pb_golden.TableStatus status = 2;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     ** 桌子状态 
     * </pre>
     *
     * <code>.pb_golden.TableStatus status = 2;</code>
     */
    public TableStatus getStatus() {
      @SuppressWarnings("deprecation")
      TableStatus result = TableStatus.valueOf(status_);
      return result == null ? TableStatus.UNRECOGNIZED : result;
    }

    public static final int SEATLIST_FIELD_NUMBER = 3;
    private java.util.List<SeatInfo> seatList_;
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    public java.util.List<SeatInfo> getSeatListList() {
      return seatList_;
    }
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    public java.util.List<? extends SeatInfoOrBuilder>
        getSeatListOrBuilderList() {
      return seatList_;
    }
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    public int getSeatListCount() {
      return seatList_.size();
    }
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    public SeatInfo getSeatList(int index) {
      return seatList_.get(index);
    }
    /**
     * <pre>
     ** 座位列表 
     * </pre>
     *
     * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
     */
    public SeatInfoOrBuilder getSeatListOrBuilder(
        int index) {
      return seatList_.get(index);
    }

    public static final int TOTALGOLD_FIELD_NUMBER = 4;
    private int totalGold_;
    /**
     * <pre>
     ** 当前奖池 
     * </pre>
     *
     * <code>int32 totalGold = 4;</code>
     */
    public int getTotalGold() {
      return totalGold_;
    }

    public static final int SHARECARD_FIELD_NUMBER = 5;
    private int shareCard_;
    /**
     * <pre>
     ** 公共牌 
     * </pre>
     *
     * <code>int32 shareCard = 5;</code>
     */
    public int getShareCard() {
      return shareCard_;
    }

    public static final int SEATID_FIELD_NUMBER = 6;
    private int seatId_;
    /**
     * <pre>
     ** 当前操作的座位id 
     * </pre>
     *
     * <code>int32 seatId = 6;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    public static final int WAITTIME_FIELD_NUMBER = 7;
    private int waitTime_;
    /**
     * <pre>
     ** 当前操作剩余的等待时间(毫秒值) 
     * </pre>
     *
     * <code>int32 waitTime = 7;</code>
     */
    public int getWaitTime() {
      return waitTime_;
    }

    public static final int MAXBETGOLD_FIELD_NUMBER = 8;
    private int maxBetGold_;
    /**
     * <pre>
     ** 当前最大下注值 
     * </pre>
     *
     * <code>int32 maxBetGold = 8;</code>
     */
    public int getMaxBetGold() {
      return maxBetGold_;
    }

    public static final int INDEX_FIELD_NUMBER = 9;
    private int index_;
    /**
     * <pre>
     ** 当前消息序号 
     * </pre>
     *
     * <code>int32 index = 9;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableId_ != 0) {
        output.writeInt32(1, tableId_);
      }
      if (status_ != TableStatus.TSNONE.getNumber()) {
        output.writeEnum(2, status_);
      }
      for (int i = 0; i < seatList_.size(); i++) {
        output.writeMessage(3, seatList_.get(i));
      }
      if (totalGold_ != 0) {
        output.writeInt32(4, totalGold_);
      }
      if (shareCard_ != 0) {
        output.writeInt32(5, shareCard_);
      }
      if (seatId_ != 0) {
        output.writeInt32(6, seatId_);
      }
      if (waitTime_ != 0) {
        output.writeInt32(7, waitTime_);
      }
      if (maxBetGold_ != 0) {
        output.writeInt32(8, maxBetGold_);
      }
      if (index_ != 0) {
        output.writeInt32(9, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tableId_);
      }
      if (status_ != TableStatus.TSNONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_);
      }
      for (int i = 0; i < seatList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, seatList_.get(i));
      }
      if (totalGold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalGold_);
      }
      if (shareCard_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, shareCard_);
      }
      if (seatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, seatId_);
      }
      if (waitTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, waitTime_);
      }
      if (maxBetGold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, maxBetGold_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TableInfo)) {
        return super.equals(obj);
      }
      TableInfo other = (TableInfo) obj;

      if (getTableId()
          != other.getTableId()) return false;
      if (status_ != other.status_) return false;
      if (!getSeatListList()
          .equals(other.getSeatListList())) return false;
      if (getTotalGold()
          != other.getTotalGold()) return false;
      if (getShareCard()
          != other.getShareCard()) return false;
      if (getSeatId()
          != other.getSeatId()) return false;
      if (getWaitTime()
          != other.getWaitTime()) return false;
      if (getMaxBetGold()
          != other.getMaxBetGold()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLEID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      if (getSeatListCount() > 0) {
        hash = (37 * hash) + SEATLIST_FIELD_NUMBER;
        hash = (53 * hash) + getSeatListList().hashCode();
      }
      hash = (37 * hash) + TOTALGOLD_FIELD_NUMBER;
      hash = (53 * hash) + getTotalGold();
      hash = (37 * hash) + SHARECARD_FIELD_NUMBER;
      hash = (53 * hash) + getShareCard();
      hash = (37 * hash) + SEATID_FIELD_NUMBER;
      hash = (53 * hash) + getSeatId();
      hash = (37 * hash) + WAITTIME_FIELD_NUMBER;
      hash = (53 * hash) + getWaitTime();
      hash = (37 * hash) + MAXBETGOLD_FIELD_NUMBER;
      hash = (53 * hash) + getMaxBetGold();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TableInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TableInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TableInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TableInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TableInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TableInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TableInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TableInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TableInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TableInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TableInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TableInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TableInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 桌子对象 
     * </pre>
     *
     * Protobuf type {@code pb_golden.TableInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_golden.TableInfo)
        TableInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GoldenProto.internal_static_pb_golden_TableInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GoldenProto.internal_static_pb_golden_TableInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TableInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.GoldenProto.TableInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSeatListFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        tableId_ = 0;

        status_ = 0;

        if (seatListBuilder_ == null) {
          seatList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          seatListBuilder_.clear();
        }
        totalGold_ = 0;

        shareCard_ = 0;

        seatId_ = 0;

        waitTime_ = 0;

        maxBetGold_ = 0;

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GoldenProto.internal_static_pb_golden_TableInfo_descriptor;
      }

      @Override
      public TableInfo getDefaultInstanceForType() {
        return TableInfo.getDefaultInstance();
      }

      @Override
      public TableInfo build() {
        TableInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TableInfo buildPartial() {
        TableInfo result = new TableInfo(this);
        int from_bitField0_ = bitField0_;
        result.tableId_ = tableId_;
        result.status_ = status_;
        if (seatListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            seatList_ = java.util.Collections.unmodifiableList(seatList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.seatList_ = seatList_;
        } else {
          result.seatList_ = seatListBuilder_.build();
        }
        result.totalGold_ = totalGold_;
        result.shareCard_ = shareCard_;
        result.seatId_ = seatId_;
        result.waitTime_ = waitTime_;
        result.maxBetGold_ = maxBetGold_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TableInfo) {
          return mergeFrom((TableInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TableInfo other) {
        if (other == TableInfo.getDefaultInstance()) return this;
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (seatListBuilder_ == null) {
          if (!other.seatList_.isEmpty()) {
            if (seatList_.isEmpty()) {
              seatList_ = other.seatList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSeatListIsMutable();
              seatList_.addAll(other.seatList_);
            }
            onChanged();
          }
        } else {
          if (!other.seatList_.isEmpty()) {
            if (seatListBuilder_.isEmpty()) {
              seatListBuilder_.dispose();
              seatListBuilder_ = null;
              seatList_ = other.seatList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              seatListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSeatListFieldBuilder() : null;
            } else {
              seatListBuilder_.addAllMessages(other.seatList_);
            }
          }
        }
        if (other.getTotalGold() != 0) {
          setTotalGold(other.getTotalGold());
        }
        if (other.getShareCard() != 0) {
          setShareCard(other.getShareCard());
        }
        if (other.getSeatId() != 0) {
          setSeatId(other.getSeatId());
        }
        if (other.getWaitTime() != 0) {
          setWaitTime(other.getWaitTime());
        }
        if (other.getMaxBetGold() != 0) {
          setMaxBetGold(other.getMaxBetGold());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TableInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TableInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tableId_ ;
      /**
       * <pre>
       ** 桌子id 
       * </pre>
       *
       * <code>int32 tableId = 1;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       ** 桌子id 
       * </pre>
       *
       * <code>int32 tableId = 1;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 桌子id 
       * </pre>
       *
       * <code>int32 tableId = 1;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <pre>
       ** 桌子状态 
       * </pre>
       *
       * <code>.pb_golden.TableStatus status = 2;</code>
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <pre>
       ** 桌子状态 
       * </pre>
       *
       * <code>.pb_golden.TableStatus status = 2;</code>
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 桌子状态 
       * </pre>
       *
       * <code>.pb_golden.TableStatus status = 2;</code>
       */
      public TableStatus getStatus() {
        @SuppressWarnings("deprecation")
        TableStatus result = TableStatus.valueOf(status_);
        return result == null ? TableStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       ** 桌子状态 
       * </pre>
       *
       * <code>.pb_golden.TableStatus status = 2;</code>
       */
      public Builder setStatus(TableStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 桌子状态 
       * </pre>
       *
       * <code>.pb_golden.TableStatus status = 2;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<SeatInfo> seatList_ =
        java.util.Collections.emptyList();
      private void ensureSeatListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          seatList_ = new java.util.ArrayList<SeatInfo>(seatList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SeatInfo, SeatInfo.Builder, SeatInfoOrBuilder> seatListBuilder_;

      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public java.util.List<SeatInfo> getSeatListList() {
        if (seatListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(seatList_);
        } else {
          return seatListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public int getSeatListCount() {
        if (seatListBuilder_ == null) {
          return seatList_.size();
        } else {
          return seatListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public SeatInfo getSeatList(int index) {
        if (seatListBuilder_ == null) {
          return seatList_.get(index);
        } else {
          return seatListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder setSeatList(
          int index, SeatInfo value) {
        if (seatListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatListIsMutable();
          seatList_.set(index, value);
          onChanged();
        } else {
          seatListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder setSeatList(
          int index, SeatInfo.Builder builderForValue) {
        if (seatListBuilder_ == null) {
          ensureSeatListIsMutable();
          seatList_.set(index, builderForValue.build());
          onChanged();
        } else {
          seatListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder addSeatList(SeatInfo value) {
        if (seatListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatListIsMutable();
          seatList_.add(value);
          onChanged();
        } else {
          seatListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder addSeatList(
          int index, SeatInfo value) {
        if (seatListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatListIsMutable();
          seatList_.add(index, value);
          onChanged();
        } else {
          seatListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder addSeatList(
          SeatInfo.Builder builderForValue) {
        if (seatListBuilder_ == null) {
          ensureSeatListIsMutable();
          seatList_.add(builderForValue.build());
          onChanged();
        } else {
          seatListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder addSeatList(
          int index, SeatInfo.Builder builderForValue) {
        if (seatListBuilder_ == null) {
          ensureSeatListIsMutable();
          seatList_.add(index, builderForValue.build());
          onChanged();
        } else {
          seatListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder addAllSeatList(
          Iterable<? extends SeatInfo> values) {
        if (seatListBuilder_ == null) {
          ensureSeatListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, seatList_);
          onChanged();
        } else {
          seatListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder clearSeatList() {
        if (seatListBuilder_ == null) {
          seatList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          seatListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public Builder removeSeatList(int index) {
        if (seatListBuilder_ == null) {
          ensureSeatListIsMutable();
          seatList_.remove(index);
          onChanged();
        } else {
          seatListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public SeatInfo.Builder getSeatListBuilder(
          int index) {
        return getSeatListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public SeatInfoOrBuilder getSeatListOrBuilder(
          int index) {
        if (seatListBuilder_ == null) {
          return seatList_.get(index);  } else {
          return seatListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public java.util.List<? extends SeatInfoOrBuilder>
           getSeatListOrBuilderList() {
        if (seatListBuilder_ != null) {
          return seatListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(seatList_);
        }
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public SeatInfo.Builder addSeatListBuilder() {
        return getSeatListFieldBuilder().addBuilder(
            SeatInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public SeatInfo.Builder addSeatListBuilder(
          int index) {
        return getSeatListFieldBuilder().addBuilder(
            index, SeatInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 座位列表 
       * </pre>
       *
       * <code>repeated .pb_golden.SeatInfo seatList = 3;</code>
       */
      public java.util.List<SeatInfo.Builder>
           getSeatListBuilderList() {
        return getSeatListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SeatInfo, SeatInfo.Builder, SeatInfoOrBuilder>
          getSeatListFieldBuilder() {
        if (seatListBuilder_ == null) {
          seatListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SeatInfo, SeatInfo.Builder, SeatInfoOrBuilder>(
                  seatList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          seatList_ = null;
        }
        return seatListBuilder_;
      }

      private int totalGold_ ;
      /**
       * <pre>
       ** 当前奖池 
       * </pre>
       *
       * <code>int32 totalGold = 4;</code>
       */
      public int getTotalGold() {
        return totalGold_;
      }
      /**
       * <pre>
       ** 当前奖池 
       * </pre>
       *
       * <code>int32 totalGold = 4;</code>
       */
      public Builder setTotalGold(int value) {
        
        totalGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前奖池 
       * </pre>
       *
       * <code>int32 totalGold = 4;</code>
       */
      public Builder clearTotalGold() {
        
        totalGold_ = 0;
        onChanged();
        return this;
      }

      private int shareCard_ ;
      /**
       * <pre>
       ** 公共牌 
       * </pre>
       *
       * <code>int32 shareCard = 5;</code>
       */
      public int getShareCard() {
        return shareCard_;
      }
      /**
       * <pre>
       ** 公共牌 
       * </pre>
       *
       * <code>int32 shareCard = 5;</code>
       */
      public Builder setShareCard(int value) {
        
        shareCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 公共牌 
       * </pre>
       *
       * <code>int32 shareCard = 5;</code>
       */
      public Builder clearShareCard() {
        
        shareCard_ = 0;
        onChanged();
        return this;
      }

      private int seatId_ ;
      /**
       * <pre>
       ** 当前操作的座位id 
       * </pre>
       *
       * <code>int32 seatId = 6;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <pre>
       ** 当前操作的座位id 
       * </pre>
       *
       * <code>int32 seatId = 6;</code>
       */
      public Builder setSeatId(int value) {
        
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前操作的座位id 
       * </pre>
       *
       * <code>int32 seatId = 6;</code>
       */
      public Builder clearSeatId() {
        
        seatId_ = 0;
        onChanged();
        return this;
      }

      private int waitTime_ ;
      /**
       * <pre>
       ** 当前操作剩余的等待时间(毫秒值) 
       * </pre>
       *
       * <code>int32 waitTime = 7;</code>
       */
      public int getWaitTime() {
        return waitTime_;
      }
      /**
       * <pre>
       ** 当前操作剩余的等待时间(毫秒值) 
       * </pre>
       *
       * <code>int32 waitTime = 7;</code>
       */
      public Builder setWaitTime(int value) {
        
        waitTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前操作剩余的等待时间(毫秒值) 
       * </pre>
       *
       * <code>int32 waitTime = 7;</code>
       */
      public Builder clearWaitTime() {
        
        waitTime_ = 0;
        onChanged();
        return this;
      }

      private int maxBetGold_ ;
      /**
       * <pre>
       ** 当前最大下注值 
       * </pre>
       *
       * <code>int32 maxBetGold = 8;</code>
       */
      public int getMaxBetGold() {
        return maxBetGold_;
      }
      /**
       * <pre>
       ** 当前最大下注值 
       * </pre>
       *
       * <code>int32 maxBetGold = 8;</code>
       */
      public Builder setMaxBetGold(int value) {
        
        maxBetGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前最大下注值 
       * </pre>
       *
       * <code>int32 maxBetGold = 8;</code>
       */
      public Builder clearMaxBetGold() {
        
        maxBetGold_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前消息序号 
       * </pre>
       *
       * <code>int32 index = 9;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前消息序号 
       * </pre>
       *
       * <code>int32 index = 9;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前消息序号 
       * </pre>
       *
       * <code>int32 index = 9;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_golden.TableInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_golden.TableInfo)
    private static final TableInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TableInfo();
    }

    public static TableInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TableInfo>
        PARSER = new com.google.protobuf.AbstractParser<TableInfo>() {
      @Override
      public TableInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TableInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TableInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public TableInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_golden_RoomInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_golden_RoomInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_golden_SeatInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_golden_SeatInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_golden_TableInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_golden_TableInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014golden.proto\022\tpb_golden\"\214\001\n\010RoomInfo\022\r" +
      "\n\005level\030\001 \001(\005\022\r\n\005score\030\002 \001(\005\022\r\n\005limit\030\003 " +
      "\001(\005\022\016\n\006maxBet\030\004 \001(\005\022\021\n\tgoOnLimit\030\005 \001(\005\022\021" +
      "\n\treadyTime\030\006 \001(\005\022\017\n\007betTime\030\007 \001(\005\022\014\n\004na" +
      "me\030\010 \001(\t\"\253\001\n\010SeatInfo\022\r\n\005index\030\001 \001(\005\022\013\n\003" +
      "uid\030\002 \001(\005\022\r\n\005uchip\030\003 \001(\003\022\r\n\005vipLv\030\004 \001(\005\022" +
      "\020\n\010nickName\030\005 \001(\t\022\017\n\007headUrl\030\006 \001(\t\022\'\n\006st" +
      "atus\030\007 \001(\0162\027.pb_golden.PlayerStatus\022\013\n\003b" +
      "et\030\010 \001(\005\022\014\n\004card\030\t \001(\005\"\326\001\n\tTableInfo\022\017\n\007" +
      "tableId\030\001 \001(\005\022&\n\006status\030\002 \001(\0162\026.pb_golde" +
      "n.TableStatus\022%\n\010seatList\030\003 \003(\0132\023.pb_gol" +
      "den.SeatInfo\022\021\n\ttotalGold\030\004 \001(\005\022\021\n\tshare" +
      "Card\030\005 \001(\005\022\016\n\006seatId\030\006 \001(\005\022\020\n\010waitTime\030\007" +
      " \001(\005\022\022\n\nmaxBetGold\030\010 \001(\005\022\r\n\005index\030\t \001(\005*" +
      "\340\001\n\003MSG\022\022\n\016DEFAULT_GOLDEN\020\000\022\017\n\013GetRoomIn" +
      "fo\020\001\022\014\n\010JoinRoom\020e\022\014\n\010ExitRoom\020f\022\007\n\003Bet\020" +
      "g\022\020\n\013B_AddPlayer\020\351\007\022\021\n\014B_ExitPlayer\020\352\007\022\020" +
      "\n\013B_TableWait\020\353\007\022\021\n\014B_TableReady\020\354\007\022\021\n\014B" +
      "_TableStart\020\355\007\022\017\n\nB_BetStart\020\356\007\022\r\n\010B_Bet" +
      "End\020\357\007\022\022\n\rB_TableSettle\020\360\007*L\n\013TableStatu" +
      "s\022\n\n\006TSNONE\020\000\022\n\n\006TSWAIT\020\001\022\013\n\007TSREADY\020\002\022\n" +
      "\n\006TSPLAY\020\003\022\014\n\010TSSETTLE\020\004*=\n\014PlayerStatus" +
      "\022\n\n\006PSNONE\020\000\022\t\n\005PSNEW\020\001\022\n\n\006PSPLAY\020\002\022\n\n\006P" +
      "SFOLD\020\003*K\n\010CardType\022\n\n\006CTNONE\020\000\022\010\n\004PAIR\020" +
      "\001\022\014\n\010STRAIGHT\020\002\022\t\n\005FLUSH\020\003\022\006\n\002SF\020\004\022\010\n\004BO" +
      "OM\020\005B\031\n\ncom.kys.pbB\013GoldenProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_pb_golden_RoomInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pb_golden_RoomInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_golden_RoomInfo_descriptor,
        new String[] { "Level", "Score", "Limit", "MaxBet", "GoOnLimit", "ReadyTime", "BetTime", "Name", });
    internal_static_pb_golden_SeatInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pb_golden_SeatInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_golden_SeatInfo_descriptor,
        new String[] { "Index", "Uid", "Uchip", "VipLv", "NickName", "HeadUrl", "Status", "Bet", "Card", });
    internal_static_pb_golden_TableInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pb_golden_TableInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_golden_TableInfo_descriptor,
        new String[] { "TableId", "Status", "SeatList", "TotalGold", "ShareCard", "SeatId", "WaitTime", "MaxBetGold", "Index", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
