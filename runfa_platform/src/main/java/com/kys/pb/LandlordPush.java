// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: landlord_p.proto

package com.kys.pb;

public final class LandlordPush {
  private LandlordPush() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface P_RoomIdUrlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_RoomIdUrl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 返回快速匹配的玩家房间号 
     * </pre>
     *
     * <code>int32 roomId = 1;</code>
     */
    int getRoomId();

    /**
     * <pre>
     ** 游戏服务器ip 
     * </pre>
     *
     * <code>string url = 2;</code>
     */
    String getUrl();
    /**
     * <pre>
     ** 游戏服务器ip 
     * </pre>
     *
     * <code>string url = 2;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();
  }
  /**
   * <pre>
   ** Push 玩家应该加入的房间号和url 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_RoomIdUrl}
   */
  public  static final class P_RoomIdUrl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_RoomIdUrl)
      P_RoomIdUrlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_RoomIdUrl.newBuilder() to construct.
    private P_RoomIdUrl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_RoomIdUrl() {
      url_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_RoomIdUrl();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_RoomIdUrl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              roomId_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              url_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_RoomIdUrl_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_RoomIdUrl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_RoomIdUrl.class, Builder.class);
    }

    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <pre>
     ** 返回快速匹配的玩家房间号 
     * </pre>
     *
     * <code>int32 roomId = 1;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    public static final int URL_FIELD_NUMBER = 2;
    private volatile Object url_;
    /**
     * <pre>
     ** 游戏服务器ip 
     * </pre>
     *
     * <code>string url = 2;</code>
     */
    public String getUrl() {
      Object ref = url_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        url_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 游戏服务器ip 
     * </pre>
     *
     * <code>string url = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      Object ref = url_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (roomId_ != 0) {
        output.writeInt32(1, roomId_);
      }
      if (!getUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, url_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (roomId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      if (!getUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, url_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_RoomIdUrl)) {
        return super.equals(obj);
      }
      P_RoomIdUrl other = (P_RoomIdUrl) obj;

      if (getRoomId()
          != other.getRoomId()) return false;
      if (!getUrl()
          .equals(other.getUrl())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId();
      hash = (37 * hash) + URL_FIELD_NUMBER;
      hash = (53 * hash) + getUrl().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_RoomIdUrl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_RoomIdUrl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_RoomIdUrl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_RoomIdUrl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_RoomIdUrl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_RoomIdUrl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_RoomIdUrl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_RoomIdUrl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_RoomIdUrl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_RoomIdUrl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_RoomIdUrl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_RoomIdUrl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_RoomIdUrl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 玩家应该加入的房间号和url 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_RoomIdUrl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_RoomIdUrl)
        P_RoomIdUrlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_RoomIdUrl_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_RoomIdUrl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_RoomIdUrl.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_RoomIdUrl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        roomId_ = 0;

        url_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_RoomIdUrl_descriptor;
      }

      @Override
      public P_RoomIdUrl getDefaultInstanceForType() {
        return P_RoomIdUrl.getDefaultInstance();
      }

      @Override
      public P_RoomIdUrl build() {
        P_RoomIdUrl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_RoomIdUrl buildPartial() {
        P_RoomIdUrl result = new P_RoomIdUrl(this);
        result.roomId_ = roomId_;
        result.url_ = url_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_RoomIdUrl) {
          return mergeFrom((P_RoomIdUrl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_RoomIdUrl other) {
        if (other == P_RoomIdUrl.getDefaultInstance()) return this;
        if (other.getRoomId() != 0) {
          setRoomId(other.getRoomId());
        }
        if (!other.getUrl().isEmpty()) {
          url_ = other.url_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_RoomIdUrl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_RoomIdUrl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int roomId_ ;
      /**
       * <pre>
       ** 返回快速匹配的玩家房间号 
       * </pre>
       *
       * <code>int32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <pre>
       ** 返回快速匹配的玩家房间号 
       * </pre>
       *
       * <code>int32 roomId = 1;</code>
       */
      public Builder setRoomId(int value) {
        
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 返回快速匹配的玩家房间号 
       * </pre>
       *
       * <code>int32 roomId = 1;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = 0;
        onChanged();
        return this;
      }

      private Object url_ = "";
      /**
       * <pre>
       ** 游戏服务器ip 
       * </pre>
       *
       * <code>string url = 2;</code>
       */
      public String getUrl() {
        Object ref = url_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          url_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 游戏服务器ip 
       * </pre>
       *
       * <code>string url = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 游戏服务器ip 
       * </pre>
       *
       * <code>string url = 2;</code>
       */
      public Builder setUrl(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        url_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 游戏服务器ip 
       * </pre>
       *
       * <code>string url = 2;</code>
       */
      public Builder clearUrl() {
        
        url_ = getDefaultInstance().getUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 游戏服务器ip 
       * </pre>
       *
       * <code>string url = 2;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        url_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_RoomIdUrl)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_RoomIdUrl)
    private static final P_RoomIdUrl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_RoomIdUrl();
    }

    public static P_RoomIdUrl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_RoomIdUrl>
        PARSER = new com.google.protobuf.AbstractParser<P_RoomIdUrl>() {
      @Override
      public P_RoomIdUrl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_RoomIdUrl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_RoomIdUrl> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_RoomIdUrl> getParserForType() {
      return PARSER;
    }

    @Override
    public P_RoomIdUrl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_DoCatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_DoCatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 叫地主的玩家座位号 
     * </pre>
     *
     * <code>int32 doCatchSeatId = 1;</code>
     */
    int getDoCatchSeatId();

    /**
     * <pre>
     ** 已经叫的分 
     * </pre>
     *
     * <code>int32 hascatchScore = 2;</code>
     */
    int getHascatchScore();

    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 3;</code>
     */
    String getSystemTime();
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 3;</code>
     */
    com.google.protobuf.ByteString
        getSystemTimeBytes();

    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 4;</code>
     */
    String getExpireTime();
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 4;</code>
     */
    com.google.protobuf.ByteString
        getExpireTimeBytes();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 5;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 通知叫地主 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_DoCatch}
   */
  public  static final class P_DoCatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_DoCatch)
      P_DoCatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_DoCatch.newBuilder() to construct.
    private P_DoCatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_DoCatch() {
      systemTime_ = "";
      expireTime_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_DoCatch();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_DoCatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              doCatchSeatId_ = input.readInt32();
              break;
            }
            case 16: {

              hascatchScore_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              systemTime_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              expireTime_ = s;
              break;
            }
            case 40: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_DoCatch_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_DoCatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_DoCatch.class, Builder.class);
    }

    public static final int DOCATCHSEATID_FIELD_NUMBER = 1;
    private int doCatchSeatId_;
    /**
     * <pre>
     ** 叫地主的玩家座位号 
     * </pre>
     *
     * <code>int32 doCatchSeatId = 1;</code>
     */
    public int getDoCatchSeatId() {
      return doCatchSeatId_;
    }

    public static final int HASCATCHSCORE_FIELD_NUMBER = 2;
    private int hascatchScore_;
    /**
     * <pre>
     ** 已经叫的分 
     * </pre>
     *
     * <code>int32 hascatchScore = 2;</code>
     */
    public int getHascatchScore() {
      return hascatchScore_;
    }

    public static final int SYSTEMTIME_FIELD_NUMBER = 3;
    private volatile Object systemTime_;
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 3;</code>
     */
    public String getSystemTime() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        systemTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSystemTimeBytes() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        systemTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIRETIME_FIELD_NUMBER = 4;
    private volatile Object expireTime_;
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 4;</code>
     */
    public String getExpireTime() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        expireTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 4;</code>
     */
    public com.google.protobuf.ByteString
        getExpireTimeBytes() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        expireTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 5;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 5;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (doCatchSeatId_ != 0) {
        output.writeInt32(1, doCatchSeatId_);
      }
      if (hascatchScore_ != 0) {
        output.writeInt32(2, hascatchScore_);
      }
      if (!getSystemTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, expireTime_);
      }
      if (index_ != 0) {
        output.writeInt32(5, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (doCatchSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, doCatchSeatId_);
      }
      if (hascatchScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, hascatchScore_);
      }
      if (!getSystemTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, expireTime_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_DoCatch)) {
        return super.equals(obj);
      }
      P_DoCatch other = (P_DoCatch) obj;

      if (getDoCatchSeatId()
          != other.getDoCatchSeatId()) return false;
      if (getHascatchScore()
          != other.getHascatchScore()) return false;
      if (!getSystemTime()
          .equals(other.getSystemTime())) return false;
      if (!getExpireTime()
          .equals(other.getExpireTime())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOCATCHSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getDoCatchSeatId();
      hash = (37 * hash) + HASCATCHSCORE_FIELD_NUMBER;
      hash = (53 * hash) + getHascatchScore();
      hash = (37 * hash) + SYSTEMTIME_FIELD_NUMBER;
      hash = (53 * hash) + getSystemTime().hashCode();
      hash = (37 * hash) + EXPIRETIME_FIELD_NUMBER;
      hash = (53 * hash) + getExpireTime().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_DoCatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_DoCatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_DoCatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_DoCatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_DoCatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_DoCatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_DoCatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_DoCatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_DoCatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_DoCatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_DoCatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_DoCatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_DoCatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 通知叫地主 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_DoCatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_DoCatch)
        P_DoCatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_DoCatch_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_DoCatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_DoCatch.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_DoCatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        doCatchSeatId_ = 0;

        hascatchScore_ = 0;

        systemTime_ = "";

        expireTime_ = "";

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_DoCatch_descriptor;
      }

      @Override
      public P_DoCatch getDefaultInstanceForType() {
        return P_DoCatch.getDefaultInstance();
      }

      @Override
      public P_DoCatch build() {
        P_DoCatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_DoCatch buildPartial() {
        P_DoCatch result = new P_DoCatch(this);
        result.doCatchSeatId_ = doCatchSeatId_;
        result.hascatchScore_ = hascatchScore_;
        result.systemTime_ = systemTime_;
        result.expireTime_ = expireTime_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_DoCatch) {
          return mergeFrom((P_DoCatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_DoCatch other) {
        if (other == P_DoCatch.getDefaultInstance()) return this;
        if (other.getDoCatchSeatId() != 0) {
          setDoCatchSeatId(other.getDoCatchSeatId());
        }
        if (other.getHascatchScore() != 0) {
          setHascatchScore(other.getHascatchScore());
        }
        if (!other.getSystemTime().isEmpty()) {
          systemTime_ = other.systemTime_;
          onChanged();
        }
        if (!other.getExpireTime().isEmpty()) {
          expireTime_ = other.expireTime_;
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_DoCatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_DoCatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int doCatchSeatId_ ;
      /**
       * <pre>
       ** 叫地主的玩家座位号 
       * </pre>
       *
       * <code>int32 doCatchSeatId = 1;</code>
       */
      public int getDoCatchSeatId() {
        return doCatchSeatId_;
      }
      /**
       * <pre>
       ** 叫地主的玩家座位号 
       * </pre>
       *
       * <code>int32 doCatchSeatId = 1;</code>
       */
      public Builder setDoCatchSeatId(int value) {
        
        doCatchSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 叫地主的玩家座位号 
       * </pre>
       *
       * <code>int32 doCatchSeatId = 1;</code>
       */
      public Builder clearDoCatchSeatId() {
        
        doCatchSeatId_ = 0;
        onChanged();
        return this;
      }

      private int hascatchScore_ ;
      /**
       * <pre>
       ** 已经叫的分 
       * </pre>
       *
       * <code>int32 hascatchScore = 2;</code>
       */
      public int getHascatchScore() {
        return hascatchScore_;
      }
      /**
       * <pre>
       ** 已经叫的分 
       * </pre>
       *
       * <code>int32 hascatchScore = 2;</code>
       */
      public Builder setHascatchScore(int value) {
        
        hascatchScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 已经叫的分 
       * </pre>
       *
       * <code>int32 hascatchScore = 2;</code>
       */
      public Builder clearHascatchScore() {
        
        hascatchScore_ = 0;
        onChanged();
        return this;
      }

      private Object systemTime_ = "";
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public String getSystemTime() {
        Object ref = systemTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          systemTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSystemTimeBytes() {
        Object ref = systemTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          systemTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public Builder setSystemTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        systemTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public Builder clearSystemTime() {
        
        systemTime_ = getDefaultInstance().getSystemTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public Builder setSystemTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        systemTime_ = value;
        onChanged();
        return this;
      }

      private Object expireTime_ = "";
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public String getExpireTime() {
        Object ref = expireTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          expireTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public com.google.protobuf.ByteString
          getExpireTimeBytes() {
        Object ref = expireTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          expireTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public Builder setExpireTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        expireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public Builder clearExpireTime() {
        
        expireTime_ = getDefaultInstance().getExpireTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public Builder setExpireTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        expireTime_ = value;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_DoCatch)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_DoCatch)
    private static final P_DoCatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_DoCatch();
    }

    public static P_DoCatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_DoCatch>
        PARSER = new com.google.protobuf.AbstractParser<P_DoCatch>() {
      @Override
      public P_DoCatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_DoCatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_DoCatch> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_DoCatch> getParserForType() {
      return PARSER;
    }

    @Override
    public P_DoCatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_AutoPlayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_AutoPlay)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 托管的玩家座位号 
     * </pre>
     *
     * <code>int32 seatId = 1;</code>
     */
    int getSeatId();

    /**
     * <pre>
     ** 状态变化 1进入托管，2取消托管 
     * </pre>
     *
     * <code>int32 status = 2;</code>
     */
    int getStatus();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 3;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 有玩家进行托管了 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_AutoPlay}
   */
  public  static final class P_AutoPlay extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_AutoPlay)
      P_AutoPlayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_AutoPlay.newBuilder() to construct.
    private P_AutoPlay(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_AutoPlay() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_AutoPlay();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_AutoPlay(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seatId_ = input.readInt32();
              break;
            }
            case 16: {

              status_ = input.readInt32();
              break;
            }
            case 24: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_AutoPlay_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_AutoPlay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_AutoPlay.class, Builder.class);
    }

    public static final int SEATID_FIELD_NUMBER = 1;
    private int seatId_;
    /**
     * <pre>
     ** 托管的玩家座位号 
     * </pre>
     *
     * <code>int32 seatId = 1;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <pre>
     ** 状态变化 1进入托管，2取消托管 
     * </pre>
     *
     * <code>int32 status = 2;</code>
     */
    public int getStatus() {
      return status_;
    }

    public static final int INDEX_FIELD_NUMBER = 3;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 3;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (seatId_ != 0) {
        output.writeInt32(1, seatId_);
      }
      if (status_ != 0) {
        output.writeInt32(2, status_);
      }
      if (index_ != 0) {
        output.writeInt32(3, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatId_);
      }
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_AutoPlay)) {
        return super.equals(obj);
      }
      P_AutoPlay other = (P_AutoPlay) obj;

      if (getSeatId()
          != other.getSeatId()) return false;
      if (getStatus()
          != other.getStatus()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEATID_FIELD_NUMBER;
      hash = (53 * hash) + getSeatId();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_AutoPlay parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_AutoPlay parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_AutoPlay parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_AutoPlay parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_AutoPlay parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_AutoPlay parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_AutoPlay parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_AutoPlay parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_AutoPlay parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_AutoPlay parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_AutoPlay parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_AutoPlay parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_AutoPlay prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 有玩家进行托管了 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_AutoPlay}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_AutoPlay)
        P_AutoPlayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_AutoPlay_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_AutoPlay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_AutoPlay.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_AutoPlay.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        seatId_ = 0;

        status_ = 0;

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_AutoPlay_descriptor;
      }

      @Override
      public P_AutoPlay getDefaultInstanceForType() {
        return P_AutoPlay.getDefaultInstance();
      }

      @Override
      public P_AutoPlay build() {
        P_AutoPlay result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_AutoPlay buildPartial() {
        P_AutoPlay result = new P_AutoPlay(this);
        result.seatId_ = seatId_;
        result.status_ = status_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_AutoPlay) {
          return mergeFrom((P_AutoPlay)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_AutoPlay other) {
        if (other == P_AutoPlay.getDefaultInstance()) return this;
        if (other.getSeatId() != 0) {
          setSeatId(other.getSeatId());
        }
        if (other.getStatus() != 0) {
          setStatus(other.getStatus());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_AutoPlay parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_AutoPlay) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int seatId_ ;
      /**
       * <pre>
       ** 托管的玩家座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <pre>
       ** 托管的玩家座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public Builder setSeatId(int value) {
        
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 托管的玩家座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public Builder clearSeatId() {
        
        seatId_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       ** 状态变化 1进入托管，2取消托管 
       * </pre>
       *
       * <code>int32 status = 2;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       ** 状态变化 1进入托管，2取消托管 
       * </pre>
       *
       * <code>int32 status = 2;</code>
       */
      public Builder setStatus(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 状态变化 1进入托管，2取消托管 
       * </pre>
       *
       * <code>int32 status = 2;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_AutoPlay)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_AutoPlay)
    private static final P_AutoPlay DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_AutoPlay();
    }

    public static P_AutoPlay getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_AutoPlay>
        PARSER = new com.google.protobuf.AbstractParser<P_AutoPlay>() {
      @Override
      public P_AutoPlay parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_AutoPlay(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_AutoPlay> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_AutoPlay> getParserForType() {
      return PARSER;
    }

    @Override
    public P_AutoPlay getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_GameStartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_GameStart)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 第几轮发牌，最多重发两次 
     * </pre>
     *
     * <code>int32 reStartTime = 1;</code>
     */
    int getReStartTime();

    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 2;</code>
     */
    java.util.List<Integer> getHandsCardsList();
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 2;</code>
     */
    int getHandsCardsCount();
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 2;</code>
     */
    int getHandsCards(int index);

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 3;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 游戏开始，发牌 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_GameStart}
   */
  public  static final class P_GameStart extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_GameStart)
      P_GameStartOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_GameStart.newBuilder() to construct.
    private P_GameStart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_GameStart() {
      handsCards_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_GameStart();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_GameStart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              reStartTime_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                handsCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              handsCards_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                handsCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                handsCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          handsCards_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_GameStart_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_GameStart_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_GameStart.class, Builder.class);
    }

    public static final int RESTARTTIME_FIELD_NUMBER = 1;
    private int reStartTime_;
    /**
     * <pre>
     ** 第几轮发牌，最多重发两次 
     * </pre>
     *
     * <code>int32 reStartTime = 1;</code>
     */
    public int getReStartTime() {
      return reStartTime_;
    }

    public static final int HANDSCARDS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList handsCards_;
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 2;</code>
     */
    public java.util.List<Integer>
        getHandsCardsList() {
      return handsCards_;
    }
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 2;</code>
     */
    public int getHandsCardsCount() {
      return handsCards_.size();
    }
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 2;</code>
     */
    public int getHandsCards(int index) {
      return handsCards_.getInt(index);
    }
    private int handsCardsMemoizedSerializedSize = -1;

    public static final int INDEX_FIELD_NUMBER = 3;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 3;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (reStartTime_ != 0) {
        output.writeInt32(1, reStartTime_);
      }
      if (getHandsCardsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(handsCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < handsCards_.size(); i++) {
        output.writeInt32NoTag(handsCards_.getInt(i));
      }
      if (index_ != 0) {
        output.writeInt32(3, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (reStartTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, reStartTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handsCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handsCards_.getInt(i));
        }
        size += dataSize;
        if (!getHandsCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        handsCardsMemoizedSerializedSize = dataSize;
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_GameStart)) {
        return super.equals(obj);
      }
      P_GameStart other = (P_GameStart) obj;

      if (getReStartTime()
          != other.getReStartTime()) return false;
      if (!getHandsCardsList()
          .equals(other.getHandsCardsList())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESTARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getReStartTime();
      if (getHandsCardsCount() > 0) {
        hash = (37 * hash) + HANDSCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHandsCardsList().hashCode();
      }
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_GameStart parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GameStart parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GameStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GameStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GameStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GameStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GameStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_GameStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_GameStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_GameStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_GameStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_GameStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_GameStart prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 游戏开始，发牌 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_GameStart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_GameStart)
        P_GameStartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_GameStart_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_GameStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_GameStart.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_GameStart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        reStartTime_ = 0;

        handsCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_GameStart_descriptor;
      }

      @Override
      public P_GameStart getDefaultInstanceForType() {
        return P_GameStart.getDefaultInstance();
      }

      @Override
      public P_GameStart build() {
        P_GameStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_GameStart buildPartial() {
        P_GameStart result = new P_GameStart(this);
        int from_bitField0_ = bitField0_;
        result.reStartTime_ = reStartTime_;
        if (((bitField0_ & 0x00000001) != 0)) {
          handsCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.handsCards_ = handsCards_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_GameStart) {
          return mergeFrom((P_GameStart)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_GameStart other) {
        if (other == P_GameStart.getDefaultInstance()) return this;
        if (other.getReStartTime() != 0) {
          setReStartTime(other.getReStartTime());
        }
        if (!other.handsCards_.isEmpty()) {
          if (handsCards_.isEmpty()) {
            handsCards_ = other.handsCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHandsCardsIsMutable();
            handsCards_.addAll(other.handsCards_);
          }
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_GameStart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_GameStart) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int reStartTime_ ;
      /**
       * <pre>
       ** 第几轮发牌，最多重发两次 
       * </pre>
       *
       * <code>int32 reStartTime = 1;</code>
       */
      public int getReStartTime() {
        return reStartTime_;
      }
      /**
       * <pre>
       ** 第几轮发牌，最多重发两次 
       * </pre>
       *
       * <code>int32 reStartTime = 1;</code>
       */
      public Builder setReStartTime(int value) {
        
        reStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 第几轮发牌，最多重发两次 
       * </pre>
       *
       * <code>int32 reStartTime = 1;</code>
       */
      public Builder clearReStartTime() {
        
        reStartTime_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList handsCards_ = emptyIntList();
      private void ensureHandsCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          handsCards_ = mutableCopy(handsCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 2;</code>
       */
      public java.util.List<Integer>
          getHandsCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(handsCards_) : handsCards_;
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 2;</code>
       */
      public int getHandsCardsCount() {
        return handsCards_.size();
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 2;</code>
       */
      public int getHandsCards(int index) {
        return handsCards_.getInt(index);
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 2;</code>
       */
      public Builder setHandsCards(
          int index, int value) {
        ensureHandsCardsIsMutable();
        handsCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 2;</code>
       */
      public Builder addHandsCards(int value) {
        ensureHandsCardsIsMutable();
        handsCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 2;</code>
       */
      public Builder addAllHandsCards(
          Iterable<? extends Integer> values) {
        ensureHandsCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, handsCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 2;</code>
       */
      public Builder clearHandsCards() {
        handsCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_GameStart)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_GameStart)
    private static final P_GameStart DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_GameStart();
    }

    public static P_GameStart getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_GameStart>
        PARSER = new com.google.protobuf.AbstractParser<P_GameStart>() {
      @Override
      public P_GameStart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_GameStart(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_GameStart> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_GameStart> getParserForType() {
      return PARSER;
    }

    @Override
    public P_GameStart getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_CatchResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_CatchResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 叫分玩家座位号 
     * </pre>
     *
     * <code>int32 catchSeatId = 1;</code>
     */
    int getCatchSeatId();

    /**
     * <pre>
     ** 玩家具体叫分 
     * </pre>
     *
     * <code>int32 catchScore = 2;</code>
     */
    int getCatchScore();

    /**
     * <pre>
     ** 玩家叫分后倍率变换 
     * </pre>
     *
     * <code>int32 ratio = 3;</code>
     */
    int getRatio();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 上个玩家叫地主结果 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_CatchResult}
   */
  public  static final class P_CatchResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_CatchResult)
      P_CatchResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_CatchResult.newBuilder() to construct.
    private P_CatchResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_CatchResult() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_CatchResult();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_CatchResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              catchSeatId_ = input.readInt32();
              break;
            }
            case 16: {

              catchScore_ = input.readInt32();
              break;
            }
            case 24: {

              ratio_ = input.readInt32();
              break;
            }
            case 32: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_CatchResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_CatchResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_CatchResult.class, Builder.class);
    }

    public static final int CATCHSEATID_FIELD_NUMBER = 1;
    private int catchSeatId_;
    /**
     * <pre>
     ** 叫分玩家座位号 
     * </pre>
     *
     * <code>int32 catchSeatId = 1;</code>
     */
    public int getCatchSeatId() {
      return catchSeatId_;
    }

    public static final int CATCHSCORE_FIELD_NUMBER = 2;
    private int catchScore_;
    /**
     * <pre>
     ** 玩家具体叫分 
     * </pre>
     *
     * <code>int32 catchScore = 2;</code>
     */
    public int getCatchScore() {
      return catchScore_;
    }

    public static final int RATIO_FIELD_NUMBER = 3;
    private int ratio_;
    /**
     * <pre>
     ** 玩家叫分后倍率变换 
     * </pre>
     *
     * <code>int32 ratio = 3;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    public static final int INDEX_FIELD_NUMBER = 4;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (catchSeatId_ != 0) {
        output.writeInt32(1, catchSeatId_);
      }
      if (catchScore_ != 0) {
        output.writeInt32(2, catchScore_);
      }
      if (ratio_ != 0) {
        output.writeInt32(3, ratio_);
      }
      if (index_ != 0) {
        output.writeInt32(4, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (catchSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, catchSeatId_);
      }
      if (catchScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, catchScore_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ratio_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_CatchResult)) {
        return super.equals(obj);
      }
      P_CatchResult other = (P_CatchResult) obj;

      if (getCatchSeatId()
          != other.getCatchSeatId()) return false;
      if (getCatchScore()
          != other.getCatchScore()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CATCHSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getCatchSeatId();
      hash = (37 * hash) + CATCHSCORE_FIELD_NUMBER;
      hash = (53 * hash) + getCatchScore();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_CatchResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_CatchResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_CatchResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_CatchResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_CatchResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_CatchResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_CatchResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_CatchResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_CatchResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_CatchResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_CatchResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_CatchResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_CatchResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 上个玩家叫地主结果 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_CatchResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_CatchResult)
        P_CatchResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_CatchResult_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_CatchResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_CatchResult.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_CatchResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        catchSeatId_ = 0;

        catchScore_ = 0;

        ratio_ = 0;

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_CatchResult_descriptor;
      }

      @Override
      public P_CatchResult getDefaultInstanceForType() {
        return P_CatchResult.getDefaultInstance();
      }

      @Override
      public P_CatchResult build() {
        P_CatchResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_CatchResult buildPartial() {
        P_CatchResult result = new P_CatchResult(this);
        result.catchSeatId_ = catchSeatId_;
        result.catchScore_ = catchScore_;
        result.ratio_ = ratio_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_CatchResult) {
          return mergeFrom((P_CatchResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_CatchResult other) {
        if (other == P_CatchResult.getDefaultInstance()) return this;
        if (other.getCatchSeatId() != 0) {
          setCatchSeatId(other.getCatchSeatId());
        }
        if (other.getCatchScore() != 0) {
          setCatchScore(other.getCatchScore());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_CatchResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_CatchResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int catchSeatId_ ;
      /**
       * <pre>
       ** 叫分玩家座位号 
       * </pre>
       *
       * <code>int32 catchSeatId = 1;</code>
       */
      public int getCatchSeatId() {
        return catchSeatId_;
      }
      /**
       * <pre>
       ** 叫分玩家座位号 
       * </pre>
       *
       * <code>int32 catchSeatId = 1;</code>
       */
      public Builder setCatchSeatId(int value) {
        
        catchSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 叫分玩家座位号 
       * </pre>
       *
       * <code>int32 catchSeatId = 1;</code>
       */
      public Builder clearCatchSeatId() {
        
        catchSeatId_ = 0;
        onChanged();
        return this;
      }

      private int catchScore_ ;
      /**
       * <pre>
       ** 玩家具体叫分 
       * </pre>
       *
       * <code>int32 catchScore = 2;</code>
       */
      public int getCatchScore() {
        return catchScore_;
      }
      /**
       * <pre>
       ** 玩家具体叫分 
       * </pre>
       *
       * <code>int32 catchScore = 2;</code>
       */
      public Builder setCatchScore(int value) {
        
        catchScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家具体叫分 
       * </pre>
       *
       * <code>int32 catchScore = 2;</code>
       */
      public Builder clearCatchScore() {
        
        catchScore_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 玩家叫分后倍率变换 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 玩家叫分后倍率变换 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家叫分后倍率变换 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_CatchResult)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_CatchResult)
    private static final P_CatchResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_CatchResult();
    }

    public static P_CatchResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_CatchResult>
        PARSER = new com.google.protobuf.AbstractParser<P_CatchResult>() {
      @Override
      public P_CatchResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_CatchResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_CatchResult> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_CatchResult> getParserForType() {
      return PARSER;
    }

    @Override
    public P_CatchResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_SendDiZhuCardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_SendDiZhuCard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 最后成为地主的玩家座位号 
     * </pre>
     *
     * <code>int32 dizhuSeatId = 1;</code>
     */
    int getDizhuSeatId();

    /**
     * <pre>
     ** 倍率 
     * </pre>
     *
     * <code>int32 ratio = 2;</code>
     */
    int getRatio();

    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 3;</code>
     */
    java.util.List<Integer> getDizhuCardsList();
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 3;</code>
     */
    int getDizhuCardsCount();
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 3;</code>
     */
    int getDizhuCards(int index);

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 发地主牌 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_SendDiZhuCard}
   */
  public  static final class P_SendDiZhuCard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_SendDiZhuCard)
      P_SendDiZhuCardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_SendDiZhuCard.newBuilder() to construct.
    private P_SendDiZhuCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_SendDiZhuCard() {
      dizhuCards_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_SendDiZhuCard();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_SendDiZhuCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              dizhuSeatId_ = input.readInt32();
              break;
            }
            case 16: {

              ratio_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dizhuCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dizhuCards_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dizhuCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dizhuCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dizhuCards_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_SendDiZhuCard_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_SendDiZhuCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_SendDiZhuCard.class, Builder.class);
    }

    public static final int DIZHUSEATID_FIELD_NUMBER = 1;
    private int dizhuSeatId_;
    /**
     * <pre>
     ** 最后成为地主的玩家座位号 
     * </pre>
     *
     * <code>int32 dizhuSeatId = 1;</code>
     */
    public int getDizhuSeatId() {
      return dizhuSeatId_;
    }

    public static final int RATIO_FIELD_NUMBER = 2;
    private int ratio_;
    /**
     * <pre>
     ** 倍率 
     * </pre>
     *
     * <code>int32 ratio = 2;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    public static final int DIZHUCARDS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList dizhuCards_;
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 3;</code>
     */
    public java.util.List<Integer>
        getDizhuCardsList() {
      return dizhuCards_;
    }
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 3;</code>
     */
    public int getDizhuCardsCount() {
      return dizhuCards_.size();
    }
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 3;</code>
     */
    public int getDizhuCards(int index) {
      return dizhuCards_.getInt(index);
    }
    private int dizhuCardsMemoizedSerializedSize = -1;

    public static final int INDEX_FIELD_NUMBER = 4;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (dizhuSeatId_ != 0) {
        output.writeInt32(1, dizhuSeatId_);
      }
      if (ratio_ != 0) {
        output.writeInt32(2, ratio_);
      }
      if (getDizhuCardsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(dizhuCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < dizhuCards_.size(); i++) {
        output.writeInt32NoTag(dizhuCards_.getInt(i));
      }
      if (index_ != 0) {
        output.writeInt32(4, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dizhuSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dizhuSeatId_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ratio_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dizhuCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dizhuCards_.getInt(i));
        }
        size += dataSize;
        if (!getDizhuCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dizhuCardsMemoizedSerializedSize = dataSize;
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_SendDiZhuCard)) {
        return super.equals(obj);
      }
      P_SendDiZhuCard other = (P_SendDiZhuCard) obj;

      if (getDizhuSeatId()
          != other.getDizhuSeatId()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (!getDizhuCardsList()
          .equals(other.getDizhuCardsList())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DIZHUSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getDizhuSeatId();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      if (getDizhuCardsCount() > 0) {
        hash = (37 * hash) + DIZHUCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getDizhuCardsList().hashCode();
      }
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_SendDiZhuCard parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_SendDiZhuCard parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_SendDiZhuCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_SendDiZhuCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_SendDiZhuCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_SendDiZhuCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_SendDiZhuCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_SendDiZhuCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_SendDiZhuCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_SendDiZhuCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_SendDiZhuCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_SendDiZhuCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_SendDiZhuCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 发地主牌 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_SendDiZhuCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_SendDiZhuCard)
        P_SendDiZhuCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_SendDiZhuCard_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_SendDiZhuCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_SendDiZhuCard.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_SendDiZhuCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        dizhuSeatId_ = 0;

        ratio_ = 0;

        dizhuCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_SendDiZhuCard_descriptor;
      }

      @Override
      public P_SendDiZhuCard getDefaultInstanceForType() {
        return P_SendDiZhuCard.getDefaultInstance();
      }

      @Override
      public P_SendDiZhuCard build() {
        P_SendDiZhuCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_SendDiZhuCard buildPartial() {
        P_SendDiZhuCard result = new P_SendDiZhuCard(this);
        int from_bitField0_ = bitField0_;
        result.dizhuSeatId_ = dizhuSeatId_;
        result.ratio_ = ratio_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dizhuCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dizhuCards_ = dizhuCards_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_SendDiZhuCard) {
          return mergeFrom((P_SendDiZhuCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_SendDiZhuCard other) {
        if (other == P_SendDiZhuCard.getDefaultInstance()) return this;
        if (other.getDizhuSeatId() != 0) {
          setDizhuSeatId(other.getDizhuSeatId());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        if (!other.dizhuCards_.isEmpty()) {
          if (dizhuCards_.isEmpty()) {
            dizhuCards_ = other.dizhuCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDizhuCardsIsMutable();
            dizhuCards_.addAll(other.dizhuCards_);
          }
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_SendDiZhuCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_SendDiZhuCard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dizhuSeatId_ ;
      /**
       * <pre>
       ** 最后成为地主的玩家座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 1;</code>
       */
      public int getDizhuSeatId() {
        return dizhuSeatId_;
      }
      /**
       * <pre>
       ** 最后成为地主的玩家座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 1;</code>
       */
      public Builder setDizhuSeatId(int value) {
        
        dizhuSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 最后成为地主的玩家座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 1;</code>
       */
      public Builder clearDizhuSeatId() {
        
        dizhuSeatId_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 倍率 
       * </pre>
       *
       * <code>int32 ratio = 2;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 倍率 
       * </pre>
       *
       * <code>int32 ratio = 2;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 倍率 
       * </pre>
       *
       * <code>int32 ratio = 2;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dizhuCards_ = emptyIntList();
      private void ensureDizhuCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dizhuCards_ = mutableCopy(dizhuCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 3;</code>
       */
      public java.util.List<Integer>
          getDizhuCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dizhuCards_) : dizhuCards_;
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 3;</code>
       */
      public int getDizhuCardsCount() {
        return dizhuCards_.size();
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 3;</code>
       */
      public int getDizhuCards(int index) {
        return dizhuCards_.getInt(index);
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 3;</code>
       */
      public Builder setDizhuCards(
          int index, int value) {
        ensureDizhuCardsIsMutable();
        dizhuCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 3;</code>
       */
      public Builder addDizhuCards(int value) {
        ensureDizhuCardsIsMutable();
        dizhuCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 3;</code>
       */
      public Builder addAllDizhuCards(
          Iterable<? extends Integer> values) {
        ensureDizhuCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dizhuCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 3;</code>
       */
      public Builder clearDizhuCards() {
        dizhuCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_SendDiZhuCard)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_SendDiZhuCard)
    private static final P_SendDiZhuCard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_SendDiZhuCard();
    }

    public static P_SendDiZhuCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_SendDiZhuCard>
        PARSER = new com.google.protobuf.AbstractParser<P_SendDiZhuCard>() {
      @Override
      public P_SendDiZhuCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_SendDiZhuCard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_SendDiZhuCard> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_SendDiZhuCard> getParserForType() {
      return PARSER;
    }

    @Override
    public P_SendDiZhuCard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_NextPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_NextPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 下一个出牌人座位号 
     * </pre>
     *
     * <code>int32 nextPlaySeatId = 1;</code>
     */
    int getNextPlaySeatId();

    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 2;</code>
     */
    String getSystemTime();
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 2;</code>
     */
    com.google.protobuf.ByteString
        getSystemTimeBytes();

    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 3;</code>
     */
    String getExpireTime();
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 3;</code>
     */
    com.google.protobuf.ByteString
        getExpireTimeBytes();

    /**
     * <pre>
     ** 是否是新一轮出牌，标记可以随便出 
     * </pre>
     *
     * <code>bool isNewRound = 4;</code>
     */
    boolean getIsNewRound();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 5;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 出牌玩家 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_NextPlayer}
   */
  public  static final class P_NextPlayer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_NextPlayer)
      P_NextPlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_NextPlayer.newBuilder() to construct.
    private P_NextPlayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_NextPlayer() {
      systemTime_ = "";
      expireTime_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_NextPlayer();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_NextPlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              nextPlaySeatId_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              systemTime_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              expireTime_ = s;
              break;
            }
            case 32: {

              isNewRound_ = input.readBool();
              break;
            }
            case 40: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_NextPlayer_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_NextPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_NextPlayer.class, Builder.class);
    }

    public static final int NEXTPLAYSEATID_FIELD_NUMBER = 1;
    private int nextPlaySeatId_;
    /**
     * <pre>
     ** 下一个出牌人座位号 
     * </pre>
     *
     * <code>int32 nextPlaySeatId = 1;</code>
     */
    public int getNextPlaySeatId() {
      return nextPlaySeatId_;
    }

    public static final int SYSTEMTIME_FIELD_NUMBER = 2;
    private volatile Object systemTime_;
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 2;</code>
     */
    public String getSystemTime() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        systemTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSystemTimeBytes() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        systemTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIRETIME_FIELD_NUMBER = 3;
    private volatile Object expireTime_;
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 3;</code>
     */
    public String getExpireTime() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        expireTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 3;</code>
     */
    public com.google.protobuf.ByteString
        getExpireTimeBytes() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        expireTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISNEWROUND_FIELD_NUMBER = 4;
    private boolean isNewRound_;
    /**
     * <pre>
     ** 是否是新一轮出牌，标记可以随便出 
     * </pre>
     *
     * <code>bool isNewRound = 4;</code>
     */
    public boolean getIsNewRound() {
      return isNewRound_;
    }

    public static final int INDEX_FIELD_NUMBER = 5;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 5;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nextPlaySeatId_ != 0) {
        output.writeInt32(1, nextPlaySeatId_);
      }
      if (!getSystemTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, expireTime_);
      }
      if (isNewRound_ != false) {
        output.writeBool(4, isNewRound_);
      }
      if (index_ != 0) {
        output.writeInt32(5, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nextPlaySeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nextPlaySeatId_);
      }
      if (!getSystemTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, expireTime_);
      }
      if (isNewRound_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isNewRound_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_NextPlayer)) {
        return super.equals(obj);
      }
      P_NextPlayer other = (P_NextPlayer) obj;

      if (getNextPlaySeatId()
          != other.getNextPlaySeatId()) return false;
      if (!getSystemTime()
          .equals(other.getSystemTime())) return false;
      if (!getExpireTime()
          .equals(other.getExpireTime())) return false;
      if (getIsNewRound()
          != other.getIsNewRound()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NEXTPLAYSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getNextPlaySeatId();
      hash = (37 * hash) + SYSTEMTIME_FIELD_NUMBER;
      hash = (53 * hash) + getSystemTime().hashCode();
      hash = (37 * hash) + EXPIRETIME_FIELD_NUMBER;
      hash = (53 * hash) + getExpireTime().hashCode();
      hash = (37 * hash) + ISNEWROUND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsNewRound());
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_NextPlayer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_NextPlayer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_NextPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_NextPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_NextPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_NextPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_NextPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_NextPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_NextPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_NextPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_NextPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_NextPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_NextPlayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 出牌玩家 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_NextPlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_NextPlayer)
        P_NextPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_NextPlayer_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_NextPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_NextPlayer.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_NextPlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        nextPlaySeatId_ = 0;

        systemTime_ = "";

        expireTime_ = "";

        isNewRound_ = false;

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_NextPlayer_descriptor;
      }

      @Override
      public P_NextPlayer getDefaultInstanceForType() {
        return P_NextPlayer.getDefaultInstance();
      }

      @Override
      public P_NextPlayer build() {
        P_NextPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_NextPlayer buildPartial() {
        P_NextPlayer result = new P_NextPlayer(this);
        result.nextPlaySeatId_ = nextPlaySeatId_;
        result.systemTime_ = systemTime_;
        result.expireTime_ = expireTime_;
        result.isNewRound_ = isNewRound_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_NextPlayer) {
          return mergeFrom((P_NextPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_NextPlayer other) {
        if (other == P_NextPlayer.getDefaultInstance()) return this;
        if (other.getNextPlaySeatId() != 0) {
          setNextPlaySeatId(other.getNextPlaySeatId());
        }
        if (!other.getSystemTime().isEmpty()) {
          systemTime_ = other.systemTime_;
          onChanged();
        }
        if (!other.getExpireTime().isEmpty()) {
          expireTime_ = other.expireTime_;
          onChanged();
        }
        if (other.getIsNewRound() != false) {
          setIsNewRound(other.getIsNewRound());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_NextPlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_NextPlayer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int nextPlaySeatId_ ;
      /**
       * <pre>
       ** 下一个出牌人座位号 
       * </pre>
       *
       * <code>int32 nextPlaySeatId = 1;</code>
       */
      public int getNextPlaySeatId() {
        return nextPlaySeatId_;
      }
      /**
       * <pre>
       ** 下一个出牌人座位号 
       * </pre>
       *
       * <code>int32 nextPlaySeatId = 1;</code>
       */
      public Builder setNextPlaySeatId(int value) {
        
        nextPlaySeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 下一个出牌人座位号 
       * </pre>
       *
       * <code>int32 nextPlaySeatId = 1;</code>
       */
      public Builder clearNextPlaySeatId() {
        
        nextPlaySeatId_ = 0;
        onChanged();
        return this;
      }

      private Object systemTime_ = "";
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 2;</code>
       */
      public String getSystemTime() {
        Object ref = systemTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          systemTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSystemTimeBytes() {
        Object ref = systemTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          systemTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 2;</code>
       */
      public Builder setSystemTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        systemTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 2;</code>
       */
      public Builder clearSystemTime() {
        
        systemTime_ = getDefaultInstance().getSystemTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 2;</code>
       */
      public Builder setSystemTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        systemTime_ = value;
        onChanged();
        return this;
      }

      private Object expireTime_ = "";
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 3;</code>
       */
      public String getExpireTime() {
        Object ref = expireTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          expireTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 3;</code>
       */
      public com.google.protobuf.ByteString
          getExpireTimeBytes() {
        Object ref = expireTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          expireTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 3;</code>
       */
      public Builder setExpireTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        expireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 3;</code>
       */
      public Builder clearExpireTime() {
        
        expireTime_ = getDefaultInstance().getExpireTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 3;</code>
       */
      public Builder setExpireTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        expireTime_ = value;
        onChanged();
        return this;
      }

      private boolean isNewRound_ ;
      /**
       * <pre>
       ** 是否是新一轮出牌，标记可以随便出 
       * </pre>
       *
       * <code>bool isNewRound = 4;</code>
       */
      public boolean getIsNewRound() {
        return isNewRound_;
      }
      /**
       * <pre>
       ** 是否是新一轮出牌，标记可以随便出 
       * </pre>
       *
       * <code>bool isNewRound = 4;</code>
       */
      public Builder setIsNewRound(boolean value) {
        
        isNewRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否是新一轮出牌，标记可以随便出 
       * </pre>
       *
       * <code>bool isNewRound = 4;</code>
       */
      public Builder clearIsNewRound() {
        
        isNewRound_ = false;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_NextPlayer)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_NextPlayer)
    private static final P_NextPlayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_NextPlayer();
    }

    public static P_NextPlayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_NextPlayer>
        PARSER = new com.google.protobuf.AbstractParser<P_NextPlayer>() {
      @Override
      public P_NextPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_NextPlayer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_NextPlayer> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_NextPlayer> getParserForType() {
      return PARSER;
    }

    @Override
    public P_NextPlayer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_PlayCardsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_PlayCards)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 出牌玩家座位号 
     * </pre>
     *
     * <code>int32 doPlaySeatId = 1;</code>
     */
    int getDoPlaySeatId();

    /**
     * <pre>
     ** 玩家出牌 
     * </pre>
     *
     * <code>repeated int32 cards = 2;</code>
     */
    java.util.List<Integer> getCardsList();
    /**
     * <pre>
     ** 玩家出牌 
     * </pre>
     *
     * <code>repeated int32 cards = 2;</code>
     */
    int getCardsCount();
    /**
     * <pre>
     ** 玩家出牌 
     * </pre>
     *
     * <code>repeated int32 cards = 2;</code>
     */
    int getCards(int index);

    /**
     * <pre>
     ** 出牌类型,出牌类型 ： 1:单张 | 2:对子 | 3:三张 | 4:四张（炸） | 5:单张连 |
     * 6:连对 | 7:飞机 : 8:4带2 | 9:王炸 
     * </pre>
     *
     * <code>int32 cardType = 3;</code>
     */
    int getCardType();

    /**
     * <pre>
     ** 变化后的倍率 
     * </pre>
     *
     * <code>int32 ratio = 4;</code>
     */
    int getRatio();

    /**
     * <pre>
     ** 出牌后剩余牌数 
     * </pre>
     *
     * <code>int32 remainCards = 5;</code>
     */
    int getRemainCards();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 6;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 上个玩家出牌信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_PlayCards}
   */
  public  static final class P_PlayCards extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_PlayCards)
      P_PlayCardsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_PlayCards.newBuilder() to construct.
    private P_PlayCards(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_PlayCards() {
      cards_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_PlayCards();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_PlayCards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              doPlaySeatId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                cards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              cards_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                cards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {

              cardType_ = input.readInt32();
              break;
            }
            case 32: {

              ratio_ = input.readInt32();
              break;
            }
            case 40: {

              remainCards_ = input.readInt32();
              break;
            }
            case 48: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          cards_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_PlayCards_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_PlayCards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_PlayCards.class, Builder.class);
    }

    public static final int DOPLAYSEATID_FIELD_NUMBER = 1;
    private int doPlaySeatId_;
    /**
     * <pre>
     ** 出牌玩家座位号 
     * </pre>
     *
     * <code>int32 doPlaySeatId = 1;</code>
     */
    public int getDoPlaySeatId() {
      return doPlaySeatId_;
    }

    public static final int CARDS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList cards_;
    /**
     * <pre>
     ** 玩家出牌 
     * </pre>
     *
     * <code>repeated int32 cards = 2;</code>
     */
    public java.util.List<Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <pre>
     ** 玩家出牌 
     * </pre>
     *
     * <code>repeated int32 cards = 2;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <pre>
     ** 玩家出牌 
     * </pre>
     *
     * <code>repeated int32 cards = 2;</code>
     */
    public int getCards(int index) {
      return cards_.getInt(index);
    }
    private int cardsMemoizedSerializedSize = -1;

    public static final int CARDTYPE_FIELD_NUMBER = 3;
    private int cardType_;
    /**
     * <pre>
     ** 出牌类型,出牌类型 ： 1:单张 | 2:对子 | 3:三张 | 4:四张（炸） | 5:单张连 |
     * 6:连对 | 7:飞机 : 8:4带2 | 9:王炸 
     * </pre>
     *
     * <code>int32 cardType = 3;</code>
     */
    public int getCardType() {
      return cardType_;
    }

    public static final int RATIO_FIELD_NUMBER = 4;
    private int ratio_;
    /**
     * <pre>
     ** 变化后的倍率 
     * </pre>
     *
     * <code>int32 ratio = 4;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    public static final int REMAINCARDS_FIELD_NUMBER = 5;
    private int remainCards_;
    /**
     * <pre>
     ** 出牌后剩余牌数 
     * </pre>
     *
     * <code>int32 remainCards = 5;</code>
     */
    public int getRemainCards() {
      return remainCards_;
    }

    public static final int INDEX_FIELD_NUMBER = 6;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 6;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (doPlaySeatId_ != 0) {
        output.writeInt32(1, doPlaySeatId_);
      }
      if (getCardsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(cardsMemoizedSerializedSize);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32NoTag(cards_.getInt(i));
      }
      if (cardType_ != 0) {
        output.writeInt32(3, cardType_);
      }
      if (ratio_ != 0) {
        output.writeInt32(4, ratio_);
      }
      if (remainCards_ != 0) {
        output.writeInt32(5, remainCards_);
      }
      if (index_ != 0) {
        output.writeInt32(6, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (doPlaySeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, doPlaySeatId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.getInt(i));
        }
        size += dataSize;
        if (!getCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cardsMemoizedSerializedSize = dataSize;
      }
      if (cardType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cardType_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, ratio_);
      }
      if (remainCards_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, remainCards_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_PlayCards)) {
        return super.equals(obj);
      }
      P_PlayCards other = (P_PlayCards) obj;

      if (getDoPlaySeatId()
          != other.getDoPlaySeatId()) return false;
      if (!getCardsList()
          .equals(other.getCardsList())) return false;
      if (getCardType()
          != other.getCardType()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (getRemainCards()
          != other.getRemainCards()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOPLAYSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getDoPlaySeatId();
      if (getCardsCount() > 0) {
        hash = (37 * hash) + CARDS_FIELD_NUMBER;
        hash = (53 * hash) + getCardsList().hashCode();
      }
      hash = (37 * hash) + CARDTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCardType();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      hash = (37 * hash) + REMAINCARDS_FIELD_NUMBER;
      hash = (53 * hash) + getRemainCards();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_PlayCards parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_PlayCards parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_PlayCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_PlayCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_PlayCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_PlayCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_PlayCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_PlayCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_PlayCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_PlayCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_PlayCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_PlayCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_PlayCards prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 上个玩家出牌信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_PlayCards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_PlayCards)
        P_PlayCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_PlayCards_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_PlayCards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_PlayCards.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_PlayCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        doPlaySeatId_ = 0;

        cards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        cardType_ = 0;

        ratio_ = 0;

        remainCards_ = 0;

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_PlayCards_descriptor;
      }

      @Override
      public P_PlayCards getDefaultInstanceForType() {
        return P_PlayCards.getDefaultInstance();
      }

      @Override
      public P_PlayCards build() {
        P_PlayCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_PlayCards buildPartial() {
        P_PlayCards result = new P_PlayCards(this);
        int from_bitField0_ = bitField0_;
        result.doPlaySeatId_ = doPlaySeatId_;
        if (((bitField0_ & 0x00000001) != 0)) {
          cards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cards_ = cards_;
        result.cardType_ = cardType_;
        result.ratio_ = ratio_;
        result.remainCards_ = remainCards_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_PlayCards) {
          return mergeFrom((P_PlayCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_PlayCards other) {
        if (other == P_PlayCards.getDefaultInstance()) return this;
        if (other.getDoPlaySeatId() != 0) {
          setDoPlaySeatId(other.getDoPlaySeatId());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.getCardType() != 0) {
          setCardType(other.getCardType());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        if (other.getRemainCards() != 0) {
          setRemainCards(other.getRemainCards());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_PlayCards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_PlayCards) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int doPlaySeatId_ ;
      /**
       * <pre>
       ** 出牌玩家座位号 
       * </pre>
       *
       * <code>int32 doPlaySeatId = 1;</code>
       */
      public int getDoPlaySeatId() {
        return doPlaySeatId_;
      }
      /**
       * <pre>
       ** 出牌玩家座位号 
       * </pre>
       *
       * <code>int32 doPlaySeatId = 1;</code>
       */
      public Builder setDoPlaySeatId(int value) {
        
        doPlaySeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 出牌玩家座位号 
       * </pre>
       *
       * <code>int32 doPlaySeatId = 1;</code>
       */
      public Builder clearDoPlaySeatId() {
        
        doPlaySeatId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList cards_ = emptyIntList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cards_ = mutableCopy(cards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 玩家出牌 
       * </pre>
       *
       * <code>repeated int32 cards = 2;</code>
       */
      public java.util.List<Integer>
          getCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(cards_) : cards_;
      }
      /**
       * <pre>
       ** 玩家出牌 
       * </pre>
       *
       * <code>repeated int32 cards = 2;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <pre>
       ** 玩家出牌 
       * </pre>
       *
       * <code>repeated int32 cards = 2;</code>
       */
      public int getCards(int index) {
        return cards_.getInt(index);
      }
      /**
       * <pre>
       ** 玩家出牌 
       * </pre>
       *
       * <code>repeated int32 cards = 2;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家出牌 
       * </pre>
       *
       * <code>repeated int32 cards = 2;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家出牌 
       * </pre>
       *
       * <code>repeated int32 cards = 2;</code>
       */
      public Builder addAllCards(
          Iterable<? extends Integer> values) {
        ensureCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家出牌 
       * </pre>
       *
       * <code>repeated int32 cards = 2;</code>
       */
      public Builder clearCards() {
        cards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int cardType_ ;
      /**
       * <pre>
       ** 出牌类型,出牌类型 ： 1:单张 | 2:对子 | 3:三张 | 4:四张（炸） | 5:单张连 |
       * 6:连对 | 7:飞机 : 8:4带2 | 9:王炸 
       * </pre>
       *
       * <code>int32 cardType = 3;</code>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <pre>
       ** 出牌类型,出牌类型 ： 1:单张 | 2:对子 | 3:三张 | 4:四张（炸） | 5:单张连 |
       * 6:连对 | 7:飞机 : 8:4带2 | 9:王炸 
       * </pre>
       *
       * <code>int32 cardType = 3;</code>
       */
      public Builder setCardType(int value) {
        
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 出牌类型,出牌类型 ： 1:单张 | 2:对子 | 3:三张 | 4:四张（炸） | 5:单张连 |
       * 6:连对 | 7:飞机 : 8:4带2 | 9:王炸 
       * </pre>
       *
       * <code>int32 cardType = 3;</code>
       */
      public Builder clearCardType() {
        
        cardType_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 变化后的倍率 
       * </pre>
       *
       * <code>int32 ratio = 4;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 变化后的倍率 
       * </pre>
       *
       * <code>int32 ratio = 4;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 变化后的倍率 
       * </pre>
       *
       * <code>int32 ratio = 4;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }

      private int remainCards_ ;
      /**
       * <pre>
       ** 出牌后剩余牌数 
       * </pre>
       *
       * <code>int32 remainCards = 5;</code>
       */
      public int getRemainCards() {
        return remainCards_;
      }
      /**
       * <pre>
       ** 出牌后剩余牌数 
       * </pre>
       *
       * <code>int32 remainCards = 5;</code>
       */
      public Builder setRemainCards(int value) {
        
        remainCards_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 出牌后剩余牌数 
       * </pre>
       *
       * <code>int32 remainCards = 5;</code>
       */
      public Builder clearRemainCards() {
        
        remainCards_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 6;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 6;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 6;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_PlayCards)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_PlayCards)
    private static final P_PlayCards DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_PlayCards();
    }

    public static P_PlayCards getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_PlayCards>
        PARSER = new com.google.protobuf.AbstractParser<P_PlayCards>() {
      @Override
      public P_PlayCards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_PlayCards(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_PlayCards> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_PlayCards> getParserForType() {
      return PARSER;
    }

    @Override
    public P_PlayCards getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_GameSettleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_GameSettle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
     * </pre>
     *
     * <code>int32 isContinue = 1;</code>
     */
    int getIsContinue();

    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    java.util.List<LandlordBase.PlayerSettle>
        getPSettleList();
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    LandlordBase.PlayerSettle getPSettle(int index);
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    int getPSettleCount();
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    java.util.List<? extends LandlordBase.PlayerSettleOrBuilder>
        getPSettleOrBuilderList();
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    LandlordBase.PlayerSettleOrBuilder getPSettleOrBuilder(
        int index);

    /**
     * <pre>
     ** 春天标识，0没春天，1春天，2反春 
     * </pre>
     *
     * <code>int32 springStatus = 3;</code>
     */
    int getSpringStatus();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    int getIndex();

    /**
     * <pre>
     ** 最终倍率 
     * </pre>
     *
     * <code>int32 ratio = 5;</code>
     */
    int getRatio();
  }
  /**
   * <pre>
   ** Push 游戏结算信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_GameSettle}
   */
  public  static final class P_GameSettle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_GameSettle)
      P_GameSettleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_GameSettle.newBuilder() to construct.
    private P_GameSettle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_GameSettle() {
      pSettle_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_GameSettle();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_GameSettle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              isContinue_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                pSettle_ = new java.util.ArrayList<LandlordBase.PlayerSettle>();
                mutable_bitField0_ |= 0x00000001;
              }
              pSettle_.add(
                  input.readMessage(LandlordBase.PlayerSettle.parser(), extensionRegistry));
              break;
            }
            case 24: {

              springStatus_ = input.readInt32();
              break;
            }
            case 32: {

              index_ = input.readInt32();
              break;
            }
            case 40: {

              ratio_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          pSettle_ = java.util.Collections.unmodifiableList(pSettle_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_GameSettle_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_GameSettle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_GameSettle.class, Builder.class);
    }

    public static final int ISCONTINUE_FIELD_NUMBER = 1;
    private int isContinue_;
    /**
     * <pre>
     ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
     * </pre>
     *
     * <code>int32 isContinue = 1;</code>
     */
    public int getIsContinue() {
      return isContinue_;
    }

    public static final int PSETTLE_FIELD_NUMBER = 2;
    private java.util.List<LandlordBase.PlayerSettle> pSettle_;
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public java.util.List<LandlordBase.PlayerSettle> getPSettleList() {
      return pSettle_;
    }
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public java.util.List<? extends LandlordBase.PlayerSettleOrBuilder>
        getPSettleOrBuilderList() {
      return pSettle_;
    }
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public int getPSettleCount() {
      return pSettle_.size();
    }
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public LandlordBase.PlayerSettle getPSettle(int index) {
      return pSettle_.get(index);
    }
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public LandlordBase.PlayerSettleOrBuilder getPSettleOrBuilder(
        int index) {
      return pSettle_.get(index);
    }

    public static final int SPRINGSTATUS_FIELD_NUMBER = 3;
    private int springStatus_;
    /**
     * <pre>
     ** 春天标识，0没春天，1春天，2反春 
     * </pre>
     *
     * <code>int32 springStatus = 3;</code>
     */
    public int getSpringStatus() {
      return springStatus_;
    }

    public static final int INDEX_FIELD_NUMBER = 4;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int RATIO_FIELD_NUMBER = 5;
    private int ratio_;
    /**
     * <pre>
     ** 最终倍率 
     * </pre>
     *
     * <code>int32 ratio = 5;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isContinue_ != 0) {
        output.writeInt32(1, isContinue_);
      }
      for (int i = 0; i < pSettle_.size(); i++) {
        output.writeMessage(2, pSettle_.get(i));
      }
      if (springStatus_ != 0) {
        output.writeInt32(3, springStatus_);
      }
      if (index_ != 0) {
        output.writeInt32(4, index_);
      }
      if (ratio_ != 0) {
        output.writeInt32(5, ratio_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isContinue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, isContinue_);
      }
      for (int i = 0; i < pSettle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pSettle_.get(i));
      }
      if (springStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, springStatus_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, index_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, ratio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_GameSettle)) {
        return super.equals(obj);
      }
      P_GameSettle other = (P_GameSettle) obj;

      if (getIsContinue()
          != other.getIsContinue()) return false;
      if (!getPSettleList()
          .equals(other.getPSettleList())) return false;
      if (getSpringStatus()
          != other.getSpringStatus()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ISCONTINUE_FIELD_NUMBER;
      hash = (53 * hash) + getIsContinue();
      if (getPSettleCount() > 0) {
        hash = (37 * hash) + PSETTLE_FIELD_NUMBER;
        hash = (53 * hash) + getPSettleList().hashCode();
      }
      hash = (37 * hash) + SPRINGSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getSpringStatus();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_GameSettle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GameSettle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GameSettle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GameSettle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GameSettle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GameSettle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GameSettle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_GameSettle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_GameSettle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_GameSettle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_GameSettle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_GameSettle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_GameSettle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 游戏结算信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_GameSettle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_GameSettle)
        P_GameSettleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_GameSettle_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_GameSettle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_GameSettle.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_GameSettle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPSettleFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        isContinue_ = 0;

        if (pSettleBuilder_ == null) {
          pSettle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pSettleBuilder_.clear();
        }
        springStatus_ = 0;

        index_ = 0;

        ratio_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_GameSettle_descriptor;
      }

      @Override
      public P_GameSettle getDefaultInstanceForType() {
        return P_GameSettle.getDefaultInstance();
      }

      @Override
      public P_GameSettle build() {
        P_GameSettle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_GameSettle buildPartial() {
        P_GameSettle result = new P_GameSettle(this);
        int from_bitField0_ = bitField0_;
        result.isContinue_ = isContinue_;
        if (pSettleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            pSettle_ = java.util.Collections.unmodifiableList(pSettle_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pSettle_ = pSettle_;
        } else {
          result.pSettle_ = pSettleBuilder_.build();
        }
        result.springStatus_ = springStatus_;
        result.index_ = index_;
        result.ratio_ = ratio_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_GameSettle) {
          return mergeFrom((P_GameSettle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_GameSettle other) {
        if (other == P_GameSettle.getDefaultInstance()) return this;
        if (other.getIsContinue() != 0) {
          setIsContinue(other.getIsContinue());
        }
        if (pSettleBuilder_ == null) {
          if (!other.pSettle_.isEmpty()) {
            if (pSettle_.isEmpty()) {
              pSettle_ = other.pSettle_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePSettleIsMutable();
              pSettle_.addAll(other.pSettle_);
            }
            onChanged();
          }
        } else {
          if (!other.pSettle_.isEmpty()) {
            if (pSettleBuilder_.isEmpty()) {
              pSettleBuilder_.dispose();
              pSettleBuilder_ = null;
              pSettle_ = other.pSettle_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pSettleBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPSettleFieldBuilder() : null;
            } else {
              pSettleBuilder_.addAllMessages(other.pSettle_);
            }
          }
        }
        if (other.getSpringStatus() != 0) {
          setSpringStatus(other.getSpringStatus());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_GameSettle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_GameSettle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int isContinue_ ;
      /**
       * <pre>
       ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
       * </pre>
       *
       * <code>int32 isContinue = 1;</code>
       */
      public int getIsContinue() {
        return isContinue_;
      }
      /**
       * <pre>
       ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
       * </pre>
       *
       * <code>int32 isContinue = 1;</code>
       */
      public Builder setIsContinue(int value) {
        
        isContinue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
       * </pre>
       *
       * <code>int32 isContinue = 1;</code>
       */
      public Builder clearIsContinue() {
        
        isContinue_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<LandlordBase.PlayerSettle> pSettle_ =
        java.util.Collections.emptyList();
      private void ensurePSettleIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pSettle_ = new java.util.ArrayList<LandlordBase.PlayerSettle>(pSettle_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.PlayerSettle, LandlordBase.PlayerSettle.Builder, LandlordBase.PlayerSettleOrBuilder> pSettleBuilder_;

      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public java.util.List<LandlordBase.PlayerSettle> getPSettleList() {
        if (pSettleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pSettle_);
        } else {
          return pSettleBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public int getPSettleCount() {
        if (pSettleBuilder_ == null) {
          return pSettle_.size();
        } else {
          return pSettleBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettle getPSettle(int index) {
        if (pSettleBuilder_ == null) {
          return pSettle_.get(index);
        } else {
          return pSettleBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder setPSettle(
          int index, LandlordBase.PlayerSettle value) {
        if (pSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePSettleIsMutable();
          pSettle_.set(index, value);
          onChanged();
        } else {
          pSettleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder setPSettle(
          int index, LandlordBase.PlayerSettle.Builder builderForValue) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          pSettle_.set(index, builderForValue.build());
          onChanged();
        } else {
          pSettleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addPSettle(LandlordBase.PlayerSettle value) {
        if (pSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePSettleIsMutable();
          pSettle_.add(value);
          onChanged();
        } else {
          pSettleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addPSettle(
          int index, LandlordBase.PlayerSettle value) {
        if (pSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePSettleIsMutable();
          pSettle_.add(index, value);
          onChanged();
        } else {
          pSettleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addPSettle(
          LandlordBase.PlayerSettle.Builder builderForValue) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          pSettle_.add(builderForValue.build());
          onChanged();
        } else {
          pSettleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addPSettle(
          int index, LandlordBase.PlayerSettle.Builder builderForValue) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          pSettle_.add(index, builderForValue.build());
          onChanged();
        } else {
          pSettleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addAllPSettle(
          Iterable<? extends LandlordBase.PlayerSettle> values) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pSettle_);
          onChanged();
        } else {
          pSettleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder clearPSettle() {
        if (pSettleBuilder_ == null) {
          pSettle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pSettleBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder removePSettle(int index) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          pSettle_.remove(index);
          onChanged();
        } else {
          pSettleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettle.Builder getPSettleBuilder(
          int index) {
        return getPSettleFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettleOrBuilder getPSettleOrBuilder(
          int index) {
        if (pSettleBuilder_ == null) {
          return pSettle_.get(index);  } else {
          return pSettleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public java.util.List<? extends LandlordBase.PlayerSettleOrBuilder>
           getPSettleOrBuilderList() {
        if (pSettleBuilder_ != null) {
          return pSettleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pSettle_);
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettle.Builder addPSettleBuilder() {
        return getPSettleFieldBuilder().addBuilder(
            LandlordBase.PlayerSettle.getDefaultInstance());
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettle.Builder addPSettleBuilder(
          int index) {
        return getPSettleFieldBuilder().addBuilder(
            index, LandlordBase.PlayerSettle.getDefaultInstance());
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public java.util.List<LandlordBase.PlayerSettle.Builder>
           getPSettleBuilderList() {
        return getPSettleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.PlayerSettle, LandlordBase.PlayerSettle.Builder, LandlordBase.PlayerSettleOrBuilder>
          getPSettleFieldBuilder() {
        if (pSettleBuilder_ == null) {
          pSettleBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.PlayerSettle, LandlordBase.PlayerSettle.Builder, LandlordBase.PlayerSettleOrBuilder>(
                  pSettle_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          pSettle_ = null;
        }
        return pSettleBuilder_;
      }

      private int springStatus_ ;
      /**
       * <pre>
       ** 春天标识，0没春天，1春天，2反春 
       * </pre>
       *
       * <code>int32 springStatus = 3;</code>
       */
      public int getSpringStatus() {
        return springStatus_;
      }
      /**
       * <pre>
       ** 春天标识，0没春天，1春天，2反春 
       * </pre>
       *
       * <code>int32 springStatus = 3;</code>
       */
      public Builder setSpringStatus(int value) {
        
        springStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 春天标识，0没春天，1春天，2反春 
       * </pre>
       *
       * <code>int32 springStatus = 3;</code>
       */
      public Builder clearSpringStatus() {
        
        springStatus_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 最终倍率 
       * </pre>
       *
       * <code>int32 ratio = 5;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 最终倍率 
       * </pre>
       *
       * <code>int32 ratio = 5;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 最终倍率 
       * </pre>
       *
       * <code>int32 ratio = 5;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_GameSettle)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_GameSettle)
    private static final P_GameSettle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_GameSettle();
    }

    public static P_GameSettle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_GameSettle>
        PARSER = new com.google.protobuf.AbstractParser<P_GameSettle>() {
      @Override
      public P_GameSettle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_GameSettle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_GameSettle> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_GameSettle> getParserForType() {
      return PARSER;
    }

    @Override
    public P_GameSettle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_SendActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_SendAction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 发起的座位号 
     * </pre>
     *
     * <code>int32 fromSeat = 1;</code>
     */
    int getFromSeat();

    /**
     * <pre>
     ** 收到的座位号 
     * </pre>
     *
     * <code>int32 toSeat = 2;</code>
     */
    int getToSeat();

    /**
     * <pre>
     ** 表情号 
     * </pre>
     *
     * <code>int32 actionId = 3;</code>
     */
    int getActionId();
  }
  /**
   * <pre>
   ** Push 互动表情消息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_SendAction}
   */
  public  static final class P_SendAction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_SendAction)
      P_SendActionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_SendAction.newBuilder() to construct.
    private P_SendAction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_SendAction() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_SendAction();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_SendAction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              fromSeat_ = input.readInt32();
              break;
            }
            case 16: {

              toSeat_ = input.readInt32();
              break;
            }
            case 24: {

              actionId_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_SendAction_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_SendAction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_SendAction.class, Builder.class);
    }

    public static final int FROMSEAT_FIELD_NUMBER = 1;
    private int fromSeat_;
    /**
     * <pre>
     ** 发起的座位号 
     * </pre>
     *
     * <code>int32 fromSeat = 1;</code>
     */
    public int getFromSeat() {
      return fromSeat_;
    }

    public static final int TOSEAT_FIELD_NUMBER = 2;
    private int toSeat_;
    /**
     * <pre>
     ** 收到的座位号 
     * </pre>
     *
     * <code>int32 toSeat = 2;</code>
     */
    public int getToSeat() {
      return toSeat_;
    }

    public static final int ACTIONID_FIELD_NUMBER = 3;
    private int actionId_;
    /**
     * <pre>
     ** 表情号 
     * </pre>
     *
     * <code>int32 actionId = 3;</code>
     */
    public int getActionId() {
      return actionId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromSeat_ != 0) {
        output.writeInt32(1, fromSeat_);
      }
      if (toSeat_ != 0) {
        output.writeInt32(2, toSeat_);
      }
      if (actionId_ != 0) {
        output.writeInt32(3, actionId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromSeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fromSeat_);
      }
      if (toSeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, toSeat_);
      }
      if (actionId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, actionId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_SendAction)) {
        return super.equals(obj);
      }
      P_SendAction other = (P_SendAction) obj;

      if (getFromSeat()
          != other.getFromSeat()) return false;
      if (getToSeat()
          != other.getToSeat()) return false;
      if (getActionId()
          != other.getActionId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROMSEAT_FIELD_NUMBER;
      hash = (53 * hash) + getFromSeat();
      hash = (37 * hash) + TOSEAT_FIELD_NUMBER;
      hash = (53 * hash) + getToSeat();
      hash = (37 * hash) + ACTIONID_FIELD_NUMBER;
      hash = (53 * hash) + getActionId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_SendAction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_SendAction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_SendAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_SendAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_SendAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_SendAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_SendAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_SendAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_SendAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_SendAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_SendAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_SendAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_SendAction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 互动表情消息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_SendAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_SendAction)
        P_SendActionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_SendAction_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_SendAction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_SendAction.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_SendAction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        fromSeat_ = 0;

        toSeat_ = 0;

        actionId_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_SendAction_descriptor;
      }

      @Override
      public P_SendAction getDefaultInstanceForType() {
        return P_SendAction.getDefaultInstance();
      }

      @Override
      public P_SendAction build() {
        P_SendAction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_SendAction buildPartial() {
        P_SendAction result = new P_SendAction(this);
        result.fromSeat_ = fromSeat_;
        result.toSeat_ = toSeat_;
        result.actionId_ = actionId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_SendAction) {
          return mergeFrom((P_SendAction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_SendAction other) {
        if (other == P_SendAction.getDefaultInstance()) return this;
        if (other.getFromSeat() != 0) {
          setFromSeat(other.getFromSeat());
        }
        if (other.getToSeat() != 0) {
          setToSeat(other.getToSeat());
        }
        if (other.getActionId() != 0) {
          setActionId(other.getActionId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_SendAction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_SendAction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int fromSeat_ ;
      /**
       * <pre>
       ** 发起的座位号 
       * </pre>
       *
       * <code>int32 fromSeat = 1;</code>
       */
      public int getFromSeat() {
        return fromSeat_;
      }
      /**
       * <pre>
       ** 发起的座位号 
       * </pre>
       *
       * <code>int32 fromSeat = 1;</code>
       */
      public Builder setFromSeat(int value) {
        
        fromSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 发起的座位号 
       * </pre>
       *
       * <code>int32 fromSeat = 1;</code>
       */
      public Builder clearFromSeat() {
        
        fromSeat_ = 0;
        onChanged();
        return this;
      }

      private int toSeat_ ;
      /**
       * <pre>
       ** 收到的座位号 
       * </pre>
       *
       * <code>int32 toSeat = 2;</code>
       */
      public int getToSeat() {
        return toSeat_;
      }
      /**
       * <pre>
       ** 收到的座位号 
       * </pre>
       *
       * <code>int32 toSeat = 2;</code>
       */
      public Builder setToSeat(int value) {
        
        toSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 收到的座位号 
       * </pre>
       *
       * <code>int32 toSeat = 2;</code>
       */
      public Builder clearToSeat() {
        
        toSeat_ = 0;
        onChanged();
        return this;
      }

      private int actionId_ ;
      /**
       * <pre>
       ** 表情号 
       * </pre>
       *
       * <code>int32 actionId = 3;</code>
       */
      public int getActionId() {
        return actionId_;
      }
      /**
       * <pre>
       ** 表情号 
       * </pre>
       *
       * <code>int32 actionId = 3;</code>
       */
      public Builder setActionId(int value) {
        
        actionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 表情号 
       * </pre>
       *
       * <code>int32 actionId = 3;</code>
       */
      public Builder clearActionId() {
        
        actionId_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_SendAction)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_SendAction)
    private static final P_SendAction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_SendAction();
    }

    public static P_SendAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_SendAction>
        PARSER = new com.google.protobuf.AbstractParser<P_SendAction>() {
      @Override
      public P_SendAction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_SendAction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_SendAction> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_SendAction> getParserForType() {
      return PARSER;
    }

    @Override
    public P_SendAction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_T_AutoPlayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_T_AutoPlay)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 托管的玩家座位号 
     * </pre>
     *
     * <code>int32 seatId = 1;</code>
     */
    int getSeatId();

    /**
     * <pre>
     ** 状态变化 1进入托管，2取消托管 
     * </pre>
     *
     * <code>int32 status = 2;</code>
     */
    int getStatus();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 3;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 二人场-有玩家进行托管了 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_T_AutoPlay}
   */
  public  static final class P_T_AutoPlay extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_T_AutoPlay)
      P_T_AutoPlayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_T_AutoPlay.newBuilder() to construct.
    private P_T_AutoPlay(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_T_AutoPlay() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_T_AutoPlay();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_T_AutoPlay(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seatId_ = input.readInt32();
              break;
            }
            case 16: {

              status_ = input.readInt32();
              break;
            }
            case 24: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_T_AutoPlay_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_T_AutoPlay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_T_AutoPlay.class, Builder.class);
    }

    public static final int SEATID_FIELD_NUMBER = 1;
    private int seatId_;
    /**
     * <pre>
     ** 托管的玩家座位号 
     * </pre>
     *
     * <code>int32 seatId = 1;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <pre>
     ** 状态变化 1进入托管，2取消托管 
     * </pre>
     *
     * <code>int32 status = 2;</code>
     */
    public int getStatus() {
      return status_;
    }

    public static final int INDEX_FIELD_NUMBER = 3;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 3;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (seatId_ != 0) {
        output.writeInt32(1, seatId_);
      }
      if (status_ != 0) {
        output.writeInt32(2, status_);
      }
      if (index_ != 0) {
        output.writeInt32(3, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatId_);
      }
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_T_AutoPlay)) {
        return super.equals(obj);
      }
      P_T_AutoPlay other = (P_T_AutoPlay) obj;

      if (getSeatId()
          != other.getSeatId()) return false;
      if (getStatus()
          != other.getStatus()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEATID_FIELD_NUMBER;
      hash = (53 * hash) + getSeatId();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_T_AutoPlay parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_AutoPlay parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_AutoPlay parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_AutoPlay parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_AutoPlay parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_AutoPlay parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_AutoPlay parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_AutoPlay parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_AutoPlay parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_T_AutoPlay parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_AutoPlay parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_AutoPlay parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_T_AutoPlay prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 二人场-有玩家进行托管了 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_T_AutoPlay}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_T_AutoPlay)
        P_T_AutoPlayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_T_AutoPlay_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_T_AutoPlay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_T_AutoPlay.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_T_AutoPlay.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        seatId_ = 0;

        status_ = 0;

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_T_AutoPlay_descriptor;
      }

      @Override
      public P_T_AutoPlay getDefaultInstanceForType() {
        return P_T_AutoPlay.getDefaultInstance();
      }

      @Override
      public P_T_AutoPlay build() {
        P_T_AutoPlay result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_T_AutoPlay buildPartial() {
        P_T_AutoPlay result = new P_T_AutoPlay(this);
        result.seatId_ = seatId_;
        result.status_ = status_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_T_AutoPlay) {
          return mergeFrom((P_T_AutoPlay)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_T_AutoPlay other) {
        if (other == P_T_AutoPlay.getDefaultInstance()) return this;
        if (other.getSeatId() != 0) {
          setSeatId(other.getSeatId());
        }
        if (other.getStatus() != 0) {
          setStatus(other.getStatus());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_T_AutoPlay parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_T_AutoPlay) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int seatId_ ;
      /**
       * <pre>
       ** 托管的玩家座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <pre>
       ** 托管的玩家座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public Builder setSeatId(int value) {
        
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 托管的玩家座位号 
       * </pre>
       *
       * <code>int32 seatId = 1;</code>
       */
      public Builder clearSeatId() {
        
        seatId_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       ** 状态变化 1进入托管，2取消托管 
       * </pre>
       *
       * <code>int32 status = 2;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       ** 状态变化 1进入托管，2取消托管 
       * </pre>
       *
       * <code>int32 status = 2;</code>
       */
      public Builder setStatus(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 状态变化 1进入托管，2取消托管 
       * </pre>
       *
       * <code>int32 status = 2;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 3;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_T_AutoPlay)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_T_AutoPlay)
    private static final P_T_AutoPlay DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_T_AutoPlay();
    }

    public static P_T_AutoPlay getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_T_AutoPlay>
        PARSER = new com.google.protobuf.AbstractParser<P_T_AutoPlay>() {
      @Override
      public P_T_AutoPlay parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_T_AutoPlay(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_T_AutoPlay> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_T_AutoPlay> getParserForType() {
      return PARSER;
    }

    @Override
    public P_T_AutoPlay getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_T_GameStartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_T_GameStart)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 1;</code>
     */
    java.util.List<Integer> getHandsCardsList();
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 1;</code>
     */
    int getHandsCardsCount();
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 1;</code>
     */
    int getHandsCards(int index);

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 2;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 二人场-游戏开始，发牌 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_T_GameStart}
   */
  public  static final class P_T_GameStart extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_T_GameStart)
      P_T_GameStartOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_T_GameStart.newBuilder() to construct.
    private P_T_GameStart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_T_GameStart() {
      handsCards_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_T_GameStart();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_T_GameStart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                handsCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              handsCards_.addInt(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                handsCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                handsCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          handsCards_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_T_GameStart_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_T_GameStart_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_T_GameStart.class, Builder.class);
    }

    public static final int HANDSCARDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList handsCards_;
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 1;</code>
     */
    public java.util.List<Integer>
        getHandsCardsList() {
      return handsCards_;
    }
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 1;</code>
     */
    public int getHandsCardsCount() {
      return handsCards_.size();
    }
    /**
     * <pre>
     ** 手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 1;</code>
     */
    public int getHandsCards(int index) {
      return handsCards_.getInt(index);
    }
    private int handsCardsMemoizedSerializedSize = -1;

    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 2;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getHandsCardsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(handsCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < handsCards_.size(); i++) {
        output.writeInt32NoTag(handsCards_.getInt(i));
      }
      if (index_ != 0) {
        output.writeInt32(2, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < handsCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handsCards_.getInt(i));
        }
        size += dataSize;
        if (!getHandsCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        handsCardsMemoizedSerializedSize = dataSize;
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_T_GameStart)) {
        return super.equals(obj);
      }
      P_T_GameStart other = (P_T_GameStart) obj;

      if (!getHandsCardsList()
          .equals(other.getHandsCardsList())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHandsCardsCount() > 0) {
        hash = (37 * hash) + HANDSCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHandsCardsList().hashCode();
      }
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_T_GameStart parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_GameStart parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_GameStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_GameStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_GameStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_GameStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_GameStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_GameStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_GameStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_T_GameStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_GameStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_GameStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_T_GameStart prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 二人场-游戏开始，发牌 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_T_GameStart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_T_GameStart)
        P_T_GameStartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_T_GameStart_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_T_GameStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_T_GameStart.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_T_GameStart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        handsCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_T_GameStart_descriptor;
      }

      @Override
      public P_T_GameStart getDefaultInstanceForType() {
        return P_T_GameStart.getDefaultInstance();
      }

      @Override
      public P_T_GameStart build() {
        P_T_GameStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_T_GameStart buildPartial() {
        P_T_GameStart result = new P_T_GameStart(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          handsCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.handsCards_ = handsCards_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_T_GameStart) {
          return mergeFrom((P_T_GameStart)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_T_GameStart other) {
        if (other == P_T_GameStart.getDefaultInstance()) return this;
        if (!other.handsCards_.isEmpty()) {
          if (handsCards_.isEmpty()) {
            handsCards_ = other.handsCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHandsCardsIsMutable();
            handsCards_.addAll(other.handsCards_);
          }
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_T_GameStart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_T_GameStart) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList handsCards_ = emptyIntList();
      private void ensureHandsCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          handsCards_ = mutableCopy(handsCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 1;</code>
       */
      public java.util.List<Integer>
          getHandsCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(handsCards_) : handsCards_;
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 1;</code>
       */
      public int getHandsCardsCount() {
        return handsCards_.size();
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 1;</code>
       */
      public int getHandsCards(int index) {
        return handsCards_.getInt(index);
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 1;</code>
       */
      public Builder setHandsCards(
          int index, int value) {
        ensureHandsCardsIsMutable();
        handsCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 1;</code>
       */
      public Builder addHandsCards(int value) {
        ensureHandsCardsIsMutable();
        handsCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 1;</code>
       */
      public Builder addAllHandsCards(
          Iterable<? extends Integer> values) {
        ensureHandsCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, handsCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 1;</code>
       */
      public Builder clearHandsCards() {
        handsCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 2;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 2;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 2;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_T_GameStart)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_T_GameStart)
    private static final P_T_GameStart DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_T_GameStart();
    }

    public static P_T_GameStart getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_T_GameStart>
        PARSER = new com.google.protobuf.AbstractParser<P_T_GameStart>() {
      @Override
      public P_T_GameStart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_T_GameStart(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_T_GameStart> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_T_GameStart> getParserForType() {
      return PARSER;
    }

    @Override
    public P_T_GameStart getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_T_DoCatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_T_DoCatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 叫地主的玩家座位号 
     * </pre>
     *
     * <code>int32 doCatchSeatId = 1;</code>
     */
    int getDoCatchSeatId();

    /**
     * <pre>
     ** 让牌数量 
     * </pre>
     *
     * <code>int32 rang = 2;</code>
     */
    int getRang();

    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 3;</code>
     */
    String getSystemTime();
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 3;</code>
     */
    com.google.protobuf.ByteString
        getSystemTimeBytes();

    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 4;</code>
     */
    String getExpireTime();
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 4;</code>
     */
    com.google.protobuf.ByteString
        getExpireTimeBytes();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 5;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 二人场-通知叫地主 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_T_DoCatch}
   */
  public  static final class P_T_DoCatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_T_DoCatch)
      P_T_DoCatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_T_DoCatch.newBuilder() to construct.
    private P_T_DoCatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_T_DoCatch() {
      systemTime_ = "";
      expireTime_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_T_DoCatch();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_T_DoCatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              doCatchSeatId_ = input.readInt32();
              break;
            }
            case 16: {

              rang_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              systemTime_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              expireTime_ = s;
              break;
            }
            case 40: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_T_DoCatch_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_T_DoCatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_T_DoCatch.class, Builder.class);
    }

    public static final int DOCATCHSEATID_FIELD_NUMBER = 1;
    private int doCatchSeatId_;
    /**
     * <pre>
     ** 叫地主的玩家座位号 
     * </pre>
     *
     * <code>int32 doCatchSeatId = 1;</code>
     */
    public int getDoCatchSeatId() {
      return doCatchSeatId_;
    }

    public static final int RANG_FIELD_NUMBER = 2;
    private int rang_;
    /**
     * <pre>
     ** 让牌数量 
     * </pre>
     *
     * <code>int32 rang = 2;</code>
     */
    public int getRang() {
      return rang_;
    }

    public static final int SYSTEMTIME_FIELD_NUMBER = 3;
    private volatile Object systemTime_;
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 3;</code>
     */
    public String getSystemTime() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        systemTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSystemTimeBytes() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        systemTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIRETIME_FIELD_NUMBER = 4;
    private volatile Object expireTime_;
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 4;</code>
     */
    public String getExpireTime() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        expireTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 4;</code>
     */
    public com.google.protobuf.ByteString
        getExpireTimeBytes() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        expireTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 5;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 5;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (doCatchSeatId_ != 0) {
        output.writeInt32(1, doCatchSeatId_);
      }
      if (rang_ != 0) {
        output.writeInt32(2, rang_);
      }
      if (!getSystemTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, expireTime_);
      }
      if (index_ != 0) {
        output.writeInt32(5, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (doCatchSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, doCatchSeatId_);
      }
      if (rang_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rang_);
      }
      if (!getSystemTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, expireTime_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_T_DoCatch)) {
        return super.equals(obj);
      }
      P_T_DoCatch other = (P_T_DoCatch) obj;

      if (getDoCatchSeatId()
          != other.getDoCatchSeatId()) return false;
      if (getRang()
          != other.getRang()) return false;
      if (!getSystemTime()
          .equals(other.getSystemTime())) return false;
      if (!getExpireTime()
          .equals(other.getExpireTime())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOCATCHSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getDoCatchSeatId();
      hash = (37 * hash) + RANG_FIELD_NUMBER;
      hash = (53 * hash) + getRang();
      hash = (37 * hash) + SYSTEMTIME_FIELD_NUMBER;
      hash = (53 * hash) + getSystemTime().hashCode();
      hash = (37 * hash) + EXPIRETIME_FIELD_NUMBER;
      hash = (53 * hash) + getExpireTime().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_T_DoCatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_DoCatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_DoCatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_DoCatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_DoCatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_DoCatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_DoCatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_DoCatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_DoCatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_T_DoCatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_DoCatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_DoCatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_T_DoCatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 二人场-通知叫地主 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_T_DoCatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_T_DoCatch)
        P_T_DoCatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_T_DoCatch_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_T_DoCatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_T_DoCatch.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_T_DoCatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        doCatchSeatId_ = 0;

        rang_ = 0;

        systemTime_ = "";

        expireTime_ = "";

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_T_DoCatch_descriptor;
      }

      @Override
      public P_T_DoCatch getDefaultInstanceForType() {
        return P_T_DoCatch.getDefaultInstance();
      }

      @Override
      public P_T_DoCatch build() {
        P_T_DoCatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_T_DoCatch buildPartial() {
        P_T_DoCatch result = new P_T_DoCatch(this);
        result.doCatchSeatId_ = doCatchSeatId_;
        result.rang_ = rang_;
        result.systemTime_ = systemTime_;
        result.expireTime_ = expireTime_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_T_DoCatch) {
          return mergeFrom((P_T_DoCatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_T_DoCatch other) {
        if (other == P_T_DoCatch.getDefaultInstance()) return this;
        if (other.getDoCatchSeatId() != 0) {
          setDoCatchSeatId(other.getDoCatchSeatId());
        }
        if (other.getRang() != 0) {
          setRang(other.getRang());
        }
        if (!other.getSystemTime().isEmpty()) {
          systemTime_ = other.systemTime_;
          onChanged();
        }
        if (!other.getExpireTime().isEmpty()) {
          expireTime_ = other.expireTime_;
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_T_DoCatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_T_DoCatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int doCatchSeatId_ ;
      /**
       * <pre>
       ** 叫地主的玩家座位号 
       * </pre>
       *
       * <code>int32 doCatchSeatId = 1;</code>
       */
      public int getDoCatchSeatId() {
        return doCatchSeatId_;
      }
      /**
       * <pre>
       ** 叫地主的玩家座位号 
       * </pre>
       *
       * <code>int32 doCatchSeatId = 1;</code>
       */
      public Builder setDoCatchSeatId(int value) {
        
        doCatchSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 叫地主的玩家座位号 
       * </pre>
       *
       * <code>int32 doCatchSeatId = 1;</code>
       */
      public Builder clearDoCatchSeatId() {
        
        doCatchSeatId_ = 0;
        onChanged();
        return this;
      }

      private int rang_ ;
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public int getRang() {
        return rang_;
      }
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public Builder setRang(int value) {
        
        rang_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public Builder clearRang() {
        
        rang_ = 0;
        onChanged();
        return this;
      }

      private Object systemTime_ = "";
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public String getSystemTime() {
        Object ref = systemTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          systemTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSystemTimeBytes() {
        Object ref = systemTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          systemTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public Builder setSystemTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        systemTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public Builder clearSystemTime() {
        
        systemTime_ = getDefaultInstance().getSystemTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 3;</code>
       */
      public Builder setSystemTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        systemTime_ = value;
        onChanged();
        return this;
      }

      private Object expireTime_ = "";
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public String getExpireTime() {
        Object ref = expireTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          expireTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public com.google.protobuf.ByteString
          getExpireTimeBytes() {
        Object ref = expireTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          expireTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public Builder setExpireTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        expireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public Builder clearExpireTime() {
        
        expireTime_ = getDefaultInstance().getExpireTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 4;</code>
       */
      public Builder setExpireTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        expireTime_ = value;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_T_DoCatch)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_T_DoCatch)
    private static final P_T_DoCatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_T_DoCatch();
    }

    public static P_T_DoCatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_T_DoCatch>
        PARSER = new com.google.protobuf.AbstractParser<P_T_DoCatch>() {
      @Override
      public P_T_DoCatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_T_DoCatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_T_DoCatch> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_T_DoCatch> getParserForType() {
      return PARSER;
    }

    @Override
    public P_T_DoCatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_T_CatchResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_T_CatchResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 叫分玩家座位号 
     * </pre>
     *
     * <code>int32 catchSeatId = 1;</code>
     */
    int getCatchSeatId();

    /**
     * <pre>
     ** 让牌数量 
     * </pre>
     *
     * <code>int32 rang = 2;</code>
     */
    int getRang();

    /**
     * <pre>
     ** 玩家叫地主后倍率变换 
     * </pre>
     *
     * <code>int32 ratio = 3;</code>
     */
    int getRatio();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    int getIndex();

    /**
     * <pre>
     ** 玩家具体叫分  叫地主阶段使用，叫地主的分0不叫，1分，-1为还没轮到叫分 
     * </pre>
     *
     * <code>int32 catchScore = 5;</code>
     */
    int getCatchScore();
  }
  /**
   * <pre>
   ** Push 二人场-上个玩家叫地主结果 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_T_CatchResult}
   */
  public  static final class P_T_CatchResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_T_CatchResult)
      P_T_CatchResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_T_CatchResult.newBuilder() to construct.
    private P_T_CatchResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_T_CatchResult() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_T_CatchResult();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_T_CatchResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              catchSeatId_ = input.readInt32();
              break;
            }
            case 16: {

              rang_ = input.readInt32();
              break;
            }
            case 24: {

              ratio_ = input.readInt32();
              break;
            }
            case 32: {

              index_ = input.readInt32();
              break;
            }
            case 40: {

              catchScore_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_T_CatchResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_T_CatchResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_T_CatchResult.class, Builder.class);
    }

    public static final int CATCHSEATID_FIELD_NUMBER = 1;
    private int catchSeatId_;
    /**
     * <pre>
     ** 叫分玩家座位号 
     * </pre>
     *
     * <code>int32 catchSeatId = 1;</code>
     */
    public int getCatchSeatId() {
      return catchSeatId_;
    }

    public static final int RANG_FIELD_NUMBER = 2;
    private int rang_;
    /**
     * <pre>
     ** 让牌数量 
     * </pre>
     *
     * <code>int32 rang = 2;</code>
     */
    public int getRang() {
      return rang_;
    }

    public static final int RATIO_FIELD_NUMBER = 3;
    private int ratio_;
    /**
     * <pre>
     ** 玩家叫地主后倍率变换 
     * </pre>
     *
     * <code>int32 ratio = 3;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    public static final int INDEX_FIELD_NUMBER = 4;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int CATCHSCORE_FIELD_NUMBER = 5;
    private int catchScore_;
    /**
     * <pre>
     ** 玩家具体叫分  叫地主阶段使用，叫地主的分0不叫，1分，-1为还没轮到叫分 
     * </pre>
     *
     * <code>int32 catchScore = 5;</code>
     */
    public int getCatchScore() {
      return catchScore_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (catchSeatId_ != 0) {
        output.writeInt32(1, catchSeatId_);
      }
      if (rang_ != 0) {
        output.writeInt32(2, rang_);
      }
      if (ratio_ != 0) {
        output.writeInt32(3, ratio_);
      }
      if (index_ != 0) {
        output.writeInt32(4, index_);
      }
      if (catchScore_ != 0) {
        output.writeInt32(5, catchScore_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (catchSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, catchSeatId_);
      }
      if (rang_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rang_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ratio_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, index_);
      }
      if (catchScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, catchScore_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_T_CatchResult)) {
        return super.equals(obj);
      }
      P_T_CatchResult other = (P_T_CatchResult) obj;

      if (getCatchSeatId()
          != other.getCatchSeatId()) return false;
      if (getRang()
          != other.getRang()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (getCatchScore()
          != other.getCatchScore()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CATCHSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getCatchSeatId();
      hash = (37 * hash) + RANG_FIELD_NUMBER;
      hash = (53 * hash) + getRang();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + CATCHSCORE_FIELD_NUMBER;
      hash = (53 * hash) + getCatchScore();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_T_CatchResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_CatchResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_CatchResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_CatchResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_CatchResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_CatchResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_CatchResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_CatchResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_CatchResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_T_CatchResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_CatchResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_CatchResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_T_CatchResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 二人场-上个玩家叫地主结果 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_T_CatchResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_T_CatchResult)
        P_T_CatchResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_T_CatchResult_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_T_CatchResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_T_CatchResult.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_T_CatchResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        catchSeatId_ = 0;

        rang_ = 0;

        ratio_ = 0;

        index_ = 0;

        catchScore_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_T_CatchResult_descriptor;
      }

      @Override
      public P_T_CatchResult getDefaultInstanceForType() {
        return P_T_CatchResult.getDefaultInstance();
      }

      @Override
      public P_T_CatchResult build() {
        P_T_CatchResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_T_CatchResult buildPartial() {
        P_T_CatchResult result = new P_T_CatchResult(this);
        result.catchSeatId_ = catchSeatId_;
        result.rang_ = rang_;
        result.ratio_ = ratio_;
        result.index_ = index_;
        result.catchScore_ = catchScore_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_T_CatchResult) {
          return mergeFrom((P_T_CatchResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_T_CatchResult other) {
        if (other == P_T_CatchResult.getDefaultInstance()) return this;
        if (other.getCatchSeatId() != 0) {
          setCatchSeatId(other.getCatchSeatId());
        }
        if (other.getRang() != 0) {
          setRang(other.getRang());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getCatchScore() != 0) {
          setCatchScore(other.getCatchScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_T_CatchResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_T_CatchResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int catchSeatId_ ;
      /**
       * <pre>
       ** 叫分玩家座位号 
       * </pre>
       *
       * <code>int32 catchSeatId = 1;</code>
       */
      public int getCatchSeatId() {
        return catchSeatId_;
      }
      /**
       * <pre>
       ** 叫分玩家座位号 
       * </pre>
       *
       * <code>int32 catchSeatId = 1;</code>
       */
      public Builder setCatchSeatId(int value) {
        
        catchSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 叫分玩家座位号 
       * </pre>
       *
       * <code>int32 catchSeatId = 1;</code>
       */
      public Builder clearCatchSeatId() {
        
        catchSeatId_ = 0;
        onChanged();
        return this;
      }

      private int rang_ ;
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public int getRang() {
        return rang_;
      }
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public Builder setRang(int value) {
        
        rang_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public Builder clearRang() {
        
        rang_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 玩家叫地主后倍率变换 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 玩家叫地主后倍率变换 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家叫地主后倍率变换 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private int catchScore_ ;
      /**
       * <pre>
       ** 玩家具体叫分  叫地主阶段使用，叫地主的分0不叫，1分，-1为还没轮到叫分 
       * </pre>
       *
       * <code>int32 catchScore = 5;</code>
       */
      public int getCatchScore() {
        return catchScore_;
      }
      /**
       * <pre>
       ** 玩家具体叫分  叫地主阶段使用，叫地主的分0不叫，1分，-1为还没轮到叫分 
       * </pre>
       *
       * <code>int32 catchScore = 5;</code>
       */
      public Builder setCatchScore(int value) {
        
        catchScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家具体叫分  叫地主阶段使用，叫地主的分0不叫，1分，-1为还没轮到叫分 
       * </pre>
       *
       * <code>int32 catchScore = 5;</code>
       */
      public Builder clearCatchScore() {
        
        catchScore_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_T_CatchResult)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_T_CatchResult)
    private static final P_T_CatchResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_T_CatchResult();
    }

    public static P_T_CatchResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_T_CatchResult>
        PARSER = new com.google.protobuf.AbstractParser<P_T_CatchResult>() {
      @Override
      public P_T_CatchResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_T_CatchResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_T_CatchResult> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_T_CatchResult> getParserForType() {
      return PARSER;
    }

    @Override
    public P_T_CatchResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_T_SendDiZhuCardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_T_SendDiZhuCard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 最后成为地主的玩家座位号 
     * </pre>
     *
     * <code>int32 dizhuSeatId = 1;</code>
     */
    int getDizhuSeatId();

    /**
     * <pre>
     ** 让牌数量 
     * </pre>
     *
     * <code>int32 rang = 2;</code>
     */
    int getRang();

    /**
     * <pre>
     ** 倍率 
     * </pre>
     *
     * <code>int32 ratio = 3;</code>
     */
    int getRatio();

    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    java.util.List<Integer> getDizhuCardsList();
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    int getDizhuCardsCount();
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    int getDizhuCards(int index);

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 5;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Push 二人场-发地主牌 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_T_SendDiZhuCard}
   */
  public  static final class P_T_SendDiZhuCard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_T_SendDiZhuCard)
      P_T_SendDiZhuCardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_T_SendDiZhuCard.newBuilder() to construct.
    private P_T_SendDiZhuCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_T_SendDiZhuCard() {
      dizhuCards_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_T_SendDiZhuCard();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_T_SendDiZhuCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              dizhuSeatId_ = input.readInt32();
              break;
            }
            case 16: {

              rang_ = input.readInt32();
              break;
            }
            case 24: {

              ratio_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dizhuCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dizhuCards_.addInt(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dizhuCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dizhuCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dizhuCards_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_T_SendDiZhuCard_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_T_SendDiZhuCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_T_SendDiZhuCard.class, Builder.class);
    }

    public static final int DIZHUSEATID_FIELD_NUMBER = 1;
    private int dizhuSeatId_;
    /**
     * <pre>
     ** 最后成为地主的玩家座位号 
     * </pre>
     *
     * <code>int32 dizhuSeatId = 1;</code>
     */
    public int getDizhuSeatId() {
      return dizhuSeatId_;
    }

    public static final int RANG_FIELD_NUMBER = 2;
    private int rang_;
    /**
     * <pre>
     ** 让牌数量 
     * </pre>
     *
     * <code>int32 rang = 2;</code>
     */
    public int getRang() {
      return rang_;
    }

    public static final int RATIO_FIELD_NUMBER = 3;
    private int ratio_;
    /**
     * <pre>
     ** 倍率 
     * </pre>
     *
     * <code>int32 ratio = 3;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    public static final int DIZHUCARDS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList dizhuCards_;
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    public java.util.List<Integer>
        getDizhuCardsList() {
      return dizhuCards_;
    }
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    public int getDizhuCardsCount() {
      return dizhuCards_.size();
    }
    /**
     * <pre>
     ** 地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    public int getDizhuCards(int index) {
      return dizhuCards_.getInt(index);
    }
    private int dizhuCardsMemoizedSerializedSize = -1;

    public static final int INDEX_FIELD_NUMBER = 5;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 5;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (dizhuSeatId_ != 0) {
        output.writeInt32(1, dizhuSeatId_);
      }
      if (rang_ != 0) {
        output.writeInt32(2, rang_);
      }
      if (ratio_ != 0) {
        output.writeInt32(3, ratio_);
      }
      if (getDizhuCardsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(dizhuCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < dizhuCards_.size(); i++) {
        output.writeInt32NoTag(dizhuCards_.getInt(i));
      }
      if (index_ != 0) {
        output.writeInt32(5, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dizhuSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dizhuSeatId_);
      }
      if (rang_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rang_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ratio_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dizhuCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dizhuCards_.getInt(i));
        }
        size += dataSize;
        if (!getDizhuCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dizhuCardsMemoizedSerializedSize = dataSize;
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_T_SendDiZhuCard)) {
        return super.equals(obj);
      }
      P_T_SendDiZhuCard other = (P_T_SendDiZhuCard) obj;

      if (getDizhuSeatId()
          != other.getDizhuSeatId()) return false;
      if (getRang()
          != other.getRang()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (!getDizhuCardsList()
          .equals(other.getDizhuCardsList())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DIZHUSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getDizhuSeatId();
      hash = (37 * hash) + RANG_FIELD_NUMBER;
      hash = (53 * hash) + getRang();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      if (getDizhuCardsCount() > 0) {
        hash = (37 * hash) + DIZHUCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getDizhuCardsList().hashCode();
      }
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_T_SendDiZhuCard parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_SendDiZhuCard parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_SendDiZhuCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_SendDiZhuCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_SendDiZhuCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_SendDiZhuCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_SendDiZhuCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_SendDiZhuCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_SendDiZhuCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_T_SendDiZhuCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_SendDiZhuCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_SendDiZhuCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_T_SendDiZhuCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 二人场-发地主牌 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_T_SendDiZhuCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_T_SendDiZhuCard)
        P_T_SendDiZhuCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_T_SendDiZhuCard_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_T_SendDiZhuCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_T_SendDiZhuCard.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_T_SendDiZhuCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        dizhuSeatId_ = 0;

        rang_ = 0;

        ratio_ = 0;

        dizhuCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_T_SendDiZhuCard_descriptor;
      }

      @Override
      public P_T_SendDiZhuCard getDefaultInstanceForType() {
        return P_T_SendDiZhuCard.getDefaultInstance();
      }

      @Override
      public P_T_SendDiZhuCard build() {
        P_T_SendDiZhuCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_T_SendDiZhuCard buildPartial() {
        P_T_SendDiZhuCard result = new P_T_SendDiZhuCard(this);
        int from_bitField0_ = bitField0_;
        result.dizhuSeatId_ = dizhuSeatId_;
        result.rang_ = rang_;
        result.ratio_ = ratio_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dizhuCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dizhuCards_ = dizhuCards_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_T_SendDiZhuCard) {
          return mergeFrom((P_T_SendDiZhuCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_T_SendDiZhuCard other) {
        if (other == P_T_SendDiZhuCard.getDefaultInstance()) return this;
        if (other.getDizhuSeatId() != 0) {
          setDizhuSeatId(other.getDizhuSeatId());
        }
        if (other.getRang() != 0) {
          setRang(other.getRang());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        if (!other.dizhuCards_.isEmpty()) {
          if (dizhuCards_.isEmpty()) {
            dizhuCards_ = other.dizhuCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDizhuCardsIsMutable();
            dizhuCards_.addAll(other.dizhuCards_);
          }
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_T_SendDiZhuCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_T_SendDiZhuCard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dizhuSeatId_ ;
      /**
       * <pre>
       ** 最后成为地主的玩家座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 1;</code>
       */
      public int getDizhuSeatId() {
        return dizhuSeatId_;
      }
      /**
       * <pre>
       ** 最后成为地主的玩家座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 1;</code>
       */
      public Builder setDizhuSeatId(int value) {
        
        dizhuSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 最后成为地主的玩家座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 1;</code>
       */
      public Builder clearDizhuSeatId() {
        
        dizhuSeatId_ = 0;
        onChanged();
        return this;
      }

      private int rang_ ;
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public int getRang() {
        return rang_;
      }
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public Builder setRang(int value) {
        
        rang_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 2;</code>
       */
      public Builder clearRang() {
        
        rang_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 倍率 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 倍率 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 倍率 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dizhuCards_ = emptyIntList();
      private void ensureDizhuCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dizhuCards_ = mutableCopy(dizhuCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public java.util.List<Integer>
          getDizhuCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dizhuCards_) : dizhuCards_;
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public int getDizhuCardsCount() {
        return dizhuCards_.size();
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public int getDizhuCards(int index) {
        return dizhuCards_.getInt(index);
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public Builder setDizhuCards(
          int index, int value) {
        ensureDizhuCardsIsMutable();
        dizhuCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public Builder addDizhuCards(int value) {
        ensureDizhuCardsIsMutable();
        dizhuCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public Builder addAllDizhuCards(
          Iterable<? extends Integer> values) {
        ensureDizhuCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dizhuCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public Builder clearDizhuCards() {
        dizhuCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 5;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_T_SendDiZhuCard)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_T_SendDiZhuCard)
    private static final P_T_SendDiZhuCard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_T_SendDiZhuCard();
    }

    public static P_T_SendDiZhuCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_T_SendDiZhuCard>
        PARSER = new com.google.protobuf.AbstractParser<P_T_SendDiZhuCard>() {
      @Override
      public P_T_SendDiZhuCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_T_SendDiZhuCard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_T_SendDiZhuCard> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_T_SendDiZhuCard> getParserForType() {
      return PARSER;
    }

    @Override
    public P_T_SendDiZhuCard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_T_GameSettleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_T_GameSettle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
     * </pre>
     *
     * <code>int32 isContinue = 1;</code>
     */
    int getIsContinue();

    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    java.util.List<LandlordBase.PlayerSettle>
        getPSettleList();
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    LandlordBase.PlayerSettle getPSettle(int index);
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    int getPSettleCount();
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    java.util.List<? extends LandlordBase.PlayerSettleOrBuilder>
        getPSettleOrBuilderList();
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    LandlordBase.PlayerSettleOrBuilder getPSettleOrBuilder(
        int index);

    /**
     * <pre>
     ** 春天标识，0没春天，1春天，2反春 
     * </pre>
     *
     * <code>int32 springStatus = 3;</code>
     */
    int getSpringStatus();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    int getIndex();

    /**
     * <pre>
     ** 最终倍率 
     * </pre>
     *
     * <code>int32 ratio = 5;</code>
     */
    int getRatio();
  }
  /**
   * <pre>
   ** Push 二人场-游戏结算信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_T_GameSettle}
   */
  public  static final class P_T_GameSettle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_T_GameSettle)
      P_T_GameSettleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_T_GameSettle.newBuilder() to construct.
    private P_T_GameSettle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_T_GameSettle() {
      pSettle_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_T_GameSettle();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_T_GameSettle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              isContinue_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                pSettle_ = new java.util.ArrayList<LandlordBase.PlayerSettle>();
                mutable_bitField0_ |= 0x00000001;
              }
              pSettle_.add(
                  input.readMessage(LandlordBase.PlayerSettle.parser(), extensionRegistry));
              break;
            }
            case 24: {

              springStatus_ = input.readInt32();
              break;
            }
            case 32: {

              index_ = input.readInt32();
              break;
            }
            case 40: {

              ratio_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          pSettle_ = java.util.Collections.unmodifiableList(pSettle_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_T_GameSettle_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_T_GameSettle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_T_GameSettle.class, Builder.class);
    }

    public static final int ISCONTINUE_FIELD_NUMBER = 1;
    private int isContinue_;
    /**
     * <pre>
     ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
     * </pre>
     *
     * <code>int32 isContinue = 1;</code>
     */
    public int getIsContinue() {
      return isContinue_;
    }

    public static final int PSETTLE_FIELD_NUMBER = 2;
    private java.util.List<LandlordBase.PlayerSettle> pSettle_;
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public java.util.List<LandlordBase.PlayerSettle> getPSettleList() {
      return pSettle_;
    }
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public java.util.List<? extends LandlordBase.PlayerSettleOrBuilder>
        getPSettleOrBuilderList() {
      return pSettle_;
    }
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public int getPSettleCount() {
      return pSettle_.size();
    }
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public LandlordBase.PlayerSettle getPSettle(int index) {
      return pSettle_.get(index);
    }
    /**
     * <pre>
     ** 每个玩家具体的结算信息
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
     */
    public LandlordBase.PlayerSettleOrBuilder getPSettleOrBuilder(
        int index) {
      return pSettle_.get(index);
    }

    public static final int SPRINGSTATUS_FIELD_NUMBER = 3;
    private int springStatus_;
    /**
     * <pre>
     ** 春天标识，0没春天，1春天，2反春 
     * </pre>
     *
     * <code>int32 springStatus = 3;</code>
     */
    public int getSpringStatus() {
      return springStatus_;
    }

    public static final int INDEX_FIELD_NUMBER = 4;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 4;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int RATIO_FIELD_NUMBER = 5;
    private int ratio_;
    /**
     * <pre>
     ** 最终倍率 
     * </pre>
     *
     * <code>int32 ratio = 5;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isContinue_ != 0) {
        output.writeInt32(1, isContinue_);
      }
      for (int i = 0; i < pSettle_.size(); i++) {
        output.writeMessage(2, pSettle_.get(i));
      }
      if (springStatus_ != 0) {
        output.writeInt32(3, springStatus_);
      }
      if (index_ != 0) {
        output.writeInt32(4, index_);
      }
      if (ratio_ != 0) {
        output.writeInt32(5, ratio_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isContinue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, isContinue_);
      }
      for (int i = 0; i < pSettle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pSettle_.get(i));
      }
      if (springStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, springStatus_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, index_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, ratio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_T_GameSettle)) {
        return super.equals(obj);
      }
      P_T_GameSettle other = (P_T_GameSettle) obj;

      if (getIsContinue()
          != other.getIsContinue()) return false;
      if (!getPSettleList()
          .equals(other.getPSettleList())) return false;
      if (getSpringStatus()
          != other.getSpringStatus()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ISCONTINUE_FIELD_NUMBER;
      hash = (53 * hash) + getIsContinue();
      if (getPSettleCount() > 0) {
        hash = (37 * hash) + PSETTLE_FIELD_NUMBER;
        hash = (53 * hash) + getPSettleList().hashCode();
      }
      hash = (37 * hash) + SPRINGSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getSpringStatus();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_T_GameSettle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_GameSettle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_GameSettle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_GameSettle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_GameSettle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_T_GameSettle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_T_GameSettle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_GameSettle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_GameSettle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_T_GameSettle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_T_GameSettle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_T_GameSettle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_T_GameSettle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 二人场-游戏结算信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_T_GameSettle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_T_GameSettle)
        P_T_GameSettleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_T_GameSettle_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_T_GameSettle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_T_GameSettle.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_T_GameSettle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPSettleFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        isContinue_ = 0;

        if (pSettleBuilder_ == null) {
          pSettle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pSettleBuilder_.clear();
        }
        springStatus_ = 0;

        index_ = 0;

        ratio_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_T_GameSettle_descriptor;
      }

      @Override
      public P_T_GameSettle getDefaultInstanceForType() {
        return P_T_GameSettle.getDefaultInstance();
      }

      @Override
      public P_T_GameSettle build() {
        P_T_GameSettle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_T_GameSettle buildPartial() {
        P_T_GameSettle result = new P_T_GameSettle(this);
        int from_bitField0_ = bitField0_;
        result.isContinue_ = isContinue_;
        if (pSettleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            pSettle_ = java.util.Collections.unmodifiableList(pSettle_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pSettle_ = pSettle_;
        } else {
          result.pSettle_ = pSettleBuilder_.build();
        }
        result.springStatus_ = springStatus_;
        result.index_ = index_;
        result.ratio_ = ratio_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_T_GameSettle) {
          return mergeFrom((P_T_GameSettle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_T_GameSettle other) {
        if (other == P_T_GameSettle.getDefaultInstance()) return this;
        if (other.getIsContinue() != 0) {
          setIsContinue(other.getIsContinue());
        }
        if (pSettleBuilder_ == null) {
          if (!other.pSettle_.isEmpty()) {
            if (pSettle_.isEmpty()) {
              pSettle_ = other.pSettle_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePSettleIsMutable();
              pSettle_.addAll(other.pSettle_);
            }
            onChanged();
          }
        } else {
          if (!other.pSettle_.isEmpty()) {
            if (pSettleBuilder_.isEmpty()) {
              pSettleBuilder_.dispose();
              pSettleBuilder_ = null;
              pSettle_ = other.pSettle_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pSettleBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPSettleFieldBuilder() : null;
            } else {
              pSettleBuilder_.addAllMessages(other.pSettle_);
            }
          }
        }
        if (other.getSpringStatus() != 0) {
          setSpringStatus(other.getSpringStatus());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_T_GameSettle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_T_GameSettle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int isContinue_ ;
      /**
       * <pre>
       ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
       * </pre>
       *
       * <code>int32 isContinue = 1;</code>
       */
      public int getIsContinue() {
        return isContinue_;
      }
      /**
       * <pre>
       ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
       * </pre>
       *
       * <code>int32 isContinue = 1;</code>
       */
      public Builder setIsContinue(int value) {
        
        isContinue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否还有下一局,1继续下一局,2没有下一局房间关闭， 
       * </pre>
       *
       * <code>int32 isContinue = 1;</code>
       */
      public Builder clearIsContinue() {
        
        isContinue_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<LandlordBase.PlayerSettle> pSettle_ =
        java.util.Collections.emptyList();
      private void ensurePSettleIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pSettle_ = new java.util.ArrayList<LandlordBase.PlayerSettle>(pSettle_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.PlayerSettle, LandlordBase.PlayerSettle.Builder, LandlordBase.PlayerSettleOrBuilder> pSettleBuilder_;

      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public java.util.List<LandlordBase.PlayerSettle> getPSettleList() {
        if (pSettleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pSettle_);
        } else {
          return pSettleBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public int getPSettleCount() {
        if (pSettleBuilder_ == null) {
          return pSettle_.size();
        } else {
          return pSettleBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettle getPSettle(int index) {
        if (pSettleBuilder_ == null) {
          return pSettle_.get(index);
        } else {
          return pSettleBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder setPSettle(
          int index, LandlordBase.PlayerSettle value) {
        if (pSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePSettleIsMutable();
          pSettle_.set(index, value);
          onChanged();
        } else {
          pSettleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder setPSettle(
          int index, LandlordBase.PlayerSettle.Builder builderForValue) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          pSettle_.set(index, builderForValue.build());
          onChanged();
        } else {
          pSettleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addPSettle(LandlordBase.PlayerSettle value) {
        if (pSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePSettleIsMutable();
          pSettle_.add(value);
          onChanged();
        } else {
          pSettleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addPSettle(
          int index, LandlordBase.PlayerSettle value) {
        if (pSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePSettleIsMutable();
          pSettle_.add(index, value);
          onChanged();
        } else {
          pSettleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addPSettle(
          LandlordBase.PlayerSettle.Builder builderForValue) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          pSettle_.add(builderForValue.build());
          onChanged();
        } else {
          pSettleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addPSettle(
          int index, LandlordBase.PlayerSettle.Builder builderForValue) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          pSettle_.add(index, builderForValue.build());
          onChanged();
        } else {
          pSettleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder addAllPSettle(
          Iterable<? extends LandlordBase.PlayerSettle> values) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pSettle_);
          onChanged();
        } else {
          pSettleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder clearPSettle() {
        if (pSettleBuilder_ == null) {
          pSettle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pSettleBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public Builder removePSettle(int index) {
        if (pSettleBuilder_ == null) {
          ensurePSettleIsMutable();
          pSettle_.remove(index);
          onChanged();
        } else {
          pSettleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettle.Builder getPSettleBuilder(
          int index) {
        return getPSettleFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettleOrBuilder getPSettleOrBuilder(
          int index) {
        if (pSettleBuilder_ == null) {
          return pSettle_.get(index);  } else {
          return pSettleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public java.util.List<? extends LandlordBase.PlayerSettleOrBuilder>
           getPSettleOrBuilderList() {
        if (pSettleBuilder_ != null) {
          return pSettleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pSettle_);
        }
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettle.Builder addPSettleBuilder() {
        return getPSettleFieldBuilder().addBuilder(
            LandlordBase.PlayerSettle.getDefaultInstance());
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public LandlordBase.PlayerSettle.Builder addPSettleBuilder(
          int index) {
        return getPSettleFieldBuilder().addBuilder(
            index, LandlordBase.PlayerSettle.getDefaultInstance());
      }
      /**
       * <pre>
       ** 每个玩家具体的结算信息
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerSettle pSettle = 2;</code>
       */
      public java.util.List<LandlordBase.PlayerSettle.Builder>
           getPSettleBuilderList() {
        return getPSettleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.PlayerSettle, LandlordBase.PlayerSettle.Builder, LandlordBase.PlayerSettleOrBuilder>
          getPSettleFieldBuilder() {
        if (pSettleBuilder_ == null) {
          pSettleBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.PlayerSettle, LandlordBase.PlayerSettle.Builder, LandlordBase.PlayerSettleOrBuilder>(
                  pSettle_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          pSettle_ = null;
        }
        return pSettleBuilder_;
      }

      private int springStatus_ ;
      /**
       * <pre>
       ** 春天标识，0没春天，1春天，2反春 
       * </pre>
       *
       * <code>int32 springStatus = 3;</code>
       */
      public int getSpringStatus() {
        return springStatus_;
      }
      /**
       * <pre>
       ** 春天标识，0没春天，1春天，2反春 
       * </pre>
       *
       * <code>int32 springStatus = 3;</code>
       */
      public Builder setSpringStatus(int value) {
        
        springStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 春天标识，0没春天，1春天，2反春 
       * </pre>
       *
       * <code>int32 springStatus = 3;</code>
       */
      public Builder clearSpringStatus() {
        
        springStatus_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 4;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 最终倍率 
       * </pre>
       *
       * <code>int32 ratio = 5;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 最终倍率 
       * </pre>
       *
       * <code>int32 ratio = 5;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 最终倍率 
       * </pre>
       *
       * <code>int32 ratio = 5;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_T_GameSettle)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_T_GameSettle)
    private static final P_T_GameSettle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_T_GameSettle();
    }

    public static P_T_GameSettle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_T_GameSettle>
        PARSER = new com.google.protobuf.AbstractParser<P_T_GameSettle>() {
      @Override
      public P_T_GameSettle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_T_GameSettle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_T_GameSettle> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_T_GameSettle> getParserForType() {
      return PARSER;
    }

    @Override
    public P_T_GameSettle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_MatchListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_MatchList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 比赛列表推送序号 
     * </pre>
     *
     * <code>int32 match_index = 1;</code>
     */
    int getMatchIndex();

    /**
     * <pre>
     ** 变化类型,1人数变化,2场次增减 
     * </pre>
     *
     * <code>int32 type = 2;</code>
     */
    int getType();

    /**
     * <pre>
     ** 变化场次ID
     * </pre>
     *
     * <code>int32 matchId = 3;</code>
     */
    int getMatchId();

    /**
     * <pre>
     ** 变化后当前人数 
     * </pre>
     *
     * <code>int32 playerNum = 4;</code>
     */
    int getPlayerNum();
  }
  /**
   * <pre>
   ** Push 比赛场-赛事列表的推送 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_MatchList}
   */
  public  static final class P_MatchList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_MatchList)
      P_MatchListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_MatchList.newBuilder() to construct.
    private P_MatchList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_MatchList() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_MatchList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_MatchList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              matchIndex_ = input.readInt32();
              break;
            }
            case 16: {

              type_ = input.readInt32();
              break;
            }
            case 24: {

              matchId_ = input.readInt32();
              break;
            }
            case 32: {

              playerNum_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_MatchList_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_MatchList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_MatchList.class, Builder.class);
    }

    public static final int MATCH_INDEX_FIELD_NUMBER = 1;
    private int matchIndex_;
    /**
     * <pre>
     ** 比赛列表推送序号 
     * </pre>
     *
     * <code>int32 match_index = 1;</code>
     */
    public int getMatchIndex() {
      return matchIndex_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     ** 变化类型,1人数变化,2场次增减 
     * </pre>
     *
     * <code>int32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int MATCHID_FIELD_NUMBER = 3;
    private int matchId_;
    /**
     * <pre>
     ** 变化场次ID
     * </pre>
     *
     * <code>int32 matchId = 3;</code>
     */
    public int getMatchId() {
      return matchId_;
    }

    public static final int PLAYERNUM_FIELD_NUMBER = 4;
    private int playerNum_;
    /**
     * <pre>
     ** 变化后当前人数 
     * </pre>
     *
     * <code>int32 playerNum = 4;</code>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (matchIndex_ != 0) {
        output.writeInt32(1, matchIndex_);
      }
      if (type_ != 0) {
        output.writeInt32(2, type_);
      }
      if (matchId_ != 0) {
        output.writeInt32(3, matchId_);
      }
      if (playerNum_ != 0) {
        output.writeInt32(4, playerNum_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (matchIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchIndex_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (matchId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, matchId_);
      }
      if (playerNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, playerNum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_MatchList)) {
        return super.equals(obj);
      }
      P_MatchList other = (P_MatchList) obj;

      if (getMatchIndex()
          != other.getMatchIndex()) return false;
      if (getType()
          != other.getType()) return false;
      if (getMatchId()
          != other.getMatchId()) return false;
      if (getPlayerNum()
          != other.getPlayerNum()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MATCH_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getMatchIndex();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + MATCHID_FIELD_NUMBER;
      hash = (53 * hash) + getMatchId();
      hash = (37 * hash) + PLAYERNUM_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerNum();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_MatchList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_MatchList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_MatchList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_MatchList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_MatchList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_MatchList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_MatchList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 比赛场-赛事列表的推送 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_MatchList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_MatchList)
        P_MatchListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_MatchList_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_MatchList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_MatchList.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_MatchList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        matchIndex_ = 0;

        type_ = 0;

        matchId_ = 0;

        playerNum_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_MatchList_descriptor;
      }

      @Override
      public P_MatchList getDefaultInstanceForType() {
        return P_MatchList.getDefaultInstance();
      }

      @Override
      public P_MatchList build() {
        P_MatchList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_MatchList buildPartial() {
        P_MatchList result = new P_MatchList(this);
        result.matchIndex_ = matchIndex_;
        result.type_ = type_;
        result.matchId_ = matchId_;
        result.playerNum_ = playerNum_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_MatchList) {
          return mergeFrom((P_MatchList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_MatchList other) {
        if (other == P_MatchList.getDefaultInstance()) return this;
        if (other.getMatchIndex() != 0) {
          setMatchIndex(other.getMatchIndex());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getMatchId() != 0) {
          setMatchId(other.getMatchId());
        }
        if (other.getPlayerNum() != 0) {
          setPlayerNum(other.getPlayerNum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_MatchList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_MatchList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int matchIndex_ ;
      /**
       * <pre>
       ** 比赛列表推送序号 
       * </pre>
       *
       * <code>int32 match_index = 1;</code>
       */
      public int getMatchIndex() {
        return matchIndex_;
      }
      /**
       * <pre>
       ** 比赛列表推送序号 
       * </pre>
       *
       * <code>int32 match_index = 1;</code>
       */
      public Builder setMatchIndex(int value) {
        
        matchIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 比赛列表推送序号 
       * </pre>
       *
       * <code>int32 match_index = 1;</code>
       */
      public Builder clearMatchIndex() {
        
        matchIndex_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       ** 变化类型,1人数变化,2场次增减 
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       ** 变化类型,1人数变化,2场次增减 
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 变化类型,1人数变化,2场次增减 
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int matchId_ ;
      /**
       * <pre>
       ** 变化场次ID
       * </pre>
       *
       * <code>int32 matchId = 3;</code>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <pre>
       ** 变化场次ID
       * </pre>
       *
       * <code>int32 matchId = 3;</code>
       */
      public Builder setMatchId(int value) {
        
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 变化场次ID
       * </pre>
       *
       * <code>int32 matchId = 3;</code>
       */
      public Builder clearMatchId() {
        
        matchId_ = 0;
        onChanged();
        return this;
      }

      private int playerNum_ ;
      /**
       * <pre>
       ** 变化后当前人数 
       * </pre>
       *
       * <code>int32 playerNum = 4;</code>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <pre>
       ** 变化后当前人数 
       * </pre>
       *
       * <code>int32 playerNum = 4;</code>
       */
      public Builder setPlayerNum(int value) {
        
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 变化后当前人数 
       * </pre>
       *
       * <code>int32 playerNum = 4;</code>
       */
      public Builder clearPlayerNum() {
        
        playerNum_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_MatchList)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_MatchList)
    private static final P_MatchList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_MatchList();
    }

    public static P_MatchList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_MatchList>
        PARSER = new com.google.protobuf.AbstractParser<P_MatchList>() {
      @Override
      public P_MatchList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_MatchList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_MatchList> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_MatchList> getParserForType() {
      return PARSER;
    }

    @Override
    public P_MatchList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_MatchStartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_MatchStart)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 当前轮数 
     * </pre>
     *
     * <code>int32 curRound = 1;</code>
     */
    int getCurRound();

    /**
     * <pre>
     ** 赛事轮数 
     * </pre>
     *
     * <code>int32 totalRound = 2;</code>
     */
    int getTotalRound();

    /**
     * <pre>
     ** 倒计时 
     * </pre>
     *
     * <code>int32 timeDown = 3;</code>
     */
    int getTimeDown();
  }
  /**
   * <pre>
   ** Push 比赛场-赛事准备开始的推送 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_MatchStart}
   */
  public  static final class P_MatchStart extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_MatchStart)
      P_MatchStartOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_MatchStart.newBuilder() to construct.
    private P_MatchStart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_MatchStart() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_MatchStart();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_MatchStart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              curRound_ = input.readInt32();
              break;
            }
            case 16: {

              totalRound_ = input.readInt32();
              break;
            }
            case 24: {

              timeDown_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_MatchStart_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_MatchStart_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_MatchStart.class, Builder.class);
    }

    public static final int CURROUND_FIELD_NUMBER = 1;
    private int curRound_;
    /**
     * <pre>
     ** 当前轮数 
     * </pre>
     *
     * <code>int32 curRound = 1;</code>
     */
    public int getCurRound() {
      return curRound_;
    }

    public static final int TOTALROUND_FIELD_NUMBER = 2;
    private int totalRound_;
    /**
     * <pre>
     ** 赛事轮数 
     * </pre>
     *
     * <code>int32 totalRound = 2;</code>
     */
    public int getTotalRound() {
      return totalRound_;
    }

    public static final int TIMEDOWN_FIELD_NUMBER = 3;
    private int timeDown_;
    /**
     * <pre>
     ** 倒计时 
     * </pre>
     *
     * <code>int32 timeDown = 3;</code>
     */
    public int getTimeDown() {
      return timeDown_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (curRound_ != 0) {
        output.writeInt32(1, curRound_);
      }
      if (totalRound_ != 0) {
        output.writeInt32(2, totalRound_);
      }
      if (timeDown_ != 0) {
        output.writeInt32(3, timeDown_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (curRound_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, curRound_);
      }
      if (totalRound_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, totalRound_);
      }
      if (timeDown_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, timeDown_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_MatchStart)) {
        return super.equals(obj);
      }
      P_MatchStart other = (P_MatchStart) obj;

      if (getCurRound()
          != other.getCurRound()) return false;
      if (getTotalRound()
          != other.getTotalRound()) return false;
      if (getTimeDown()
          != other.getTimeDown()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURROUND_FIELD_NUMBER;
      hash = (53 * hash) + getCurRound();
      hash = (37 * hash) + TOTALROUND_FIELD_NUMBER;
      hash = (53 * hash) + getTotalRound();
      hash = (37 * hash) + TIMEDOWN_FIELD_NUMBER;
      hash = (53 * hash) + getTimeDown();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_MatchStart parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchStart parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_MatchStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_MatchStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_MatchStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_MatchStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_MatchStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_MatchStart prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 比赛场-赛事准备开始的推送 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_MatchStart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_MatchStart)
        P_MatchStartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_MatchStart_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_MatchStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_MatchStart.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_MatchStart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        curRound_ = 0;

        totalRound_ = 0;

        timeDown_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_MatchStart_descriptor;
      }

      @Override
      public P_MatchStart getDefaultInstanceForType() {
        return P_MatchStart.getDefaultInstance();
      }

      @Override
      public P_MatchStart build() {
        P_MatchStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_MatchStart buildPartial() {
        P_MatchStart result = new P_MatchStart(this);
        result.curRound_ = curRound_;
        result.totalRound_ = totalRound_;
        result.timeDown_ = timeDown_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_MatchStart) {
          return mergeFrom((P_MatchStart)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_MatchStart other) {
        if (other == P_MatchStart.getDefaultInstance()) return this;
        if (other.getCurRound() != 0) {
          setCurRound(other.getCurRound());
        }
        if (other.getTotalRound() != 0) {
          setTotalRound(other.getTotalRound());
        }
        if (other.getTimeDown() != 0) {
          setTimeDown(other.getTimeDown());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_MatchStart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_MatchStart) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int curRound_ ;
      /**
       * <pre>
       ** 当前轮数 
       * </pre>
       *
       * <code>int32 curRound = 1;</code>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <pre>
       ** 当前轮数 
       * </pre>
       *
       * <code>int32 curRound = 1;</code>
       */
      public Builder setCurRound(int value) {
        
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前轮数 
       * </pre>
       *
       * <code>int32 curRound = 1;</code>
       */
      public Builder clearCurRound() {
        
        curRound_ = 0;
        onChanged();
        return this;
      }

      private int totalRound_ ;
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 totalRound = 2;</code>
       */
      public int getTotalRound() {
        return totalRound_;
      }
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 totalRound = 2;</code>
       */
      public Builder setTotalRound(int value) {
        
        totalRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 totalRound = 2;</code>
       */
      public Builder clearTotalRound() {
        
        totalRound_ = 0;
        onChanged();
        return this;
      }

      private int timeDown_ ;
      /**
       * <pre>
       ** 倒计时 
       * </pre>
       *
       * <code>int32 timeDown = 3;</code>
       */
      public int getTimeDown() {
        return timeDown_;
      }
      /**
       * <pre>
       ** 倒计时 
       * </pre>
       *
       * <code>int32 timeDown = 3;</code>
       */
      public Builder setTimeDown(int value) {
        
        timeDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 倒计时 
       * </pre>
       *
       * <code>int32 timeDown = 3;</code>
       */
      public Builder clearTimeDown() {
        
        timeDown_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_MatchStart)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_MatchStart)
    private static final P_MatchStart DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_MatchStart();
    }

    public static P_MatchStart getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_MatchStart>
        PARSER = new com.google.protobuf.AbstractParser<P_MatchStart>() {
      @Override
      public P_MatchStart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_MatchStart(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_MatchStart> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_MatchStart> getParserForType() {
      return PARSER;
    }

    @Override
    public P_MatchStart getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_MatchEndOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_MatchEnd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 当前正在比赛的人数 
     * </pre>
     *
     * <code>int32 curPlay = 1;</code>
     */
    int getCurPlay();

    /**
     * <pre>
     ** 通关总人数 
     * </pre>
     *
     * <code>int32 totalPlay = 2;</code>
     */
    int getTotalPlay();

    /**
     * <pre>
     ** 玩家当前名次 
     * </pre>
     *
     * <code>int32 rank = 3;</code>
     */
    int getRank();

    /**
     * <pre>
     ** 该玩家当前积分 
     * </pre>
     *
     * <code>int32 point = 4;</code>
     */
    int getPoint();
  }
  /**
   * <pre>
   ** Push 比赛场-赛事结束等待的推送 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_MatchEnd}
   */
  public  static final class P_MatchEnd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_MatchEnd)
      P_MatchEndOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_MatchEnd.newBuilder() to construct.
    private P_MatchEnd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_MatchEnd() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_MatchEnd();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_MatchEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              curPlay_ = input.readInt32();
              break;
            }
            case 16: {

              totalPlay_ = input.readInt32();
              break;
            }
            case 24: {

              rank_ = input.readInt32();
              break;
            }
            case 32: {

              point_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_MatchEnd_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_MatchEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_MatchEnd.class, Builder.class);
    }

    public static final int CURPLAY_FIELD_NUMBER = 1;
    private int curPlay_;
    /**
     * <pre>
     ** 当前正在比赛的人数 
     * </pre>
     *
     * <code>int32 curPlay = 1;</code>
     */
    public int getCurPlay() {
      return curPlay_;
    }

    public static final int TOTALPLAY_FIELD_NUMBER = 2;
    private int totalPlay_;
    /**
     * <pre>
     ** 通关总人数 
     * </pre>
     *
     * <code>int32 totalPlay = 2;</code>
     */
    public int getTotalPlay() {
      return totalPlay_;
    }

    public static final int RANK_FIELD_NUMBER = 3;
    private int rank_;
    /**
     * <pre>
     ** 玩家当前名次 
     * </pre>
     *
     * <code>int32 rank = 3;</code>
     */
    public int getRank() {
      return rank_;
    }

    public static final int POINT_FIELD_NUMBER = 4;
    private int point_;
    /**
     * <pre>
     ** 该玩家当前积分 
     * </pre>
     *
     * <code>int32 point = 4;</code>
     */
    public int getPoint() {
      return point_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (curPlay_ != 0) {
        output.writeInt32(1, curPlay_);
      }
      if (totalPlay_ != 0) {
        output.writeInt32(2, totalPlay_);
      }
      if (rank_ != 0) {
        output.writeInt32(3, rank_);
      }
      if (point_ != 0) {
        output.writeInt32(4, point_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (curPlay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, curPlay_);
      }
      if (totalPlay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, totalPlay_);
      }
      if (rank_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rank_);
      }
      if (point_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, point_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_MatchEnd)) {
        return super.equals(obj);
      }
      P_MatchEnd other = (P_MatchEnd) obj;

      if (getCurPlay()
          != other.getCurPlay()) return false;
      if (getTotalPlay()
          != other.getTotalPlay()) return false;
      if (getRank()
          != other.getRank()) return false;
      if (getPoint()
          != other.getPoint()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURPLAY_FIELD_NUMBER;
      hash = (53 * hash) + getCurPlay();
      hash = (37 * hash) + TOTALPLAY_FIELD_NUMBER;
      hash = (53 * hash) + getTotalPlay();
      hash = (37 * hash) + RANK_FIELD_NUMBER;
      hash = (53 * hash) + getRank();
      hash = (37 * hash) + POINT_FIELD_NUMBER;
      hash = (53 * hash) + getPoint();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_MatchEnd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchEnd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_MatchEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_MatchEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_MatchEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_MatchEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_MatchEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_MatchEnd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 比赛场-赛事结束等待的推送 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_MatchEnd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_MatchEnd)
        P_MatchEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_MatchEnd_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_MatchEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_MatchEnd.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_MatchEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        curPlay_ = 0;

        totalPlay_ = 0;

        rank_ = 0;

        point_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_MatchEnd_descriptor;
      }

      @Override
      public P_MatchEnd getDefaultInstanceForType() {
        return P_MatchEnd.getDefaultInstance();
      }

      @Override
      public P_MatchEnd build() {
        P_MatchEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_MatchEnd buildPartial() {
        P_MatchEnd result = new P_MatchEnd(this);
        result.curPlay_ = curPlay_;
        result.totalPlay_ = totalPlay_;
        result.rank_ = rank_;
        result.point_ = point_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_MatchEnd) {
          return mergeFrom((P_MatchEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_MatchEnd other) {
        if (other == P_MatchEnd.getDefaultInstance()) return this;
        if (other.getCurPlay() != 0) {
          setCurPlay(other.getCurPlay());
        }
        if (other.getTotalPlay() != 0) {
          setTotalPlay(other.getTotalPlay());
        }
        if (other.getRank() != 0) {
          setRank(other.getRank());
        }
        if (other.getPoint() != 0) {
          setPoint(other.getPoint());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_MatchEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_MatchEnd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int curPlay_ ;
      /**
       * <pre>
       ** 当前正在比赛的人数 
       * </pre>
       *
       * <code>int32 curPlay = 1;</code>
       */
      public int getCurPlay() {
        return curPlay_;
      }
      /**
       * <pre>
       ** 当前正在比赛的人数 
       * </pre>
       *
       * <code>int32 curPlay = 1;</code>
       */
      public Builder setCurPlay(int value) {
        
        curPlay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前正在比赛的人数 
       * </pre>
       *
       * <code>int32 curPlay = 1;</code>
       */
      public Builder clearCurPlay() {
        
        curPlay_ = 0;
        onChanged();
        return this;
      }

      private int totalPlay_ ;
      /**
       * <pre>
       ** 通关总人数 
       * </pre>
       *
       * <code>int32 totalPlay = 2;</code>
       */
      public int getTotalPlay() {
        return totalPlay_;
      }
      /**
       * <pre>
       ** 通关总人数 
       * </pre>
       *
       * <code>int32 totalPlay = 2;</code>
       */
      public Builder setTotalPlay(int value) {
        
        totalPlay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 通关总人数 
       * </pre>
       *
       * <code>int32 totalPlay = 2;</code>
       */
      public Builder clearTotalPlay() {
        
        totalPlay_ = 0;
        onChanged();
        return this;
      }

      private int rank_ ;
      /**
       * <pre>
       ** 玩家当前名次 
       * </pre>
       *
       * <code>int32 rank = 3;</code>
       */
      public int getRank() {
        return rank_;
      }
      /**
       * <pre>
       ** 玩家当前名次 
       * </pre>
       *
       * <code>int32 rank = 3;</code>
       */
      public Builder setRank(int value) {
        
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家当前名次 
       * </pre>
       *
       * <code>int32 rank = 3;</code>
       */
      public Builder clearRank() {
        
        rank_ = 0;
        onChanged();
        return this;
      }

      private int point_ ;
      /**
       * <pre>
       ** 该玩家当前积分 
       * </pre>
       *
       * <code>int32 point = 4;</code>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <pre>
       ** 该玩家当前积分 
       * </pre>
       *
       * <code>int32 point = 4;</code>
       */
      public Builder setPoint(int value) {
        
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 该玩家当前积分 
       * </pre>
       *
       * <code>int32 point = 4;</code>
       */
      public Builder clearPoint() {
        
        point_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_MatchEnd)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_MatchEnd)
    private static final P_MatchEnd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_MatchEnd();
    }

    public static P_MatchEnd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_MatchEnd>
        PARSER = new com.google.protobuf.AbstractParser<P_MatchEnd>() {
      @Override
      public P_MatchEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_MatchEnd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_MatchEnd> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_MatchEnd> getParserForType() {
      return PARSER;
    }

    @Override
    public P_MatchEnd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_MatchResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_MatchResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    java.util.List<LandlordBase.MatchAward>
        getMatchAwardList();
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    LandlordBase.MatchAward getMatchAward(int index);
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    int getMatchAwardCount();
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
        getMatchAwardOrBuilderList();
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
        int index);

    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    java.util.List<LandlordBase.PlayerScore>
        getScoreListList();
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    LandlordBase.PlayerScore getScoreList(int index);
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    int getScoreListCount();
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    java.util.List<? extends LandlordBase.PlayerScoreOrBuilder>
        getScoreListOrBuilderList();
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    LandlordBase.PlayerScoreOrBuilder getScoreListOrBuilder(
        int index);
  }
  /**
   * <pre>
   ** Push 比赛场-赛事结算的推送 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_MatchResult}
   */
  public  static final class P_MatchResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_MatchResult)
      P_MatchResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_MatchResult.newBuilder() to construct.
    private P_MatchResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_MatchResult() {
      matchAward_ = java.util.Collections.emptyList();
      scoreList_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_MatchResult();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_MatchResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                matchAward_ = new java.util.ArrayList<LandlordBase.MatchAward>();
                mutable_bitField0_ |= 0x00000001;
              }
              matchAward_.add(
                  input.readMessage(LandlordBase.MatchAward.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                scoreList_ = new java.util.ArrayList<LandlordBase.PlayerScore>();
                mutable_bitField0_ |= 0x00000002;
              }
              scoreList_.add(
                  input.readMessage(LandlordBase.PlayerScore.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          matchAward_ = java.util.Collections.unmodifiableList(matchAward_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          scoreList_ = java.util.Collections.unmodifiableList(scoreList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_MatchResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_MatchResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_MatchResult.class, Builder.class);
    }

    public static final int MATCHAWARD_FIELD_NUMBER = 1;
    private java.util.List<LandlordBase.MatchAward> matchAward_;
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public java.util.List<LandlordBase.MatchAward> getMatchAwardList() {
      return matchAward_;
    }
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
        getMatchAwardOrBuilderList() {
      return matchAward_;
    }
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public int getMatchAwardCount() {
      return matchAward_.size();
    }
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public LandlordBase.MatchAward getMatchAward(int index) {
      return matchAward_.get(index);
    }
    /**
     * <pre>
     ** 返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
        int index) {
      return matchAward_.get(index);
    }

    public static final int SCORELIST_FIELD_NUMBER = 2;
    private java.util.List<LandlordBase.PlayerScore> scoreList_;
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public java.util.List<LandlordBase.PlayerScore> getScoreListList() {
      return scoreList_;
    }
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public java.util.List<? extends LandlordBase.PlayerScoreOrBuilder>
        getScoreListOrBuilderList() {
      return scoreList_;
    }
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public int getScoreListCount() {
      return scoreList_.size();
    }
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public LandlordBase.PlayerScore getScoreList(int index) {
      return scoreList_.get(index);
    }
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public LandlordBase.PlayerScoreOrBuilder getScoreListOrBuilder(
        int index) {
      return scoreList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < matchAward_.size(); i++) {
        output.writeMessage(1, matchAward_.get(i));
      }
      for (int i = 0; i < scoreList_.size(); i++) {
        output.writeMessage(2, scoreList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < matchAward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, matchAward_.get(i));
      }
      for (int i = 0; i < scoreList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, scoreList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_MatchResult)) {
        return super.equals(obj);
      }
      P_MatchResult other = (P_MatchResult) obj;

      if (!getMatchAwardList()
          .equals(other.getMatchAwardList())) return false;
      if (!getScoreListList()
          .equals(other.getScoreListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMatchAwardCount() > 0) {
        hash = (37 * hash) + MATCHAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getMatchAwardList().hashCode();
      }
      if (getScoreListCount() > 0) {
        hash = (37 * hash) + SCORELIST_FIELD_NUMBER;
        hash = (53 * hash) + getScoreListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_MatchResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_MatchResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_MatchResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_MatchResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_MatchResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_MatchResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_MatchResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_MatchResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_MatchResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 比赛场-赛事结算的推送 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_MatchResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_MatchResult)
        P_MatchResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_MatchResult_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_MatchResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_MatchResult.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_MatchResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMatchAwardFieldBuilder();
          getScoreListFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (matchAwardBuilder_ == null) {
          matchAward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          matchAwardBuilder_.clear();
        }
        if (scoreListBuilder_ == null) {
          scoreList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          scoreListBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_MatchResult_descriptor;
      }

      @Override
      public P_MatchResult getDefaultInstanceForType() {
        return P_MatchResult.getDefaultInstance();
      }

      @Override
      public P_MatchResult build() {
        P_MatchResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_MatchResult buildPartial() {
        P_MatchResult result = new P_MatchResult(this);
        int from_bitField0_ = bitField0_;
        if (matchAwardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            matchAward_ = java.util.Collections.unmodifiableList(matchAward_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.matchAward_ = matchAward_;
        } else {
          result.matchAward_ = matchAwardBuilder_.build();
        }
        if (scoreListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            scoreList_ = java.util.Collections.unmodifiableList(scoreList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.scoreList_ = scoreList_;
        } else {
          result.scoreList_ = scoreListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_MatchResult) {
          return mergeFrom((P_MatchResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_MatchResult other) {
        if (other == P_MatchResult.getDefaultInstance()) return this;
        if (matchAwardBuilder_ == null) {
          if (!other.matchAward_.isEmpty()) {
            if (matchAward_.isEmpty()) {
              matchAward_ = other.matchAward_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMatchAwardIsMutable();
              matchAward_.addAll(other.matchAward_);
            }
            onChanged();
          }
        } else {
          if (!other.matchAward_.isEmpty()) {
            if (matchAwardBuilder_.isEmpty()) {
              matchAwardBuilder_.dispose();
              matchAwardBuilder_ = null;
              matchAward_ = other.matchAward_;
              bitField0_ = (bitField0_ & ~0x00000001);
              matchAwardBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMatchAwardFieldBuilder() : null;
            } else {
              matchAwardBuilder_.addAllMessages(other.matchAward_);
            }
          }
        }
        if (scoreListBuilder_ == null) {
          if (!other.scoreList_.isEmpty()) {
            if (scoreList_.isEmpty()) {
              scoreList_ = other.scoreList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureScoreListIsMutable();
              scoreList_.addAll(other.scoreList_);
            }
            onChanged();
          }
        } else {
          if (!other.scoreList_.isEmpty()) {
            if (scoreListBuilder_.isEmpty()) {
              scoreListBuilder_.dispose();
              scoreListBuilder_ = null;
              scoreList_ = other.scoreList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              scoreListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getScoreListFieldBuilder() : null;
            } else {
              scoreListBuilder_.addAllMessages(other.scoreList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_MatchResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_MatchResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<LandlordBase.MatchAward> matchAward_ =
        java.util.Collections.emptyList();
      private void ensureMatchAwardIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          matchAward_ = new java.util.ArrayList<LandlordBase.MatchAward>(matchAward_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder> matchAwardBuilder_;

      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public java.util.List<LandlordBase.MatchAward> getMatchAwardList() {
        if (matchAwardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(matchAward_);
        } else {
          return matchAwardBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public int getMatchAwardCount() {
        if (matchAwardBuilder_ == null) {
          return matchAward_.size();
        } else {
          return matchAwardBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAward getMatchAward(int index) {
        if (matchAwardBuilder_ == null) {
          return matchAward_.get(index);
        } else {
          return matchAwardBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder setMatchAward(
          int index, LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.set(index, value);
          onChanged();
        } else {
          matchAwardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder setMatchAward(
          int index, LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.set(index, builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addMatchAward(LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.add(value);
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addMatchAward(
          int index, LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.add(index, value);
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addMatchAward(
          LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.add(builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addMatchAward(
          int index, LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.add(index, builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addAllMatchAward(
          Iterable<? extends LandlordBase.MatchAward> values) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, matchAward_);
          onChanged();
        } else {
          matchAwardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder clearMatchAward() {
        if (matchAwardBuilder_ == null) {
          matchAward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          matchAwardBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder removeMatchAward(int index) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.remove(index);
          onChanged();
        } else {
          matchAwardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAward.Builder getMatchAwardBuilder(
          int index) {
        return getMatchAwardFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
          int index) {
        if (matchAwardBuilder_ == null) {
          return matchAward_.get(index);  } else {
          return matchAwardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
           getMatchAwardOrBuilderList() {
        if (matchAwardBuilder_ != null) {
          return matchAwardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(matchAward_);
        }
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAward.Builder addMatchAwardBuilder() {
        return getMatchAwardFieldBuilder().addBuilder(
            LandlordBase.MatchAward.getDefaultInstance());
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAward.Builder addMatchAwardBuilder(
          int index) {
        return getMatchAwardFieldBuilder().addBuilder(
            index, LandlordBase.MatchAward.getDefaultInstance());
      }
      /**
       * <pre>
       ** 返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public java.util.List<LandlordBase.MatchAward.Builder>
           getMatchAwardBuilderList() {
        return getMatchAwardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder>
          getMatchAwardFieldBuilder() {
        if (matchAwardBuilder_ == null) {
          matchAwardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder>(
                  matchAward_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          matchAward_ = null;
        }
        return matchAwardBuilder_;
      }

      private java.util.List<LandlordBase.PlayerScore> scoreList_ =
        java.util.Collections.emptyList();
      private void ensureScoreListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          scoreList_ = new java.util.ArrayList<LandlordBase.PlayerScore>(scoreList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.PlayerScore, LandlordBase.PlayerScore.Builder, LandlordBase.PlayerScoreOrBuilder> scoreListBuilder_;

      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public java.util.List<LandlordBase.PlayerScore> getScoreListList() {
        if (scoreListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scoreList_);
        } else {
          return scoreListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public int getScoreListCount() {
        if (scoreListBuilder_ == null) {
          return scoreList_.size();
        } else {
          return scoreListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScore getScoreList(int index) {
        if (scoreListBuilder_ == null) {
          return scoreList_.get(index);
        } else {
          return scoreListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder setScoreList(
          int index, LandlordBase.PlayerScore value) {
        if (scoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreListIsMutable();
          scoreList_.set(index, value);
          onChanged();
        } else {
          scoreListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder setScoreList(
          int index, LandlordBase.PlayerScore.Builder builderForValue) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          scoreList_.set(index, builderForValue.build());
          onChanged();
        } else {
          scoreListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addScoreList(LandlordBase.PlayerScore value) {
        if (scoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreListIsMutable();
          scoreList_.add(value);
          onChanged();
        } else {
          scoreListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addScoreList(
          int index, LandlordBase.PlayerScore value) {
        if (scoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreListIsMutable();
          scoreList_.add(index, value);
          onChanged();
        } else {
          scoreListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addScoreList(
          LandlordBase.PlayerScore.Builder builderForValue) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          scoreList_.add(builderForValue.build());
          onChanged();
        } else {
          scoreListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addScoreList(
          int index, LandlordBase.PlayerScore.Builder builderForValue) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          scoreList_.add(index, builderForValue.build());
          onChanged();
        } else {
          scoreListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addAllScoreList(
          Iterable<? extends LandlordBase.PlayerScore> values) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, scoreList_);
          onChanged();
        } else {
          scoreListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder clearScoreList() {
        if (scoreListBuilder_ == null) {
          scoreList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          scoreListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder removeScoreList(int index) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          scoreList_.remove(index);
          onChanged();
        } else {
          scoreListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScore.Builder getScoreListBuilder(
          int index) {
        return getScoreListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScoreOrBuilder getScoreListOrBuilder(
          int index) {
        if (scoreListBuilder_ == null) {
          return scoreList_.get(index);  } else {
          return scoreListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public java.util.List<? extends LandlordBase.PlayerScoreOrBuilder>
           getScoreListOrBuilderList() {
        if (scoreListBuilder_ != null) {
          return scoreListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scoreList_);
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScore.Builder addScoreListBuilder() {
        return getScoreListFieldBuilder().addBuilder(
            LandlordBase.PlayerScore.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScore.Builder addScoreListBuilder(
          int index) {
        return getScoreListFieldBuilder().addBuilder(
            index, LandlordBase.PlayerScore.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public java.util.List<LandlordBase.PlayerScore.Builder>
           getScoreListBuilderList() {
        return getScoreListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.PlayerScore, LandlordBase.PlayerScore.Builder, LandlordBase.PlayerScoreOrBuilder>
          getScoreListFieldBuilder() {
        if (scoreListBuilder_ == null) {
          scoreListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.PlayerScore, LandlordBase.PlayerScore.Builder, LandlordBase.PlayerScoreOrBuilder>(
                  scoreList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          scoreList_ = null;
        }
        return scoreListBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_MatchResult)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_MatchResult)
    private static final P_MatchResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_MatchResult();
    }

    public static P_MatchResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_MatchResult>
        PARSER = new com.google.protobuf.AbstractParser<P_MatchResult>() {
      @Override
      public P_MatchResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_MatchResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_MatchResult> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_MatchResult> getParserForType() {
      return PARSER;
    }

    @Override
    public P_MatchResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_GodLightStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_GodLightStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
     * </pre>
     *
     * <code>int32 status = 1;</code>
     */
    int getStatus();
  }
  /**
   * <pre>
   ** Push 推送财神红包状态 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_GodLightStatus}
   */
  public  static final class P_GodLightStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_GodLightStatus)
      P_GodLightStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_GodLightStatus.newBuilder() to construct.
    private P_GodLightStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_GodLightStatus() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_GodLightStatus();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_GodLightStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              status_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_GodLightStatus_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_GodLightStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_GodLightStatus.class, Builder.class);
    }

    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <pre>
     ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
     * </pre>
     *
     * <code>int32 status = 1;</code>
     */
    public int getStatus() {
      return status_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != 0) {
        output.writeInt32(1, status_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, status_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_GodLightStatus)) {
        return super.equals(obj);
      }
      P_GodLightStatus other = (P_GodLightStatus) obj;

      if (getStatus()
          != other.getStatus()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_GodLightStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GodLightStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GodLightStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GodLightStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GodLightStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GodLightStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GodLightStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_GodLightStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_GodLightStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_GodLightStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_GodLightStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_GodLightStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_GodLightStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 推送财神红包状态 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_GodLightStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_GodLightStatus)
        P_GodLightStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_GodLightStatus_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_GodLightStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_GodLightStatus.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_GodLightStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        status_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_GodLightStatus_descriptor;
      }

      @Override
      public P_GodLightStatus getDefaultInstanceForType() {
        return P_GodLightStatus.getDefaultInstance();
      }

      @Override
      public P_GodLightStatus build() {
        P_GodLightStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_GodLightStatus buildPartial() {
        P_GodLightStatus result = new P_GodLightStatus(this);
        result.status_ = status_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_GodLightStatus) {
          return mergeFrom((P_GodLightStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_GodLightStatus other) {
        if (other == P_GodLightStatus.getDefaultInstance()) return this;
        if (other.getStatus() != 0) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_GodLightStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_GodLightStatus) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
       * </pre>
       *
       * <code>int32 status = 1;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
       * </pre>
       *
       * <code>int32 status = 1;</code>
       */
      public Builder setStatus(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
       * </pre>
       *
       * <code>int32 status = 1;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_GodLightStatus)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_GodLightStatus)
    private static final P_GodLightStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_GodLightStatus();
    }

    public static P_GodLightStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_GodLightStatus>
        PARSER = new com.google.protobuf.AbstractParser<P_GodLightStatus>() {
      @Override
      public P_GodLightStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_GodLightStatus(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_GodLightStatus> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_GodLightStatus> getParserForType() {
      return PARSER;
    }

    @Override
    public P_GodLightStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface P_GodLightPoolOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.P_GodLightPool)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 奖池 
     * </pre>
     *
     * <code>int32 awardPool = 1;</code>
     */
    int getAwardPool();
  }
  /**
   * <pre>
   ** Push 推送财神红包池 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.P_GodLightPool}
   */
  public  static final class P_GodLightPool extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.P_GodLightPool)
      P_GodLightPoolOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use P_GodLightPool.newBuilder() to construct.
    private P_GodLightPool(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private P_GodLightPool() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new P_GodLightPool();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private P_GodLightPool(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              awardPool_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordPush.internal_static_pb_landlord_P_GodLightPool_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordPush.internal_static_pb_landlord_P_GodLightPool_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              P_GodLightPool.class, Builder.class);
    }

    public static final int AWARDPOOL_FIELD_NUMBER = 1;
    private int awardPool_;
    /**
     * <pre>
     ** 奖池 
     * </pre>
     *
     * <code>int32 awardPool = 1;</code>
     */
    public int getAwardPool() {
      return awardPool_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (awardPool_ != 0) {
        output.writeInt32(1, awardPool_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (awardPool_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, awardPool_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof P_GodLightPool)) {
        return super.equals(obj);
      }
      P_GodLightPool other = (P_GodLightPool) obj;

      if (getAwardPool()
          != other.getAwardPool()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AWARDPOOL_FIELD_NUMBER;
      hash = (53 * hash) + getAwardPool();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static P_GodLightPool parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GodLightPool parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GodLightPool parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GodLightPool parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GodLightPool parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static P_GodLightPool parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static P_GodLightPool parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_GodLightPool parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_GodLightPool parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static P_GodLightPool parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static P_GodLightPool parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static P_GodLightPool parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(P_GodLightPool prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Push 推送财神红包池 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.P_GodLightPool}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.P_GodLightPool)
        P_GodLightPoolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordPush.internal_static_pb_landlord_P_GodLightPool_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordPush.internal_static_pb_landlord_P_GodLightPool_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                P_GodLightPool.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordPush.P_GodLightPool.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        awardPool_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordPush.internal_static_pb_landlord_P_GodLightPool_descriptor;
      }

      @Override
      public P_GodLightPool getDefaultInstanceForType() {
        return P_GodLightPool.getDefaultInstance();
      }

      @Override
      public P_GodLightPool build() {
        P_GodLightPool result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public P_GodLightPool buildPartial() {
        P_GodLightPool result = new P_GodLightPool(this);
        result.awardPool_ = awardPool_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof P_GodLightPool) {
          return mergeFrom((P_GodLightPool)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(P_GodLightPool other) {
        if (other == P_GodLightPool.getDefaultInstance()) return this;
        if (other.getAwardPool() != 0) {
          setAwardPool(other.getAwardPool());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        P_GodLightPool parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (P_GodLightPool) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int awardPool_ ;
      /**
       * <pre>
       ** 奖池 
       * </pre>
       *
       * <code>int32 awardPool = 1;</code>
       */
      public int getAwardPool() {
        return awardPool_;
      }
      /**
       * <pre>
       ** 奖池 
       * </pre>
       *
       * <code>int32 awardPool = 1;</code>
       */
      public Builder setAwardPool(int value) {
        
        awardPool_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 奖池 
       * </pre>
       *
       * <code>int32 awardPool = 1;</code>
       */
      public Builder clearAwardPool() {
        
        awardPool_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.P_GodLightPool)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.P_GodLightPool)
    private static final P_GodLightPool DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new P_GodLightPool();
    }

    public static P_GodLightPool getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<P_GodLightPool>
        PARSER = new com.google.protobuf.AbstractParser<P_GodLightPool>() {
      @Override
      public P_GodLightPool parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new P_GodLightPool(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<P_GodLightPool> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<P_GodLightPool> getParserForType() {
      return PARSER;
    }

    @Override
    public P_GodLightPool getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_RoomIdUrl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_RoomIdUrl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_DoCatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_DoCatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_AutoPlay_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_AutoPlay_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_GameStart_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_GameStart_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_CatchResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_CatchResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_SendDiZhuCard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_SendDiZhuCard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_NextPlayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_NextPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_PlayCards_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_PlayCards_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_GameSettle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_GameSettle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_SendAction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_SendAction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_T_AutoPlay_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_T_AutoPlay_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_T_GameStart_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_T_GameStart_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_T_DoCatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_T_DoCatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_T_CatchResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_T_CatchResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_T_SendDiZhuCard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_T_SendDiZhuCard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_T_GameSettle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_T_GameSettle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_MatchList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_MatchList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_MatchStart_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_MatchStart_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_MatchEnd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_MatchEnd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_MatchResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_MatchResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_GodLightStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_GodLightStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_P_GodLightPool_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_P_GodLightPool_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020landlord_p.proto\022\013pb_landlord\032\016landlor" +
      "d.proto\"*\n\013P_RoomIdUrl\022\016\n\006roomId\030\001 \001(\005\022\013" +
      "\n\003url\030\002 \001(\t\"p\n\tP_DoCatch\022\025\n\rdoCatchSeatI" +
      "d\030\001 \001(\005\022\025\n\rhascatchScore\030\002 \001(\005\022\022\n\nsystem" +
      "Time\030\003 \001(\t\022\022\n\nexpireTime\030\004 \001(\t\022\r\n\005index\030" +
      "\005 \001(\005\";\n\nP_AutoPlay\022\016\n\006seatId\030\001 \001(\005\022\016\n\006s" +
      "tatus\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\"E\n\013P_GameStar" +
      "t\022\023\n\013reStartTime\030\001 \001(\005\022\022\n\nhandsCards\030\002 \003" +
      "(\005\022\r\n\005index\030\003 \001(\005\"V\n\rP_CatchResult\022\023\n\013ca" +
      "tchSeatId\030\001 \001(\005\022\022\n\ncatchScore\030\002 \001(\005\022\r\n\005r" +
      "atio\030\003 \001(\005\022\r\n\005index\030\004 \001(\005\"X\n\017P_SendDiZhu" +
      "Card\022\023\n\013dizhuSeatId\030\001 \001(\005\022\r\n\005ratio\030\002 \001(\005" +
      "\022\022\n\ndizhuCards\030\003 \003(\005\022\r\n\005index\030\004 \001(\005\"q\n\014P" +
      "_NextPlayer\022\026\n\016nextPlaySeatId\030\001 \001(\005\022\022\n\ns" +
      "ystemTime\030\002 \001(\t\022\022\n\nexpireTime\030\003 \001(\t\022\022\n\ni" +
      "sNewRound\030\004 \001(\010\022\r\n\005index\030\005 \001(\005\"w\n\013P_Play" +
      "Cards\022\024\n\014doPlaySeatId\030\001 \001(\005\022\r\n\005cards\030\002 \003" +
      "(\005\022\020\n\010cardType\030\003 \001(\005\022\r\n\005ratio\030\004 \001(\005\022\023\n\013r" +
      "emainCards\030\005 \001(\005\022\r\n\005index\030\006 \001(\005\"\202\001\n\014P_Ga" +
      "meSettle\022\022\n\nisContinue\030\001 \001(\005\022*\n\007pSettle\030" +
      "\002 \003(\0132\031.pb_landlord.PlayerSettle\022\024\n\014spri" +
      "ngStatus\030\003 \001(\005\022\r\n\005index\030\004 \001(\005\022\r\n\005ratio\030\005" +
      " \001(\005\"B\n\014P_SendAction\022\020\n\010fromSeat\030\001 \001(\005\022\016" +
      "\n\006toSeat\030\002 \001(\005\022\020\n\010actionId\030\003 \001(\005\"=\n\014P_T_" +
      "AutoPlay\022\016\n\006seatId\030\001 \001(\005\022\016\n\006status\030\002 \001(\005" +
      "\022\r\n\005index\030\003 \001(\005\"2\n\rP_T_GameStart\022\022\n\nhand" +
      "sCards\030\001 \003(\005\022\r\n\005index\030\002 \001(\005\"i\n\013P_T_DoCat" +
      "ch\022\025\n\rdoCatchSeatId\030\001 \001(\005\022\014\n\004rang\030\002 \001(\005\022" +
      "\022\n\nsystemTime\030\003 \001(\t\022\022\n\nexpireTime\030\004 \001(\t\022" +
      "\r\n\005index\030\005 \001(\005\"f\n\017P_T_CatchResult\022\023\n\013cat" +
      "chSeatId\030\001 \001(\005\022\014\n\004rang\030\002 \001(\005\022\r\n\005ratio\030\003 " +
      "\001(\005\022\r\n\005index\030\004 \001(\005\022\022\n\ncatchScore\030\005 \001(\005\"h" +
      "\n\021P_T_SendDiZhuCard\022\023\n\013dizhuSeatId\030\001 \001(\005" +
      "\022\014\n\004rang\030\002 \001(\005\022\r\n\005ratio\030\003 \001(\005\022\022\n\ndizhuCa" +
      "rds\030\004 \003(\005\022\r\n\005index\030\005 \001(\005\"\204\001\n\016P_T_GameSet" +
      "tle\022\022\n\nisContinue\030\001 \001(\005\022*\n\007pSettle\030\002 \003(\013" +
      "2\031.pb_landlord.PlayerSettle\022\024\n\014springSta" +
      "tus\030\003 \001(\005\022\r\n\005index\030\004 \001(\005\022\r\n\005ratio\030\005 \001(\005\"" +
      "T\n\013P_MatchList\022\023\n\013match_index\030\001 \001(\005\022\014\n\004t" +
      "ype\030\002 \001(\005\022\017\n\007matchId\030\003 \001(\005\022\021\n\tplayerNum\030" +
      "\004 \001(\005\"F\n\014P_MatchStart\022\020\n\010curRound\030\001 \001(\005\022" +
      "\022\n\ntotalRound\030\002 \001(\005\022\020\n\010timeDown\030\003 \001(\005\"M\n" +
      "\nP_MatchEnd\022\017\n\007curPlay\030\001 \001(\005\022\021\n\ttotalPla" +
      "y\030\002 \001(\005\022\014\n\004rank\030\003 \001(\005\022\r\n\005point\030\004 \001(\005\"i\n\r" +
      "P_MatchResult\022+\n\nmatchAward\030\001 \003(\0132\027.pb_l" +
      "andlord.MatchAward\022+\n\tscoreList\030\002 \003(\0132\030." +
      "pb_landlord.PlayerScore\"\"\n\020P_GodLightSta" +
      "tus\022\016\n\006status\030\001 \001(\005\"#\n\016P_GodLightPool\022\021\n" +
      "\tawardPool\030\001 \001(\005B\032\n\ncom.kys.pbB\014Landlord" +
      "Pushb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          LandlordBase.getDescriptor(),
        });
    internal_static_pb_landlord_P_RoomIdUrl_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pb_landlord_P_RoomIdUrl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_RoomIdUrl_descriptor,
        new String[] { "RoomId", "Url", });
    internal_static_pb_landlord_P_DoCatch_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pb_landlord_P_DoCatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_DoCatch_descriptor,
        new String[] { "DoCatchSeatId", "HascatchScore", "SystemTime", "ExpireTime", "Index", });
    internal_static_pb_landlord_P_AutoPlay_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pb_landlord_P_AutoPlay_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_AutoPlay_descriptor,
        new String[] { "SeatId", "Status", "Index", });
    internal_static_pb_landlord_P_GameStart_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_pb_landlord_P_GameStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_GameStart_descriptor,
        new String[] { "ReStartTime", "HandsCards", "Index", });
    internal_static_pb_landlord_P_CatchResult_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_pb_landlord_P_CatchResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_CatchResult_descriptor,
        new String[] { "CatchSeatId", "CatchScore", "Ratio", "Index", });
    internal_static_pb_landlord_P_SendDiZhuCard_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_pb_landlord_P_SendDiZhuCard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_SendDiZhuCard_descriptor,
        new String[] { "DizhuSeatId", "Ratio", "DizhuCards", "Index", });
    internal_static_pb_landlord_P_NextPlayer_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_pb_landlord_P_NextPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_NextPlayer_descriptor,
        new String[] { "NextPlaySeatId", "SystemTime", "ExpireTime", "IsNewRound", "Index", });
    internal_static_pb_landlord_P_PlayCards_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_pb_landlord_P_PlayCards_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_PlayCards_descriptor,
        new String[] { "DoPlaySeatId", "Cards", "CardType", "Ratio", "RemainCards", "Index", });
    internal_static_pb_landlord_P_GameSettle_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_pb_landlord_P_GameSettle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_GameSettle_descriptor,
        new String[] { "IsContinue", "PSettle", "SpringStatus", "Index", "Ratio", });
    internal_static_pb_landlord_P_SendAction_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_pb_landlord_P_SendAction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_SendAction_descriptor,
        new String[] { "FromSeat", "ToSeat", "ActionId", });
    internal_static_pb_landlord_P_T_AutoPlay_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_pb_landlord_P_T_AutoPlay_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_T_AutoPlay_descriptor,
        new String[] { "SeatId", "Status", "Index", });
    internal_static_pb_landlord_P_T_GameStart_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_pb_landlord_P_T_GameStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_T_GameStart_descriptor,
        new String[] { "HandsCards", "Index", });
    internal_static_pb_landlord_P_T_DoCatch_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_pb_landlord_P_T_DoCatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_T_DoCatch_descriptor,
        new String[] { "DoCatchSeatId", "Rang", "SystemTime", "ExpireTime", "Index", });
    internal_static_pb_landlord_P_T_CatchResult_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_pb_landlord_P_T_CatchResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_T_CatchResult_descriptor,
        new String[] { "CatchSeatId", "Rang", "Ratio", "Index", "CatchScore", });
    internal_static_pb_landlord_P_T_SendDiZhuCard_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_pb_landlord_P_T_SendDiZhuCard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_T_SendDiZhuCard_descriptor,
        new String[] { "DizhuSeatId", "Rang", "Ratio", "DizhuCards", "Index", });
    internal_static_pb_landlord_P_T_GameSettle_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_pb_landlord_P_T_GameSettle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_T_GameSettle_descriptor,
        new String[] { "IsContinue", "PSettle", "SpringStatus", "Index", "Ratio", });
    internal_static_pb_landlord_P_MatchList_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_pb_landlord_P_MatchList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_MatchList_descriptor,
        new String[] { "MatchIndex", "Type", "MatchId", "PlayerNum", });
    internal_static_pb_landlord_P_MatchStart_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_pb_landlord_P_MatchStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_MatchStart_descriptor,
        new String[] { "CurRound", "TotalRound", "TimeDown", });
    internal_static_pb_landlord_P_MatchEnd_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_pb_landlord_P_MatchEnd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_MatchEnd_descriptor,
        new String[] { "CurPlay", "TotalPlay", "Rank", "Point", });
    internal_static_pb_landlord_P_MatchResult_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_pb_landlord_P_MatchResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_MatchResult_descriptor,
        new String[] { "MatchAward", "ScoreList", });
    internal_static_pb_landlord_P_GodLightStatus_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_pb_landlord_P_GodLightStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_GodLightStatus_descriptor,
        new String[] { "Status", });
    internal_static_pb_landlord_P_GodLightPool_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_pb_landlord_P_GodLightPool_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_P_GodLightPool_descriptor,
        new String[] { "AwardPool", });
    LandlordBase.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
