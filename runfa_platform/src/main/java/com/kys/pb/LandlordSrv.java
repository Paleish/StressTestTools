// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: landlord_srv.proto

package com.kys.pb;

public final class LandlordSrv {
  private LandlordSrv() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface S_GetRoomConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_GetRoomConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    java.util.List<LandlordBase.RoomConfig>
        getRoomConfigListList();
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    LandlordBase.RoomConfig getRoomConfigList(int index);
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    int getRoomConfigListCount();
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    java.util.List<? extends LandlordBase.RoomConfigOrBuilder>
        getRoomConfigListOrBuilderList();
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    LandlordBase.RoomConfigOrBuilder getRoomConfigListOrBuilder(
        int index);
  }
  /**
   * <pre>
   ** Server 返回游戏场景配置信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_GetRoomConfig}
   */
  public  static final class S_GetRoomConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_GetRoomConfig)
      S_GetRoomConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_GetRoomConfig.newBuilder() to construct.
    private S_GetRoomConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_GetRoomConfig() {
      roomConfigList_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_GetRoomConfig();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_GetRoomConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                roomConfigList_ = new java.util.ArrayList<LandlordBase.RoomConfig>();
                mutable_bitField0_ |= 0x00000001;
              }
              roomConfigList_.add(
                  input.readMessage(LandlordBase.RoomConfig.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          roomConfigList_ = java.util.Collections.unmodifiableList(roomConfigList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_GetRoomConfig_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_GetRoomConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_GetRoomConfig.class, Builder.class);
    }

    public static final int ROOMCONFIGLIST_FIELD_NUMBER = 1;
    private java.util.List<LandlordBase.RoomConfig> roomConfigList_;
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    public java.util.List<LandlordBase.RoomConfig> getRoomConfigListList() {
      return roomConfigList_;
    }
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    public java.util.List<? extends LandlordBase.RoomConfigOrBuilder>
        getRoomConfigListOrBuilderList() {
      return roomConfigList_;
    }
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    public int getRoomConfigListCount() {
      return roomConfigList_.size();
    }
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    public LandlordBase.RoomConfig getRoomConfigList(int index) {
      return roomConfigList_.get(index);
    }
    /**
     * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
     */
    public LandlordBase.RoomConfigOrBuilder getRoomConfigListOrBuilder(
        int index) {
      return roomConfigList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < roomConfigList_.size(); i++) {
        output.writeMessage(1, roomConfigList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < roomConfigList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomConfigList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_GetRoomConfig)) {
        return super.equals(obj);
      }
      S_GetRoomConfig other = (S_GetRoomConfig) obj;

      if (!getRoomConfigListList()
          .equals(other.getRoomConfigListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRoomConfigListCount() > 0) {
        hash = (37 * hash) + ROOMCONFIGLIST_FIELD_NUMBER;
        hash = (53 * hash) + getRoomConfigListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_GetRoomConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetRoomConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetRoomConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetRoomConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetRoomConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetRoomConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetRoomConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetRoomConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetRoomConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_GetRoomConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetRoomConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetRoomConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_GetRoomConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回游戏场景配置信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_GetRoomConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_GetRoomConfig)
        S_GetRoomConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_GetRoomConfig_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_GetRoomConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_GetRoomConfig.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_GetRoomConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRoomConfigListFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (roomConfigListBuilder_ == null) {
          roomConfigList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          roomConfigListBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_GetRoomConfig_descriptor;
      }

      @Override
      public S_GetRoomConfig getDefaultInstanceForType() {
        return S_GetRoomConfig.getDefaultInstance();
      }

      @Override
      public S_GetRoomConfig build() {
        S_GetRoomConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_GetRoomConfig buildPartial() {
        S_GetRoomConfig result = new S_GetRoomConfig(this);
        int from_bitField0_ = bitField0_;
        if (roomConfigListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            roomConfigList_ = java.util.Collections.unmodifiableList(roomConfigList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.roomConfigList_ = roomConfigList_;
        } else {
          result.roomConfigList_ = roomConfigListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_GetRoomConfig) {
          return mergeFrom((S_GetRoomConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_GetRoomConfig other) {
        if (other == S_GetRoomConfig.getDefaultInstance()) return this;
        if (roomConfigListBuilder_ == null) {
          if (!other.roomConfigList_.isEmpty()) {
            if (roomConfigList_.isEmpty()) {
              roomConfigList_ = other.roomConfigList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoomConfigListIsMutable();
              roomConfigList_.addAll(other.roomConfigList_);
            }
            onChanged();
          }
        } else {
          if (!other.roomConfigList_.isEmpty()) {
            if (roomConfigListBuilder_.isEmpty()) {
              roomConfigListBuilder_.dispose();
              roomConfigListBuilder_ = null;
              roomConfigList_ = other.roomConfigList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              roomConfigListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRoomConfigListFieldBuilder() : null;
            } else {
              roomConfigListBuilder_.addAllMessages(other.roomConfigList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_GetRoomConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_GetRoomConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<LandlordBase.RoomConfig> roomConfigList_ =
        java.util.Collections.emptyList();
      private void ensureRoomConfigListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          roomConfigList_ = new java.util.ArrayList<LandlordBase.RoomConfig>(roomConfigList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.RoomConfig, LandlordBase.RoomConfig.Builder, LandlordBase.RoomConfigOrBuilder> roomConfigListBuilder_;

      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public java.util.List<LandlordBase.RoomConfig> getRoomConfigListList() {
        if (roomConfigListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomConfigList_);
        } else {
          return roomConfigListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public int getRoomConfigListCount() {
        if (roomConfigListBuilder_ == null) {
          return roomConfigList_.size();
        } else {
          return roomConfigListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public LandlordBase.RoomConfig getRoomConfigList(int index) {
        if (roomConfigListBuilder_ == null) {
          return roomConfigList_.get(index);
        } else {
          return roomConfigListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder setRoomConfigList(
          int index, LandlordBase.RoomConfig value) {
        if (roomConfigListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomConfigListIsMutable();
          roomConfigList_.set(index, value);
          onChanged();
        } else {
          roomConfigListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder setRoomConfigList(
          int index, LandlordBase.RoomConfig.Builder builderForValue) {
        if (roomConfigListBuilder_ == null) {
          ensureRoomConfigListIsMutable();
          roomConfigList_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomConfigListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder addRoomConfigList(LandlordBase.RoomConfig value) {
        if (roomConfigListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomConfigListIsMutable();
          roomConfigList_.add(value);
          onChanged();
        } else {
          roomConfigListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder addRoomConfigList(
          int index, LandlordBase.RoomConfig value) {
        if (roomConfigListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomConfigListIsMutable();
          roomConfigList_.add(index, value);
          onChanged();
        } else {
          roomConfigListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder addRoomConfigList(
          LandlordBase.RoomConfig.Builder builderForValue) {
        if (roomConfigListBuilder_ == null) {
          ensureRoomConfigListIsMutable();
          roomConfigList_.add(builderForValue.build());
          onChanged();
        } else {
          roomConfigListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder addRoomConfigList(
          int index, LandlordBase.RoomConfig.Builder builderForValue) {
        if (roomConfigListBuilder_ == null) {
          ensureRoomConfigListIsMutable();
          roomConfigList_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomConfigListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder addAllRoomConfigList(
          Iterable<? extends LandlordBase.RoomConfig> values) {
        if (roomConfigListBuilder_ == null) {
          ensureRoomConfigListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, roomConfigList_);
          onChanged();
        } else {
          roomConfigListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder clearRoomConfigList() {
        if (roomConfigListBuilder_ == null) {
          roomConfigList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          roomConfigListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public Builder removeRoomConfigList(int index) {
        if (roomConfigListBuilder_ == null) {
          ensureRoomConfigListIsMutable();
          roomConfigList_.remove(index);
          onChanged();
        } else {
          roomConfigListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public LandlordBase.RoomConfig.Builder getRoomConfigListBuilder(
          int index) {
        return getRoomConfigListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public LandlordBase.RoomConfigOrBuilder getRoomConfigListOrBuilder(
          int index) {
        if (roomConfigListBuilder_ == null) {
          return roomConfigList_.get(index);  } else {
          return roomConfigListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public java.util.List<? extends LandlordBase.RoomConfigOrBuilder>
           getRoomConfigListOrBuilderList() {
        if (roomConfigListBuilder_ != null) {
          return roomConfigListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomConfigList_);
        }
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public LandlordBase.RoomConfig.Builder addRoomConfigListBuilder() {
        return getRoomConfigListFieldBuilder().addBuilder(
            LandlordBase.RoomConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public LandlordBase.RoomConfig.Builder addRoomConfigListBuilder(
          int index) {
        return getRoomConfigListFieldBuilder().addBuilder(
            index, LandlordBase.RoomConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .pb_landlord.RoomConfig roomConfigList = 1;</code>
       */
      public java.util.List<LandlordBase.RoomConfig.Builder>
           getRoomConfigListBuilderList() {
        return getRoomConfigListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.RoomConfig, LandlordBase.RoomConfig.Builder, LandlordBase.RoomConfigOrBuilder>
          getRoomConfigListFieldBuilder() {
        if (roomConfigListBuilder_ == null) {
          roomConfigListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.RoomConfig, LandlordBase.RoomConfig.Builder, LandlordBase.RoomConfigOrBuilder>(
                  roomConfigList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          roomConfigList_ = null;
        }
        return roomConfigListBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_GetRoomConfig)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_GetRoomConfig)
    private static final S_GetRoomConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_GetRoomConfig();
    }

    public static S_GetRoomConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_GetRoomConfig>
        PARSER = new com.google.protobuf.AbstractParser<S_GetRoomConfig>() {
      @Override
      public S_GetRoomConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_GetRoomConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_GetRoomConfig> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_GetRoomConfig> getParserForType() {
      return PARSER;
    }

    @Override
    public S_GetRoomConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_GetRoomInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_GetRoomInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** RoomConfig对象 
     * </pre>
     *
     * <code>.pb_landlord.RoomConfig config = 1;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     ** RoomConfig对象 
     * </pre>
     *
     * <code>.pb_landlord.RoomConfig config = 1;</code>
     */
    LandlordBase.RoomConfig getConfig();
    /**
     * <pre>
     ** RoomConfig对象 
     * </pre>
     *
     * <code>.pb_landlord.RoomConfig config = 1;</code>
     */
    LandlordBase.RoomConfigOrBuilder getConfigOrBuilder();
  }
  /**
   * <pre>
   ** Server 返回房间信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_GetRoomInfo}
   */
  public  static final class S_GetRoomInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_GetRoomInfo)
      S_GetRoomInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_GetRoomInfo.newBuilder() to construct.
    private S_GetRoomInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_GetRoomInfo() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_GetRoomInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_GetRoomInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              LandlordBase.RoomConfig.Builder subBuilder = null;
              if (config_ != null) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(LandlordBase.RoomConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_GetRoomInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_GetRoomInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_GetRoomInfo.class, Builder.class);
    }

    public static final int CONFIG_FIELD_NUMBER = 1;
    private LandlordBase.RoomConfig config_;
    /**
     * <pre>
     ** RoomConfig对象 
     * </pre>
     *
     * <code>.pb_landlord.RoomConfig config = 1;</code>
     */
    public boolean hasConfig() {
      return config_ != null;
    }
    /**
     * <pre>
     ** RoomConfig对象 
     * </pre>
     *
     * <code>.pb_landlord.RoomConfig config = 1;</code>
     */
    public LandlordBase.RoomConfig getConfig() {
      return config_ == null ? LandlordBase.RoomConfig.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     ** RoomConfig对象 
     * </pre>
     *
     * <code>.pb_landlord.RoomConfig config = 1;</code>
     */
    public LandlordBase.RoomConfigOrBuilder getConfigOrBuilder() {
      return getConfig();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (config_ != null) {
        output.writeMessage(1, getConfig());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (config_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_GetRoomInfo)) {
        return super.equals(obj);
      }
      S_GetRoomInfo other = (S_GetRoomInfo) obj;

      if (hasConfig() != other.hasConfig()) return false;
      if (hasConfig()) {
        if (!getConfig()
            .equals(other.getConfig())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_GetRoomInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetRoomInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetRoomInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetRoomInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetRoomInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetRoomInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetRoomInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetRoomInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetRoomInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_GetRoomInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetRoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetRoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_GetRoomInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回房间信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_GetRoomInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_GetRoomInfo)
        S_GetRoomInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_GetRoomInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_GetRoomInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_GetRoomInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_GetRoomInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          config_ = null;
          configBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_GetRoomInfo_descriptor;
      }

      @Override
      public S_GetRoomInfo getDefaultInstanceForType() {
        return S_GetRoomInfo.getDefaultInstance();
      }

      @Override
      public S_GetRoomInfo build() {
        S_GetRoomInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_GetRoomInfo buildPartial() {
        S_GetRoomInfo result = new S_GetRoomInfo(this);
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_GetRoomInfo) {
          return mergeFrom((S_GetRoomInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_GetRoomInfo other) {
        if (other == S_GetRoomInfo.getDefaultInstance()) return this;
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_GetRoomInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_GetRoomInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private LandlordBase.RoomConfig config_;
      private com.google.protobuf.SingleFieldBuilderV3<
          LandlordBase.RoomConfig, LandlordBase.RoomConfig.Builder, LandlordBase.RoomConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      public boolean hasConfig() {
        return configBuilder_ != null || config_ != null;
      }
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      public LandlordBase.RoomConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? LandlordBase.RoomConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      public Builder setConfig(LandlordBase.RoomConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      public Builder setConfig(
          LandlordBase.RoomConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      public Builder mergeConfig(LandlordBase.RoomConfig value) {
        if (configBuilder_ == null) {
          if (config_ != null) {
            config_ =
              LandlordBase.RoomConfig.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          config_ = null;
          configBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      public LandlordBase.RoomConfig.Builder getConfigBuilder() {
        
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      public LandlordBase.RoomConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              LandlordBase.RoomConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       ** RoomConfig对象 
       * </pre>
       *
       * <code>.pb_landlord.RoomConfig config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          LandlordBase.RoomConfig, LandlordBase.RoomConfig.Builder, LandlordBase.RoomConfigOrBuilder>
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              LandlordBase.RoomConfig, LandlordBase.RoomConfig.Builder, LandlordBase.RoomConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_GetRoomInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_GetRoomInfo)
    private static final S_GetRoomInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_GetRoomInfo();
    }

    public static S_GetRoomInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_GetRoomInfo>
        PARSER = new com.google.protobuf.AbstractParser<S_GetRoomInfo>() {
      @Override
      public S_GetRoomInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_GetRoomInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_GetRoomInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_GetRoomInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public S_GetRoomInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_QuickJoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_QuickJoin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 等待匹配的最大时间 
     * </pre>
     *
     * <code>int32 waitTime = 1;</code>
     */
    int getWaitTime();

    /**
     * <pre>
     ** 记牌器结束提醒 
     * </pre>
     *
     * <code>bool recordRemind = 2;</code>
     */
    boolean getRecordRemind();
  }
  /**
   * <pre>
   ** Server 加入匹配队列ACK消息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_QuickJoin}
   */
  public  static final class S_QuickJoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_QuickJoin)
      S_QuickJoinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_QuickJoin.newBuilder() to construct.
    private S_QuickJoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_QuickJoin() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_QuickJoin();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_QuickJoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              waitTime_ = input.readInt32();
              break;
            }
            case 16: {

              recordRemind_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_QuickJoin_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_QuickJoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_QuickJoin.class, Builder.class);
    }

    public static final int WAITTIME_FIELD_NUMBER = 1;
    private int waitTime_;
    /**
     * <pre>
     ** 等待匹配的最大时间 
     * </pre>
     *
     * <code>int32 waitTime = 1;</code>
     */
    public int getWaitTime() {
      return waitTime_;
    }

    public static final int RECORDREMIND_FIELD_NUMBER = 2;
    private boolean recordRemind_;
    /**
     * <pre>
     ** 记牌器结束提醒 
     * </pre>
     *
     * <code>bool recordRemind = 2;</code>
     */
    public boolean getRecordRemind() {
      return recordRemind_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (waitTime_ != 0) {
        output.writeInt32(1, waitTime_);
      }
      if (recordRemind_ != false) {
        output.writeBool(2, recordRemind_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (waitTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, waitTime_);
      }
      if (recordRemind_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, recordRemind_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_QuickJoin)) {
        return super.equals(obj);
      }
      S_QuickJoin other = (S_QuickJoin) obj;

      if (getWaitTime()
          != other.getWaitTime()) return false;
      if (getRecordRemind()
          != other.getRecordRemind()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WAITTIME_FIELD_NUMBER;
      hash = (53 * hash) + getWaitTime();
      hash = (37 * hash) + RECORDREMIND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRecordRemind());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_QuickJoin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_QuickJoin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_QuickJoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_QuickJoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_QuickJoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_QuickJoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_QuickJoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_QuickJoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_QuickJoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_QuickJoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_QuickJoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_QuickJoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_QuickJoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 加入匹配队列ACK消息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_QuickJoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_QuickJoin)
        S_QuickJoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_QuickJoin_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_QuickJoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_QuickJoin.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_QuickJoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        waitTime_ = 0;

        recordRemind_ = false;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_QuickJoin_descriptor;
      }

      @Override
      public S_QuickJoin getDefaultInstanceForType() {
        return S_QuickJoin.getDefaultInstance();
      }

      @Override
      public S_QuickJoin build() {
        S_QuickJoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_QuickJoin buildPartial() {
        S_QuickJoin result = new S_QuickJoin(this);
        result.waitTime_ = waitTime_;
        result.recordRemind_ = recordRemind_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_QuickJoin) {
          return mergeFrom((S_QuickJoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_QuickJoin other) {
        if (other == S_QuickJoin.getDefaultInstance()) return this;
        if (other.getWaitTime() != 0) {
          setWaitTime(other.getWaitTime());
        }
        if (other.getRecordRemind() != false) {
          setRecordRemind(other.getRecordRemind());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_QuickJoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_QuickJoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int waitTime_ ;
      /**
       * <pre>
       ** 等待匹配的最大时间 
       * </pre>
       *
       * <code>int32 waitTime = 1;</code>
       */
      public int getWaitTime() {
        return waitTime_;
      }
      /**
       * <pre>
       ** 等待匹配的最大时间 
       * </pre>
       *
       * <code>int32 waitTime = 1;</code>
       */
      public Builder setWaitTime(int value) {
        
        waitTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 等待匹配的最大时间 
       * </pre>
       *
       * <code>int32 waitTime = 1;</code>
       */
      public Builder clearWaitTime() {
        
        waitTime_ = 0;
        onChanged();
        return this;
      }

      private boolean recordRemind_ ;
      /**
       * <pre>
       ** 记牌器结束提醒 
       * </pre>
       *
       * <code>bool recordRemind = 2;</code>
       */
      public boolean getRecordRemind() {
        return recordRemind_;
      }
      /**
       * <pre>
       ** 记牌器结束提醒 
       * </pre>
       *
       * <code>bool recordRemind = 2;</code>
       */
      public Builder setRecordRemind(boolean value) {
        
        recordRemind_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 记牌器结束提醒 
       * </pre>
       *
       * <code>bool recordRemind = 2;</code>
       */
      public Builder clearRecordRemind() {
        
        recordRemind_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_QuickJoin)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_QuickJoin)
    private static final S_QuickJoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_QuickJoin();
    }

    public static S_QuickJoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_QuickJoin>
        PARSER = new com.google.protobuf.AbstractParser<S_QuickJoin>() {
      @Override
      public S_QuickJoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_QuickJoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_QuickJoin> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_QuickJoin> getParserForType() {
      return PARSER;
    }

    @Override
    public S_QuickJoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_CancleJoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_CancleJoin)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 取消排队 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_CancleJoin}
   */
  public  static final class S_CancleJoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_CancleJoin)
      S_CancleJoinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_CancleJoin.newBuilder() to construct.
    private S_CancleJoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_CancleJoin() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_CancleJoin();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_CancleJoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_CancleJoin_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_CancleJoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_CancleJoin.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_CancleJoin)) {
        return super.equals(obj);
      }
      S_CancleJoin other = (S_CancleJoin) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_CancleJoin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_CancleJoin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_CancleJoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_CancleJoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_CancleJoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_CancleJoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_CancleJoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_CancleJoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_CancleJoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_CancleJoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_CancleJoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_CancleJoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_CancleJoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 取消排队 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_CancleJoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_CancleJoin)
        S_CancleJoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_CancleJoin_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_CancleJoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_CancleJoin.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_CancleJoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_CancleJoin_descriptor;
      }

      @Override
      public S_CancleJoin getDefaultInstanceForType() {
        return S_CancleJoin.getDefaultInstance();
      }

      @Override
      public S_CancleJoin build() {
        S_CancleJoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_CancleJoin buildPartial() {
        S_CancleJoin result = new S_CancleJoin(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_CancleJoin) {
          return mergeFrom((S_CancleJoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_CancleJoin other) {
        if (other == S_CancleJoin.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_CancleJoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_CancleJoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_CancleJoin)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_CancleJoin)
    private static final S_CancleJoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_CancleJoin();
    }

    public static S_CancleJoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_CancleJoin>
        PARSER = new com.google.protobuf.AbstractParser<S_CancleJoin>() {
      @Override
      public S_CancleJoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_CancleJoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_CancleJoin> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_CancleJoin> getParserForType() {
      return PARSER;
    }

    @Override
    public S_CancleJoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_AutoPlayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_AutoPlay)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 托管成功 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_AutoPlay}
   */
  public  static final class S_AutoPlay extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_AutoPlay)
      S_AutoPlayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_AutoPlay.newBuilder() to construct.
    private S_AutoPlay(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_AutoPlay() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_AutoPlay();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_AutoPlay(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_AutoPlay_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_AutoPlay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_AutoPlay.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_AutoPlay)) {
        return super.equals(obj);
      }
      S_AutoPlay other = (S_AutoPlay) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_AutoPlay parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_AutoPlay parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_AutoPlay parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_AutoPlay parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_AutoPlay parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_AutoPlay parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_AutoPlay parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_AutoPlay parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_AutoPlay parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_AutoPlay parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_AutoPlay parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_AutoPlay parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_AutoPlay prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 托管成功 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_AutoPlay}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_AutoPlay)
        S_AutoPlayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_AutoPlay_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_AutoPlay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_AutoPlay.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_AutoPlay.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_AutoPlay_descriptor;
      }

      @Override
      public S_AutoPlay getDefaultInstanceForType() {
        return S_AutoPlay.getDefaultInstance();
      }

      @Override
      public S_AutoPlay build() {
        S_AutoPlay result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_AutoPlay buildPartial() {
        S_AutoPlay result = new S_AutoPlay(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_AutoPlay) {
          return mergeFrom((S_AutoPlay)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_AutoPlay other) {
        if (other == S_AutoPlay.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_AutoPlay parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_AutoPlay) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_AutoPlay)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_AutoPlay)
    private static final S_AutoPlay DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_AutoPlay();
    }

    public static S_AutoPlay getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_AutoPlay>
        PARSER = new com.google.protobuf.AbstractParser<S_AutoPlay>() {
      @Override
      public S_AutoPlay parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_AutoPlay(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_AutoPlay> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_AutoPlay> getParserForType() {
      return PARSER;
    }

    @Override
    public S_AutoPlay getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_RetryReturnGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_RetryReturnGame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 游戏服url 
     * </pre>
     *
     * <code>string url = 1;</code>
     */
    String getUrl();
    /**
     * <pre>
     ** 游戏服url 
     * </pre>
     *
     * <code>string url = 1;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();

    /**
     * <pre>
     ** 房间id 
     * </pre>
     *
     * <code>int32 roomId = 2;</code>
     */
    int getRoomId();
  }
  /**
   * <pre>
   ** Server 返回客户端尝试返回游戏 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_RetryReturnGame}
   */
  public  static final class S_RetryReturnGame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_RetryReturnGame)
      S_RetryReturnGameOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_RetryReturnGame.newBuilder() to construct.
    private S_RetryReturnGame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_RetryReturnGame() {
      url_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_RetryReturnGame();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_RetryReturnGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              url_ = s;
              break;
            }
            case 16: {

              roomId_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_RetryReturnGame_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_RetryReturnGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_RetryReturnGame.class, Builder.class);
    }

    public static final int URL_FIELD_NUMBER = 1;
    private volatile Object url_;
    /**
     * <pre>
     ** 游戏服url 
     * </pre>
     *
     * <code>string url = 1;</code>
     */
    public String getUrl() {
      Object ref = url_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        url_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 游戏服url 
     * </pre>
     *
     * <code>string url = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      Object ref = url_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROOMID_FIELD_NUMBER = 2;
    private int roomId_;
    /**
     * <pre>
     ** 房间id 
     * </pre>
     *
     * <code>int32 roomId = 2;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, url_);
      }
      if (roomId_ != 0) {
        output.writeInt32(2, roomId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, url_);
      }
      if (roomId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, roomId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_RetryReturnGame)) {
        return super.equals(obj);
      }
      S_RetryReturnGame other = (S_RetryReturnGame) obj;

      if (!getUrl()
          .equals(other.getUrl())) return false;
      if (getRoomId()
          != other.getRoomId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + URL_FIELD_NUMBER;
      hash = (53 * hash) + getUrl().hashCode();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_RetryReturnGame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_RetryReturnGame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_RetryReturnGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_RetryReturnGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_RetryReturnGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_RetryReturnGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_RetryReturnGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_RetryReturnGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_RetryReturnGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_RetryReturnGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_RetryReturnGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_RetryReturnGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_RetryReturnGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回客户端尝试返回游戏 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_RetryReturnGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_RetryReturnGame)
        S_RetryReturnGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_RetryReturnGame_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_RetryReturnGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_RetryReturnGame.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_RetryReturnGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        url_ = "";

        roomId_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_RetryReturnGame_descriptor;
      }

      @Override
      public S_RetryReturnGame getDefaultInstanceForType() {
        return S_RetryReturnGame.getDefaultInstance();
      }

      @Override
      public S_RetryReturnGame build() {
        S_RetryReturnGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_RetryReturnGame buildPartial() {
        S_RetryReturnGame result = new S_RetryReturnGame(this);
        result.url_ = url_;
        result.roomId_ = roomId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_RetryReturnGame) {
          return mergeFrom((S_RetryReturnGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_RetryReturnGame other) {
        if (other == S_RetryReturnGame.getDefaultInstance()) return this;
        if (!other.getUrl().isEmpty()) {
          url_ = other.url_;
          onChanged();
        }
        if (other.getRoomId() != 0) {
          setRoomId(other.getRoomId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_RetryReturnGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_RetryReturnGame) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object url_ = "";
      /**
       * <pre>
       ** 游戏服url 
       * </pre>
       *
       * <code>string url = 1;</code>
       */
      public String getUrl() {
        Object ref = url_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          url_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 游戏服url 
       * </pre>
       *
       * <code>string url = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 游戏服url 
       * </pre>
       *
       * <code>string url = 1;</code>
       */
      public Builder setUrl(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        url_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 游戏服url 
       * </pre>
       *
       * <code>string url = 1;</code>
       */
      public Builder clearUrl() {
        
        url_ = getDefaultInstance().getUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 游戏服url 
       * </pre>
       *
       * <code>string url = 1;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        url_ = value;
        onChanged();
        return this;
      }

      private int roomId_ ;
      /**
       * <pre>
       ** 房间id 
       * </pre>
       *
       * <code>int32 roomId = 2;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <pre>
       ** 房间id 
       * </pre>
       *
       * <code>int32 roomId = 2;</code>
       */
      public Builder setRoomId(int value) {
        
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 房间id 
       * </pre>
       *
       * <code>int32 roomId = 2;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_RetryReturnGame)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_RetryReturnGame)
    private static final S_RetryReturnGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_RetryReturnGame();
    }

    public static S_RetryReturnGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_RetryReturnGame>
        PARSER = new com.google.protobuf.AbstractParser<S_RetryReturnGame>() {
      @Override
      public S_RetryReturnGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_RetryReturnGame(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_RetryReturnGame> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_RetryReturnGame> getParserForType() {
      return PARSER;
    }

    @Override
    public S_RetryReturnGame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_SendActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_SendAction)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 互动表情ack 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_SendAction}
   */
  public  static final class S_SendAction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_SendAction)
      S_SendActionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_SendAction.newBuilder() to construct.
    private S_SendAction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_SendAction() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_SendAction();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_SendAction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_SendAction_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_SendAction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_SendAction.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_SendAction)) {
        return super.equals(obj);
      }
      S_SendAction other = (S_SendAction) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_SendAction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_SendAction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_SendAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_SendAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_SendAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_SendAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_SendAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_SendAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_SendAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_SendAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_SendAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_SendAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_SendAction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 互动表情ack 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_SendAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_SendAction)
        S_SendActionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_SendAction_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_SendAction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_SendAction.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_SendAction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_SendAction_descriptor;
      }

      @Override
      public S_SendAction getDefaultInstanceForType() {
        return S_SendAction.getDefaultInstance();
      }

      @Override
      public S_SendAction build() {
        S_SendAction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_SendAction buildPartial() {
        S_SendAction result = new S_SendAction(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_SendAction) {
          return mergeFrom((S_SendAction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_SendAction other) {
        if (other == S_SendAction.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_SendAction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_SendAction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_SendAction)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_SendAction)
    private static final S_SendAction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_SendAction();
    }

    public static S_SendAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_SendAction>
        PARSER = new com.google.protobuf.AbstractParser<S_SendAction>() {
      @Override
      public S_SendAction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_SendAction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_SendAction> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_SendAction> getParserForType() {
      return PARSER;
    }

    @Override
    public S_SendAction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_DrawWinCupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_DrawWinCup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 抽取红包数 
     * </pre>
     *
     * <code>float drawWinCup = 1;</code>
     */
    float getDrawWinCup();

    /**
     * <pre>
     ** 当前红包数 
     * </pre>
     *
     * <code>float playerWinCup = 2;</code>
     */
    float getPlayerWinCup();

    /**
     * <pre>
     ** 剩余抽奖比赛场数 
     * </pre>
     *
     * <code>int32 leftCount = 3;</code>
     */
    int getLeftCount();

    /**
     * <pre>
     ** 没有中奖4个值 
     * </pre>
     *
     * <code>repeated float cupArray = 4;</code>
     */
    java.util.List<Float> getCupArrayList();
    /**
     * <pre>
     ** 没有中奖4个值 
     * </pre>
     *
     * <code>repeated float cupArray = 4;</code>
     */
    int getCupArrayCount();
    /**
     * <pre>
     ** 没有中奖4个值 
     * </pre>
     *
     * <code>repeated float cupArray = 4;</code>
     */
    float getCupArray(int index);

    /**
     * <pre>
     ** 是否展示双倍动画 
     * </pre>
     *
     * <code>bool isDouble = 5;</code>
     */
    boolean getIsDouble();
  }
  /**
   * <pre>
   ** Server 返回抽红包 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_DrawWinCup}
   */
  public  static final class S_DrawWinCup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_DrawWinCup)
      S_DrawWinCupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_DrawWinCup.newBuilder() to construct.
    private S_DrawWinCup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_DrawWinCup() {
      cupArray_ = emptyFloatList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_DrawWinCup();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_DrawWinCup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              drawWinCup_ = input.readFloat();
              break;
            }
            case 21: {

              playerWinCup_ = input.readFloat();
              break;
            }
            case 24: {

              leftCount_ = input.readInt32();
              break;
            }
            case 37: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                cupArray_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              cupArray_.addFloat(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                cupArray_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cupArray_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {

              isDouble_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          cupArray_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_DrawWinCup_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_DrawWinCup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_DrawWinCup.class, Builder.class);
    }

    public static final int DRAWWINCUP_FIELD_NUMBER = 1;
    private float drawWinCup_;
    /**
     * <pre>
     ** 抽取红包数 
     * </pre>
     *
     * <code>float drawWinCup = 1;</code>
     */
    public float getDrawWinCup() {
      return drawWinCup_;
    }

    public static final int PLAYERWINCUP_FIELD_NUMBER = 2;
    private float playerWinCup_;
    /**
     * <pre>
     ** 当前红包数 
     * </pre>
     *
     * <code>float playerWinCup = 2;</code>
     */
    public float getPlayerWinCup() {
      return playerWinCup_;
    }

    public static final int LEFTCOUNT_FIELD_NUMBER = 3;
    private int leftCount_;
    /**
     * <pre>
     ** 剩余抽奖比赛场数 
     * </pre>
     *
     * <code>int32 leftCount = 3;</code>
     */
    public int getLeftCount() {
      return leftCount_;
    }

    public static final int CUPARRAY_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.FloatList cupArray_;
    /**
     * <pre>
     ** 没有中奖4个值 
     * </pre>
     *
     * <code>repeated float cupArray = 4;</code>
     */
    public java.util.List<Float>
        getCupArrayList() {
      return cupArray_;
    }
    /**
     * <pre>
     ** 没有中奖4个值 
     * </pre>
     *
     * <code>repeated float cupArray = 4;</code>
     */
    public int getCupArrayCount() {
      return cupArray_.size();
    }
    /**
     * <pre>
     ** 没有中奖4个值 
     * </pre>
     *
     * <code>repeated float cupArray = 4;</code>
     */
    public float getCupArray(int index) {
      return cupArray_.getFloat(index);
    }
    private int cupArrayMemoizedSerializedSize = -1;

    public static final int ISDOUBLE_FIELD_NUMBER = 5;
    private boolean isDouble_;
    /**
     * <pre>
     ** 是否展示双倍动画 
     * </pre>
     *
     * <code>bool isDouble = 5;</code>
     */
    public boolean getIsDouble() {
      return isDouble_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (drawWinCup_ != 0F) {
        output.writeFloat(1, drawWinCup_);
      }
      if (playerWinCup_ != 0F) {
        output.writeFloat(2, playerWinCup_);
      }
      if (leftCount_ != 0) {
        output.writeInt32(3, leftCount_);
      }
      if (getCupArrayList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(cupArrayMemoizedSerializedSize);
      }
      for (int i = 0; i < cupArray_.size(); i++) {
        output.writeFloatNoTag(cupArray_.getFloat(i));
      }
      if (isDouble_ != false) {
        output.writeBool(5, isDouble_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (drawWinCup_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, drawWinCup_);
      }
      if (playerWinCup_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, playerWinCup_);
      }
      if (leftCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftCount_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getCupArrayList().size();
        size += dataSize;
        if (!getCupArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cupArrayMemoizedSerializedSize = dataSize;
      }
      if (isDouble_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isDouble_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_DrawWinCup)) {
        return super.equals(obj);
      }
      S_DrawWinCup other = (S_DrawWinCup) obj;

      if (Float.floatToIntBits(getDrawWinCup())
          != Float.floatToIntBits(
              other.getDrawWinCup())) return false;
      if (Float.floatToIntBits(getPlayerWinCup())
          != Float.floatToIntBits(
              other.getPlayerWinCup())) return false;
      if (getLeftCount()
          != other.getLeftCount()) return false;
      if (!getCupArrayList()
          .equals(other.getCupArrayList())) return false;
      if (getIsDouble()
          != other.getIsDouble()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DRAWWINCUP_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getDrawWinCup());
      hash = (37 * hash) + PLAYERWINCUP_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPlayerWinCup());
      hash = (37 * hash) + LEFTCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getLeftCount();
      if (getCupArrayCount() > 0) {
        hash = (37 * hash) + CUPARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getCupArrayList().hashCode();
      }
      hash = (37 * hash) + ISDOUBLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsDouble());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_DrawWinCup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_DrawWinCup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_DrawWinCup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_DrawWinCup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_DrawWinCup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_DrawWinCup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_DrawWinCup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_DrawWinCup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_DrawWinCup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_DrawWinCup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_DrawWinCup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_DrawWinCup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_DrawWinCup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回抽红包 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_DrawWinCup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_DrawWinCup)
        S_DrawWinCupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_DrawWinCup_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_DrawWinCup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_DrawWinCup.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_DrawWinCup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        drawWinCup_ = 0F;

        playerWinCup_ = 0F;

        leftCount_ = 0;

        cupArray_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        isDouble_ = false;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_DrawWinCup_descriptor;
      }

      @Override
      public S_DrawWinCup getDefaultInstanceForType() {
        return S_DrawWinCup.getDefaultInstance();
      }

      @Override
      public S_DrawWinCup build() {
        S_DrawWinCup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_DrawWinCup buildPartial() {
        S_DrawWinCup result = new S_DrawWinCup(this);
        int from_bitField0_ = bitField0_;
        result.drawWinCup_ = drawWinCup_;
        result.playerWinCup_ = playerWinCup_;
        result.leftCount_ = leftCount_;
        if (((bitField0_ & 0x00000001) != 0)) {
          cupArray_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cupArray_ = cupArray_;
        result.isDouble_ = isDouble_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_DrawWinCup) {
          return mergeFrom((S_DrawWinCup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_DrawWinCup other) {
        if (other == S_DrawWinCup.getDefaultInstance()) return this;
        if (other.getDrawWinCup() != 0F) {
          setDrawWinCup(other.getDrawWinCup());
        }
        if (other.getPlayerWinCup() != 0F) {
          setPlayerWinCup(other.getPlayerWinCup());
        }
        if (other.getLeftCount() != 0) {
          setLeftCount(other.getLeftCount());
        }
        if (!other.cupArray_.isEmpty()) {
          if (cupArray_.isEmpty()) {
            cupArray_ = other.cupArray_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCupArrayIsMutable();
            cupArray_.addAll(other.cupArray_);
          }
          onChanged();
        }
        if (other.getIsDouble() != false) {
          setIsDouble(other.getIsDouble());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_DrawWinCup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_DrawWinCup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float drawWinCup_ ;
      /**
       * <pre>
       ** 抽取红包数 
       * </pre>
       *
       * <code>float drawWinCup = 1;</code>
       */
      public float getDrawWinCup() {
        return drawWinCup_;
      }
      /**
       * <pre>
       ** 抽取红包数 
       * </pre>
       *
       * <code>float drawWinCup = 1;</code>
       */
      public Builder setDrawWinCup(float value) {
        
        drawWinCup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 抽取红包数 
       * </pre>
       *
       * <code>float drawWinCup = 1;</code>
       */
      public Builder clearDrawWinCup() {
        
        drawWinCup_ = 0F;
        onChanged();
        return this;
      }

      private float playerWinCup_ ;
      /**
       * <pre>
       ** 当前红包数 
       * </pre>
       *
       * <code>float playerWinCup = 2;</code>
       */
      public float getPlayerWinCup() {
        return playerWinCup_;
      }
      /**
       * <pre>
       ** 当前红包数 
       * </pre>
       *
       * <code>float playerWinCup = 2;</code>
       */
      public Builder setPlayerWinCup(float value) {
        
        playerWinCup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前红包数 
       * </pre>
       *
       * <code>float playerWinCup = 2;</code>
       */
      public Builder clearPlayerWinCup() {
        
        playerWinCup_ = 0F;
        onChanged();
        return this;
      }

      private int leftCount_ ;
      /**
       * <pre>
       ** 剩余抽奖比赛场数 
       * </pre>
       *
       * <code>int32 leftCount = 3;</code>
       */
      public int getLeftCount() {
        return leftCount_;
      }
      /**
       * <pre>
       ** 剩余抽奖比赛场数 
       * </pre>
       *
       * <code>int32 leftCount = 3;</code>
       */
      public Builder setLeftCount(int value) {
        
        leftCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 剩余抽奖比赛场数 
       * </pre>
       *
       * <code>int32 leftCount = 3;</code>
       */
      public Builder clearLeftCount() {
        
        leftCount_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList cupArray_ = emptyFloatList();
      private void ensureCupArrayIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cupArray_ = mutableCopy(cupArray_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 没有中奖4个值 
       * </pre>
       *
       * <code>repeated float cupArray = 4;</code>
       */
      public java.util.List<Float>
          getCupArrayList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(cupArray_) : cupArray_;
      }
      /**
       * <pre>
       ** 没有中奖4个值 
       * </pre>
       *
       * <code>repeated float cupArray = 4;</code>
       */
      public int getCupArrayCount() {
        return cupArray_.size();
      }
      /**
       * <pre>
       ** 没有中奖4个值 
       * </pre>
       *
       * <code>repeated float cupArray = 4;</code>
       */
      public float getCupArray(int index) {
        return cupArray_.getFloat(index);
      }
      /**
       * <pre>
       ** 没有中奖4个值 
       * </pre>
       *
       * <code>repeated float cupArray = 4;</code>
       */
      public Builder setCupArray(
          int index, float value) {
        ensureCupArrayIsMutable();
        cupArray_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 没有中奖4个值 
       * </pre>
       *
       * <code>repeated float cupArray = 4;</code>
       */
      public Builder addCupArray(float value) {
        ensureCupArrayIsMutable();
        cupArray_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 没有中奖4个值 
       * </pre>
       *
       * <code>repeated float cupArray = 4;</code>
       */
      public Builder addAllCupArray(
          Iterable<? extends Float> values) {
        ensureCupArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cupArray_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 没有中奖4个值 
       * </pre>
       *
       * <code>repeated float cupArray = 4;</code>
       */
      public Builder clearCupArray() {
        cupArray_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private boolean isDouble_ ;
      /**
       * <pre>
       ** 是否展示双倍动画 
       * </pre>
       *
       * <code>bool isDouble = 5;</code>
       */
      public boolean getIsDouble() {
        return isDouble_;
      }
      /**
       * <pre>
       ** 是否展示双倍动画 
       * </pre>
       *
       * <code>bool isDouble = 5;</code>
       */
      public Builder setIsDouble(boolean value) {
        
        isDouble_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否展示双倍动画 
       * </pre>
       *
       * <code>bool isDouble = 5;</code>
       */
      public Builder clearIsDouble() {
        
        isDouble_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_DrawWinCup)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_DrawWinCup)
    private static final S_DrawWinCup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_DrawWinCup();
    }

    public static S_DrawWinCup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_DrawWinCup>
        PARSER = new com.google.protobuf.AbstractParser<S_DrawWinCup>() {
      @Override
      public S_DrawWinCup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_DrawWinCup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_DrawWinCup> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_DrawWinCup> getParserForType() {
      return PARSER;
    }

    @Override
    public S_DrawWinCup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_GetLotteryCountOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_GetLotteryCount)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 是否能抽奖 
     * </pre>
     *
     * <code>bool isCan = 1;</code>
     */
    boolean getIsCan();

    /**
     * <pre>
     ** 已经玩了的次数，每次抽奖会减小一定数量 
     * </pre>
     *
     * <code>int32 count = 2;</code>
     */
    int getCount();
  }
  /**
   * <pre>
   ** Server 返回玩家抽红包的比赛数 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_GetLotteryCount}
   */
  public  static final class S_GetLotteryCount extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_GetLotteryCount)
      S_GetLotteryCountOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_GetLotteryCount.newBuilder() to construct.
    private S_GetLotteryCount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_GetLotteryCount() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_GetLotteryCount();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_GetLotteryCount(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              isCan_ = input.readBool();
              break;
            }
            case 16: {

              count_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_GetLotteryCount_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_GetLotteryCount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_GetLotteryCount.class, Builder.class);
    }

    public static final int ISCAN_FIELD_NUMBER = 1;
    private boolean isCan_;
    /**
     * <pre>
     ** 是否能抽奖 
     * </pre>
     *
     * <code>bool isCan = 1;</code>
     */
    public boolean getIsCan() {
      return isCan_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <pre>
     ** 已经玩了的次数，每次抽奖会减小一定数量 
     * </pre>
     *
     * <code>int32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isCan_ != false) {
        output.writeBool(1, isCan_);
      }
      if (count_ != 0) {
        output.writeInt32(2, count_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isCan_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isCan_);
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_GetLotteryCount)) {
        return super.equals(obj);
      }
      S_GetLotteryCount other = (S_GetLotteryCount) obj;

      if (getIsCan()
          != other.getIsCan()) return false;
      if (getCount()
          != other.getCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ISCAN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsCan());
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_GetLotteryCount parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetLotteryCount parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetLotteryCount parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetLotteryCount parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetLotteryCount parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetLotteryCount parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetLotteryCount parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetLotteryCount parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetLotteryCount parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_GetLotteryCount parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetLotteryCount parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetLotteryCount parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_GetLotteryCount prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回玩家抽红包的比赛数 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_GetLotteryCount}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_GetLotteryCount)
        S_GetLotteryCountOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_GetLotteryCount_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_GetLotteryCount_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_GetLotteryCount.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_GetLotteryCount.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        isCan_ = false;

        count_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_GetLotteryCount_descriptor;
      }

      @Override
      public S_GetLotteryCount getDefaultInstanceForType() {
        return S_GetLotteryCount.getDefaultInstance();
      }

      @Override
      public S_GetLotteryCount build() {
        S_GetLotteryCount result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_GetLotteryCount buildPartial() {
        S_GetLotteryCount result = new S_GetLotteryCount(this);
        result.isCan_ = isCan_;
        result.count_ = count_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_GetLotteryCount) {
          return mergeFrom((S_GetLotteryCount)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_GetLotteryCount other) {
        if (other == S_GetLotteryCount.getDefaultInstance()) return this;
        if (other.getIsCan() != false) {
          setIsCan(other.getIsCan());
        }
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_GetLotteryCount parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_GetLotteryCount) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean isCan_ ;
      /**
       * <pre>
       ** 是否能抽奖 
       * </pre>
       *
       * <code>bool isCan = 1;</code>
       */
      public boolean getIsCan() {
        return isCan_;
      }
      /**
       * <pre>
       ** 是否能抽奖 
       * </pre>
       *
       * <code>bool isCan = 1;</code>
       */
      public Builder setIsCan(boolean value) {
        
        isCan_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否能抽奖 
       * </pre>
       *
       * <code>bool isCan = 1;</code>
       */
      public Builder clearIsCan() {
        
        isCan_ = false;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <pre>
       ** 已经玩了的次数，每次抽奖会减小一定数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <pre>
       ** 已经玩了的次数，每次抽奖会减小一定数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 已经玩了的次数，每次抽奖会减小一定数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_GetLotteryCount)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_GetLotteryCount)
    private static final S_GetLotteryCount DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_GetLotteryCount();
    }

    public static S_GetLotteryCount getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_GetLotteryCount>
        PARSER = new com.google.protobuf.AbstractParser<S_GetLotteryCount>() {
      @Override
      public S_GetLotteryCount parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_GetLotteryCount(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_GetLotteryCount> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_GetLotteryCount> getParserForType() {
      return PARSER;
    }

    @Override
    public S_GetLotteryCount getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_QueryIndexOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_QueryIndex)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 index = 1;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   ** Server 客户端主动请求index返回 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_QueryIndex}
   */
  public  static final class S_QueryIndex extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_QueryIndex)
      S_QueryIndexOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_QueryIndex.newBuilder() to construct.
    private S_QueryIndex(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_QueryIndex() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_QueryIndex();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_QueryIndex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_QueryIndex_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_QueryIndex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_QueryIndex.class, Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>int32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0) {
        output.writeInt32(1, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_QueryIndex)) {
        return super.equals(obj);
      }
      S_QueryIndex other = (S_QueryIndex) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_QueryIndex parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_QueryIndex parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_QueryIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_QueryIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_QueryIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_QueryIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_QueryIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_QueryIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_QueryIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_QueryIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_QueryIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_QueryIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_QueryIndex prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 客户端主动请求index返回 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_QueryIndex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_QueryIndex)
        S_QueryIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_QueryIndex_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_QueryIndex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_QueryIndex.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_QueryIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_QueryIndex_descriptor;
      }

      @Override
      public S_QueryIndex getDefaultInstanceForType() {
        return S_QueryIndex.getDefaultInstance();
      }

      @Override
      public S_QueryIndex build() {
        S_QueryIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_QueryIndex buildPartial() {
        S_QueryIndex result = new S_QueryIndex(this);
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_QueryIndex) {
          return mergeFrom((S_QueryIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_QueryIndex other) {
        if (other == S_QueryIndex.getDefaultInstance()) return this;
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_QueryIndex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_QueryIndex) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int index_ ;
      /**
       * <code>int32 index = 1;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>int32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 index = 1;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_QueryIndex)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_QueryIndex)
    private static final S_QueryIndex DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_QueryIndex();
    }

    public static S_QueryIndex getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_QueryIndex>
        PARSER = new com.google.protobuf.AbstractParser<S_QueryIndex>() {
      @Override
      public S_QueryIndex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_QueryIndex(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_QueryIndex> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_QueryIndex> getParserForType() {
      return PARSER;
    }

    @Override
    public S_QueryIndex getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_EnterRoomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_EnterRoom)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 1;</code>
     */
    int getIndex();

    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    java.util.List<LandlordBase.SeatInfo>
        getSeatInfoList();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    LandlordBase.SeatInfo getSeatInfo(int index);
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    int getSeatInfoCount();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    java.util.List<? extends LandlordBase.SeatInfoOrBuilder>
        getSeatInfoOrBuilderList();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    LandlordBase.SeatInfoOrBuilder getSeatInfoOrBuilder(
        int index);

    /**
     * <pre>
     ** 底分类型:1金豆，2钻石。 
     * </pre>
     *
     * <code>int32 basePointType = 4;</code>
     */
    int getBasePointType();

    /**
     * <pre>
     ** 底分 
     * </pre>
     *
     * <code>int32 basePoint = 5;</code>
     */
    int getBasePoint();
  }
  /**
   * <pre>
   ** Server 根据房间号进入房间 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_EnterRoom}
   */
  public  static final class S_EnterRoom extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_EnterRoom)
      S_EnterRoomOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_EnterRoom.newBuilder() to construct.
    private S_EnterRoom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_EnterRoom() {
      seatInfo_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_EnterRoom();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_EnterRoom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              index_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                seatInfo_ = new java.util.ArrayList<LandlordBase.SeatInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              seatInfo_.add(
                  input.readMessage(LandlordBase.SeatInfo.parser(), extensionRegistry));
              break;
            }
            case 32: {

              basePointType_ = input.readInt32();
              break;
            }
            case 40: {

              basePoint_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          seatInfo_ = java.util.Collections.unmodifiableList(seatInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_EnterRoom_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_EnterRoom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_EnterRoom.class, Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int SEATINFO_FIELD_NUMBER = 2;
    private java.util.List<LandlordBase.SeatInfo> seatInfo_;
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    public java.util.List<LandlordBase.SeatInfo> getSeatInfoList() {
      return seatInfo_;
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    public java.util.List<? extends LandlordBase.SeatInfoOrBuilder>
        getSeatInfoOrBuilderList() {
      return seatInfo_;
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    public int getSeatInfoCount() {
      return seatInfo_.size();
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    public LandlordBase.SeatInfo getSeatInfo(int index) {
      return seatInfo_.get(index);
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
     */
    public LandlordBase.SeatInfoOrBuilder getSeatInfoOrBuilder(
        int index) {
      return seatInfo_.get(index);
    }

    public static final int BASEPOINTTYPE_FIELD_NUMBER = 4;
    private int basePointType_;
    /**
     * <pre>
     ** 底分类型:1金豆，2钻石。 
     * </pre>
     *
     * <code>int32 basePointType = 4;</code>
     */
    public int getBasePointType() {
      return basePointType_;
    }

    public static final int BASEPOINT_FIELD_NUMBER = 5;
    private int basePoint_;
    /**
     * <pre>
     ** 底分 
     * </pre>
     *
     * <code>int32 basePoint = 5;</code>
     */
    public int getBasePoint() {
      return basePoint_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0) {
        output.writeInt32(1, index_);
      }
      for (int i = 0; i < seatInfo_.size(); i++) {
        output.writeMessage(2, seatInfo_.get(i));
      }
      if (basePointType_ != 0) {
        output.writeInt32(4, basePointType_);
      }
      if (basePoint_ != 0) {
        output.writeInt32(5, basePoint_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      for (int i = 0; i < seatInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, seatInfo_.get(i));
      }
      if (basePointType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, basePointType_);
      }
      if (basePoint_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, basePoint_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_EnterRoom)) {
        return super.equals(obj);
      }
      S_EnterRoom other = (S_EnterRoom) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (!getSeatInfoList()
          .equals(other.getSeatInfoList())) return false;
      if (getBasePointType()
          != other.getBasePointType()) return false;
      if (getBasePoint()
          != other.getBasePoint()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      if (getSeatInfoCount() > 0) {
        hash = (37 * hash) + SEATINFO_FIELD_NUMBER;
        hash = (53 * hash) + getSeatInfoList().hashCode();
      }
      hash = (37 * hash) + BASEPOINTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getBasePointType();
      hash = (37 * hash) + BASEPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getBasePoint();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_EnterRoom parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_EnterRoom parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_EnterRoom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_EnterRoom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_EnterRoom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_EnterRoom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_EnterRoom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_EnterRoom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_EnterRoom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_EnterRoom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_EnterRoom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_EnterRoom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_EnterRoom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 根据房间号进入房间 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_EnterRoom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_EnterRoom)
        S_EnterRoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_EnterRoom_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_EnterRoom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_EnterRoom.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_EnterRoom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSeatInfoFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        index_ = 0;

        if (seatInfoBuilder_ == null) {
          seatInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          seatInfoBuilder_.clear();
        }
        basePointType_ = 0;

        basePoint_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_EnterRoom_descriptor;
      }

      @Override
      public S_EnterRoom getDefaultInstanceForType() {
        return S_EnterRoom.getDefaultInstance();
      }

      @Override
      public S_EnterRoom build() {
        S_EnterRoom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_EnterRoom buildPartial() {
        S_EnterRoom result = new S_EnterRoom(this);
        int from_bitField0_ = bitField0_;
        result.index_ = index_;
        if (seatInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            seatInfo_ = java.util.Collections.unmodifiableList(seatInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.seatInfo_ = seatInfo_;
        } else {
          result.seatInfo_ = seatInfoBuilder_.build();
        }
        result.basePointType_ = basePointType_;
        result.basePoint_ = basePoint_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_EnterRoom) {
          return mergeFrom((S_EnterRoom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_EnterRoom other) {
        if (other == S_EnterRoom.getDefaultInstance()) return this;
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (seatInfoBuilder_ == null) {
          if (!other.seatInfo_.isEmpty()) {
            if (seatInfo_.isEmpty()) {
              seatInfo_ = other.seatInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSeatInfoIsMutable();
              seatInfo_.addAll(other.seatInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.seatInfo_.isEmpty()) {
            if (seatInfoBuilder_.isEmpty()) {
              seatInfoBuilder_.dispose();
              seatInfoBuilder_ = null;
              seatInfo_ = other.seatInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              seatInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSeatInfoFieldBuilder() : null;
            } else {
              seatInfoBuilder_.addAllMessages(other.seatInfo_);
            }
          }
        }
        if (other.getBasePointType() != 0) {
          setBasePointType(other.getBasePointType());
        }
        if (other.getBasePoint() != 0) {
          setBasePoint(other.getBasePoint());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_EnterRoom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_EnterRoom) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 1;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 1;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<LandlordBase.SeatInfo> seatInfo_ =
        java.util.Collections.emptyList();
      private void ensureSeatInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          seatInfo_ = new java.util.ArrayList<LandlordBase.SeatInfo>(seatInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.SeatInfo, LandlordBase.SeatInfo.Builder, LandlordBase.SeatInfoOrBuilder> seatInfoBuilder_;

      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public java.util.List<LandlordBase.SeatInfo> getSeatInfoList() {
        if (seatInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(seatInfo_);
        } else {
          return seatInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public int getSeatInfoCount() {
        if (seatInfoBuilder_ == null) {
          return seatInfo_.size();
        } else {
          return seatInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public LandlordBase.SeatInfo getSeatInfo(int index) {
        if (seatInfoBuilder_ == null) {
          return seatInfo_.get(index);
        } else {
          return seatInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder setSeatInfo(
          int index, LandlordBase.SeatInfo value) {
        if (seatInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatInfoIsMutable();
          seatInfo_.set(index, value);
          onChanged();
        } else {
          seatInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder setSeatInfo(
          int index, LandlordBase.SeatInfo.Builder builderForValue) {
        if (seatInfoBuilder_ == null) {
          ensureSeatInfoIsMutable();
          seatInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          seatInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder addSeatInfo(LandlordBase.SeatInfo value) {
        if (seatInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatInfoIsMutable();
          seatInfo_.add(value);
          onChanged();
        } else {
          seatInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder addSeatInfo(
          int index, LandlordBase.SeatInfo value) {
        if (seatInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatInfoIsMutable();
          seatInfo_.add(index, value);
          onChanged();
        } else {
          seatInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder addSeatInfo(
          LandlordBase.SeatInfo.Builder builderForValue) {
        if (seatInfoBuilder_ == null) {
          ensureSeatInfoIsMutable();
          seatInfo_.add(builderForValue.build());
          onChanged();
        } else {
          seatInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder addSeatInfo(
          int index, LandlordBase.SeatInfo.Builder builderForValue) {
        if (seatInfoBuilder_ == null) {
          ensureSeatInfoIsMutable();
          seatInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          seatInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder addAllSeatInfo(
          Iterable<? extends LandlordBase.SeatInfo> values) {
        if (seatInfoBuilder_ == null) {
          ensureSeatInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, seatInfo_);
          onChanged();
        } else {
          seatInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder clearSeatInfo() {
        if (seatInfoBuilder_ == null) {
          seatInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          seatInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public Builder removeSeatInfo(int index) {
        if (seatInfoBuilder_ == null) {
          ensureSeatInfoIsMutable();
          seatInfo_.remove(index);
          onChanged();
        } else {
          seatInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public LandlordBase.SeatInfo.Builder getSeatInfoBuilder(
          int index) {
        return getSeatInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public LandlordBase.SeatInfoOrBuilder getSeatInfoOrBuilder(
          int index) {
        if (seatInfoBuilder_ == null) {
          return seatInfo_.get(index);  } else {
          return seatInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public java.util.List<? extends LandlordBase.SeatInfoOrBuilder>
           getSeatInfoOrBuilderList() {
        if (seatInfoBuilder_ != null) {
          return seatInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(seatInfo_);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public LandlordBase.SeatInfo.Builder addSeatInfoBuilder() {
        return getSeatInfoFieldBuilder().addBuilder(
            LandlordBase.SeatInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public LandlordBase.SeatInfo.Builder addSeatInfoBuilder(
          int index) {
        return getSeatInfoFieldBuilder().addBuilder(
            index, LandlordBase.SeatInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.SeatInfo seatInfo = 2;</code>
       */
      public java.util.List<LandlordBase.SeatInfo.Builder>
           getSeatInfoBuilderList() {
        return getSeatInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.SeatInfo, LandlordBase.SeatInfo.Builder, LandlordBase.SeatInfoOrBuilder>
          getSeatInfoFieldBuilder() {
        if (seatInfoBuilder_ == null) {
          seatInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.SeatInfo, LandlordBase.SeatInfo.Builder, LandlordBase.SeatInfoOrBuilder>(
                  seatInfo_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          seatInfo_ = null;
        }
        return seatInfoBuilder_;
      }

      private int basePointType_ ;
      /**
       * <pre>
       ** 底分类型:1金豆，2钻石。 
       * </pre>
       *
       * <code>int32 basePointType = 4;</code>
       */
      public int getBasePointType() {
        return basePointType_;
      }
      /**
       * <pre>
       ** 底分类型:1金豆，2钻石。 
       * </pre>
       *
       * <code>int32 basePointType = 4;</code>
       */
      public Builder setBasePointType(int value) {
        
        basePointType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 底分类型:1金豆，2钻石。 
       * </pre>
       *
       * <code>int32 basePointType = 4;</code>
       */
      public Builder clearBasePointType() {
        
        basePointType_ = 0;
        onChanged();
        return this;
      }

      private int basePoint_ ;
      /**
       * <pre>
       ** 底分 
       * </pre>
       *
       * <code>int32 basePoint = 5;</code>
       */
      public int getBasePoint() {
        return basePoint_;
      }
      /**
       * <pre>
       ** 底分 
       * </pre>
       *
       * <code>int32 basePoint = 5;</code>
       */
      public Builder setBasePoint(int value) {
        
        basePoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 底分 
       * </pre>
       *
       * <code>int32 basePoint = 5;</code>
       */
      public Builder clearBasePoint() {
        
        basePoint_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_EnterRoom)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_EnterRoom)
    private static final S_EnterRoom DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_EnterRoom();
    }

    public static S_EnterRoom getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_EnterRoom>
        PARSER = new com.google.protobuf.AbstractParser<S_EnterRoom>() {
      @Override
      public S_EnterRoom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_EnterRoom(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_EnterRoom> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_EnterRoom> getParserForType() {
      return PARSER;
    }

    @Override
    public S_EnterRoom getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_DoCatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_DoCatch)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 返回叫分ACK 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_DoCatch}
   */
  public  static final class S_DoCatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_DoCatch)
      S_DoCatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_DoCatch.newBuilder() to construct.
    private S_DoCatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_DoCatch() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_DoCatch();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_DoCatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_DoCatch_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_DoCatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_DoCatch.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_DoCatch)) {
        return super.equals(obj);
      }
      S_DoCatch other = (S_DoCatch) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_DoCatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_DoCatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_DoCatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_DoCatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_DoCatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_DoCatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_DoCatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_DoCatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_DoCatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_DoCatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_DoCatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_DoCatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_DoCatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回叫分ACK 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_DoCatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_DoCatch)
        S_DoCatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_DoCatch_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_DoCatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_DoCatch.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_DoCatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_DoCatch_descriptor;
      }

      @Override
      public S_DoCatch getDefaultInstanceForType() {
        return S_DoCatch.getDefaultInstance();
      }

      @Override
      public S_DoCatch build() {
        S_DoCatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_DoCatch buildPartial() {
        S_DoCatch result = new S_DoCatch(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_DoCatch) {
          return mergeFrom((S_DoCatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_DoCatch other) {
        if (other == S_DoCatch.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_DoCatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_DoCatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_DoCatch)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_DoCatch)
    private static final S_DoCatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_DoCatch();
    }

    public static S_DoCatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_DoCatch>
        PARSER = new com.google.protobuf.AbstractParser<S_DoCatch>() {
      @Override
      public S_DoCatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_DoCatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_DoCatch> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_DoCatch> getParserForType() {
      return PARSER;
    }

    @Override
    public S_DoCatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_PlayCardsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_PlayCards)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 返回出牌ACK 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_PlayCards}
   */
  public  static final class S_PlayCards extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_PlayCards)
      S_PlayCardsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_PlayCards.newBuilder() to construct.
    private S_PlayCards(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_PlayCards() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_PlayCards();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_PlayCards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_PlayCards_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_PlayCards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_PlayCards.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_PlayCards)) {
        return super.equals(obj);
      }
      S_PlayCards other = (S_PlayCards) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_PlayCards parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_PlayCards parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_PlayCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_PlayCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_PlayCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_PlayCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_PlayCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_PlayCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_PlayCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_PlayCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_PlayCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_PlayCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_PlayCards prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回出牌ACK 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_PlayCards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_PlayCards)
        S_PlayCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_PlayCards_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_PlayCards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_PlayCards.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_PlayCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_PlayCards_descriptor;
      }

      @Override
      public S_PlayCards getDefaultInstanceForType() {
        return S_PlayCards.getDefaultInstance();
      }

      @Override
      public S_PlayCards build() {
        S_PlayCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_PlayCards buildPartial() {
        S_PlayCards result = new S_PlayCards(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_PlayCards) {
          return mergeFrom((S_PlayCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_PlayCards other) {
        if (other == S_PlayCards.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_PlayCards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_PlayCards) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_PlayCards)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_PlayCards)
    private static final S_PlayCards DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_PlayCards();
    }

    public static S_PlayCards getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_PlayCards>
        PARSER = new com.google.protobuf.AbstractParser<S_PlayCards>() {
      @Override
      public S_PlayCards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_PlayCards(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_PlayCards> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_PlayCards> getParserForType() {
      return PARSER;
    }

    @Override
    public S_PlayCards getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_LeaveRoomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_LeaveRoom)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 返回离开房间ACK 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_LeaveRoom}
   */
  public  static final class S_LeaveRoom extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_LeaveRoom)
      S_LeaveRoomOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_LeaveRoom.newBuilder() to construct.
    private S_LeaveRoom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_LeaveRoom() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_LeaveRoom();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_LeaveRoom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_LeaveRoom_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_LeaveRoom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_LeaveRoom.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_LeaveRoom)) {
        return super.equals(obj);
      }
      S_LeaveRoom other = (S_LeaveRoom) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_LeaveRoom parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_LeaveRoom parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_LeaveRoom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_LeaveRoom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_LeaveRoom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_LeaveRoom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_LeaveRoom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_LeaveRoom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_LeaveRoom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_LeaveRoom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_LeaveRoom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_LeaveRoom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_LeaveRoom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回离开房间ACK 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_LeaveRoom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_LeaveRoom)
        S_LeaveRoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_LeaveRoom_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_LeaveRoom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_LeaveRoom.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_LeaveRoom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_LeaveRoom_descriptor;
      }

      @Override
      public S_LeaveRoom getDefaultInstanceForType() {
        return S_LeaveRoom.getDefaultInstance();
      }

      @Override
      public S_LeaveRoom build() {
        S_LeaveRoom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_LeaveRoom buildPartial() {
        S_LeaveRoom result = new S_LeaveRoom(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_LeaveRoom) {
          return mergeFrom((S_LeaveRoom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_LeaveRoom other) {
        if (other == S_LeaveRoom.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_LeaveRoom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_LeaveRoom) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_LeaveRoom)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_LeaveRoom)
    private static final S_LeaveRoom DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_LeaveRoom();
    }

    public static S_LeaveRoom getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_LeaveRoom>
        PARSER = new com.google.protobuf.AbstractParser<S_LeaveRoom>() {
      @Override
      public S_LeaveRoom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_LeaveRoom(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_LeaveRoom> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_LeaveRoom> getParserForType() {
      return PARSER;
    }

    @Override
    public S_LeaveRoom getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_RecoverGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_RecoverGame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 当前操作玩家座位号 
     * </pre>
     *
     * <code>int32 currentPlayerSeatId = 1;</code>
     */
    int getCurrentPlayerSeatId();

    /**
     * <pre>
     ** 地主座位号 
     * </pre>
     *
     * <code>int32 dizhuSeatId = 2;</code>
     */
    int getDizhuSeatId();

    /**
     * <pre>
     ** 倍数，如果还没叫地主，则为1 
     * </pre>
     *
     * <code>int32 ratio = 3;</code>
     */
    int getRatio();

    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    java.util.List<Integer> getDizhuCardsList();
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    int getDizhuCardsCount();
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    int getDizhuCards(int index);

    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 5;</code>
     */
    java.util.List<Integer> getHandsCardsList();
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 5;</code>
     */
    int getHandsCardsCount();
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 5;</code>
     */
    int getHandsCards(int index);

    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 6;</code>
     */
    String getSystemTime();
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 6;</code>
     */
    com.google.protobuf.ByteString
        getSystemTimeBytes();

    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 7;</code>
     */
    String getExpireTime();
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 7;</code>
     */
    com.google.protobuf.ByteString
        getExpireTimeBytes();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 8;</code>
     */
    int getIndex();

    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    java.util.List<LandlordBase.RecoverPlayerInfo>
        getPlayerInfoList();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    LandlordBase.RecoverPlayerInfo getPlayerInfo(int index);
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    int getPlayerInfoCount();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    java.util.List<? extends LandlordBase.RecoverPlayerInfoOrBuilder>
        getPlayerInfoOrBuilderList();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    LandlordBase.RecoverPlayerInfoOrBuilder getPlayerInfoOrBuilder(
        int index);

    /**
     * <pre>
     ** 当前游戏阶段，叫地主阶段，打牌阶段 
     * </pre>
     *
     * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
     */
    int getGameStateValue();
    /**
     * <pre>
     ** 当前游戏阶段，叫地主阶段，打牌阶段 
     * </pre>
     *
     * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
     */
    LandlordBase.GameStateEnum getGameState();

    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 11;</code>
     */
    java.util.List<Integer> getBigCardsList();
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 11;</code>
     */
    int getBigCardsCount();
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 11;</code>
     */
    int getBigCards(int index);

    /**
     * <pre>
     ** 叫地主最大分值 
     * </pre>
     *
     * <code>int32 bigScore = 12;</code>
     */
    int getBigScore();

    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 13;</code>
     */
    java.util.List<Integer> getHistoryCardsList();
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 13;</code>
     */
    int getHistoryCardsCount();
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 13;</code>
     */
    int getHistoryCards(int index);
  }
  /**
   * <pre>
   **
   * Server 返回玩家恢复游戏请求
   * 断线重连部分，客户端保存的index和最新推送index不匹配
   * 或者加入房间index不为1时读取
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_RecoverGame}
   */
  public  static final class S_RecoverGame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_RecoverGame)
      S_RecoverGameOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_RecoverGame.newBuilder() to construct.
    private S_RecoverGame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_RecoverGame() {
      dizhuCards_ = emptyIntList();
      handsCards_ = emptyIntList();
      systemTime_ = "";
      expireTime_ = "";
      playerInfo_ = java.util.Collections.emptyList();
      gameState_ = 0;
      bigCards_ = emptyIntList();
      historyCards_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_RecoverGame();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_RecoverGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              currentPlayerSeatId_ = input.readInt32();
              break;
            }
            case 16: {

              dizhuSeatId_ = input.readInt32();
              break;
            }
            case 24: {

              ratio_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dizhuCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dizhuCards_.addInt(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dizhuCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dizhuCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                handsCards_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              handsCards_.addInt(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                handsCards_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                handsCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              systemTime_ = s;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              expireTime_ = s;
              break;
            }
            case 64: {

              index_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                playerInfo_ = new java.util.ArrayList<LandlordBase.RecoverPlayerInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              playerInfo_.add(
                  input.readMessage(LandlordBase.RecoverPlayerInfo.parser(), extensionRegistry));
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              gameState_ = rawValue;
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                bigCards_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              bigCards_.addInt(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                bigCards_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                bigCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {

              bigScore_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                historyCards_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              historyCards_.addInt(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                historyCards_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                historyCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dizhuCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          handsCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          playerInfo_ = java.util.Collections.unmodifiableList(playerInfo_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          bigCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          historyCards_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_RecoverGame_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_RecoverGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_RecoverGame.class, Builder.class);
    }

    public static final int CURRENTPLAYERSEATID_FIELD_NUMBER = 1;
    private int currentPlayerSeatId_;
    /**
     * <pre>
     ** 当前操作玩家座位号 
     * </pre>
     *
     * <code>int32 currentPlayerSeatId = 1;</code>
     */
    public int getCurrentPlayerSeatId() {
      return currentPlayerSeatId_;
    }

    public static final int DIZHUSEATID_FIELD_NUMBER = 2;
    private int dizhuSeatId_;
    /**
     * <pre>
     ** 地主座位号 
     * </pre>
     *
     * <code>int32 dizhuSeatId = 2;</code>
     */
    public int getDizhuSeatId() {
      return dizhuSeatId_;
    }

    public static final int RATIO_FIELD_NUMBER = 3;
    private int ratio_;
    /**
     * <pre>
     ** 倍数，如果还没叫地主，则为1 
     * </pre>
     *
     * <code>int32 ratio = 3;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    public static final int DIZHUCARDS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList dizhuCards_;
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    public java.util.List<Integer>
        getDizhuCardsList() {
      return dizhuCards_;
    }
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    public int getDizhuCardsCount() {
      return dizhuCards_.size();
    }
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 4;</code>
     */
    public int getDizhuCards(int index) {
      return dizhuCards_.getInt(index);
    }
    private int dizhuCardsMemoizedSerializedSize = -1;

    public static final int HANDSCARDS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList handsCards_;
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 5;</code>
     */
    public java.util.List<Integer>
        getHandsCardsList() {
      return handsCards_;
    }
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 5;</code>
     */
    public int getHandsCardsCount() {
      return handsCards_.size();
    }
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 5;</code>
     */
    public int getHandsCards(int index) {
      return handsCards_.getInt(index);
    }
    private int handsCardsMemoizedSerializedSize = -1;

    public static final int SYSTEMTIME_FIELD_NUMBER = 6;
    private volatile Object systemTime_;
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 6;</code>
     */
    public String getSystemTime() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        systemTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSystemTimeBytes() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        systemTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIRETIME_FIELD_NUMBER = 7;
    private volatile Object expireTime_;
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 7;</code>
     */
    public String getExpireTime() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        expireTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 7;</code>
     */
    public com.google.protobuf.ByteString
        getExpireTimeBytes() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        expireTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 8;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 8;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int PLAYERINFO_FIELD_NUMBER = 9;
    private java.util.List<LandlordBase.RecoverPlayerInfo> playerInfo_;
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    public java.util.List<LandlordBase.RecoverPlayerInfo> getPlayerInfoList() {
      return playerInfo_;
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    public java.util.List<? extends LandlordBase.RecoverPlayerInfoOrBuilder>
        getPlayerInfoOrBuilderList() {
      return playerInfo_;
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    public int getPlayerInfoCount() {
      return playerInfo_.size();
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    public LandlordBase.RecoverPlayerInfo getPlayerInfo(int index) {
      return playerInfo_.get(index);
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
     */
    public LandlordBase.RecoverPlayerInfoOrBuilder getPlayerInfoOrBuilder(
        int index) {
      return playerInfo_.get(index);
    }

    public static final int GAMESTATE_FIELD_NUMBER = 10;
    private int gameState_;
    /**
     * <pre>
     ** 当前游戏阶段，叫地主阶段，打牌阶段 
     * </pre>
     *
     * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
     */
    public int getGameStateValue() {
      return gameState_;
    }
    /**
     * <pre>
     ** 当前游戏阶段，叫地主阶段，打牌阶段 
     * </pre>
     *
     * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
     */
    public LandlordBase.GameStateEnum getGameState() {
      @SuppressWarnings("deprecation")
      LandlordBase.GameStateEnum result = LandlordBase.GameStateEnum.valueOf(gameState_);
      return result == null ? LandlordBase.GameStateEnum.UNRECOGNIZED : result;
    }

    public static final int BIGCARDS_FIELD_NUMBER = 11;
    private com.google.protobuf.Internal.IntList bigCards_;
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 11;</code>
     */
    public java.util.List<Integer>
        getBigCardsList() {
      return bigCards_;
    }
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 11;</code>
     */
    public int getBigCardsCount() {
      return bigCards_.size();
    }
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 11;</code>
     */
    public int getBigCards(int index) {
      return bigCards_.getInt(index);
    }
    private int bigCardsMemoizedSerializedSize = -1;

    public static final int BIGSCORE_FIELD_NUMBER = 12;
    private int bigScore_;
    /**
     * <pre>
     ** 叫地主最大分值 
     * </pre>
     *
     * <code>int32 bigScore = 12;</code>
     */
    public int getBigScore() {
      return bigScore_;
    }

    public static final int HISTORYCARDS_FIELD_NUMBER = 13;
    private com.google.protobuf.Internal.IntList historyCards_;
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 13;</code>
     */
    public java.util.List<Integer>
        getHistoryCardsList() {
      return historyCards_;
    }
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 13;</code>
     */
    public int getHistoryCardsCount() {
      return historyCards_.size();
    }
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 13;</code>
     */
    public int getHistoryCards(int index) {
      return historyCards_.getInt(index);
    }
    private int historyCardsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (currentPlayerSeatId_ != 0) {
        output.writeInt32(1, currentPlayerSeatId_);
      }
      if (dizhuSeatId_ != 0) {
        output.writeInt32(2, dizhuSeatId_);
      }
      if (ratio_ != 0) {
        output.writeInt32(3, ratio_);
      }
      if (getDizhuCardsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(dizhuCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < dizhuCards_.size(); i++) {
        output.writeInt32NoTag(dizhuCards_.getInt(i));
      }
      if (getHandsCardsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(handsCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < handsCards_.size(); i++) {
        output.writeInt32NoTag(handsCards_.getInt(i));
      }
      if (!getSystemTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, expireTime_);
      }
      if (index_ != 0) {
        output.writeInt32(8, index_);
      }
      for (int i = 0; i < playerInfo_.size(); i++) {
        output.writeMessage(9, playerInfo_.get(i));
      }
      if (gameState_ != LandlordBase.GameStateEnum.Enter.getNumber()) {
        output.writeEnum(10, gameState_);
      }
      if (getBigCardsList().size() > 0) {
        output.writeUInt32NoTag(90);
        output.writeUInt32NoTag(bigCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < bigCards_.size(); i++) {
        output.writeInt32NoTag(bigCards_.getInt(i));
      }
      if (bigScore_ != 0) {
        output.writeInt32(12, bigScore_);
      }
      if (getHistoryCardsList().size() > 0) {
        output.writeUInt32NoTag(106);
        output.writeUInt32NoTag(historyCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < historyCards_.size(); i++) {
        output.writeInt32NoTag(historyCards_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (currentPlayerSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, currentPlayerSeatId_);
      }
      if (dizhuSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dizhuSeatId_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ratio_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dizhuCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dizhuCards_.getInt(i));
        }
        size += dataSize;
        if (!getDizhuCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dizhuCardsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handsCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handsCards_.getInt(i));
        }
        size += dataSize;
        if (!getHandsCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        handsCardsMemoizedSerializedSize = dataSize;
      }
      if (!getSystemTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, expireTime_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, index_);
      }
      for (int i = 0; i < playerInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, playerInfo_.get(i));
      }
      if (gameState_ != LandlordBase.GameStateEnum.Enter.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, gameState_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bigCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bigCards_.getInt(i));
        }
        size += dataSize;
        if (!getBigCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        bigCardsMemoizedSerializedSize = dataSize;
      }
      if (bigScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, bigScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < historyCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(historyCards_.getInt(i));
        }
        size += dataSize;
        if (!getHistoryCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        historyCardsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_RecoverGame)) {
        return super.equals(obj);
      }
      S_RecoverGame other = (S_RecoverGame) obj;

      if (getCurrentPlayerSeatId()
          != other.getCurrentPlayerSeatId()) return false;
      if (getDizhuSeatId()
          != other.getDizhuSeatId()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (!getDizhuCardsList()
          .equals(other.getDizhuCardsList())) return false;
      if (!getHandsCardsList()
          .equals(other.getHandsCardsList())) return false;
      if (!getSystemTime()
          .equals(other.getSystemTime())) return false;
      if (!getExpireTime()
          .equals(other.getExpireTime())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!getPlayerInfoList()
          .equals(other.getPlayerInfoList())) return false;
      if (gameState_ != other.gameState_) return false;
      if (!getBigCardsList()
          .equals(other.getBigCardsList())) return false;
      if (getBigScore()
          != other.getBigScore()) return false;
      if (!getHistoryCardsList()
          .equals(other.getHistoryCardsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURRENTPLAYERSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentPlayerSeatId();
      hash = (37 * hash) + DIZHUSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getDizhuSeatId();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      if (getDizhuCardsCount() > 0) {
        hash = (37 * hash) + DIZHUCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getDizhuCardsList().hashCode();
      }
      if (getHandsCardsCount() > 0) {
        hash = (37 * hash) + HANDSCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHandsCardsList().hashCode();
      }
      hash = (37 * hash) + SYSTEMTIME_FIELD_NUMBER;
      hash = (53 * hash) + getSystemTime().hashCode();
      hash = (37 * hash) + EXPIRETIME_FIELD_NUMBER;
      hash = (53 * hash) + getExpireTime().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      if (getPlayerInfoCount() > 0) {
        hash = (37 * hash) + PLAYERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerInfoList().hashCode();
      }
      hash = (37 * hash) + GAMESTATE_FIELD_NUMBER;
      hash = (53 * hash) + gameState_;
      if (getBigCardsCount() > 0) {
        hash = (37 * hash) + BIGCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getBigCardsList().hashCode();
      }
      hash = (37 * hash) + BIGSCORE_FIELD_NUMBER;
      hash = (53 * hash) + getBigScore();
      if (getHistoryCardsCount() > 0) {
        hash = (37 * hash) + HISTORYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHistoryCardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_RecoverGame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_RecoverGame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_RecoverGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_RecoverGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_RecoverGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_RecoverGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_RecoverGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_RecoverGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_RecoverGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_RecoverGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_RecoverGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_RecoverGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_RecoverGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Server 返回玩家恢复游戏请求
     * 断线重连部分，客户端保存的index和最新推送index不匹配
     * 或者加入房间index不为1时读取
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_RecoverGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_RecoverGame)
        S_RecoverGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_RecoverGame_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_RecoverGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_RecoverGame.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_RecoverGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayerInfoFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        currentPlayerSeatId_ = 0;

        dizhuSeatId_ = 0;

        ratio_ = 0;

        dizhuCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        handsCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        systemTime_ = "";

        expireTime_ = "";

        index_ = 0;

        if (playerInfoBuilder_ == null) {
          playerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playerInfoBuilder_.clear();
        }
        gameState_ = 0;

        bigCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        bigScore_ = 0;

        historyCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_RecoverGame_descriptor;
      }

      @Override
      public S_RecoverGame getDefaultInstanceForType() {
        return S_RecoverGame.getDefaultInstance();
      }

      @Override
      public S_RecoverGame build() {
        S_RecoverGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_RecoverGame buildPartial() {
        S_RecoverGame result = new S_RecoverGame(this);
        int from_bitField0_ = bitField0_;
        result.currentPlayerSeatId_ = currentPlayerSeatId_;
        result.dizhuSeatId_ = dizhuSeatId_;
        result.ratio_ = ratio_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dizhuCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dizhuCards_ = dizhuCards_;
        if (((bitField0_ & 0x00000002) != 0)) {
          handsCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.handsCards_ = handsCards_;
        result.systemTime_ = systemTime_;
        result.expireTime_ = expireTime_;
        result.index_ = index_;
        if (playerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            playerInfo_ = java.util.Collections.unmodifiableList(playerInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.playerInfo_ = playerInfo_;
        } else {
          result.playerInfo_ = playerInfoBuilder_.build();
        }
        result.gameState_ = gameState_;
        if (((bitField0_ & 0x00000008) != 0)) {
          bigCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.bigCards_ = bigCards_;
        result.bigScore_ = bigScore_;
        if (((bitField0_ & 0x00000010) != 0)) {
          historyCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.historyCards_ = historyCards_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_RecoverGame) {
          return mergeFrom((S_RecoverGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_RecoverGame other) {
        if (other == S_RecoverGame.getDefaultInstance()) return this;
        if (other.getCurrentPlayerSeatId() != 0) {
          setCurrentPlayerSeatId(other.getCurrentPlayerSeatId());
        }
        if (other.getDizhuSeatId() != 0) {
          setDizhuSeatId(other.getDizhuSeatId());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        if (!other.dizhuCards_.isEmpty()) {
          if (dizhuCards_.isEmpty()) {
            dizhuCards_ = other.dizhuCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDizhuCardsIsMutable();
            dizhuCards_.addAll(other.dizhuCards_);
          }
          onChanged();
        }
        if (!other.handsCards_.isEmpty()) {
          if (handsCards_.isEmpty()) {
            handsCards_ = other.handsCards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHandsCardsIsMutable();
            handsCards_.addAll(other.handsCards_);
          }
          onChanged();
        }
        if (!other.getSystemTime().isEmpty()) {
          systemTime_ = other.systemTime_;
          onChanged();
        }
        if (!other.getExpireTime().isEmpty()) {
          expireTime_ = other.expireTime_;
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (playerInfoBuilder_ == null) {
          if (!other.playerInfo_.isEmpty()) {
            if (playerInfo_.isEmpty()) {
              playerInfo_ = other.playerInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayerInfoIsMutable();
              playerInfo_.addAll(other.playerInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.playerInfo_.isEmpty()) {
            if (playerInfoBuilder_.isEmpty()) {
              playerInfoBuilder_.dispose();
              playerInfoBuilder_ = null;
              playerInfo_ = other.playerInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playerInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerInfoFieldBuilder() : null;
            } else {
              playerInfoBuilder_.addAllMessages(other.playerInfo_);
            }
          }
        }
        if (other.gameState_ != 0) {
          setGameStateValue(other.getGameStateValue());
        }
        if (!other.bigCards_.isEmpty()) {
          if (bigCards_.isEmpty()) {
            bigCards_ = other.bigCards_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBigCardsIsMutable();
            bigCards_.addAll(other.bigCards_);
          }
          onChanged();
        }
        if (other.getBigScore() != 0) {
          setBigScore(other.getBigScore());
        }
        if (!other.historyCards_.isEmpty()) {
          if (historyCards_.isEmpty()) {
            historyCards_ = other.historyCards_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHistoryCardsIsMutable();
            historyCards_.addAll(other.historyCards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_RecoverGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_RecoverGame) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int currentPlayerSeatId_ ;
      /**
       * <pre>
       ** 当前操作玩家座位号 
       * </pre>
       *
       * <code>int32 currentPlayerSeatId = 1;</code>
       */
      public int getCurrentPlayerSeatId() {
        return currentPlayerSeatId_;
      }
      /**
       * <pre>
       ** 当前操作玩家座位号 
       * </pre>
       *
       * <code>int32 currentPlayerSeatId = 1;</code>
       */
      public Builder setCurrentPlayerSeatId(int value) {
        
        currentPlayerSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前操作玩家座位号 
       * </pre>
       *
       * <code>int32 currentPlayerSeatId = 1;</code>
       */
      public Builder clearCurrentPlayerSeatId() {
        
        currentPlayerSeatId_ = 0;
        onChanged();
        return this;
      }

      private int dizhuSeatId_ ;
      /**
       * <pre>
       ** 地主座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 2;</code>
       */
      public int getDizhuSeatId() {
        return dizhuSeatId_;
      }
      /**
       * <pre>
       ** 地主座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 2;</code>
       */
      public Builder setDizhuSeatId(int value) {
        
        dizhuSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 地主座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 2;</code>
       */
      public Builder clearDizhuSeatId() {
        
        dizhuSeatId_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 倍数，如果还没叫地主，则为1 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 倍数，如果还没叫地主，则为1 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 倍数，如果还没叫地主，则为1 
       * </pre>
       *
       * <code>int32 ratio = 3;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dizhuCards_ = emptyIntList();
      private void ensureDizhuCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dizhuCards_ = mutableCopy(dizhuCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public java.util.List<Integer>
          getDizhuCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dizhuCards_) : dizhuCards_;
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public int getDizhuCardsCount() {
        return dizhuCards_.size();
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public int getDizhuCards(int index) {
        return dizhuCards_.getInt(index);
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public Builder setDizhuCards(
          int index, int value) {
        ensureDizhuCardsIsMutable();
        dizhuCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public Builder addDizhuCards(int value) {
        ensureDizhuCardsIsMutable();
        dizhuCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public Builder addAllDizhuCards(
          Iterable<? extends Integer> values) {
        ensureDizhuCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dizhuCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 4;</code>
       */
      public Builder clearDizhuCards() {
        dizhuCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList handsCards_ = emptyIntList();
      private void ensureHandsCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          handsCards_ = mutableCopy(handsCards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 5;</code>
       */
      public java.util.List<Integer>
          getHandsCardsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(handsCards_) : handsCards_;
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 5;</code>
       */
      public int getHandsCardsCount() {
        return handsCards_.size();
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 5;</code>
       */
      public int getHandsCards(int index) {
        return handsCards_.getInt(index);
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 5;</code>
       */
      public Builder setHandsCards(
          int index, int value) {
        ensureHandsCardsIsMutable();
        handsCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 5;</code>
       */
      public Builder addHandsCards(int value) {
        ensureHandsCardsIsMutable();
        handsCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 5;</code>
       */
      public Builder addAllHandsCards(
          Iterable<? extends Integer> values) {
        ensureHandsCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, handsCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 5;</code>
       */
      public Builder clearHandsCards() {
        handsCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private Object systemTime_ = "";
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 6;</code>
       */
      public String getSystemTime() {
        Object ref = systemTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          systemTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSystemTimeBytes() {
        Object ref = systemTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          systemTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 6;</code>
       */
      public Builder setSystemTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        systemTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 6;</code>
       */
      public Builder clearSystemTime() {
        
        systemTime_ = getDefaultInstance().getSystemTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 6;</code>
       */
      public Builder setSystemTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        systemTime_ = value;
        onChanged();
        return this;
      }

      private Object expireTime_ = "";
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 7;</code>
       */
      public String getExpireTime() {
        Object ref = expireTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          expireTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 7;</code>
       */
      public com.google.protobuf.ByteString
          getExpireTimeBytes() {
        Object ref = expireTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          expireTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 7;</code>
       */
      public Builder setExpireTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        expireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 7;</code>
       */
      public Builder clearExpireTime() {
        
        expireTime_ = getDefaultInstance().getExpireTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 7;</code>
       */
      public Builder setExpireTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        expireTime_ = value;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 8;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 8;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 8;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<LandlordBase.RecoverPlayerInfo> playerInfo_ =
        java.util.Collections.emptyList();
      private void ensurePlayerInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          playerInfo_ = new java.util.ArrayList<LandlordBase.RecoverPlayerInfo>(playerInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.RecoverPlayerInfo, LandlordBase.RecoverPlayerInfo.Builder, LandlordBase.RecoverPlayerInfoOrBuilder> playerInfoBuilder_;

      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public java.util.List<LandlordBase.RecoverPlayerInfo> getPlayerInfoList() {
        if (playerInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerInfo_);
        } else {
          return playerInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public int getPlayerInfoCount() {
        if (playerInfoBuilder_ == null) {
          return playerInfo_.size();
        } else {
          return playerInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public LandlordBase.RecoverPlayerInfo getPlayerInfo(int index) {
        if (playerInfoBuilder_ == null) {
          return playerInfo_.get(index);
        } else {
          return playerInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder setPlayerInfo(
          int index, LandlordBase.RecoverPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfoIsMutable();
          playerInfo_.set(index, value);
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder setPlayerInfo(
          int index, LandlordBase.RecoverPlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          playerInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder addPlayerInfo(LandlordBase.RecoverPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfoIsMutable();
          playerInfo_.add(value);
          onChanged();
        } else {
          playerInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder addPlayerInfo(
          int index, LandlordBase.RecoverPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfoIsMutable();
          playerInfo_.add(index, value);
          onChanged();
        } else {
          playerInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder addPlayerInfo(
          LandlordBase.RecoverPlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          playerInfo_.add(builderForValue.build());
          onChanged();
        } else {
          playerInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder addPlayerInfo(
          int index, LandlordBase.RecoverPlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          playerInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder addAllPlayerInfo(
          Iterable<? extends LandlordBase.RecoverPlayerInfo> values) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerInfo_);
          onChanged();
        } else {
          playerInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder clearPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playerInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public Builder removePlayerInfo(int index) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          playerInfo_.remove(index);
          onChanged();
        } else {
          playerInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public LandlordBase.RecoverPlayerInfo.Builder getPlayerInfoBuilder(
          int index) {
        return getPlayerInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public LandlordBase.RecoverPlayerInfoOrBuilder getPlayerInfoOrBuilder(
          int index) {
        if (playerInfoBuilder_ == null) {
          return playerInfo_.get(index);  } else {
          return playerInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public java.util.List<? extends LandlordBase.RecoverPlayerInfoOrBuilder>
           getPlayerInfoOrBuilderList() {
        if (playerInfoBuilder_ != null) {
          return playerInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerInfo_);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public LandlordBase.RecoverPlayerInfo.Builder addPlayerInfoBuilder() {
        return getPlayerInfoFieldBuilder().addBuilder(
            LandlordBase.RecoverPlayerInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public LandlordBase.RecoverPlayerInfo.Builder addPlayerInfoBuilder(
          int index) {
        return getPlayerInfoFieldBuilder().addBuilder(
            index, LandlordBase.RecoverPlayerInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 9;</code>
       */
      public java.util.List<LandlordBase.RecoverPlayerInfo.Builder>
           getPlayerInfoBuilderList() {
        return getPlayerInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.RecoverPlayerInfo, LandlordBase.RecoverPlayerInfo.Builder, LandlordBase.RecoverPlayerInfoOrBuilder>
          getPlayerInfoFieldBuilder() {
        if (playerInfoBuilder_ == null) {
          playerInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.RecoverPlayerInfo, LandlordBase.RecoverPlayerInfo.Builder, LandlordBase.RecoverPlayerInfoOrBuilder>(
                  playerInfo_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          playerInfo_ = null;
        }
        return playerInfoBuilder_;
      }

      private int gameState_ = 0;
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
       */
      public int getGameStateValue() {
        return gameState_;
      }
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
       */
      public Builder setGameStateValue(int value) {
        gameState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
       */
      public LandlordBase.GameStateEnum getGameState() {
        @SuppressWarnings("deprecation")
        LandlordBase.GameStateEnum result = LandlordBase.GameStateEnum.valueOf(gameState_);
        return result == null ? LandlordBase.GameStateEnum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
       */
      public Builder setGameState(LandlordBase.GameStateEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        gameState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 10;</code>
       */
      public Builder clearGameState() {
        
        gameState_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList bigCards_ = emptyIntList();
      private void ensureBigCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          bigCards_ = mutableCopy(bigCards_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 11;</code>
       */
      public java.util.List<Integer>
          getBigCardsList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(bigCards_) : bigCards_;
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 11;</code>
       */
      public int getBigCardsCount() {
        return bigCards_.size();
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 11;</code>
       */
      public int getBigCards(int index) {
        return bigCards_.getInt(index);
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 11;</code>
       */
      public Builder setBigCards(
          int index, int value) {
        ensureBigCardsIsMutable();
        bigCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 11;</code>
       */
      public Builder addBigCards(int value) {
        ensureBigCardsIsMutable();
        bigCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 11;</code>
       */
      public Builder addAllBigCards(
          Iterable<? extends Integer> values) {
        ensureBigCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bigCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 11;</code>
       */
      public Builder clearBigCards() {
        bigCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private int bigScore_ ;
      /**
       * <pre>
       ** 叫地主最大分值 
       * </pre>
       *
       * <code>int32 bigScore = 12;</code>
       */
      public int getBigScore() {
        return bigScore_;
      }
      /**
       * <pre>
       ** 叫地主最大分值 
       * </pre>
       *
       * <code>int32 bigScore = 12;</code>
       */
      public Builder setBigScore(int value) {
        
        bigScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 叫地主最大分值 
       * </pre>
       *
       * <code>int32 bigScore = 12;</code>
       */
      public Builder clearBigScore() {
        
        bigScore_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList historyCards_ = emptyIntList();
      private void ensureHistoryCardsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          historyCards_ = mutableCopy(historyCards_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 13;</code>
       */
      public java.util.List<Integer>
          getHistoryCardsList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(historyCards_) : historyCards_;
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 13;</code>
       */
      public int getHistoryCardsCount() {
        return historyCards_.size();
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 13;</code>
       */
      public int getHistoryCards(int index) {
        return historyCards_.getInt(index);
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 13;</code>
       */
      public Builder setHistoryCards(
          int index, int value) {
        ensureHistoryCardsIsMutable();
        historyCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 13;</code>
       */
      public Builder addHistoryCards(int value) {
        ensureHistoryCardsIsMutable();
        historyCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 13;</code>
       */
      public Builder addAllHistoryCards(
          Iterable<? extends Integer> values) {
        ensureHistoryCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, historyCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 13;</code>
       */
      public Builder clearHistoryCards() {
        historyCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_RecoverGame)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_RecoverGame)
    private static final S_RecoverGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_RecoverGame();
    }

    public static S_RecoverGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_RecoverGame>
        PARSER = new com.google.protobuf.AbstractParser<S_RecoverGame>() {
      @Override
      public S_RecoverGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_RecoverGame(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_RecoverGame> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_RecoverGame> getParserForType() {
      return PARSER;
    }

    @Override
    public S_RecoverGame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_T_DoCatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_T_DoCatch)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 二人场-返回叫分ACK 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_T_DoCatch}
   */
  public  static final class S_T_DoCatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_T_DoCatch)
      S_T_DoCatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_T_DoCatch.newBuilder() to construct.
    private S_T_DoCatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_T_DoCatch() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_T_DoCatch();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_T_DoCatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_T_DoCatch_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_T_DoCatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_T_DoCatch.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_T_DoCatch)) {
        return super.equals(obj);
      }
      S_T_DoCatch other = (S_T_DoCatch) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_T_DoCatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_DoCatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_DoCatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_DoCatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_DoCatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_DoCatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_DoCatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_T_DoCatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_T_DoCatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_T_DoCatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_T_DoCatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_T_DoCatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_T_DoCatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 二人场-返回叫分ACK 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_T_DoCatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_T_DoCatch)
        S_T_DoCatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_T_DoCatch_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_T_DoCatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_T_DoCatch.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_T_DoCatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_T_DoCatch_descriptor;
      }

      @Override
      public S_T_DoCatch getDefaultInstanceForType() {
        return S_T_DoCatch.getDefaultInstance();
      }

      @Override
      public S_T_DoCatch build() {
        S_T_DoCatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_T_DoCatch buildPartial() {
        S_T_DoCatch result = new S_T_DoCatch(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_T_DoCatch) {
          return mergeFrom((S_T_DoCatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_T_DoCatch other) {
        if (other == S_T_DoCatch.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_T_DoCatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_T_DoCatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_T_DoCatch)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_T_DoCatch)
    private static final S_T_DoCatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_T_DoCatch();
    }

    public static S_T_DoCatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_T_DoCatch>
        PARSER = new com.google.protobuf.AbstractParser<S_T_DoCatch>() {
      @Override
      public S_T_DoCatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_T_DoCatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_T_DoCatch> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_T_DoCatch> getParserForType() {
      return PARSER;
    }

    @Override
    public S_T_DoCatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_T_PlayCardsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_T_PlayCards)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 二人场-返回出牌ACK 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_T_PlayCards}
   */
  public  static final class S_T_PlayCards extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_T_PlayCards)
      S_T_PlayCardsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_T_PlayCards.newBuilder() to construct.
    private S_T_PlayCards(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_T_PlayCards() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_T_PlayCards();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_T_PlayCards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_T_PlayCards_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_T_PlayCards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_T_PlayCards.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_T_PlayCards)) {
        return super.equals(obj);
      }
      S_T_PlayCards other = (S_T_PlayCards) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_T_PlayCards parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_PlayCards parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_PlayCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_PlayCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_PlayCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_PlayCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_PlayCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_T_PlayCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_T_PlayCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_T_PlayCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_T_PlayCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_T_PlayCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_T_PlayCards prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 二人场-返回出牌ACK 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_T_PlayCards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_T_PlayCards)
        S_T_PlayCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_T_PlayCards_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_T_PlayCards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_T_PlayCards.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_T_PlayCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_T_PlayCards_descriptor;
      }

      @Override
      public S_T_PlayCards getDefaultInstanceForType() {
        return S_T_PlayCards.getDefaultInstance();
      }

      @Override
      public S_T_PlayCards build() {
        S_T_PlayCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_T_PlayCards buildPartial() {
        S_T_PlayCards result = new S_T_PlayCards(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_T_PlayCards) {
          return mergeFrom((S_T_PlayCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_T_PlayCards other) {
        if (other == S_T_PlayCards.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_T_PlayCards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_T_PlayCards) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_T_PlayCards)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_T_PlayCards)
    private static final S_T_PlayCards DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_T_PlayCards();
    }

    public static S_T_PlayCards getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_T_PlayCards>
        PARSER = new com.google.protobuf.AbstractParser<S_T_PlayCards>() {
      @Override
      public S_T_PlayCards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_T_PlayCards(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_T_PlayCards> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_T_PlayCards> getParserForType() {
      return PARSER;
    }

    @Override
    public S_T_PlayCards getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_T_LeaveRoomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_T_LeaveRoom)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 二人场-离开房间ACK 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_T_LeaveRoom}
   */
  public  static final class S_T_LeaveRoom extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_T_LeaveRoom)
      S_T_LeaveRoomOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_T_LeaveRoom.newBuilder() to construct.
    private S_T_LeaveRoom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_T_LeaveRoom() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_T_LeaveRoom();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_T_LeaveRoom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_T_LeaveRoom_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_T_LeaveRoom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_T_LeaveRoom.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_T_LeaveRoom)) {
        return super.equals(obj);
      }
      S_T_LeaveRoom other = (S_T_LeaveRoom) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_T_LeaveRoom parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_LeaveRoom parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_LeaveRoom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_LeaveRoom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_LeaveRoom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_LeaveRoom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_LeaveRoom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_T_LeaveRoom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_T_LeaveRoom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_T_LeaveRoom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_T_LeaveRoom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_T_LeaveRoom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_T_LeaveRoom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 二人场-离开房间ACK 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_T_LeaveRoom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_T_LeaveRoom)
        S_T_LeaveRoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_T_LeaveRoom_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_T_LeaveRoom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_T_LeaveRoom.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_T_LeaveRoom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_T_LeaveRoom_descriptor;
      }

      @Override
      public S_T_LeaveRoom getDefaultInstanceForType() {
        return S_T_LeaveRoom.getDefaultInstance();
      }

      @Override
      public S_T_LeaveRoom build() {
        S_T_LeaveRoom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_T_LeaveRoom buildPartial() {
        S_T_LeaveRoom result = new S_T_LeaveRoom(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_T_LeaveRoom) {
          return mergeFrom((S_T_LeaveRoom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_T_LeaveRoom other) {
        if (other == S_T_LeaveRoom.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_T_LeaveRoom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_T_LeaveRoom) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_T_LeaveRoom)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_T_LeaveRoom)
    private static final S_T_LeaveRoom DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_T_LeaveRoom();
    }

    public static S_T_LeaveRoom getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_T_LeaveRoom>
        PARSER = new com.google.protobuf.AbstractParser<S_T_LeaveRoom>() {
      @Override
      public S_T_LeaveRoom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_T_LeaveRoom(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_T_LeaveRoom> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_T_LeaveRoom> getParserForType() {
      return PARSER;
    }

    @Override
    public S_T_LeaveRoom getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_T_RecoverGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_T_RecoverGame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 当前操作玩家座位号 
     * </pre>
     *
     * <code>int32 currentPlayerSeatId = 1;</code>
     */
    int getCurrentPlayerSeatId();

    /**
     * <pre>
     ** 地主座位号 
     * </pre>
     *
     * <code>int32 dizhuSeatId = 2;</code>
     */
    int getDizhuSeatId();

    /**
     * <pre>
     ** 让牌数量 
     * </pre>
     *
     * <code>int32 rang = 3;</code>
     */
    int getRang();

    /**
     * <pre>
     ** 倍数，如果还没叫地主，则为1 
     * </pre>
     *
     * <code>int32 ratio = 4;</code>
     */
    int getRatio();

    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 5;</code>
     */
    java.util.List<Integer> getDizhuCardsList();
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 5;</code>
     */
    int getDizhuCardsCount();
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 5;</code>
     */
    int getDizhuCards(int index);

    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 6;</code>
     */
    java.util.List<Integer> getHandsCardsList();
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 6;</code>
     */
    int getHandsCardsCount();
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 6;</code>
     */
    int getHandsCards(int index);

    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 7;</code>
     */
    String getSystemTime();
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 7;</code>
     */
    com.google.protobuf.ByteString
        getSystemTimeBytes();

    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 8;</code>
     */
    String getExpireTime();
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 8;</code>
     */
    com.google.protobuf.ByteString
        getExpireTimeBytes();

    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 9;</code>
     */
    int getIndex();

    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    java.util.List<LandlordBase.RecoverPlayerInfo>
        getPlayerInfoList();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    LandlordBase.RecoverPlayerInfo getPlayerInfo(int index);
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    int getPlayerInfoCount();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    java.util.List<? extends LandlordBase.RecoverPlayerInfoOrBuilder>
        getPlayerInfoOrBuilderList();
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    LandlordBase.RecoverPlayerInfoOrBuilder getPlayerInfoOrBuilder(
        int index);

    /**
     * <pre>
     ** 当前游戏阶段，叫地主阶段，打牌阶段 
     * </pre>
     *
     * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
     */
    int getGameStateValue();
    /**
     * <pre>
     ** 当前游戏阶段，叫地主阶段，打牌阶段 
     * </pre>
     *
     * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
     */
    LandlordBase.GameStateEnum getGameState();

    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 12;</code>
     */
    java.util.List<Integer> getBigCardsList();
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 12;</code>
     */
    int getBigCardsCount();
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 12;</code>
     */
    int getBigCards(int index);

    /**
     * <pre>
     ** 叫地主最大分值 
     * </pre>
     *
     * <code>int32 bigScore = 13;</code>
     */
    int getBigScore();

    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 14;</code>
     */
    java.util.List<Integer> getHistoryCardsList();
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 14;</code>
     */
    int getHistoryCardsCount();
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 14;</code>
     */
    int getHistoryCards(int index);
  }
  /**
   * <pre>
   **
   * Server 二人场-返回玩家恢复游戏请求
   * 断线重连部分，客户端保存的index和最新推送index不匹配
   * 或者加入房间index不为1时读取
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_T_RecoverGame}
   */
  public  static final class S_T_RecoverGame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_T_RecoverGame)
      S_T_RecoverGameOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_T_RecoverGame.newBuilder() to construct.
    private S_T_RecoverGame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_T_RecoverGame() {
      dizhuCards_ = emptyIntList();
      handsCards_ = emptyIntList();
      systemTime_ = "";
      expireTime_ = "";
      playerInfo_ = java.util.Collections.emptyList();
      gameState_ = 0;
      bigCards_ = emptyIntList();
      historyCards_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_T_RecoverGame();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_T_RecoverGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              currentPlayerSeatId_ = input.readInt32();
              break;
            }
            case 16: {

              dizhuSeatId_ = input.readInt32();
              break;
            }
            case 24: {

              rang_ = input.readInt32();
              break;
            }
            case 32: {

              ratio_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dizhuCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dizhuCards_.addInt(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dizhuCards_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dizhuCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                handsCards_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              handsCards_.addInt(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                handsCards_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                handsCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              systemTime_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              expireTime_ = s;
              break;
            }
            case 72: {

              index_ = input.readInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                playerInfo_ = new java.util.ArrayList<LandlordBase.RecoverPlayerInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              playerInfo_.add(
                  input.readMessage(LandlordBase.RecoverPlayerInfo.parser(), extensionRegistry));
              break;
            }
            case 88: {
              int rawValue = input.readEnum();

              gameState_ = rawValue;
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                bigCards_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              bigCards_.addInt(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                bigCards_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                bigCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {

              bigScore_ = input.readInt32();
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                historyCards_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              historyCards_.addInt(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                historyCards_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                historyCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dizhuCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          handsCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          playerInfo_ = java.util.Collections.unmodifiableList(playerInfo_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          bigCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          historyCards_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_T_RecoverGame_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_T_RecoverGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_T_RecoverGame.class, Builder.class);
    }

    public static final int CURRENTPLAYERSEATID_FIELD_NUMBER = 1;
    private int currentPlayerSeatId_;
    /**
     * <pre>
     ** 当前操作玩家座位号 
     * </pre>
     *
     * <code>int32 currentPlayerSeatId = 1;</code>
     */
    public int getCurrentPlayerSeatId() {
      return currentPlayerSeatId_;
    }

    public static final int DIZHUSEATID_FIELD_NUMBER = 2;
    private int dizhuSeatId_;
    /**
     * <pre>
     ** 地主座位号 
     * </pre>
     *
     * <code>int32 dizhuSeatId = 2;</code>
     */
    public int getDizhuSeatId() {
      return dizhuSeatId_;
    }

    public static final int RANG_FIELD_NUMBER = 3;
    private int rang_;
    /**
     * <pre>
     ** 让牌数量 
     * </pre>
     *
     * <code>int32 rang = 3;</code>
     */
    public int getRang() {
      return rang_;
    }

    public static final int RATIO_FIELD_NUMBER = 4;
    private int ratio_;
    /**
     * <pre>
     ** 倍数，如果还没叫地主，则为1 
     * </pre>
     *
     * <code>int32 ratio = 4;</code>
     */
    public int getRatio() {
      return ratio_;
    }

    public static final int DIZHUCARDS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList dizhuCards_;
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 5;</code>
     */
    public java.util.List<Integer>
        getDizhuCardsList() {
      return dizhuCards_;
    }
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 5;</code>
     */
    public int getDizhuCardsCount() {
      return dizhuCards_.size();
    }
    /**
     * <pre>
     ** 三张地主牌 
     * </pre>
     *
     * <code>repeated int32 dizhuCards = 5;</code>
     */
    public int getDizhuCards(int index) {
      return dizhuCards_.getInt(index);
    }
    private int dizhuCardsMemoizedSerializedSize = -1;

    public static final int HANDSCARDS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.IntList handsCards_;
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 6;</code>
     */
    public java.util.List<Integer>
        getHandsCardsList() {
      return handsCards_;
    }
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 6;</code>
     */
    public int getHandsCardsCount() {
      return handsCards_.size();
    }
    /**
     * <pre>
     ** 自己的手牌 
     * </pre>
     *
     * <code>repeated int32 handsCards = 6;</code>
     */
    public int getHandsCards(int index) {
      return handsCards_.getInt(index);
    }
    private int handsCardsMemoizedSerializedSize = -1;

    public static final int SYSTEMTIME_FIELD_NUMBER = 7;
    private volatile Object systemTime_;
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 7;</code>
     */
    public String getSystemTime() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        systemTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 系统时间 
     * </pre>
     *
     * <code>string systemTime = 7;</code>
     */
    public com.google.protobuf.ByteString
        getSystemTimeBytes() {
      Object ref = systemTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        systemTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIRETIME_FIELD_NUMBER = 8;
    private volatile Object expireTime_;
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 8;</code>
     */
    public String getExpireTime() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        expireTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 过期时间 
     * </pre>
     *
     * <code>string expireTime = 8;</code>
     */
    public com.google.protobuf.ByteString
        getExpireTimeBytes() {
      Object ref = expireTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        expireTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 9;
    private int index_;
    /**
     * <pre>
     ** 当前牌局操作序号 
     * </pre>
     *
     * <code>int32 index = 9;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int PLAYERINFO_FIELD_NUMBER = 10;
    private java.util.List<LandlordBase.RecoverPlayerInfo> playerInfo_;
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    public java.util.List<LandlordBase.RecoverPlayerInfo> getPlayerInfoList() {
      return playerInfo_;
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    public java.util.List<? extends LandlordBase.RecoverPlayerInfoOrBuilder>
        getPlayerInfoOrBuilderList() {
      return playerInfo_;
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    public int getPlayerInfoCount() {
      return playerInfo_.size();
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    public LandlordBase.RecoverPlayerInfo getPlayerInfo(int index) {
      return playerInfo_.get(index);
    }
    /**
     * <pre>
     ** 玩家信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
     */
    public LandlordBase.RecoverPlayerInfoOrBuilder getPlayerInfoOrBuilder(
        int index) {
      return playerInfo_.get(index);
    }

    public static final int GAMESTATE_FIELD_NUMBER = 11;
    private int gameState_;
    /**
     * <pre>
     ** 当前游戏阶段，叫地主阶段，打牌阶段 
     * </pre>
     *
     * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
     */
    public int getGameStateValue() {
      return gameState_;
    }
    /**
     * <pre>
     ** 当前游戏阶段，叫地主阶段，打牌阶段 
     * </pre>
     *
     * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
     */
    public LandlordBase.GameStateEnum getGameState() {
      @SuppressWarnings("deprecation")
      LandlordBase.GameStateEnum result = LandlordBase.GameStateEnum.valueOf(gameState_);
      return result == null ? LandlordBase.GameStateEnum.UNRECOGNIZED : result;
    }

    public static final int BIGCARDS_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.IntList bigCards_;
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 12;</code>
     */
    public java.util.List<Integer>
        getBigCardsList() {
      return bigCards_;
    }
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 12;</code>
     */
    public int getBigCardsCount() {
      return bigCards_.size();
    }
    /**
     * <pre>
     ** 当前轮最大牌 
     * </pre>
     *
     * <code>repeated int32 bigCards = 12;</code>
     */
    public int getBigCards(int index) {
      return bigCards_.getInt(index);
    }
    private int bigCardsMemoizedSerializedSize = -1;

    public static final int BIGSCORE_FIELD_NUMBER = 13;
    private int bigScore_;
    /**
     * <pre>
     ** 叫地主最大分值 
     * </pre>
     *
     * <code>int32 bigScore = 13;</code>
     */
    public int getBigScore() {
      return bigScore_;
    }

    public static final int HISTORYCARDS_FIELD_NUMBER = 14;
    private com.google.protobuf.Internal.IntList historyCards_;
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 14;</code>
     */
    public java.util.List<Integer>
        getHistoryCardsList() {
      return historyCards_;
    }
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 14;</code>
     */
    public int getHistoryCardsCount() {
      return historyCards_.size();
    }
    /**
     * <pre>
     ** 历史出牌：记牌器不为零才有 
     * </pre>
     *
     * <code>repeated int32 historyCards = 14;</code>
     */
    public int getHistoryCards(int index) {
      return historyCards_.getInt(index);
    }
    private int historyCardsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (currentPlayerSeatId_ != 0) {
        output.writeInt32(1, currentPlayerSeatId_);
      }
      if (dizhuSeatId_ != 0) {
        output.writeInt32(2, dizhuSeatId_);
      }
      if (rang_ != 0) {
        output.writeInt32(3, rang_);
      }
      if (ratio_ != 0) {
        output.writeInt32(4, ratio_);
      }
      if (getDizhuCardsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(dizhuCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < dizhuCards_.size(); i++) {
        output.writeInt32NoTag(dizhuCards_.getInt(i));
      }
      if (getHandsCardsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(handsCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < handsCards_.size(); i++) {
        output.writeInt32NoTag(handsCards_.getInt(i));
      }
      if (!getSystemTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, expireTime_);
      }
      if (index_ != 0) {
        output.writeInt32(9, index_);
      }
      for (int i = 0; i < playerInfo_.size(); i++) {
        output.writeMessage(10, playerInfo_.get(i));
      }
      if (gameState_ != LandlordBase.GameStateEnum.Enter.getNumber()) {
        output.writeEnum(11, gameState_);
      }
      if (getBigCardsList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(bigCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < bigCards_.size(); i++) {
        output.writeInt32NoTag(bigCards_.getInt(i));
      }
      if (bigScore_ != 0) {
        output.writeInt32(13, bigScore_);
      }
      if (getHistoryCardsList().size() > 0) {
        output.writeUInt32NoTag(114);
        output.writeUInt32NoTag(historyCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < historyCards_.size(); i++) {
        output.writeInt32NoTag(historyCards_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (currentPlayerSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, currentPlayerSeatId_);
      }
      if (dizhuSeatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dizhuSeatId_);
      }
      if (rang_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rang_);
      }
      if (ratio_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, ratio_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dizhuCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dizhuCards_.getInt(i));
        }
        size += dataSize;
        if (!getDizhuCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dizhuCardsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handsCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handsCards_.getInt(i));
        }
        size += dataSize;
        if (!getHandsCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        handsCardsMemoizedSerializedSize = dataSize;
      }
      if (!getSystemTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, systemTime_);
      }
      if (!getExpireTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, expireTime_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, index_);
      }
      for (int i = 0; i < playerInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, playerInfo_.get(i));
      }
      if (gameState_ != LandlordBase.GameStateEnum.Enter.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, gameState_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bigCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bigCards_.getInt(i));
        }
        size += dataSize;
        if (!getBigCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        bigCardsMemoizedSerializedSize = dataSize;
      }
      if (bigScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, bigScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < historyCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(historyCards_.getInt(i));
        }
        size += dataSize;
        if (!getHistoryCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        historyCardsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_T_RecoverGame)) {
        return super.equals(obj);
      }
      S_T_RecoverGame other = (S_T_RecoverGame) obj;

      if (getCurrentPlayerSeatId()
          != other.getCurrentPlayerSeatId()) return false;
      if (getDizhuSeatId()
          != other.getDizhuSeatId()) return false;
      if (getRang()
          != other.getRang()) return false;
      if (getRatio()
          != other.getRatio()) return false;
      if (!getDizhuCardsList()
          .equals(other.getDizhuCardsList())) return false;
      if (!getHandsCardsList()
          .equals(other.getHandsCardsList())) return false;
      if (!getSystemTime()
          .equals(other.getSystemTime())) return false;
      if (!getExpireTime()
          .equals(other.getExpireTime())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!getPlayerInfoList()
          .equals(other.getPlayerInfoList())) return false;
      if (gameState_ != other.gameState_) return false;
      if (!getBigCardsList()
          .equals(other.getBigCardsList())) return false;
      if (getBigScore()
          != other.getBigScore()) return false;
      if (!getHistoryCardsList()
          .equals(other.getHistoryCardsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURRENTPLAYERSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentPlayerSeatId();
      hash = (37 * hash) + DIZHUSEATID_FIELD_NUMBER;
      hash = (53 * hash) + getDizhuSeatId();
      hash = (37 * hash) + RANG_FIELD_NUMBER;
      hash = (53 * hash) + getRang();
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getRatio();
      if (getDizhuCardsCount() > 0) {
        hash = (37 * hash) + DIZHUCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getDizhuCardsList().hashCode();
      }
      if (getHandsCardsCount() > 0) {
        hash = (37 * hash) + HANDSCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHandsCardsList().hashCode();
      }
      hash = (37 * hash) + SYSTEMTIME_FIELD_NUMBER;
      hash = (53 * hash) + getSystemTime().hashCode();
      hash = (37 * hash) + EXPIRETIME_FIELD_NUMBER;
      hash = (53 * hash) + getExpireTime().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      if (getPlayerInfoCount() > 0) {
        hash = (37 * hash) + PLAYERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerInfoList().hashCode();
      }
      hash = (37 * hash) + GAMESTATE_FIELD_NUMBER;
      hash = (53 * hash) + gameState_;
      if (getBigCardsCount() > 0) {
        hash = (37 * hash) + BIGCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getBigCardsList().hashCode();
      }
      hash = (37 * hash) + BIGSCORE_FIELD_NUMBER;
      hash = (53 * hash) + getBigScore();
      if (getHistoryCardsCount() > 0) {
        hash = (37 * hash) + HISTORYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHistoryCardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_T_RecoverGame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_RecoverGame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_RecoverGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_RecoverGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_RecoverGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_T_RecoverGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_T_RecoverGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_T_RecoverGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_T_RecoverGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_T_RecoverGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_T_RecoverGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_T_RecoverGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_T_RecoverGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Server 二人场-返回玩家恢复游戏请求
     * 断线重连部分，客户端保存的index和最新推送index不匹配
     * 或者加入房间index不为1时读取
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_T_RecoverGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_T_RecoverGame)
        S_T_RecoverGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_T_RecoverGame_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_T_RecoverGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_T_RecoverGame.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_T_RecoverGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayerInfoFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        currentPlayerSeatId_ = 0;

        dizhuSeatId_ = 0;

        rang_ = 0;

        ratio_ = 0;

        dizhuCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        handsCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        systemTime_ = "";

        expireTime_ = "";

        index_ = 0;

        if (playerInfoBuilder_ == null) {
          playerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playerInfoBuilder_.clear();
        }
        gameState_ = 0;

        bigCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        bigScore_ = 0;

        historyCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_T_RecoverGame_descriptor;
      }

      @Override
      public S_T_RecoverGame getDefaultInstanceForType() {
        return S_T_RecoverGame.getDefaultInstance();
      }

      @Override
      public S_T_RecoverGame build() {
        S_T_RecoverGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_T_RecoverGame buildPartial() {
        S_T_RecoverGame result = new S_T_RecoverGame(this);
        int from_bitField0_ = bitField0_;
        result.currentPlayerSeatId_ = currentPlayerSeatId_;
        result.dizhuSeatId_ = dizhuSeatId_;
        result.rang_ = rang_;
        result.ratio_ = ratio_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dizhuCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dizhuCards_ = dizhuCards_;
        if (((bitField0_ & 0x00000002) != 0)) {
          handsCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.handsCards_ = handsCards_;
        result.systemTime_ = systemTime_;
        result.expireTime_ = expireTime_;
        result.index_ = index_;
        if (playerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            playerInfo_ = java.util.Collections.unmodifiableList(playerInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.playerInfo_ = playerInfo_;
        } else {
          result.playerInfo_ = playerInfoBuilder_.build();
        }
        result.gameState_ = gameState_;
        if (((bitField0_ & 0x00000008) != 0)) {
          bigCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.bigCards_ = bigCards_;
        result.bigScore_ = bigScore_;
        if (((bitField0_ & 0x00000010) != 0)) {
          historyCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.historyCards_ = historyCards_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_T_RecoverGame) {
          return mergeFrom((S_T_RecoverGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_T_RecoverGame other) {
        if (other == S_T_RecoverGame.getDefaultInstance()) return this;
        if (other.getCurrentPlayerSeatId() != 0) {
          setCurrentPlayerSeatId(other.getCurrentPlayerSeatId());
        }
        if (other.getDizhuSeatId() != 0) {
          setDizhuSeatId(other.getDizhuSeatId());
        }
        if (other.getRang() != 0) {
          setRang(other.getRang());
        }
        if (other.getRatio() != 0) {
          setRatio(other.getRatio());
        }
        if (!other.dizhuCards_.isEmpty()) {
          if (dizhuCards_.isEmpty()) {
            dizhuCards_ = other.dizhuCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDizhuCardsIsMutable();
            dizhuCards_.addAll(other.dizhuCards_);
          }
          onChanged();
        }
        if (!other.handsCards_.isEmpty()) {
          if (handsCards_.isEmpty()) {
            handsCards_ = other.handsCards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHandsCardsIsMutable();
            handsCards_.addAll(other.handsCards_);
          }
          onChanged();
        }
        if (!other.getSystemTime().isEmpty()) {
          systemTime_ = other.systemTime_;
          onChanged();
        }
        if (!other.getExpireTime().isEmpty()) {
          expireTime_ = other.expireTime_;
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (playerInfoBuilder_ == null) {
          if (!other.playerInfo_.isEmpty()) {
            if (playerInfo_.isEmpty()) {
              playerInfo_ = other.playerInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayerInfoIsMutable();
              playerInfo_.addAll(other.playerInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.playerInfo_.isEmpty()) {
            if (playerInfoBuilder_.isEmpty()) {
              playerInfoBuilder_.dispose();
              playerInfoBuilder_ = null;
              playerInfo_ = other.playerInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playerInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerInfoFieldBuilder() : null;
            } else {
              playerInfoBuilder_.addAllMessages(other.playerInfo_);
            }
          }
        }
        if (other.gameState_ != 0) {
          setGameStateValue(other.getGameStateValue());
        }
        if (!other.bigCards_.isEmpty()) {
          if (bigCards_.isEmpty()) {
            bigCards_ = other.bigCards_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBigCardsIsMutable();
            bigCards_.addAll(other.bigCards_);
          }
          onChanged();
        }
        if (other.getBigScore() != 0) {
          setBigScore(other.getBigScore());
        }
        if (!other.historyCards_.isEmpty()) {
          if (historyCards_.isEmpty()) {
            historyCards_ = other.historyCards_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHistoryCardsIsMutable();
            historyCards_.addAll(other.historyCards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_T_RecoverGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_T_RecoverGame) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int currentPlayerSeatId_ ;
      /**
       * <pre>
       ** 当前操作玩家座位号 
       * </pre>
       *
       * <code>int32 currentPlayerSeatId = 1;</code>
       */
      public int getCurrentPlayerSeatId() {
        return currentPlayerSeatId_;
      }
      /**
       * <pre>
       ** 当前操作玩家座位号 
       * </pre>
       *
       * <code>int32 currentPlayerSeatId = 1;</code>
       */
      public Builder setCurrentPlayerSeatId(int value) {
        
        currentPlayerSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前操作玩家座位号 
       * </pre>
       *
       * <code>int32 currentPlayerSeatId = 1;</code>
       */
      public Builder clearCurrentPlayerSeatId() {
        
        currentPlayerSeatId_ = 0;
        onChanged();
        return this;
      }

      private int dizhuSeatId_ ;
      /**
       * <pre>
       ** 地主座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 2;</code>
       */
      public int getDizhuSeatId() {
        return dizhuSeatId_;
      }
      /**
       * <pre>
       ** 地主座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 2;</code>
       */
      public Builder setDizhuSeatId(int value) {
        
        dizhuSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 地主座位号 
       * </pre>
       *
       * <code>int32 dizhuSeatId = 2;</code>
       */
      public Builder clearDizhuSeatId() {
        
        dizhuSeatId_ = 0;
        onChanged();
        return this;
      }

      private int rang_ ;
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 3;</code>
       */
      public int getRang() {
        return rang_;
      }
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 3;</code>
       */
      public Builder setRang(int value) {
        
        rang_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 让牌数量 
       * </pre>
       *
       * <code>int32 rang = 3;</code>
       */
      public Builder clearRang() {
        
        rang_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ ;
      /**
       * <pre>
       ** 倍数，如果还没叫地主，则为1 
       * </pre>
       *
       * <code>int32 ratio = 4;</code>
       */
      public int getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       ** 倍数，如果还没叫地主，则为1 
       * </pre>
       *
       * <code>int32 ratio = 4;</code>
       */
      public Builder setRatio(int value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 倍数，如果还没叫地主，则为1 
       * </pre>
       *
       * <code>int32 ratio = 4;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dizhuCards_ = emptyIntList();
      private void ensureDizhuCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dizhuCards_ = mutableCopy(dizhuCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 5;</code>
       */
      public java.util.List<Integer>
          getDizhuCardsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dizhuCards_) : dizhuCards_;
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 5;</code>
       */
      public int getDizhuCardsCount() {
        return dizhuCards_.size();
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 5;</code>
       */
      public int getDizhuCards(int index) {
        return dizhuCards_.getInt(index);
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 5;</code>
       */
      public Builder setDizhuCards(
          int index, int value) {
        ensureDizhuCardsIsMutable();
        dizhuCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 5;</code>
       */
      public Builder addDizhuCards(int value) {
        ensureDizhuCardsIsMutable();
        dizhuCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 5;</code>
       */
      public Builder addAllDizhuCards(
          Iterable<? extends Integer> values) {
        ensureDizhuCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dizhuCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 三张地主牌 
       * </pre>
       *
       * <code>repeated int32 dizhuCards = 5;</code>
       */
      public Builder clearDizhuCards() {
        dizhuCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList handsCards_ = emptyIntList();
      private void ensureHandsCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          handsCards_ = mutableCopy(handsCards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 6;</code>
       */
      public java.util.List<Integer>
          getHandsCardsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(handsCards_) : handsCards_;
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 6;</code>
       */
      public int getHandsCardsCount() {
        return handsCards_.size();
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 6;</code>
       */
      public int getHandsCards(int index) {
        return handsCards_.getInt(index);
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 6;</code>
       */
      public Builder setHandsCards(
          int index, int value) {
        ensureHandsCardsIsMutable();
        handsCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 6;</code>
       */
      public Builder addHandsCards(int value) {
        ensureHandsCardsIsMutable();
        handsCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 6;</code>
       */
      public Builder addAllHandsCards(
          Iterable<? extends Integer> values) {
        ensureHandsCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, handsCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 自己的手牌 
       * </pre>
       *
       * <code>repeated int32 handsCards = 6;</code>
       */
      public Builder clearHandsCards() {
        handsCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private Object systemTime_ = "";
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 7;</code>
       */
      public String getSystemTime() {
        Object ref = systemTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          systemTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 7;</code>
       */
      public com.google.protobuf.ByteString
          getSystemTimeBytes() {
        Object ref = systemTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          systemTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 7;</code>
       */
      public Builder setSystemTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        systemTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 7;</code>
       */
      public Builder clearSystemTime() {
        
        systemTime_ = getDefaultInstance().getSystemTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 系统时间 
       * </pre>
       *
       * <code>string systemTime = 7;</code>
       */
      public Builder setSystemTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        systemTime_ = value;
        onChanged();
        return this;
      }

      private Object expireTime_ = "";
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 8;</code>
       */
      public String getExpireTime() {
        Object ref = expireTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          expireTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 8;</code>
       */
      public com.google.protobuf.ByteString
          getExpireTimeBytes() {
        Object ref = expireTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          expireTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 8;</code>
       */
      public Builder setExpireTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        expireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 8;</code>
       */
      public Builder clearExpireTime() {
        
        expireTime_ = getDefaultInstance().getExpireTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 过期时间 
       * </pre>
       *
       * <code>string expireTime = 8;</code>
       */
      public Builder setExpireTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        expireTime_ = value;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 9;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 9;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前牌局操作序号 
       * </pre>
       *
       * <code>int32 index = 9;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<LandlordBase.RecoverPlayerInfo> playerInfo_ =
        java.util.Collections.emptyList();
      private void ensurePlayerInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          playerInfo_ = new java.util.ArrayList<LandlordBase.RecoverPlayerInfo>(playerInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.RecoverPlayerInfo, LandlordBase.RecoverPlayerInfo.Builder, LandlordBase.RecoverPlayerInfoOrBuilder> playerInfoBuilder_;

      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public java.util.List<LandlordBase.RecoverPlayerInfo> getPlayerInfoList() {
        if (playerInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerInfo_);
        } else {
          return playerInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public int getPlayerInfoCount() {
        if (playerInfoBuilder_ == null) {
          return playerInfo_.size();
        } else {
          return playerInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public LandlordBase.RecoverPlayerInfo getPlayerInfo(int index) {
        if (playerInfoBuilder_ == null) {
          return playerInfo_.get(index);
        } else {
          return playerInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder setPlayerInfo(
          int index, LandlordBase.RecoverPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfoIsMutable();
          playerInfo_.set(index, value);
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder setPlayerInfo(
          int index, LandlordBase.RecoverPlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          playerInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder addPlayerInfo(LandlordBase.RecoverPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfoIsMutable();
          playerInfo_.add(value);
          onChanged();
        } else {
          playerInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder addPlayerInfo(
          int index, LandlordBase.RecoverPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfoIsMutable();
          playerInfo_.add(index, value);
          onChanged();
        } else {
          playerInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder addPlayerInfo(
          LandlordBase.RecoverPlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          playerInfo_.add(builderForValue.build());
          onChanged();
        } else {
          playerInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder addPlayerInfo(
          int index, LandlordBase.RecoverPlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          playerInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder addAllPlayerInfo(
          Iterable<? extends LandlordBase.RecoverPlayerInfo> values) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerInfo_);
          onChanged();
        } else {
          playerInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder clearPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playerInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public Builder removePlayerInfo(int index) {
        if (playerInfoBuilder_ == null) {
          ensurePlayerInfoIsMutable();
          playerInfo_.remove(index);
          onChanged();
        } else {
          playerInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public LandlordBase.RecoverPlayerInfo.Builder getPlayerInfoBuilder(
          int index) {
        return getPlayerInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public LandlordBase.RecoverPlayerInfoOrBuilder getPlayerInfoOrBuilder(
          int index) {
        if (playerInfoBuilder_ == null) {
          return playerInfo_.get(index);  } else {
          return playerInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public java.util.List<? extends LandlordBase.RecoverPlayerInfoOrBuilder>
           getPlayerInfoOrBuilderList() {
        if (playerInfoBuilder_ != null) {
          return playerInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerInfo_);
        }
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public LandlordBase.RecoverPlayerInfo.Builder addPlayerInfoBuilder() {
        return getPlayerInfoFieldBuilder().addBuilder(
            LandlordBase.RecoverPlayerInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public LandlordBase.RecoverPlayerInfo.Builder addPlayerInfoBuilder(
          int index) {
        return getPlayerInfoFieldBuilder().addBuilder(
            index, LandlordBase.RecoverPlayerInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.RecoverPlayerInfo playerInfo = 10;</code>
       */
      public java.util.List<LandlordBase.RecoverPlayerInfo.Builder>
           getPlayerInfoBuilderList() {
        return getPlayerInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.RecoverPlayerInfo, LandlordBase.RecoverPlayerInfo.Builder, LandlordBase.RecoverPlayerInfoOrBuilder>
          getPlayerInfoFieldBuilder() {
        if (playerInfoBuilder_ == null) {
          playerInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.RecoverPlayerInfo, LandlordBase.RecoverPlayerInfo.Builder, LandlordBase.RecoverPlayerInfoOrBuilder>(
                  playerInfo_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          playerInfo_ = null;
        }
        return playerInfoBuilder_;
      }

      private int gameState_ = 0;
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
       */
      public int getGameStateValue() {
        return gameState_;
      }
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
       */
      public Builder setGameStateValue(int value) {
        gameState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
       */
      public LandlordBase.GameStateEnum getGameState() {
        @SuppressWarnings("deprecation")
        LandlordBase.GameStateEnum result = LandlordBase.GameStateEnum.valueOf(gameState_);
        return result == null ? LandlordBase.GameStateEnum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
       */
      public Builder setGameState(LandlordBase.GameStateEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        gameState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前游戏阶段，叫地主阶段，打牌阶段 
       * </pre>
       *
       * <code>.pb_landlord.GameStateEnum gameState = 11;</code>
       */
      public Builder clearGameState() {
        
        gameState_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList bigCards_ = emptyIntList();
      private void ensureBigCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          bigCards_ = mutableCopy(bigCards_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 12;</code>
       */
      public java.util.List<Integer>
          getBigCardsList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(bigCards_) : bigCards_;
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 12;</code>
       */
      public int getBigCardsCount() {
        return bigCards_.size();
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 12;</code>
       */
      public int getBigCards(int index) {
        return bigCards_.getInt(index);
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 12;</code>
       */
      public Builder setBigCards(
          int index, int value) {
        ensureBigCardsIsMutable();
        bigCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 12;</code>
       */
      public Builder addBigCards(int value) {
        ensureBigCardsIsMutable();
        bigCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 12;</code>
       */
      public Builder addAllBigCards(
          Iterable<? extends Integer> values) {
        ensureBigCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bigCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前轮最大牌 
       * </pre>
       *
       * <code>repeated int32 bigCards = 12;</code>
       */
      public Builder clearBigCards() {
        bigCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private int bigScore_ ;
      /**
       * <pre>
       ** 叫地主最大分值 
       * </pre>
       *
       * <code>int32 bigScore = 13;</code>
       */
      public int getBigScore() {
        return bigScore_;
      }
      /**
       * <pre>
       ** 叫地主最大分值 
       * </pre>
       *
       * <code>int32 bigScore = 13;</code>
       */
      public Builder setBigScore(int value) {
        
        bigScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 叫地主最大分值 
       * </pre>
       *
       * <code>int32 bigScore = 13;</code>
       */
      public Builder clearBigScore() {
        
        bigScore_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList historyCards_ = emptyIntList();
      private void ensureHistoryCardsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          historyCards_ = mutableCopy(historyCards_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 14;</code>
       */
      public java.util.List<Integer>
          getHistoryCardsList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(historyCards_) : historyCards_;
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 14;</code>
       */
      public int getHistoryCardsCount() {
        return historyCards_.size();
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 14;</code>
       */
      public int getHistoryCards(int index) {
        return historyCards_.getInt(index);
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 14;</code>
       */
      public Builder setHistoryCards(
          int index, int value) {
        ensureHistoryCardsIsMutable();
        historyCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 14;</code>
       */
      public Builder addHistoryCards(int value) {
        ensureHistoryCardsIsMutable();
        historyCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 14;</code>
       */
      public Builder addAllHistoryCards(
          Iterable<? extends Integer> values) {
        ensureHistoryCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, historyCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 历史出牌：记牌器不为零才有 
       * </pre>
       *
       * <code>repeated int32 historyCards = 14;</code>
       */
      public Builder clearHistoryCards() {
        historyCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_T_RecoverGame)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_T_RecoverGame)
    private static final S_T_RecoverGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_T_RecoverGame();
    }

    public static S_T_RecoverGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_T_RecoverGame>
        PARSER = new com.google.protobuf.AbstractParser<S_T_RecoverGame>() {
      @Override
      public S_T_RecoverGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_T_RecoverGame(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_T_RecoverGame> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_T_RecoverGame> getParserForType() {
      return PARSER;
    }

    @Override
    public S_T_RecoverGame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_GetMatchInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_GetMatchInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 报名卡 
     * </pre>
     *
     * <code>int32 apply_card = 1;</code>
     */
    int getApplyCard();

    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    java.util.List<LandlordBase.MatchInfo>
        getMatchListList();
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    LandlordBase.MatchInfo getMatchList(int index);
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    int getMatchListCount();
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    java.util.List<? extends LandlordBase.MatchInfoOrBuilder>
        getMatchListOrBuilderList();
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    LandlordBase.MatchInfoOrBuilder getMatchListOrBuilder(
        int index);
  }
  /**
   * <pre>
   ** Server 返回赛事信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_GetMatchInfo}
   */
  public  static final class S_GetMatchInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_GetMatchInfo)
      S_GetMatchInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_GetMatchInfo.newBuilder() to construct.
    private S_GetMatchInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_GetMatchInfo() {
      matchList_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_GetMatchInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_GetMatchInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              applyCard_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                matchList_ = new java.util.ArrayList<LandlordBase.MatchInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              matchList_.add(
                  input.readMessage(LandlordBase.MatchInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          matchList_ = java.util.Collections.unmodifiableList(matchList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_GetMatchInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_GetMatchInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_GetMatchInfo.class, Builder.class);
    }

    public static final int APPLY_CARD_FIELD_NUMBER = 1;
    private int applyCard_;
    /**
     * <pre>
     ** 报名卡 
     * </pre>
     *
     * <code>int32 apply_card = 1;</code>
     */
    public int getApplyCard() {
      return applyCard_;
    }

    public static final int MATCH_LIST_FIELD_NUMBER = 2;
    private java.util.List<LandlordBase.MatchInfo> matchList_;
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    public java.util.List<LandlordBase.MatchInfo> getMatchListList() {
      return matchList_;
    }
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    public java.util.List<? extends LandlordBase.MatchInfoOrBuilder>
        getMatchListOrBuilderList() {
      return matchList_;
    }
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    public int getMatchListCount() {
      return matchList_.size();
    }
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    public LandlordBase.MatchInfo getMatchList(int index) {
      return matchList_.get(index);
    }
    /**
     * <pre>
     ** 赛事列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
     */
    public LandlordBase.MatchInfoOrBuilder getMatchListOrBuilder(
        int index) {
      return matchList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (applyCard_ != 0) {
        output.writeInt32(1, applyCard_);
      }
      for (int i = 0; i < matchList_.size(); i++) {
        output.writeMessage(2, matchList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (applyCard_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, applyCard_);
      }
      for (int i = 0; i < matchList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, matchList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_GetMatchInfo)) {
        return super.equals(obj);
      }
      S_GetMatchInfo other = (S_GetMatchInfo) obj;

      if (getApplyCard()
          != other.getApplyCard()) return false;
      if (!getMatchListList()
          .equals(other.getMatchListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + APPLY_CARD_FIELD_NUMBER;
      hash = (53 * hash) + getApplyCard();
      if (getMatchListCount() > 0) {
        hash = (37 * hash) + MATCH_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getMatchListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_GetMatchInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetMatchInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetMatchInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_GetMatchInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetMatchInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetMatchInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_GetMatchInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回赛事信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_GetMatchInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_GetMatchInfo)
        S_GetMatchInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_GetMatchInfo.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_GetMatchInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMatchListFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        applyCard_ = 0;

        if (matchListBuilder_ == null) {
          matchList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          matchListBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchInfo_descriptor;
      }

      @Override
      public S_GetMatchInfo getDefaultInstanceForType() {
        return S_GetMatchInfo.getDefaultInstance();
      }

      @Override
      public S_GetMatchInfo build() {
        S_GetMatchInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_GetMatchInfo buildPartial() {
        S_GetMatchInfo result = new S_GetMatchInfo(this);
        int from_bitField0_ = bitField0_;
        result.applyCard_ = applyCard_;
        if (matchListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            matchList_ = java.util.Collections.unmodifiableList(matchList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.matchList_ = matchList_;
        } else {
          result.matchList_ = matchListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_GetMatchInfo) {
          return mergeFrom((S_GetMatchInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_GetMatchInfo other) {
        if (other == S_GetMatchInfo.getDefaultInstance()) return this;
        if (other.getApplyCard() != 0) {
          setApplyCard(other.getApplyCard());
        }
        if (matchListBuilder_ == null) {
          if (!other.matchList_.isEmpty()) {
            if (matchList_.isEmpty()) {
              matchList_ = other.matchList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMatchListIsMutable();
              matchList_.addAll(other.matchList_);
            }
            onChanged();
          }
        } else {
          if (!other.matchList_.isEmpty()) {
            if (matchListBuilder_.isEmpty()) {
              matchListBuilder_.dispose();
              matchListBuilder_ = null;
              matchList_ = other.matchList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              matchListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMatchListFieldBuilder() : null;
            } else {
              matchListBuilder_.addAllMessages(other.matchList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_GetMatchInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_GetMatchInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int applyCard_ ;
      /**
       * <pre>
       ** 报名卡 
       * </pre>
       *
       * <code>int32 apply_card = 1;</code>
       */
      public int getApplyCard() {
        return applyCard_;
      }
      /**
       * <pre>
       ** 报名卡 
       * </pre>
       *
       * <code>int32 apply_card = 1;</code>
       */
      public Builder setApplyCard(int value) {
        
        applyCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 报名卡 
       * </pre>
       *
       * <code>int32 apply_card = 1;</code>
       */
      public Builder clearApplyCard() {
        
        applyCard_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<LandlordBase.MatchInfo> matchList_ =
        java.util.Collections.emptyList();
      private void ensureMatchListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          matchList_ = new java.util.ArrayList<LandlordBase.MatchInfo>(matchList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchInfo, LandlordBase.MatchInfo.Builder, LandlordBase.MatchInfoOrBuilder> matchListBuilder_;

      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public java.util.List<LandlordBase.MatchInfo> getMatchListList() {
        if (matchListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(matchList_);
        } else {
          return matchListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public int getMatchListCount() {
        if (matchListBuilder_ == null) {
          return matchList_.size();
        } else {
          return matchListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public LandlordBase.MatchInfo getMatchList(int index) {
        if (matchListBuilder_ == null) {
          return matchList_.get(index);
        } else {
          return matchListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder setMatchList(
          int index, LandlordBase.MatchInfo value) {
        if (matchListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchListIsMutable();
          matchList_.set(index, value);
          onChanged();
        } else {
          matchListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder setMatchList(
          int index, LandlordBase.MatchInfo.Builder builderForValue) {
        if (matchListBuilder_ == null) {
          ensureMatchListIsMutable();
          matchList_.set(index, builderForValue.build());
          onChanged();
        } else {
          matchListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder addMatchList(LandlordBase.MatchInfo value) {
        if (matchListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchListIsMutable();
          matchList_.add(value);
          onChanged();
        } else {
          matchListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder addMatchList(
          int index, LandlordBase.MatchInfo value) {
        if (matchListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchListIsMutable();
          matchList_.add(index, value);
          onChanged();
        } else {
          matchListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder addMatchList(
          LandlordBase.MatchInfo.Builder builderForValue) {
        if (matchListBuilder_ == null) {
          ensureMatchListIsMutable();
          matchList_.add(builderForValue.build());
          onChanged();
        } else {
          matchListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder addMatchList(
          int index, LandlordBase.MatchInfo.Builder builderForValue) {
        if (matchListBuilder_ == null) {
          ensureMatchListIsMutable();
          matchList_.add(index, builderForValue.build());
          onChanged();
        } else {
          matchListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder addAllMatchList(
          Iterable<? extends LandlordBase.MatchInfo> values) {
        if (matchListBuilder_ == null) {
          ensureMatchListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, matchList_);
          onChanged();
        } else {
          matchListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder clearMatchList() {
        if (matchListBuilder_ == null) {
          matchList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          matchListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public Builder removeMatchList(int index) {
        if (matchListBuilder_ == null) {
          ensureMatchListIsMutable();
          matchList_.remove(index);
          onChanged();
        } else {
          matchListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public LandlordBase.MatchInfo.Builder getMatchListBuilder(
          int index) {
        return getMatchListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public LandlordBase.MatchInfoOrBuilder getMatchListOrBuilder(
          int index) {
        if (matchListBuilder_ == null) {
          return matchList_.get(index);  } else {
          return matchListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public java.util.List<? extends LandlordBase.MatchInfoOrBuilder>
           getMatchListOrBuilderList() {
        if (matchListBuilder_ != null) {
          return matchListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(matchList_);
        }
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public LandlordBase.MatchInfo.Builder addMatchListBuilder() {
        return getMatchListFieldBuilder().addBuilder(
            LandlordBase.MatchInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public LandlordBase.MatchInfo.Builder addMatchListBuilder(
          int index) {
        return getMatchListFieldBuilder().addBuilder(
            index, LandlordBase.MatchInfo.getDefaultInstance());
      }
      /**
       * <pre>
       ** 赛事列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchInfo match_list = 2;</code>
       */
      public java.util.List<LandlordBase.MatchInfo.Builder>
           getMatchListBuilderList() {
        return getMatchListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchInfo, LandlordBase.MatchInfo.Builder, LandlordBase.MatchInfoOrBuilder>
          getMatchListFieldBuilder() {
        if (matchListBuilder_ == null) {
          matchListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.MatchInfo, LandlordBase.MatchInfo.Builder, LandlordBase.MatchInfoOrBuilder>(
                  matchList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          matchList_ = null;
        }
        return matchListBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_GetMatchInfo)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_GetMatchInfo)
    private static final S_GetMatchInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_GetMatchInfo();
    }

    public static S_GetMatchInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_GetMatchInfo>
        PARSER = new com.google.protobuf.AbstractParser<S_GetMatchInfo>() {
      @Override
      public S_GetMatchInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_GetMatchInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_GetMatchInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_GetMatchInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public S_GetMatchInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_GetMatchDetailOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_GetMatchDetail)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 赛事id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    int getMatchId();

    /**
     * <pre>
     ** 报名状态 0未报名 1已报名 
     * </pre>
     *
     * <code>int32 applyState = 2;</code>
     */
    int getApplyState();

    /**
     * <pre>
     ** 赛事总人数 
     * </pre>
     *
     * <code>int32 total = 3;</code>
     */
    int getTotal();

    /**
     * <pre>
     ** 当前参赛人数 
     * </pre>
     *
     * <code>int32 join = 4;</code>
     */
    int getJoin();

    /**
     * <pre>
     ** 报名费 
     * </pre>
     *
     * <code>int32 cost = 5;</code>
     */
    int getCost();

    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    java.util.List<LandlordBase.MatchAward>
        getMatchAwardList();
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    LandlordBase.MatchAward getMatchAward(int index);
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    int getMatchAwardCount();
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
        getMatchAwardOrBuilderList();
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
        int index);

    /**
     * <pre>
     ** 赛事时间 
     * </pre>
     *
     * <code>string match_time = 7;</code>
     */
    String getMatchTime();
    /**
     * <pre>
     ** 赛事时间 
     * </pre>
     *
     * <code>string match_time = 7;</code>
     */
    com.google.protobuf.ByteString
        getMatchTimeBytes();

    /**
     * <pre>
     ** 是否可以报名 
     * </pre>
     *
     * <code>bool isApply = 8;</code>
     */
    boolean getIsApply();

    /**
     * <pre>
     ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
     * </pre>
     *
     * <code>int32 costType = 9;</code>
     */
    int getCostType();

    /**
     * <pre>
     ** 报名限制 
     * </pre>
     *
     * <code>int32 enterLimit = 10;</code>
     */
    int getEnterLimit();
  }
  /**
   * <pre>
   ** Server 返回赛事详细信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_GetMatchDetail}
   */
  public  static final class S_GetMatchDetail extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_GetMatchDetail)
      S_GetMatchDetailOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_GetMatchDetail.newBuilder() to construct.
    private S_GetMatchDetail(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_GetMatchDetail() {
      matchAward_ = java.util.Collections.emptyList();
      matchTime_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_GetMatchDetail();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_GetMatchDetail(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              matchId_ = input.readInt32();
              break;
            }
            case 16: {

              applyState_ = input.readInt32();
              break;
            }
            case 24: {

              total_ = input.readInt32();
              break;
            }
            case 32: {

              join_ = input.readInt32();
              break;
            }
            case 40: {

              cost_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                matchAward_ = new java.util.ArrayList<LandlordBase.MatchAward>();
                mutable_bitField0_ |= 0x00000001;
              }
              matchAward_.add(
                  input.readMessage(LandlordBase.MatchAward.parser(), extensionRegistry));
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              matchTime_ = s;
              break;
            }
            case 64: {

              isApply_ = input.readBool();
              break;
            }
            case 72: {

              costType_ = input.readInt32();
              break;
            }
            case 80: {

              enterLimit_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          matchAward_ = java.util.Collections.unmodifiableList(matchAward_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_GetMatchDetail_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_GetMatchDetail_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_GetMatchDetail.class, Builder.class);
    }

    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <pre>
     ** 赛事id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    public int getMatchId() {
      return matchId_;
    }

    public static final int APPLYSTATE_FIELD_NUMBER = 2;
    private int applyState_;
    /**
     * <pre>
     ** 报名状态 0未报名 1已报名 
     * </pre>
     *
     * <code>int32 applyState = 2;</code>
     */
    public int getApplyState() {
      return applyState_;
    }

    public static final int TOTAL_FIELD_NUMBER = 3;
    private int total_;
    /**
     * <pre>
     ** 赛事总人数 
     * </pre>
     *
     * <code>int32 total = 3;</code>
     */
    public int getTotal() {
      return total_;
    }

    public static final int JOIN_FIELD_NUMBER = 4;
    private int join_;
    /**
     * <pre>
     ** 当前参赛人数 
     * </pre>
     *
     * <code>int32 join = 4;</code>
     */
    public int getJoin() {
      return join_;
    }

    public static final int COST_FIELD_NUMBER = 5;
    private int cost_;
    /**
     * <pre>
     ** 报名费 
     * </pre>
     *
     * <code>int32 cost = 5;</code>
     */
    public int getCost() {
      return cost_;
    }

    public static final int MATCHAWARD_FIELD_NUMBER = 6;
    private java.util.List<LandlordBase.MatchAward> matchAward_;
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    public java.util.List<LandlordBase.MatchAward> getMatchAwardList() {
      return matchAward_;
    }
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    public java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
        getMatchAwardOrBuilderList() {
      return matchAward_;
    }
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    public int getMatchAwardCount() {
      return matchAward_.size();
    }
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    public LandlordBase.MatchAward getMatchAward(int index) {
      return matchAward_.get(index);
    }
    /**
     * <pre>
     ** 赛事奖励列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
     */
    public LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
        int index) {
      return matchAward_.get(index);
    }

    public static final int MATCH_TIME_FIELD_NUMBER = 7;
    private volatile Object matchTime_;
    /**
     * <pre>
     ** 赛事时间 
     * </pre>
     *
     * <code>string match_time = 7;</code>
     */
    public String getMatchTime() {
      Object ref = matchTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        matchTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 赛事时间 
     * </pre>
     *
     * <code>string match_time = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMatchTimeBytes() {
      Object ref = matchTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        matchTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISAPPLY_FIELD_NUMBER = 8;
    private boolean isApply_;
    /**
     * <pre>
     ** 是否可以报名 
     * </pre>
     *
     * <code>bool isApply = 8;</code>
     */
    public boolean getIsApply() {
      return isApply_;
    }

    public static final int COSTTYPE_FIELD_NUMBER = 9;
    private int costType_;
    /**
     * <pre>
     ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
     * </pre>
     *
     * <code>int32 costType = 9;</code>
     */
    public int getCostType() {
      return costType_;
    }

    public static final int ENTERLIMIT_FIELD_NUMBER = 10;
    private int enterLimit_;
    /**
     * <pre>
     ** 报名限制 
     * </pre>
     *
     * <code>int32 enterLimit = 10;</code>
     */
    public int getEnterLimit() {
      return enterLimit_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (matchId_ != 0) {
        output.writeInt32(1, matchId_);
      }
      if (applyState_ != 0) {
        output.writeInt32(2, applyState_);
      }
      if (total_ != 0) {
        output.writeInt32(3, total_);
      }
      if (join_ != 0) {
        output.writeInt32(4, join_);
      }
      if (cost_ != 0) {
        output.writeInt32(5, cost_);
      }
      for (int i = 0; i < matchAward_.size(); i++) {
        output.writeMessage(6, matchAward_.get(i));
      }
      if (!getMatchTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, matchTime_);
      }
      if (isApply_ != false) {
        output.writeBool(8, isApply_);
      }
      if (costType_ != 0) {
        output.writeInt32(9, costType_);
      }
      if (enterLimit_ != 0) {
        output.writeInt32(10, enterLimit_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (matchId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchId_);
      }
      if (applyState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, applyState_);
      }
      if (total_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, total_);
      }
      if (join_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, join_);
      }
      if (cost_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, cost_);
      }
      for (int i = 0; i < matchAward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, matchAward_.get(i));
      }
      if (!getMatchTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, matchTime_);
      }
      if (isApply_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isApply_);
      }
      if (costType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, costType_);
      }
      if (enterLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, enterLimit_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_GetMatchDetail)) {
        return super.equals(obj);
      }
      S_GetMatchDetail other = (S_GetMatchDetail) obj;

      if (getMatchId()
          != other.getMatchId()) return false;
      if (getApplyState()
          != other.getApplyState()) return false;
      if (getTotal()
          != other.getTotal()) return false;
      if (getJoin()
          != other.getJoin()) return false;
      if (getCost()
          != other.getCost()) return false;
      if (!getMatchAwardList()
          .equals(other.getMatchAwardList())) return false;
      if (!getMatchTime()
          .equals(other.getMatchTime())) return false;
      if (getIsApply()
          != other.getIsApply()) return false;
      if (getCostType()
          != other.getCostType()) return false;
      if (getEnterLimit()
          != other.getEnterLimit()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MATCHID_FIELD_NUMBER;
      hash = (53 * hash) + getMatchId();
      hash = (37 * hash) + APPLYSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getApplyState();
      hash = (37 * hash) + TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + getTotal();
      hash = (37 * hash) + JOIN_FIELD_NUMBER;
      hash = (53 * hash) + getJoin();
      hash = (37 * hash) + COST_FIELD_NUMBER;
      hash = (53 * hash) + getCost();
      if (getMatchAwardCount() > 0) {
        hash = (37 * hash) + MATCHAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getMatchAwardList().hashCode();
      }
      hash = (37 * hash) + MATCH_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getMatchTime().hashCode();
      hash = (37 * hash) + ISAPPLY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsApply());
      hash = (37 * hash) + COSTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCostType();
      hash = (37 * hash) + ENTERLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getEnterLimit();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_GetMatchDetail parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchDetail parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchDetail parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchDetail parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchDetail parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchDetail parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchDetail parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetMatchDetail parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetMatchDetail parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_GetMatchDetail parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetMatchDetail parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetMatchDetail parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_GetMatchDetail prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回赛事详细信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_GetMatchDetail}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_GetMatchDetail)
        S_GetMatchDetailOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchDetail_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchDetail_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_GetMatchDetail.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_GetMatchDetail.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMatchAwardFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        matchId_ = 0;

        applyState_ = 0;

        total_ = 0;

        join_ = 0;

        cost_ = 0;

        if (matchAwardBuilder_ == null) {
          matchAward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          matchAwardBuilder_.clear();
        }
        matchTime_ = "";

        isApply_ = false;

        costType_ = 0;

        enterLimit_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchDetail_descriptor;
      }

      @Override
      public S_GetMatchDetail getDefaultInstanceForType() {
        return S_GetMatchDetail.getDefaultInstance();
      }

      @Override
      public S_GetMatchDetail build() {
        S_GetMatchDetail result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_GetMatchDetail buildPartial() {
        S_GetMatchDetail result = new S_GetMatchDetail(this);
        int from_bitField0_ = bitField0_;
        result.matchId_ = matchId_;
        result.applyState_ = applyState_;
        result.total_ = total_;
        result.join_ = join_;
        result.cost_ = cost_;
        if (matchAwardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            matchAward_ = java.util.Collections.unmodifiableList(matchAward_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.matchAward_ = matchAward_;
        } else {
          result.matchAward_ = matchAwardBuilder_.build();
        }
        result.matchTime_ = matchTime_;
        result.isApply_ = isApply_;
        result.costType_ = costType_;
        result.enterLimit_ = enterLimit_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_GetMatchDetail) {
          return mergeFrom((S_GetMatchDetail)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_GetMatchDetail other) {
        if (other == S_GetMatchDetail.getDefaultInstance()) return this;
        if (other.getMatchId() != 0) {
          setMatchId(other.getMatchId());
        }
        if (other.getApplyState() != 0) {
          setApplyState(other.getApplyState());
        }
        if (other.getTotal() != 0) {
          setTotal(other.getTotal());
        }
        if (other.getJoin() != 0) {
          setJoin(other.getJoin());
        }
        if (other.getCost() != 0) {
          setCost(other.getCost());
        }
        if (matchAwardBuilder_ == null) {
          if (!other.matchAward_.isEmpty()) {
            if (matchAward_.isEmpty()) {
              matchAward_ = other.matchAward_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMatchAwardIsMutable();
              matchAward_.addAll(other.matchAward_);
            }
            onChanged();
          }
        } else {
          if (!other.matchAward_.isEmpty()) {
            if (matchAwardBuilder_.isEmpty()) {
              matchAwardBuilder_.dispose();
              matchAwardBuilder_ = null;
              matchAward_ = other.matchAward_;
              bitField0_ = (bitField0_ & ~0x00000001);
              matchAwardBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMatchAwardFieldBuilder() : null;
            } else {
              matchAwardBuilder_.addAllMessages(other.matchAward_);
            }
          }
        }
        if (!other.getMatchTime().isEmpty()) {
          matchTime_ = other.matchTime_;
          onChanged();
        }
        if (other.getIsApply() != false) {
          setIsApply(other.getIsApply());
        }
        if (other.getCostType() != 0) {
          setCostType(other.getCostType());
        }
        if (other.getEnterLimit() != 0) {
          setEnterLimit(other.getEnterLimit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_GetMatchDetail parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_GetMatchDetail) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int matchId_ ;
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder setMatchId(int value) {
        
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder clearMatchId() {
        
        matchId_ = 0;
        onChanged();
        return this;
      }

      private int applyState_ ;
      /**
       * <pre>
       ** 报名状态 0未报名 1已报名 
       * </pre>
       *
       * <code>int32 applyState = 2;</code>
       */
      public int getApplyState() {
        return applyState_;
      }
      /**
       * <pre>
       ** 报名状态 0未报名 1已报名 
       * </pre>
       *
       * <code>int32 applyState = 2;</code>
       */
      public Builder setApplyState(int value) {
        
        applyState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 报名状态 0未报名 1已报名 
       * </pre>
       *
       * <code>int32 applyState = 2;</code>
       */
      public Builder clearApplyState() {
        
        applyState_ = 0;
        onChanged();
        return this;
      }

      private int total_ ;
      /**
       * <pre>
       ** 赛事总人数 
       * </pre>
       *
       * <code>int32 total = 3;</code>
       */
      public int getTotal() {
        return total_;
      }
      /**
       * <pre>
       ** 赛事总人数 
       * </pre>
       *
       * <code>int32 total = 3;</code>
       */
      public Builder setTotal(int value) {
        
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事总人数 
       * </pre>
       *
       * <code>int32 total = 3;</code>
       */
      public Builder clearTotal() {
        
        total_ = 0;
        onChanged();
        return this;
      }

      private int join_ ;
      /**
       * <pre>
       ** 当前参赛人数 
       * </pre>
       *
       * <code>int32 join = 4;</code>
       */
      public int getJoin() {
        return join_;
      }
      /**
       * <pre>
       ** 当前参赛人数 
       * </pre>
       *
       * <code>int32 join = 4;</code>
       */
      public Builder setJoin(int value) {
        
        join_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前参赛人数 
       * </pre>
       *
       * <code>int32 join = 4;</code>
       */
      public Builder clearJoin() {
        
        join_ = 0;
        onChanged();
        return this;
      }

      private int cost_ ;
      /**
       * <pre>
       ** 报名费 
       * </pre>
       *
       * <code>int32 cost = 5;</code>
       */
      public int getCost() {
        return cost_;
      }
      /**
       * <pre>
       ** 报名费 
       * </pre>
       *
       * <code>int32 cost = 5;</code>
       */
      public Builder setCost(int value) {
        
        cost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 报名费 
       * </pre>
       *
       * <code>int32 cost = 5;</code>
       */
      public Builder clearCost() {
        
        cost_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<LandlordBase.MatchAward> matchAward_ =
        java.util.Collections.emptyList();
      private void ensureMatchAwardIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          matchAward_ = new java.util.ArrayList<LandlordBase.MatchAward>(matchAward_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder> matchAwardBuilder_;

      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public java.util.List<LandlordBase.MatchAward> getMatchAwardList() {
        if (matchAwardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(matchAward_);
        } else {
          return matchAwardBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public int getMatchAwardCount() {
        if (matchAwardBuilder_ == null) {
          return matchAward_.size();
        } else {
          return matchAwardBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public LandlordBase.MatchAward getMatchAward(int index) {
        if (matchAwardBuilder_ == null) {
          return matchAward_.get(index);
        } else {
          return matchAwardBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder setMatchAward(
          int index, LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.set(index, value);
          onChanged();
        } else {
          matchAwardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder setMatchAward(
          int index, LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.set(index, builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder addMatchAward(LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.add(value);
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder addMatchAward(
          int index, LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.add(index, value);
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder addMatchAward(
          LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.add(builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder addMatchAward(
          int index, LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.add(index, builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder addAllMatchAward(
          Iterable<? extends LandlordBase.MatchAward> values) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, matchAward_);
          onChanged();
        } else {
          matchAwardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder clearMatchAward() {
        if (matchAwardBuilder_ == null) {
          matchAward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          matchAwardBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public Builder removeMatchAward(int index) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.remove(index);
          onChanged();
        } else {
          matchAwardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public LandlordBase.MatchAward.Builder getMatchAwardBuilder(
          int index) {
        return getMatchAwardFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
          int index) {
        if (matchAwardBuilder_ == null) {
          return matchAward_.get(index);  } else {
          return matchAwardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
           getMatchAwardOrBuilderList() {
        if (matchAwardBuilder_ != null) {
          return matchAwardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(matchAward_);
        }
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public LandlordBase.MatchAward.Builder addMatchAwardBuilder() {
        return getMatchAwardFieldBuilder().addBuilder(
            LandlordBase.MatchAward.getDefaultInstance());
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public LandlordBase.MatchAward.Builder addMatchAwardBuilder(
          int index) {
        return getMatchAwardFieldBuilder().addBuilder(
            index, LandlordBase.MatchAward.getDefaultInstance());
      }
      /**
       * <pre>
       ** 赛事奖励列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 6;</code>
       */
      public java.util.List<LandlordBase.MatchAward.Builder>
           getMatchAwardBuilderList() {
        return getMatchAwardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder>
          getMatchAwardFieldBuilder() {
        if (matchAwardBuilder_ == null) {
          matchAwardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder>(
                  matchAward_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          matchAward_ = null;
        }
        return matchAwardBuilder_;
      }

      private Object matchTime_ = "";
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string match_time = 7;</code>
       */
      public String getMatchTime() {
        Object ref = matchTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          matchTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string match_time = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMatchTimeBytes() {
        Object ref = matchTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          matchTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string match_time = 7;</code>
       */
      public Builder setMatchTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        matchTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string match_time = 7;</code>
       */
      public Builder clearMatchTime() {
        
        matchTime_ = getDefaultInstance().getMatchTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事时间 
       * </pre>
       *
       * <code>string match_time = 7;</code>
       */
      public Builder setMatchTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        matchTime_ = value;
        onChanged();
        return this;
      }

      private boolean isApply_ ;
      /**
       * <pre>
       ** 是否可以报名 
       * </pre>
       *
       * <code>bool isApply = 8;</code>
       */
      public boolean getIsApply() {
        return isApply_;
      }
      /**
       * <pre>
       ** 是否可以报名 
       * </pre>
       *
       * <code>bool isApply = 8;</code>
       */
      public Builder setIsApply(boolean value) {
        
        isApply_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否可以报名 
       * </pre>
       *
       * <code>bool isApply = 8;</code>
       */
      public Builder clearIsApply() {
        
        isApply_ = false;
        onChanged();
        return this;
      }

      private int costType_ ;
      /**
       * <pre>
       ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
       * </pre>
       *
       * <code>int32 costType = 9;</code>
       */
      public int getCostType() {
        return costType_;
      }
      /**
       * <pre>
       ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
       * </pre>
       *
       * <code>int32 costType = 9;</code>
       */
      public Builder setCostType(int value) {
        
        costType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 报名费类型,1金币，2钻石，3奖杯,4报名卡
       * </pre>
       *
       * <code>int32 costType = 9;</code>
       */
      public Builder clearCostType() {
        
        costType_ = 0;
        onChanged();
        return this;
      }

      private int enterLimit_ ;
      /**
       * <pre>
       ** 报名限制 
       * </pre>
       *
       * <code>int32 enterLimit = 10;</code>
       */
      public int getEnterLimit() {
        return enterLimit_;
      }
      /**
       * <pre>
       ** 报名限制 
       * </pre>
       *
       * <code>int32 enterLimit = 10;</code>
       */
      public Builder setEnterLimit(int value) {
        
        enterLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 报名限制 
       * </pre>
       *
       * <code>int32 enterLimit = 10;</code>
       */
      public Builder clearEnterLimit() {
        
        enterLimit_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_GetMatchDetail)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_GetMatchDetail)
    private static final S_GetMatchDetail DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_GetMatchDetail();
    }

    public static S_GetMatchDetail getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_GetMatchDetail>
        PARSER = new com.google.protobuf.AbstractParser<S_GetMatchDetail>() {
      @Override
      public S_GetMatchDetail parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_GetMatchDetail(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_GetMatchDetail> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_GetMatchDetail> getParserForType() {
      return PARSER;
    }

    @Override
    public S_GetMatchDetail getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_GetMatchRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_GetMatchRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    java.util.List<LandlordBase.MatchRecord>
        getMatchRecordList();
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    LandlordBase.MatchRecord getMatchRecord(int index);
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    int getMatchRecordCount();
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    java.util.List<? extends LandlordBase.MatchRecordOrBuilder>
        getMatchRecordOrBuilderList();
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    LandlordBase.MatchRecordOrBuilder getMatchRecordOrBuilder(
        int index);
  }
  /**
   * <pre>
   ** Server 返回赛事记录信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_GetMatchRecord}
   */
  public  static final class S_GetMatchRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_GetMatchRecord)
      S_GetMatchRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_GetMatchRecord.newBuilder() to construct.
    private S_GetMatchRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_GetMatchRecord() {
      matchRecord_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_GetMatchRecord();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_GetMatchRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                matchRecord_ = new java.util.ArrayList<LandlordBase.MatchRecord>();
                mutable_bitField0_ |= 0x00000001;
              }
              matchRecord_.add(
                  input.readMessage(LandlordBase.MatchRecord.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          matchRecord_ = java.util.Collections.unmodifiableList(matchRecord_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_GetMatchRecord_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_GetMatchRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_GetMatchRecord.class, Builder.class);
    }

    public static final int MATCHRECORD_FIELD_NUMBER = 1;
    private java.util.List<LandlordBase.MatchRecord> matchRecord_;
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    public java.util.List<LandlordBase.MatchRecord> getMatchRecordList() {
      return matchRecord_;
    }
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    public java.util.List<? extends LandlordBase.MatchRecordOrBuilder>
        getMatchRecordOrBuilderList() {
      return matchRecord_;
    }
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    public int getMatchRecordCount() {
      return matchRecord_.size();
    }
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    public LandlordBase.MatchRecord getMatchRecord(int index) {
      return matchRecord_.get(index);
    }
    /**
     * <pre>
     ** 赛事历时记录 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
     */
    public LandlordBase.MatchRecordOrBuilder getMatchRecordOrBuilder(
        int index) {
      return matchRecord_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < matchRecord_.size(); i++) {
        output.writeMessage(1, matchRecord_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < matchRecord_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, matchRecord_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_GetMatchRecord)) {
        return super.equals(obj);
      }
      S_GetMatchRecord other = (S_GetMatchRecord) obj;

      if (!getMatchRecordList()
          .equals(other.getMatchRecordList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMatchRecordCount() > 0) {
        hash = (37 * hash) + MATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getMatchRecordList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_GetMatchRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GetMatchRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GetMatchRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetMatchRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetMatchRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_GetMatchRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GetMatchRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GetMatchRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_GetMatchRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回赛事记录信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_GetMatchRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_GetMatchRecord)
        S_GetMatchRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchRecord_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_GetMatchRecord.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_GetMatchRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMatchRecordFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (matchRecordBuilder_ == null) {
          matchRecord_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          matchRecordBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_GetMatchRecord_descriptor;
      }

      @Override
      public S_GetMatchRecord getDefaultInstanceForType() {
        return S_GetMatchRecord.getDefaultInstance();
      }

      @Override
      public S_GetMatchRecord build() {
        S_GetMatchRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_GetMatchRecord buildPartial() {
        S_GetMatchRecord result = new S_GetMatchRecord(this);
        int from_bitField0_ = bitField0_;
        if (matchRecordBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            matchRecord_ = java.util.Collections.unmodifiableList(matchRecord_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.matchRecord_ = matchRecord_;
        } else {
          result.matchRecord_ = matchRecordBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_GetMatchRecord) {
          return mergeFrom((S_GetMatchRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_GetMatchRecord other) {
        if (other == S_GetMatchRecord.getDefaultInstance()) return this;
        if (matchRecordBuilder_ == null) {
          if (!other.matchRecord_.isEmpty()) {
            if (matchRecord_.isEmpty()) {
              matchRecord_ = other.matchRecord_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMatchRecordIsMutable();
              matchRecord_.addAll(other.matchRecord_);
            }
            onChanged();
          }
        } else {
          if (!other.matchRecord_.isEmpty()) {
            if (matchRecordBuilder_.isEmpty()) {
              matchRecordBuilder_.dispose();
              matchRecordBuilder_ = null;
              matchRecord_ = other.matchRecord_;
              bitField0_ = (bitField0_ & ~0x00000001);
              matchRecordBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMatchRecordFieldBuilder() : null;
            } else {
              matchRecordBuilder_.addAllMessages(other.matchRecord_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_GetMatchRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_GetMatchRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<LandlordBase.MatchRecord> matchRecord_ =
        java.util.Collections.emptyList();
      private void ensureMatchRecordIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          matchRecord_ = new java.util.ArrayList<LandlordBase.MatchRecord>(matchRecord_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchRecord, LandlordBase.MatchRecord.Builder, LandlordBase.MatchRecordOrBuilder> matchRecordBuilder_;

      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public java.util.List<LandlordBase.MatchRecord> getMatchRecordList() {
        if (matchRecordBuilder_ == null) {
          return java.util.Collections.unmodifiableList(matchRecord_);
        } else {
          return matchRecordBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public int getMatchRecordCount() {
        if (matchRecordBuilder_ == null) {
          return matchRecord_.size();
        } else {
          return matchRecordBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public LandlordBase.MatchRecord getMatchRecord(int index) {
        if (matchRecordBuilder_ == null) {
          return matchRecord_.get(index);
        } else {
          return matchRecordBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder setMatchRecord(
          int index, LandlordBase.MatchRecord value) {
        if (matchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchRecordIsMutable();
          matchRecord_.set(index, value);
          onChanged();
        } else {
          matchRecordBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder setMatchRecord(
          int index, LandlordBase.MatchRecord.Builder builderForValue) {
        if (matchRecordBuilder_ == null) {
          ensureMatchRecordIsMutable();
          matchRecord_.set(index, builderForValue.build());
          onChanged();
        } else {
          matchRecordBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder addMatchRecord(LandlordBase.MatchRecord value) {
        if (matchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchRecordIsMutable();
          matchRecord_.add(value);
          onChanged();
        } else {
          matchRecordBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder addMatchRecord(
          int index, LandlordBase.MatchRecord value) {
        if (matchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchRecordIsMutable();
          matchRecord_.add(index, value);
          onChanged();
        } else {
          matchRecordBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder addMatchRecord(
          LandlordBase.MatchRecord.Builder builderForValue) {
        if (matchRecordBuilder_ == null) {
          ensureMatchRecordIsMutable();
          matchRecord_.add(builderForValue.build());
          onChanged();
        } else {
          matchRecordBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder addMatchRecord(
          int index, LandlordBase.MatchRecord.Builder builderForValue) {
        if (matchRecordBuilder_ == null) {
          ensureMatchRecordIsMutable();
          matchRecord_.add(index, builderForValue.build());
          onChanged();
        } else {
          matchRecordBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder addAllMatchRecord(
          Iterable<? extends LandlordBase.MatchRecord> values) {
        if (matchRecordBuilder_ == null) {
          ensureMatchRecordIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, matchRecord_);
          onChanged();
        } else {
          matchRecordBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder clearMatchRecord() {
        if (matchRecordBuilder_ == null) {
          matchRecord_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          matchRecordBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public Builder removeMatchRecord(int index) {
        if (matchRecordBuilder_ == null) {
          ensureMatchRecordIsMutable();
          matchRecord_.remove(index);
          onChanged();
        } else {
          matchRecordBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public LandlordBase.MatchRecord.Builder getMatchRecordBuilder(
          int index) {
        return getMatchRecordFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public LandlordBase.MatchRecordOrBuilder getMatchRecordOrBuilder(
          int index) {
        if (matchRecordBuilder_ == null) {
          return matchRecord_.get(index);  } else {
          return matchRecordBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public java.util.List<? extends LandlordBase.MatchRecordOrBuilder>
           getMatchRecordOrBuilderList() {
        if (matchRecordBuilder_ != null) {
          return matchRecordBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(matchRecord_);
        }
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public LandlordBase.MatchRecord.Builder addMatchRecordBuilder() {
        return getMatchRecordFieldBuilder().addBuilder(
            LandlordBase.MatchRecord.getDefaultInstance());
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public LandlordBase.MatchRecord.Builder addMatchRecordBuilder(
          int index) {
        return getMatchRecordFieldBuilder().addBuilder(
            index, LandlordBase.MatchRecord.getDefaultInstance());
      }
      /**
       * <pre>
       ** 赛事历时记录 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchRecord matchRecord = 1;</code>
       */
      public java.util.List<LandlordBase.MatchRecord.Builder>
           getMatchRecordBuilderList() {
        return getMatchRecordFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchRecord, LandlordBase.MatchRecord.Builder, LandlordBase.MatchRecordOrBuilder>
          getMatchRecordFieldBuilder() {
        if (matchRecordBuilder_ == null) {
          matchRecordBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.MatchRecord, LandlordBase.MatchRecord.Builder, LandlordBase.MatchRecordOrBuilder>(
                  matchRecord_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          matchRecord_ = null;
        }
        return matchRecordBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_GetMatchRecord)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_GetMatchRecord)
    private static final S_GetMatchRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_GetMatchRecord();
    }

    public static S_GetMatchRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_GetMatchRecord>
        PARSER = new com.google.protobuf.AbstractParser<S_GetMatchRecord>() {
      @Override
      public S_GetMatchRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_GetMatchRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_GetMatchRecord> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_GetMatchRecord> getParserForType() {
      return PARSER;
    }

    @Override
    public S_GetMatchRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_OwnMatchRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_OwnMatchRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    java.util.List<LandlordBase.OwnHistory>
        getHistoryListList();
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    LandlordBase.OwnHistory getHistoryList(int index);
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    int getHistoryListCount();
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    java.util.List<? extends LandlordBase.OwnHistoryOrBuilder>
        getHistoryListOrBuilderList();
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    LandlordBase.OwnHistoryOrBuilder getHistoryListOrBuilder(
        int index);
  }
  /**
   * <pre>
   ** Server 返回自己的记录信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_OwnMatchRecord}
   */
  public  static final class S_OwnMatchRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_OwnMatchRecord)
      S_OwnMatchRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_OwnMatchRecord.newBuilder() to construct.
    private S_OwnMatchRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_OwnMatchRecord() {
      historyList_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_OwnMatchRecord();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_OwnMatchRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                historyList_ = new java.util.ArrayList<LandlordBase.OwnHistory>();
                mutable_bitField0_ |= 0x00000001;
              }
              historyList_.add(
                  input.readMessage(LandlordBase.OwnHistory.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          historyList_ = java.util.Collections.unmodifiableList(historyList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_OwnMatchRecord_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_OwnMatchRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_OwnMatchRecord.class, Builder.class);
    }

    public static final int HISTORYLIST_FIELD_NUMBER = 1;
    private java.util.List<LandlordBase.OwnHistory> historyList_;
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    public java.util.List<LandlordBase.OwnHistory> getHistoryListList() {
      return historyList_;
    }
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    public java.util.List<? extends LandlordBase.OwnHistoryOrBuilder>
        getHistoryListOrBuilderList() {
      return historyList_;
    }
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    public int getHistoryListCount() {
      return historyList_.size();
    }
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    public LandlordBase.OwnHistory getHistoryList(int index) {
      return historyList_.get(index);
    }
    /**
     * <pre>
     ** 返回记录列表 
     * </pre>
     *
     * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
     */
    public LandlordBase.OwnHistoryOrBuilder getHistoryListOrBuilder(
        int index) {
      return historyList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < historyList_.size(); i++) {
        output.writeMessage(1, historyList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < historyList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, historyList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_OwnMatchRecord)) {
        return super.equals(obj);
      }
      S_OwnMatchRecord other = (S_OwnMatchRecord) obj;

      if (!getHistoryListList()
          .equals(other.getHistoryListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHistoryListCount() > 0) {
        hash = (37 * hash) + HISTORYLIST_FIELD_NUMBER;
        hash = (53 * hash) + getHistoryListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_OwnMatchRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_OwnMatchRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_OwnMatchRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_OwnMatchRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_OwnMatchRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_OwnMatchRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_OwnMatchRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_OwnMatchRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_OwnMatchRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_OwnMatchRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_OwnMatchRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_OwnMatchRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_OwnMatchRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回自己的记录信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_OwnMatchRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_OwnMatchRecord)
        S_OwnMatchRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_OwnMatchRecord_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_OwnMatchRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_OwnMatchRecord.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_OwnMatchRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHistoryListFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (historyListBuilder_ == null) {
          historyList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          historyListBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_OwnMatchRecord_descriptor;
      }

      @Override
      public S_OwnMatchRecord getDefaultInstanceForType() {
        return S_OwnMatchRecord.getDefaultInstance();
      }

      @Override
      public S_OwnMatchRecord build() {
        S_OwnMatchRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_OwnMatchRecord buildPartial() {
        S_OwnMatchRecord result = new S_OwnMatchRecord(this);
        int from_bitField0_ = bitField0_;
        if (historyListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            historyList_ = java.util.Collections.unmodifiableList(historyList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.historyList_ = historyList_;
        } else {
          result.historyList_ = historyListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_OwnMatchRecord) {
          return mergeFrom((S_OwnMatchRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_OwnMatchRecord other) {
        if (other == S_OwnMatchRecord.getDefaultInstance()) return this;
        if (historyListBuilder_ == null) {
          if (!other.historyList_.isEmpty()) {
            if (historyList_.isEmpty()) {
              historyList_ = other.historyList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHistoryListIsMutable();
              historyList_.addAll(other.historyList_);
            }
            onChanged();
          }
        } else {
          if (!other.historyList_.isEmpty()) {
            if (historyListBuilder_.isEmpty()) {
              historyListBuilder_.dispose();
              historyListBuilder_ = null;
              historyList_ = other.historyList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              historyListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHistoryListFieldBuilder() : null;
            } else {
              historyListBuilder_.addAllMessages(other.historyList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_OwnMatchRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_OwnMatchRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<LandlordBase.OwnHistory> historyList_ =
        java.util.Collections.emptyList();
      private void ensureHistoryListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          historyList_ = new java.util.ArrayList<LandlordBase.OwnHistory>(historyList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.OwnHistory, LandlordBase.OwnHistory.Builder, LandlordBase.OwnHistoryOrBuilder> historyListBuilder_;

      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public java.util.List<LandlordBase.OwnHistory> getHistoryListList() {
        if (historyListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(historyList_);
        } else {
          return historyListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public int getHistoryListCount() {
        if (historyListBuilder_ == null) {
          return historyList_.size();
        } else {
          return historyListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public LandlordBase.OwnHistory getHistoryList(int index) {
        if (historyListBuilder_ == null) {
          return historyList_.get(index);
        } else {
          return historyListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder setHistoryList(
          int index, LandlordBase.OwnHistory value) {
        if (historyListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryListIsMutable();
          historyList_.set(index, value);
          onChanged();
        } else {
          historyListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder setHistoryList(
          int index, LandlordBase.OwnHistory.Builder builderForValue) {
        if (historyListBuilder_ == null) {
          ensureHistoryListIsMutable();
          historyList_.set(index, builderForValue.build());
          onChanged();
        } else {
          historyListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder addHistoryList(LandlordBase.OwnHistory value) {
        if (historyListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryListIsMutable();
          historyList_.add(value);
          onChanged();
        } else {
          historyListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder addHistoryList(
          int index, LandlordBase.OwnHistory value) {
        if (historyListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryListIsMutable();
          historyList_.add(index, value);
          onChanged();
        } else {
          historyListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder addHistoryList(
          LandlordBase.OwnHistory.Builder builderForValue) {
        if (historyListBuilder_ == null) {
          ensureHistoryListIsMutable();
          historyList_.add(builderForValue.build());
          onChanged();
        } else {
          historyListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder addHistoryList(
          int index, LandlordBase.OwnHistory.Builder builderForValue) {
        if (historyListBuilder_ == null) {
          ensureHistoryListIsMutable();
          historyList_.add(index, builderForValue.build());
          onChanged();
        } else {
          historyListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder addAllHistoryList(
          Iterable<? extends LandlordBase.OwnHistory> values) {
        if (historyListBuilder_ == null) {
          ensureHistoryListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, historyList_);
          onChanged();
        } else {
          historyListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder clearHistoryList() {
        if (historyListBuilder_ == null) {
          historyList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          historyListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public Builder removeHistoryList(int index) {
        if (historyListBuilder_ == null) {
          ensureHistoryListIsMutable();
          historyList_.remove(index);
          onChanged();
        } else {
          historyListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public LandlordBase.OwnHistory.Builder getHistoryListBuilder(
          int index) {
        return getHistoryListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public LandlordBase.OwnHistoryOrBuilder getHistoryListOrBuilder(
          int index) {
        if (historyListBuilder_ == null) {
          return historyList_.get(index);  } else {
          return historyListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public java.util.List<? extends LandlordBase.OwnHistoryOrBuilder>
           getHistoryListOrBuilderList() {
        if (historyListBuilder_ != null) {
          return historyListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(historyList_);
        }
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public LandlordBase.OwnHistory.Builder addHistoryListBuilder() {
        return getHistoryListFieldBuilder().addBuilder(
            LandlordBase.OwnHistory.getDefaultInstance());
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public LandlordBase.OwnHistory.Builder addHistoryListBuilder(
          int index) {
        return getHistoryListFieldBuilder().addBuilder(
            index, LandlordBase.OwnHistory.getDefaultInstance());
      }
      /**
       * <pre>
       ** 返回记录列表 
       * </pre>
       *
       * <code>repeated .pb_landlord.OwnHistory historyList = 1;</code>
       */
      public java.util.List<LandlordBase.OwnHistory.Builder>
           getHistoryListBuilderList() {
        return getHistoryListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.OwnHistory, LandlordBase.OwnHistory.Builder, LandlordBase.OwnHistoryOrBuilder>
          getHistoryListFieldBuilder() {
        if (historyListBuilder_ == null) {
          historyListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.OwnHistory, LandlordBase.OwnHistory.Builder, LandlordBase.OwnHistoryOrBuilder>(
                  historyList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          historyList_ = null;
        }
        return historyListBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_OwnMatchRecord)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_OwnMatchRecord)
    private static final S_OwnMatchRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_OwnMatchRecord();
    }

    public static S_OwnMatchRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_OwnMatchRecord>
        PARSER = new com.google.protobuf.AbstractParser<S_OwnMatchRecord>() {
      @Override
      public S_OwnMatchRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_OwnMatchRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_OwnMatchRecord> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_OwnMatchRecord> getParserForType() {
      return PARSER;
    }

    @Override
    public S_OwnMatchRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_MatchApplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_MatchApply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     ** 货币最总数量 
     * </pre>
     *
     * <code>int32 count = 2;</code>
     */
    int getCount();
  }
  /**
   * <pre>
   ** Server 返回赛事报名结果 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_MatchApply}
   */
  public  static final class S_MatchApply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_MatchApply)
      S_MatchApplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_MatchApply.newBuilder() to construct.
    private S_MatchApply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_MatchApply() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_MatchApply();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_MatchApply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              type_ = input.readInt32();
              break;
            }
            case 16: {

              count_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_MatchApply_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_MatchApply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_MatchApply.class, Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <pre>
     ** 货币最总数量 
     * </pre>
     *
     * <code>int32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeInt32(1, type_);
      }
      if (count_ != 0) {
        output.writeInt32(2, count_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_MatchApply)) {
        return super.equals(obj);
      }
      S_MatchApply other = (S_MatchApply) obj;

      if (getType()
          != other.getType()) return false;
      if (getCount()
          != other.getCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_MatchApply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchApply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchApply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchApply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchApply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchApply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchApply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_MatchApply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_MatchApply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_MatchApply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_MatchApply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_MatchApply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_MatchApply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回赛事报名结果 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_MatchApply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_MatchApply)
        S_MatchApplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchApply_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchApply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_MatchApply.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_MatchApply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        count_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchApply_descriptor;
      }

      @Override
      public S_MatchApply getDefaultInstanceForType() {
        return S_MatchApply.getDefaultInstance();
      }

      @Override
      public S_MatchApply build() {
        S_MatchApply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_MatchApply buildPartial() {
        S_MatchApply result = new S_MatchApply(this);
        result.type_ = type_;
        result.count_ = count_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_MatchApply) {
          return mergeFrom((S_MatchApply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_MatchApply other) {
        if (other == S_MatchApply.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_MatchApply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_MatchApply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <pre>
       ** 货币最总数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <pre>
       ** 货币最总数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 货币最总数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_MatchApply)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_MatchApply)
    private static final S_MatchApply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_MatchApply();
    }

    public static S_MatchApply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_MatchApply>
        PARSER = new com.google.protobuf.AbstractParser<S_MatchApply>() {
      @Override
      public S_MatchApply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_MatchApply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_MatchApply> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_MatchApply> getParserForType() {
      return PARSER;
    }

    @Override
    public S_MatchApply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_MatchCancelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_MatchCancel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     ** 货币最总数量 
     * </pre>
     *
     * <code>int32 count = 2;</code>
     */
    int getCount();
  }
  /**
   * <pre>
   ** Server 返回取消赛事 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_MatchCancel}
   */
  public  static final class S_MatchCancel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_MatchCancel)
      S_MatchCancelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_MatchCancel.newBuilder() to construct.
    private S_MatchCancel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_MatchCancel() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_MatchCancel();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_MatchCancel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              type_ = input.readInt32();
              break;
            }
            case 16: {

              count_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_MatchCancel_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_MatchCancel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_MatchCancel.class, Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <pre>
     ** 货币最总数量 
     * </pre>
     *
     * <code>int32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeInt32(1, type_);
      }
      if (count_ != 0) {
        output.writeInt32(2, count_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_MatchCancel)) {
        return super.equals(obj);
      }
      S_MatchCancel other = (S_MatchCancel) obj;

      if (getType()
          != other.getType()) return false;
      if (getCount()
          != other.getCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_MatchCancel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchCancel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchCancel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchCancel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchCancel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchCancel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchCancel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_MatchCancel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_MatchCancel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_MatchCancel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_MatchCancel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_MatchCancel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_MatchCancel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回取消赛事 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_MatchCancel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_MatchCancel)
        S_MatchCancelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchCancel_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchCancel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_MatchCancel.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_MatchCancel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        count_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchCancel_descriptor;
      }

      @Override
      public S_MatchCancel getDefaultInstanceForType() {
        return S_MatchCancel.getDefaultInstance();
      }

      @Override
      public S_MatchCancel build() {
        S_MatchCancel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_MatchCancel buildPartial() {
        S_MatchCancel result = new S_MatchCancel(this);
        result.type_ = type_;
        result.count_ = count_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_MatchCancel) {
          return mergeFrom((S_MatchCancel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_MatchCancel other) {
        if (other == S_MatchCancel.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_MatchCancel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_MatchCancel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 货币类型 1金币，2钻石，3奖杯，4报名卡 
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <pre>
       ** 货币最总数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <pre>
       ** 货币最总数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 货币最总数量 
       * </pre>
       *
       * <code>int32 count = 2;</code>
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_MatchCancel)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_MatchCancel)
    private static final S_MatchCancel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_MatchCancel();
    }

    public static S_MatchCancel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_MatchCancel>
        PARSER = new com.google.protobuf.AbstractParser<S_MatchCancel>() {
      @Override
      public S_MatchCancel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_MatchCancel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_MatchCancel> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_MatchCancel> getParserForType() {
      return PARSER;
    }

    @Override
    public S_MatchCancel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_MatchConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_MatchConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 比赛id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    int getMatchId();

    /**
     * <pre>
     ** 赛事底分 
     * </pre>
     *
     * <code>int32 basePoint = 2;</code>
     */
    int getBasePoint();

    /**
     * <pre>
     ** 当前轮数 
     * </pre>
     *
     * <code>int32 curRound = 3;</code>
     */
    int getCurRound();

    /**
     * <pre>
     ** 赛事轮数 
     * </pre>
     *
     * <code>int32 totalRound = 4;</code>
     */
    int getTotalRound();

    /**
     * <pre>
     ** 如果还未开赛，返回比赛倒计时 
     * </pre>
     *
     * <code>int32 timeDown = 5;</code>
     */
    int getTimeDown();

    /**
     * <pre>
     ** 如果已经开赛，返回玩家房间号 
     * </pre>
     *
     * <code>int32 roomId = 6;</code>
     */
    int getRoomId();

    /**
     * <pre>
     ** 如果已经开赛，返回游戏服务器ip 
     * </pre>
     *
     * <code>string url = 7;</code>
     */
    String getUrl();
    /**
     * <pre>
     ** 如果已经开赛，返回游戏服务器ip 
     * </pre>
     *
     * <code>string url = 7;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();

    /**
     * <pre>
     ** 是否比赛结束 
     * </pre>
     *
     * <code>bool isMatchOver = 8;</code>
     */
    boolean getIsMatchOver();
  }
  /**
   * <pre>
   ** Server 返回赛事配置 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_MatchConfig}
   */
  public  static final class S_MatchConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_MatchConfig)
      S_MatchConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_MatchConfig.newBuilder() to construct.
    private S_MatchConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_MatchConfig() {
      url_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_MatchConfig();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_MatchConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              matchId_ = input.readInt32();
              break;
            }
            case 16: {

              basePoint_ = input.readInt32();
              break;
            }
            case 24: {

              curRound_ = input.readInt32();
              break;
            }
            case 32: {

              totalRound_ = input.readInt32();
              break;
            }
            case 40: {

              timeDown_ = input.readInt32();
              break;
            }
            case 48: {

              roomId_ = input.readInt32();
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              url_ = s;
              break;
            }
            case 64: {

              isMatchOver_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_MatchConfig_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_MatchConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_MatchConfig.class, Builder.class);
    }

    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <pre>
     ** 比赛id 
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    public int getMatchId() {
      return matchId_;
    }

    public static final int BASEPOINT_FIELD_NUMBER = 2;
    private int basePoint_;
    /**
     * <pre>
     ** 赛事底分 
     * </pre>
     *
     * <code>int32 basePoint = 2;</code>
     */
    public int getBasePoint() {
      return basePoint_;
    }

    public static final int CURROUND_FIELD_NUMBER = 3;
    private int curRound_;
    /**
     * <pre>
     ** 当前轮数 
     * </pre>
     *
     * <code>int32 curRound = 3;</code>
     */
    public int getCurRound() {
      return curRound_;
    }

    public static final int TOTALROUND_FIELD_NUMBER = 4;
    private int totalRound_;
    /**
     * <pre>
     ** 赛事轮数 
     * </pre>
     *
     * <code>int32 totalRound = 4;</code>
     */
    public int getTotalRound() {
      return totalRound_;
    }

    public static final int TIMEDOWN_FIELD_NUMBER = 5;
    private int timeDown_;
    /**
     * <pre>
     ** 如果还未开赛，返回比赛倒计时 
     * </pre>
     *
     * <code>int32 timeDown = 5;</code>
     */
    public int getTimeDown() {
      return timeDown_;
    }

    public static final int ROOMID_FIELD_NUMBER = 6;
    private int roomId_;
    /**
     * <pre>
     ** 如果已经开赛，返回玩家房间号 
     * </pre>
     *
     * <code>int32 roomId = 6;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    public static final int URL_FIELD_NUMBER = 7;
    private volatile Object url_;
    /**
     * <pre>
     ** 如果已经开赛，返回游戏服务器ip 
     * </pre>
     *
     * <code>string url = 7;</code>
     */
    public String getUrl() {
      Object ref = url_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        url_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 如果已经开赛，返回游戏服务器ip 
     * </pre>
     *
     * <code>string url = 7;</code>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      Object ref = url_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISMATCHOVER_FIELD_NUMBER = 8;
    private boolean isMatchOver_;
    /**
     * <pre>
     ** 是否比赛结束 
     * </pre>
     *
     * <code>bool isMatchOver = 8;</code>
     */
    public boolean getIsMatchOver() {
      return isMatchOver_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (matchId_ != 0) {
        output.writeInt32(1, matchId_);
      }
      if (basePoint_ != 0) {
        output.writeInt32(2, basePoint_);
      }
      if (curRound_ != 0) {
        output.writeInt32(3, curRound_);
      }
      if (totalRound_ != 0) {
        output.writeInt32(4, totalRound_);
      }
      if (timeDown_ != 0) {
        output.writeInt32(5, timeDown_);
      }
      if (roomId_ != 0) {
        output.writeInt32(6, roomId_);
      }
      if (!getUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, url_);
      }
      if (isMatchOver_ != false) {
        output.writeBool(8, isMatchOver_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (matchId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchId_);
      }
      if (basePoint_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, basePoint_);
      }
      if (curRound_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, curRound_);
      }
      if (totalRound_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalRound_);
      }
      if (timeDown_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, timeDown_);
      }
      if (roomId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, roomId_);
      }
      if (!getUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, url_);
      }
      if (isMatchOver_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isMatchOver_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_MatchConfig)) {
        return super.equals(obj);
      }
      S_MatchConfig other = (S_MatchConfig) obj;

      if (getMatchId()
          != other.getMatchId()) return false;
      if (getBasePoint()
          != other.getBasePoint()) return false;
      if (getCurRound()
          != other.getCurRound()) return false;
      if (getTotalRound()
          != other.getTotalRound()) return false;
      if (getTimeDown()
          != other.getTimeDown()) return false;
      if (getRoomId()
          != other.getRoomId()) return false;
      if (!getUrl()
          .equals(other.getUrl())) return false;
      if (getIsMatchOver()
          != other.getIsMatchOver()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MATCHID_FIELD_NUMBER;
      hash = (53 * hash) + getMatchId();
      hash = (37 * hash) + BASEPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getBasePoint();
      hash = (37 * hash) + CURROUND_FIELD_NUMBER;
      hash = (53 * hash) + getCurRound();
      hash = (37 * hash) + TOTALROUND_FIELD_NUMBER;
      hash = (53 * hash) + getTotalRound();
      hash = (37 * hash) + TIMEDOWN_FIELD_NUMBER;
      hash = (53 * hash) + getTimeDown();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId();
      hash = (37 * hash) + URL_FIELD_NUMBER;
      hash = (53 * hash) + getUrl().hashCode();
      hash = (37 * hash) + ISMATCHOVER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsMatchOver());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_MatchConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_MatchConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_MatchConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_MatchConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_MatchConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_MatchConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_MatchConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回赛事配置 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_MatchConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_MatchConfig)
        S_MatchConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchConfig_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_MatchConfig.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_MatchConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        matchId_ = 0;

        basePoint_ = 0;

        curRound_ = 0;

        totalRound_ = 0;

        timeDown_ = 0;

        roomId_ = 0;

        url_ = "";

        isMatchOver_ = false;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchConfig_descriptor;
      }

      @Override
      public S_MatchConfig getDefaultInstanceForType() {
        return S_MatchConfig.getDefaultInstance();
      }

      @Override
      public S_MatchConfig build() {
        S_MatchConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_MatchConfig buildPartial() {
        S_MatchConfig result = new S_MatchConfig(this);
        result.matchId_ = matchId_;
        result.basePoint_ = basePoint_;
        result.curRound_ = curRound_;
        result.totalRound_ = totalRound_;
        result.timeDown_ = timeDown_;
        result.roomId_ = roomId_;
        result.url_ = url_;
        result.isMatchOver_ = isMatchOver_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_MatchConfig) {
          return mergeFrom((S_MatchConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_MatchConfig other) {
        if (other == S_MatchConfig.getDefaultInstance()) return this;
        if (other.getMatchId() != 0) {
          setMatchId(other.getMatchId());
        }
        if (other.getBasePoint() != 0) {
          setBasePoint(other.getBasePoint());
        }
        if (other.getCurRound() != 0) {
          setCurRound(other.getCurRound());
        }
        if (other.getTotalRound() != 0) {
          setTotalRound(other.getTotalRound());
        }
        if (other.getTimeDown() != 0) {
          setTimeDown(other.getTimeDown());
        }
        if (other.getRoomId() != 0) {
          setRoomId(other.getRoomId());
        }
        if (!other.getUrl().isEmpty()) {
          url_ = other.url_;
          onChanged();
        }
        if (other.getIsMatchOver() != false) {
          setIsMatchOver(other.getIsMatchOver());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_MatchConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_MatchConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int matchId_ ;
      /**
       * <pre>
       ** 比赛id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <pre>
       ** 比赛id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder setMatchId(int value) {
        
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 比赛id 
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder clearMatchId() {
        
        matchId_ = 0;
        onChanged();
        return this;
      }

      private int basePoint_ ;
      /**
       * <pre>
       ** 赛事底分 
       * </pre>
       *
       * <code>int32 basePoint = 2;</code>
       */
      public int getBasePoint() {
        return basePoint_;
      }
      /**
       * <pre>
       ** 赛事底分 
       * </pre>
       *
       * <code>int32 basePoint = 2;</code>
       */
      public Builder setBasePoint(int value) {
        
        basePoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事底分 
       * </pre>
       *
       * <code>int32 basePoint = 2;</code>
       */
      public Builder clearBasePoint() {
        
        basePoint_ = 0;
        onChanged();
        return this;
      }

      private int curRound_ ;
      /**
       * <pre>
       ** 当前轮数 
       * </pre>
       *
       * <code>int32 curRound = 3;</code>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <pre>
       ** 当前轮数 
       * </pre>
       *
       * <code>int32 curRound = 3;</code>
       */
      public Builder setCurRound(int value) {
        
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 当前轮数 
       * </pre>
       *
       * <code>int32 curRound = 3;</code>
       */
      public Builder clearCurRound() {
        
        curRound_ = 0;
        onChanged();
        return this;
      }

      private int totalRound_ ;
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 totalRound = 4;</code>
       */
      public int getTotalRound() {
        return totalRound_;
      }
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 totalRound = 4;</code>
       */
      public Builder setTotalRound(int value) {
        
        totalRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 赛事轮数 
       * </pre>
       *
       * <code>int32 totalRound = 4;</code>
       */
      public Builder clearTotalRound() {
        
        totalRound_ = 0;
        onChanged();
        return this;
      }

      private int timeDown_ ;
      /**
       * <pre>
       ** 如果还未开赛，返回比赛倒计时 
       * </pre>
       *
       * <code>int32 timeDown = 5;</code>
       */
      public int getTimeDown() {
        return timeDown_;
      }
      /**
       * <pre>
       ** 如果还未开赛，返回比赛倒计时 
       * </pre>
       *
       * <code>int32 timeDown = 5;</code>
       */
      public Builder setTimeDown(int value) {
        
        timeDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 如果还未开赛，返回比赛倒计时 
       * </pre>
       *
       * <code>int32 timeDown = 5;</code>
       */
      public Builder clearTimeDown() {
        
        timeDown_ = 0;
        onChanged();
        return this;
      }

      private int roomId_ ;
      /**
       * <pre>
       ** 如果已经开赛，返回玩家房间号 
       * </pre>
       *
       * <code>int32 roomId = 6;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <pre>
       ** 如果已经开赛，返回玩家房间号 
       * </pre>
       *
       * <code>int32 roomId = 6;</code>
       */
      public Builder setRoomId(int value) {
        
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 如果已经开赛，返回玩家房间号 
       * </pre>
       *
       * <code>int32 roomId = 6;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = 0;
        onChanged();
        return this;
      }

      private Object url_ = "";
      /**
       * <pre>
       ** 如果已经开赛，返回游戏服务器ip 
       * </pre>
       *
       * <code>string url = 7;</code>
       */
      public String getUrl() {
        Object ref = url_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          url_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 如果已经开赛，返回游戏服务器ip 
       * </pre>
       *
       * <code>string url = 7;</code>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 如果已经开赛，返回游戏服务器ip 
       * </pre>
       *
       * <code>string url = 7;</code>
       */
      public Builder setUrl(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        url_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 如果已经开赛，返回游戏服务器ip 
       * </pre>
       *
       * <code>string url = 7;</code>
       */
      public Builder clearUrl() {
        
        url_ = getDefaultInstance().getUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 如果已经开赛，返回游戏服务器ip 
       * </pre>
       *
       * <code>string url = 7;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        url_ = value;
        onChanged();
        return this;
      }

      private boolean isMatchOver_ ;
      /**
       * <pre>
       ** 是否比赛结束 
       * </pre>
       *
       * <code>bool isMatchOver = 8;</code>
       */
      public boolean getIsMatchOver() {
        return isMatchOver_;
      }
      /**
       * <pre>
       ** 是否比赛结束 
       * </pre>
       *
       * <code>bool isMatchOver = 8;</code>
       */
      public Builder setIsMatchOver(boolean value) {
        
        isMatchOver_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否比赛结束 
       * </pre>
       *
       * <code>bool isMatchOver = 8;</code>
       */
      public Builder clearIsMatchOver() {
        
        isMatchOver_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_MatchConfig)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_MatchConfig)
    private static final S_MatchConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_MatchConfig();
    }

    public static S_MatchConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_MatchConfig>
        PARSER = new com.google.protobuf.AbstractParser<S_MatchConfig>() {
      @Override
      public S_MatchConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_MatchConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_MatchConfig> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_MatchConfig> getParserForType() {
      return PARSER;
    }

    @Override
    public S_MatchConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_MatchScoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_MatchScore)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    java.util.List<LandlordBase.MatchAward>
        getMatchAwardList();
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    LandlordBase.MatchAward getMatchAward(int index);
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    int getMatchAwardCount();
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
        getMatchAwardOrBuilderList();
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
        int index);

    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    java.util.List<LandlordBase.PlayerScore>
        getScoreListList();
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    LandlordBase.PlayerScore getScoreList(int index);
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    int getScoreListCount();
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    java.util.List<? extends LandlordBase.PlayerScoreOrBuilder>
        getScoreListOrBuilderList();
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    LandlordBase.PlayerScoreOrBuilder getScoreListOrBuilder(
        int index);
  }
  /**
   * <pre>
   ** Server 返回比赛中玩家积分头像等信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_MatchScore}
   */
  public  static final class S_MatchScore extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_MatchScore)
      S_MatchScoreOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_MatchScore.newBuilder() to construct.
    private S_MatchScore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_MatchScore() {
      matchAward_ = java.util.Collections.emptyList();
      scoreList_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_MatchScore();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_MatchScore(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                matchAward_ = new java.util.ArrayList<LandlordBase.MatchAward>();
                mutable_bitField0_ |= 0x00000001;
              }
              matchAward_.add(
                  input.readMessage(LandlordBase.MatchAward.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                scoreList_ = new java.util.ArrayList<LandlordBase.PlayerScore>();
                mutable_bitField0_ |= 0x00000002;
              }
              scoreList_.add(
                  input.readMessage(LandlordBase.PlayerScore.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          matchAward_ = java.util.Collections.unmodifiableList(matchAward_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          scoreList_ = java.util.Collections.unmodifiableList(scoreList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_MatchScore_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_MatchScore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_MatchScore.class, Builder.class);
    }

    public static final int MATCHAWARD_FIELD_NUMBER = 1;
    private java.util.List<LandlordBase.MatchAward> matchAward_;
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public java.util.List<LandlordBase.MatchAward> getMatchAwardList() {
      return matchAward_;
    }
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
        getMatchAwardOrBuilderList() {
      return matchAward_;
    }
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public int getMatchAwardCount() {
      return matchAward_.size();
    }
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public LandlordBase.MatchAward getMatchAward(int index) {
      return matchAward_.get(index);
    }
    /**
     * <pre>
     ** 请求type为1，返回赛事奖励列表配置 
     * </pre>
     *
     * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
     */
    public LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
        int index) {
      return matchAward_.get(index);
    }

    public static final int SCORELIST_FIELD_NUMBER = 2;
    private java.util.List<LandlordBase.PlayerScore> scoreList_;
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public java.util.List<LandlordBase.PlayerScore> getScoreListList() {
      return scoreList_;
    }
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public java.util.List<? extends LandlordBase.PlayerScoreOrBuilder>
        getScoreListOrBuilderList() {
      return scoreList_;
    }
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public int getScoreListCount() {
      return scoreList_.size();
    }
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public LandlordBase.PlayerScore getScoreList(int index) {
      return scoreList_.get(index);
    }
    /**
     * <pre>
     ** 玩家比赛中的信息 
     * </pre>
     *
     * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
     */
    public LandlordBase.PlayerScoreOrBuilder getScoreListOrBuilder(
        int index) {
      return scoreList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < matchAward_.size(); i++) {
        output.writeMessage(1, matchAward_.get(i));
      }
      for (int i = 0; i < scoreList_.size(); i++) {
        output.writeMessage(2, scoreList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < matchAward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, matchAward_.get(i));
      }
      for (int i = 0; i < scoreList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, scoreList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_MatchScore)) {
        return super.equals(obj);
      }
      S_MatchScore other = (S_MatchScore) obj;

      if (!getMatchAwardList()
          .equals(other.getMatchAwardList())) return false;
      if (!getScoreListList()
          .equals(other.getScoreListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMatchAwardCount() > 0) {
        hash = (37 * hash) + MATCHAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getMatchAwardList().hashCode();
      }
      if (getScoreListCount() > 0) {
        hash = (37 * hash) + SCORELIST_FIELD_NUMBER;
        hash = (53 * hash) + getScoreListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_MatchScore parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchScore parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchScore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchScore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchScore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_MatchScore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_MatchScore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_MatchScore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_MatchScore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_MatchScore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_MatchScore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_MatchScore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_MatchScore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回比赛中玩家积分头像等信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_MatchScore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_MatchScore)
        S_MatchScoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchScore_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_MatchScore.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_MatchScore.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMatchAwardFieldBuilder();
          getScoreListFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (matchAwardBuilder_ == null) {
          matchAward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          matchAwardBuilder_.clear();
        }
        if (scoreListBuilder_ == null) {
          scoreList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          scoreListBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_MatchScore_descriptor;
      }

      @Override
      public S_MatchScore getDefaultInstanceForType() {
        return S_MatchScore.getDefaultInstance();
      }

      @Override
      public S_MatchScore build() {
        S_MatchScore result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_MatchScore buildPartial() {
        S_MatchScore result = new S_MatchScore(this);
        int from_bitField0_ = bitField0_;
        if (matchAwardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            matchAward_ = java.util.Collections.unmodifiableList(matchAward_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.matchAward_ = matchAward_;
        } else {
          result.matchAward_ = matchAwardBuilder_.build();
        }
        if (scoreListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            scoreList_ = java.util.Collections.unmodifiableList(scoreList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.scoreList_ = scoreList_;
        } else {
          result.scoreList_ = scoreListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_MatchScore) {
          return mergeFrom((S_MatchScore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_MatchScore other) {
        if (other == S_MatchScore.getDefaultInstance()) return this;
        if (matchAwardBuilder_ == null) {
          if (!other.matchAward_.isEmpty()) {
            if (matchAward_.isEmpty()) {
              matchAward_ = other.matchAward_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMatchAwardIsMutable();
              matchAward_.addAll(other.matchAward_);
            }
            onChanged();
          }
        } else {
          if (!other.matchAward_.isEmpty()) {
            if (matchAwardBuilder_.isEmpty()) {
              matchAwardBuilder_.dispose();
              matchAwardBuilder_ = null;
              matchAward_ = other.matchAward_;
              bitField0_ = (bitField0_ & ~0x00000001);
              matchAwardBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMatchAwardFieldBuilder() : null;
            } else {
              matchAwardBuilder_.addAllMessages(other.matchAward_);
            }
          }
        }
        if (scoreListBuilder_ == null) {
          if (!other.scoreList_.isEmpty()) {
            if (scoreList_.isEmpty()) {
              scoreList_ = other.scoreList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureScoreListIsMutable();
              scoreList_.addAll(other.scoreList_);
            }
            onChanged();
          }
        } else {
          if (!other.scoreList_.isEmpty()) {
            if (scoreListBuilder_.isEmpty()) {
              scoreListBuilder_.dispose();
              scoreListBuilder_ = null;
              scoreList_ = other.scoreList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              scoreListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getScoreListFieldBuilder() : null;
            } else {
              scoreListBuilder_.addAllMessages(other.scoreList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_MatchScore parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_MatchScore) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<LandlordBase.MatchAward> matchAward_ =
        java.util.Collections.emptyList();
      private void ensureMatchAwardIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          matchAward_ = new java.util.ArrayList<LandlordBase.MatchAward>(matchAward_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder> matchAwardBuilder_;

      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public java.util.List<LandlordBase.MatchAward> getMatchAwardList() {
        if (matchAwardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(matchAward_);
        } else {
          return matchAwardBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public int getMatchAwardCount() {
        if (matchAwardBuilder_ == null) {
          return matchAward_.size();
        } else {
          return matchAwardBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAward getMatchAward(int index) {
        if (matchAwardBuilder_ == null) {
          return matchAward_.get(index);
        } else {
          return matchAwardBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder setMatchAward(
          int index, LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.set(index, value);
          onChanged();
        } else {
          matchAwardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder setMatchAward(
          int index, LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.set(index, builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addMatchAward(LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.add(value);
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addMatchAward(
          int index, LandlordBase.MatchAward value) {
        if (matchAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchAwardIsMutable();
          matchAward_.add(index, value);
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addMatchAward(
          LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.add(builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addMatchAward(
          int index, LandlordBase.MatchAward.Builder builderForValue) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.add(index, builderForValue.build());
          onChanged();
        } else {
          matchAwardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder addAllMatchAward(
          Iterable<? extends LandlordBase.MatchAward> values) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, matchAward_);
          onChanged();
        } else {
          matchAwardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder clearMatchAward() {
        if (matchAwardBuilder_ == null) {
          matchAward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          matchAwardBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public Builder removeMatchAward(int index) {
        if (matchAwardBuilder_ == null) {
          ensureMatchAwardIsMutable();
          matchAward_.remove(index);
          onChanged();
        } else {
          matchAwardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAward.Builder getMatchAwardBuilder(
          int index) {
        return getMatchAwardFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAwardOrBuilder getMatchAwardOrBuilder(
          int index) {
        if (matchAwardBuilder_ == null) {
          return matchAward_.get(index);  } else {
          return matchAwardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public java.util.List<? extends LandlordBase.MatchAwardOrBuilder>
           getMatchAwardOrBuilderList() {
        if (matchAwardBuilder_ != null) {
          return matchAwardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(matchAward_);
        }
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAward.Builder addMatchAwardBuilder() {
        return getMatchAwardFieldBuilder().addBuilder(
            LandlordBase.MatchAward.getDefaultInstance());
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public LandlordBase.MatchAward.Builder addMatchAwardBuilder(
          int index) {
        return getMatchAwardFieldBuilder().addBuilder(
            index, LandlordBase.MatchAward.getDefaultInstance());
      }
      /**
       * <pre>
       ** 请求type为1，返回赛事奖励列表配置 
       * </pre>
       *
       * <code>repeated .pb_landlord.MatchAward matchAward = 1;</code>
       */
      public java.util.List<LandlordBase.MatchAward.Builder>
           getMatchAwardBuilderList() {
        return getMatchAwardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder>
          getMatchAwardFieldBuilder() {
        if (matchAwardBuilder_ == null) {
          matchAwardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.MatchAward, LandlordBase.MatchAward.Builder, LandlordBase.MatchAwardOrBuilder>(
                  matchAward_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          matchAward_ = null;
        }
        return matchAwardBuilder_;
      }

      private java.util.List<LandlordBase.PlayerScore> scoreList_ =
        java.util.Collections.emptyList();
      private void ensureScoreListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          scoreList_ = new java.util.ArrayList<LandlordBase.PlayerScore>(scoreList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.PlayerScore, LandlordBase.PlayerScore.Builder, LandlordBase.PlayerScoreOrBuilder> scoreListBuilder_;

      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public java.util.List<LandlordBase.PlayerScore> getScoreListList() {
        if (scoreListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scoreList_);
        } else {
          return scoreListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public int getScoreListCount() {
        if (scoreListBuilder_ == null) {
          return scoreList_.size();
        } else {
          return scoreListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScore getScoreList(int index) {
        if (scoreListBuilder_ == null) {
          return scoreList_.get(index);
        } else {
          return scoreListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder setScoreList(
          int index, LandlordBase.PlayerScore value) {
        if (scoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreListIsMutable();
          scoreList_.set(index, value);
          onChanged();
        } else {
          scoreListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder setScoreList(
          int index, LandlordBase.PlayerScore.Builder builderForValue) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          scoreList_.set(index, builderForValue.build());
          onChanged();
        } else {
          scoreListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addScoreList(LandlordBase.PlayerScore value) {
        if (scoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreListIsMutable();
          scoreList_.add(value);
          onChanged();
        } else {
          scoreListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addScoreList(
          int index, LandlordBase.PlayerScore value) {
        if (scoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreListIsMutable();
          scoreList_.add(index, value);
          onChanged();
        } else {
          scoreListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addScoreList(
          LandlordBase.PlayerScore.Builder builderForValue) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          scoreList_.add(builderForValue.build());
          onChanged();
        } else {
          scoreListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addScoreList(
          int index, LandlordBase.PlayerScore.Builder builderForValue) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          scoreList_.add(index, builderForValue.build());
          onChanged();
        } else {
          scoreListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder addAllScoreList(
          Iterable<? extends LandlordBase.PlayerScore> values) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, scoreList_);
          onChanged();
        } else {
          scoreListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder clearScoreList() {
        if (scoreListBuilder_ == null) {
          scoreList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          scoreListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public Builder removeScoreList(int index) {
        if (scoreListBuilder_ == null) {
          ensureScoreListIsMutable();
          scoreList_.remove(index);
          onChanged();
        } else {
          scoreListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScore.Builder getScoreListBuilder(
          int index) {
        return getScoreListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScoreOrBuilder getScoreListOrBuilder(
          int index) {
        if (scoreListBuilder_ == null) {
          return scoreList_.get(index);  } else {
          return scoreListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public java.util.List<? extends LandlordBase.PlayerScoreOrBuilder>
           getScoreListOrBuilderList() {
        if (scoreListBuilder_ != null) {
          return scoreListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scoreList_);
        }
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScore.Builder addScoreListBuilder() {
        return getScoreListFieldBuilder().addBuilder(
            LandlordBase.PlayerScore.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public LandlordBase.PlayerScore.Builder addScoreListBuilder(
          int index) {
        return getScoreListFieldBuilder().addBuilder(
            index, LandlordBase.PlayerScore.getDefaultInstance());
      }
      /**
       * <pre>
       ** 玩家比赛中的信息 
       * </pre>
       *
       * <code>repeated .pb_landlord.PlayerScore scoreList = 2;</code>
       */
      public java.util.List<LandlordBase.PlayerScore.Builder>
           getScoreListBuilderList() {
        return getScoreListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          LandlordBase.PlayerScore, LandlordBase.PlayerScore.Builder, LandlordBase.PlayerScoreOrBuilder>
          getScoreListFieldBuilder() {
        if (scoreListBuilder_ == null) {
          scoreListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              LandlordBase.PlayerScore, LandlordBase.PlayerScore.Builder, LandlordBase.PlayerScoreOrBuilder>(
                  scoreList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          scoreList_ = null;
        }
        return scoreListBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_MatchScore)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_MatchScore)
    private static final S_MatchScore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_MatchScore();
    }

    public static S_MatchScore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_MatchScore>
        PARSER = new com.google.protobuf.AbstractParser<S_MatchScore>() {
      @Override
      public S_MatchScore parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_MatchScore(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_MatchScore> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_MatchScore> getParserForType() {
      return PARSER;
    }

    @Override
    public S_MatchScore getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_ForceQuitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_ForceQuit)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 强行退赛接口 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_ForceQuit}
   */
  public  static final class S_ForceQuit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_ForceQuit)
      S_ForceQuitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_ForceQuit.newBuilder() to construct.
    private S_ForceQuit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_ForceQuit() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_ForceQuit();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_ForceQuit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_ForceQuit_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_ForceQuit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_ForceQuit.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_ForceQuit)) {
        return super.equals(obj);
      }
      S_ForceQuit other = (S_ForceQuit) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_ForceQuit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_ForceQuit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_ForceQuit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_ForceQuit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_ForceQuit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_ForceQuit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_ForceQuit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_ForceQuit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_ForceQuit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_ForceQuit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_ForceQuit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_ForceQuit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_ForceQuit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 强行退赛接口 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_ForceQuit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_ForceQuit)
        S_ForceQuitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_ForceQuit_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_ForceQuit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_ForceQuit.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_ForceQuit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_ForceQuit_descriptor;
      }

      @Override
      public S_ForceQuit getDefaultInstanceForType() {
        return S_ForceQuit.getDefaultInstance();
      }

      @Override
      public S_ForceQuit build() {
        S_ForceQuit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_ForceQuit buildPartial() {
        S_ForceQuit result = new S_ForceQuit(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_ForceQuit) {
          return mergeFrom((S_ForceQuit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_ForceQuit other) {
        if (other == S_ForceQuit.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_ForceQuit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_ForceQuit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_ForceQuit)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_ForceQuit)
    private static final S_ForceQuit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_ForceQuit();
    }

    public static S_ForceQuit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_ForceQuit>
        PARSER = new com.google.protobuf.AbstractParser<S_ForceQuit>() {
      @Override
      public S_ForceQuit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_ForceQuit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_ForceQuit> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_ForceQuit> getParserForType() {
      return PARSER;
    }

    @Override
    public S_ForceQuit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_LeaveMatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_LeaveMatch)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Server 离开比赛报名界面 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_LeaveMatch}
   */
  public  static final class S_LeaveMatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_LeaveMatch)
      S_LeaveMatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_LeaveMatch.newBuilder() to construct.
    private S_LeaveMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_LeaveMatch() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_LeaveMatch();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_LeaveMatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_LeaveMatch_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_LeaveMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_LeaveMatch.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_LeaveMatch)) {
        return super.equals(obj);
      }
      S_LeaveMatch other = (S_LeaveMatch) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_LeaveMatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_LeaveMatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_LeaveMatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_LeaveMatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_LeaveMatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_LeaveMatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_LeaveMatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_LeaveMatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_LeaveMatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_LeaveMatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_LeaveMatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_LeaveMatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_LeaveMatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 离开比赛报名界面 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_LeaveMatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_LeaveMatch)
        S_LeaveMatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_LeaveMatch_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_LeaveMatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_LeaveMatch.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_LeaveMatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_LeaveMatch_descriptor;
      }

      @Override
      public S_LeaveMatch getDefaultInstanceForType() {
        return S_LeaveMatch.getDefaultInstance();
      }

      @Override
      public S_LeaveMatch build() {
        S_LeaveMatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_LeaveMatch buildPartial() {
        S_LeaveMatch result = new S_LeaveMatch(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_LeaveMatch) {
          return mergeFrom((S_LeaveMatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_LeaveMatch other) {
        if (other == S_LeaveMatch.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_LeaveMatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_LeaveMatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_LeaveMatch)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_LeaveMatch)
    private static final S_LeaveMatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_LeaveMatch();
    }

    public static S_LeaveMatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_LeaveMatch>
        PARSER = new com.google.protobuf.AbstractParser<S_LeaveMatch>() {
      @Override
      public S_LeaveMatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_LeaveMatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_LeaveMatch> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_LeaveMatch> getParserForType() {
      return PARSER;
    }

    @Override
    public S_LeaveMatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_GodLightOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_GodLight)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 玩家是否购买6元钻石 
     * </pre>
     *
     * <code>bool isJoin = 1;</code>
     */
    boolean getIsJoin();

    /**
     * <pre>
     ** 商品ID 
     * </pre>
     *
     * <code>int32 goodsId = 2;</code>
     */
    int getGoodsId();

    /**
     * <pre>
     ** 价格 
     * </pre>
     *
     * <code>int32 price = 3;</code>
     */
    int getPrice();

    /**
     * <pre>
     ** 活动力度 
     * </pre>
     *
     * <code>int32 promotionValue = 4;</code>
     */
    int getPromotionValue();

    /**
     * <pre>
     ** 奖池数量 
     * </pre>
     *
     * <code>int32 awardPool = 5;</code>
     */
    int getAwardPool();

    /**
     * <pre>
     ** 时间段 
     * </pre>
     *
     * <code>repeated string duration = 6;</code>
     */
    java.util.List<String>
        getDurationList();
    /**
     * <pre>
     ** 时间段 
     * </pre>
     *
     * <code>repeated string duration = 6;</code>
     */
    int getDurationCount();
    /**
     * <pre>
     ** 时间段 
     * </pre>
     *
     * <code>repeated string duration = 6;</code>
     */
    String getDuration(int index);
    /**
     * <pre>
     ** 时间段 
     * </pre>
     *
     * <code>repeated string duration = 6;</code>
     */
    com.google.protobuf.ByteString
        getDurationBytes(int index);

    /**
     * <pre>
     ** 距离下一次开奖时间,单位秒，-1正在活动时间内，-2显示活动未开启 
     * </pre>
     *
     * <code>int32 nextTime = 7;</code>
     */
    int getNextTime();

    /**
     * <pre>
     ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
     * </pre>
     *
     * <code>int32 status = 8;</code>
     */
    int getStatus();

    /**
     * <pre>
     ** 是否开/关财神红包 
     * </pre>
     *
     * <code>bool isOpen = 9;</code>
     */
    boolean getIsOpen();
  }
  /**
   * <pre>
   ** Server 返回财神红包信息 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_GodLight}
   */
  public  static final class S_GodLight extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_GodLight)
      S_GodLightOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_GodLight.newBuilder() to construct.
    private S_GodLight(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_GodLight() {
      duration_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_GodLight();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_GodLight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              isJoin_ = input.readBool();
              break;
            }
            case 16: {

              goodsId_ = input.readInt32();
              break;
            }
            case 24: {

              price_ = input.readInt32();
              break;
            }
            case 32: {

              promotionValue_ = input.readInt32();
              break;
            }
            case 40: {

              awardPool_ = input.readInt32();
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                duration_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              duration_.add(s);
              break;
            }
            case 56: {

              nextTime_ = input.readInt32();
              break;
            }
            case 64: {

              status_ = input.readInt32();
              break;
            }
            case 72: {

              isOpen_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          duration_ = duration_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_GodLight_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_GodLight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_GodLight.class, Builder.class);
    }

    public static final int ISJOIN_FIELD_NUMBER = 1;
    private boolean isJoin_;
    /**
     * <pre>
     ** 玩家是否购买6元钻石 
     * </pre>
     *
     * <code>bool isJoin = 1;</code>
     */
    public boolean getIsJoin() {
      return isJoin_;
    }

    public static final int GOODSID_FIELD_NUMBER = 2;
    private int goodsId_;
    /**
     * <pre>
     ** 商品ID 
     * </pre>
     *
     * <code>int32 goodsId = 2;</code>
     */
    public int getGoodsId() {
      return goodsId_;
    }

    public static final int PRICE_FIELD_NUMBER = 3;
    private int price_;
    /**
     * <pre>
     ** 价格 
     * </pre>
     *
     * <code>int32 price = 3;</code>
     */
    public int getPrice() {
      return price_;
    }

    public static final int PROMOTIONVALUE_FIELD_NUMBER = 4;
    private int promotionValue_;
    /**
     * <pre>
     ** 活动力度 
     * </pre>
     *
     * <code>int32 promotionValue = 4;</code>
     */
    public int getPromotionValue() {
      return promotionValue_;
    }

    public static final int AWARDPOOL_FIELD_NUMBER = 5;
    private int awardPool_;
    /**
     * <pre>
     ** 奖池数量 
     * </pre>
     *
     * <code>int32 awardPool = 5;</code>
     */
    public int getAwardPool() {
      return awardPool_;
    }

    public static final int DURATION_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList duration_;
    /**
     * <pre>
     ** 时间段 
     * </pre>
     *
     * <code>repeated string duration = 6;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getDurationList() {
      return duration_;
    }
    /**
     * <pre>
     ** 时间段 
     * </pre>
     *
     * <code>repeated string duration = 6;</code>
     */
    public int getDurationCount() {
      return duration_.size();
    }
    /**
     * <pre>
     ** 时间段 
     * </pre>
     *
     * <code>repeated string duration = 6;</code>
     */
    public String getDuration(int index) {
      return duration_.get(index);
    }
    /**
     * <pre>
     ** 时间段 
     * </pre>
     *
     * <code>repeated string duration = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDurationBytes(int index) {
      return duration_.getByteString(index);
    }

    public static final int NEXTTIME_FIELD_NUMBER = 7;
    private int nextTime_;
    /**
     * <pre>
     ** 距离下一次开奖时间,单位秒，-1正在活动时间内，-2显示活动未开启 
     * </pre>
     *
     * <code>int32 nextTime = 7;</code>
     */
    public int getNextTime() {
      return nextTime_;
    }

    public static final int STATUS_FIELD_NUMBER = 8;
    private int status_;
    /**
     * <pre>
     ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
     * </pre>
     *
     * <code>int32 status = 8;</code>
     */
    public int getStatus() {
      return status_;
    }

    public static final int ISOPEN_FIELD_NUMBER = 9;
    private boolean isOpen_;
    /**
     * <pre>
     ** 是否开/关财神红包 
     * </pre>
     *
     * <code>bool isOpen = 9;</code>
     */
    public boolean getIsOpen() {
      return isOpen_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isJoin_ != false) {
        output.writeBool(1, isJoin_);
      }
      if (goodsId_ != 0) {
        output.writeInt32(2, goodsId_);
      }
      if (price_ != 0) {
        output.writeInt32(3, price_);
      }
      if (promotionValue_ != 0) {
        output.writeInt32(4, promotionValue_);
      }
      if (awardPool_ != 0) {
        output.writeInt32(5, awardPool_);
      }
      for (int i = 0; i < duration_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, duration_.getRaw(i));
      }
      if (nextTime_ != 0) {
        output.writeInt32(7, nextTime_);
      }
      if (status_ != 0) {
        output.writeInt32(8, status_);
      }
      if (isOpen_ != false) {
        output.writeBool(9, isOpen_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isJoin_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isJoin_);
      }
      if (goodsId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, goodsId_);
      }
      if (price_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, price_);
      }
      if (promotionValue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, promotionValue_);
      }
      if (awardPool_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, awardPool_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < duration_.size(); i++) {
          dataSize += computeStringSizeNoTag(duration_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDurationList().size();
      }
      if (nextTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, nextTime_);
      }
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, status_);
      }
      if (isOpen_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isOpen_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_GodLight)) {
        return super.equals(obj);
      }
      S_GodLight other = (S_GodLight) obj;

      if (getIsJoin()
          != other.getIsJoin()) return false;
      if (getGoodsId()
          != other.getGoodsId()) return false;
      if (getPrice()
          != other.getPrice()) return false;
      if (getPromotionValue()
          != other.getPromotionValue()) return false;
      if (getAwardPool()
          != other.getAwardPool()) return false;
      if (!getDurationList()
          .equals(other.getDurationList())) return false;
      if (getNextTime()
          != other.getNextTime()) return false;
      if (getStatus()
          != other.getStatus()) return false;
      if (getIsOpen()
          != other.getIsOpen()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ISJOIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsJoin());
      hash = (37 * hash) + GOODSID_FIELD_NUMBER;
      hash = (53 * hash) + getGoodsId();
      hash = (37 * hash) + PRICE_FIELD_NUMBER;
      hash = (53 * hash) + getPrice();
      hash = (37 * hash) + PROMOTIONVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getPromotionValue();
      hash = (37 * hash) + AWARDPOOL_FIELD_NUMBER;
      hash = (53 * hash) + getAwardPool();
      if (getDurationCount() > 0) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDurationList().hashCode();
      }
      hash = (37 * hash) + NEXTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getNextTime();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus();
      hash = (37 * hash) + ISOPEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsOpen());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_GodLight parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GodLight parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GodLight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GodLight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GodLight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GodLight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GodLight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GodLight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GodLight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_GodLight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GodLight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GodLight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_GodLight prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回财神红包信息 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_GodLight}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_GodLight)
        S_GodLightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_GodLight_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_GodLight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_GodLight.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_GodLight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        isJoin_ = false;

        goodsId_ = 0;

        price_ = 0;

        promotionValue_ = 0;

        awardPool_ = 0;

        duration_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        nextTime_ = 0;

        status_ = 0;

        isOpen_ = false;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_GodLight_descriptor;
      }

      @Override
      public S_GodLight getDefaultInstanceForType() {
        return S_GodLight.getDefaultInstance();
      }

      @Override
      public S_GodLight build() {
        S_GodLight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_GodLight buildPartial() {
        S_GodLight result = new S_GodLight(this);
        int from_bitField0_ = bitField0_;
        result.isJoin_ = isJoin_;
        result.goodsId_ = goodsId_;
        result.price_ = price_;
        result.promotionValue_ = promotionValue_;
        result.awardPool_ = awardPool_;
        if (((bitField0_ & 0x00000001) != 0)) {
          duration_ = duration_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.duration_ = duration_;
        result.nextTime_ = nextTime_;
        result.status_ = status_;
        result.isOpen_ = isOpen_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_GodLight) {
          return mergeFrom((S_GodLight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_GodLight other) {
        if (other == S_GodLight.getDefaultInstance()) return this;
        if (other.getIsJoin() != false) {
          setIsJoin(other.getIsJoin());
        }
        if (other.getGoodsId() != 0) {
          setGoodsId(other.getGoodsId());
        }
        if (other.getPrice() != 0) {
          setPrice(other.getPrice());
        }
        if (other.getPromotionValue() != 0) {
          setPromotionValue(other.getPromotionValue());
        }
        if (other.getAwardPool() != 0) {
          setAwardPool(other.getAwardPool());
        }
        if (!other.duration_.isEmpty()) {
          if (duration_.isEmpty()) {
            duration_ = other.duration_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDurationIsMutable();
            duration_.addAll(other.duration_);
          }
          onChanged();
        }
        if (other.getNextTime() != 0) {
          setNextTime(other.getNextTime());
        }
        if (other.getStatus() != 0) {
          setStatus(other.getStatus());
        }
        if (other.getIsOpen() != false) {
          setIsOpen(other.getIsOpen());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_GodLight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_GodLight) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean isJoin_ ;
      /**
       * <pre>
       ** 玩家是否购买6元钻石 
       * </pre>
       *
       * <code>bool isJoin = 1;</code>
       */
      public boolean getIsJoin() {
        return isJoin_;
      }
      /**
       * <pre>
       ** 玩家是否购买6元钻石 
       * </pre>
       *
       * <code>bool isJoin = 1;</code>
       */
      public Builder setIsJoin(boolean value) {
        
        isJoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 玩家是否购买6元钻石 
       * </pre>
       *
       * <code>bool isJoin = 1;</code>
       */
      public Builder clearIsJoin() {
        
        isJoin_ = false;
        onChanged();
        return this;
      }

      private int goodsId_ ;
      /**
       * <pre>
       ** 商品ID 
       * </pre>
       *
       * <code>int32 goodsId = 2;</code>
       */
      public int getGoodsId() {
        return goodsId_;
      }
      /**
       * <pre>
       ** 商品ID 
       * </pre>
       *
       * <code>int32 goodsId = 2;</code>
       */
      public Builder setGoodsId(int value) {
        
        goodsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 商品ID 
       * </pre>
       *
       * <code>int32 goodsId = 2;</code>
       */
      public Builder clearGoodsId() {
        
        goodsId_ = 0;
        onChanged();
        return this;
      }

      private int price_ ;
      /**
       * <pre>
       ** 价格 
       * </pre>
       *
       * <code>int32 price = 3;</code>
       */
      public int getPrice() {
        return price_;
      }
      /**
       * <pre>
       ** 价格 
       * </pre>
       *
       * <code>int32 price = 3;</code>
       */
      public Builder setPrice(int value) {
        
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 价格 
       * </pre>
       *
       * <code>int32 price = 3;</code>
       */
      public Builder clearPrice() {
        
        price_ = 0;
        onChanged();
        return this;
      }

      private int promotionValue_ ;
      /**
       * <pre>
       ** 活动力度 
       * </pre>
       *
       * <code>int32 promotionValue = 4;</code>
       */
      public int getPromotionValue() {
        return promotionValue_;
      }
      /**
       * <pre>
       ** 活动力度 
       * </pre>
       *
       * <code>int32 promotionValue = 4;</code>
       */
      public Builder setPromotionValue(int value) {
        
        promotionValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 活动力度 
       * </pre>
       *
       * <code>int32 promotionValue = 4;</code>
       */
      public Builder clearPromotionValue() {
        
        promotionValue_ = 0;
        onChanged();
        return this;
      }

      private int awardPool_ ;
      /**
       * <pre>
       ** 奖池数量 
       * </pre>
       *
       * <code>int32 awardPool = 5;</code>
       */
      public int getAwardPool() {
        return awardPool_;
      }
      /**
       * <pre>
       ** 奖池数量 
       * </pre>
       *
       * <code>int32 awardPool = 5;</code>
       */
      public Builder setAwardPool(int value) {
        
        awardPool_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 奖池数量 
       * </pre>
       *
       * <code>int32 awardPool = 5;</code>
       */
      public Builder clearAwardPool() {
        
        awardPool_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList duration_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDurationIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          duration_ = new com.google.protobuf.LazyStringArrayList(duration_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getDurationList() {
        return duration_.getUnmodifiableView();
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public int getDurationCount() {
        return duration_.size();
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public String getDuration(int index) {
        return duration_.get(index);
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDurationBytes(int index) {
        return duration_.getByteString(index);
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public Builder setDuration(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDurationIsMutable();
        duration_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public Builder addDuration(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDurationIsMutable();
        duration_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public Builder addAllDuration(
          Iterable<String> values) {
        ensureDurationIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, duration_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public Builder clearDuration() {
        duration_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 时间段 
       * </pre>
       *
       * <code>repeated string duration = 6;</code>
       */
      public Builder addDurationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureDurationIsMutable();
        duration_.add(value);
        onChanged();
        return this;
      }

      private int nextTime_ ;
      /**
       * <pre>
       ** 距离下一次开奖时间,单位秒，-1正在活动时间内，-2显示活动未开启 
       * </pre>
       *
       * <code>int32 nextTime = 7;</code>
       */
      public int getNextTime() {
        return nextTime_;
      }
      /**
       * <pre>
       ** 距离下一次开奖时间,单位秒，-1正在活动时间内，-2显示活动未开启 
       * </pre>
       *
       * <code>int32 nextTime = 7;</code>
       */
      public Builder setNextTime(int value) {
        
        nextTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 距离下一次开奖时间,单位秒，-1正在活动时间内，-2显示活动未开启 
       * </pre>
       *
       * <code>int32 nextTime = 7;</code>
       */
      public Builder clearNextTime() {
        
        nextTime_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
       * </pre>
       *
       * <code>int32 status = 8;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
       * </pre>
       *
       * <code>int32 status = 8;</code>
       */
      public Builder setStatus(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 1是不在时间段内 2开启时间段内 3在开启时间段内，可以抢红包 
       * </pre>
       *
       * <code>int32 status = 8;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private boolean isOpen_ ;
      /**
       * <pre>
       ** 是否开/关财神红包 
       * </pre>
       *
       * <code>bool isOpen = 9;</code>
       */
      public boolean getIsOpen() {
        return isOpen_;
      }
      /**
       * <pre>
       ** 是否开/关财神红包 
       * </pre>
       *
       * <code>bool isOpen = 9;</code>
       */
      public Builder setIsOpen(boolean value) {
        
        isOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 是否开/关财神红包 
       * </pre>
       *
       * <code>bool isOpen = 9;</code>
       */
      public Builder clearIsOpen() {
        
        isOpen_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_GodLight)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_GodLight)
    private static final S_GodLight DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_GodLight();
    }

    public static S_GodLight getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_GodLight>
        PARSER = new com.google.protobuf.AbstractParser<S_GodLight>() {
      @Override
      public S_GodLight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_GodLight(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_GodLight> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_GodLight> getParserForType() {
      return PARSER;
    }

    @Override
    public S_GodLight getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S_GodLightAwardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_landlord.S_GodLightAward)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 奖励 
     * </pre>
     *
     * <code>int32 award = 1;</code>
     */
    int getAward();

    /**
     * <pre>
     ** 最终值 
     * </pre>
     *
     * <code>int32 final = 2;</code>
     */
    int getFinal();

    /**
     * <pre>
     ** 剩余金额 
     * </pre>
     *
     * <code>int32 remain = 3;</code>
     */
    int getRemain();

    /**
     * <pre>
     ** 总金额 
     * </pre>
     *
     * <code>int32 total = 4;</code>
     */
    int getTotal();
  }
  /**
   * <pre>
   ** Server 返回财神红包奖励 
   * </pre>
   *
   * Protobuf type {@code pb_landlord.S_GodLightAward}
   */
  public  static final class S_GodLightAward extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb_landlord.S_GodLightAward)
      S_GodLightAwardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S_GodLightAward.newBuilder() to construct.
    private S_GodLightAward(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S_GodLightAward() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new S_GodLightAward();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S_GodLightAward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              award_ = input.readInt32();
              break;
            }
            case 16: {

              final_ = input.readInt32();
              break;
            }
            case 24: {

              remain_ = input.readInt32();
              break;
            }
            case 32: {

              total_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LandlordSrv.internal_static_pb_landlord_S_GodLightAward_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LandlordSrv.internal_static_pb_landlord_S_GodLightAward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              S_GodLightAward.class, Builder.class);
    }

    public static final int AWARD_FIELD_NUMBER = 1;
    private int award_;
    /**
     * <pre>
     ** 奖励 
     * </pre>
     *
     * <code>int32 award = 1;</code>
     */
    public int getAward() {
      return award_;
    }

    public static final int FINAL_FIELD_NUMBER = 2;
    private int final_;
    /**
     * <pre>
     ** 最终值 
     * </pre>
     *
     * <code>int32 final = 2;</code>
     */
    public int getFinal() {
      return final_;
    }

    public static final int REMAIN_FIELD_NUMBER = 3;
    private int remain_;
    /**
     * <pre>
     ** 剩余金额 
     * </pre>
     *
     * <code>int32 remain = 3;</code>
     */
    public int getRemain() {
      return remain_;
    }

    public static final int TOTAL_FIELD_NUMBER = 4;
    private int total_;
    /**
     * <pre>
     ** 总金额 
     * </pre>
     *
     * <code>int32 total = 4;</code>
     */
    public int getTotal() {
      return total_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (award_ != 0) {
        output.writeInt32(1, award_);
      }
      if (final_ != 0) {
        output.writeInt32(2, final_);
      }
      if (remain_ != 0) {
        output.writeInt32(3, remain_);
      }
      if (total_ != 0) {
        output.writeInt32(4, total_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (award_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, award_);
      }
      if (final_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, final_);
      }
      if (remain_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, remain_);
      }
      if (total_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, total_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof S_GodLightAward)) {
        return super.equals(obj);
      }
      S_GodLightAward other = (S_GodLightAward) obj;

      if (getAward()
          != other.getAward()) return false;
      if (getFinal()
          != other.getFinal()) return false;
      if (getRemain()
          != other.getRemain()) return false;
      if (getTotal()
          != other.getTotal()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AWARD_FIELD_NUMBER;
      hash = (53 * hash) + getAward();
      hash = (37 * hash) + FINAL_FIELD_NUMBER;
      hash = (53 * hash) + getFinal();
      hash = (37 * hash) + REMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getRemain();
      hash = (37 * hash) + TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + getTotal();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static S_GodLightAward parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GodLightAward parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GodLightAward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GodLightAward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GodLightAward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static S_GodLightAward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static S_GodLightAward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GodLightAward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GodLightAward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static S_GodLightAward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static S_GodLightAward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static S_GodLightAward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(S_GodLightAward prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Server 返回财神红包奖励 
     * </pre>
     *
     * Protobuf type {@code pb_landlord.S_GodLightAward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_landlord.S_GodLightAward)
        S_GodLightAwardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LandlordSrv.internal_static_pb_landlord_S_GodLightAward_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LandlordSrv.internal_static_pb_landlord_S_GodLightAward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                S_GodLightAward.class, Builder.class);
      }

      // Construct using com.kys.pb.LandlordSrv.S_GodLightAward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        award_ = 0;

        final_ = 0;

        remain_ = 0;

        total_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LandlordSrv.internal_static_pb_landlord_S_GodLightAward_descriptor;
      }

      @Override
      public S_GodLightAward getDefaultInstanceForType() {
        return S_GodLightAward.getDefaultInstance();
      }

      @Override
      public S_GodLightAward build() {
        S_GodLightAward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public S_GodLightAward buildPartial() {
        S_GodLightAward result = new S_GodLightAward(this);
        result.award_ = award_;
        result.final_ = final_;
        result.remain_ = remain_;
        result.total_ = total_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof S_GodLightAward) {
          return mergeFrom((S_GodLightAward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(S_GodLightAward other) {
        if (other == S_GodLightAward.getDefaultInstance()) return this;
        if (other.getAward() != 0) {
          setAward(other.getAward());
        }
        if (other.getFinal() != 0) {
          setFinal(other.getFinal());
        }
        if (other.getRemain() != 0) {
          setRemain(other.getRemain());
        }
        if (other.getTotal() != 0) {
          setTotal(other.getTotal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        S_GodLightAward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (S_GodLightAward) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int award_ ;
      /**
       * <pre>
       ** 奖励 
       * </pre>
       *
       * <code>int32 award = 1;</code>
       */
      public int getAward() {
        return award_;
      }
      /**
       * <pre>
       ** 奖励 
       * </pre>
       *
       * <code>int32 award = 1;</code>
       */
      public Builder setAward(int value) {
        
        award_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 奖励 
       * </pre>
       *
       * <code>int32 award = 1;</code>
       */
      public Builder clearAward() {
        
        award_ = 0;
        onChanged();
        return this;
      }

      private int final_ ;
      /**
       * <pre>
       ** 最终值 
       * </pre>
       *
       * <code>int32 final = 2;</code>
       */
      public int getFinal() {
        return final_;
      }
      /**
       * <pre>
       ** 最终值 
       * </pre>
       *
       * <code>int32 final = 2;</code>
       */
      public Builder setFinal(int value) {
        
        final_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 最终值 
       * </pre>
       *
       * <code>int32 final = 2;</code>
       */
      public Builder clearFinal() {
        
        final_ = 0;
        onChanged();
        return this;
      }

      private int remain_ ;
      /**
       * <pre>
       ** 剩余金额 
       * </pre>
       *
       * <code>int32 remain = 3;</code>
       */
      public int getRemain() {
        return remain_;
      }
      /**
       * <pre>
       ** 剩余金额 
       * </pre>
       *
       * <code>int32 remain = 3;</code>
       */
      public Builder setRemain(int value) {
        
        remain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 剩余金额 
       * </pre>
       *
       * <code>int32 remain = 3;</code>
       */
      public Builder clearRemain() {
        
        remain_ = 0;
        onChanged();
        return this;
      }

      private int total_ ;
      /**
       * <pre>
       ** 总金额 
       * </pre>
       *
       * <code>int32 total = 4;</code>
       */
      public int getTotal() {
        return total_;
      }
      /**
       * <pre>
       ** 总金额 
       * </pre>
       *
       * <code>int32 total = 4;</code>
       */
      public Builder setTotal(int value) {
        
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 总金额 
       * </pre>
       *
       * <code>int32 total = 4;</code>
       */
      public Builder clearTotal() {
        
        total_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb_landlord.S_GodLightAward)
    }

    // @@protoc_insertion_point(class_scope:pb_landlord.S_GodLightAward)
    private static final S_GodLightAward DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S_GodLightAward();
    }

    public static S_GodLightAward getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S_GodLightAward>
        PARSER = new com.google.protobuf.AbstractParser<S_GodLightAward>() {
      @Override
      public S_GodLightAward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S_GodLightAward(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S_GodLightAward> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<S_GodLightAward> getParserForType() {
      return PARSER;
    }

    @Override
    public S_GodLightAward getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_GetRoomConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_GetRoomConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_GetRoomInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_GetRoomInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_QuickJoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_QuickJoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_CancleJoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_CancleJoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_AutoPlay_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_AutoPlay_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_RetryReturnGame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_RetryReturnGame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_SendAction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_SendAction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_DrawWinCup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_DrawWinCup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_GetLotteryCount_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_GetLotteryCount_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_QueryIndex_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_QueryIndex_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_EnterRoom_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_EnterRoom_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_DoCatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_DoCatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_PlayCards_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_PlayCards_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_LeaveRoom_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_LeaveRoom_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_RecoverGame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_RecoverGame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_T_DoCatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_T_DoCatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_T_PlayCards_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_T_PlayCards_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_T_LeaveRoom_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_T_LeaveRoom_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_T_RecoverGame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_T_RecoverGame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_GetMatchInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_GetMatchInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_GetMatchDetail_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_GetMatchDetail_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_GetMatchRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_GetMatchRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_OwnMatchRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_OwnMatchRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_MatchApply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_MatchApply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_MatchCancel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_MatchCancel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_MatchConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_MatchConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_MatchScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_MatchScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_ForceQuit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_ForceQuit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_LeaveMatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_LeaveMatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_GodLight_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_GodLight_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_landlord_S_GodLightAward_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_landlord_S_GodLightAward_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\022landlord_srv.proto\022\013pb_landlord\032\016landl" +
      "ord.proto\"B\n\017S_GetRoomConfig\022/\n\016roomConf" +
      "igList\030\001 \003(\0132\027.pb_landlord.RoomConfig\"8\n" +
      "\rS_GetRoomInfo\022\'\n\006config\030\001 \001(\0132\027.pb_land" +
      "lord.RoomConfig\"5\n\013S_QuickJoin\022\020\n\010waitTi" +
      "me\030\001 \001(\005\022\024\n\014recordRemind\030\002 \001(\010\"\016\n\014S_Canc" +
      "leJoin\"\014\n\nS_AutoPlay\"0\n\021S_RetryReturnGam" +
      "e\022\013\n\003url\030\001 \001(\t\022\016\n\006roomId\030\002 \001(\005\"\016\n\014S_Send" +
      "Action\"o\n\014S_DrawWinCup\022\022\n\ndrawWinCup\030\001 \001" +
      "(\002\022\024\n\014playerWinCup\030\002 \001(\002\022\021\n\tleftCount\030\003 " +
      "\001(\005\022\020\n\010cupArray\030\004 \003(\002\022\020\n\010isDouble\030\005 \001(\010\"" +
      "1\n\021S_GetLotteryCount\022\r\n\005isCan\030\001 \001(\010\022\r\n\005c" +
      "ount\030\002 \001(\005\"\035\n\014S_QueryIndex\022\r\n\005index\030\001 \001(" +
      "\005\"o\n\013S_EnterRoom\022\r\n\005index\030\001 \001(\005\022\'\n\010seatI" +
      "nfo\030\002 \003(\0132\025.pb_landlord.SeatInfo\022\025\n\rbase" +
      "PointType\030\004 \001(\005\022\021\n\tbasePoint\030\005 \001(\005\"\013\n\tS_" +
      "DoCatch\"\r\n\013S_PlayCards\"\r\n\013S_LeaveRoom\"\314\002" +
      "\n\rS_RecoverGame\022\033\n\023currentPlayerSeatId\030\001" +
      " \001(\005\022\023\n\013dizhuSeatId\030\002 \001(\005\022\r\n\005ratio\030\003 \001(\005" +
      "\022\022\n\ndizhuCards\030\004 \003(\005\022\022\n\nhandsCards\030\005 \003(\005" +
      "\022\022\n\nsystemTime\030\006 \001(\t\022\022\n\nexpireTime\030\007 \001(\t" +
      "\022\r\n\005index\030\010 \001(\005\0222\n\nplayerInfo\030\t \003(\0132\036.pb" +
      "_landlord.RecoverPlayerInfo\022-\n\tgameState" +
      "\030\n \001(\0162\032.pb_landlord.GameStateEnum\022\020\n\010bi" +
      "gCards\030\013 \003(\005\022\020\n\010bigScore\030\014 \001(\005\022\024\n\014histor" +
      "yCards\030\r \003(\005\"\r\n\013S_T_DoCatch\"\017\n\rS_T_PlayC" +
      "ards\"\017\n\rS_T_LeaveRoom\"\334\002\n\017S_T_RecoverGam" +
      "e\022\033\n\023currentPlayerSeatId\030\001 \001(\005\022\023\n\013dizhuS" +
      "eatId\030\002 \001(\005\022\014\n\004rang\030\003 \001(\005\022\r\n\005ratio\030\004 \001(\005" +
      "\022\022\n\ndizhuCards\030\005 \003(\005\022\022\n\nhandsCards\030\006 \003(\005" +
      "\022\022\n\nsystemTime\030\007 \001(\t\022\022\n\nexpireTime\030\010 \001(\t" +
      "\022\r\n\005index\030\t \001(\005\0222\n\nplayerInfo\030\n \003(\0132\036.pb" +
      "_landlord.RecoverPlayerInfo\022-\n\tgameState" +
      "\030\013 \001(\0162\032.pb_landlord.GameStateEnum\022\020\n\010bi" +
      "gCards\030\014 \003(\005\022\020\n\010bigScore\030\r \001(\005\022\024\n\014histor" +
      "yCards\030\016 \003(\005\"P\n\016S_GetMatchInfo\022\022\n\napply_" +
      "card\030\001 \001(\005\022*\n\nmatch_list\030\002 \003(\0132\026.pb_land" +
      "lord.MatchInfo\"\332\001\n\020S_GetMatchDetail\022\017\n\007m" +
      "atchId\030\001 \001(\005\022\022\n\napplyState\030\002 \001(\005\022\r\n\005tota" +
      "l\030\003 \001(\005\022\014\n\004join\030\004 \001(\005\022\014\n\004cost\030\005 \001(\005\022+\n\nm" +
      "atchAward\030\006 \003(\0132\027.pb_landlord.MatchAward" +
      "\022\022\n\nmatch_time\030\007 \001(\t\022\017\n\007isApply\030\010 \001(\010\022\020\n" +
      "\010costType\030\t \001(\005\022\022\n\nenterLimit\030\n \001(\005\"A\n\020S" +
      "_GetMatchRecord\022-\n\013matchRecord\030\001 \003(\0132\030.p" +
      "b_landlord.MatchRecord\"@\n\020S_OwnMatchReco" +
      "rd\022,\n\013historyList\030\001 \003(\0132\027.pb_landlord.Ow" +
      "nHistory\"+\n\014S_MatchApply\022\014\n\004type\030\001 \001(\005\022\r" +
      "\n\005count\030\002 \001(\005\",\n\rS_MatchCancel\022\014\n\004type\030\001" +
      " \001(\005\022\r\n\005count\030\002 \001(\005\"\235\001\n\rS_MatchConfig\022\017\n" +
      "\007matchId\030\001 \001(\005\022\021\n\tbasePoint\030\002 \001(\005\022\020\n\010cur" +
      "Round\030\003 \001(\005\022\022\n\ntotalRound\030\004 \001(\005\022\020\n\010timeD" +
      "own\030\005 \001(\005\022\016\n\006roomId\030\006 \001(\005\022\013\n\003url\030\007 \001(\t\022\023" +
      "\n\013isMatchOver\030\010 \001(\010\"h\n\014S_MatchScore\022+\n\nm" +
      "atchAward\030\001 \003(\0132\027.pb_landlord.MatchAward" +
      "\022+\n\tscoreList\030\002 \003(\0132\030.pb_landlord.Player" +
      "Score\"\r\n\013S_ForceQuit\"\016\n\014S_LeaveMatch\"\253\001\n" +
      "\nS_GodLight\022\016\n\006isJoin\030\001 \001(\010\022\017\n\007goodsId\030\002" +
      " \001(\005\022\r\n\005price\030\003 \001(\005\022\026\n\016promotionValue\030\004 " +
      "\001(\005\022\021\n\tawardPool\030\005 \001(\005\022\020\n\010duration\030\006 \003(\t" +
      "\022\020\n\010nextTime\030\007 \001(\005\022\016\n\006status\030\010 \001(\005\022\016\n\006is" +
      "Open\030\t \001(\010\"N\n\017S_GodLightAward\022\r\n\005award\030\001" +
      " \001(\005\022\r\n\005final\030\002 \001(\005\022\016\n\006remain\030\003 \001(\005\022\r\n\005t" +
      "otal\030\004 \001(\005B\031\n\ncom.kys.pbB\013LandlordSrvb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          LandlordBase.getDescriptor(),
        });
    internal_static_pb_landlord_S_GetRoomConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pb_landlord_S_GetRoomConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_GetRoomConfig_descriptor,
        new String[] { "RoomConfigList", });
    internal_static_pb_landlord_S_GetRoomInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pb_landlord_S_GetRoomInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_GetRoomInfo_descriptor,
        new String[] { "Config", });
    internal_static_pb_landlord_S_QuickJoin_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pb_landlord_S_QuickJoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_QuickJoin_descriptor,
        new String[] { "WaitTime", "RecordRemind", });
    internal_static_pb_landlord_S_CancleJoin_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_pb_landlord_S_CancleJoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_CancleJoin_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_AutoPlay_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_pb_landlord_S_AutoPlay_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_AutoPlay_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_RetryReturnGame_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_pb_landlord_S_RetryReturnGame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_RetryReturnGame_descriptor,
        new String[] { "Url", "RoomId", });
    internal_static_pb_landlord_S_SendAction_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_pb_landlord_S_SendAction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_SendAction_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_DrawWinCup_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_pb_landlord_S_DrawWinCup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_DrawWinCup_descriptor,
        new String[] { "DrawWinCup", "PlayerWinCup", "LeftCount", "CupArray", "IsDouble", });
    internal_static_pb_landlord_S_GetLotteryCount_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_pb_landlord_S_GetLotteryCount_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_GetLotteryCount_descriptor,
        new String[] { "IsCan", "Count", });
    internal_static_pb_landlord_S_QueryIndex_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_pb_landlord_S_QueryIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_QueryIndex_descriptor,
        new String[] { "Index", });
    internal_static_pb_landlord_S_EnterRoom_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_pb_landlord_S_EnterRoom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_EnterRoom_descriptor,
        new String[] { "Index", "SeatInfo", "BasePointType", "BasePoint", });
    internal_static_pb_landlord_S_DoCatch_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_pb_landlord_S_DoCatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_DoCatch_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_PlayCards_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_pb_landlord_S_PlayCards_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_PlayCards_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_LeaveRoom_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_pb_landlord_S_LeaveRoom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_LeaveRoom_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_RecoverGame_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_pb_landlord_S_RecoverGame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_RecoverGame_descriptor,
        new String[] { "CurrentPlayerSeatId", "DizhuSeatId", "Ratio", "DizhuCards", "HandsCards", "SystemTime", "ExpireTime", "Index", "PlayerInfo", "GameState", "BigCards", "BigScore", "HistoryCards", });
    internal_static_pb_landlord_S_T_DoCatch_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_pb_landlord_S_T_DoCatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_T_DoCatch_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_T_PlayCards_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_pb_landlord_S_T_PlayCards_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_T_PlayCards_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_T_LeaveRoom_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_pb_landlord_S_T_LeaveRoom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_T_LeaveRoom_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_T_RecoverGame_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_pb_landlord_S_T_RecoverGame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_T_RecoverGame_descriptor,
        new String[] { "CurrentPlayerSeatId", "DizhuSeatId", "Rang", "Ratio", "DizhuCards", "HandsCards", "SystemTime", "ExpireTime", "Index", "PlayerInfo", "GameState", "BigCards", "BigScore", "HistoryCards", });
    internal_static_pb_landlord_S_GetMatchInfo_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_pb_landlord_S_GetMatchInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_GetMatchInfo_descriptor,
        new String[] { "ApplyCard", "MatchList", });
    internal_static_pb_landlord_S_GetMatchDetail_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_pb_landlord_S_GetMatchDetail_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_GetMatchDetail_descriptor,
        new String[] { "MatchId", "ApplyState", "Total", "Join", "Cost", "MatchAward", "MatchTime", "IsApply", "CostType", "EnterLimit", });
    internal_static_pb_landlord_S_GetMatchRecord_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_pb_landlord_S_GetMatchRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_GetMatchRecord_descriptor,
        new String[] { "MatchRecord", });
    internal_static_pb_landlord_S_OwnMatchRecord_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_pb_landlord_S_OwnMatchRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_OwnMatchRecord_descriptor,
        new String[] { "HistoryList", });
    internal_static_pb_landlord_S_MatchApply_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_pb_landlord_S_MatchApply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_MatchApply_descriptor,
        new String[] { "Type", "Count", });
    internal_static_pb_landlord_S_MatchCancel_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_pb_landlord_S_MatchCancel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_MatchCancel_descriptor,
        new String[] { "Type", "Count", });
    internal_static_pb_landlord_S_MatchConfig_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_pb_landlord_S_MatchConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_MatchConfig_descriptor,
        new String[] { "MatchId", "BasePoint", "CurRound", "TotalRound", "TimeDown", "RoomId", "Url", "IsMatchOver", });
    internal_static_pb_landlord_S_MatchScore_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_pb_landlord_S_MatchScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_MatchScore_descriptor,
        new String[] { "MatchAward", "ScoreList", });
    internal_static_pb_landlord_S_ForceQuit_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_pb_landlord_S_ForceQuit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_ForceQuit_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_LeaveMatch_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_pb_landlord_S_LeaveMatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_LeaveMatch_descriptor,
        new String[] { });
    internal_static_pb_landlord_S_GodLight_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_pb_landlord_S_GodLight_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_GodLight_descriptor,
        new String[] { "IsJoin", "GoodsId", "Price", "PromotionValue", "AwardPool", "Duration", "NextTime", "Status", "IsOpen", });
    internal_static_pb_landlord_S_GodLightAward_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_pb_landlord_S_GodLightAward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_landlord_S_GodLightAward_descriptor,
        new String[] { "Award", "Final", "Remain", "Total", });
    LandlordBase.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
