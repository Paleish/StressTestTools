// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoMsg.proto

package com.kys.util.netty.proto;

public final class ProtoMsg {
  private ProtoMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.kys.util.netty.proto.ModelIdEnum}
   */
  public enum ModelIdEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Unknown = 0;</code>
     */
    Unknown(0),
    /**
     * <pre>
     ** MODEL ID 
     * </pre>
     *
     * <code>LOGIN_ID = 10;</code>
     */
    LOGIN_ID(10),
    /**
     * <code>GAME_ID = 11;</code>
     */
    GAME_ID(11),
    /**
     * <code>ROOM_ID = 12;</code>
     */
    ROOM_ID(12),
    /**
     * <code>HALL_ID = 13;</code>
     */
    HALL_ID(13),
    /**
     * <code>STORE_ID = 14;</code>
     */
    STORE_ID(14),
    /**
     * <code>PLAYER_ID = 15;</code>
     */
    PLAYER_ID(15),
    /**
     * <code>CHAT_ID = 16;</code>
     */
    CHAT_ID(16),
    /**
     * <code>FRIEND_ID = 17;</code>
     */
    FRIEND_ID(17),
    /**
     * <code>RANK_ID = 18;</code>
     */
    RANK_ID(18),
    /**
     * <code>TASK_ID = 19;</code>
     */
    TASK_ID(19),
    /**
     * <code>MAIL_ID = 20;</code>
     */
    MAIL_ID(20),
    /**
     * <code>SIGNUP_ID = 21;</code>
     */
    SIGNUP_ID(21),
    /**
     * <code>BROADCAST_ID = 22;</code>
     */
    BROADCAST_ID(22),
    /**
     * <code>GAME_HEART = 23;</code>
     */
    GAME_HEART(23),
    /**
     * <code>MARKET_ID = 24;</code>
     */
    MARKET_ID(24),
    /**
     * <pre>
     * 公告
     * </pre>
     *
     * <code>ANNOUNCE_ID = 25;</code>
     */
    ANNOUNCE_ID(25),
    /**
     * <pre>
     * 夺宝商城
     * </pre>
     *
     * <code>SNATCH_ID = 26;</code>
     */
    SNATCH_ID(26),
    /**
     * <pre>
     * 钻石相关活动
     * </pre>
     *
     * <code>DIAMOND_LOTTERY_ID = 27;</code>
     */
    DIAMOND_LOTTERY_ID(27),
    /**
     * <pre>
     * 道具背包
     * </pre>
     *
     * <code>PROP_ID = 28;</code>
     */
    PROP_ID(28),
    /**
     * <pre>
     * VIP
     * </pre>
     *
     * <code>VIP_ID = 29;</code>
     */
    VIP_ID(29),
    /**
     * <pre>
     * 小游戏
     * </pre>
     *
     * <code>LITTLE_ID = 30;</code>
     */
    LITTLE_ID(30),
    /**
     * <pre>
     *二人场游戏
     * </pre>
     *
     * <code>TWO_PLAYER_GAME_ID = 31;</code>
     */
    TWO_PLAYER_GAME_ID(31),
    /**
     * <pre>
     *分享奖励
     * </pre>
     *
     * <code>SHARE_ID = 32;</code>
     */
    SHARE_ID(32),
    /**
     * <pre>
     *复活接口
     * </pre>
     *
     * <code>REVIVE_ID = 33;</code>
     */
    REVIVE_ID(33),
    /**
     * <pre>
     *用户服务-红点推送，
     * </pre>
     *
     * <code>USER_SERVICE_ID = 34;</code>
     */
    USER_SERVICE_ID(34),
    /**
     * <pre>
     *比赛模块
     * </pre>
     *
     * <code>MATCH_ID = 35;</code>
     */
    MATCH_ID(35),
    /**
     * <pre>
     *消除游戏
     * </pre>
     *
     * <code>ELIMINATE_ID = 36;</code>
     */
    ELIMINATE_ID(36),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Unknown = 0;</code>
     */
    public static final int Unknown_VALUE = 0;
    /**
     * <pre>
     ** MODEL ID 
     * </pre>
     *
     * <code>LOGIN_ID = 10;</code>
     */
    public static final int LOGIN_ID_VALUE = 10;
    /**
     * <code>GAME_ID = 11;</code>
     */
    public static final int GAME_ID_VALUE = 11;
    /**
     * <code>ROOM_ID = 12;</code>
     */
    public static final int ROOM_ID_VALUE = 12;
    /**
     * <code>HALL_ID = 13;</code>
     */
    public static final int HALL_ID_VALUE = 13;
    /**
     * <code>STORE_ID = 14;</code>
     */
    public static final int STORE_ID_VALUE = 14;
    /**
     * <code>PLAYER_ID = 15;</code>
     */
    public static final int PLAYER_ID_VALUE = 15;
    /**
     * <code>CHAT_ID = 16;</code>
     */
    public static final int CHAT_ID_VALUE = 16;
    /**
     * <code>FRIEND_ID = 17;</code>
     */
    public static final int FRIEND_ID_VALUE = 17;
    /**
     * <code>RANK_ID = 18;</code>
     */
    public static final int RANK_ID_VALUE = 18;
    /**
     * <code>TASK_ID = 19;</code>
     */
    public static final int TASK_ID_VALUE = 19;
    /**
     * <code>MAIL_ID = 20;</code>
     */
    public static final int MAIL_ID_VALUE = 20;
    /**
     * <code>SIGNUP_ID = 21;</code>
     */
    public static final int SIGNUP_ID_VALUE = 21;
    /**
     * <code>BROADCAST_ID = 22;</code>
     */
    public static final int BROADCAST_ID_VALUE = 22;
    /**
     * <code>GAME_HEART = 23;</code>
     */
    public static final int GAME_HEART_VALUE = 23;
    /**
     * <code>MARKET_ID = 24;</code>
     */
    public static final int MARKET_ID_VALUE = 24;
    /**
     * <pre>
     * 公告
     * </pre>
     *
     * <code>ANNOUNCE_ID = 25;</code>
     */
    public static final int ANNOUNCE_ID_VALUE = 25;
    /**
     * <pre>
     * 夺宝商城
     * </pre>
     *
     * <code>SNATCH_ID = 26;</code>
     */
    public static final int SNATCH_ID_VALUE = 26;
    /**
     * <pre>
     * 钻石相关活动
     * </pre>
     *
     * <code>DIAMOND_LOTTERY_ID = 27;</code>
     */
    public static final int DIAMOND_LOTTERY_ID_VALUE = 27;
    /**
     * <pre>
     * 道具背包
     * </pre>
     *
     * <code>PROP_ID = 28;</code>
     */
    public static final int PROP_ID_VALUE = 28;
    /**
     * <pre>
     * VIP
     * </pre>
     *
     * <code>VIP_ID = 29;</code>
     */
    public static final int VIP_ID_VALUE = 29;
    /**
     * <pre>
     * 小游戏
     * </pre>
     *
     * <code>LITTLE_ID = 30;</code>
     */
    public static final int LITTLE_ID_VALUE = 30;
    /**
     * <pre>
     *二人场游戏
     * </pre>
     *
     * <code>TWO_PLAYER_GAME_ID = 31;</code>
     */
    public static final int TWO_PLAYER_GAME_ID_VALUE = 31;
    /**
     * <pre>
     *分享奖励
     * </pre>
     *
     * <code>SHARE_ID = 32;</code>
     */
    public static final int SHARE_ID_VALUE = 32;
    /**
     * <pre>
     *复活接口
     * </pre>
     *
     * <code>REVIVE_ID = 33;</code>
     */
    public static final int REVIVE_ID_VALUE = 33;
    /**
     * <pre>
     *用户服务-红点推送，
     * </pre>
     *
     * <code>USER_SERVICE_ID = 34;</code>
     */
    public static final int USER_SERVICE_ID_VALUE = 34;
    /**
     * <pre>
     *比赛模块
     * </pre>
     *
     * <code>MATCH_ID = 35;</code>
     */
    public static final int MATCH_ID_VALUE = 35;
    /**
     * <pre>
     *消除游戏
     * </pre>
     *
     * <code>ELIMINATE_ID = 36;</code>
     */
    public static final int ELIMINATE_ID_VALUE = 36;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ModelIdEnum valueOf(int value) {
      return forNumber(value);
    }

    public static ModelIdEnum forNumber(int value) {
      switch (value) {
        case 0: return Unknown;
        case 10: return LOGIN_ID;
        case 11: return GAME_ID;
        case 12: return ROOM_ID;
        case 13: return HALL_ID;
        case 14: return STORE_ID;
        case 15: return PLAYER_ID;
        case 16: return CHAT_ID;
        case 17: return FRIEND_ID;
        case 18: return RANK_ID;
        case 19: return TASK_ID;
        case 20: return MAIL_ID;
        case 21: return SIGNUP_ID;
        case 22: return BROADCAST_ID;
        case 23: return GAME_HEART;
        case 24: return MARKET_ID;
        case 25: return ANNOUNCE_ID;
        case 26: return SNATCH_ID;
        case 27: return DIAMOND_LOTTERY_ID;
        case 28: return PROP_ID;
        case 29: return VIP_ID;
        case 30: return LITTLE_ID;
        case 31: return TWO_PLAYER_GAME_ID;
        case 32: return SHARE_ID;
        case 33: return REVIVE_ID;
        case 34: return USER_SERVICE_ID;
        case 35: return MATCH_ID;
        case 36: return ELIMINATE_ID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ModelIdEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ModelIdEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ModelIdEnum>() {
            public ModelIdEnum findValueByNumber(int number) {
              return ModelIdEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.getDescriptor().getEnumTypes().get(0);
    }

    private static final ModelIdEnum[] VALUES = values();

    public static ModelIdEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ModelIdEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kys.util.netty.proto.ModelIdEnum)
  }

  /**
   * Protobuf enum {@code com.kys.util.netty.proto.MessageTypeEnum}
   */
  public enum MessageTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Error = 0;</code>
     */
    Error(0),
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>clientGetUserInfo = 10101;</code>
     */
    clientGetUserInfo(10101),
    /**
     * <pre>
     ** 客户端返回大厅服务器心跳 
     * </pre>
     *
     * <code>clientReturnHallHeartBeat = 10102;</code>
     */
    clientReturnHallHeartBeat(10102),
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>clientNewLogin = 10103;</code>
     */
    clientNewLogin(10103),
    /**
     * <pre>
     ** 客户端返回游戏服务器心跳 
     * </pre>
     *
     * <code>clientReturnGameHeartBeat = 23103;</code>
     */
    clientReturnGameHeartBeat(23103),
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>clientDoCatch = 11150;</code>
     */
    clientDoCatch(11150),
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>clientPlayCards = 11151;</code>
     */
    clientPlayCards(11151),
    /**
     * <pre>
     ** 进入房间 
     * </pre>
     *
     * <code>clientEnterRoom = 11152;</code>
     */
    clientEnterRoom(11152),
    /**
     * <pre>
     ** 离开房间 
     * </pre>
     *
     * <code>clientLeaveRoom = 11154;</code>
     */
    clientLeaveRoom(11154),
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>clientRecoverGame = 11155;</code>
     */
    clientRecoverGame(11155),
    /**
     * <pre>
     ** 客户端申请托管 
     * </pre>
     *
     * <code>clientAutoPlay = 11156;</code>
     */
    clientAutoPlay(11156),
    /**
     * <pre>
     ** 客户端请求序号 
     * </pre>
     *
     * <code>clientQueryIndex = 11157;</code>
     */
    clientQueryIndex(11157),
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>clientQuickJoin = 12200;</code>
     */
    clientQuickJoin(12200),
    /**
     * <pre>
     ** 取消匹配 
     * </pre>
     *
     * <code>clientCancleJoin = 12201;</code>
     */
    clientCancleJoin(12201),
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>clientRetryReturnGame = 12202;</code>
     */
    clientRetryReturnGame(12202),
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>clientGetRankList = 13250;</code>
     */
    clientGetRankList(13250),
    /**
     * <pre>
     ** 获取游戏场次信息 
     * </pre>
     *
     * <code>clientGetRoomConfig = 13254;</code>
     */
    clientGetRoomConfig(13254),
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>clientRewardMessage = 13256;</code>
     */
    clientRewardMessage(13256),
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>clientGetMonthCardDiamond = 13259;</code>
     */
    clientGetMonthCardDiamond(13259),
    /**
     * <pre>
     ** 客户端获取玩家抽取红包比赛数 
     * </pre>
     *
     * <code>clientGetLotteryCount = 13260;</code>
     */
    clientGetLotteryCount(13260),
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>clientGetRoomInfo = 13261;</code>
     */
    clientGetRoomInfo(13261),
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>clientPlayerLogout = 13262;</code>
     */
    clientPlayerLogout(13262),
    /**
     * <pre>
     ** 玩家查看与大厅连接 
     * </pre>
     *
     * <code>clientCheckConnect = 13263;</code>
     */
    clientCheckConnect(13263),
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>clientGetPFList = 13264;</code>
     */
    clientGetPFList(13264),
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>clientChoosePF = 13265;</code>
     */
    clientChoosePF(13265),
    /**
     * <pre>
     ** 客户端获取历史排名 
     * </pre>
     *
     * <code>clientGetHistoryRank = 13266;</code>
     */
    clientGetHistoryRank(13266),
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>clientH5Reward = 13267;</code>
     */
    clientH5Reward(13267),
    /**
     * <pre>
     ** 客户端新抽取红包 
     * </pre>
     *
     * <code>clientNewDrawWinCup = 13268;</code>
     */
    clientNewDrawWinCup(13268),
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>clientGetNewHallInfo = 13269;</code>
     */
    clientGetNewHallInfo(13269),
    /**
     * <pre>
     ** 玩家获取好运墙 
     * </pre>
     *
     * <code>clientLuckWall = 13272;</code>
     */
    clientLuckWall(13272),
    /**
     * <pre>
     ** 客户端请求cdkey奖励 
     * </pre>
     *
     * <code>clientCdkeyAward = 13273;</code>
     */
    clientCdkeyAward(13273),
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>clientGetStoreInfo = 14300;</code>
     */
    clientGetStoreInfo(14300),
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>clientConvertGoods = 14301;</code>
     */
    clientConvertGoods(14301),
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>clientWXPayResultQuery = 14302;</code>
     */
    clientWXPayResultQuery(14302),
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>clientBuyOrderGoods = 14303;</code>
     */
    clientBuyOrderGoods(14303),
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>clientGetFirstCharge = 14304;</code>
     */
    clientGetFirstCharge(14304),
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>clientGetDailyGift = 14305;</code>
     */
    clientGetDailyGift(14305),
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>clientGetMonthCard = 14306;</code>
     */
    clientGetMonthCard(14306),
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>clientGetResurgenceGift = 14307;</code>
     */
    clientGetResurgenceGift(14307),
    /**
     * <pre>
     ** 客户端请求兑换墙 
     * </pre>
     *
     * <code>clientGetConvertMessage = 14308;</code>
     */
    clientGetConvertMessage(14308),
    /**
     * <pre>
     ** 客户端新下单接口 
     * </pre>
     *
     * <code>clientNewBuyOrder = 14309;</code>
     */
    clientNewBuyOrder(14309),
    /**
     * <pre>
     ** 客户端新兑换红包请求 
     * </pre>
     *
     * <code>clientNewConvert = 14310;</code>
     */
    clientNewConvert(14310),
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
     * </pre>
     *
     * <code>clientAlipayAccount = 14311;</code>
     */
    clientAlipayAccount(14311),
    /**
     * <pre>
     ** 客户端请求当前有效支付方式 
     * </pre>
     *
     * <code>clientPayOptions = 14312;</code>
     */
    clientPayOptions(14312),
    /**
     * <pre>
     ** 客户端请求实名验证 
     * </pre>
     *
     * <code>clientIdVerify = 14313;</code>
     */
    clientIdVerify(14313),
    /**
     * <pre>
     ** 获取实名认证奖励列表 
     * </pre>
     *
     * <code>clientVerifyAward = 14314;</code>
     */
    clientVerifyAward(14314),
    /**
     * <pre>
     ** 客户端请求微信支付信息，用于微信小程序支付 
     * </pre>
     *
     * <code>clientMiniAppPay = 14315;</code>
     */
    clientMiniAppPay(14315),
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
     * </pre>
     *
     * <code>clientUnionAccount = 14316;</code>
     */
    clientUnionAccount(14316),
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>clientQueryDailyTask = 19264;</code>
     */
    clientQueryDailyTask(19264),
    /**
     * <pre>
     ** 客户端请求获取新手任务奖励 
     * </pre>
     *
     * <code>clientGetNoviceReward = 19266;</code>
     */
    clientGetNoviceReward(19266),
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>clientQueryNoviceTask = 19267;</code>
     */
    clientQueryNoviceTask(19267),
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>clientGetDTAward = 19268;</code>
     */
    clientGetDTAward(19268),
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>clientGetAnnounce = 25271;</code>
     */
    clientGetAnnounce(25271),
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>serverGetAnnounce = 25801;</code>
     */
    serverGetAnnounce(25801),
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>clientGetMail = 20600;</code>
     */
    clientGetMail(20600),
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>clientGetMailReward = 20601;</code>
     */
    clientGetMailReward(20601),
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>clientDelMail = 20602;</code>
     */
    clientDelMail(20602),
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>clientReadMail = 20603;</code>
     */
    clientReadMail(20603),
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>clientDel2R = 20604;</code>
     */
    clientDel2R(20604),
    /**
     * <pre>
     ** 获取新版VIP信息 
     * </pre>
     *
     * <code>clientGetVip = 29005;</code>
     */
    clientGetVip(29005),
    /**
     * <pre>
     ** 获取新版VIP每日礼包 
     * </pre>
     *
     * <code>clientGetDayGift = 29006;</code>
     */
    clientGetDayGift(29006),
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>serverGetVip = 29007;</code>
     */
    serverGetVip(29007),
    /**
     * <pre>
     ** 服务器返回领取VIP每日礼包 
     * </pre>
     *
     * <code>serverGetDayGift = 29008;</code>
     */
    serverGetDayGift(29008),
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>serverLogin = 10500;</code>
     */
    serverLogin(10500),
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>serverGetUserInfo = 10501;</code>
     */
    serverGetUserInfo(10501),
    /**
     * <pre>
     ** 服务器发送大厅服务器心跳 
     * </pre>
     *
     * <code>serverSendHallHeartBeat = 10502;</code>
     */
    serverSendHallHeartBeat(10502),
    /**
     * <pre>
     ** 服务器发送游戏服务器心跳 
     * </pre>
     *
     * <code>serverSendGameHeartBeat = 23503;</code>
     */
    serverSendGameHeartBeat(23503),
    /**
     * <pre>
     ** 加入房间 
     * </pre>
     *
     * <code>serverEnterRoom = 11550;</code>
     */
    serverEnterRoom(11550),
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>serverDoCatch = 11551;</code>
     */
    serverDoCatch(11551),
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>serverPlayCards = 11552;</code>
     */
    serverPlayCards(11552),
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>serverRecoverGame = 11553;</code>
     */
    serverRecoverGame(11553),
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>serverAutoPlay = 11554;</code>
     */
    serverAutoPlay(11554),
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>serverLeaveRoom = 11555;</code>
     */
    serverLeaveRoom(11555),
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>serverQueryIndex = 11556;</code>
     */
    serverQueryIndex(11556),
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>serverRetryReturnGame = 11557;</code>
     */
    serverRetryReturnGame(11557),
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>serverQuickJoin = 12600;</code>
     */
    serverQuickJoin(12600),
    /**
     * <pre>
     ** 服务器取消加入 
     * </pre>
     *
     * <code>serverCancleJoin = 12601;</code>
     */
    serverCancleJoin(12601),
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>serverGetRankList = 13650;</code>
     */
    serverGetRankList(13650),
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>serverRewardMessage = 13654;</code>
     */
    serverRewardMessage(13654),
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>serverGetRoomConfig = 13656;</code>
     */
    serverGetRoomConfig(13656),
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>serverGetMonthCardDiamond = 13659;</code>
     */
    serverGetMonthCardDiamond(13659),
    /**
     * <pre>
     ** 服务器返回抽取红包比赛数 
     * </pre>
     *
     * <code>serverGetLotteryCount = 13660;</code>
     */
    serverGetLotteryCount(13660),
    /**
     * <pre>
     ** 服务器返回单一房间配置信息 
     * </pre>
     *
     * <code>serverGetRoomInfo = 13661;</code>
     */
    serverGetRoomInfo(13661),
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>serverCheckConnect = 13662;</code>
     */
    serverCheckConnect(13662),
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>serverGetPFList = 13663;</code>
     */
    serverGetPFList(13663),
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>serverChoosePF = 13664;</code>
     */
    serverChoosePF(13664),
    /**
     * <pre>
     ** 服务器获取历史排名 
     * </pre>
     *
     * <code>serverGetHistoryRank = 13665;</code>
     */
    serverGetHistoryRank(13665),
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>serverH5Reward = 13666;</code>
     */
    serverH5Reward(13666),
    /**
     * <pre>
     ** 服务器返回新抽取红包 
     * </pre>
     *
     * <code>serverNewDrawWinCup = 13667;</code>
     */
    serverNewDrawWinCup(13667),
    /**
     * <pre>
     ** 服务器返回新大厅信息 
     * </pre>
     *
     * <code>serverGetNewHallInfo = 13668;</code>
     */
    serverGetNewHallInfo(13668),
    /**
     * <pre>
     ** 服务器返回好运墙 
     * </pre>
     *
     * <code>serverLuckWall = 13671;</code>
     */
    serverLuckWall(13671),
    /**
     * <pre>
     ** 服务器兑换码奖励信息 
     * </pre>
     *
     * <code>serverCdkeyAward = 13672;</code>
     */
    serverCdkeyAward(13672),
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>serverGetStoreInfo = 14700;</code>
     */
    serverGetStoreInfo(14700),
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>serverConvertGoods = 14701;</code>
     */
    serverConvertGoods(14701),
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>serverWXPayResult = 14702;</code>
     */
    serverWXPayResult(14702),
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>serverBuyOrderGoods = 14703;</code>
     */
    serverBuyOrderGoods(14703),
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>serverGetFirstCharge = 14704;</code>
     */
    serverGetFirstCharge(14704),
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>serverGetDailyGift = 14705;</code>
     */
    serverGetDailyGift(14705),
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>serverGetMonthCard = 14706;</code>
     */
    serverGetMonthCard(14706),
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>serverGetResurgenceGift = 14707;</code>
     */
    serverGetResurgenceGift(14707),
    /**
     * <pre>
     ** 服务器返回兑换墙 
     * </pre>
     *
     * <code>serverGetConvertMessage = 14708;</code>
     */
    serverGetConvertMessage(14708),
    /**
     * <pre>
     ** 服务器返回新下单 
     * </pre>
     *
     * <code>serverNewBuyOrder = 14709;</code>
     */
    serverNewBuyOrder(14709),
    /**
     * <pre>
     ** Server 返回兑换商品 
     * </pre>
     *
     * <code>serverNewConvert = 14710;</code>
     */
    serverNewConvert(14710),
    /**
     * <pre>
     ** 服务器返回支付宝账号和名字信息 
     * </pre>
     *
     * <code>serverAlipayAccount = 14711;</code>
     */
    serverAlipayAccount(14711),
    /**
     * <pre>
     ** 服务器返回当前有效支付方式 
     * </pre>
     *
     * <code>serverPayOptions = 14712;</code>
     */
    serverPayOptions(14712),
    /**
     * <pre>
     ** 服务器返回实名验证结果 
     * </pre>
     *
     * <code>serverIdVerify = 14713;</code>
     */
    serverIdVerify(14713),
    /**
     * <pre>
     ** 返回实名认证奖励列表 
     * </pre>
     *
     * <code>serverVerifyAward = 14714;</code>
     */
    serverVerifyAward(14714),
    /**
     * <pre>
     ** 用于微信小程序支付的返回信息 
     * </pre>
     *
     * <code>serverMiniAppPay = 14715;</code>
     */
    serverMiniAppPay(14715),
    /**
     * <pre>
     ** 服务器返回银行卡卡号信息列表 
     * </pre>
     *
     * <code>serverUnionAccount = 14716;</code>
     */
    serverUnionAccount(14716),
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>serverQueryDailyTask = 19663;</code>
     */
    serverQueryDailyTask(19663),
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>serverGetNoviceReward = 19665;</code>
     */
    serverGetNoviceReward(19665),
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>serverQueryNoviceTask = 19666;</code>
     */
    serverQueryNoviceTask(19666),
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>serverGetDTAward = 19667;</code>
     */
    serverGetDTAward(19667),
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>clientSendTelCode = 24262;</code>
     */
    clientSendTelCode(24262),
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>clientVerifyTelCode = 24263;</code>
     */
    clientVerifyTelCode(24263),
    /**
     * <pre>
     ** 客户端请求分包 
     * </pre>
     *
     * <code>clientSharePackage = 24267;</code>
     */
    clientSharePackage(24267),
    /**
     * <pre>
     ** 客户端请求大厅活动奖励 
     * </pre>
     *
     * <code>clientGetAwardList = 24268;</code>
     */
    clientGetAwardList(24268),
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>serverSendTelCode = 24662;</code>
     */
    serverSendTelCode(24662),
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息 
     * </pre>
     *
     * <code>serverVerifyTelCode = 24663;</code>
     */
    serverVerifyTelCode(24663),
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>serverSharePackage = 24667;</code>
     */
    serverSharePackage(24667),
    /**
     * <pre>
     ** 服务器返回大厅活动奖励 
     * </pre>
     *
     * <code>serverGetAwardList = 24668;</code>
     */
    serverGetAwardList(24668),
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>serverGetMail = 20650;</code>
     */
    serverGetMail(20650),
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>serverGetMailReward = 20651;</code>
     */
    serverGetMailReward(20651),
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>serverDelMail = 20652;</code>
     */
    serverDelMail(20652),
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>serverReadMail = 20653;</code>
     */
    serverReadMail(20653),
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>serverDel2R = 20654;</code>
     */
    serverDel2R(20654),
    /**
     * <pre>
     ** 客户端获取用户收货地址 
     * </pre>
     *
     * <code>clientGetReceiveAddr = 26001;</code>
     */
    clientGetReceiveAddr(26001),
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>clientAlterReceiveAddr = 26002;</code>
     */
    clientAlterReceiveAddr(26002),
    /**
     * <pre>
     ** 夺宝主界面，当前商品列表信息接口 
     * </pre>
     *
     * <code>clientSnatchList = 26003;</code>
     */
    clientSnatchList(26003),
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>clientSnatchItemDetail = 26004;</code>
     */
    clientSnatchItemDetail(26004),
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>clientSnatchBet = 26005;</code>
     */
    clientSnatchBet(26005),
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>clientSnatchAwardList = 26006;</code>
     */
    clientSnatchAwardList(26006),
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>clientOwnSnatchRecord = 26007;</code>
     */
    clientOwnSnatchRecord(26007),
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>clientSnatchItemHistory = 26008;</code>
     */
    clientSnatchItemHistory(26008),
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>clientSnatchHistoryDetail = 26009;</code>
     */
    clientSnatchHistoryDetail(26009),
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>clientSnatchGetAward = 26010;</code>
     */
    clientSnatchGetAward(26010),
    /**
     * <pre>
     ** 服务器返回用户收货地址
     * </pre>
     *
     * <code>serverGetReceiveAddr = 26501;</code>
     */
    serverGetReceiveAddr(26501),
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>serverAlterReceiveAddr = 26502;</code>
     */
    serverAlterReceiveAddr(26502),
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>serverSnatchList = 26503;</code>
     */
    serverSnatchList(26503),
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>serverSnatchItemDetail = 26504;</code>
     */
    serverSnatchItemDetail(26504),
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>serverSnatchBet = 26505;</code>
     */
    serverSnatchBet(26505),
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>serverSnatchAwardList = 26506;</code>
     */
    serverSnatchAwardList(26506),
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>serverOwnSnatchRecord = 26507;</code>
     */
    serverOwnSnatchRecord(26507),
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>serverSnatchItemHistory = 26508;</code>
     */
    serverSnatchItemHistory(26508),
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>serverSnatchHistoryDetail = 26509;</code>
     */
    serverSnatchHistoryDetail(26509),
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>serverSnatchGetAward = 26510;</code>
     */
    serverSnatchGetAward(26510),
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>clientEnterDG = 27001;</code>
     */
    clientEnterDG(27001),
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>clientDGLottery = 27002;</code>
     */
    clientDGLottery(27002),
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>clientResetLottery = 27003;</code>
     */
    clientResetLottery(27003),
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>clientExitDG = 27004;</code>
     */
    clientExitDG(27004),
    /**
     * <pre>
     ** 客户端请求开启抽奖活动 
     * </pre>
     *
     * <code>clientOpenDG = 27005;</code>
     */
    clientOpenDG(27005),
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>clientOpenDD = 27006;</code>
     */
    clientOpenDD(27006),
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>clientDDLottery = 27007;</code>
     */
    clientDDLottery(27007),
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>clientExitDD = 27008;</code>
     */
    clientExitDD(27008),
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>serverEnterDG = 27501;</code>
     */
    serverEnterDG(27501),
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>serverDGLottery = 27502;</code>
     */
    serverDGLottery(27502),
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>serverResetLottery = 27503;</code>
     */
    serverResetLottery(27503),
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>serverExitDG = 27504;</code>
     */
    serverExitDG(27504),
    /**
     * <pre>
     ** 服务器返回用户开启抽奖 
     * </pre>
     *
     * <code>serverOpenDG = 27505;</code>
     */
    serverOpenDG(27505),
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>serverOpenDD = 27506;</code>
     */
    serverOpenDD(27506),
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>serverDDLottery = 27507;</code>
     */
    serverDDLottery(27507),
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>serverExitDD = 27508;</code>
     */
    serverExitDD(27508),
    /**
     * <pre>
     ** 客户端请求所有道具信息 
     * </pre>
     *
     * <code>clientQueryProp = 28001;</code>
     */
    clientQueryProp(28001),
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>clientUseProp = 28002;</code>
     */
    clientUseProp(28002),
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>clientQueryPropCount = 28003;</code>
     */
    clientQueryPropCount(28003),
    /**
     * <pre>
     ** 客户端查询钻石复活界面信息 
     * </pre>
     *
     * <code>clientQueryDiamondRevive = 28004;</code>
     */
    clientQueryDiamondRevive(28004),
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>serverQueryProp = 28501;</code>
     */
    serverQueryProp(28501),
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>serverUseProp = 28502;</code>
     */
    serverUseProp(28502),
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>serverQueryPropCount = 28503;</code>
     */
    serverQueryPropCount(28503),
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>serverReturnDiamondRevive = 28504;</code>
     */
    serverReturnDiamondRevive(28504),
    /**
     * <pre>
     ** 客户端请求签到信息 
     * </pre>
     *
     * <code>clientSignInfo = 21001;</code>
     */
    clientSignInfo(21001),
    /**
     * <pre>
     ** 客户端请求签到奖励 
     * </pre>
     *
     * <code>clientSignAward = 21002;</code>
     */
    clientSignAward(21002),
    /**
     * <pre>
     ** 客户端请求签到状态 
     * </pre>
     *
     * <code>clientSignState = 21003;</code>
     */
    clientSignState(21003),
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>clientLTLottery = 21004;</code>
     */
    clientLTLottery(21004),
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>clientGetTSReward = 21005;</code>
     */
    clientGetTSReward(21005),
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>clientGetLuckInfo = 21006;</code>
     */
    clientGetLuckInfo(21006),
    /**
     * <pre>
     ** 服务端返回签到信息 
     * </pre>
     *
     * <code>serverSignInfo = 21501;</code>
     */
    serverSignInfo(21501),
    /**
     * <pre>
     ** 服务器返回签到奖励 
     * </pre>
     *
     * <code>serverSignAward = 21502;</code>
     */
    serverSignAward(21502),
    /**
     * <pre>
     ** 服务端返回签到状态 
     * </pre>
     *
     * <code>serverSignState = 21503;</code>
     */
    serverSignState(21503),
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>serverLTLottery = 21504;</code>
     */
    serverLTLottery(21504),
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>serverGetTSReward = 21505;</code>
     */
    serverGetTSReward(21505),
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>serverGetLuckInfo = 21506;</code>
     */
    serverGetLuckInfo(21506),
    /**
     * <pre>
     ** 客户端请求进入套羊 
     * </pre>
     *
     * <code>clientEnterSleeve = 30001;</code>
     */
    clientEnterSleeve(30001),
    /**
     * <pre>
     ** 客户端套羊动作 
     * </pre>
     *
     * <code>clientSleeveSheep = 30002;</code>
     */
    clientSleeveSheep(30002),
    /**
     * <pre>
     ** 客户端请求查询玩家货币 
     * </pre>
     *
     * <code>clientQueryPlayerCoin = 30003;</code>
     */
    clientQueryPlayerCoin(30003),
    /**
     * <pre>
     ** 客户端请求退出套羊 
     * </pre>
     *
     * <code>clientExitSleeve = 30004;</code>
     */
    clientExitSleeve(30004),
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>clientEnterNewSleeve = 30005;</code>
     */
    clientEnterNewSleeve(30005),
    /**
     * <pre>
     ** 客户端请求开始套羊信息 
     * </pre>
     *
     * <code>clientNewSleeveSheep = 30006;</code>
     */
    clientNewSleeveSheep(30006),
    /**
     * <pre>
     ** 客户端请求(新套羊结果) 
     * </pre>
     *
     * <code>clientNewSleeveResult = 30007;</code>
     */
    clientNewSleeveResult(30007),
    /**
     * <pre>
     ** 客户端退出套羊 
     * </pre>
     *
     * <code>clientExitNewSleeve = 30008;</code>
     */
    clientExitNewSleeve(30008),
    /**
     * <pre>
     ** 服务端返回进入套羊 
     * </pre>
     *
     * <code>serverEnterSleeve = 30201;</code>
     */
    serverEnterSleeve(30201),
    /**
     * <pre>
     ** 服务端返回套羊动作 
     * </pre>
     *
     * <code>serverSleeveSheep = 30202;</code>
     */
    serverSleeveSheep(30202),
    /**
     * <pre>
     ** 服务器返回查询玩家货币 
     * </pre>
     *
     * <code>serverQueryPlayerCoin = 30203;</code>
     */
    serverQueryPlayerCoin(30203),
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>serverExitSleeve = 30204;</code>
     */
    serverExitSleeve(30204),
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>serverEnterNewSleeve = 30205;</code>
     */
    serverEnterNewSleeve(30205),
    /**
     * <pre>
     ** 服务器返回开始套羊信息 
     * </pre>
     *
     * <code>serverNewSleeveSheep = 30206;</code>
     */
    serverNewSleeveSheep(30206),
    /**
     * <pre>
     ** 服务器返回套羊结果 
     * </pre>
     *
     * <code>serverNewSleeveResult = 30207;</code>
     */
    serverNewSleeveResult(30207),
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>serverExitNewSleeve = 30208;</code>
     */
    serverExitNewSleeve(30208),
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>client_2_DoCatch = 31001;</code>
     */
    client_2_DoCatch(31001),
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>client_2_PlayCards = 31002;</code>
     */
    client_2_PlayCards(31002),
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>client_2_RecoverGame = 31003;</code>
     */
    client_2_RecoverGame(31003),
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>client_2_LeaveRoom = 31004;</code>
     */
    client_2_LeaveRoom(31004),
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>server_2_DoCatch = 31501;</code>
     */
    server_2_DoCatch(31501),
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>server_2_PlayCards = 31502;</code>
     */
    server_2_PlayCards(31502),
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>server_2_RecoverGame = 31503;</code>
     */
    server_2_RecoverGame(31503),
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>server_2_LeaveRoom = 31504;</code>
     */
    server_2_LeaveRoom(31504),
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>clientMineShare = 32001;</code>
     */
    clientMineShare(32001),
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>clientFriendShare = 32002;</code>
     */
    clientFriendShare(32002),
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>clientGetMSAward = 32003;</code>
     */
    clientGetMSAward(32003),
    /**
     * <pre>
     ** 玩家获取好友的分享奖励 
     * </pre>
     *
     * <code>clientGetFSAward = 32004;</code>
     */
    clientGetFSAward(32004),
    /**
     * <pre>
     ** 玩家获取邀请任务 
     * </pre>
     *
     * <code>clientGetShareTask = 32005;</code>
     */
    clientGetShareTask(32005),
    /**
     * <pre>
     ** 玩家获取邀请任务奖励 
     * </pre>
     *
     * <code>clientGetShareTaskAward = 32006;</code>
     */
    clientGetShareTaskAward(32006),
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数ACK 
     * </pre>
     *
     * <code>serverMineShare = 32501;</code>
     */
    serverMineShare(32501),
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领ACK 
     * </pre>
     *
     * <code>serverFriendShare = 32502;</code>
     */
    serverFriendShare(32502),
    /**
     * <pre>
     ** 服务器返回自己奖励 
     * </pre>
     *
     * <code>serverGetMSAward = 32503;</code>
     */
    serverGetMSAward(32503),
    /**
     * <pre>
     ** 服务器返回好友福利 
     * </pre>
     *
     * <code>serverGetFSAward = 32504;</code>
     */
    serverGetFSAward(32504),
    /**
     * <pre>
     ** 服务器返回邀请任务 
     * </pre>
     *
     * <code>serverGetShareTask = 32505;</code>
     */
    serverGetShareTask(32505),
    /**
     * <pre>
     ** 服务器返回邀请任务奖励 
     * </pre>
     *
     * <code>serverGetShareTaskAward = 32506;</code>
     */
    serverGetShareTaskAward(32506),
    /**
     * <pre>
     ** 客户端查询复活界面信息 
     * </pre>
     *
     * <code>clientQueryReviveInfo = 33001;</code>
     */
    clientQueryReviveInfo(33001),
    /**
     * <pre>
     ** 客户端使用复活次数 
     * </pre>
     *
     * <code>clientUseRevive = 33002;</code>
     */
    clientUseRevive(33002),
    /**
     * <pre>
     ** 获取新手启航礼包信息
     * </pre>
     *
     * <code>clientReviveFirstCharge = 33003;</code>
     */
    clientReviveFirstCharge(33003),
    /**
     * <pre>
     ** 获取每日复活礼包信息 
     * </pre>
     *
     * <code>clientReviveDayGift = 33004;</code>
     */
    clientReviveDayGift(33004),
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>serverQueryReviveInfo = 33501;</code>
     */
    serverQueryReviveInfo(33501),
    /**
     * <pre>
     ** 服务器返回使用复活结果 
     * </pre>
     *
     * <code>serverUseRevive = 33502;</code>
     */
    serverUseRevive(33502),
    /**
     * <pre>
     ** 服务器返回新手启航礼包信息 
     * </pre>
     *
     * <code>serverReviveFirstCharge = 33503;</code>
     */
    serverReviveFirstCharge(33503),
    /**
     * <pre>
     ** 服务器返回每日复活礼包信息 
     * </pre>
     *
     * <code>serverReviveDayGift = 33504;</code>
     */
    serverReviveDayGift(33504),
    /**
     * <pre>
     ** 客户端获取大厅红点 
     * </pre>
     *
     * <code>clientGetRedTip = 34001;</code>
     */
    clientGetRedTip(34001),
    /**
     * <pre>
     ** 服务器返回大厅红点 
     * </pre>
     *
     * <code>serverGetRedTip = 34501;</code>
     */
    serverGetRedTip(34501),
    /**
     * <pre>
     ** 客户端请求赛事信息 
     * </pre>
     *
     * <code>clientGetMatchInfo = 35001;</code>
     */
    clientGetMatchInfo(35001),
    /**
     * <pre>
     ** 客户端请求赛事详细信息 
     * </pre>
     *
     * <code>clientGetMatchDetail = 35002;</code>
     */
    clientGetMatchDetail(35002),
    /**
     * <pre>
     ** 客户端请求赛事记录信息 
     * </pre>
     *
     * <code>clientGetMatchRecord = 35003;</code>
     */
    clientGetMatchRecord(35003),
    /**
     * <pre>
     ** 客户端请求赛事报名 
     * </pre>
     *
     * <code>clientMatchApply = 35004;</code>
     */
    clientMatchApply(35004),
    /**
     * <pre>
     ** 客户端请求取消赛事 
     * </pre>
     *
     * <code>clientMatchCancel = 35005;</code>
     */
    clientMatchCancel(35005),
    /**
     * <pre>
     ** 客户端请求自己的记录 
     * </pre>
     *
     * <code>clientOwnMatchRecord = 35006;</code>
     */
    clientOwnMatchRecord(35006),
    /**
     * <pre>
     ** 客户端赛事列表报名人数变化请求 
     * </pre>
     *
     * <code>clientApplyListChange = 35007;</code>
     */
    clientApplyListChange(35007),
    /**
     * <pre>
     ** 客户端获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>clientMatchScore = 35008;</code>
     */
    clientMatchScore(35008),
    /**
     * <pre>
     ** 客户端赛事配置 
     * </pre>
     *
     * <code>clientMatchConfig = 35009;</code>
     */
    clientMatchConfig(35009),
    /**
     * <pre>
     ** 客户端请求消除元素 
     * </pre>
     *
     * <code>clientGetKillCell = 36001;</code>
     */
    clientGetKillCell(36001),
    /**
     * <pre>
     ** Client 请求进入消除游戏 
     * </pre>
     *
     * <code>clientEnterKillCell = 36002;</code>
     */
    clientEnterKillCell(36002),
    /**
     * <pre>
     ** Client 请求退出消除游戏 
     * </pre>
     *
     * <code>clientQuitKillCell = 36003;</code>
     */
    clientQuitKillCell(36003),
    /**
     * <pre>
     ** 服务器返回赛事信息 
     * </pre>
     *
     * <code>serverGetMatchInfo = 35501;</code>
     */
    serverGetMatchInfo(35501),
    /**
     * <pre>
     ** 服务器返回赛事详细信息 
     * </pre>
     *
     * <code>serverGetMatchDetail = 35502;</code>
     */
    serverGetMatchDetail(35502),
    /**
     * <pre>
     ** 服务器返回赛事记录信息 
     * </pre>
     *
     * <code>serverGetMatchRecord = 35503;</code>
     */
    serverGetMatchRecord(35503),
    /**
     * <pre>
     ** 服务器返回赛事报名结果 
     * </pre>
     *
     * <code>serverMatchApply = 35504;</code>
     */
    serverMatchApply(35504),
    /**
     * <pre>
     ** 服务器返回取消赛事 
     * </pre>
     *
     * <code>serverMatchCancel = 35505;</code>
     */
    serverMatchCancel(35505),
    /**
     * <pre>
     ** 服务器返回自己的记录信息 
     * </pre>
     *
     * <code>serverOwnMatchRecord = 35506;</code>
     */
    serverOwnMatchRecord(35506),
    /**
     * <pre>
     ** 赛事列表参赛人数变化推送 
     * </pre>
     *
     * <code>serverApplyListChange = 35507;</code>
     */
    serverApplyListChange(35507),
    /**
     * <pre>
     ** 获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>serverMatchScore = 35508;</code>
     */
    serverMatchScore(35508),
    /**
     * <pre>
     ** 服务器返回赛事配置 
     * </pre>
     *
     * <code>serverMatchConfig = 35509;</code>
     */
    serverMatchConfig(35509),
    /**
     * <pre>
     ** 服务器返回消除元素信息 
     * </pre>
     *
     * <code>serverGetKillCell = 36501;</code>
     */
    serverGetKillCell(36501),
    /**
     * <pre>
     ** 服务器返回进入消除游戏 
     * </pre>
     *
     * <code>serverEnterKillCell = 36502;</code>
     */
    serverEnterKillCell(36502),
    /**
     * <pre>
     ** 服务器返回退出消除游戏 
     * </pre>
     *
     * <code>serverQuitKillCell = 36503;</code>
     */
    serverQuitKillCell(36503),
    /**
     * <pre>
     ** 服务器广播玩家加入房间消息 
     * </pre>
     *
     * <code>b_EnterRoom = 22001;</code>
     */
    b_EnterRoom(22001),
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>b_GameStart = 22002;</code>
     */
    b_GameStart(22002),
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>b_DoCatch = 22003;</code>
     */
    b_DoCatch(22003),
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>b_CatchResult = 22004;</code>
     */
    b_CatchResult(22004),
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>b_PlayCards = 22005;</code>
     */
    b_PlayCards(22005),
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>b_SendDiZhuCard = 22007;</code>
     */
    b_SendDiZhuCard(22007),
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>b_NextPlayer = 22008;</code>
     */
    b_NextPlayer(22008),
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>b_GameSettle = 22009;</code>
     */
    b_GameSettle(22009),
    /**
     * <pre>
     ** 广播公告消息 
     * </pre>
     *
     * <code>b_RewardMessage = 22010;</code>
     */
    b_RewardMessage(22010),
    /**
     * <pre>
     ** 广播玩家托管消息
     * </pre>
     *
     * <code>b_AutoPlay = 22011;</code>
     */
    b_AutoPlay(22011),
    /**
     * <pre>
     ** 推送玩家应该加入的房间号和url 
     * </pre>
     *
     * <code>b_RoomIdUrl = 22012;</code>
     */
    b_RoomIdUrl(22012),
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>b_AwardDialog = 22013;</code>
     */
    b_AwardDialog(22013),
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>b_BuySuccess = 22014;</code>
     */
    b_BuySuccess(22014),
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>b_RedDotPush = 22015;</code>
     */
    b_RedDotPush(22015),
    /**
     * <pre>
     ** 游戏内强制公告推送 
     * </pre>
     *
     * <code>b_ForceAnnounce = 22016;</code>
     */
    b_ForceAnnounce(22016),
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>b_DGameMessage = 22017;</code>
     */
    b_DGameMessage(22017),
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>b_DGOver = 22018;</code>
     */
    b_DGOver(22018),
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>b_DDOver = 22019;</code>
     */
    b_DDOver(22019),
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>b_DDInfo = 22020;</code>
     */
    b_DDInfo(22020),
    /**
     * <pre>
     ** 套羊跑马灯推送 
     * </pre>
     *
     * <code>b_SSInfo = 22021;</code>
     */
    b_SSInfo(22021),
    /**
     * <pre>
     ** 套羊跑马灯信息 
     * </pre>
     *
     * <code>b_NewSleeveSheepInfo = 22022;</code>
     */
    b_NewSleeveSheepInfo(22022),
    /**
     * <pre>
     ** 广播新套羊活动结束 
     * </pre>
     *
     * <code>b_NewSleeverOver = 22023;</code>
     */
    b_NewSleeverOver(22023),
    /**
     * <pre>
     ** 服务器推送钻石复活次数变化 
     * </pre>
     *
     * <code>b_DiamondReviveInfo = 22024;</code>
     */
    b_DiamondReviveInfo(22024),
    /**
     * <pre>
     ** 二人场-广播有玩家进行托管了 
     * </pre>
     *
     * <code>b_2_AutoPlay = 22025;</code>
     */
    b_2_AutoPlay(22025),
    /**
     * <pre>
     ** 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>b_2_GameStart = 22026;</code>
     */
    b_2_GameStart(22026),
    /**
     * <pre>
     ** 二人场-通知叫地主 
     * </pre>
     *
     * <code>b_2_DoCatch = 22027;</code>
     */
    b_2_DoCatch(22027),
    /**
     * <pre>
     ** 二人场-广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>b_2_CatchResult = 22028;</code>
     */
    b_2_CatchResult(22028),
    /**
     * <pre>
     ** 二人场-广播发地主牌 
     * </pre>
     *
     * <code>b_2_SendDiZhuCard = 22029;</code>
     */
    b_2_SendDiZhuCard(22029),
    /**
     * <pre>
     ** 二人场-服务器推送游戏结算信息 
     * </pre>
     *
     * <code>b_2_GameSettle = 22032;</code>
     */
    b_2_GameSettle(22032),
    /**
     * <pre>
     ** 赛事准备开始的推送 
     * </pre>
     *
     * <code>b_MatchStart = 22034;</code>
     */
    b_MatchStart(22034),
    /**
     * <pre>
     ** 赛事结束等待的推送 
     * </pre>
     *
     * <code>b_MatchEnd = 22035;</code>
     */
    b_MatchEnd(22035),
    /**
     * <pre>
     ** 赛事结算的推送 
     * </pre>
     *
     * <code>b_MatchResult = 22036;</code>
     */
    b_MatchResult(22036),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Error = 0;</code>
     */
    public static final int Error_VALUE = 0;
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>clientGetUserInfo = 10101;</code>
     */
    public static final int clientGetUserInfo_VALUE = 10101;
    /**
     * <pre>
     ** 客户端返回大厅服务器心跳 
     * </pre>
     *
     * <code>clientReturnHallHeartBeat = 10102;</code>
     */
    public static final int clientReturnHallHeartBeat_VALUE = 10102;
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>clientNewLogin = 10103;</code>
     */
    public static final int clientNewLogin_VALUE = 10103;
    /**
     * <pre>
     ** 客户端返回游戏服务器心跳 
     * </pre>
     *
     * <code>clientReturnGameHeartBeat = 23103;</code>
     */
    public static final int clientReturnGameHeartBeat_VALUE = 23103;
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>clientDoCatch = 11150;</code>
     */
    public static final int clientDoCatch_VALUE = 11150;
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>clientPlayCards = 11151;</code>
     */
    public static final int clientPlayCards_VALUE = 11151;
    /**
     * <pre>
     ** 进入房间 
     * </pre>
     *
     * <code>clientEnterRoom = 11152;</code>
     */
    public static final int clientEnterRoom_VALUE = 11152;
    /**
     * <pre>
     ** 离开房间 
     * </pre>
     *
     * <code>clientLeaveRoom = 11154;</code>
     */
    public static final int clientLeaveRoom_VALUE = 11154;
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>clientRecoverGame = 11155;</code>
     */
    public static final int clientRecoverGame_VALUE = 11155;
    /**
     * <pre>
     ** 客户端申请托管 
     * </pre>
     *
     * <code>clientAutoPlay = 11156;</code>
     */
    public static final int clientAutoPlay_VALUE = 11156;
    /**
     * <pre>
     ** 客户端请求序号 
     * </pre>
     *
     * <code>clientQueryIndex = 11157;</code>
     */
    public static final int clientQueryIndex_VALUE = 11157;
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>clientQuickJoin = 12200;</code>
     */
    public static final int clientQuickJoin_VALUE = 12200;
    /**
     * <pre>
     ** 取消匹配 
     * </pre>
     *
     * <code>clientCancleJoin = 12201;</code>
     */
    public static final int clientCancleJoin_VALUE = 12201;
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>clientRetryReturnGame = 12202;</code>
     */
    public static final int clientRetryReturnGame_VALUE = 12202;
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>clientGetRankList = 13250;</code>
     */
    public static final int clientGetRankList_VALUE = 13250;
    /**
     * <pre>
     ** 获取游戏场次信息 
     * </pre>
     *
     * <code>clientGetRoomConfig = 13254;</code>
     */
    public static final int clientGetRoomConfig_VALUE = 13254;
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>clientRewardMessage = 13256;</code>
     */
    public static final int clientRewardMessage_VALUE = 13256;
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>clientGetMonthCardDiamond = 13259;</code>
     */
    public static final int clientGetMonthCardDiamond_VALUE = 13259;
    /**
     * <pre>
     ** 客户端获取玩家抽取红包比赛数 
     * </pre>
     *
     * <code>clientGetLotteryCount = 13260;</code>
     */
    public static final int clientGetLotteryCount_VALUE = 13260;
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>clientGetRoomInfo = 13261;</code>
     */
    public static final int clientGetRoomInfo_VALUE = 13261;
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>clientPlayerLogout = 13262;</code>
     */
    public static final int clientPlayerLogout_VALUE = 13262;
    /**
     * <pre>
     ** 玩家查看与大厅连接 
     * </pre>
     *
     * <code>clientCheckConnect = 13263;</code>
     */
    public static final int clientCheckConnect_VALUE = 13263;
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>clientGetPFList = 13264;</code>
     */
    public static final int clientGetPFList_VALUE = 13264;
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>clientChoosePF = 13265;</code>
     */
    public static final int clientChoosePF_VALUE = 13265;
    /**
     * <pre>
     ** 客户端获取历史排名 
     * </pre>
     *
     * <code>clientGetHistoryRank = 13266;</code>
     */
    public static final int clientGetHistoryRank_VALUE = 13266;
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>clientH5Reward = 13267;</code>
     */
    public static final int clientH5Reward_VALUE = 13267;
    /**
     * <pre>
     ** 客户端新抽取红包 
     * </pre>
     *
     * <code>clientNewDrawWinCup = 13268;</code>
     */
    public static final int clientNewDrawWinCup_VALUE = 13268;
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>clientGetNewHallInfo = 13269;</code>
     */
    public static final int clientGetNewHallInfo_VALUE = 13269;
    /**
     * <pre>
     ** 玩家获取好运墙 
     * </pre>
     *
     * <code>clientLuckWall = 13272;</code>
     */
    public static final int clientLuckWall_VALUE = 13272;
    /**
     * <pre>
     ** 客户端请求cdkey奖励 
     * </pre>
     *
     * <code>clientCdkeyAward = 13273;</code>
     */
    public static final int clientCdkeyAward_VALUE = 13273;
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>clientGetStoreInfo = 14300;</code>
     */
    public static final int clientGetStoreInfo_VALUE = 14300;
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>clientConvertGoods = 14301;</code>
     */
    public static final int clientConvertGoods_VALUE = 14301;
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>clientWXPayResultQuery = 14302;</code>
     */
    public static final int clientWXPayResultQuery_VALUE = 14302;
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>clientBuyOrderGoods = 14303;</code>
     */
    public static final int clientBuyOrderGoods_VALUE = 14303;
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>clientGetFirstCharge = 14304;</code>
     */
    public static final int clientGetFirstCharge_VALUE = 14304;
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>clientGetDailyGift = 14305;</code>
     */
    public static final int clientGetDailyGift_VALUE = 14305;
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>clientGetMonthCard = 14306;</code>
     */
    public static final int clientGetMonthCard_VALUE = 14306;
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>clientGetResurgenceGift = 14307;</code>
     */
    public static final int clientGetResurgenceGift_VALUE = 14307;
    /**
     * <pre>
     ** 客户端请求兑换墙 
     * </pre>
     *
     * <code>clientGetConvertMessage = 14308;</code>
     */
    public static final int clientGetConvertMessage_VALUE = 14308;
    /**
     * <pre>
     ** 客户端新下单接口 
     * </pre>
     *
     * <code>clientNewBuyOrder = 14309;</code>
     */
    public static final int clientNewBuyOrder_VALUE = 14309;
    /**
     * <pre>
     ** 客户端新兑换红包请求 
     * </pre>
     *
     * <code>clientNewConvert = 14310;</code>
     */
    public static final int clientNewConvert_VALUE = 14310;
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
     * </pre>
     *
     * <code>clientAlipayAccount = 14311;</code>
     */
    public static final int clientAlipayAccount_VALUE = 14311;
    /**
     * <pre>
     ** 客户端请求当前有效支付方式 
     * </pre>
     *
     * <code>clientPayOptions = 14312;</code>
     */
    public static final int clientPayOptions_VALUE = 14312;
    /**
     * <pre>
     ** 客户端请求实名验证 
     * </pre>
     *
     * <code>clientIdVerify = 14313;</code>
     */
    public static final int clientIdVerify_VALUE = 14313;
    /**
     * <pre>
     ** 获取实名认证奖励列表 
     * </pre>
     *
     * <code>clientVerifyAward = 14314;</code>
     */
    public static final int clientVerifyAward_VALUE = 14314;
    /**
     * <pre>
     ** 客户端请求微信支付信息，用于微信小程序支付 
     * </pre>
     *
     * <code>clientMiniAppPay = 14315;</code>
     */
    public static final int clientMiniAppPay_VALUE = 14315;
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
     * </pre>
     *
     * <code>clientUnionAccount = 14316;</code>
     */
    public static final int clientUnionAccount_VALUE = 14316;
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>clientQueryDailyTask = 19264;</code>
     */
    public static final int clientQueryDailyTask_VALUE = 19264;
    /**
     * <pre>
     ** 客户端请求获取新手任务奖励 
     * </pre>
     *
     * <code>clientGetNoviceReward = 19266;</code>
     */
    public static final int clientGetNoviceReward_VALUE = 19266;
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>clientQueryNoviceTask = 19267;</code>
     */
    public static final int clientQueryNoviceTask_VALUE = 19267;
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>clientGetDTAward = 19268;</code>
     */
    public static final int clientGetDTAward_VALUE = 19268;
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>clientGetAnnounce = 25271;</code>
     */
    public static final int clientGetAnnounce_VALUE = 25271;
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>serverGetAnnounce = 25801;</code>
     */
    public static final int serverGetAnnounce_VALUE = 25801;
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>clientGetMail = 20600;</code>
     */
    public static final int clientGetMail_VALUE = 20600;
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>clientGetMailReward = 20601;</code>
     */
    public static final int clientGetMailReward_VALUE = 20601;
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>clientDelMail = 20602;</code>
     */
    public static final int clientDelMail_VALUE = 20602;
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>clientReadMail = 20603;</code>
     */
    public static final int clientReadMail_VALUE = 20603;
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>clientDel2R = 20604;</code>
     */
    public static final int clientDel2R_VALUE = 20604;
    /**
     * <pre>
     ** 获取新版VIP信息 
     * </pre>
     *
     * <code>clientGetVip = 29005;</code>
     */
    public static final int clientGetVip_VALUE = 29005;
    /**
     * <pre>
     ** 获取新版VIP每日礼包 
     * </pre>
     *
     * <code>clientGetDayGift = 29006;</code>
     */
    public static final int clientGetDayGift_VALUE = 29006;
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>serverGetVip = 29007;</code>
     */
    public static final int serverGetVip_VALUE = 29007;
    /**
     * <pre>
     ** 服务器返回领取VIP每日礼包 
     * </pre>
     *
     * <code>serverGetDayGift = 29008;</code>
     */
    public static final int serverGetDayGift_VALUE = 29008;
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>serverLogin = 10500;</code>
     */
    public static final int serverLogin_VALUE = 10500;
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>serverGetUserInfo = 10501;</code>
     */
    public static final int serverGetUserInfo_VALUE = 10501;
    /**
     * <pre>
     ** 服务器发送大厅服务器心跳 
     * </pre>
     *
     * <code>serverSendHallHeartBeat = 10502;</code>
     */
    public static final int serverSendHallHeartBeat_VALUE = 10502;
    /**
     * <pre>
     ** 服务器发送游戏服务器心跳 
     * </pre>
     *
     * <code>serverSendGameHeartBeat = 23503;</code>
     */
    public static final int serverSendGameHeartBeat_VALUE = 23503;
    /**
     * <pre>
     ** 加入房间 
     * </pre>
     *
     * <code>serverEnterRoom = 11550;</code>
     */
    public static final int serverEnterRoom_VALUE = 11550;
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>serverDoCatch = 11551;</code>
     */
    public static final int serverDoCatch_VALUE = 11551;
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>serverPlayCards = 11552;</code>
     */
    public static final int serverPlayCards_VALUE = 11552;
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>serverRecoverGame = 11553;</code>
     */
    public static final int serverRecoverGame_VALUE = 11553;
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>serverAutoPlay = 11554;</code>
     */
    public static final int serverAutoPlay_VALUE = 11554;
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>serverLeaveRoom = 11555;</code>
     */
    public static final int serverLeaveRoom_VALUE = 11555;
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>serverQueryIndex = 11556;</code>
     */
    public static final int serverQueryIndex_VALUE = 11556;
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>serverRetryReturnGame = 11557;</code>
     */
    public static final int serverRetryReturnGame_VALUE = 11557;
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>serverQuickJoin = 12600;</code>
     */
    public static final int serverQuickJoin_VALUE = 12600;
    /**
     * <pre>
     ** 服务器取消加入 
     * </pre>
     *
     * <code>serverCancleJoin = 12601;</code>
     */
    public static final int serverCancleJoin_VALUE = 12601;
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>serverGetRankList = 13650;</code>
     */
    public static final int serverGetRankList_VALUE = 13650;
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>serverRewardMessage = 13654;</code>
     */
    public static final int serverRewardMessage_VALUE = 13654;
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>serverGetRoomConfig = 13656;</code>
     */
    public static final int serverGetRoomConfig_VALUE = 13656;
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>serverGetMonthCardDiamond = 13659;</code>
     */
    public static final int serverGetMonthCardDiamond_VALUE = 13659;
    /**
     * <pre>
     ** 服务器返回抽取红包比赛数 
     * </pre>
     *
     * <code>serverGetLotteryCount = 13660;</code>
     */
    public static final int serverGetLotteryCount_VALUE = 13660;
    /**
     * <pre>
     ** 服务器返回单一房间配置信息 
     * </pre>
     *
     * <code>serverGetRoomInfo = 13661;</code>
     */
    public static final int serverGetRoomInfo_VALUE = 13661;
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>serverCheckConnect = 13662;</code>
     */
    public static final int serverCheckConnect_VALUE = 13662;
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>serverGetPFList = 13663;</code>
     */
    public static final int serverGetPFList_VALUE = 13663;
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>serverChoosePF = 13664;</code>
     */
    public static final int serverChoosePF_VALUE = 13664;
    /**
     * <pre>
     ** 服务器获取历史排名 
     * </pre>
     *
     * <code>serverGetHistoryRank = 13665;</code>
     */
    public static final int serverGetHistoryRank_VALUE = 13665;
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>serverH5Reward = 13666;</code>
     */
    public static final int serverH5Reward_VALUE = 13666;
    /**
     * <pre>
     ** 服务器返回新抽取红包 
     * </pre>
     *
     * <code>serverNewDrawWinCup = 13667;</code>
     */
    public static final int serverNewDrawWinCup_VALUE = 13667;
    /**
     * <pre>
     ** 服务器返回新大厅信息 
     * </pre>
     *
     * <code>serverGetNewHallInfo = 13668;</code>
     */
    public static final int serverGetNewHallInfo_VALUE = 13668;
    /**
     * <pre>
     ** 服务器返回好运墙 
     * </pre>
     *
     * <code>serverLuckWall = 13671;</code>
     */
    public static final int serverLuckWall_VALUE = 13671;
    /**
     * <pre>
     ** 服务器兑换码奖励信息 
     * </pre>
     *
     * <code>serverCdkeyAward = 13672;</code>
     */
    public static final int serverCdkeyAward_VALUE = 13672;
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>serverGetStoreInfo = 14700;</code>
     */
    public static final int serverGetStoreInfo_VALUE = 14700;
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>serverConvertGoods = 14701;</code>
     */
    public static final int serverConvertGoods_VALUE = 14701;
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>serverWXPayResult = 14702;</code>
     */
    public static final int serverWXPayResult_VALUE = 14702;
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>serverBuyOrderGoods = 14703;</code>
     */
    public static final int serverBuyOrderGoods_VALUE = 14703;
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>serverGetFirstCharge = 14704;</code>
     */
    public static final int serverGetFirstCharge_VALUE = 14704;
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>serverGetDailyGift = 14705;</code>
     */
    public static final int serverGetDailyGift_VALUE = 14705;
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>serverGetMonthCard = 14706;</code>
     */
    public static final int serverGetMonthCard_VALUE = 14706;
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>serverGetResurgenceGift = 14707;</code>
     */
    public static final int serverGetResurgenceGift_VALUE = 14707;
    /**
     * <pre>
     ** 服务器返回兑换墙 
     * </pre>
     *
     * <code>serverGetConvertMessage = 14708;</code>
     */
    public static final int serverGetConvertMessage_VALUE = 14708;
    /**
     * <pre>
     ** 服务器返回新下单 
     * </pre>
     *
     * <code>serverNewBuyOrder = 14709;</code>
     */
    public static final int serverNewBuyOrder_VALUE = 14709;
    /**
     * <pre>
     ** Server 返回兑换商品 
     * </pre>
     *
     * <code>serverNewConvert = 14710;</code>
     */
    public static final int serverNewConvert_VALUE = 14710;
    /**
     * <pre>
     ** 服务器返回支付宝账号和名字信息 
     * </pre>
     *
     * <code>serverAlipayAccount = 14711;</code>
     */
    public static final int serverAlipayAccount_VALUE = 14711;
    /**
     * <pre>
     ** 服务器返回当前有效支付方式 
     * </pre>
     *
     * <code>serverPayOptions = 14712;</code>
     */
    public static final int serverPayOptions_VALUE = 14712;
    /**
     * <pre>
     ** 服务器返回实名验证结果 
     * </pre>
     *
     * <code>serverIdVerify = 14713;</code>
     */
    public static final int serverIdVerify_VALUE = 14713;
    /**
     * <pre>
     ** 返回实名认证奖励列表 
     * </pre>
     *
     * <code>serverVerifyAward = 14714;</code>
     */
    public static final int serverVerifyAward_VALUE = 14714;
    /**
     * <pre>
     ** 用于微信小程序支付的返回信息 
     * </pre>
     *
     * <code>serverMiniAppPay = 14715;</code>
     */
    public static final int serverMiniAppPay_VALUE = 14715;
    /**
     * <pre>
     ** 服务器返回银行卡卡号信息列表 
     * </pre>
     *
     * <code>serverUnionAccount = 14716;</code>
     */
    public static final int serverUnionAccount_VALUE = 14716;
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>serverQueryDailyTask = 19663;</code>
     */
    public static final int serverQueryDailyTask_VALUE = 19663;
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>serverGetNoviceReward = 19665;</code>
     */
    public static final int serverGetNoviceReward_VALUE = 19665;
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>serverQueryNoviceTask = 19666;</code>
     */
    public static final int serverQueryNoviceTask_VALUE = 19666;
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>serverGetDTAward = 19667;</code>
     */
    public static final int serverGetDTAward_VALUE = 19667;
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>clientSendTelCode = 24262;</code>
     */
    public static final int clientSendTelCode_VALUE = 24262;
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>clientVerifyTelCode = 24263;</code>
     */
    public static final int clientVerifyTelCode_VALUE = 24263;
    /**
     * <pre>
     ** 客户端请求分包 
     * </pre>
     *
     * <code>clientSharePackage = 24267;</code>
     */
    public static final int clientSharePackage_VALUE = 24267;
    /**
     * <pre>
     ** 客户端请求大厅活动奖励 
     * </pre>
     *
     * <code>clientGetAwardList = 24268;</code>
     */
    public static final int clientGetAwardList_VALUE = 24268;
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>serverSendTelCode = 24662;</code>
     */
    public static final int serverSendTelCode_VALUE = 24662;
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息 
     * </pre>
     *
     * <code>serverVerifyTelCode = 24663;</code>
     */
    public static final int serverVerifyTelCode_VALUE = 24663;
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>serverSharePackage = 24667;</code>
     */
    public static final int serverSharePackage_VALUE = 24667;
    /**
     * <pre>
     ** 服务器返回大厅活动奖励 
     * </pre>
     *
     * <code>serverGetAwardList = 24668;</code>
     */
    public static final int serverGetAwardList_VALUE = 24668;
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>serverGetMail = 20650;</code>
     */
    public static final int serverGetMail_VALUE = 20650;
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>serverGetMailReward = 20651;</code>
     */
    public static final int serverGetMailReward_VALUE = 20651;
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>serverDelMail = 20652;</code>
     */
    public static final int serverDelMail_VALUE = 20652;
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>serverReadMail = 20653;</code>
     */
    public static final int serverReadMail_VALUE = 20653;
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>serverDel2R = 20654;</code>
     */
    public static final int serverDel2R_VALUE = 20654;
    /**
     * <pre>
     ** 客户端获取用户收货地址 
     * </pre>
     *
     * <code>clientGetReceiveAddr = 26001;</code>
     */
    public static final int clientGetReceiveAddr_VALUE = 26001;
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>clientAlterReceiveAddr = 26002;</code>
     */
    public static final int clientAlterReceiveAddr_VALUE = 26002;
    /**
     * <pre>
     ** 夺宝主界面，当前商品列表信息接口 
     * </pre>
     *
     * <code>clientSnatchList = 26003;</code>
     */
    public static final int clientSnatchList_VALUE = 26003;
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>clientSnatchItemDetail = 26004;</code>
     */
    public static final int clientSnatchItemDetail_VALUE = 26004;
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>clientSnatchBet = 26005;</code>
     */
    public static final int clientSnatchBet_VALUE = 26005;
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>clientSnatchAwardList = 26006;</code>
     */
    public static final int clientSnatchAwardList_VALUE = 26006;
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>clientOwnSnatchRecord = 26007;</code>
     */
    public static final int clientOwnSnatchRecord_VALUE = 26007;
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>clientSnatchItemHistory = 26008;</code>
     */
    public static final int clientSnatchItemHistory_VALUE = 26008;
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>clientSnatchHistoryDetail = 26009;</code>
     */
    public static final int clientSnatchHistoryDetail_VALUE = 26009;
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>clientSnatchGetAward = 26010;</code>
     */
    public static final int clientSnatchGetAward_VALUE = 26010;
    /**
     * <pre>
     ** 服务器返回用户收货地址
     * </pre>
     *
     * <code>serverGetReceiveAddr = 26501;</code>
     */
    public static final int serverGetReceiveAddr_VALUE = 26501;
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>serverAlterReceiveAddr = 26502;</code>
     */
    public static final int serverAlterReceiveAddr_VALUE = 26502;
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>serverSnatchList = 26503;</code>
     */
    public static final int serverSnatchList_VALUE = 26503;
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>serverSnatchItemDetail = 26504;</code>
     */
    public static final int serverSnatchItemDetail_VALUE = 26504;
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>serverSnatchBet = 26505;</code>
     */
    public static final int serverSnatchBet_VALUE = 26505;
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>serverSnatchAwardList = 26506;</code>
     */
    public static final int serverSnatchAwardList_VALUE = 26506;
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>serverOwnSnatchRecord = 26507;</code>
     */
    public static final int serverOwnSnatchRecord_VALUE = 26507;
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>serverSnatchItemHistory = 26508;</code>
     */
    public static final int serverSnatchItemHistory_VALUE = 26508;
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>serverSnatchHistoryDetail = 26509;</code>
     */
    public static final int serverSnatchHistoryDetail_VALUE = 26509;
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>serverSnatchGetAward = 26510;</code>
     */
    public static final int serverSnatchGetAward_VALUE = 26510;
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>clientEnterDG = 27001;</code>
     */
    public static final int clientEnterDG_VALUE = 27001;
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>clientDGLottery = 27002;</code>
     */
    public static final int clientDGLottery_VALUE = 27002;
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>clientResetLottery = 27003;</code>
     */
    public static final int clientResetLottery_VALUE = 27003;
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>clientExitDG = 27004;</code>
     */
    public static final int clientExitDG_VALUE = 27004;
    /**
     * <pre>
     ** 客户端请求开启抽奖活动 
     * </pre>
     *
     * <code>clientOpenDG = 27005;</code>
     */
    public static final int clientOpenDG_VALUE = 27005;
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>clientOpenDD = 27006;</code>
     */
    public static final int clientOpenDD_VALUE = 27006;
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>clientDDLottery = 27007;</code>
     */
    public static final int clientDDLottery_VALUE = 27007;
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>clientExitDD = 27008;</code>
     */
    public static final int clientExitDD_VALUE = 27008;
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>serverEnterDG = 27501;</code>
     */
    public static final int serverEnterDG_VALUE = 27501;
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>serverDGLottery = 27502;</code>
     */
    public static final int serverDGLottery_VALUE = 27502;
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>serverResetLottery = 27503;</code>
     */
    public static final int serverResetLottery_VALUE = 27503;
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>serverExitDG = 27504;</code>
     */
    public static final int serverExitDG_VALUE = 27504;
    /**
     * <pre>
     ** 服务器返回用户开启抽奖 
     * </pre>
     *
     * <code>serverOpenDG = 27505;</code>
     */
    public static final int serverOpenDG_VALUE = 27505;
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>serverOpenDD = 27506;</code>
     */
    public static final int serverOpenDD_VALUE = 27506;
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>serverDDLottery = 27507;</code>
     */
    public static final int serverDDLottery_VALUE = 27507;
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>serverExitDD = 27508;</code>
     */
    public static final int serverExitDD_VALUE = 27508;
    /**
     * <pre>
     ** 客户端请求所有道具信息 
     * </pre>
     *
     * <code>clientQueryProp = 28001;</code>
     */
    public static final int clientQueryProp_VALUE = 28001;
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>clientUseProp = 28002;</code>
     */
    public static final int clientUseProp_VALUE = 28002;
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>clientQueryPropCount = 28003;</code>
     */
    public static final int clientQueryPropCount_VALUE = 28003;
    /**
     * <pre>
     ** 客户端查询钻石复活界面信息 
     * </pre>
     *
     * <code>clientQueryDiamondRevive = 28004;</code>
     */
    public static final int clientQueryDiamondRevive_VALUE = 28004;
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>serverQueryProp = 28501;</code>
     */
    public static final int serverQueryProp_VALUE = 28501;
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>serverUseProp = 28502;</code>
     */
    public static final int serverUseProp_VALUE = 28502;
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>serverQueryPropCount = 28503;</code>
     */
    public static final int serverQueryPropCount_VALUE = 28503;
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>serverReturnDiamondRevive = 28504;</code>
     */
    public static final int serverReturnDiamondRevive_VALUE = 28504;
    /**
     * <pre>
     ** 客户端请求签到信息 
     * </pre>
     *
     * <code>clientSignInfo = 21001;</code>
     */
    public static final int clientSignInfo_VALUE = 21001;
    /**
     * <pre>
     ** 客户端请求签到奖励 
     * </pre>
     *
     * <code>clientSignAward = 21002;</code>
     */
    public static final int clientSignAward_VALUE = 21002;
    /**
     * <pre>
     ** 客户端请求签到状态 
     * </pre>
     *
     * <code>clientSignState = 21003;</code>
     */
    public static final int clientSignState_VALUE = 21003;
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>clientLTLottery = 21004;</code>
     */
    public static final int clientLTLottery_VALUE = 21004;
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>clientGetTSReward = 21005;</code>
     */
    public static final int clientGetTSReward_VALUE = 21005;
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>clientGetLuckInfo = 21006;</code>
     */
    public static final int clientGetLuckInfo_VALUE = 21006;
    /**
     * <pre>
     ** 服务端返回签到信息 
     * </pre>
     *
     * <code>serverSignInfo = 21501;</code>
     */
    public static final int serverSignInfo_VALUE = 21501;
    /**
     * <pre>
     ** 服务器返回签到奖励 
     * </pre>
     *
     * <code>serverSignAward = 21502;</code>
     */
    public static final int serverSignAward_VALUE = 21502;
    /**
     * <pre>
     ** 服务端返回签到状态 
     * </pre>
     *
     * <code>serverSignState = 21503;</code>
     */
    public static final int serverSignState_VALUE = 21503;
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>serverLTLottery = 21504;</code>
     */
    public static final int serverLTLottery_VALUE = 21504;
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>serverGetTSReward = 21505;</code>
     */
    public static final int serverGetTSReward_VALUE = 21505;
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>serverGetLuckInfo = 21506;</code>
     */
    public static final int serverGetLuckInfo_VALUE = 21506;
    /**
     * <pre>
     ** 客户端请求进入套羊 
     * </pre>
     *
     * <code>clientEnterSleeve = 30001;</code>
     */
    public static final int clientEnterSleeve_VALUE = 30001;
    /**
     * <pre>
     ** 客户端套羊动作 
     * </pre>
     *
     * <code>clientSleeveSheep = 30002;</code>
     */
    public static final int clientSleeveSheep_VALUE = 30002;
    /**
     * <pre>
     ** 客户端请求查询玩家货币 
     * </pre>
     *
     * <code>clientQueryPlayerCoin = 30003;</code>
     */
    public static final int clientQueryPlayerCoin_VALUE = 30003;
    /**
     * <pre>
     ** 客户端请求退出套羊 
     * </pre>
     *
     * <code>clientExitSleeve = 30004;</code>
     */
    public static final int clientExitSleeve_VALUE = 30004;
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>clientEnterNewSleeve = 30005;</code>
     */
    public static final int clientEnterNewSleeve_VALUE = 30005;
    /**
     * <pre>
     ** 客户端请求开始套羊信息 
     * </pre>
     *
     * <code>clientNewSleeveSheep = 30006;</code>
     */
    public static final int clientNewSleeveSheep_VALUE = 30006;
    /**
     * <pre>
     ** 客户端请求(新套羊结果) 
     * </pre>
     *
     * <code>clientNewSleeveResult = 30007;</code>
     */
    public static final int clientNewSleeveResult_VALUE = 30007;
    /**
     * <pre>
     ** 客户端退出套羊 
     * </pre>
     *
     * <code>clientExitNewSleeve = 30008;</code>
     */
    public static final int clientExitNewSleeve_VALUE = 30008;
    /**
     * <pre>
     ** 服务端返回进入套羊 
     * </pre>
     *
     * <code>serverEnterSleeve = 30201;</code>
     */
    public static final int serverEnterSleeve_VALUE = 30201;
    /**
     * <pre>
     ** 服务端返回套羊动作 
     * </pre>
     *
     * <code>serverSleeveSheep = 30202;</code>
     */
    public static final int serverSleeveSheep_VALUE = 30202;
    /**
     * <pre>
     ** 服务器返回查询玩家货币 
     * </pre>
     *
     * <code>serverQueryPlayerCoin = 30203;</code>
     */
    public static final int serverQueryPlayerCoin_VALUE = 30203;
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>serverExitSleeve = 30204;</code>
     */
    public static final int serverExitSleeve_VALUE = 30204;
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>serverEnterNewSleeve = 30205;</code>
     */
    public static final int serverEnterNewSleeve_VALUE = 30205;
    /**
     * <pre>
     ** 服务器返回开始套羊信息 
     * </pre>
     *
     * <code>serverNewSleeveSheep = 30206;</code>
     */
    public static final int serverNewSleeveSheep_VALUE = 30206;
    /**
     * <pre>
     ** 服务器返回套羊结果 
     * </pre>
     *
     * <code>serverNewSleeveResult = 30207;</code>
     */
    public static final int serverNewSleeveResult_VALUE = 30207;
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>serverExitNewSleeve = 30208;</code>
     */
    public static final int serverExitNewSleeve_VALUE = 30208;
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>client_2_DoCatch = 31001;</code>
     */
    public static final int client_2_DoCatch_VALUE = 31001;
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>client_2_PlayCards = 31002;</code>
     */
    public static final int client_2_PlayCards_VALUE = 31002;
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>client_2_RecoverGame = 31003;</code>
     */
    public static final int client_2_RecoverGame_VALUE = 31003;
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>client_2_LeaveRoom = 31004;</code>
     */
    public static final int client_2_LeaveRoom_VALUE = 31004;
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>server_2_DoCatch = 31501;</code>
     */
    public static final int server_2_DoCatch_VALUE = 31501;
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>server_2_PlayCards = 31502;</code>
     */
    public static final int server_2_PlayCards_VALUE = 31502;
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>server_2_RecoverGame = 31503;</code>
     */
    public static final int server_2_RecoverGame_VALUE = 31503;
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>server_2_LeaveRoom = 31504;</code>
     */
    public static final int server_2_LeaveRoom_VALUE = 31504;
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>clientMineShare = 32001;</code>
     */
    public static final int clientMineShare_VALUE = 32001;
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>clientFriendShare = 32002;</code>
     */
    public static final int clientFriendShare_VALUE = 32002;
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>clientGetMSAward = 32003;</code>
     */
    public static final int clientGetMSAward_VALUE = 32003;
    /**
     * <pre>
     ** 玩家获取好友的分享奖励 
     * </pre>
     *
     * <code>clientGetFSAward = 32004;</code>
     */
    public static final int clientGetFSAward_VALUE = 32004;
    /**
     * <pre>
     ** 玩家获取邀请任务 
     * </pre>
     *
     * <code>clientGetShareTask = 32005;</code>
     */
    public static final int clientGetShareTask_VALUE = 32005;
    /**
     * <pre>
     ** 玩家获取邀请任务奖励 
     * </pre>
     *
     * <code>clientGetShareTaskAward = 32006;</code>
     */
    public static final int clientGetShareTaskAward_VALUE = 32006;
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数ACK 
     * </pre>
     *
     * <code>serverMineShare = 32501;</code>
     */
    public static final int serverMineShare_VALUE = 32501;
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领ACK 
     * </pre>
     *
     * <code>serverFriendShare = 32502;</code>
     */
    public static final int serverFriendShare_VALUE = 32502;
    /**
     * <pre>
     ** 服务器返回自己奖励 
     * </pre>
     *
     * <code>serverGetMSAward = 32503;</code>
     */
    public static final int serverGetMSAward_VALUE = 32503;
    /**
     * <pre>
     ** 服务器返回好友福利 
     * </pre>
     *
     * <code>serverGetFSAward = 32504;</code>
     */
    public static final int serverGetFSAward_VALUE = 32504;
    /**
     * <pre>
     ** 服务器返回邀请任务 
     * </pre>
     *
     * <code>serverGetShareTask = 32505;</code>
     */
    public static final int serverGetShareTask_VALUE = 32505;
    /**
     * <pre>
     ** 服务器返回邀请任务奖励 
     * </pre>
     *
     * <code>serverGetShareTaskAward = 32506;</code>
     */
    public static final int serverGetShareTaskAward_VALUE = 32506;
    /**
     * <pre>
     ** 客户端查询复活界面信息 
     * </pre>
     *
     * <code>clientQueryReviveInfo = 33001;</code>
     */
    public static final int clientQueryReviveInfo_VALUE = 33001;
    /**
     * <pre>
     ** 客户端使用复活次数 
     * </pre>
     *
     * <code>clientUseRevive = 33002;</code>
     */
    public static final int clientUseRevive_VALUE = 33002;
    /**
     * <pre>
     ** 获取新手启航礼包信息
     * </pre>
     *
     * <code>clientReviveFirstCharge = 33003;</code>
     */
    public static final int clientReviveFirstCharge_VALUE = 33003;
    /**
     * <pre>
     ** 获取每日复活礼包信息 
     * </pre>
     *
     * <code>clientReviveDayGift = 33004;</code>
     */
    public static final int clientReviveDayGift_VALUE = 33004;
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>serverQueryReviveInfo = 33501;</code>
     */
    public static final int serverQueryReviveInfo_VALUE = 33501;
    /**
     * <pre>
     ** 服务器返回使用复活结果 
     * </pre>
     *
     * <code>serverUseRevive = 33502;</code>
     */
    public static final int serverUseRevive_VALUE = 33502;
    /**
     * <pre>
     ** 服务器返回新手启航礼包信息 
     * </pre>
     *
     * <code>serverReviveFirstCharge = 33503;</code>
     */
    public static final int serverReviveFirstCharge_VALUE = 33503;
    /**
     * <pre>
     ** 服务器返回每日复活礼包信息 
     * </pre>
     *
     * <code>serverReviveDayGift = 33504;</code>
     */
    public static final int serverReviveDayGift_VALUE = 33504;
    /**
     * <pre>
     ** 客户端获取大厅红点 
     * </pre>
     *
     * <code>clientGetRedTip = 34001;</code>
     */
    public static final int clientGetRedTip_VALUE = 34001;
    /**
     * <pre>
     ** 服务器返回大厅红点 
     * </pre>
     *
     * <code>serverGetRedTip = 34501;</code>
     */
    public static final int serverGetRedTip_VALUE = 34501;
    /**
     * <pre>
     ** 客户端请求赛事信息 
     * </pre>
     *
     * <code>clientGetMatchInfo = 35001;</code>
     */
    public static final int clientGetMatchInfo_VALUE = 35001;
    /**
     * <pre>
     ** 客户端请求赛事详细信息 
     * </pre>
     *
     * <code>clientGetMatchDetail = 35002;</code>
     */
    public static final int clientGetMatchDetail_VALUE = 35002;
    /**
     * <pre>
     ** 客户端请求赛事记录信息 
     * </pre>
     *
     * <code>clientGetMatchRecord = 35003;</code>
     */
    public static final int clientGetMatchRecord_VALUE = 35003;
    /**
     * <pre>
     ** 客户端请求赛事报名 
     * </pre>
     *
     * <code>clientMatchApply = 35004;</code>
     */
    public static final int clientMatchApply_VALUE = 35004;
    /**
     * <pre>
     ** 客户端请求取消赛事 
     * </pre>
     *
     * <code>clientMatchCancel = 35005;</code>
     */
    public static final int clientMatchCancel_VALUE = 35005;
    /**
     * <pre>
     ** 客户端请求自己的记录 
     * </pre>
     *
     * <code>clientOwnMatchRecord = 35006;</code>
     */
    public static final int clientOwnMatchRecord_VALUE = 35006;
    /**
     * <pre>
     ** 客户端赛事列表报名人数变化请求 
     * </pre>
     *
     * <code>clientApplyListChange = 35007;</code>
     */
    public static final int clientApplyListChange_VALUE = 35007;
    /**
     * <pre>
     ** 客户端获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>clientMatchScore = 35008;</code>
     */
    public static final int clientMatchScore_VALUE = 35008;
    /**
     * <pre>
     ** 客户端赛事配置 
     * </pre>
     *
     * <code>clientMatchConfig = 35009;</code>
     */
    public static final int clientMatchConfig_VALUE = 35009;
    /**
     * <pre>
     ** 客户端请求消除元素 
     * </pre>
     *
     * <code>clientGetKillCell = 36001;</code>
     */
    public static final int clientGetKillCell_VALUE = 36001;
    /**
     * <pre>
     ** Client 请求进入消除游戏 
     * </pre>
     *
     * <code>clientEnterKillCell = 36002;</code>
     */
    public static final int clientEnterKillCell_VALUE = 36002;
    /**
     * <pre>
     ** Client 请求退出消除游戏 
     * </pre>
     *
     * <code>clientQuitKillCell = 36003;</code>
     */
    public static final int clientQuitKillCell_VALUE = 36003;
    /**
     * <pre>
     ** 服务器返回赛事信息 
     * </pre>
     *
     * <code>serverGetMatchInfo = 35501;</code>
     */
    public static final int serverGetMatchInfo_VALUE = 35501;
    /**
     * <pre>
     ** 服务器返回赛事详细信息 
     * </pre>
     *
     * <code>serverGetMatchDetail = 35502;</code>
     */
    public static final int serverGetMatchDetail_VALUE = 35502;
    /**
     * <pre>
     ** 服务器返回赛事记录信息 
     * </pre>
     *
     * <code>serverGetMatchRecord = 35503;</code>
     */
    public static final int serverGetMatchRecord_VALUE = 35503;
    /**
     * <pre>
     ** 服务器返回赛事报名结果 
     * </pre>
     *
     * <code>serverMatchApply = 35504;</code>
     */
    public static final int serverMatchApply_VALUE = 35504;
    /**
     * <pre>
     ** 服务器返回取消赛事 
     * </pre>
     *
     * <code>serverMatchCancel = 35505;</code>
     */
    public static final int serverMatchCancel_VALUE = 35505;
    /**
     * <pre>
     ** 服务器返回自己的记录信息 
     * </pre>
     *
     * <code>serverOwnMatchRecord = 35506;</code>
     */
    public static final int serverOwnMatchRecord_VALUE = 35506;
    /**
     * <pre>
     ** 赛事列表参赛人数变化推送 
     * </pre>
     *
     * <code>serverApplyListChange = 35507;</code>
     */
    public static final int serverApplyListChange_VALUE = 35507;
    /**
     * <pre>
     ** 获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>serverMatchScore = 35508;</code>
     */
    public static final int serverMatchScore_VALUE = 35508;
    /**
     * <pre>
     ** 服务器返回赛事配置 
     * </pre>
     *
     * <code>serverMatchConfig = 35509;</code>
     */
    public static final int serverMatchConfig_VALUE = 35509;
    /**
     * <pre>
     ** 服务器返回消除元素信息 
     * </pre>
     *
     * <code>serverGetKillCell = 36501;</code>
     */
    public static final int serverGetKillCell_VALUE = 36501;
    /**
     * <pre>
     ** 服务器返回进入消除游戏 
     * </pre>
     *
     * <code>serverEnterKillCell = 36502;</code>
     */
    public static final int serverEnterKillCell_VALUE = 36502;
    /**
     * <pre>
     ** 服务器返回退出消除游戏 
     * </pre>
     *
     * <code>serverQuitKillCell = 36503;</code>
     */
    public static final int serverQuitKillCell_VALUE = 36503;
    /**
     * <pre>
     ** 服务器广播玩家加入房间消息 
     * </pre>
     *
     * <code>b_EnterRoom = 22001;</code>
     */
    public static final int b_EnterRoom_VALUE = 22001;
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>b_GameStart = 22002;</code>
     */
    public static final int b_GameStart_VALUE = 22002;
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>b_DoCatch = 22003;</code>
     */
    public static final int b_DoCatch_VALUE = 22003;
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>b_CatchResult = 22004;</code>
     */
    public static final int b_CatchResult_VALUE = 22004;
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>b_PlayCards = 22005;</code>
     */
    public static final int b_PlayCards_VALUE = 22005;
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>b_SendDiZhuCard = 22007;</code>
     */
    public static final int b_SendDiZhuCard_VALUE = 22007;
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>b_NextPlayer = 22008;</code>
     */
    public static final int b_NextPlayer_VALUE = 22008;
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>b_GameSettle = 22009;</code>
     */
    public static final int b_GameSettle_VALUE = 22009;
    /**
     * <pre>
     ** 广播公告消息 
     * </pre>
     *
     * <code>b_RewardMessage = 22010;</code>
     */
    public static final int b_RewardMessage_VALUE = 22010;
    /**
     * <pre>
     ** 广播玩家托管消息
     * </pre>
     *
     * <code>b_AutoPlay = 22011;</code>
     */
    public static final int b_AutoPlay_VALUE = 22011;
    /**
     * <pre>
     ** 推送玩家应该加入的房间号和url 
     * </pre>
     *
     * <code>b_RoomIdUrl = 22012;</code>
     */
    public static final int b_RoomIdUrl_VALUE = 22012;
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>b_AwardDialog = 22013;</code>
     */
    public static final int b_AwardDialog_VALUE = 22013;
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>b_BuySuccess = 22014;</code>
     */
    public static final int b_BuySuccess_VALUE = 22014;
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>b_RedDotPush = 22015;</code>
     */
    public static final int b_RedDotPush_VALUE = 22015;
    /**
     * <pre>
     ** 游戏内强制公告推送 
     * </pre>
     *
     * <code>b_ForceAnnounce = 22016;</code>
     */
    public static final int b_ForceAnnounce_VALUE = 22016;
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>b_DGameMessage = 22017;</code>
     */
    public static final int b_DGameMessage_VALUE = 22017;
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>b_DGOver = 22018;</code>
     */
    public static final int b_DGOver_VALUE = 22018;
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>b_DDOver = 22019;</code>
     */
    public static final int b_DDOver_VALUE = 22019;
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>b_DDInfo = 22020;</code>
     */
    public static final int b_DDInfo_VALUE = 22020;
    /**
     * <pre>
     ** 套羊跑马灯推送 
     * </pre>
     *
     * <code>b_SSInfo = 22021;</code>
     */
    public static final int b_SSInfo_VALUE = 22021;
    /**
     * <pre>
     ** 套羊跑马灯信息 
     * </pre>
     *
     * <code>b_NewSleeveSheepInfo = 22022;</code>
     */
    public static final int b_NewSleeveSheepInfo_VALUE = 22022;
    /**
     * <pre>
     ** 广播新套羊活动结束 
     * </pre>
     *
     * <code>b_NewSleeverOver = 22023;</code>
     */
    public static final int b_NewSleeverOver_VALUE = 22023;
    /**
     * <pre>
     ** 服务器推送钻石复活次数变化 
     * </pre>
     *
     * <code>b_DiamondReviveInfo = 22024;</code>
     */
    public static final int b_DiamondReviveInfo_VALUE = 22024;
    /**
     * <pre>
     ** 二人场-广播有玩家进行托管了 
     * </pre>
     *
     * <code>b_2_AutoPlay = 22025;</code>
     */
    public static final int b_2_AutoPlay_VALUE = 22025;
    /**
     * <pre>
     ** 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>b_2_GameStart = 22026;</code>
     */
    public static final int b_2_GameStart_VALUE = 22026;
    /**
     * <pre>
     ** 二人场-通知叫地主 
     * </pre>
     *
     * <code>b_2_DoCatch = 22027;</code>
     */
    public static final int b_2_DoCatch_VALUE = 22027;
    /**
     * <pre>
     ** 二人场-广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>b_2_CatchResult = 22028;</code>
     */
    public static final int b_2_CatchResult_VALUE = 22028;
    /**
     * <pre>
     ** 二人场-广播发地主牌 
     * </pre>
     *
     * <code>b_2_SendDiZhuCard = 22029;</code>
     */
    public static final int b_2_SendDiZhuCard_VALUE = 22029;
    /**
     * <pre>
     ** 二人场-服务器推送游戏结算信息 
     * </pre>
     *
     * <code>b_2_GameSettle = 22032;</code>
     */
    public static final int b_2_GameSettle_VALUE = 22032;
    /**
     * <pre>
     ** 赛事准备开始的推送 
     * </pre>
     *
     * <code>b_MatchStart = 22034;</code>
     */
    public static final int b_MatchStart_VALUE = 22034;
    /**
     * <pre>
     ** 赛事结束等待的推送 
     * </pre>
     *
     * <code>b_MatchEnd = 22035;</code>
     */
    public static final int b_MatchEnd_VALUE = 22035;
    /**
     * <pre>
     ** 赛事结算的推送 
     * </pre>
     *
     * <code>b_MatchResult = 22036;</code>
     */
    public static final int b_MatchResult_VALUE = 22036;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static MessageTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return Error;
        case 10101: return clientGetUserInfo;
        case 10102: return clientReturnHallHeartBeat;
        case 10103: return clientNewLogin;
        case 23103: return clientReturnGameHeartBeat;
        case 11150: return clientDoCatch;
        case 11151: return clientPlayCards;
        case 11152: return clientEnterRoom;
        case 11154: return clientLeaveRoom;
        case 11155: return clientRecoverGame;
        case 11156: return clientAutoPlay;
        case 11157: return clientQueryIndex;
        case 12200: return clientQuickJoin;
        case 12201: return clientCancleJoin;
        case 12202: return clientRetryReturnGame;
        case 13250: return clientGetRankList;
        case 13254: return clientGetRoomConfig;
        case 13256: return clientRewardMessage;
        case 13259: return clientGetMonthCardDiamond;
        case 13260: return clientGetLotteryCount;
        case 13261: return clientGetRoomInfo;
        case 13262: return clientPlayerLogout;
        case 13263: return clientCheckConnect;
        case 13264: return clientGetPFList;
        case 13265: return clientChoosePF;
        case 13266: return clientGetHistoryRank;
        case 13267: return clientH5Reward;
        case 13268: return clientNewDrawWinCup;
        case 13269: return clientGetNewHallInfo;
        case 13272: return clientLuckWall;
        case 13273: return clientCdkeyAward;
        case 14300: return clientGetStoreInfo;
        case 14301: return clientConvertGoods;
        case 14302: return clientWXPayResultQuery;
        case 14303: return clientBuyOrderGoods;
        case 14304: return clientGetFirstCharge;
        case 14305: return clientGetDailyGift;
        case 14306: return clientGetMonthCard;
        case 14307: return clientGetResurgenceGift;
        case 14308: return clientGetConvertMessage;
        case 14309: return clientNewBuyOrder;
        case 14310: return clientNewConvert;
        case 14311: return clientAlipayAccount;
        case 14312: return clientPayOptions;
        case 14313: return clientIdVerify;
        case 14314: return clientVerifyAward;
        case 14315: return clientMiniAppPay;
        case 14316: return clientUnionAccount;
        case 19264: return clientQueryDailyTask;
        case 19266: return clientGetNoviceReward;
        case 19267: return clientQueryNoviceTask;
        case 19268: return clientGetDTAward;
        case 25271: return clientGetAnnounce;
        case 25801: return serverGetAnnounce;
        case 20600: return clientGetMail;
        case 20601: return clientGetMailReward;
        case 20602: return clientDelMail;
        case 20603: return clientReadMail;
        case 20604: return clientDel2R;
        case 29005: return clientGetVip;
        case 29006: return clientGetDayGift;
        case 29007: return serverGetVip;
        case 29008: return serverGetDayGift;
        case 10500: return serverLogin;
        case 10501: return serverGetUserInfo;
        case 10502: return serverSendHallHeartBeat;
        case 23503: return serverSendGameHeartBeat;
        case 11550: return serverEnterRoom;
        case 11551: return serverDoCatch;
        case 11552: return serverPlayCards;
        case 11553: return serverRecoverGame;
        case 11554: return serverAutoPlay;
        case 11555: return serverLeaveRoom;
        case 11556: return serverQueryIndex;
        case 11557: return serverRetryReturnGame;
        case 12600: return serverQuickJoin;
        case 12601: return serverCancleJoin;
        case 13650: return serverGetRankList;
        case 13654: return serverRewardMessage;
        case 13656: return serverGetRoomConfig;
        case 13659: return serverGetMonthCardDiamond;
        case 13660: return serverGetLotteryCount;
        case 13661: return serverGetRoomInfo;
        case 13662: return serverCheckConnect;
        case 13663: return serverGetPFList;
        case 13664: return serverChoosePF;
        case 13665: return serverGetHistoryRank;
        case 13666: return serverH5Reward;
        case 13667: return serverNewDrawWinCup;
        case 13668: return serverGetNewHallInfo;
        case 13671: return serverLuckWall;
        case 13672: return serverCdkeyAward;
        case 14700: return serverGetStoreInfo;
        case 14701: return serverConvertGoods;
        case 14702: return serverWXPayResult;
        case 14703: return serverBuyOrderGoods;
        case 14704: return serverGetFirstCharge;
        case 14705: return serverGetDailyGift;
        case 14706: return serverGetMonthCard;
        case 14707: return serverGetResurgenceGift;
        case 14708: return serverGetConvertMessage;
        case 14709: return serverNewBuyOrder;
        case 14710: return serverNewConvert;
        case 14711: return serverAlipayAccount;
        case 14712: return serverPayOptions;
        case 14713: return serverIdVerify;
        case 14714: return serverVerifyAward;
        case 14715: return serverMiniAppPay;
        case 14716: return serverUnionAccount;
        case 19663: return serverQueryDailyTask;
        case 19665: return serverGetNoviceReward;
        case 19666: return serverQueryNoviceTask;
        case 19667: return serverGetDTAward;
        case 24262: return clientSendTelCode;
        case 24263: return clientVerifyTelCode;
        case 24267: return clientSharePackage;
        case 24268: return clientGetAwardList;
        case 24662: return serverSendTelCode;
        case 24663: return serverVerifyTelCode;
        case 24667: return serverSharePackage;
        case 24668: return serverGetAwardList;
        case 20650: return serverGetMail;
        case 20651: return serverGetMailReward;
        case 20652: return serverDelMail;
        case 20653: return serverReadMail;
        case 20654: return serverDel2R;
        case 26001: return clientGetReceiveAddr;
        case 26002: return clientAlterReceiveAddr;
        case 26003: return clientSnatchList;
        case 26004: return clientSnatchItemDetail;
        case 26005: return clientSnatchBet;
        case 26006: return clientSnatchAwardList;
        case 26007: return clientOwnSnatchRecord;
        case 26008: return clientSnatchItemHistory;
        case 26009: return clientSnatchHistoryDetail;
        case 26010: return clientSnatchGetAward;
        case 26501: return serverGetReceiveAddr;
        case 26502: return serverAlterReceiveAddr;
        case 26503: return serverSnatchList;
        case 26504: return serverSnatchItemDetail;
        case 26505: return serverSnatchBet;
        case 26506: return serverSnatchAwardList;
        case 26507: return serverOwnSnatchRecord;
        case 26508: return serverSnatchItemHistory;
        case 26509: return serverSnatchHistoryDetail;
        case 26510: return serverSnatchGetAward;
        case 27001: return clientEnterDG;
        case 27002: return clientDGLottery;
        case 27003: return clientResetLottery;
        case 27004: return clientExitDG;
        case 27005: return clientOpenDG;
        case 27006: return clientOpenDD;
        case 27007: return clientDDLottery;
        case 27008: return clientExitDD;
        case 27501: return serverEnterDG;
        case 27502: return serverDGLottery;
        case 27503: return serverResetLottery;
        case 27504: return serverExitDG;
        case 27505: return serverOpenDG;
        case 27506: return serverOpenDD;
        case 27507: return serverDDLottery;
        case 27508: return serverExitDD;
        case 28001: return clientQueryProp;
        case 28002: return clientUseProp;
        case 28003: return clientQueryPropCount;
        case 28004: return clientQueryDiamondRevive;
        case 28501: return serverQueryProp;
        case 28502: return serverUseProp;
        case 28503: return serverQueryPropCount;
        case 28504: return serverReturnDiamondRevive;
        case 21001: return clientSignInfo;
        case 21002: return clientSignAward;
        case 21003: return clientSignState;
        case 21004: return clientLTLottery;
        case 21005: return clientGetTSReward;
        case 21006: return clientGetLuckInfo;
        case 21501: return serverSignInfo;
        case 21502: return serverSignAward;
        case 21503: return serverSignState;
        case 21504: return serverLTLottery;
        case 21505: return serverGetTSReward;
        case 21506: return serverGetLuckInfo;
        case 30001: return clientEnterSleeve;
        case 30002: return clientSleeveSheep;
        case 30003: return clientQueryPlayerCoin;
        case 30004: return clientExitSleeve;
        case 30005: return clientEnterNewSleeve;
        case 30006: return clientNewSleeveSheep;
        case 30007: return clientNewSleeveResult;
        case 30008: return clientExitNewSleeve;
        case 30201: return serverEnterSleeve;
        case 30202: return serverSleeveSheep;
        case 30203: return serverQueryPlayerCoin;
        case 30204: return serverExitSleeve;
        case 30205: return serverEnterNewSleeve;
        case 30206: return serverNewSleeveSheep;
        case 30207: return serverNewSleeveResult;
        case 30208: return serverExitNewSleeve;
        case 31001: return client_2_DoCatch;
        case 31002: return client_2_PlayCards;
        case 31003: return client_2_RecoverGame;
        case 31004: return client_2_LeaveRoom;
        case 31501: return server_2_DoCatch;
        case 31502: return server_2_PlayCards;
        case 31503: return server_2_RecoverGame;
        case 31504: return server_2_LeaveRoom;
        case 32001: return clientMineShare;
        case 32002: return clientFriendShare;
        case 32003: return clientGetMSAward;
        case 32004: return clientGetFSAward;
        case 32005: return clientGetShareTask;
        case 32006: return clientGetShareTaskAward;
        case 32501: return serverMineShare;
        case 32502: return serverFriendShare;
        case 32503: return serverGetMSAward;
        case 32504: return serverGetFSAward;
        case 32505: return serverGetShareTask;
        case 32506: return serverGetShareTaskAward;
        case 33001: return clientQueryReviveInfo;
        case 33002: return clientUseRevive;
        case 33003: return clientReviveFirstCharge;
        case 33004: return clientReviveDayGift;
        case 33501: return serverQueryReviveInfo;
        case 33502: return serverUseRevive;
        case 33503: return serverReviveFirstCharge;
        case 33504: return serverReviveDayGift;
        case 34001: return clientGetRedTip;
        case 34501: return serverGetRedTip;
        case 35001: return clientGetMatchInfo;
        case 35002: return clientGetMatchDetail;
        case 35003: return clientGetMatchRecord;
        case 35004: return clientMatchApply;
        case 35005: return clientMatchCancel;
        case 35006: return clientOwnMatchRecord;
        case 35007: return clientApplyListChange;
        case 35008: return clientMatchScore;
        case 35009: return clientMatchConfig;
        case 36001: return clientGetKillCell;
        case 36002: return clientEnterKillCell;
        case 36003: return clientQuitKillCell;
        case 35501: return serverGetMatchInfo;
        case 35502: return serverGetMatchDetail;
        case 35503: return serverGetMatchRecord;
        case 35504: return serverMatchApply;
        case 35505: return serverMatchCancel;
        case 35506: return serverOwnMatchRecord;
        case 35507: return serverApplyListChange;
        case 35508: return serverMatchScore;
        case 35509: return serverMatchConfig;
        case 36501: return serverGetKillCell;
        case 36502: return serverEnterKillCell;
        case 36503: return serverQuitKillCell;
        case 22001: return b_EnterRoom;
        case 22002: return b_GameStart;
        case 22003: return b_DoCatch;
        case 22004: return b_CatchResult;
        case 22005: return b_PlayCards;
        case 22007: return b_SendDiZhuCard;
        case 22008: return b_NextPlayer;
        case 22009: return b_GameSettle;
        case 22010: return b_RewardMessage;
        case 22011: return b_AutoPlay;
        case 22012: return b_RoomIdUrl;
        case 22013: return b_AwardDialog;
        case 22014: return b_BuySuccess;
        case 22015: return b_RedDotPush;
        case 22016: return b_ForceAnnounce;
        case 22017: return b_DGameMessage;
        case 22018: return b_DGOver;
        case 22019: return b_DDOver;
        case 22020: return b_DDInfo;
        case 22021: return b_SSInfo;
        case 22022: return b_NewSleeveSheepInfo;
        case 22023: return b_NewSleeverOver;
        case 22024: return b_DiamondReviveInfo;
        case 22025: return b_2_AutoPlay;
        case 22026: return b_2_GameStart;
        case 22027: return b_2_DoCatch;
        case 22028: return b_2_CatchResult;
        case 22029: return b_2_SendDiZhuCard;
        case 22032: return b_2_GameSettle;
        case 22034: return b_MatchStart;
        case 22035: return b_MatchEnd;
        case 22036: return b_MatchResult;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageTypeEnum>() {
            public MessageTypeEnum findValueByNumber(int number) {
              return MessageTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.getDescriptor().getEnumTypes().get(1);
    }

    private static final MessageTypeEnum[] VALUES = values();

    public static MessageTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kys.util.netty.proto.MessageTypeEnum)
  }

  /**
   * Protobuf enum {@code com.kys.util.netty.proto.ResultCode}
   */
  public enum ResultCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** 成功 
     * </pre>
     *
     * <code>success = 0;</code>
     */
    success(0),
    /**
     * <pre>
     ** 任意失败 
     * </pre>
     *
     * <code>err = 1;</code>
     */
    err(1),
    /**
     * <pre>
     ** 没有该方法错误 
     * </pre>
     *
     * <code>errNoMethod = 2;</code>
     */
    errNoMethod(2),
    /**
     * <pre>
     ** 消息为空 
     * </pre>
     *
     * <code>errNulMsg = 3;</code>
     */
    errNulMsg(3),
    /**
     * <pre>
     ** 登录过期 
     * </pre>
     *
     * <code>errLoginInvalid = 4;</code>
     */
    errLoginInvalid(4),
    /**
     * <pre>
     ** 网络连接错误 
     * </pre>
     *
     * <code>errNetConnect = 5;</code>
     */
    errNetConnect(5),
    /**
     * <pre>
     ** 请先完成游戏 
     * </pre>
     *
     * <code>errGameNotOver = 6;</code>
     */
    errGameNotOver(6),
    /**
     * <pre>
     ** 登陆错误 
     * </pre>
     *
     * <code>errLogin = 100;</code>
     */
    errLogin(100),
    /**
     * <pre>
     ** token失效 
     * </pre>
     *
     * <code>errLoginTokenInvalid = 101;</code>
     */
    errLoginTokenInvalid(101),
    /**
     * <pre>
     ** 账号违规，无法登录 
     * </pre>
     *
     * <code>errLoginBan = 102;</code>
     */
    errLoginBan(102),
    /**
     * <pre>
     ** 重连时间过期 
     * </pre>
     *
     * <code>errLoginReconnect = 103;</code>
     */
    errLoginReconnect(103),
    /**
     * <pre>
     ** 排行榜错误 
     * </pre>
     *
     * <code>errRank = 300;</code>
     */
    errRank(300),
    /**
     * <pre>
     ** 排行榜为空 
     * </pre>
     *
     * <code>errRankEmpty = 301;</code>
     */
    errRankEmpty(301),
    /**
     * <pre>
     ** 抽奖失败，未知错误 
     * </pre>
     *
     * <code>errLottery = 400;</code>
     */
    errLottery(400),
    /**
     * <pre>
     ** 抽奖失败，剩余次数不足 
     * </pre>
     *
     * <code>errLotteryNotEnough = 401;</code>
     */
    errLotteryNotEnough(401),
    /**
     * <pre>
     ** 商城错误 
     * </pre>
     *
     * <code>errShop = 500;</code>
     */
    errShop(500),
    /**
     * <pre>
     ** 物品不存在 
     * </pre>
     *
     * <code>errShopItemNotExist = 501;</code>
     */
    errShopItemNotExist(501),
    /**
     * <pre>
     ** 购买货币不足 
     * </pre>
     *
     * <code>errShopChipNotEnough = 502;</code>
     */
    errShopChipNotEnough(502),
    /**
     * <pre>
     ** 每日礼包今天已经购买完：今天已经购买完了,请明天再来 
     * </pre>
     *
     * <code>errDailyGiftNoLeft = 503;</code>
     */
    errDailyGiftNoLeft(503),
    /**
     * <pre>
     ** 金豆复活礼包已经买完 
     * </pre>
     *
     * <code>errGoldcoinResGiftNoLeft = 504;</code>
     */
    errGoldcoinResGiftNoLeft(504),
    /**
     * <pre>
     ** 钻石复活礼包已经买完 
     * </pre>
     *
     * <code>errDiamondResGiftNoLeft = 505;</code>
     */
    errDiamondResGiftNoLeft(505),
    /**
     * <pre>
     ** 当天购买次数已用尽 
     * </pre>
     *
     * <code>errUnmatchBuyResGift = 506;</code>
     */
    errUnmatchBuyResGift(506),
    /**
     * <pre>
     ** 未关注公众号 
     * </pre>
     *
     * <code>errNotFollowWxAccount = 507;</code>
     */
    errNotFollowWxAccount(507),
    /**
     * <pre>
     ** 兑换失败 
     * </pre>
     *
     * <code>errConvertFailed = 508;</code>
     */
    errConvertFailed(508),
    /**
     * <pre>
     ** 未绑定手机号 
     * </pre>
     *
     * <code>errNotBindTel = 509;</code>
     */
    errNotBindTel(509),
    /**
     * <pre>
     ** 企业付款到限额:今日红包已发完，请明日尽早领取 
     * </pre>
     *
     * <code>errEnPayNoMoney = 510;</code>
     */
    errEnPayNoMoney(510),
    /**
     * <pre>
     ** 微信红包没有钱了,兑换失败，请联系客服 
     * </pre>
     *
     * <code>errWxRedNoMoney = 511;</code>
     */
    errWxRedNoMoney(511),
    /**
     * <pre>
     ** 今日充值超限 
     * </pre>
     *
     * <code>errChargeOver = 512;</code>
     */
    errChargeOver(512),
    /**
     * <pre>
     ** 微信系统繁忙 
     * </pre>
     *
     * <code>errWxSystemError = 513;</code>
     */
    errWxSystemError(513),
    /**
     * <pre>
     ** 抽奖等待时间未到 
     * </pre>
     *
     * <code>errLotteryWaitTime = 514;</code>
     */
    errLotteryWaitTime(514),
    /**
     * <pre>
     ** 本周兑换次数已经用尽 
     * </pre>
     *
     * <code>errExchangeExhaust = 515;</code>
     */
    errExchangeExhaust(515),
    /**
     * <pre>
     ** 加入房间错误码 
     * </pre>
     *
     * <code>errRoom = 600;</code>
     */
    errRoom(600),
    /**
     * <pre>
     ** 筹码不足加入房间 
     * </pre>
     *
     * <code>errRoomChipNotEnough = 601;</code>
     */
    errRoomChipNotEnough(601),
    /**
     * <pre>
     ** 钻石不足加入房间 
     * </pre>
     *
     * <code>errRoomDiamondNotEnough = 602;</code>
     */
    errRoomDiamondNotEnough(602),
    /**
     * <pre>
     ** 重新加入房间错误，房间不存在
     * </pre>
     *
     * <code>errRoomNotExist = 603;</code>
     */
    errRoomNotExist(603),
    /**
     * <pre>
     ** 玩家不在房间中 
     * </pre>
     *
     * <code>errRoomNotIn = 604;</code>
     */
    errRoomNotIn(604),
    /**
     * <pre>
     ** 筹码大于加入房间最大值 
     * </pre>
     *
     * <code>errRoomChipToMuch = 605;</code>
     */
    errRoomChipToMuch(605),
    /**
     * <pre>
     ** 钻石大于加入房间最大值 
     * </pre>
     *
     * <code>errRoomDiamondToMuch = 606;</code>
     */
    errRoomDiamondToMuch(606),
    /**
     * <pre>
     ** 用户信息接口 
     * </pre>
     *
     * <code>errUserIsNull = 701;</code>
     */
    errUserIsNull(701),
    /**
     * <pre>
     ** 游戏接口 
     * </pre>
     *
     * <code>errGame = 800;</code>
     */
    errGame(800),
    /**
     * <pre>
     ** 房间不存在 
     * </pre>
     *
     * <code>errGameRoomNotExist = 801;</code>
     */
    errGameRoomNotExist(801),
    /**
     * <pre>
     ** 当前房间不在游戏中，不能托管 
     * </pre>
     *
     * <code>errGameAutoPlay = 802;</code>
     */
    errGameAutoPlay(802),
    /**
     * <pre>
     ** 当前不应该该玩家操作 
     * </pre>
     *
     * <code>errGameInvaildOper = 803;</code>
     */
    errGameInvaildOper(803),
    /**
     * <pre>
     ** 叫地主分值非法 
     * </pre>
     *
     * <code>errGameInvaildCatchPoint = 804;</code>
     */
    errGameInvaildCatchPoint(804),
    /**
     * <pre>
     ** 进入房间失败 
     * </pre>
     *
     * <code>errGameEnterRoomFail = 805;</code>
     */
    errGameEnterRoomFail(805),
    /**
     * <pre>
     ** 玩家不在房间中 
     * </pre>
     *
     * <code>errGamePlayerNotIn = 806;</code>
     */
    errGamePlayerNotIn(806),
    /**
     * <pre>
     ** 玩家牌型错误 
     * </pre>
     *
     * <code>errGameCardInvaild = 807;</code>
     */
    errGameCardInvaild(807),
    /**
     * <pre>
     ** 分享接口
     * </pre>
     *
     * <code>errPm = 900;</code>
     */
    errPm(900),
    /**
     * <pre>
     ** 分享接口-发送短信校验码-手机号码非法
     * </pre>
     *
     * <code>errPmTelNumInvaild = 901;</code>
     */
    errPmTelNumInvaild(901),
    /**
     * <pre>
     ** 发送短信校验码-验证码校验失败
     * </pre>
     *
     * <code>errPmVerifyCodeFail = 902;</code>
     */
    errPmVerifyCodeFail(902),
    /**
     * <pre>
     ** 领取分享奖励失败-未完成 
     * </pre>
     *
     * <code>errPmGetAwardNotFinish = 903;</code>
     */
    errPmGetAwardNotFinish(903),
    /**
     * <pre>
     ** 领取分享奖励失败-未绑定手机号
     * </pre>
     *
     * <code>errPmGetAwardNotBindTel = 904;</code>
     */
    errPmGetAwardNotBindTel(904),
    /**
     * <pre>
     ** 已经绑定过手机号了 
     * </pre>
     *
     * <code>errPmAlreadyBind = 905;</code>
     */
    errPmAlreadyBind(905),
    /**
     * <pre>
     ** 重发验证码时间过短
     * </pre>
     *
     * <code>errPmRequestIntervalTooShort = 906;</code>
     */
    errPmRequestIntervalTooShort(906),
    /**
     * <pre>
     ** 分包失败 
     * </pre>
     *
     * <code>errPmSharePackageFail = 907;</code>
     */
    errPmSharePackageFail(907),
    /**
     * <pre>
     ** 还没有任何小伙伴接受邀请 
     * </pre>
     *
     * <code>errPmNoSlave = 908;</code>
     */
    errPmNoSlave(908),
    /**
     * <pre>
     ** 你和请求玩家不是小伙伴
     * </pre>
     *
     * <code>errPmNotRelationship = 909;</code>
     */
    errPmNotRelationship(909),
    /**
     * <pre>
     ** 手机号已经被绑定了 
     * </pre>
     *
     * <code>errPmTelAlreadyUsed = 910;</code>
     */
    errPmTelAlreadyUsed(910),
    /**
     * <pre>
     ** 推送奖励公告为空 
     * </pre>
     *
     * <code>errAwardMsgIsNul = 1000;</code>
     */
    errAwardMsgIsNul(1000),
    /**
     * <pre>
     ** 领取失败 
     * </pre>
     *
     * <code>errGetDailyFailed = 1100;</code>
     */
    errGetDailyFailed(1100),
    /**
     * <pre>
     ** 新手任务已过期 
     * </pre>
     *
     * <code>errNoviceTaskexpired = 1200;</code>
     */
    errNoviceTaskexpired(1200),
    /**
     * <pre>
     ** 领取失败 
     * </pre>
     *
     * <code>errGetNoviceFailed = 1201;</code>
     */
    errGetNoviceFailed(1201),
    /**
     * <pre>
     ** 删除失败，请先领取 
     * </pre>
     *
     * <code>errDeleteMail = 1300;</code>
     */
    errDeleteMail(1300),
    /**
     * <pre>
     ** 夺宝商城接口错误 
     * </pre>
     *
     * <code>errSnatch = 1400;</code>
     */
    errSnatch(1400),
    /**
     * <pre>
     ** 获取夺宝商城主界面报错 
     * </pre>
     *
     * <code>errSnatchGetList = 1401;</code>
     */
    errSnatchGetList(1401),
    /**
     * <pre>
     ** 夺宝-下注值超过能下注值 
     * </pre>
     *
     * <code>errSnatchInvaildBet = 1402;</code>
     */
    errSnatchInvaildBet(1402),
    /**
     * <pre>
     ** 夺宝-红包不足下注 
     * </pre>
     *
     * <code>errSnatchWincupNotEnough = 1403;</code>
     */
    errSnatchWincupNotEnough(1403),
    /**
     * <pre>
     ** 夺宝-不能领取奖励 
     * </pre>
     *
     * <code>errSnatchInvaildGetAward = 1404;</code>
     */
    errSnatchInvaildGetAward(1404),
    /**
     * <pre>
     ** 夺宝-已经没有更多的历史记录了
     * </pre>
     *
     * <code>errSnatchNoMoreHistories = 1405;</code>
     */
    errSnatchNoMoreHistories(1405),
    /**
     * <pre>
     ** 夺宝-没有填写详细的地址信息，不能领取实物奖励 
     * </pre>
     *
     * <code>errSnatchRequireAddrDetail = 1406;</code>
     */
    errSnatchRequireAddrDetail(1406),
    /**
     * <pre>
     ** 钻石宝箱接口错误 
     * </pre>
     *
     * <code>errDG = 1500;</code>
     */
    errDG(1500),
    /**
     * <pre>
     **钻石宝箱已经过期 
     * </pre>
     *
     * <code>errDGExpired = 1501;</code>
     */
    errDGExpired(1501),
    /**
     * <pre>
     ** 宝箱已经抽取完了,请重置 
     * </pre>
     *
     * <code>errBoxIsOver = 1502;</code>
     */
    errBoxIsOver(1502),
    /**
     * <pre>
     ** 重置失败 
     * </pre>
     *
     * <code>errReset = 1503;</code>
     */
    errReset(1503),
    /**
     * <pre>
     ** 游戏开启失败 
     * </pre>
     *
     * <code>errOpenDg = 1504;</code>
     */
    errOpenDg(1504),
    /**
     * <pre>
     ** 可重置没有重置机会 
     * </pre>
     *
     * <code>errNoLeftCont = 1505;</code>
     */
    errNoLeftCont(1505),
    /**
     * <pre>
     ** 重置机会用完了 
     * </pre>
     *
     * <code>errNoChance = 1506;</code>
     */
    errNoChance(1506),
    /**
     * <pre>
     ** 道具背包接口报错
     * </pre>
     *
     * <code>errProp = 1600;</code>
     */
    errProp(1600),
    /**
     * <pre>
     ** 没有这个道具报错
     * </pre>
     *
     * <code>errPropNotHaveThisProp = 1601;</code>
     */
    errPropNotHaveThisProp(1601),
    /**
     * <pre>
     ** 不满足道具使用条件 
     * </pre>
     *
     * <code>errNotMatchUseCondition = 1602;</code>
     */
    errNotMatchUseCondition(1602),
    /**
     * <pre>
     ** 签到接口错误 
     * </pre>
     *
     * <code>errSign = 1700;</code>
     */
    errSign(1700),
    /**
     * <pre>
     ** 重复签到 
     * </pre>
     *
     * <code>errSignRepeate = 1701;</code>
     */
    errSignRepeate(1701),
    /**
     * <pre>
     ** 补签卡不足 
     * </pre>
     *
     * <code>errSignRSCNotEnough = 1702;</code>
     */
    errSignRSCNotEnough(1702),
    /**
     * <pre>
     ** 钻石不足 
     * </pre>
     *
     * <code>errSignRSDNotEnough = 1703;</code>
     */
    errSignRSDNotEnough(1703),
    /**
     * <pre>
     ** 签到时间错误 
     * </pre>
     *
     * <code>errSignTime = 1704;</code>
     */
    errSignTime(1704),
    /**
     * <pre>
     ** 幸运时钟抽奖失败 
     * </pre>
     *
     * <code>errSignLT = 1705;</code>
     */
    errSignLT(1705),
    /**
     * <pre>
     ** vip等级不足 
     * </pre>
     *
     * <code>errSignVipLack = 1706;</code>
     */
    errSignVipLack(1706),
    /**
     * <pre>
     ** 奖励已领取 
     * </pre>
     *
     * <code>errSignRewardHasGet = 1707;</code>
     */
    errSignRewardHasGet(1707),
    /**
     * <pre>
     ** 签到时间不足 
     * </pre>
     *
     * <code>errSignDayNotEnough = 1708;</code>
     */
    errSignDayNotEnough(1708),
    /**
     * <pre>
     ** VIP接口错误 
     * </pre>
     *
     * <code>errVipLvNotEnough = 1801;</code>
     */
    errVipLvNotEnough(1801),
    /**
     * <pre>
     ** 本周已经领过每周奖励了 
     * </pre>
     *
     * <code>errVipWeekAwardAlreadyGet = 1802;</code>
     */
    errVipWeekAwardAlreadyGet(1802),
    /**
     * <pre>
     ** 已经领过每日礼包了 
     * </pre>
     *
     * <code>errVipAlreadyGetDayGift = 1803;</code>
     */
    errVipAlreadyGetDayGift(1803),
    /**
     * <pre>
     ** 因为昨天没抽奖，所以没有领取每日礼包的资格 
     * </pre>
     *
     * <code>errVipNotLottery = 1804;</code>
     */
    errVipNotLottery(1804),
    /**
     * <pre>
     ** 钻石滚动抽奖接口错误 
     * </pre>
     *
     * <code>errDD = 1900;</code>
     */
    errDD(1900),
    /**
     * <pre>
     ** 钻石不足 
     * </pre>
     *
     * <code>errDNotEnough = 1901;</code>
     */
    errDNotEnough(1901),
    /**
     * <pre>
     ** 该活动已关闭 
     * </pre>
     *
     * <code>errDDClose = 1902;</code>
     */
    errDDClose(1902),
    /**
     * <pre>
     ** 剩余次数不足 
     * </pre>
     *
     * <code>errDTimesNotEnough = 1903;</code>
     */
    errDTimesNotEnough(1903),
    /**
     * <pre>
     ** 拥有的钻石超过复活限制 
     * </pre>
     *
     * <code>errReviveExceedLimit = 2001;</code>
     */
    errReviveExceedLimit(2001),
    /**
     * <pre>
     ** 玩家复活次数不足 
     * </pre>
     *
     * <code>errReviveNotEnough = 2002;</code>
     */
    errReviveNotEnough(2002),
    /**
     * <pre>
     ** 拥有的金币超过复活限制 
     * </pre>
     *
     * <code>errReviveGoldLimit = 2003;</code>
     */
    errReviveGoldLimit(2003),
    /**
     * <pre>
     ** 该局比赛报名已经结束 
     * </pre>
     *
     * <code>errMatchApplyOver = 2101;</code>
     */
    errMatchApplyOver(2101),
    /**
     * <pre>
     ** 报名卡不足 
     * </pre>
     *
     * <code>errMatchApplyCardNotEnough = 2102;</code>
     */
    errMatchApplyCardNotEnough(2102),
    /**
     * <pre>
     ** 取消报名失败 
     * </pre>
     *
     * <code>errMatchCancelFail = 2103;</code>
     */
    errMatchCancelFail(2103),
    /**
     * <pre>
     ** 实名认证报错 
     * </pre>
     *
     * <code>errIdVerify = 2201;</code>
     */
    errIdVerify(2201),
    /**
     * <pre>
     ** 身份证格式不正确 
     * </pre>
     *
     * <code>errIdVerifyFormat = 2202;</code>
     */
    errIdVerifyFormat(2202),
    /**
     * <pre>
     ** 金豆不足 
     * </pre>
     *
     * <code>errGoldNotEnough = 2301;</code>
     */
    errGoldNotEnough(2301),
    /**
     * <pre>
     ** cdkey兑换失败 
     * </pre>
     *
     * <code>errCdkeyFaild = 2401;</code>
     */
    errCdkeyFaild(2401),
    /**
     * <pre>
     ** cdkey兑换码不存在 
     * </pre>
     *
     * <code>errCdkeyErr = 2402;</code>
     */
    errCdkeyErr(2402),
    /**
     * <pre>
     ** cdkey兑换码已过期 
     * </pre>
     *
     * <code>errCdkeyExpired = 2403;</code>
     */
    errCdkeyExpired(2403),
    /**
     * <pre>
     ** cdkey兑换码已领取 
     * </pre>
     *
     * <code>errCdkeyReceived = 2404;</code>
     */
    errCdkeyReceived(2404),
    /**
     * <pre>
     ** cdkey兑换码已领完 
     * </pre>
     *
     * <code>errCdkeyGetOver = 2405;</code>
     */
    errCdkeyGetOver(2405),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** 成功 
     * </pre>
     *
     * <code>success = 0;</code>
     */
    public static final int success_VALUE = 0;
    /**
     * <pre>
     ** 任意失败 
     * </pre>
     *
     * <code>err = 1;</code>
     */
    public static final int err_VALUE = 1;
    /**
     * <pre>
     ** 没有该方法错误 
     * </pre>
     *
     * <code>errNoMethod = 2;</code>
     */
    public static final int errNoMethod_VALUE = 2;
    /**
     * <pre>
     ** 消息为空 
     * </pre>
     *
     * <code>errNulMsg = 3;</code>
     */
    public static final int errNulMsg_VALUE = 3;
    /**
     * <pre>
     ** 登录过期 
     * </pre>
     *
     * <code>errLoginInvalid = 4;</code>
     */
    public static final int errLoginInvalid_VALUE = 4;
    /**
     * <pre>
     ** 网络连接错误 
     * </pre>
     *
     * <code>errNetConnect = 5;</code>
     */
    public static final int errNetConnect_VALUE = 5;
    /**
     * <pre>
     ** 请先完成游戏 
     * </pre>
     *
     * <code>errGameNotOver = 6;</code>
     */
    public static final int errGameNotOver_VALUE = 6;
    /**
     * <pre>
     ** 登陆错误 
     * </pre>
     *
     * <code>errLogin = 100;</code>
     */
    public static final int errLogin_VALUE = 100;
    /**
     * <pre>
     ** token失效 
     * </pre>
     *
     * <code>errLoginTokenInvalid = 101;</code>
     */
    public static final int errLoginTokenInvalid_VALUE = 101;
    /**
     * <pre>
     ** 账号违规，无法登录 
     * </pre>
     *
     * <code>errLoginBan = 102;</code>
     */
    public static final int errLoginBan_VALUE = 102;
    /**
     * <pre>
     ** 重连时间过期 
     * </pre>
     *
     * <code>errLoginReconnect = 103;</code>
     */
    public static final int errLoginReconnect_VALUE = 103;
    /**
     * <pre>
     ** 排行榜错误 
     * </pre>
     *
     * <code>errRank = 300;</code>
     */
    public static final int errRank_VALUE = 300;
    /**
     * <pre>
     ** 排行榜为空 
     * </pre>
     *
     * <code>errRankEmpty = 301;</code>
     */
    public static final int errRankEmpty_VALUE = 301;
    /**
     * <pre>
     ** 抽奖失败，未知错误 
     * </pre>
     *
     * <code>errLottery = 400;</code>
     */
    public static final int errLottery_VALUE = 400;
    /**
     * <pre>
     ** 抽奖失败，剩余次数不足 
     * </pre>
     *
     * <code>errLotteryNotEnough = 401;</code>
     */
    public static final int errLotteryNotEnough_VALUE = 401;
    /**
     * <pre>
     ** 商城错误 
     * </pre>
     *
     * <code>errShop = 500;</code>
     */
    public static final int errShop_VALUE = 500;
    /**
     * <pre>
     ** 物品不存在 
     * </pre>
     *
     * <code>errShopItemNotExist = 501;</code>
     */
    public static final int errShopItemNotExist_VALUE = 501;
    /**
     * <pre>
     ** 购买货币不足 
     * </pre>
     *
     * <code>errShopChipNotEnough = 502;</code>
     */
    public static final int errShopChipNotEnough_VALUE = 502;
    /**
     * <pre>
     ** 每日礼包今天已经购买完：今天已经购买完了,请明天再来 
     * </pre>
     *
     * <code>errDailyGiftNoLeft = 503;</code>
     */
    public static final int errDailyGiftNoLeft_VALUE = 503;
    /**
     * <pre>
     ** 金豆复活礼包已经买完 
     * </pre>
     *
     * <code>errGoldcoinResGiftNoLeft = 504;</code>
     */
    public static final int errGoldcoinResGiftNoLeft_VALUE = 504;
    /**
     * <pre>
     ** 钻石复活礼包已经买完 
     * </pre>
     *
     * <code>errDiamondResGiftNoLeft = 505;</code>
     */
    public static final int errDiamondResGiftNoLeft_VALUE = 505;
    /**
     * <pre>
     ** 当天购买次数已用尽 
     * </pre>
     *
     * <code>errUnmatchBuyResGift = 506;</code>
     */
    public static final int errUnmatchBuyResGift_VALUE = 506;
    /**
     * <pre>
     ** 未关注公众号 
     * </pre>
     *
     * <code>errNotFollowWxAccount = 507;</code>
     */
    public static final int errNotFollowWxAccount_VALUE = 507;
    /**
     * <pre>
     ** 兑换失败 
     * </pre>
     *
     * <code>errConvertFailed = 508;</code>
     */
    public static final int errConvertFailed_VALUE = 508;
    /**
     * <pre>
     ** 未绑定手机号 
     * </pre>
     *
     * <code>errNotBindTel = 509;</code>
     */
    public static final int errNotBindTel_VALUE = 509;
    /**
     * <pre>
     ** 企业付款到限额:今日红包已发完，请明日尽早领取 
     * </pre>
     *
     * <code>errEnPayNoMoney = 510;</code>
     */
    public static final int errEnPayNoMoney_VALUE = 510;
    /**
     * <pre>
     ** 微信红包没有钱了,兑换失败，请联系客服 
     * </pre>
     *
     * <code>errWxRedNoMoney = 511;</code>
     */
    public static final int errWxRedNoMoney_VALUE = 511;
    /**
     * <pre>
     ** 今日充值超限 
     * </pre>
     *
     * <code>errChargeOver = 512;</code>
     */
    public static final int errChargeOver_VALUE = 512;
    /**
     * <pre>
     ** 微信系统繁忙 
     * </pre>
     *
     * <code>errWxSystemError = 513;</code>
     */
    public static final int errWxSystemError_VALUE = 513;
    /**
     * <pre>
     ** 抽奖等待时间未到 
     * </pre>
     *
     * <code>errLotteryWaitTime = 514;</code>
     */
    public static final int errLotteryWaitTime_VALUE = 514;
    /**
     * <pre>
     ** 本周兑换次数已经用尽 
     * </pre>
     *
     * <code>errExchangeExhaust = 515;</code>
     */
    public static final int errExchangeExhaust_VALUE = 515;
    /**
     * <pre>
     ** 加入房间错误码 
     * </pre>
     *
     * <code>errRoom = 600;</code>
     */
    public static final int errRoom_VALUE = 600;
    /**
     * <pre>
     ** 筹码不足加入房间 
     * </pre>
     *
     * <code>errRoomChipNotEnough = 601;</code>
     */
    public static final int errRoomChipNotEnough_VALUE = 601;
    /**
     * <pre>
     ** 钻石不足加入房间 
     * </pre>
     *
     * <code>errRoomDiamondNotEnough = 602;</code>
     */
    public static final int errRoomDiamondNotEnough_VALUE = 602;
    /**
     * <pre>
     ** 重新加入房间错误，房间不存在
     * </pre>
     *
     * <code>errRoomNotExist = 603;</code>
     */
    public static final int errRoomNotExist_VALUE = 603;
    /**
     * <pre>
     ** 玩家不在房间中 
     * </pre>
     *
     * <code>errRoomNotIn = 604;</code>
     */
    public static final int errRoomNotIn_VALUE = 604;
    /**
     * <pre>
     ** 筹码大于加入房间最大值 
     * </pre>
     *
     * <code>errRoomChipToMuch = 605;</code>
     */
    public static final int errRoomChipToMuch_VALUE = 605;
    /**
     * <pre>
     ** 钻石大于加入房间最大值 
     * </pre>
     *
     * <code>errRoomDiamondToMuch = 606;</code>
     */
    public static final int errRoomDiamondToMuch_VALUE = 606;
    /**
     * <pre>
     ** 用户信息接口 
     * </pre>
     *
     * <code>errUserIsNull = 701;</code>
     */
    public static final int errUserIsNull_VALUE = 701;
    /**
     * <pre>
     ** 游戏接口 
     * </pre>
     *
     * <code>errGame = 800;</code>
     */
    public static final int errGame_VALUE = 800;
    /**
     * <pre>
     ** 房间不存在 
     * </pre>
     *
     * <code>errGameRoomNotExist = 801;</code>
     */
    public static final int errGameRoomNotExist_VALUE = 801;
    /**
     * <pre>
     ** 当前房间不在游戏中，不能托管 
     * </pre>
     *
     * <code>errGameAutoPlay = 802;</code>
     */
    public static final int errGameAutoPlay_VALUE = 802;
    /**
     * <pre>
     ** 当前不应该该玩家操作 
     * </pre>
     *
     * <code>errGameInvaildOper = 803;</code>
     */
    public static final int errGameInvaildOper_VALUE = 803;
    /**
     * <pre>
     ** 叫地主分值非法 
     * </pre>
     *
     * <code>errGameInvaildCatchPoint = 804;</code>
     */
    public static final int errGameInvaildCatchPoint_VALUE = 804;
    /**
     * <pre>
     ** 进入房间失败 
     * </pre>
     *
     * <code>errGameEnterRoomFail = 805;</code>
     */
    public static final int errGameEnterRoomFail_VALUE = 805;
    /**
     * <pre>
     ** 玩家不在房间中 
     * </pre>
     *
     * <code>errGamePlayerNotIn = 806;</code>
     */
    public static final int errGamePlayerNotIn_VALUE = 806;
    /**
     * <pre>
     ** 玩家牌型错误 
     * </pre>
     *
     * <code>errGameCardInvaild = 807;</code>
     */
    public static final int errGameCardInvaild_VALUE = 807;
    /**
     * <pre>
     ** 分享接口
     * </pre>
     *
     * <code>errPm = 900;</code>
     */
    public static final int errPm_VALUE = 900;
    /**
     * <pre>
     ** 分享接口-发送短信校验码-手机号码非法
     * </pre>
     *
     * <code>errPmTelNumInvaild = 901;</code>
     */
    public static final int errPmTelNumInvaild_VALUE = 901;
    /**
     * <pre>
     ** 发送短信校验码-验证码校验失败
     * </pre>
     *
     * <code>errPmVerifyCodeFail = 902;</code>
     */
    public static final int errPmVerifyCodeFail_VALUE = 902;
    /**
     * <pre>
     ** 领取分享奖励失败-未完成 
     * </pre>
     *
     * <code>errPmGetAwardNotFinish = 903;</code>
     */
    public static final int errPmGetAwardNotFinish_VALUE = 903;
    /**
     * <pre>
     ** 领取分享奖励失败-未绑定手机号
     * </pre>
     *
     * <code>errPmGetAwardNotBindTel = 904;</code>
     */
    public static final int errPmGetAwardNotBindTel_VALUE = 904;
    /**
     * <pre>
     ** 已经绑定过手机号了 
     * </pre>
     *
     * <code>errPmAlreadyBind = 905;</code>
     */
    public static final int errPmAlreadyBind_VALUE = 905;
    /**
     * <pre>
     ** 重发验证码时间过短
     * </pre>
     *
     * <code>errPmRequestIntervalTooShort = 906;</code>
     */
    public static final int errPmRequestIntervalTooShort_VALUE = 906;
    /**
     * <pre>
     ** 分包失败 
     * </pre>
     *
     * <code>errPmSharePackageFail = 907;</code>
     */
    public static final int errPmSharePackageFail_VALUE = 907;
    /**
     * <pre>
     ** 还没有任何小伙伴接受邀请 
     * </pre>
     *
     * <code>errPmNoSlave = 908;</code>
     */
    public static final int errPmNoSlave_VALUE = 908;
    /**
     * <pre>
     ** 你和请求玩家不是小伙伴
     * </pre>
     *
     * <code>errPmNotRelationship = 909;</code>
     */
    public static final int errPmNotRelationship_VALUE = 909;
    /**
     * <pre>
     ** 手机号已经被绑定了 
     * </pre>
     *
     * <code>errPmTelAlreadyUsed = 910;</code>
     */
    public static final int errPmTelAlreadyUsed_VALUE = 910;
    /**
     * <pre>
     ** 推送奖励公告为空 
     * </pre>
     *
     * <code>errAwardMsgIsNul = 1000;</code>
     */
    public static final int errAwardMsgIsNul_VALUE = 1000;
    /**
     * <pre>
     ** 领取失败 
     * </pre>
     *
     * <code>errGetDailyFailed = 1100;</code>
     */
    public static final int errGetDailyFailed_VALUE = 1100;
    /**
     * <pre>
     ** 新手任务已过期 
     * </pre>
     *
     * <code>errNoviceTaskexpired = 1200;</code>
     */
    public static final int errNoviceTaskexpired_VALUE = 1200;
    /**
     * <pre>
     ** 领取失败 
     * </pre>
     *
     * <code>errGetNoviceFailed = 1201;</code>
     */
    public static final int errGetNoviceFailed_VALUE = 1201;
    /**
     * <pre>
     ** 删除失败，请先领取 
     * </pre>
     *
     * <code>errDeleteMail = 1300;</code>
     */
    public static final int errDeleteMail_VALUE = 1300;
    /**
     * <pre>
     ** 夺宝商城接口错误 
     * </pre>
     *
     * <code>errSnatch = 1400;</code>
     */
    public static final int errSnatch_VALUE = 1400;
    /**
     * <pre>
     ** 获取夺宝商城主界面报错 
     * </pre>
     *
     * <code>errSnatchGetList = 1401;</code>
     */
    public static final int errSnatchGetList_VALUE = 1401;
    /**
     * <pre>
     ** 夺宝-下注值超过能下注值 
     * </pre>
     *
     * <code>errSnatchInvaildBet = 1402;</code>
     */
    public static final int errSnatchInvaildBet_VALUE = 1402;
    /**
     * <pre>
     ** 夺宝-红包不足下注 
     * </pre>
     *
     * <code>errSnatchWincupNotEnough = 1403;</code>
     */
    public static final int errSnatchWincupNotEnough_VALUE = 1403;
    /**
     * <pre>
     ** 夺宝-不能领取奖励 
     * </pre>
     *
     * <code>errSnatchInvaildGetAward = 1404;</code>
     */
    public static final int errSnatchInvaildGetAward_VALUE = 1404;
    /**
     * <pre>
     ** 夺宝-已经没有更多的历史记录了
     * </pre>
     *
     * <code>errSnatchNoMoreHistories = 1405;</code>
     */
    public static final int errSnatchNoMoreHistories_VALUE = 1405;
    /**
     * <pre>
     ** 夺宝-没有填写详细的地址信息，不能领取实物奖励 
     * </pre>
     *
     * <code>errSnatchRequireAddrDetail = 1406;</code>
     */
    public static final int errSnatchRequireAddrDetail_VALUE = 1406;
    /**
     * <pre>
     ** 钻石宝箱接口错误 
     * </pre>
     *
     * <code>errDG = 1500;</code>
     */
    public static final int errDG_VALUE = 1500;
    /**
     * <pre>
     **钻石宝箱已经过期 
     * </pre>
     *
     * <code>errDGExpired = 1501;</code>
     */
    public static final int errDGExpired_VALUE = 1501;
    /**
     * <pre>
     ** 宝箱已经抽取完了,请重置 
     * </pre>
     *
     * <code>errBoxIsOver = 1502;</code>
     */
    public static final int errBoxIsOver_VALUE = 1502;
    /**
     * <pre>
     ** 重置失败 
     * </pre>
     *
     * <code>errReset = 1503;</code>
     */
    public static final int errReset_VALUE = 1503;
    /**
     * <pre>
     ** 游戏开启失败 
     * </pre>
     *
     * <code>errOpenDg = 1504;</code>
     */
    public static final int errOpenDg_VALUE = 1504;
    /**
     * <pre>
     ** 可重置没有重置机会 
     * </pre>
     *
     * <code>errNoLeftCont = 1505;</code>
     */
    public static final int errNoLeftCont_VALUE = 1505;
    /**
     * <pre>
     ** 重置机会用完了 
     * </pre>
     *
     * <code>errNoChance = 1506;</code>
     */
    public static final int errNoChance_VALUE = 1506;
    /**
     * <pre>
     ** 道具背包接口报错
     * </pre>
     *
     * <code>errProp = 1600;</code>
     */
    public static final int errProp_VALUE = 1600;
    /**
     * <pre>
     ** 没有这个道具报错
     * </pre>
     *
     * <code>errPropNotHaveThisProp = 1601;</code>
     */
    public static final int errPropNotHaveThisProp_VALUE = 1601;
    /**
     * <pre>
     ** 不满足道具使用条件 
     * </pre>
     *
     * <code>errNotMatchUseCondition = 1602;</code>
     */
    public static final int errNotMatchUseCondition_VALUE = 1602;
    /**
     * <pre>
     ** 签到接口错误 
     * </pre>
     *
     * <code>errSign = 1700;</code>
     */
    public static final int errSign_VALUE = 1700;
    /**
     * <pre>
     ** 重复签到 
     * </pre>
     *
     * <code>errSignRepeate = 1701;</code>
     */
    public static final int errSignRepeate_VALUE = 1701;
    /**
     * <pre>
     ** 补签卡不足 
     * </pre>
     *
     * <code>errSignRSCNotEnough = 1702;</code>
     */
    public static final int errSignRSCNotEnough_VALUE = 1702;
    /**
     * <pre>
     ** 钻石不足 
     * </pre>
     *
     * <code>errSignRSDNotEnough = 1703;</code>
     */
    public static final int errSignRSDNotEnough_VALUE = 1703;
    /**
     * <pre>
     ** 签到时间错误 
     * </pre>
     *
     * <code>errSignTime = 1704;</code>
     */
    public static final int errSignTime_VALUE = 1704;
    /**
     * <pre>
     ** 幸运时钟抽奖失败 
     * </pre>
     *
     * <code>errSignLT = 1705;</code>
     */
    public static final int errSignLT_VALUE = 1705;
    /**
     * <pre>
     ** vip等级不足 
     * </pre>
     *
     * <code>errSignVipLack = 1706;</code>
     */
    public static final int errSignVipLack_VALUE = 1706;
    /**
     * <pre>
     ** 奖励已领取 
     * </pre>
     *
     * <code>errSignRewardHasGet = 1707;</code>
     */
    public static final int errSignRewardHasGet_VALUE = 1707;
    /**
     * <pre>
     ** 签到时间不足 
     * </pre>
     *
     * <code>errSignDayNotEnough = 1708;</code>
     */
    public static final int errSignDayNotEnough_VALUE = 1708;
    /**
     * <pre>
     ** VIP接口错误 
     * </pre>
     *
     * <code>errVipLvNotEnough = 1801;</code>
     */
    public static final int errVipLvNotEnough_VALUE = 1801;
    /**
     * <pre>
     ** 本周已经领过每周奖励了 
     * </pre>
     *
     * <code>errVipWeekAwardAlreadyGet = 1802;</code>
     */
    public static final int errVipWeekAwardAlreadyGet_VALUE = 1802;
    /**
     * <pre>
     ** 已经领过每日礼包了 
     * </pre>
     *
     * <code>errVipAlreadyGetDayGift = 1803;</code>
     */
    public static final int errVipAlreadyGetDayGift_VALUE = 1803;
    /**
     * <pre>
     ** 因为昨天没抽奖，所以没有领取每日礼包的资格 
     * </pre>
     *
     * <code>errVipNotLottery = 1804;</code>
     */
    public static final int errVipNotLottery_VALUE = 1804;
    /**
     * <pre>
     ** 钻石滚动抽奖接口错误 
     * </pre>
     *
     * <code>errDD = 1900;</code>
     */
    public static final int errDD_VALUE = 1900;
    /**
     * <pre>
     ** 钻石不足 
     * </pre>
     *
     * <code>errDNotEnough = 1901;</code>
     */
    public static final int errDNotEnough_VALUE = 1901;
    /**
     * <pre>
     ** 该活动已关闭 
     * </pre>
     *
     * <code>errDDClose = 1902;</code>
     */
    public static final int errDDClose_VALUE = 1902;
    /**
     * <pre>
     ** 剩余次数不足 
     * </pre>
     *
     * <code>errDTimesNotEnough = 1903;</code>
     */
    public static final int errDTimesNotEnough_VALUE = 1903;
    /**
     * <pre>
     ** 拥有的钻石超过复活限制 
     * </pre>
     *
     * <code>errReviveExceedLimit = 2001;</code>
     */
    public static final int errReviveExceedLimit_VALUE = 2001;
    /**
     * <pre>
     ** 玩家复活次数不足 
     * </pre>
     *
     * <code>errReviveNotEnough = 2002;</code>
     */
    public static final int errReviveNotEnough_VALUE = 2002;
    /**
     * <pre>
     ** 拥有的金币超过复活限制 
     * </pre>
     *
     * <code>errReviveGoldLimit = 2003;</code>
     */
    public static final int errReviveGoldLimit_VALUE = 2003;
    /**
     * <pre>
     ** 该局比赛报名已经结束 
     * </pre>
     *
     * <code>errMatchApplyOver = 2101;</code>
     */
    public static final int errMatchApplyOver_VALUE = 2101;
    /**
     * <pre>
     ** 报名卡不足 
     * </pre>
     *
     * <code>errMatchApplyCardNotEnough = 2102;</code>
     */
    public static final int errMatchApplyCardNotEnough_VALUE = 2102;
    /**
     * <pre>
     ** 取消报名失败 
     * </pre>
     *
     * <code>errMatchCancelFail = 2103;</code>
     */
    public static final int errMatchCancelFail_VALUE = 2103;
    /**
     * <pre>
     ** 实名认证报错 
     * </pre>
     *
     * <code>errIdVerify = 2201;</code>
     */
    public static final int errIdVerify_VALUE = 2201;
    /**
     * <pre>
     ** 身份证格式不正确 
     * </pre>
     *
     * <code>errIdVerifyFormat = 2202;</code>
     */
    public static final int errIdVerifyFormat_VALUE = 2202;
    /**
     * <pre>
     ** 金豆不足 
     * </pre>
     *
     * <code>errGoldNotEnough = 2301;</code>
     */
    public static final int errGoldNotEnough_VALUE = 2301;
    /**
     * <pre>
     ** cdkey兑换失败 
     * </pre>
     *
     * <code>errCdkeyFaild = 2401;</code>
     */
    public static final int errCdkeyFaild_VALUE = 2401;
    /**
     * <pre>
     ** cdkey兑换码不存在 
     * </pre>
     *
     * <code>errCdkeyErr = 2402;</code>
     */
    public static final int errCdkeyErr_VALUE = 2402;
    /**
     * <pre>
     ** cdkey兑换码已过期 
     * </pre>
     *
     * <code>errCdkeyExpired = 2403;</code>
     */
    public static final int errCdkeyExpired_VALUE = 2403;
    /**
     * <pre>
     ** cdkey兑换码已领取 
     * </pre>
     *
     * <code>errCdkeyReceived = 2404;</code>
     */
    public static final int errCdkeyReceived_VALUE = 2404;
    /**
     * <pre>
     ** cdkey兑换码已领完 
     * </pre>
     *
     * <code>errCdkeyGetOver = 2405;</code>
     */
    public static final int errCdkeyGetOver_VALUE = 2405;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResultCode valueOf(int value) {
      return forNumber(value);
    }

    public static ResultCode forNumber(int value) {
      switch (value) {
        case 0: return success;
        case 1: return err;
        case 2: return errNoMethod;
        case 3: return errNulMsg;
        case 4: return errLoginInvalid;
        case 5: return errNetConnect;
        case 6: return errGameNotOver;
        case 100: return errLogin;
        case 101: return errLoginTokenInvalid;
        case 102: return errLoginBan;
        case 103: return errLoginReconnect;
        case 300: return errRank;
        case 301: return errRankEmpty;
        case 400: return errLottery;
        case 401: return errLotteryNotEnough;
        case 500: return errShop;
        case 501: return errShopItemNotExist;
        case 502: return errShopChipNotEnough;
        case 503: return errDailyGiftNoLeft;
        case 504: return errGoldcoinResGiftNoLeft;
        case 505: return errDiamondResGiftNoLeft;
        case 506: return errUnmatchBuyResGift;
        case 507: return errNotFollowWxAccount;
        case 508: return errConvertFailed;
        case 509: return errNotBindTel;
        case 510: return errEnPayNoMoney;
        case 511: return errWxRedNoMoney;
        case 512: return errChargeOver;
        case 513: return errWxSystemError;
        case 514: return errLotteryWaitTime;
        case 515: return errExchangeExhaust;
        case 600: return errRoom;
        case 601: return errRoomChipNotEnough;
        case 602: return errRoomDiamondNotEnough;
        case 603: return errRoomNotExist;
        case 604: return errRoomNotIn;
        case 605: return errRoomChipToMuch;
        case 606: return errRoomDiamondToMuch;
        case 701: return errUserIsNull;
        case 800: return errGame;
        case 801: return errGameRoomNotExist;
        case 802: return errGameAutoPlay;
        case 803: return errGameInvaildOper;
        case 804: return errGameInvaildCatchPoint;
        case 805: return errGameEnterRoomFail;
        case 806: return errGamePlayerNotIn;
        case 807: return errGameCardInvaild;
        case 900: return errPm;
        case 901: return errPmTelNumInvaild;
        case 902: return errPmVerifyCodeFail;
        case 903: return errPmGetAwardNotFinish;
        case 904: return errPmGetAwardNotBindTel;
        case 905: return errPmAlreadyBind;
        case 906: return errPmRequestIntervalTooShort;
        case 907: return errPmSharePackageFail;
        case 908: return errPmNoSlave;
        case 909: return errPmNotRelationship;
        case 910: return errPmTelAlreadyUsed;
        case 1000: return errAwardMsgIsNul;
        case 1100: return errGetDailyFailed;
        case 1200: return errNoviceTaskexpired;
        case 1201: return errGetNoviceFailed;
        case 1300: return errDeleteMail;
        case 1400: return errSnatch;
        case 1401: return errSnatchGetList;
        case 1402: return errSnatchInvaildBet;
        case 1403: return errSnatchWincupNotEnough;
        case 1404: return errSnatchInvaildGetAward;
        case 1405: return errSnatchNoMoreHistories;
        case 1406: return errSnatchRequireAddrDetail;
        case 1500: return errDG;
        case 1501: return errDGExpired;
        case 1502: return errBoxIsOver;
        case 1503: return errReset;
        case 1504: return errOpenDg;
        case 1505: return errNoLeftCont;
        case 1506: return errNoChance;
        case 1600: return errProp;
        case 1601: return errPropNotHaveThisProp;
        case 1602: return errNotMatchUseCondition;
        case 1700: return errSign;
        case 1701: return errSignRepeate;
        case 1702: return errSignRSCNotEnough;
        case 1703: return errSignRSDNotEnough;
        case 1704: return errSignTime;
        case 1705: return errSignLT;
        case 1706: return errSignVipLack;
        case 1707: return errSignRewardHasGet;
        case 1708: return errSignDayNotEnough;
        case 1801: return errVipLvNotEnough;
        case 1802: return errVipWeekAwardAlreadyGet;
        case 1803: return errVipAlreadyGetDayGift;
        case 1804: return errVipNotLottery;
        case 1900: return errDD;
        case 1901: return errDNotEnough;
        case 1902: return errDDClose;
        case 1903: return errDTimesNotEnough;
        case 2001: return errReviveExceedLimit;
        case 2002: return errReviveNotEnough;
        case 2003: return errReviveGoldLimit;
        case 2101: return errMatchApplyOver;
        case 2102: return errMatchApplyCardNotEnough;
        case 2103: return errMatchCancelFail;
        case 2201: return errIdVerify;
        case 2202: return errIdVerifyFormat;
        case 2301: return errGoldNotEnough;
        case 2401: return errCdkeyFaild;
        case 2402: return errCdkeyErr;
        case 2403: return errCdkeyExpired;
        case 2404: return errCdkeyReceived;
        case 2405: return errCdkeyGetOver;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResultCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResultCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResultCode>() {
            public ResultCode findValueByNumber(int number) {
              return ResultCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.getDescriptor().getEnumTypes().get(2);
    }

    private static final ResultCode[] VALUES = values();

    public static ResultCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResultCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kys.util.netty.proto.ResultCode)
  }

  public interface ClientRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.kys.util.netty.proto.ClientRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 用户名 
     * </pre>
     *
     * <code>int32 userId = 1;</code>
     */
    int getUserId();

    /**
     * <pre>
     ** 请求方法名 
     * </pre>
     *
     * <code>int32 methodId = 2;</code>
     */
    int getMethodId();

    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    boolean hasClientPlayerInfo();
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientPlayerInfo();
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientPlayerInfoOrBuilder();

    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    boolean hasClientReturnHallHeartBeat();
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat getClientReturnHallHeartBeat();
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder getClientReturnHallHeartBeatOrBuilder();

    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    boolean hasClientReturnGameHeartBeat();
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat getClientReturnGameHeartBeat();
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder getClientReturnGameHeartBeatOrBuilder();

    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    boolean hasClientGetUserInfo();
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientGetUserInfo();
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientGetUserInfoOrBuilder();

    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    boolean hasClientNewLogin();
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientNewLogin getClientNewLogin();
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder getClientNewLoginOrBuilder();

    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    boolean hasClientQuickJoin();
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientQuickJoin getClientQuickJoin();
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder getClientQuickJoinOrBuilder();

    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    boolean hasClientEnterRoom();
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientEnterRoom getClientEnterRoom();
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder getClientEnterRoomOrBuilder();

    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    boolean hasClientDoCatch();
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientDoCatch getClientDoCatch();
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder getClientDoCatchOrBuilder();

    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    boolean hasClientPlayCards();
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientPlayCards getClientPlayCards();
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder getClientPlayCardsOrBuilder();

    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    boolean hasClientRecoverGame();
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientRecoverGame getClientRecoverGame();
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder getClientRecoverGameOrBuilder();

    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    boolean hasClientAutoPlay();
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientAutoPlay getClientAutoPlay();
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder getClientAutoPlayOrBuilder();

    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    boolean hasClientLeaveRoom();
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientLeaveRoom getClientLeaveRoom();
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder getClientLeaveRoomOrBuilder();

    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    boolean hasClientCancleJoin();
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientCancleJoin getClientCancleJoin();
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder getClientCancleJoinOrBuilder();

    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    boolean hasClientQueryIndex();
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientQueryIndex getClientQueryIndex();
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder getClientQueryIndexOrBuilder();

    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    boolean hasClientRetryReturnGame();
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientRetryReturnGame getClientRetryReturnGame();
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder getClientRetryReturnGameOrBuilder();

    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    boolean hasClientGetRankList();
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRankList getClientGetRankList();
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder getClientGetRankListOrBuilder();

    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    boolean hasClientGetRoomConfig();
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomConfig getClientGetRoomConfig();
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder getClientGetRoomConfigOrBuilder();

    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    boolean hasClientRewardMessage();
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientRewardMessage getClientRewardMessage();
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder getClientRewardMessageOrBuilder();

    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    boolean hasClientGetMonthCardDiamond();
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond getClientGetMonthCardDiamond();
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder getClientGetMonthCardDiamondOrBuilder();

    /**
     * <pre>
     ** 客户端获取玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    boolean hasClientGetLotteryCount();
    /**
     * <pre>
     ** 客户端获取玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetLotteryCount getClientGetLotteryCount();
    /**
     * <pre>
     ** 客户端获取玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder getClientGetLotteryCountOrBuilder();

    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    boolean hasClientGetRoomInfo();
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomInfo getClientGetRoomInfo();
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder getClientGetRoomInfoOrBuilder();

    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    boolean hasClientSendTelCode();
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSendTelCode getClientSendTelCode();
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder getClientSendTelCodeOrBuilder();

    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    boolean hasClientVerifyTelCode();
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientVerifyTelCode getClientVerifyTelCode();
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder getClientVerifyTelCodeOrBuilder();

    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    boolean hasClientSharePackage();
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSharePackage getClientSharePackage();
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder getClientSharePackageOrBuilder();

    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    boolean hasClientGetAwardList();
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetAwardList getClientGetAwardList();
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder getClientGetAwardListOrBuilder();

    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    boolean hasClientPlayerLogout();
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientPlayerLogout getClientPlayerLogout();
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder getClientPlayerLogoutOrBuilder();

    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    boolean hasClientCheckConnect();
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientCheckConnect getClientCheckConnect();
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder getClientCheckConnectOrBuilder();

    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    boolean hasClientGetPFList();
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetPFList getClientGetPFList();
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder getClientGetPFListOrBuilder();

    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    boolean hasClientChoosePF();
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientChoosePF getClientChoosePF();
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder getClientChoosePFOrBuilder();

    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    boolean hasClientGetHistoryRank();
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetHistoryRank getClientGetHistoryRank();
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder getClientGetHistoryRankOrBuilder();

    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    boolean hasClientH5Reward();
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientH5Reward getClientH5Reward();
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder getClientH5RewardOrBuilder();

    /**
     * <pre>
     ** 客户端新抽红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    boolean hasClientNewDrawWinCup();
    /**
     * <pre>
     ** 客户端新抽红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup getClientNewDrawWinCup();
    /**
     * <pre>
     ** 客户端新抽红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder getClientNewDrawWinCupOrBuilder();

    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    boolean hasClientGetNewHallInfo();
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo getClientGetNewHallInfo();
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder getClientGetNewHallInfoOrBuilder();

    /**
     * <pre>
     ** 玩家获取好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
     */
    boolean hasClientLuckWall();
    /**
     * <pre>
     ** 玩家获取好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientLuckWall getClientLuckWall();
    /**
     * <pre>
     ** 玩家获取好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientLuckWallOrBuilder getClientLuckWallOrBuilder();

    /**
     * <pre>
     ** 客户端请求cdkey奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
     */
    boolean hasClientCdkeyAward();
    /**
     * <pre>
     ** 客户端请求cdkey奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientCdkeyAward getClientCdkeyAward();
    /**
     * <pre>
     ** 客户端请求cdkey奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientCdkeyAwardOrBuilder getClientCdkeyAwardOrBuilder();

    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
     */
    boolean hasClientGetStoreInfo();
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo getClientGetStoreInfo();
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetStoreInfoOrBuilder getClientGetStoreInfoOrBuilder();

    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    boolean hasClientConvertGoods();
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientConvertGoods getClientConvertGoods();
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder getClientConvertGoodsOrBuilder();

    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    boolean hasClientWXPayResultQuery();
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery getClientWXPayResultQuery();
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder getClientWXPayResultQueryOrBuilder();

    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    boolean hasClientBuyOrderGoods();
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods getClientBuyOrderGoods();
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder getClientBuyOrderGoodsOrBuilder();

    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    boolean hasClientGetFirstCharge();
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge getClientGetFirstCharge();
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder getClientGetFirstChargeOrBuilder();

    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    boolean hasClientGetDailyGift();
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetDailyGift getClientGetDailyGift();
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder getClientGetDailyGiftOrBuilder();

    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    boolean hasClientGetMonthCard();
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetMonthCard getClientGetMonthCard();
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder getClientGetMonthCardOrBuilder();

    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    boolean hasClientGetResurgenceGift();
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift getClientGetResurgenceGift();
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder getClientGetResurgenceGiftOrBuilder();

    /**
     * <pre>
     ** 客户端请求兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
     */
    boolean hasClientGetConvertMessage();
    /**
     * <pre>
     ** 客户端请求兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage getClientGetConvertMessage();
    /**
     * <pre>
     ** 客户端请求兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetConvertMessageOrBuilder getClientGetConvertMessageOrBuilder();

    /**
     * <pre>
     ** 客户端新下单购买接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
     */
    boolean hasClientNewBuyOrder();
    /**
     * <pre>
     ** 客户端新下单购买接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder getClientNewBuyOrder();
    /**
     * <pre>
     ** 客户端新下单购买接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientNewBuyOrderOrBuilder getClientNewBuyOrderOrBuilder();

    /**
     * <pre>
     ** 客户端新兑换红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
     */
    boolean hasClientNewConvert();
    /**
     * <pre>
     ** 客户端新兑换红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientNewConvert getClientNewConvert();
    /**
     * <pre>
     ** 客户端新兑换红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientNewConvertOrBuilder getClientNewConvertOrBuilder();

    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
     */
    boolean hasClientAlipayAccount();
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientAlipayAccount getClientAlipayAccount();
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientAlipayAccountOrBuilder getClientAlipayAccountOrBuilder();

    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
     */
    boolean hasClientPayOptions();
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientPayOptions getClientPayOptions();
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientPayOptionsOrBuilder getClientPayOptionsOrBuilder();

    /**
     * <pre>
     ** 实名认证 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
     */
    boolean hasClientIdVerify();
    /**
     * <pre>
     ** 实名认证 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientIdVerify getClientIdVerify();
    /**
     * <pre>
     ** 实名认证 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientIdVerifyOrBuilder getClientIdVerifyOrBuilder();

    /**
     * <pre>
     ** 获取实名认证奖励的值 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
     */
    boolean hasClientVerifyAward();
    /**
     * <pre>
     ** 获取实名认证奖励的值 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientVerifyAward getClientVerifyAward();
    /**
     * <pre>
     ** 获取实名认证奖励的值 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientVerifyAwardOrBuilder getClientVerifyAwardOrBuilder();

    /**
     * <pre>
     ** 客户端请求微信支付信息，用于微信小程序支付 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
     */
    boolean hasClientMiniAppPay();
    /**
     * <pre>
     ** 客户端请求微信支付信息，用于微信小程序支付 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientMiniAppPay getClientMiniAppPay();
    /**
     * <pre>
     ** 客户端请求微信支付信息，用于微信小程序支付 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientMiniAppPayOrBuilder getClientMiniAppPayOrBuilder();

    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
     */
    boolean hasClientUnionAccount();
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientUnionAccount getClientUnionAccount();
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientUnionAccountOrBuilder getClientUnionAccountOrBuilder();

    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    boolean hasClientGetAnnounce();
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetAnnounce getClientGetAnnounce();
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder getClientGetAnnounceOrBuilder();

    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    boolean hasClientGetMail();
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMail getClientGetMail();
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder getClientGetMailOrBuilder();

    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    boolean hasClientGetMailReward();
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMailReward getClientGetMailReward();
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder getClientGetMailRewardOrBuilder();

    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    boolean hasClientDelMail();
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDelMail getClientDelMail();
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder getClientDelMailOrBuilder();

    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    boolean hasClientReadMail();
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientReadMail getClientReadMail();
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder getClientReadMailOrBuilder();

    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    boolean hasClientDel2R();
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDel2R getClientDel2R();
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder getClientDel2ROrBuilder();

    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    boolean hasClientQueryDailyTask();
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryDailyTask getClientQueryDailyTask();
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder getClientQueryDailyTaskOrBuilder();

    /**
     * <pre>
     ** 客户端请求抽取新手引导红包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    boolean hasClientGetNoviceReward();
    /**
     * <pre>
     ** 客户端请求抽取新手引导红包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetNoviceReward getClientGetNoviceReward();
    /**
     * <pre>
     ** 客户端请求抽取新手引导红包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder getClientGetNoviceRewardOrBuilder();

    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    boolean hasClientQueryNoviceTask();
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask getClientQueryNoviceTask();
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder getClientQueryNoviceTaskOrBuilder();

    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    boolean hasClientGetDTAward();
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetDTAward getClientGetDTAward();
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder getClientGetDTAwardOrBuilder();

    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    boolean hasClientGetReceiveAddr();
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr getClientGetReceiveAddr();
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder getClientGetReceiveAddrOrBuilder();

    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    boolean hasClientAlterReceiveAddr();
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr getClientAlterReceiveAddr();
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder getClientAlterReceiveAddrOrBuilder();

    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    boolean hasClientSnatchList();
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchList getClientSnatchList();
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder getClientSnatchListOrBuilder();

    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    boolean hasClientSnatchItemDetail();
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail getClientSnatchItemDetail();
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder getClientSnatchItemDetailOrBuilder();

    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    boolean hasClientSnatchBet();
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchBet getClientSnatchBet();
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder getClientSnatchBetOrBuilder();

    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    boolean hasClientSnatchAwardList();
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList getClientSnatchAwardList();
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder getClientSnatchAwardListOrBuilder();

    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    boolean hasClientOwnSnatchRecord();
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord getClientOwnSnatchRecord();
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder getClientOwnSnatchRecordOrBuilder();

    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    boolean hasClientSnatchItemHistory();
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory getClientSnatchItemHistory();
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder getClientSnatchItemHistoryOrBuilder();

    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    boolean hasClientSnatchHistoryDetail();
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail getClientSnatchHistoryDetail();
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder getClientSnatchHistoryDetailOrBuilder();

    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    boolean hasClientSnatchGetAward();
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward getClientSnatchGetAward();
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder getClientSnatchGetAwardOrBuilder();

    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    boolean hasClientEnterDG();
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientEnterDG getClientEnterDG();
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder getClientEnterDGOrBuilder();

    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    boolean hasClientDGLottery();
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientDGLottery getClientDGLottery();
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder getClientDGLotteryOrBuilder();

    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    boolean hasClientResetLottery();
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientResetLottery getClientResetLottery();
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder getClientResetLotteryOrBuilder();

    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    boolean hasClientExitDG();
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientExitDG getClientExitDG();
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder getClientExitDGOrBuilder();

    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    boolean hasClientOpenDG();
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOpenDG getClientOpenDG();
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder getClientOpenDGOrBuilder();

    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    boolean hasClientOpenDD();
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOpenDD getClientOpenDD();
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder getClientOpenDDOrBuilder();

    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    boolean hasClientDDLottery();
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientDDLottery getClientDDLottery();
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder getClientDDLotteryOrBuilder();

    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    boolean hasClientExitDD();
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientExitDD getClientExitDD();
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder getClientExitDDOrBuilder();

    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    boolean hasClientQueryProp();
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientQueryProp getClientQueryProp();
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder getClientQueryPropOrBuilder();

    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    boolean hasClientUseProp();
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientUseProp getClientUseProp();
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder getClientUsePropOrBuilder();

    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    boolean hasClientQueryPropCount();
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientQueryPropCount getClientQueryPropCount();
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder getClientQueryPropCountOrBuilder();

    /**
     * <pre>
     ** 客户端请求签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
     */
    boolean hasClientSignInfo();
    /**
     * <pre>
     ** 客户端请求签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientSignInfo getClientSignInfo();
    /**
     * <pre>
     ** 客户端请求签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientSignInfoOrBuilder getClientSignInfoOrBuilder();

    /**
     * <pre>
     ** 客户端请求签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
     */
    boolean hasClientSignAward();
    /**
     * <pre>
     ** 客户端请求签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientSignAward getClientSignAward();
    /**
     * <pre>
     ** 客户端请求签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientSignAwardOrBuilder getClientSignAwardOrBuilder();

    /**
     * <pre>
     ** 客户端请求签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
     */
    boolean hasClientSignState();
    /**
     * <pre>
     ** 客户端请求签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientSignState getClientSignState();
    /**
     * <pre>
     ** 客户端请求签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientSignStateOrBuilder getClientSignStateOrBuilder();

    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    boolean hasClientLTLottery();
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientLTLottery getClientLTLottery();
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder getClientLTLotteryOrBuilder();

    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    boolean hasClientGetTSReward();
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetTSReward getClientGetTSReward();
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder getClientGetTSRewardOrBuilder();

    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    boolean hasClientGetLuckInfo();
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetLuckInfo getClientGetLuckInfo();
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder getClientGetLuckInfoOrBuilder();

    /**
     * <pre>
     ** 获取新版VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
     */
    boolean hasClientGetVip();
    /**
     * <pre>
     ** 获取新版VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
     */
    com.kys.util.netty.proto.VipProto.ClientGetVip getClientGetVip();
    /**
     * <pre>
     ** 获取新版VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
     */
    com.kys.util.netty.proto.VipProto.ClientGetVipOrBuilder getClientGetVipOrBuilder();

    /**
     * <pre>
     ** 获取新版VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
     */
    boolean hasClientGetDayGift();
    /**
     * <pre>
     ** 获取新版VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
     */
    com.kys.util.netty.proto.VipProto.ClientGetDayGift getClientGetDayGift();
    /**
     * <pre>
     ** 获取新版VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
     */
    com.kys.util.netty.proto.VipProto.ClientGetDayGiftOrBuilder getClientGetDayGiftOrBuilder();

    /**
     * <pre>
     ** 客户端请求进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
     */
    boolean hasClientEnterSleeve();
    /**
     * <pre>
     ** 客户端请求进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientEnterSleeve getClientEnterSleeve();
    /**
     * <pre>
     ** 客户端请求进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientEnterSleeveOrBuilder getClientEnterSleeveOrBuilder();

    /**
     * <pre>
     ** 客户端套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
     */
    boolean hasClientSleeveSheep();
    /**
     * <pre>
     ** 客户端套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientSleeveSheep getClientSleeveSheep();
    /**
     * <pre>
     ** 客户端套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientSleeveSheepOrBuilder getClientSleeveSheepOrBuilder();

    /**
     * <pre>
     ** 客户端请求查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
     */
    boolean hasClientQueryPlayerCoin();
    /**
     * <pre>
     ** 客户端请求查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin getClientQueryPlayerCoin();
    /**
     * <pre>
     ** 客户端请求查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoinOrBuilder getClientQueryPlayerCoinOrBuilder();

    /**
     * <pre>
     ** 客户端请求退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
     */
    boolean hasClientExitSleeve();
    /**
     * <pre>
     ** 客户端请求退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientExitSleeve getClientExitSleeve();
    /**
     * <pre>
     ** 客户端请求退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientExitSleeveOrBuilder getClientExitSleeveOrBuilder();

    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
     */
    boolean hasClientEnterNewSleeve();
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve getClientEnterNewSleeve();
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeveOrBuilder getClientEnterNewSleeveOrBuilder();

    /**
     * <pre>
     ** 客户端请求开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
     */
    boolean hasClientNewSleeveSheep();
    /**
     * <pre>
     ** 客户端请求开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep getClientNewSleeveSheep();
    /**
     * <pre>
     ** 客户端请求开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheepOrBuilder getClientNewSleeveSheepOrBuilder();

    /**
     * <pre>
     ** 客户端请求(新套羊结果) 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
     */
    boolean hasClientNewSleeveResult();
    /**
     * <pre>
     ** 客户端请求(新套羊结果) 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult getClientNewSleeveResult();
    /**
     * <pre>
     ** 客户端请求(新套羊结果) 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientNewSleeveResultOrBuilder getClientNewSleeveResultOrBuilder();

    /**
     * <pre>
     ** 客户端退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
     */
    boolean hasClientExitNewSleeve();
    /**
     * <pre>
     ** 客户端退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve getClientExitNewSleeve();
    /**
     * <pre>
     ** 客户端退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
     */
    com.kys.util.netty.proto.LittleProto.ClientExitNewSleeveOrBuilder getClientExitNewSleeveOrBuilder();

    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
     */
    boolean hasClient2DoCatch();
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch getClient2DoCatch();
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Client_2_DoCatchOrBuilder getClient2DoCatchOrBuilder();

    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
     */
    boolean hasClient2PlayCards();
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards getClient2PlayCards();
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Client_2_PlayCardsOrBuilder getClient2PlayCardsOrBuilder();

    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
     */
    boolean hasClient2RecoverGame();
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame getClient2RecoverGame();
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGameOrBuilder getClient2RecoverGameOrBuilder();

    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
     */
    boolean hasClient2LeaveRoom();
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom getClient2LeaveRoom();
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoomOrBuilder getClient2LeaveRoomOrBuilder();

    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
     */
    boolean hasClientMineShare();
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientMineShare getClientMineShare();
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientMineShareOrBuilder getClientMineShareOrBuilder();

    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
     */
    boolean hasClientGetMSAward();
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientGetMSAward getClientGetMSAward();
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientGetMSAwardOrBuilder getClientGetMSAwardOrBuilder();

    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
     */
    boolean hasClientFriendShare();
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientFriendShare getClientFriendShare();
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientFriendShareOrBuilder getClientFriendShareOrBuilder();

    /**
     * <pre>
     ** 玩家获取好友的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
     */
    boolean hasClientGetFSAward();
    /**
     * <pre>
     ** 玩家获取好友的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientGetFSAward getClientGetFSAward();
    /**
     * <pre>
     ** 玩家获取好友的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientGetFSAwardOrBuilder getClientGetFSAwardOrBuilder();

    /**
     * <pre>
     ** 玩家获取邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
     */
    boolean hasClientGetShareTask();
    /**
     * <pre>
     ** 玩家获取邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientGetShareTask getClientGetShareTask();
    /**
     * <pre>
     ** 玩家获取邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientGetShareTaskOrBuilder getClientGetShareTaskOrBuilder();

    /**
     * <pre>
     ** 玩家获取邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
     */
    boolean hasClientGetShareTaskAward();
    /**
     * <pre>
     ** 玩家获取邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward getClientGetShareTaskAward();
    /**
     * <pre>
     ** 玩家获取邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
     */
    com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAwardOrBuilder getClientGetShareTaskAwardOrBuilder();

    /**
     * <pre>
     ** 客户端查询复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
     */
    boolean hasClientQueryReviveInfo();
    /**
     * <pre>
     ** 客户端查询复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo getClientQueryReviveInfo();
    /**
     * <pre>
     ** 客户端查询复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfoOrBuilder getClientQueryReviveInfoOrBuilder();

    /**
     * <pre>
     ** 客户端使用复活次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
     */
    boolean hasClientUseRevive();
    /**
     * <pre>
     ** 客户端使用复活次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ClientUseRevive getClientUseRevive();
    /**
     * <pre>
     ** 客户端使用复活次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ClientUseReviveOrBuilder getClientUseReviveOrBuilder();

    /**
     * <pre>
     ** 获取新手启航礼包信息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
     */
    boolean hasClientReviveFirstCharge();
    /**
     * <pre>
     ** 获取新手启航礼包信息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge getClientReviveFirstCharge();
    /**
     * <pre>
     ** 获取新手启航礼包信息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ClientReviveFirstChargeOrBuilder getClientReviveFirstChargeOrBuilder();

    /**
     * <pre>
     ** 获取每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
     */
    boolean hasClientReviveDayGift();
    /**
     * <pre>
     ** 获取每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift getClientReviveDayGift();
    /**
     * <pre>
     ** 获取每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ClientReviveDayGiftOrBuilder getClientReviveDayGiftOrBuilder();

    /**
     * <pre>
     ** 客户端获取大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
     */
    boolean hasClientGetRedTip();
    /**
     * <pre>
     ** 客户端获取大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRedTip getClientGetRedTip();
    /**
     * <pre>
     ** 客户端获取大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRedTipOrBuilder getClientGetRedTipOrBuilder();

    /**
     * <pre>
     ** 客户端请求赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
     */
    boolean hasClientGetMatchInfo();
    /**
     * <pre>
     ** 客户端请求赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo getClientGetMatchInfo();
    /**
     * <pre>
     ** 客户端请求赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientGetMatchInfoOrBuilder getClientGetMatchInfoOrBuilder();

    /**
     * <pre>
     ** 客户端请求赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
     */
    boolean hasClientGetMatchDetail();
    /**
     * <pre>
     ** 客户端请求赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail getClientGetMatchDetail();
    /**
     * <pre>
     ** 客户端请求赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientGetMatchDetailOrBuilder getClientGetMatchDetailOrBuilder();

    /**
     * <pre>
     ** 客户端请求赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
     */
    boolean hasClientGetMatchRecord();
    /**
     * <pre>
     ** 客户端请求赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord getClientGetMatchRecord();
    /**
     * <pre>
     ** 客户端请求赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientGetMatchRecordOrBuilder getClientGetMatchRecordOrBuilder();

    /**
     * <pre>
     ** 客户端请求赛事报名 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
     */
    boolean hasClientMatchApply();
    /**
     * <pre>
     ** 客户端请求赛事报名 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientMatchApply getClientMatchApply();
    /**
     * <pre>
     ** 客户端请求赛事报名 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientMatchApplyOrBuilder getClientMatchApplyOrBuilder();

    /**
     * <pre>
     ** 客户端请求取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
     */
    boolean hasClientMatchCancel();
    /**
     * <pre>
     ** 客户端请求取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientMatchCancel getClientMatchCancel();
    /**
     * <pre>
     ** 客户端请求取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientMatchCancelOrBuilder getClientMatchCancelOrBuilder();

    /**
     * <pre>
     ** 客户端获取自己记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
     */
    boolean hasClientOwnMatchRecord();
    /**
     * <pre>
     ** 客户端获取自己记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord getClientOwnMatchRecord();
    /**
     * <pre>
     ** 客户端获取自己记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecordOrBuilder getClientOwnMatchRecordOrBuilder();

    /**
     * <pre>
     ** 客户端请求赛事列表人数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
     */
    boolean hasClientApplyListChange();
    /**
     * <pre>
     ** 客户端请求赛事列表人数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientApplyListChange getClientApplyListChange();
    /**
     * <pre>
     ** 客户端请求赛事列表人数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientApplyListChangeOrBuilder getClientApplyListChangeOrBuilder();

    /**
     * <pre>
     ** 客户端获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
     */
    boolean hasClientMatchScore();
    /**
     * <pre>
     ** 客户端获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientMatchScore getClientMatchScore();
    /**
     * <pre>
     ** 客户端获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientMatchScoreOrBuilder getClientMatchScoreOrBuilder();

    /**
     * <pre>
     ** 客户端赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
     */
    boolean hasClientMatchConfig();
    /**
     * <pre>
     ** 客户端赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientMatchConfig getClientMatchConfig();
    /**
     * <pre>
     ** 客户端赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
     */
    com.kys.util.netty.proto.MatchProto.ClientMatchConfigOrBuilder getClientMatchConfigOrBuilder();

    /**
     * <pre>
     ** 客户端请求消除元素 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
     */
    boolean hasClientGetKillCell();
    /**
     * <pre>
     ** 客户端请求消除元素 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
     */
    com.kys.util.netty.proto.Triplekill.ClientGetKillCell getClientGetKillCell();
    /**
     * <pre>
     ** 客户端请求消除元素 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
     */
    com.kys.util.netty.proto.Triplekill.ClientGetKillCellOrBuilder getClientGetKillCellOrBuilder();

    /**
     * <pre>
     ** Client 请求进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
     */
    boolean hasClientEnterKillCell();
    /**
     * <pre>
     ** Client 请求进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
     */
    com.kys.util.netty.proto.Triplekill.ClientEnterKillCell getClientEnterKillCell();
    /**
     * <pre>
     ** Client 请求进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
     */
    com.kys.util.netty.proto.Triplekill.ClientEnterKillCellOrBuilder getClientEnterKillCellOrBuilder();

    /**
     * <pre>
     ** Client 请求退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
     */
    boolean hasClientQuitKillCell();
    /**
     * <pre>
     ** Client 请求退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
     */
    com.kys.util.netty.proto.Triplekill.ClientQuitKillCell getClientQuitKillCell();
    /**
     * <pre>
     ** Client 请求退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
     */
    com.kys.util.netty.proto.Triplekill.ClientQuitKillCellOrBuilder getClientQuitKillCellOrBuilder();
  }
  /**
   * <pre>
   ** 所有上行请求都是clientRequest，服务器根据methodId读取具体的message内容,当 
   * </pre>
   *
   * Protobuf type {@code com.kys.util.netty.proto.ClientRequest}
   */
  public  static final class ClientRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.kys.util.netty.proto.ClientRequest)
      ClientRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClientRequest.newBuilder() to construct.
    private ClientRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClientRequest() {
      userId_ = 0;
      methodId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClientRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      int mutable_bitField3_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              userId_ = input.readInt32();
              break;
            }
            case 16: {

              methodId_ = input.readInt32();
              break;
            }
            case 34: {
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder subBuilder = null;
              if (clientPlayerInfo_ != null) {
                subBuilder = clientPlayerInfo_.toBuilder();
              }
              clientPlayerInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ClientGetUserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientPlayerInfo_);
                clientPlayerInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder subBuilder = null;
              if (clientReturnHallHeartBeat_ != null) {
                subBuilder = clientReturnHallHeartBeat_.toBuilder();
              }
              clientReturnHallHeartBeat_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientReturnHallHeartBeat_);
                clientReturnHallHeartBeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder subBuilder = null;
              if (clientReturnGameHeartBeat_ != null) {
                subBuilder = clientReturnGameHeartBeat_.toBuilder();
              }
              clientReturnGameHeartBeat_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientReturnGameHeartBeat_);
                clientReturnGameHeartBeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder subBuilder = null;
              if (clientGetUserInfo_ != null) {
                subBuilder = clientGetUserInfo_.toBuilder();
              }
              clientGetUserInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ClientGetUserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetUserInfo_);
                clientGetUserInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder subBuilder = null;
              if (clientNewLogin_ != null) {
                subBuilder = clientNewLogin_.toBuilder();
              }
              clientNewLogin_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ClientNewLogin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientNewLogin_);
                clientNewLogin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 802: {
              com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder subBuilder = null;
              if (clientQuickJoin_ != null) {
                subBuilder = clientQuickJoin_.toBuilder();
              }
              clientQuickJoin_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientQuickJoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQuickJoin_);
                clientQuickJoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 810: {
              com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder subBuilder = null;
              if (clientEnterRoom_ != null) {
                subBuilder = clientEnterRoom_.toBuilder();
              }
              clientEnterRoom_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientEnterRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientEnterRoom_);
                clientEnterRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 818: {
              com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder subBuilder = null;
              if (clientDoCatch_ != null) {
                subBuilder = clientDoCatch_.toBuilder();
              }
              clientDoCatch_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientDoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDoCatch_);
                clientDoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 826: {
              com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder subBuilder = null;
              if (clientPlayCards_ != null) {
                subBuilder = clientPlayCards_.toBuilder();
              }
              clientPlayCards_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientPlayCards.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientPlayCards_);
                clientPlayCards_ = subBuilder.buildPartial();
              }

              break;
            }
            case 834: {
              com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder subBuilder = null;
              if (clientRecoverGame_ != null) {
                subBuilder = clientRecoverGame_.toBuilder();
              }
              clientRecoverGame_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientRecoverGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientRecoverGame_);
                clientRecoverGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 842: {
              com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder subBuilder = null;
              if (clientAutoPlay_ != null) {
                subBuilder = clientAutoPlay_.toBuilder();
              }
              clientAutoPlay_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientAutoPlay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientAutoPlay_);
                clientAutoPlay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 850: {
              com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder subBuilder = null;
              if (clientLeaveRoom_ != null) {
                subBuilder = clientLeaveRoom_.toBuilder();
              }
              clientLeaveRoom_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientLeaveRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientLeaveRoom_);
                clientLeaveRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 858: {
              com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder subBuilder = null;
              if (clientCancleJoin_ != null) {
                subBuilder = clientCancleJoin_.toBuilder();
              }
              clientCancleJoin_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientCancleJoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientCancleJoin_);
                clientCancleJoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 866: {
              com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder subBuilder = null;
              if (clientQueryIndex_ != null) {
                subBuilder = clientQueryIndex_.toBuilder();
              }
              clientQueryIndex_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientQueryIndex.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryIndex_);
                clientQueryIndex_ = subBuilder.buildPartial();
              }

              break;
            }
            case 874: {
              com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder subBuilder = null;
              if (clientRetryReturnGame_ != null) {
                subBuilder = clientRetryReturnGame_.toBuilder();
              }
              clientRetryReturnGame_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientRetryReturnGame_);
                clientRetryReturnGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1602: {
              com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder subBuilder = null;
              if (clientGetRankList_ != null) {
                subBuilder = clientGetRankList_.toBuilder();
              }
              clientGetRankList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetRankList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetRankList_);
                clientGetRankList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1642: {
              com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder subBuilder = null;
              if (clientGetRoomConfig_ != null) {
                subBuilder = clientGetRoomConfig_.toBuilder();
              }
              clientGetRoomConfig_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetRoomConfig_);
                clientGetRoomConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1650: {
              com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder subBuilder = null;
              if (clientRewardMessage_ != null) {
                subBuilder = clientRewardMessage_.toBuilder();
              }
              clientRewardMessage_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientRewardMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientRewardMessage_);
                clientRewardMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1674: {
              com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder subBuilder = null;
              if (clientGetMonthCardDiamond_ != null) {
                subBuilder = clientGetMonthCardDiamond_.toBuilder();
              }
              clientGetMonthCardDiamond_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMonthCardDiamond_);
                clientGetMonthCardDiamond_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1682: {
              com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder subBuilder = null;
              if (clientGetLotteryCount_ != null) {
                subBuilder = clientGetLotteryCount_.toBuilder();
              }
              clientGetLotteryCount_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetLotteryCount_);
                clientGetLotteryCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1690: {
              com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder subBuilder = null;
              if (clientGetRoomInfo_ != null) {
                subBuilder = clientGetRoomInfo_.toBuilder();
              }
              clientGetRoomInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetRoomInfo_);
                clientGetRoomInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1698: {
              com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder subBuilder = null;
              if (clientSendTelCode_ != null) {
                subBuilder = clientSendTelCode_.toBuilder();
              }
              clientSendTelCode_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientSendTelCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSendTelCode_);
                clientSendTelCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1706: {
              com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder subBuilder = null;
              if (clientVerifyTelCode_ != null) {
                subBuilder = clientVerifyTelCode_.toBuilder();
              }
              clientVerifyTelCode_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientVerifyTelCode_);
                clientVerifyTelCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1738: {
              com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder subBuilder = null;
              if (clientSharePackage_ != null) {
                subBuilder = clientSharePackage_.toBuilder();
              }
              clientSharePackage_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientSharePackage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSharePackage_);
                clientSharePackage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1746: {
              com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder subBuilder = null;
              if (clientGetAwardList_ != null) {
                subBuilder = clientGetAwardList_.toBuilder();
              }
              clientGetAwardList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetAwardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetAwardList_);
                clientGetAwardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1754: {
              com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder subBuilder = null;
              if (clientPlayerLogout_ != null) {
                subBuilder = clientPlayerLogout_.toBuilder();
              }
              clientPlayerLogout_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientPlayerLogout.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientPlayerLogout_);
                clientPlayerLogout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1762: {
              com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder subBuilder = null;
              if (clientCheckConnect_ != null) {
                subBuilder = clientCheckConnect_.toBuilder();
              }
              clientCheckConnect_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientCheckConnect.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientCheckConnect_);
                clientCheckConnect_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1770: {
              com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder subBuilder = null;
              if (clientGetPFList_ != null) {
                subBuilder = clientGetPFList_.toBuilder();
              }
              clientGetPFList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetPFList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetPFList_);
                clientGetPFList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1778: {
              com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder subBuilder = null;
              if (clientChoosePF_ != null) {
                subBuilder = clientChoosePF_.toBuilder();
              }
              clientChoosePF_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientChoosePF.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientChoosePF_);
                clientChoosePF_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1786: {
              com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder subBuilder = null;
              if (clientGetHistoryRank_ != null) {
                subBuilder = clientGetHistoryRank_.toBuilder();
              }
              clientGetHistoryRank_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetHistoryRank_);
                clientGetHistoryRank_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1794: {
              com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder subBuilder = null;
              if (clientH5Reward_ != null) {
                subBuilder = clientH5Reward_.toBuilder();
              }
              clientH5Reward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientH5Reward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientH5Reward_);
                clientH5Reward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1802: {
              com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder subBuilder = null;
              if (clientNewDrawWinCup_ != null) {
                subBuilder = clientNewDrawWinCup_.toBuilder();
              }
              clientNewDrawWinCup_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientNewDrawWinCup_);
                clientNewDrawWinCup_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1810: {
              com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder subBuilder = null;
              if (clientGetNewHallInfo_ != null) {
                subBuilder = clientGetNewHallInfo_.toBuilder();
              }
              clientGetNewHallInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetNewHallInfo_);
                clientGetNewHallInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1834: {
              com.kys.util.netty.proto.HallProto.ClientLuckWall.Builder subBuilder = null;
              if (clientLuckWall_ != null) {
                subBuilder = clientLuckWall_.toBuilder();
              }
              clientLuckWall_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientLuckWall.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientLuckWall_);
                clientLuckWall_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1842: {
              com.kys.util.netty.proto.HallProto.ClientCdkeyAward.Builder subBuilder = null;
              if (clientCdkeyAward_ != null) {
                subBuilder = clientCdkeyAward_.toBuilder();
              }
              clientCdkeyAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientCdkeyAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientCdkeyAward_);
                clientCdkeyAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2402: {
              com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.Builder subBuilder = null;
              if (clientGetStoreInfo_ != null) {
                subBuilder = clientGetStoreInfo_.toBuilder();
              }
              clientGetStoreInfo_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetStoreInfo_);
                clientGetStoreInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2410: {
              com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder subBuilder = null;
              if (clientConvertGoods_ != null) {
                subBuilder = clientConvertGoods_.toBuilder();
              }
              clientConvertGoods_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientConvertGoods.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientConvertGoods_);
                clientConvertGoods_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2418: {
              com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder subBuilder = null;
              if (clientWXPayResultQuery_ != null) {
                subBuilder = clientWXPayResultQuery_.toBuilder();
              }
              clientWXPayResultQuery_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientWXPayResultQuery_);
                clientWXPayResultQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2426: {
              com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder subBuilder = null;
              if (clientBuyOrderGoods_ != null) {
                subBuilder = clientBuyOrderGoods_.toBuilder();
              }
              clientBuyOrderGoods_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientBuyOrderGoods_);
                clientBuyOrderGoods_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2434: {
              com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder subBuilder = null;
              if (clientGetFirstCharge_ != null) {
                subBuilder = clientGetFirstCharge_.toBuilder();
              }
              clientGetFirstCharge_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetFirstCharge_);
                clientGetFirstCharge_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2442: {
              com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder subBuilder = null;
              if (clientGetDailyGift_ != null) {
                subBuilder = clientGetDailyGift_.toBuilder();
              }
              clientGetDailyGift_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetDailyGift_);
                clientGetDailyGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2450: {
              com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder subBuilder = null;
              if (clientGetMonthCard_ != null) {
                subBuilder = clientGetMonthCard_.toBuilder();
              }
              clientGetMonthCard_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMonthCard_);
                clientGetMonthCard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2458: {
              com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder subBuilder = null;
              if (clientGetResurgenceGift_ != null) {
                subBuilder = clientGetResurgenceGift_.toBuilder();
              }
              clientGetResurgenceGift_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetResurgenceGift_);
                clientGetResurgenceGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2466: {
              com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.Builder subBuilder = null;
              if (clientGetConvertMessage_ != null) {
                subBuilder = clientGetConvertMessage_.toBuilder();
              }
              clientGetConvertMessage_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetConvertMessage_);
                clientGetConvertMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2474: {
              com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.Builder subBuilder = null;
              if (clientNewBuyOrder_ != null) {
                subBuilder = clientNewBuyOrder_.toBuilder();
              }
              clientNewBuyOrder_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientNewBuyOrder_);
                clientNewBuyOrder_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2482: {
              com.kys.util.netty.proto.StoreProto.ClientNewConvert.Builder subBuilder = null;
              if (clientNewConvert_ != null) {
                subBuilder = clientNewConvert_.toBuilder();
              }
              clientNewConvert_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientNewConvert.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientNewConvert_);
                clientNewConvert_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2490: {
              com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.Builder subBuilder = null;
              if (clientAlipayAccount_ != null) {
                subBuilder = clientAlipayAccount_.toBuilder();
              }
              clientAlipayAccount_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientAlipayAccount_);
                clientAlipayAccount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2498: {
              com.kys.util.netty.proto.StoreProto.ClientPayOptions.Builder subBuilder = null;
              if (clientPayOptions_ != null) {
                subBuilder = clientPayOptions_.toBuilder();
              }
              clientPayOptions_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientPayOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientPayOptions_);
                clientPayOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2506: {
              com.kys.util.netty.proto.StoreProto.ClientIdVerify.Builder subBuilder = null;
              if (clientIdVerify_ != null) {
                subBuilder = clientIdVerify_.toBuilder();
              }
              clientIdVerify_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientIdVerify.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientIdVerify_);
                clientIdVerify_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2514: {
              com.kys.util.netty.proto.StoreProto.ClientVerifyAward.Builder subBuilder = null;
              if (clientVerifyAward_ != null) {
                subBuilder = clientVerifyAward_.toBuilder();
              }
              clientVerifyAward_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientVerifyAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientVerifyAward_);
                clientVerifyAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2522: {
              com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.Builder subBuilder = null;
              if (clientMiniAppPay_ != null) {
                subBuilder = clientMiniAppPay_.toBuilder();
              }
              clientMiniAppPay_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientMiniAppPay_);
                clientMiniAppPay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2530: {
              com.kys.util.netty.proto.StoreProto.ClientUnionAccount.Builder subBuilder = null;
              if (clientUnionAccount_ != null) {
                subBuilder = clientUnionAccount_.toBuilder();
              }
              clientUnionAccount_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientUnionAccount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientUnionAccount_);
                clientUnionAccount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4002: {
              com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder subBuilder = null;
              if (clientGetAnnounce_ != null) {
                subBuilder = clientGetAnnounce_.toBuilder();
              }
              clientGetAnnounce_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetAnnounce.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetAnnounce_);
                clientGetAnnounce_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4802: {
              com.kys.util.netty.proto.HallProto.ClientGetMail.Builder subBuilder = null;
              if (clientGetMail_ != null) {
                subBuilder = clientGetMail_.toBuilder();
              }
              clientGetMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMail_);
                clientGetMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4810: {
              com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder subBuilder = null;
              if (clientGetMailReward_ != null) {
                subBuilder = clientGetMailReward_.toBuilder();
              }
              clientGetMailReward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetMailReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMailReward_);
                clientGetMailReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4818: {
              com.kys.util.netty.proto.HallProto.ClientDelMail.Builder subBuilder = null;
              if (clientDelMail_ != null) {
                subBuilder = clientDelMail_.toBuilder();
              }
              clientDelMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientDelMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDelMail_);
                clientDelMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4826: {
              com.kys.util.netty.proto.HallProto.ClientReadMail.Builder subBuilder = null;
              if (clientReadMail_ != null) {
                subBuilder = clientReadMail_.toBuilder();
              }
              clientReadMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientReadMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientReadMail_);
                clientReadMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4834: {
              com.kys.util.netty.proto.HallProto.ClientDel2R.Builder subBuilder = null;
              if (clientDel2R_ != null) {
                subBuilder = clientDel2R_.toBuilder();
              }
              clientDel2R_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientDel2R.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDel2R_);
                clientDel2R_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5602: {
              com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder subBuilder = null;
              if (clientQueryDailyTask_ != null) {
                subBuilder = clientQueryDailyTask_.toBuilder();
              }
              clientQueryDailyTask_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryDailyTask_);
                clientQueryDailyTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5618: {
              com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder subBuilder = null;
              if (clientGetNoviceReward_ != null) {
                subBuilder = clientGetNoviceReward_.toBuilder();
              }
              clientGetNoviceReward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetNoviceReward_);
                clientGetNoviceReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5626: {
              com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder subBuilder = null;
              if (clientQueryNoviceTask_ != null) {
                subBuilder = clientQueryNoviceTask_.toBuilder();
              }
              clientQueryNoviceTask_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryNoviceTask_);
                clientQueryNoviceTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5634: {
              com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder subBuilder = null;
              if (clientGetDTAward_ != null) {
                subBuilder = clientGetDTAward_.toBuilder();
              }
              clientGetDTAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetDTAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetDTAward_);
                clientGetDTAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6402: {
              com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder subBuilder = null;
              if (clientGetReceiveAddr_ != null) {
                subBuilder = clientGetReceiveAddr_.toBuilder();
              }
              clientGetReceiveAddr_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetReceiveAddr_);
                clientGetReceiveAddr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6410: {
              com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder subBuilder = null;
              if (clientAlterReceiveAddr_ != null) {
                subBuilder = clientAlterReceiveAddr_.toBuilder();
              }
              clientAlterReceiveAddr_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientAlterReceiveAddr_);
                clientAlterReceiveAddr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6418: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder subBuilder = null;
              if (clientSnatchList_ != null) {
                subBuilder = clientSnatchList_.toBuilder();
              }
              clientSnatchList_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchList_);
                clientSnatchList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6426: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder subBuilder = null;
              if (clientSnatchItemDetail_ != null) {
                subBuilder = clientSnatchItemDetail_.toBuilder();
              }
              clientSnatchItemDetail_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchItemDetail_);
                clientSnatchItemDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6434: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder subBuilder = null;
              if (clientSnatchBet_ != null) {
                subBuilder = clientSnatchBet_.toBuilder();
              }
              clientSnatchBet_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchBet_);
                clientSnatchBet_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6442: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder subBuilder = null;
              if (clientSnatchAwardList_ != null) {
                subBuilder = clientSnatchAwardList_.toBuilder();
              }
              clientSnatchAwardList_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchAwardList_);
                clientSnatchAwardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6450: {
              com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder subBuilder = null;
              if (clientOwnSnatchRecord_ != null) {
                subBuilder = clientOwnSnatchRecord_.toBuilder();
              }
              clientOwnSnatchRecord_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientOwnSnatchRecord_);
                clientOwnSnatchRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6458: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder subBuilder = null;
              if (clientSnatchItemHistory_ != null) {
                subBuilder = clientSnatchItemHistory_.toBuilder();
              }
              clientSnatchItemHistory_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchItemHistory_);
                clientSnatchItemHistory_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6466: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder subBuilder = null;
              if (clientSnatchHistoryDetail_ != null) {
                subBuilder = clientSnatchHistoryDetail_.toBuilder();
              }
              clientSnatchHistoryDetail_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchHistoryDetail_);
                clientSnatchHistoryDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6474: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder subBuilder = null;
              if (clientSnatchGetAward_ != null) {
                subBuilder = clientSnatchGetAward_.toBuilder();
              }
              clientSnatchGetAward_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchGetAward_);
                clientSnatchGetAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7202: {
              com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder subBuilder = null;
              if (clientEnterDG_ != null) {
                subBuilder = clientEnterDG_.toBuilder();
              }
              clientEnterDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientEnterDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientEnterDG_);
                clientEnterDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7210: {
              com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder subBuilder = null;
              if (clientDGLottery_ != null) {
                subBuilder = clientDGLottery_.toBuilder();
              }
              clientDGLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientDGLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDGLottery_);
                clientDGLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7218: {
              com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder subBuilder = null;
              if (clientResetLottery_ != null) {
                subBuilder = clientResetLottery_.toBuilder();
              }
              clientResetLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientResetLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientResetLottery_);
                clientResetLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7226: {
              com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder subBuilder = null;
              if (clientExitDG_ != null) {
                subBuilder = clientExitDG_.toBuilder();
              }
              clientExitDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientExitDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientExitDG_);
                clientExitDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7234: {
              com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder subBuilder = null;
              if (clientOpenDG_ != null) {
                subBuilder = clientOpenDG_.toBuilder();
              }
              clientOpenDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientOpenDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientOpenDG_);
                clientOpenDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7242: {
              com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder subBuilder = null;
              if (clientOpenDD_ != null) {
                subBuilder = clientOpenDD_.toBuilder();
              }
              clientOpenDD_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientOpenDD.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientOpenDD_);
                clientOpenDD_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7250: {
              com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder subBuilder = null;
              if (clientDDLottery_ != null) {
                subBuilder = clientDDLottery_.toBuilder();
              }
              clientDDLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientDDLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDDLottery_);
                clientDDLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7258: {
              com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder subBuilder = null;
              if (clientExitDD_ != null) {
                subBuilder = clientExitDD_.toBuilder();
              }
              clientExitDD_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientExitDD.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientExitDD_);
                clientExitDD_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8010: {
              com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder subBuilder = null;
              if (clientQueryProp_ != null) {
                subBuilder = clientQueryProp_.toBuilder();
              }
              clientQueryProp_ = input.readMessage(com.kys.util.netty.proto.PropProto.ClientQueryProp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryProp_);
                clientQueryProp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8018: {
              com.kys.util.netty.proto.PropProto.ClientUseProp.Builder subBuilder = null;
              if (clientUseProp_ != null) {
                subBuilder = clientUseProp_.toBuilder();
              }
              clientUseProp_ = input.readMessage(com.kys.util.netty.proto.PropProto.ClientUseProp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientUseProp_);
                clientUseProp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8026: {
              com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder subBuilder = null;
              if (clientQueryPropCount_ != null) {
                subBuilder = clientQueryPropCount_.toBuilder();
              }
              clientQueryPropCount_ = input.readMessage(com.kys.util.netty.proto.PropProto.ClientQueryPropCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryPropCount_);
                clientQueryPropCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8810: {
              com.kys.util.netty.proto.SignProto.ClientSignInfo.Builder subBuilder = null;
              if (clientSignInfo_ != null) {
                subBuilder = clientSignInfo_.toBuilder();
              }
              clientSignInfo_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientSignInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSignInfo_);
                clientSignInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8818: {
              com.kys.util.netty.proto.SignProto.ClientSignAward.Builder subBuilder = null;
              if (clientSignAward_ != null) {
                subBuilder = clientSignAward_.toBuilder();
              }
              clientSignAward_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientSignAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSignAward_);
                clientSignAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8826: {
              com.kys.util.netty.proto.SignProto.ClientSignState.Builder subBuilder = null;
              if (clientSignState_ != null) {
                subBuilder = clientSignState_.toBuilder();
              }
              clientSignState_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientSignState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSignState_);
                clientSignState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8834: {
              com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder subBuilder = null;
              if (clientLTLottery_ != null) {
                subBuilder = clientLTLottery_.toBuilder();
              }
              clientLTLottery_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientLTLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientLTLottery_);
                clientLTLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8842: {
              com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder subBuilder = null;
              if (clientGetTSReward_ != null) {
                subBuilder = clientGetTSReward_.toBuilder();
              }
              clientGetTSReward_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientGetTSReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetTSReward_);
                clientGetTSReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8850: {
              com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder subBuilder = null;
              if (clientGetLuckInfo_ != null) {
                subBuilder = clientGetLuckInfo_.toBuilder();
              }
              clientGetLuckInfo_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetLuckInfo_);
                clientGetLuckInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 9626: {
              com.kys.util.netty.proto.VipProto.ClientGetVip.Builder subBuilder = null;
              if (clientGetVip_ != null) {
                subBuilder = clientGetVip_.toBuilder();
              }
              clientGetVip_ = input.readMessage(com.kys.util.netty.proto.VipProto.ClientGetVip.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetVip_);
                clientGetVip_ = subBuilder.buildPartial();
              }

              break;
            }
            case 9634: {
              com.kys.util.netty.proto.VipProto.ClientGetDayGift.Builder subBuilder = null;
              if (clientGetDayGift_ != null) {
                subBuilder = clientGetDayGift_.toBuilder();
              }
              clientGetDayGift_ = input.readMessage(com.kys.util.netty.proto.VipProto.ClientGetDayGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetDayGift_);
                clientGetDayGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10402: {
              com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.Builder subBuilder = null;
              if (clientEnterSleeve_ != null) {
                subBuilder = clientEnterSleeve_.toBuilder();
              }
              clientEnterSleeve_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientEnterSleeve_);
                clientEnterSleeve_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10410: {
              com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.Builder subBuilder = null;
              if (clientSleeveSheep_ != null) {
                subBuilder = clientSleeveSheep_.toBuilder();
              }
              clientSleeveSheep_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSleeveSheep_);
                clientSleeveSheep_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10418: {
              com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.Builder subBuilder = null;
              if (clientQueryPlayerCoin_ != null) {
                subBuilder = clientQueryPlayerCoin_.toBuilder();
              }
              clientQueryPlayerCoin_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryPlayerCoin_);
                clientQueryPlayerCoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10426: {
              com.kys.util.netty.proto.LittleProto.ClientExitSleeve.Builder subBuilder = null;
              if (clientExitSleeve_ != null) {
                subBuilder = clientExitSleeve_.toBuilder();
              }
              clientExitSleeve_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ClientExitSleeve.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientExitSleeve_);
                clientExitSleeve_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10434: {
              com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.Builder subBuilder = null;
              if (clientEnterNewSleeve_ != null) {
                subBuilder = clientEnterNewSleeve_.toBuilder();
              }
              clientEnterNewSleeve_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientEnterNewSleeve_);
                clientEnterNewSleeve_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10442: {
              com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.Builder subBuilder = null;
              if (clientNewSleeveSheep_ != null) {
                subBuilder = clientNewSleeveSheep_.toBuilder();
              }
              clientNewSleeveSheep_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientNewSleeveSheep_);
                clientNewSleeveSheep_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10450: {
              com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.Builder subBuilder = null;
              if (clientNewSleeveResult_ != null) {
                subBuilder = clientNewSleeveResult_.toBuilder();
              }
              clientNewSleeveResult_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientNewSleeveResult_);
                clientNewSleeveResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10458: {
              com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.Builder subBuilder = null;
              if (clientExitNewSleeve_ != null) {
                subBuilder = clientExitNewSleeve_.toBuilder();
              }
              clientExitNewSleeve_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientExitNewSleeve_);
                clientExitNewSleeve_ = subBuilder.buildPartial();
              }

              break;
            }
            case 11210: {
              com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.Builder subBuilder = null;
              if (client2DoCatch_ != null) {
                subBuilder = client2DoCatch_.toBuilder();
              }
              client2DoCatch_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(client2DoCatch_);
                client2DoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 11218: {
              com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.Builder subBuilder = null;
              if (client2PlayCards_ != null) {
                subBuilder = client2PlayCards_.toBuilder();
              }
              client2PlayCards_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(client2PlayCards_);
                client2PlayCards_ = subBuilder.buildPartial();
              }

              break;
            }
            case 11226: {
              com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.Builder subBuilder = null;
              if (client2RecoverGame_ != null) {
                subBuilder = client2RecoverGame_.toBuilder();
              }
              client2RecoverGame_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(client2RecoverGame_);
                client2RecoverGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 11234: {
              com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.Builder subBuilder = null;
              if (client2LeaveRoom_ != null) {
                subBuilder = client2LeaveRoom_.toBuilder();
              }
              client2LeaveRoom_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(client2LeaveRoom_);
                client2LeaveRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12010: {
              com.kys.util.netty.proto.ShareProto.ClientMineShare.Builder subBuilder = null;
              if (clientMineShare_ != null) {
                subBuilder = clientMineShare_.toBuilder();
              }
              clientMineShare_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ClientMineShare.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientMineShare_);
                clientMineShare_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12018: {
              com.kys.util.netty.proto.ShareProto.ClientGetMSAward.Builder subBuilder = null;
              if (clientGetMSAward_ != null) {
                subBuilder = clientGetMSAward_.toBuilder();
              }
              clientGetMSAward_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ClientGetMSAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMSAward_);
                clientGetMSAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12026: {
              com.kys.util.netty.proto.ShareProto.ClientFriendShare.Builder subBuilder = null;
              if (clientFriendShare_ != null) {
                subBuilder = clientFriendShare_.toBuilder();
              }
              clientFriendShare_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ClientFriendShare.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientFriendShare_);
                clientFriendShare_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12034: {
              com.kys.util.netty.proto.ShareProto.ClientGetFSAward.Builder subBuilder = null;
              if (clientGetFSAward_ != null) {
                subBuilder = clientGetFSAward_.toBuilder();
              }
              clientGetFSAward_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ClientGetFSAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetFSAward_);
                clientGetFSAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12042: {
              com.kys.util.netty.proto.ShareProto.ClientGetShareTask.Builder subBuilder = null;
              if (clientGetShareTask_ != null) {
                subBuilder = clientGetShareTask_.toBuilder();
              }
              clientGetShareTask_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ClientGetShareTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetShareTask_);
                clientGetShareTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12050: {
              com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.Builder subBuilder = null;
              if (clientGetShareTaskAward_ != null) {
                subBuilder = clientGetShareTaskAward_.toBuilder();
              }
              clientGetShareTaskAward_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetShareTaskAward_);
                clientGetShareTaskAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12810: {
              com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.Builder subBuilder = null;
              if (clientQueryReviveInfo_ != null) {
                subBuilder = clientQueryReviveInfo_.toBuilder();
              }
              clientQueryReviveInfo_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryReviveInfo_);
                clientQueryReviveInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12818: {
              com.kys.util.netty.proto.ReviveProto.ClientUseRevive.Builder subBuilder = null;
              if (clientUseRevive_ != null) {
                subBuilder = clientUseRevive_.toBuilder();
              }
              clientUseRevive_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.ClientUseRevive.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientUseRevive_);
                clientUseRevive_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12826: {
              com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.Builder subBuilder = null;
              if (clientReviveFirstCharge_ != null) {
                subBuilder = clientReviveFirstCharge_.toBuilder();
              }
              clientReviveFirstCharge_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientReviveFirstCharge_);
                clientReviveFirstCharge_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12834: {
              com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.Builder subBuilder = null;
              if (clientReviveDayGift_ != null) {
                subBuilder = clientReviveDayGift_.toBuilder();
              }
              clientReviveDayGift_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientReviveDayGift_);
                clientReviveDayGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 13610: {
              com.kys.util.netty.proto.HallProto.ClientGetRedTip.Builder subBuilder = null;
              if (clientGetRedTip_ != null) {
                subBuilder = clientGetRedTip_.toBuilder();
              }
              clientGetRedTip_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetRedTip.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetRedTip_);
                clientGetRedTip_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14410: {
              com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.Builder subBuilder = null;
              if (clientGetMatchInfo_ != null) {
                subBuilder = clientGetMatchInfo_.toBuilder();
              }
              clientGetMatchInfo_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMatchInfo_);
                clientGetMatchInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14418: {
              com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.Builder subBuilder = null;
              if (clientGetMatchDetail_ != null) {
                subBuilder = clientGetMatchDetail_.toBuilder();
              }
              clientGetMatchDetail_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMatchDetail_);
                clientGetMatchDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14426: {
              com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.Builder subBuilder = null;
              if (clientGetMatchRecord_ != null) {
                subBuilder = clientGetMatchRecord_.toBuilder();
              }
              clientGetMatchRecord_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMatchRecord_);
                clientGetMatchRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14434: {
              com.kys.util.netty.proto.MatchProto.ClientMatchApply.Builder subBuilder = null;
              if (clientMatchApply_ != null) {
                subBuilder = clientMatchApply_.toBuilder();
              }
              clientMatchApply_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientMatchApply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientMatchApply_);
                clientMatchApply_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14442: {
              com.kys.util.netty.proto.MatchProto.ClientMatchCancel.Builder subBuilder = null;
              if (clientMatchCancel_ != null) {
                subBuilder = clientMatchCancel_.toBuilder();
              }
              clientMatchCancel_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientMatchCancel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientMatchCancel_);
                clientMatchCancel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14450: {
              com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.Builder subBuilder = null;
              if (clientOwnMatchRecord_ != null) {
                subBuilder = clientOwnMatchRecord_.toBuilder();
              }
              clientOwnMatchRecord_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientOwnMatchRecord_);
                clientOwnMatchRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14458: {
              com.kys.util.netty.proto.MatchProto.ClientApplyListChange.Builder subBuilder = null;
              if (clientApplyListChange_ != null) {
                subBuilder = clientApplyListChange_.toBuilder();
              }
              clientApplyListChange_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientApplyListChange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientApplyListChange_);
                clientApplyListChange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14466: {
              com.kys.util.netty.proto.MatchProto.ClientMatchScore.Builder subBuilder = null;
              if (clientMatchScore_ != null) {
                subBuilder = clientMatchScore_.toBuilder();
              }
              clientMatchScore_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientMatchScore.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientMatchScore_);
                clientMatchScore_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14474: {
              com.kys.util.netty.proto.MatchProto.ClientMatchConfig.Builder subBuilder = null;
              if (clientMatchConfig_ != null) {
                subBuilder = clientMatchConfig_.toBuilder();
              }
              clientMatchConfig_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ClientMatchConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientMatchConfig_);
                clientMatchConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 15210: {
              com.kys.util.netty.proto.Triplekill.ClientGetKillCell.Builder subBuilder = null;
              if (clientGetKillCell_ != null) {
                subBuilder = clientGetKillCell_.toBuilder();
              }
              clientGetKillCell_ = input.readMessage(com.kys.util.netty.proto.Triplekill.ClientGetKillCell.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetKillCell_);
                clientGetKillCell_ = subBuilder.buildPartial();
              }

              break;
            }
            case 15218: {
              com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.Builder subBuilder = null;
              if (clientEnterKillCell_ != null) {
                subBuilder = clientEnterKillCell_.toBuilder();
              }
              clientEnterKillCell_ = input.readMessage(com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientEnterKillCell_);
                clientEnterKillCell_ = subBuilder.buildPartial();
              }

              break;
            }
            case 15226: {
              com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.Builder subBuilder = null;
              if (clientQuitKillCell_ != null) {
                subBuilder = clientQuitKillCell_.toBuilder();
              }
              clientQuitKillCell_ = input.readMessage(com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQuitKillCell_);
                clientQuitKillCell_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kys.util.netty.proto.ProtoMsg.ClientRequest.class, com.kys.util.netty.proto.ProtoMsg.ClientRequest.Builder.class);
    }

    public static final int USERID_FIELD_NUMBER = 1;
    private int userId_;
    /**
     * <pre>
     ** 用户名 
     * </pre>
     *
     * <code>int32 userId = 1;</code>
     */
    public int getUserId() {
      return userId_;
    }

    public static final int METHODID_FIELD_NUMBER = 2;
    private int methodId_;
    /**
     * <pre>
     ** 请求方法名 
     * </pre>
     *
     * <code>int32 methodId = 2;</code>
     */
    public int getMethodId() {
      return methodId_;
    }

    public static final int CLIENTPLAYERINFO_FIELD_NUMBER = 4;
    private com.kys.util.netty.proto.UserProto.ClientGetUserInfo clientPlayerInfo_;
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    public boolean hasClientPlayerInfo() {
      return clientPlayerInfo_ != null;
    }
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientPlayerInfo() {
      return clientPlayerInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientPlayerInfo_;
    }
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientPlayerInfoOrBuilder() {
      return getClientPlayerInfo();
    }

    public static final int CLIENTRETURNHALLHEARTBEAT_FIELD_NUMBER = 5;
    private com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat clientReturnHallHeartBeat_;
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    public boolean hasClientReturnHallHeartBeat() {
      return clientReturnHallHeartBeat_ != null;
    }
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat getClientReturnHallHeartBeat() {
      return clientReturnHallHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.getDefaultInstance() : clientReturnHallHeartBeat_;
    }
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder getClientReturnHallHeartBeatOrBuilder() {
      return getClientReturnHallHeartBeat();
    }

    public static final int CLIENTRETURNGAMEHEARTBEAT_FIELD_NUMBER = 6;
    private com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat clientReturnGameHeartBeat_;
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    public boolean hasClientReturnGameHeartBeat() {
      return clientReturnGameHeartBeat_ != null;
    }
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat getClientReturnGameHeartBeat() {
      return clientReturnGameHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.getDefaultInstance() : clientReturnGameHeartBeat_;
    }
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder getClientReturnGameHeartBeatOrBuilder() {
      return getClientReturnGameHeartBeat();
    }

    public static final int CLIENTGETUSERINFO_FIELD_NUMBER = 7;
    private com.kys.util.netty.proto.UserProto.ClientGetUserInfo clientGetUserInfo_;
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    public boolean hasClientGetUserInfo() {
      return clientGetUserInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientGetUserInfo() {
      return clientGetUserInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientGetUserInfo_;
    }
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientGetUserInfoOrBuilder() {
      return getClientGetUserInfo();
    }

    public static final int CLIENTNEWLOGIN_FIELD_NUMBER = 8;
    private com.kys.util.netty.proto.LoginProto.ClientNewLogin clientNewLogin_;
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    public boolean hasClientNewLogin() {
      return clientNewLogin_ != null;
    }
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientNewLogin getClientNewLogin() {
      return clientNewLogin_ == null ? com.kys.util.netty.proto.LoginProto.ClientNewLogin.getDefaultInstance() : clientNewLogin_;
    }
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder getClientNewLoginOrBuilder() {
      return getClientNewLogin();
    }

    public static final int CLIENTQUICKJOIN_FIELD_NUMBER = 100;
    private com.kys.util.netty.proto.GameProto.ClientQuickJoin clientQuickJoin_;
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    public boolean hasClientQuickJoin() {
      return clientQuickJoin_ != null;
    }
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientQuickJoin getClientQuickJoin() {
      return clientQuickJoin_ == null ? com.kys.util.netty.proto.GameProto.ClientQuickJoin.getDefaultInstance() : clientQuickJoin_;
    }
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder getClientQuickJoinOrBuilder() {
      return getClientQuickJoin();
    }

    public static final int CLIENTENTERROOM_FIELD_NUMBER = 101;
    private com.kys.util.netty.proto.GameProto.ClientEnterRoom clientEnterRoom_;
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    public boolean hasClientEnterRoom() {
      return clientEnterRoom_ != null;
    }
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientEnterRoom getClientEnterRoom() {
      return clientEnterRoom_ == null ? com.kys.util.netty.proto.GameProto.ClientEnterRoom.getDefaultInstance() : clientEnterRoom_;
    }
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder getClientEnterRoomOrBuilder() {
      return getClientEnterRoom();
    }

    public static final int CLIENTDOCATCH_FIELD_NUMBER = 102;
    private com.kys.util.netty.proto.GameProto.ClientDoCatch clientDoCatch_;
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    public boolean hasClientDoCatch() {
      return clientDoCatch_ != null;
    }
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientDoCatch getClientDoCatch() {
      return clientDoCatch_ == null ? com.kys.util.netty.proto.GameProto.ClientDoCatch.getDefaultInstance() : clientDoCatch_;
    }
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder getClientDoCatchOrBuilder() {
      return getClientDoCatch();
    }

    public static final int CLIENTPLAYCARDS_FIELD_NUMBER = 103;
    private com.kys.util.netty.proto.GameProto.ClientPlayCards clientPlayCards_;
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    public boolean hasClientPlayCards() {
      return clientPlayCards_ != null;
    }
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientPlayCards getClientPlayCards() {
      return clientPlayCards_ == null ? com.kys.util.netty.proto.GameProto.ClientPlayCards.getDefaultInstance() : clientPlayCards_;
    }
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder getClientPlayCardsOrBuilder() {
      return getClientPlayCards();
    }

    public static final int CLIENTRECOVERGAME_FIELD_NUMBER = 104;
    private com.kys.util.netty.proto.GameProto.ClientRecoverGame clientRecoverGame_;
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    public boolean hasClientRecoverGame() {
      return clientRecoverGame_ != null;
    }
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientRecoverGame getClientRecoverGame() {
      return clientRecoverGame_ == null ? com.kys.util.netty.proto.GameProto.ClientRecoverGame.getDefaultInstance() : clientRecoverGame_;
    }
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder getClientRecoverGameOrBuilder() {
      return getClientRecoverGame();
    }

    public static final int CLIENTAUTOPLAY_FIELD_NUMBER = 105;
    private com.kys.util.netty.proto.GameProto.ClientAutoPlay clientAutoPlay_;
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    public boolean hasClientAutoPlay() {
      return clientAutoPlay_ != null;
    }
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientAutoPlay getClientAutoPlay() {
      return clientAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.ClientAutoPlay.getDefaultInstance() : clientAutoPlay_;
    }
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder getClientAutoPlayOrBuilder() {
      return getClientAutoPlay();
    }

    public static final int CLIENTLEAVEROOM_FIELD_NUMBER = 106;
    private com.kys.util.netty.proto.GameProto.ClientLeaveRoom clientLeaveRoom_;
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    public boolean hasClientLeaveRoom() {
      return clientLeaveRoom_ != null;
    }
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientLeaveRoom getClientLeaveRoom() {
      return clientLeaveRoom_ == null ? com.kys.util.netty.proto.GameProto.ClientLeaveRoom.getDefaultInstance() : clientLeaveRoom_;
    }
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder getClientLeaveRoomOrBuilder() {
      return getClientLeaveRoom();
    }

    public static final int CLIENTCANCLEJOIN_FIELD_NUMBER = 107;
    private com.kys.util.netty.proto.GameProto.ClientCancleJoin clientCancleJoin_;
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    public boolean hasClientCancleJoin() {
      return clientCancleJoin_ != null;
    }
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientCancleJoin getClientCancleJoin() {
      return clientCancleJoin_ == null ? com.kys.util.netty.proto.GameProto.ClientCancleJoin.getDefaultInstance() : clientCancleJoin_;
    }
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder getClientCancleJoinOrBuilder() {
      return getClientCancleJoin();
    }

    public static final int CLIENTQUERYINDEX_FIELD_NUMBER = 108;
    private com.kys.util.netty.proto.GameProto.ClientQueryIndex clientQueryIndex_;
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    public boolean hasClientQueryIndex() {
      return clientQueryIndex_ != null;
    }
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientQueryIndex getClientQueryIndex() {
      return clientQueryIndex_ == null ? com.kys.util.netty.proto.GameProto.ClientQueryIndex.getDefaultInstance() : clientQueryIndex_;
    }
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder getClientQueryIndexOrBuilder() {
      return getClientQueryIndex();
    }

    public static final int CLIENTRETRYRETURNGAME_FIELD_NUMBER = 109;
    private com.kys.util.netty.proto.GameProto.ClientRetryReturnGame clientRetryReturnGame_;
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    public boolean hasClientRetryReturnGame() {
      return clientRetryReturnGame_ != null;
    }
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientRetryReturnGame getClientRetryReturnGame() {
      return clientRetryReturnGame_ == null ? com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.getDefaultInstance() : clientRetryReturnGame_;
    }
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder getClientRetryReturnGameOrBuilder() {
      return getClientRetryReturnGame();
    }

    public static final int CLIENTGETRANKLIST_FIELD_NUMBER = 200;
    private com.kys.util.netty.proto.HallProto.ClientGetRankList clientGetRankList_;
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    public boolean hasClientGetRankList() {
      return clientGetRankList_ != null;
    }
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRankList getClientGetRankList() {
      return clientGetRankList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRankList.getDefaultInstance() : clientGetRankList_;
    }
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder getClientGetRankListOrBuilder() {
      return getClientGetRankList();
    }

    public static final int CLIENTGETROOMCONFIG_FIELD_NUMBER = 205;
    private com.kys.util.netty.proto.HallProto.ClientGetRoomConfig clientGetRoomConfig_;
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    public boolean hasClientGetRoomConfig() {
      return clientGetRoomConfig_ != null;
    }
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomConfig getClientGetRoomConfig() {
      return clientGetRoomConfig_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.getDefaultInstance() : clientGetRoomConfig_;
    }
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder getClientGetRoomConfigOrBuilder() {
      return getClientGetRoomConfig();
    }

    public static final int CLIENTREWARDMESSAGE_FIELD_NUMBER = 206;
    private com.kys.util.netty.proto.HallProto.ClientRewardMessage clientRewardMessage_;
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    public boolean hasClientRewardMessage() {
      return clientRewardMessage_ != null;
    }
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientRewardMessage getClientRewardMessage() {
      return clientRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.ClientRewardMessage.getDefaultInstance() : clientRewardMessage_;
    }
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder getClientRewardMessageOrBuilder() {
      return getClientRewardMessage();
    }

    public static final int CLIENTGETMONTHCARDDIAMOND_FIELD_NUMBER = 209;
    private com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond clientGetMonthCardDiamond_;
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    public boolean hasClientGetMonthCardDiamond() {
      return clientGetMonthCardDiamond_ != null;
    }
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond getClientGetMonthCardDiamond() {
      return clientGetMonthCardDiamond_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.getDefaultInstance() : clientGetMonthCardDiamond_;
    }
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder getClientGetMonthCardDiamondOrBuilder() {
      return getClientGetMonthCardDiamond();
    }

    public static final int CLIENTGETLOTTERYCOUNT_FIELD_NUMBER = 210;
    private com.kys.util.netty.proto.HallProto.ClientGetLotteryCount clientGetLotteryCount_;
    /**
     * <pre>
     ** 客户端获取玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    public boolean hasClientGetLotteryCount() {
      return clientGetLotteryCount_ != null;
    }
    /**
     * <pre>
     ** 客户端获取玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetLotteryCount getClientGetLotteryCount() {
      return clientGetLotteryCount_ == null ? com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.getDefaultInstance() : clientGetLotteryCount_;
    }
    /**
     * <pre>
     ** 客户端获取玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder getClientGetLotteryCountOrBuilder() {
      return getClientGetLotteryCount();
    }

    public static final int CLIENTGETROOMINFO_FIELD_NUMBER = 211;
    private com.kys.util.netty.proto.HallProto.ClientGetRoomInfo clientGetRoomInfo_;
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    public boolean hasClientGetRoomInfo() {
      return clientGetRoomInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomInfo getClientGetRoomInfo() {
      return clientGetRoomInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.getDefaultInstance() : clientGetRoomInfo_;
    }
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder getClientGetRoomInfoOrBuilder() {
      return getClientGetRoomInfo();
    }

    public static final int CLIENTSENDTELCODE_FIELD_NUMBER = 212;
    private com.kys.util.netty.proto.HallProto.ClientSendTelCode clientSendTelCode_;
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    public boolean hasClientSendTelCode() {
      return clientSendTelCode_ != null;
    }
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSendTelCode getClientSendTelCode() {
      return clientSendTelCode_ == null ? com.kys.util.netty.proto.HallProto.ClientSendTelCode.getDefaultInstance() : clientSendTelCode_;
    }
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder getClientSendTelCodeOrBuilder() {
      return getClientSendTelCode();
    }

    public static final int CLIENTVERIFYTELCODE_FIELD_NUMBER = 213;
    private com.kys.util.netty.proto.HallProto.ClientVerifyTelCode clientVerifyTelCode_;
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    public boolean hasClientVerifyTelCode() {
      return clientVerifyTelCode_ != null;
    }
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientVerifyTelCode getClientVerifyTelCode() {
      return clientVerifyTelCode_ == null ? com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.getDefaultInstance() : clientVerifyTelCode_;
    }
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder getClientVerifyTelCodeOrBuilder() {
      return getClientVerifyTelCode();
    }

    public static final int CLIENTSHAREPACKAGE_FIELD_NUMBER = 217;
    private com.kys.util.netty.proto.HallProto.ClientSharePackage clientSharePackage_;
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    public boolean hasClientSharePackage() {
      return clientSharePackage_ != null;
    }
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSharePackage getClientSharePackage() {
      return clientSharePackage_ == null ? com.kys.util.netty.proto.HallProto.ClientSharePackage.getDefaultInstance() : clientSharePackage_;
    }
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder getClientSharePackageOrBuilder() {
      return getClientSharePackage();
    }

    public static final int CLIENTGETAWARDLIST_FIELD_NUMBER = 218;
    private com.kys.util.netty.proto.HallProto.ClientGetAwardList clientGetAwardList_;
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    public boolean hasClientGetAwardList() {
      return clientGetAwardList_ != null;
    }
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetAwardList getClientGetAwardList() {
      return clientGetAwardList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetAwardList.getDefaultInstance() : clientGetAwardList_;
    }
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder getClientGetAwardListOrBuilder() {
      return getClientGetAwardList();
    }

    public static final int CLIENTPLAYERLOGOUT_FIELD_NUMBER = 219;
    private com.kys.util.netty.proto.HallProto.ClientPlayerLogout clientPlayerLogout_;
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    public boolean hasClientPlayerLogout() {
      return clientPlayerLogout_ != null;
    }
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientPlayerLogout getClientPlayerLogout() {
      return clientPlayerLogout_ == null ? com.kys.util.netty.proto.HallProto.ClientPlayerLogout.getDefaultInstance() : clientPlayerLogout_;
    }
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder getClientPlayerLogoutOrBuilder() {
      return getClientPlayerLogout();
    }

    public static final int CLIENTCHECKCONNECT_FIELD_NUMBER = 220;
    private com.kys.util.netty.proto.HallProto.ClientCheckConnect clientCheckConnect_;
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    public boolean hasClientCheckConnect() {
      return clientCheckConnect_ != null;
    }
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientCheckConnect getClientCheckConnect() {
      return clientCheckConnect_ == null ? com.kys.util.netty.proto.HallProto.ClientCheckConnect.getDefaultInstance() : clientCheckConnect_;
    }
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder getClientCheckConnectOrBuilder() {
      return getClientCheckConnect();
    }

    public static final int CLIENTGETPFLIST_FIELD_NUMBER = 221;
    private com.kys.util.netty.proto.HallProto.ClientGetPFList clientGetPFList_;
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    public boolean hasClientGetPFList() {
      return clientGetPFList_ != null;
    }
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetPFList getClientGetPFList() {
      return clientGetPFList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetPFList.getDefaultInstance() : clientGetPFList_;
    }
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder getClientGetPFListOrBuilder() {
      return getClientGetPFList();
    }

    public static final int CLIENTCHOOSEPF_FIELD_NUMBER = 222;
    private com.kys.util.netty.proto.HallProto.ClientChoosePF clientChoosePF_;
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    public boolean hasClientChoosePF() {
      return clientChoosePF_ != null;
    }
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientChoosePF getClientChoosePF() {
      return clientChoosePF_ == null ? com.kys.util.netty.proto.HallProto.ClientChoosePF.getDefaultInstance() : clientChoosePF_;
    }
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder getClientChoosePFOrBuilder() {
      return getClientChoosePF();
    }

    public static final int CLIENTGETHISTORYRANK_FIELD_NUMBER = 223;
    private com.kys.util.netty.proto.HallProto.ClientGetHistoryRank clientGetHistoryRank_;
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    public boolean hasClientGetHistoryRank() {
      return clientGetHistoryRank_ != null;
    }
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetHistoryRank getClientGetHistoryRank() {
      return clientGetHistoryRank_ == null ? com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.getDefaultInstance() : clientGetHistoryRank_;
    }
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder getClientGetHistoryRankOrBuilder() {
      return getClientGetHistoryRank();
    }

    public static final int CLIENTH5REWARD_FIELD_NUMBER = 224;
    private com.kys.util.netty.proto.HallProto.ClientH5Reward clientH5Reward_;
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    public boolean hasClientH5Reward() {
      return clientH5Reward_ != null;
    }
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientH5Reward getClientH5Reward() {
      return clientH5Reward_ == null ? com.kys.util.netty.proto.HallProto.ClientH5Reward.getDefaultInstance() : clientH5Reward_;
    }
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder getClientH5RewardOrBuilder() {
      return getClientH5Reward();
    }

    public static final int CLIENTNEWDRAWWINCUP_FIELD_NUMBER = 225;
    private com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup clientNewDrawWinCup_;
    /**
     * <pre>
     ** 客户端新抽红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    public boolean hasClientNewDrawWinCup() {
      return clientNewDrawWinCup_ != null;
    }
    /**
     * <pre>
     ** 客户端新抽红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup getClientNewDrawWinCup() {
      return clientNewDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.getDefaultInstance() : clientNewDrawWinCup_;
    }
    /**
     * <pre>
     ** 客户端新抽红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder getClientNewDrawWinCupOrBuilder() {
      return getClientNewDrawWinCup();
    }

    public static final int CLIENTGETNEWHALLINFO_FIELD_NUMBER = 226;
    private com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo clientGetNewHallInfo_;
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    public boolean hasClientGetNewHallInfo() {
      return clientGetNewHallInfo_ != null;
    }
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo getClientGetNewHallInfo() {
      return clientGetNewHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.getDefaultInstance() : clientGetNewHallInfo_;
    }
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder getClientGetNewHallInfoOrBuilder() {
      return getClientGetNewHallInfo();
    }

    public static final int CLIENTLUCKWALL_FIELD_NUMBER = 229;
    private com.kys.util.netty.proto.HallProto.ClientLuckWall clientLuckWall_;
    /**
     * <pre>
     ** 玩家获取好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
     */
    public boolean hasClientLuckWall() {
      return clientLuckWall_ != null;
    }
    /**
     * <pre>
     ** 玩家获取好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientLuckWall getClientLuckWall() {
      return clientLuckWall_ == null ? com.kys.util.netty.proto.HallProto.ClientLuckWall.getDefaultInstance() : clientLuckWall_;
    }
    /**
     * <pre>
     ** 玩家获取好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientLuckWallOrBuilder getClientLuckWallOrBuilder() {
      return getClientLuckWall();
    }

    public static final int CLIENTCDKEYAWARD_FIELD_NUMBER = 230;
    private com.kys.util.netty.proto.HallProto.ClientCdkeyAward clientCdkeyAward_;
    /**
     * <pre>
     ** 客户端请求cdkey奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
     */
    public boolean hasClientCdkeyAward() {
      return clientCdkeyAward_ != null;
    }
    /**
     * <pre>
     ** 客户端请求cdkey奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientCdkeyAward getClientCdkeyAward() {
      return clientCdkeyAward_ == null ? com.kys.util.netty.proto.HallProto.ClientCdkeyAward.getDefaultInstance() : clientCdkeyAward_;
    }
    /**
     * <pre>
     ** 客户端请求cdkey奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientCdkeyAwardOrBuilder getClientCdkeyAwardOrBuilder() {
      return getClientCdkeyAward();
    }

    public static final int CLIENTGETSTOREINFO_FIELD_NUMBER = 300;
    private com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo clientGetStoreInfo_;
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
     */
    public boolean hasClientGetStoreInfo() {
      return clientGetStoreInfo_ != null;
    }
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo getClientGetStoreInfo() {
      return clientGetStoreInfo_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.getDefaultInstance() : clientGetStoreInfo_;
    }
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetStoreInfoOrBuilder getClientGetStoreInfoOrBuilder() {
      return getClientGetStoreInfo();
    }

    public static final int CLIENTCONVERTGOODS_FIELD_NUMBER = 301;
    private com.kys.util.netty.proto.StoreProto.ClientConvertGoods clientConvertGoods_;
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    public boolean hasClientConvertGoods() {
      return clientConvertGoods_ != null;
    }
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientConvertGoods getClientConvertGoods() {
      return clientConvertGoods_ == null ? com.kys.util.netty.proto.StoreProto.ClientConvertGoods.getDefaultInstance() : clientConvertGoods_;
    }
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder getClientConvertGoodsOrBuilder() {
      return getClientConvertGoods();
    }

    public static final int CLIENTWXPAYRESULTQUERY_FIELD_NUMBER = 302;
    private com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery clientWXPayResultQuery_;
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    public boolean hasClientWXPayResultQuery() {
      return clientWXPayResultQuery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery getClientWXPayResultQuery() {
      return clientWXPayResultQuery_ == null ? com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.getDefaultInstance() : clientWXPayResultQuery_;
    }
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder getClientWXPayResultQueryOrBuilder() {
      return getClientWXPayResultQuery();
    }

    public static final int CLIENTBUYORDERGOODS_FIELD_NUMBER = 303;
    private com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods clientBuyOrderGoods_;
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    public boolean hasClientBuyOrderGoods() {
      return clientBuyOrderGoods_ != null;
    }
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods getClientBuyOrderGoods() {
      return clientBuyOrderGoods_ == null ? com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.getDefaultInstance() : clientBuyOrderGoods_;
    }
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder getClientBuyOrderGoodsOrBuilder() {
      return getClientBuyOrderGoods();
    }

    public static final int CLIENTGETFIRSTCHARGE_FIELD_NUMBER = 304;
    private com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge clientGetFirstCharge_;
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    public boolean hasClientGetFirstCharge() {
      return clientGetFirstCharge_ != null;
    }
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge getClientGetFirstCharge() {
      return clientGetFirstCharge_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.getDefaultInstance() : clientGetFirstCharge_;
    }
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder getClientGetFirstChargeOrBuilder() {
      return getClientGetFirstCharge();
    }

    public static final int CLIENTGETDAILYGIFT_FIELD_NUMBER = 305;
    private com.kys.util.netty.proto.StoreProto.ClientGetDailyGift clientGetDailyGift_;
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    public boolean hasClientGetDailyGift() {
      return clientGetDailyGift_ != null;
    }
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetDailyGift getClientGetDailyGift() {
      return clientGetDailyGift_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.getDefaultInstance() : clientGetDailyGift_;
    }
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder getClientGetDailyGiftOrBuilder() {
      return getClientGetDailyGift();
    }

    public static final int CLIENTGETMONTHCARD_FIELD_NUMBER = 306;
    private com.kys.util.netty.proto.StoreProto.ClientGetMonthCard clientGetMonthCard_;
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    public boolean hasClientGetMonthCard() {
      return clientGetMonthCard_ != null;
    }
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetMonthCard getClientGetMonthCard() {
      return clientGetMonthCard_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.getDefaultInstance() : clientGetMonthCard_;
    }
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder getClientGetMonthCardOrBuilder() {
      return getClientGetMonthCard();
    }

    public static final int CLIENTGETRESURGENCEGIFT_FIELD_NUMBER = 307;
    private com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift clientGetResurgenceGift_;
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    public boolean hasClientGetResurgenceGift() {
      return clientGetResurgenceGift_ != null;
    }
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift getClientGetResurgenceGift() {
      return clientGetResurgenceGift_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.getDefaultInstance() : clientGetResurgenceGift_;
    }
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder getClientGetResurgenceGiftOrBuilder() {
      return getClientGetResurgenceGift();
    }

    public static final int CLIENTGETCONVERTMESSAGE_FIELD_NUMBER = 308;
    private com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage clientGetConvertMessage_;
    /**
     * <pre>
     ** 客户端请求兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
     */
    public boolean hasClientGetConvertMessage() {
      return clientGetConvertMessage_ != null;
    }
    /**
     * <pre>
     ** 客户端请求兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage getClientGetConvertMessage() {
      return clientGetConvertMessage_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.getDefaultInstance() : clientGetConvertMessage_;
    }
    /**
     * <pre>
     ** 客户端请求兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetConvertMessageOrBuilder getClientGetConvertMessageOrBuilder() {
      return getClientGetConvertMessage();
    }

    public static final int CLIENTNEWBUYORDER_FIELD_NUMBER = 309;
    private com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder clientNewBuyOrder_;
    /**
     * <pre>
     ** 客户端新下单购买接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
     */
    public boolean hasClientNewBuyOrder() {
      return clientNewBuyOrder_ != null;
    }
    /**
     * <pre>
     ** 客户端新下单购买接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder getClientNewBuyOrder() {
      return clientNewBuyOrder_ == null ? com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.getDefaultInstance() : clientNewBuyOrder_;
    }
    /**
     * <pre>
     ** 客户端新下单购买接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientNewBuyOrderOrBuilder getClientNewBuyOrderOrBuilder() {
      return getClientNewBuyOrder();
    }

    public static final int CLIENTNEWCONVERT_FIELD_NUMBER = 310;
    private com.kys.util.netty.proto.StoreProto.ClientNewConvert clientNewConvert_;
    /**
     * <pre>
     ** 客户端新兑换红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
     */
    public boolean hasClientNewConvert() {
      return clientNewConvert_ != null;
    }
    /**
     * <pre>
     ** 客户端新兑换红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientNewConvert getClientNewConvert() {
      return clientNewConvert_ == null ? com.kys.util.netty.proto.StoreProto.ClientNewConvert.getDefaultInstance() : clientNewConvert_;
    }
    /**
     * <pre>
     ** 客户端新兑换红包请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientNewConvertOrBuilder getClientNewConvertOrBuilder() {
      return getClientNewConvert();
    }

    public static final int CLIENTALIPAYACCOUNT_FIELD_NUMBER = 311;
    private com.kys.util.netty.proto.StoreProto.ClientAlipayAccount clientAlipayAccount_;
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
     */
    public boolean hasClientAlipayAccount() {
      return clientAlipayAccount_ != null;
    }
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientAlipayAccount getClientAlipayAccount() {
      return clientAlipayAccount_ == null ? com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.getDefaultInstance() : clientAlipayAccount_;
    }
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientAlipayAccountOrBuilder getClientAlipayAccountOrBuilder() {
      return getClientAlipayAccount();
    }

    public static final int CLIENTPAYOPTIONS_FIELD_NUMBER = 312;
    private com.kys.util.netty.proto.StoreProto.ClientPayOptions clientPayOptions_;
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
     */
    public boolean hasClientPayOptions() {
      return clientPayOptions_ != null;
    }
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientPayOptions getClientPayOptions() {
      return clientPayOptions_ == null ? com.kys.util.netty.proto.StoreProto.ClientPayOptions.getDefaultInstance() : clientPayOptions_;
    }
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientPayOptionsOrBuilder getClientPayOptionsOrBuilder() {
      return getClientPayOptions();
    }

    public static final int CLIENTIDVERIFY_FIELD_NUMBER = 313;
    private com.kys.util.netty.proto.StoreProto.ClientIdVerify clientIdVerify_;
    /**
     * <pre>
     ** 实名认证 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
     */
    public boolean hasClientIdVerify() {
      return clientIdVerify_ != null;
    }
    /**
     * <pre>
     ** 实名认证 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientIdVerify getClientIdVerify() {
      return clientIdVerify_ == null ? com.kys.util.netty.proto.StoreProto.ClientIdVerify.getDefaultInstance() : clientIdVerify_;
    }
    /**
     * <pre>
     ** 实名认证 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientIdVerifyOrBuilder getClientIdVerifyOrBuilder() {
      return getClientIdVerify();
    }

    public static final int CLIENTVERIFYAWARD_FIELD_NUMBER = 314;
    private com.kys.util.netty.proto.StoreProto.ClientVerifyAward clientVerifyAward_;
    /**
     * <pre>
     ** 获取实名认证奖励的值 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
     */
    public boolean hasClientVerifyAward() {
      return clientVerifyAward_ != null;
    }
    /**
     * <pre>
     ** 获取实名认证奖励的值 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientVerifyAward getClientVerifyAward() {
      return clientVerifyAward_ == null ? com.kys.util.netty.proto.StoreProto.ClientVerifyAward.getDefaultInstance() : clientVerifyAward_;
    }
    /**
     * <pre>
     ** 获取实名认证奖励的值 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientVerifyAwardOrBuilder getClientVerifyAwardOrBuilder() {
      return getClientVerifyAward();
    }

    public static final int CLIENTMINIAPPPAY_FIELD_NUMBER = 315;
    private com.kys.util.netty.proto.StoreProto.ClientMiniAppPay clientMiniAppPay_;
    /**
     * <pre>
     ** 客户端请求微信支付信息，用于微信小程序支付 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
     */
    public boolean hasClientMiniAppPay() {
      return clientMiniAppPay_ != null;
    }
    /**
     * <pre>
     ** 客户端请求微信支付信息，用于微信小程序支付 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientMiniAppPay getClientMiniAppPay() {
      return clientMiniAppPay_ == null ? com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.getDefaultInstance() : clientMiniAppPay_;
    }
    /**
     * <pre>
     ** 客户端请求微信支付信息，用于微信小程序支付 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientMiniAppPayOrBuilder getClientMiniAppPayOrBuilder() {
      return getClientMiniAppPay();
    }

    public static final int CLIENTUNIONACCOUNT_FIELD_NUMBER = 316;
    private com.kys.util.netty.proto.StoreProto.ClientUnionAccount clientUnionAccount_;
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
     */
    public boolean hasClientUnionAccount() {
      return clientUnionAccount_ != null;
    }
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientUnionAccount getClientUnionAccount() {
      return clientUnionAccount_ == null ? com.kys.util.netty.proto.StoreProto.ClientUnionAccount.getDefaultInstance() : clientUnionAccount_;
    }
    /**
     * <pre>
     ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientUnionAccountOrBuilder getClientUnionAccountOrBuilder() {
      return getClientUnionAccount();
    }

    public static final int CLIENTGETANNOUNCE_FIELD_NUMBER = 500;
    private com.kys.util.netty.proto.HallProto.ClientGetAnnounce clientGetAnnounce_;
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    public boolean hasClientGetAnnounce() {
      return clientGetAnnounce_ != null;
    }
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetAnnounce getClientGetAnnounce() {
      return clientGetAnnounce_ == null ? com.kys.util.netty.proto.HallProto.ClientGetAnnounce.getDefaultInstance() : clientGetAnnounce_;
    }
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder getClientGetAnnounceOrBuilder() {
      return getClientGetAnnounce();
    }

    public static final int CLIENTGETMAIL_FIELD_NUMBER = 600;
    private com.kys.util.netty.proto.HallProto.ClientGetMail clientGetMail_;
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    public boolean hasClientGetMail() {
      return clientGetMail_ != null;
    }
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMail getClientGetMail() {
      return clientGetMail_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMail.getDefaultInstance() : clientGetMail_;
    }
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder getClientGetMailOrBuilder() {
      return getClientGetMail();
    }

    public static final int CLIENTGETMAILREWARD_FIELD_NUMBER = 601;
    private com.kys.util.netty.proto.HallProto.ClientGetMailReward clientGetMailReward_;
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    public boolean hasClientGetMailReward() {
      return clientGetMailReward_ != null;
    }
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMailReward getClientGetMailReward() {
      return clientGetMailReward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMailReward.getDefaultInstance() : clientGetMailReward_;
    }
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder getClientGetMailRewardOrBuilder() {
      return getClientGetMailReward();
    }

    public static final int CLIENTDELMAIL_FIELD_NUMBER = 602;
    private com.kys.util.netty.proto.HallProto.ClientDelMail clientDelMail_;
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    public boolean hasClientDelMail() {
      return clientDelMail_ != null;
    }
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDelMail getClientDelMail() {
      return clientDelMail_ == null ? com.kys.util.netty.proto.HallProto.ClientDelMail.getDefaultInstance() : clientDelMail_;
    }
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder getClientDelMailOrBuilder() {
      return getClientDelMail();
    }

    public static final int CLIENTREADMAIL_FIELD_NUMBER = 603;
    private com.kys.util.netty.proto.HallProto.ClientReadMail clientReadMail_;
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    public boolean hasClientReadMail() {
      return clientReadMail_ != null;
    }
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientReadMail getClientReadMail() {
      return clientReadMail_ == null ? com.kys.util.netty.proto.HallProto.ClientReadMail.getDefaultInstance() : clientReadMail_;
    }
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder getClientReadMailOrBuilder() {
      return getClientReadMail();
    }

    public static final int CLIENTDEL2R_FIELD_NUMBER = 604;
    private com.kys.util.netty.proto.HallProto.ClientDel2R clientDel2R_;
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    public boolean hasClientDel2R() {
      return clientDel2R_ != null;
    }
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDel2R getClientDel2R() {
      return clientDel2R_ == null ? com.kys.util.netty.proto.HallProto.ClientDel2R.getDefaultInstance() : clientDel2R_;
    }
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder getClientDel2ROrBuilder() {
      return getClientDel2R();
    }

    public static final int CLIENTQUERYDAILYTASK_FIELD_NUMBER = 700;
    private com.kys.util.netty.proto.HallProto.ClientQueryDailyTask clientQueryDailyTask_;
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    public boolean hasClientQueryDailyTask() {
      return clientQueryDailyTask_ != null;
    }
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryDailyTask getClientQueryDailyTask() {
      return clientQueryDailyTask_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.getDefaultInstance() : clientQueryDailyTask_;
    }
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder getClientQueryDailyTaskOrBuilder() {
      return getClientQueryDailyTask();
    }

    public static final int CLIENTGETNOVICEREWARD_FIELD_NUMBER = 702;
    private com.kys.util.netty.proto.HallProto.ClientGetNoviceReward clientGetNoviceReward_;
    /**
     * <pre>
     ** 客户端请求抽取新手引导红包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    public boolean hasClientGetNoviceReward() {
      return clientGetNoviceReward_ != null;
    }
    /**
     * <pre>
     ** 客户端请求抽取新手引导红包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetNoviceReward getClientGetNoviceReward() {
      return clientGetNoviceReward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.getDefaultInstance() : clientGetNoviceReward_;
    }
    /**
     * <pre>
     ** 客户端请求抽取新手引导红包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder getClientGetNoviceRewardOrBuilder() {
      return getClientGetNoviceReward();
    }

    public static final int CLIENTQUERYNOVICETASK_FIELD_NUMBER = 703;
    private com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask clientQueryNoviceTask_;
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    public boolean hasClientQueryNoviceTask() {
      return clientQueryNoviceTask_ != null;
    }
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask getClientQueryNoviceTask() {
      return clientQueryNoviceTask_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.getDefaultInstance() : clientQueryNoviceTask_;
    }
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder getClientQueryNoviceTaskOrBuilder() {
      return getClientQueryNoviceTask();
    }

    public static final int CLIENTGETDTAWARD_FIELD_NUMBER = 704;
    private com.kys.util.netty.proto.HallProto.ClientGetDTAward clientGetDTAward_;
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    public boolean hasClientGetDTAward() {
      return clientGetDTAward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetDTAward getClientGetDTAward() {
      return clientGetDTAward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetDTAward.getDefaultInstance() : clientGetDTAward_;
    }
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder getClientGetDTAwardOrBuilder() {
      return getClientGetDTAward();
    }

    public static final int CLIENTGETRECEIVEADDR_FIELD_NUMBER = 800;
    private com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr clientGetReceiveAddr_;
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    public boolean hasClientGetReceiveAddr() {
      return clientGetReceiveAddr_ != null;
    }
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr getClientGetReceiveAddr() {
      return clientGetReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.getDefaultInstance() : clientGetReceiveAddr_;
    }
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder getClientGetReceiveAddrOrBuilder() {
      return getClientGetReceiveAddr();
    }

    public static final int CLIENTALTERRECEIVEADDR_FIELD_NUMBER = 801;
    private com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr clientAlterReceiveAddr_;
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    public boolean hasClientAlterReceiveAddr() {
      return clientAlterReceiveAddr_ != null;
    }
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr getClientAlterReceiveAddr() {
      return clientAlterReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.getDefaultInstance() : clientAlterReceiveAddr_;
    }
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder getClientAlterReceiveAddrOrBuilder() {
      return getClientAlterReceiveAddr();
    }

    public static final int CLIENTSNATCHLIST_FIELD_NUMBER = 802;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchList clientSnatchList_;
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    public boolean hasClientSnatchList() {
      return clientSnatchList_ != null;
    }
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchList getClientSnatchList() {
      return clientSnatchList_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchList.getDefaultInstance() : clientSnatchList_;
    }
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder getClientSnatchListOrBuilder() {
      return getClientSnatchList();
    }

    public static final int CLIENTSNATCHITEMDETAIL_FIELD_NUMBER = 803;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail clientSnatchItemDetail_;
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    public boolean hasClientSnatchItemDetail() {
      return clientSnatchItemDetail_ != null;
    }
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail getClientSnatchItemDetail() {
      return clientSnatchItemDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.getDefaultInstance() : clientSnatchItemDetail_;
    }
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder getClientSnatchItemDetailOrBuilder() {
      return getClientSnatchItemDetail();
    }

    public static final int CLIENTSNATCHBET_FIELD_NUMBER = 804;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchBet clientSnatchBet_;
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    public boolean hasClientSnatchBet() {
      return clientSnatchBet_ != null;
    }
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchBet getClientSnatchBet() {
      return clientSnatchBet_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.getDefaultInstance() : clientSnatchBet_;
    }
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder getClientSnatchBetOrBuilder() {
      return getClientSnatchBet();
    }

    public static final int CLIENTSNATCHAWARDLIST_FIELD_NUMBER = 805;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList clientSnatchAwardList_;
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    public boolean hasClientSnatchAwardList() {
      return clientSnatchAwardList_ != null;
    }
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList getClientSnatchAwardList() {
      return clientSnatchAwardList_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.getDefaultInstance() : clientSnatchAwardList_;
    }
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder getClientSnatchAwardListOrBuilder() {
      return getClientSnatchAwardList();
    }

    public static final int CLIENTOWNSNATCHRECORD_FIELD_NUMBER = 806;
    private com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord clientOwnSnatchRecord_;
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    public boolean hasClientOwnSnatchRecord() {
      return clientOwnSnatchRecord_ != null;
    }
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord getClientOwnSnatchRecord() {
      return clientOwnSnatchRecord_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.getDefaultInstance() : clientOwnSnatchRecord_;
    }
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder getClientOwnSnatchRecordOrBuilder() {
      return getClientOwnSnatchRecord();
    }

    public static final int CLIENTSNATCHITEMHISTORY_FIELD_NUMBER = 807;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory clientSnatchItemHistory_;
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    public boolean hasClientSnatchItemHistory() {
      return clientSnatchItemHistory_ != null;
    }
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory getClientSnatchItemHistory() {
      return clientSnatchItemHistory_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.getDefaultInstance() : clientSnatchItemHistory_;
    }
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder getClientSnatchItemHistoryOrBuilder() {
      return getClientSnatchItemHistory();
    }

    public static final int CLIENTSNATCHHISTORYDETAIL_FIELD_NUMBER = 808;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail clientSnatchHistoryDetail_;
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    public boolean hasClientSnatchHistoryDetail() {
      return clientSnatchHistoryDetail_ != null;
    }
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail getClientSnatchHistoryDetail() {
      return clientSnatchHistoryDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.getDefaultInstance() : clientSnatchHistoryDetail_;
    }
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder getClientSnatchHistoryDetailOrBuilder() {
      return getClientSnatchHistoryDetail();
    }

    public static final int CLIENTSNATCHGETAWARD_FIELD_NUMBER = 809;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward clientSnatchGetAward_;
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    public boolean hasClientSnatchGetAward() {
      return clientSnatchGetAward_ != null;
    }
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward getClientSnatchGetAward() {
      return clientSnatchGetAward_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.getDefaultInstance() : clientSnatchGetAward_;
    }
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder getClientSnatchGetAwardOrBuilder() {
      return getClientSnatchGetAward();
    }

    public static final int CLIENTENTERDG_FIELD_NUMBER = 900;
    private com.kys.util.netty.proto.SnatchProto.ClientEnterDG clientEnterDG_;
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    public boolean hasClientEnterDG() {
      return clientEnterDG_ != null;
    }
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientEnterDG getClientEnterDG() {
      return clientEnterDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientEnterDG.getDefaultInstance() : clientEnterDG_;
    }
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder getClientEnterDGOrBuilder() {
      return getClientEnterDG();
    }

    public static final int CLIENTDGLOTTERY_FIELD_NUMBER = 901;
    private com.kys.util.netty.proto.SnatchProto.ClientDGLottery clientDGLottery_;
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    public boolean hasClientDGLottery() {
      return clientDGLottery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientDGLottery getClientDGLottery() {
      return clientDGLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientDGLottery.getDefaultInstance() : clientDGLottery_;
    }
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder getClientDGLotteryOrBuilder() {
      return getClientDGLottery();
    }

    public static final int CLIENTRESETLOTTERY_FIELD_NUMBER = 902;
    private com.kys.util.netty.proto.SnatchProto.ClientResetLottery clientResetLottery_;
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    public boolean hasClientResetLottery() {
      return clientResetLottery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientResetLottery getClientResetLottery() {
      return clientResetLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientResetLottery.getDefaultInstance() : clientResetLottery_;
    }
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder getClientResetLotteryOrBuilder() {
      return getClientResetLottery();
    }

    public static final int CLIENTEXITDG_FIELD_NUMBER = 903;
    private com.kys.util.netty.proto.SnatchProto.ClientExitDG clientExitDG_;
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    public boolean hasClientExitDG() {
      return clientExitDG_ != null;
    }
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientExitDG getClientExitDG() {
      return clientExitDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientExitDG.getDefaultInstance() : clientExitDG_;
    }
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder getClientExitDGOrBuilder() {
      return getClientExitDG();
    }

    public static final int CLIENTOPENDG_FIELD_NUMBER = 904;
    private com.kys.util.netty.proto.SnatchProto.ClientOpenDG clientOpenDG_;
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    public boolean hasClientOpenDG() {
      return clientOpenDG_ != null;
    }
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOpenDG getClientOpenDG() {
      return clientOpenDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOpenDG.getDefaultInstance() : clientOpenDG_;
    }
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder getClientOpenDGOrBuilder() {
      return getClientOpenDG();
    }

    public static final int CLIENTOPENDD_FIELD_NUMBER = 905;
    private com.kys.util.netty.proto.SnatchProto.ClientOpenDD clientOpenDD_;
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    public boolean hasClientOpenDD() {
      return clientOpenDD_ != null;
    }
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOpenDD getClientOpenDD() {
      return clientOpenDD_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOpenDD.getDefaultInstance() : clientOpenDD_;
    }
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder getClientOpenDDOrBuilder() {
      return getClientOpenDD();
    }

    public static final int CLIENTDDLOTTERY_FIELD_NUMBER = 906;
    private com.kys.util.netty.proto.SnatchProto.ClientDDLottery clientDDLottery_;
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    public boolean hasClientDDLottery() {
      return clientDDLottery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientDDLottery getClientDDLottery() {
      return clientDDLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientDDLottery.getDefaultInstance() : clientDDLottery_;
    }
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder getClientDDLotteryOrBuilder() {
      return getClientDDLottery();
    }

    public static final int CLIENTEXITDD_FIELD_NUMBER = 907;
    private com.kys.util.netty.proto.SnatchProto.ClientExitDD clientExitDD_;
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    public boolean hasClientExitDD() {
      return clientExitDD_ != null;
    }
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientExitDD getClientExitDD() {
      return clientExitDD_ == null ? com.kys.util.netty.proto.SnatchProto.ClientExitDD.getDefaultInstance() : clientExitDD_;
    }
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder getClientExitDDOrBuilder() {
      return getClientExitDD();
    }

    public static final int CLIENTQUERYPROP_FIELD_NUMBER = 1001;
    private com.kys.util.netty.proto.PropProto.ClientQueryProp clientQueryProp_;
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    public boolean hasClientQueryProp() {
      return clientQueryProp_ != null;
    }
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientQueryProp getClientQueryProp() {
      return clientQueryProp_ == null ? com.kys.util.netty.proto.PropProto.ClientQueryProp.getDefaultInstance() : clientQueryProp_;
    }
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder getClientQueryPropOrBuilder() {
      return getClientQueryProp();
    }

    public static final int CLIENTUSEPROP_FIELD_NUMBER = 1002;
    private com.kys.util.netty.proto.PropProto.ClientUseProp clientUseProp_;
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    public boolean hasClientUseProp() {
      return clientUseProp_ != null;
    }
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientUseProp getClientUseProp() {
      return clientUseProp_ == null ? com.kys.util.netty.proto.PropProto.ClientUseProp.getDefaultInstance() : clientUseProp_;
    }
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder getClientUsePropOrBuilder() {
      return getClientUseProp();
    }

    public static final int CLIENTQUERYPROPCOUNT_FIELD_NUMBER = 1003;
    private com.kys.util.netty.proto.PropProto.ClientQueryPropCount clientQueryPropCount_;
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    public boolean hasClientQueryPropCount() {
      return clientQueryPropCount_ != null;
    }
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientQueryPropCount getClientQueryPropCount() {
      return clientQueryPropCount_ == null ? com.kys.util.netty.proto.PropProto.ClientQueryPropCount.getDefaultInstance() : clientQueryPropCount_;
    }
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder getClientQueryPropCountOrBuilder() {
      return getClientQueryPropCount();
    }

    public static final int CLIENTSIGNINFO_FIELD_NUMBER = 1101;
    private com.kys.util.netty.proto.SignProto.ClientSignInfo clientSignInfo_;
    /**
     * <pre>
     ** 客户端请求签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
     */
    public boolean hasClientSignInfo() {
      return clientSignInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端请求签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientSignInfo getClientSignInfo() {
      return clientSignInfo_ == null ? com.kys.util.netty.proto.SignProto.ClientSignInfo.getDefaultInstance() : clientSignInfo_;
    }
    /**
     * <pre>
     ** 客户端请求签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientSignInfoOrBuilder getClientSignInfoOrBuilder() {
      return getClientSignInfo();
    }

    public static final int CLIENTSIGNAWARD_FIELD_NUMBER = 1102;
    private com.kys.util.netty.proto.SignProto.ClientSignAward clientSignAward_;
    /**
     * <pre>
     ** 客户端请求签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
     */
    public boolean hasClientSignAward() {
      return clientSignAward_ != null;
    }
    /**
     * <pre>
     ** 客户端请求签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientSignAward getClientSignAward() {
      return clientSignAward_ == null ? com.kys.util.netty.proto.SignProto.ClientSignAward.getDefaultInstance() : clientSignAward_;
    }
    /**
     * <pre>
     ** 客户端请求签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientSignAwardOrBuilder getClientSignAwardOrBuilder() {
      return getClientSignAward();
    }

    public static final int CLIENTSIGNSTATE_FIELD_NUMBER = 1103;
    private com.kys.util.netty.proto.SignProto.ClientSignState clientSignState_;
    /**
     * <pre>
     ** 客户端请求签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
     */
    public boolean hasClientSignState() {
      return clientSignState_ != null;
    }
    /**
     * <pre>
     ** 客户端请求签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientSignState getClientSignState() {
      return clientSignState_ == null ? com.kys.util.netty.proto.SignProto.ClientSignState.getDefaultInstance() : clientSignState_;
    }
    /**
     * <pre>
     ** 客户端请求签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientSignStateOrBuilder getClientSignStateOrBuilder() {
      return getClientSignState();
    }

    public static final int CLIENTLTLOTTERY_FIELD_NUMBER = 1104;
    private com.kys.util.netty.proto.SignProto.ClientLTLottery clientLTLottery_;
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    public boolean hasClientLTLottery() {
      return clientLTLottery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientLTLottery getClientLTLottery() {
      return clientLTLottery_ == null ? com.kys.util.netty.proto.SignProto.ClientLTLottery.getDefaultInstance() : clientLTLottery_;
    }
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder getClientLTLotteryOrBuilder() {
      return getClientLTLottery();
    }

    public static final int CLIENTGETTSREWARD_FIELD_NUMBER = 1105;
    private com.kys.util.netty.proto.SignProto.ClientGetTSReward clientGetTSReward_;
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    public boolean hasClientGetTSReward() {
      return clientGetTSReward_ != null;
    }
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetTSReward getClientGetTSReward() {
      return clientGetTSReward_ == null ? com.kys.util.netty.proto.SignProto.ClientGetTSReward.getDefaultInstance() : clientGetTSReward_;
    }
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder getClientGetTSRewardOrBuilder() {
      return getClientGetTSReward();
    }

    public static final int CLIENTGETLUCKINFO_FIELD_NUMBER = 1106;
    private com.kys.util.netty.proto.SignProto.ClientGetLuckInfo clientGetLuckInfo_;
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    public boolean hasClientGetLuckInfo() {
      return clientGetLuckInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetLuckInfo getClientGetLuckInfo() {
      return clientGetLuckInfo_ == null ? com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.getDefaultInstance() : clientGetLuckInfo_;
    }
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder getClientGetLuckInfoOrBuilder() {
      return getClientGetLuckInfo();
    }

    public static final int CLIENTGETVIP_FIELD_NUMBER = 1203;
    private com.kys.util.netty.proto.VipProto.ClientGetVip clientGetVip_;
    /**
     * <pre>
     ** 获取新版VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
     */
    public boolean hasClientGetVip() {
      return clientGetVip_ != null;
    }
    /**
     * <pre>
     ** 获取新版VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
     */
    public com.kys.util.netty.proto.VipProto.ClientGetVip getClientGetVip() {
      return clientGetVip_ == null ? com.kys.util.netty.proto.VipProto.ClientGetVip.getDefaultInstance() : clientGetVip_;
    }
    /**
     * <pre>
     ** 获取新版VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
     */
    public com.kys.util.netty.proto.VipProto.ClientGetVipOrBuilder getClientGetVipOrBuilder() {
      return getClientGetVip();
    }

    public static final int CLIENTGETDAYGIFT_FIELD_NUMBER = 1204;
    private com.kys.util.netty.proto.VipProto.ClientGetDayGift clientGetDayGift_;
    /**
     * <pre>
     ** 获取新版VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
     */
    public boolean hasClientGetDayGift() {
      return clientGetDayGift_ != null;
    }
    /**
     * <pre>
     ** 获取新版VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
     */
    public com.kys.util.netty.proto.VipProto.ClientGetDayGift getClientGetDayGift() {
      return clientGetDayGift_ == null ? com.kys.util.netty.proto.VipProto.ClientGetDayGift.getDefaultInstance() : clientGetDayGift_;
    }
    /**
     * <pre>
     ** 获取新版VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
     */
    public com.kys.util.netty.proto.VipProto.ClientGetDayGiftOrBuilder getClientGetDayGiftOrBuilder() {
      return getClientGetDayGift();
    }

    public static final int CLIENTENTERSLEEVE_FIELD_NUMBER = 1300;
    private com.kys.util.netty.proto.LittleProto.ClientEnterSleeve clientEnterSleeve_;
    /**
     * <pre>
     ** 客户端请求进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
     */
    public boolean hasClientEnterSleeve() {
      return clientEnterSleeve_ != null;
    }
    /**
     * <pre>
     ** 客户端请求进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientEnterSleeve getClientEnterSleeve() {
      return clientEnterSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.getDefaultInstance() : clientEnterSleeve_;
    }
    /**
     * <pre>
     ** 客户端请求进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientEnterSleeveOrBuilder getClientEnterSleeveOrBuilder() {
      return getClientEnterSleeve();
    }

    public static final int CLIENTSLEEVESHEEP_FIELD_NUMBER = 1301;
    private com.kys.util.netty.proto.LittleProto.ClientSleeveSheep clientSleeveSheep_;
    /**
     * <pre>
     ** 客户端套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
     */
    public boolean hasClientSleeveSheep() {
      return clientSleeveSheep_ != null;
    }
    /**
     * <pre>
     ** 客户端套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientSleeveSheep getClientSleeveSheep() {
      return clientSleeveSheep_ == null ? com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.getDefaultInstance() : clientSleeveSheep_;
    }
    /**
     * <pre>
     ** 客户端套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientSleeveSheepOrBuilder getClientSleeveSheepOrBuilder() {
      return getClientSleeveSheep();
    }

    public static final int CLIENTQUERYPLAYERCOIN_FIELD_NUMBER = 1302;
    private com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin clientQueryPlayerCoin_;
    /**
     * <pre>
     ** 客户端请求查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
     */
    public boolean hasClientQueryPlayerCoin() {
      return clientQueryPlayerCoin_ != null;
    }
    /**
     * <pre>
     ** 客户端请求查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin getClientQueryPlayerCoin() {
      return clientQueryPlayerCoin_ == null ? com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.getDefaultInstance() : clientQueryPlayerCoin_;
    }
    /**
     * <pre>
     ** 客户端请求查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoinOrBuilder getClientQueryPlayerCoinOrBuilder() {
      return getClientQueryPlayerCoin();
    }

    public static final int CLIENTEXITSLEEVE_FIELD_NUMBER = 1303;
    private com.kys.util.netty.proto.LittleProto.ClientExitSleeve clientExitSleeve_;
    /**
     * <pre>
     ** 客户端请求退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
     */
    public boolean hasClientExitSleeve() {
      return clientExitSleeve_ != null;
    }
    /**
     * <pre>
     ** 客户端请求退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientExitSleeve getClientExitSleeve() {
      return clientExitSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ClientExitSleeve.getDefaultInstance() : clientExitSleeve_;
    }
    /**
     * <pre>
     ** 客户端请求退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientExitSleeveOrBuilder getClientExitSleeveOrBuilder() {
      return getClientExitSleeve();
    }

    public static final int CLIENTENTERNEWSLEEVE_FIELD_NUMBER = 1304;
    private com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve clientEnterNewSleeve_;
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
     */
    public boolean hasClientEnterNewSleeve() {
      return clientEnterNewSleeve_ != null;
    }
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve getClientEnterNewSleeve() {
      return clientEnterNewSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.getDefaultInstance() : clientEnterNewSleeve_;
    }
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeveOrBuilder getClientEnterNewSleeveOrBuilder() {
      return getClientEnterNewSleeve();
    }

    public static final int CLIENTNEWSLEEVESHEEP_FIELD_NUMBER = 1305;
    private com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep clientNewSleeveSheep_;
    /**
     * <pre>
     ** 客户端请求开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
     */
    public boolean hasClientNewSleeveSheep() {
      return clientNewSleeveSheep_ != null;
    }
    /**
     * <pre>
     ** 客户端请求开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep getClientNewSleeveSheep() {
      return clientNewSleeveSheep_ == null ? com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.getDefaultInstance() : clientNewSleeveSheep_;
    }
    /**
     * <pre>
     ** 客户端请求开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheepOrBuilder getClientNewSleeveSheepOrBuilder() {
      return getClientNewSleeveSheep();
    }

    public static final int CLIENTNEWSLEEVERESULT_FIELD_NUMBER = 1306;
    private com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult clientNewSleeveResult_;
    /**
     * <pre>
     ** 客户端请求(新套羊结果) 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
     */
    public boolean hasClientNewSleeveResult() {
      return clientNewSleeveResult_ != null;
    }
    /**
     * <pre>
     ** 客户端请求(新套羊结果) 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult getClientNewSleeveResult() {
      return clientNewSleeveResult_ == null ? com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.getDefaultInstance() : clientNewSleeveResult_;
    }
    /**
     * <pre>
     ** 客户端请求(新套羊结果) 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientNewSleeveResultOrBuilder getClientNewSleeveResultOrBuilder() {
      return getClientNewSleeveResult();
    }

    public static final int CLIENTEXITNEWSLEEVE_FIELD_NUMBER = 1307;
    private com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve clientExitNewSleeve_;
    /**
     * <pre>
     ** 客户端退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
     */
    public boolean hasClientExitNewSleeve() {
      return clientExitNewSleeve_ != null;
    }
    /**
     * <pre>
     ** 客户端退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve getClientExitNewSleeve() {
      return clientExitNewSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.getDefaultInstance() : clientExitNewSleeve_;
    }
    /**
     * <pre>
     ** 客户端退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ClientExitNewSleeveOrBuilder getClientExitNewSleeveOrBuilder() {
      return getClientExitNewSleeve();
    }

    public static final int CLIENT_2_DOCATCH_FIELD_NUMBER = 1401;
    private com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch client2DoCatch_;
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
     */
    public boolean hasClient2DoCatch() {
      return client2DoCatch_ != null;
    }
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch getClient2DoCatch() {
      return client2DoCatch_ == null ? com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.getDefaultInstance() : client2DoCatch_;
    }
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Client_2_DoCatchOrBuilder getClient2DoCatchOrBuilder() {
      return getClient2DoCatch();
    }

    public static final int CLIENT_2_PLAYCARDS_FIELD_NUMBER = 1402;
    private com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards client2PlayCards_;
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
     */
    public boolean hasClient2PlayCards() {
      return client2PlayCards_ != null;
    }
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards getClient2PlayCards() {
      return client2PlayCards_ == null ? com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.getDefaultInstance() : client2PlayCards_;
    }
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Client_2_PlayCardsOrBuilder getClient2PlayCardsOrBuilder() {
      return getClient2PlayCards();
    }

    public static final int CLIENT_2_RECOVERGAME_FIELD_NUMBER = 1403;
    private com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame client2RecoverGame_;
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
     */
    public boolean hasClient2RecoverGame() {
      return client2RecoverGame_ != null;
    }
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame getClient2RecoverGame() {
      return client2RecoverGame_ == null ? com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.getDefaultInstance() : client2RecoverGame_;
    }
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGameOrBuilder getClient2RecoverGameOrBuilder() {
      return getClient2RecoverGame();
    }

    public static final int CLIENT_2_LEAVEROOM_FIELD_NUMBER = 1404;
    private com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom client2LeaveRoom_;
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
     */
    public boolean hasClient2LeaveRoom() {
      return client2LeaveRoom_ != null;
    }
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom getClient2LeaveRoom() {
      return client2LeaveRoom_ == null ? com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.getDefaultInstance() : client2LeaveRoom_;
    }
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoomOrBuilder getClient2LeaveRoomOrBuilder() {
      return getClient2LeaveRoom();
    }

    public static final int CLIENTMINESHARE_FIELD_NUMBER = 1501;
    private com.kys.util.netty.proto.ShareProto.ClientMineShare clientMineShare_;
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
     */
    public boolean hasClientMineShare() {
      return clientMineShare_ != null;
    }
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientMineShare getClientMineShare() {
      return clientMineShare_ == null ? com.kys.util.netty.proto.ShareProto.ClientMineShare.getDefaultInstance() : clientMineShare_;
    }
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientMineShareOrBuilder getClientMineShareOrBuilder() {
      return getClientMineShare();
    }

    public static final int CLIENTGETMSAWARD_FIELD_NUMBER = 1502;
    private com.kys.util.netty.proto.ShareProto.ClientGetMSAward clientGetMSAward_;
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
     */
    public boolean hasClientGetMSAward() {
      return clientGetMSAward_ != null;
    }
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientGetMSAward getClientGetMSAward() {
      return clientGetMSAward_ == null ? com.kys.util.netty.proto.ShareProto.ClientGetMSAward.getDefaultInstance() : clientGetMSAward_;
    }
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientGetMSAwardOrBuilder getClientGetMSAwardOrBuilder() {
      return getClientGetMSAward();
    }

    public static final int CLIENTFRIENDSHARE_FIELD_NUMBER = 1503;
    private com.kys.util.netty.proto.ShareProto.ClientFriendShare clientFriendShare_;
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
     */
    public boolean hasClientFriendShare() {
      return clientFriendShare_ != null;
    }
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientFriendShare getClientFriendShare() {
      return clientFriendShare_ == null ? com.kys.util.netty.proto.ShareProto.ClientFriendShare.getDefaultInstance() : clientFriendShare_;
    }
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientFriendShareOrBuilder getClientFriendShareOrBuilder() {
      return getClientFriendShare();
    }

    public static final int CLIENTGETFSAWARD_FIELD_NUMBER = 1504;
    private com.kys.util.netty.proto.ShareProto.ClientGetFSAward clientGetFSAward_;
    /**
     * <pre>
     ** 玩家获取好友的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
     */
    public boolean hasClientGetFSAward() {
      return clientGetFSAward_ != null;
    }
    /**
     * <pre>
     ** 玩家获取好友的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientGetFSAward getClientGetFSAward() {
      return clientGetFSAward_ == null ? com.kys.util.netty.proto.ShareProto.ClientGetFSAward.getDefaultInstance() : clientGetFSAward_;
    }
    /**
     * <pre>
     ** 玩家获取好友的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientGetFSAwardOrBuilder getClientGetFSAwardOrBuilder() {
      return getClientGetFSAward();
    }

    public static final int CLIENTGETSHARETASK_FIELD_NUMBER = 1505;
    private com.kys.util.netty.proto.ShareProto.ClientGetShareTask clientGetShareTask_;
    /**
     * <pre>
     ** 玩家获取邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
     */
    public boolean hasClientGetShareTask() {
      return clientGetShareTask_ != null;
    }
    /**
     * <pre>
     ** 玩家获取邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientGetShareTask getClientGetShareTask() {
      return clientGetShareTask_ == null ? com.kys.util.netty.proto.ShareProto.ClientGetShareTask.getDefaultInstance() : clientGetShareTask_;
    }
    /**
     * <pre>
     ** 玩家获取邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientGetShareTaskOrBuilder getClientGetShareTaskOrBuilder() {
      return getClientGetShareTask();
    }

    public static final int CLIENTGETSHARETASKAWARD_FIELD_NUMBER = 1506;
    private com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward clientGetShareTaskAward_;
    /**
     * <pre>
     ** 玩家获取邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
     */
    public boolean hasClientGetShareTaskAward() {
      return clientGetShareTaskAward_ != null;
    }
    /**
     * <pre>
     ** 玩家获取邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward getClientGetShareTaskAward() {
      return clientGetShareTaskAward_ == null ? com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.getDefaultInstance() : clientGetShareTaskAward_;
    }
    /**
     * <pre>
     ** 玩家获取邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAwardOrBuilder getClientGetShareTaskAwardOrBuilder() {
      return getClientGetShareTaskAward();
    }

    public static final int CLIENTQUERYREVIVEINFO_FIELD_NUMBER = 1601;
    private com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo clientQueryReviveInfo_;
    /**
     * <pre>
     ** 客户端查询复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
     */
    public boolean hasClientQueryReviveInfo() {
      return clientQueryReviveInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端查询复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo getClientQueryReviveInfo() {
      return clientQueryReviveInfo_ == null ? com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.getDefaultInstance() : clientQueryReviveInfo_;
    }
    /**
     * <pre>
     ** 客户端查询复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfoOrBuilder getClientQueryReviveInfoOrBuilder() {
      return getClientQueryReviveInfo();
    }

    public static final int CLIENTUSEREVIVE_FIELD_NUMBER = 1602;
    private com.kys.util.netty.proto.ReviveProto.ClientUseRevive clientUseRevive_;
    /**
     * <pre>
     ** 客户端使用复活次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
     */
    public boolean hasClientUseRevive() {
      return clientUseRevive_ != null;
    }
    /**
     * <pre>
     ** 客户端使用复活次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ClientUseRevive getClientUseRevive() {
      return clientUseRevive_ == null ? com.kys.util.netty.proto.ReviveProto.ClientUseRevive.getDefaultInstance() : clientUseRevive_;
    }
    /**
     * <pre>
     ** 客户端使用复活次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ClientUseReviveOrBuilder getClientUseReviveOrBuilder() {
      return getClientUseRevive();
    }

    public static final int CLIENTREVIVEFIRSTCHARGE_FIELD_NUMBER = 1603;
    private com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge clientReviveFirstCharge_;
    /**
     * <pre>
     ** 获取新手启航礼包信息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
     */
    public boolean hasClientReviveFirstCharge() {
      return clientReviveFirstCharge_ != null;
    }
    /**
     * <pre>
     ** 获取新手启航礼包信息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge getClientReviveFirstCharge() {
      return clientReviveFirstCharge_ == null ? com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.getDefaultInstance() : clientReviveFirstCharge_;
    }
    /**
     * <pre>
     ** 获取新手启航礼包信息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ClientReviveFirstChargeOrBuilder getClientReviveFirstChargeOrBuilder() {
      return getClientReviveFirstCharge();
    }

    public static final int CLIENTREVIVEDAYGIFT_FIELD_NUMBER = 1604;
    private com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift clientReviveDayGift_;
    /**
     * <pre>
     ** 获取每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
     */
    public boolean hasClientReviveDayGift() {
      return clientReviveDayGift_ != null;
    }
    /**
     * <pre>
     ** 获取每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift getClientReviveDayGift() {
      return clientReviveDayGift_ == null ? com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.getDefaultInstance() : clientReviveDayGift_;
    }
    /**
     * <pre>
     ** 获取每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ClientReviveDayGiftOrBuilder getClientReviveDayGiftOrBuilder() {
      return getClientReviveDayGift();
    }

    public static final int CLIENTGETREDTIP_FIELD_NUMBER = 1701;
    private com.kys.util.netty.proto.HallProto.ClientGetRedTip clientGetRedTip_;
    /**
     * <pre>
     ** 客户端获取大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
     */
    public boolean hasClientGetRedTip() {
      return clientGetRedTip_ != null;
    }
    /**
     * <pre>
     ** 客户端获取大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRedTip getClientGetRedTip() {
      return clientGetRedTip_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRedTip.getDefaultInstance() : clientGetRedTip_;
    }
    /**
     * <pre>
     ** 客户端获取大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRedTipOrBuilder getClientGetRedTipOrBuilder() {
      return getClientGetRedTip();
    }

    public static final int CLIENTGETMATCHINFO_FIELD_NUMBER = 1801;
    private com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo clientGetMatchInfo_;
    /**
     * <pre>
     ** 客户端请求赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
     */
    public boolean hasClientGetMatchInfo() {
      return clientGetMatchInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端请求赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo getClientGetMatchInfo() {
      return clientGetMatchInfo_ == null ? com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.getDefaultInstance() : clientGetMatchInfo_;
    }
    /**
     * <pre>
     ** 客户端请求赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientGetMatchInfoOrBuilder getClientGetMatchInfoOrBuilder() {
      return getClientGetMatchInfo();
    }

    public static final int CLIENTGETMATCHDETAIL_FIELD_NUMBER = 1802;
    private com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail clientGetMatchDetail_;
    /**
     * <pre>
     ** 客户端请求赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
     */
    public boolean hasClientGetMatchDetail() {
      return clientGetMatchDetail_ != null;
    }
    /**
     * <pre>
     ** 客户端请求赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail getClientGetMatchDetail() {
      return clientGetMatchDetail_ == null ? com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.getDefaultInstance() : clientGetMatchDetail_;
    }
    /**
     * <pre>
     ** 客户端请求赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientGetMatchDetailOrBuilder getClientGetMatchDetailOrBuilder() {
      return getClientGetMatchDetail();
    }

    public static final int CLIENTGETMATCHRECORD_FIELD_NUMBER = 1803;
    private com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord clientGetMatchRecord_;
    /**
     * <pre>
     ** 客户端请求赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
     */
    public boolean hasClientGetMatchRecord() {
      return clientGetMatchRecord_ != null;
    }
    /**
     * <pre>
     ** 客户端请求赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord getClientGetMatchRecord() {
      return clientGetMatchRecord_ == null ? com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.getDefaultInstance() : clientGetMatchRecord_;
    }
    /**
     * <pre>
     ** 客户端请求赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientGetMatchRecordOrBuilder getClientGetMatchRecordOrBuilder() {
      return getClientGetMatchRecord();
    }

    public static final int CLIENTMATCHAPPLY_FIELD_NUMBER = 1804;
    private com.kys.util.netty.proto.MatchProto.ClientMatchApply clientMatchApply_;
    /**
     * <pre>
     ** 客户端请求赛事报名 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
     */
    public boolean hasClientMatchApply() {
      return clientMatchApply_ != null;
    }
    /**
     * <pre>
     ** 客户端请求赛事报名 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientMatchApply getClientMatchApply() {
      return clientMatchApply_ == null ? com.kys.util.netty.proto.MatchProto.ClientMatchApply.getDefaultInstance() : clientMatchApply_;
    }
    /**
     * <pre>
     ** 客户端请求赛事报名 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientMatchApplyOrBuilder getClientMatchApplyOrBuilder() {
      return getClientMatchApply();
    }

    public static final int CLIENTMATCHCANCEL_FIELD_NUMBER = 1805;
    private com.kys.util.netty.proto.MatchProto.ClientMatchCancel clientMatchCancel_;
    /**
     * <pre>
     ** 客户端请求取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
     */
    public boolean hasClientMatchCancel() {
      return clientMatchCancel_ != null;
    }
    /**
     * <pre>
     ** 客户端请求取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientMatchCancel getClientMatchCancel() {
      return clientMatchCancel_ == null ? com.kys.util.netty.proto.MatchProto.ClientMatchCancel.getDefaultInstance() : clientMatchCancel_;
    }
    /**
     * <pre>
     ** 客户端请求取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientMatchCancelOrBuilder getClientMatchCancelOrBuilder() {
      return getClientMatchCancel();
    }

    public static final int CLIENTOWNMATCHRECORD_FIELD_NUMBER = 1806;
    private com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord clientOwnMatchRecord_;
    /**
     * <pre>
     ** 客户端获取自己记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
     */
    public boolean hasClientOwnMatchRecord() {
      return clientOwnMatchRecord_ != null;
    }
    /**
     * <pre>
     ** 客户端获取自己记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord getClientOwnMatchRecord() {
      return clientOwnMatchRecord_ == null ? com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.getDefaultInstance() : clientOwnMatchRecord_;
    }
    /**
     * <pre>
     ** 客户端获取自己记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecordOrBuilder getClientOwnMatchRecordOrBuilder() {
      return getClientOwnMatchRecord();
    }

    public static final int CLIENTAPPLYLISTCHANGE_FIELD_NUMBER = 1807;
    private com.kys.util.netty.proto.MatchProto.ClientApplyListChange clientApplyListChange_;
    /**
     * <pre>
     ** 客户端请求赛事列表人数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
     */
    public boolean hasClientApplyListChange() {
      return clientApplyListChange_ != null;
    }
    /**
     * <pre>
     ** 客户端请求赛事列表人数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientApplyListChange getClientApplyListChange() {
      return clientApplyListChange_ == null ? com.kys.util.netty.proto.MatchProto.ClientApplyListChange.getDefaultInstance() : clientApplyListChange_;
    }
    /**
     * <pre>
     ** 客户端请求赛事列表人数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientApplyListChangeOrBuilder getClientApplyListChangeOrBuilder() {
      return getClientApplyListChange();
    }

    public static final int CLIENTMATCHSCORE_FIELD_NUMBER = 1808;
    private com.kys.util.netty.proto.MatchProto.ClientMatchScore clientMatchScore_;
    /**
     * <pre>
     ** 客户端获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
     */
    public boolean hasClientMatchScore() {
      return clientMatchScore_ != null;
    }
    /**
     * <pre>
     ** 客户端获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientMatchScore getClientMatchScore() {
      return clientMatchScore_ == null ? com.kys.util.netty.proto.MatchProto.ClientMatchScore.getDefaultInstance() : clientMatchScore_;
    }
    /**
     * <pre>
     ** 客户端获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientMatchScoreOrBuilder getClientMatchScoreOrBuilder() {
      return getClientMatchScore();
    }

    public static final int CLIENTMATCHCONFIG_FIELD_NUMBER = 1809;
    private com.kys.util.netty.proto.MatchProto.ClientMatchConfig clientMatchConfig_;
    /**
     * <pre>
     ** 客户端赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
     */
    public boolean hasClientMatchConfig() {
      return clientMatchConfig_ != null;
    }
    /**
     * <pre>
     ** 客户端赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientMatchConfig getClientMatchConfig() {
      return clientMatchConfig_ == null ? com.kys.util.netty.proto.MatchProto.ClientMatchConfig.getDefaultInstance() : clientMatchConfig_;
    }
    /**
     * <pre>
     ** 客户端赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ClientMatchConfigOrBuilder getClientMatchConfigOrBuilder() {
      return getClientMatchConfig();
    }

    public static final int CLIENTGETKILLCELL_FIELD_NUMBER = 1901;
    private com.kys.util.netty.proto.Triplekill.ClientGetKillCell clientGetKillCell_;
    /**
     * <pre>
     ** 客户端请求消除元素 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
     */
    public boolean hasClientGetKillCell() {
      return clientGetKillCell_ != null;
    }
    /**
     * <pre>
     ** 客户端请求消除元素 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ClientGetKillCell getClientGetKillCell() {
      return clientGetKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ClientGetKillCell.getDefaultInstance() : clientGetKillCell_;
    }
    /**
     * <pre>
     ** 客户端请求消除元素 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ClientGetKillCellOrBuilder getClientGetKillCellOrBuilder() {
      return getClientGetKillCell();
    }

    public static final int CLIENTENTERKILLCELL_FIELD_NUMBER = 1902;
    private com.kys.util.netty.proto.Triplekill.ClientEnterKillCell clientEnterKillCell_;
    /**
     * <pre>
     ** Client 请求进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
     */
    public boolean hasClientEnterKillCell() {
      return clientEnterKillCell_ != null;
    }
    /**
     * <pre>
     ** Client 请求进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ClientEnterKillCell getClientEnterKillCell() {
      return clientEnterKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.getDefaultInstance() : clientEnterKillCell_;
    }
    /**
     * <pre>
     ** Client 请求进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ClientEnterKillCellOrBuilder getClientEnterKillCellOrBuilder() {
      return getClientEnterKillCell();
    }

    public static final int CLIENTQUITKILLCELL_FIELD_NUMBER = 1903;
    private com.kys.util.netty.proto.Triplekill.ClientQuitKillCell clientQuitKillCell_;
    /**
     * <pre>
     ** Client 请求退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
     */
    public boolean hasClientQuitKillCell() {
      return clientQuitKillCell_ != null;
    }
    /**
     * <pre>
     ** Client 请求退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ClientQuitKillCell getClientQuitKillCell() {
      return clientQuitKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.getDefaultInstance() : clientQuitKillCell_;
    }
    /**
     * <pre>
     ** Client 请求退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ClientQuitKillCellOrBuilder getClientQuitKillCellOrBuilder() {
      return getClientQuitKillCell();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (userId_ != 0) {
        output.writeInt32(1, userId_);
      }
      if (methodId_ != 0) {
        output.writeInt32(2, methodId_);
      }
      if (clientPlayerInfo_ != null) {
        output.writeMessage(4, getClientPlayerInfo());
      }
      if (clientReturnHallHeartBeat_ != null) {
        output.writeMessage(5, getClientReturnHallHeartBeat());
      }
      if (clientReturnGameHeartBeat_ != null) {
        output.writeMessage(6, getClientReturnGameHeartBeat());
      }
      if (clientGetUserInfo_ != null) {
        output.writeMessage(7, getClientGetUserInfo());
      }
      if (clientNewLogin_ != null) {
        output.writeMessage(8, getClientNewLogin());
      }
      if (clientQuickJoin_ != null) {
        output.writeMessage(100, getClientQuickJoin());
      }
      if (clientEnterRoom_ != null) {
        output.writeMessage(101, getClientEnterRoom());
      }
      if (clientDoCatch_ != null) {
        output.writeMessage(102, getClientDoCatch());
      }
      if (clientPlayCards_ != null) {
        output.writeMessage(103, getClientPlayCards());
      }
      if (clientRecoverGame_ != null) {
        output.writeMessage(104, getClientRecoverGame());
      }
      if (clientAutoPlay_ != null) {
        output.writeMessage(105, getClientAutoPlay());
      }
      if (clientLeaveRoom_ != null) {
        output.writeMessage(106, getClientLeaveRoom());
      }
      if (clientCancleJoin_ != null) {
        output.writeMessage(107, getClientCancleJoin());
      }
      if (clientQueryIndex_ != null) {
        output.writeMessage(108, getClientQueryIndex());
      }
      if (clientRetryReturnGame_ != null) {
        output.writeMessage(109, getClientRetryReturnGame());
      }
      if (clientGetRankList_ != null) {
        output.writeMessage(200, getClientGetRankList());
      }
      if (clientGetRoomConfig_ != null) {
        output.writeMessage(205, getClientGetRoomConfig());
      }
      if (clientRewardMessage_ != null) {
        output.writeMessage(206, getClientRewardMessage());
      }
      if (clientGetMonthCardDiamond_ != null) {
        output.writeMessage(209, getClientGetMonthCardDiamond());
      }
      if (clientGetLotteryCount_ != null) {
        output.writeMessage(210, getClientGetLotteryCount());
      }
      if (clientGetRoomInfo_ != null) {
        output.writeMessage(211, getClientGetRoomInfo());
      }
      if (clientSendTelCode_ != null) {
        output.writeMessage(212, getClientSendTelCode());
      }
      if (clientVerifyTelCode_ != null) {
        output.writeMessage(213, getClientVerifyTelCode());
      }
      if (clientSharePackage_ != null) {
        output.writeMessage(217, getClientSharePackage());
      }
      if (clientGetAwardList_ != null) {
        output.writeMessage(218, getClientGetAwardList());
      }
      if (clientPlayerLogout_ != null) {
        output.writeMessage(219, getClientPlayerLogout());
      }
      if (clientCheckConnect_ != null) {
        output.writeMessage(220, getClientCheckConnect());
      }
      if (clientGetPFList_ != null) {
        output.writeMessage(221, getClientGetPFList());
      }
      if (clientChoosePF_ != null) {
        output.writeMessage(222, getClientChoosePF());
      }
      if (clientGetHistoryRank_ != null) {
        output.writeMessage(223, getClientGetHistoryRank());
      }
      if (clientH5Reward_ != null) {
        output.writeMessage(224, getClientH5Reward());
      }
      if (clientNewDrawWinCup_ != null) {
        output.writeMessage(225, getClientNewDrawWinCup());
      }
      if (clientGetNewHallInfo_ != null) {
        output.writeMessage(226, getClientGetNewHallInfo());
      }
      if (clientLuckWall_ != null) {
        output.writeMessage(229, getClientLuckWall());
      }
      if (clientCdkeyAward_ != null) {
        output.writeMessage(230, getClientCdkeyAward());
      }
      if (clientGetStoreInfo_ != null) {
        output.writeMessage(300, getClientGetStoreInfo());
      }
      if (clientConvertGoods_ != null) {
        output.writeMessage(301, getClientConvertGoods());
      }
      if (clientWXPayResultQuery_ != null) {
        output.writeMessage(302, getClientWXPayResultQuery());
      }
      if (clientBuyOrderGoods_ != null) {
        output.writeMessage(303, getClientBuyOrderGoods());
      }
      if (clientGetFirstCharge_ != null) {
        output.writeMessage(304, getClientGetFirstCharge());
      }
      if (clientGetDailyGift_ != null) {
        output.writeMessage(305, getClientGetDailyGift());
      }
      if (clientGetMonthCard_ != null) {
        output.writeMessage(306, getClientGetMonthCard());
      }
      if (clientGetResurgenceGift_ != null) {
        output.writeMessage(307, getClientGetResurgenceGift());
      }
      if (clientGetConvertMessage_ != null) {
        output.writeMessage(308, getClientGetConvertMessage());
      }
      if (clientNewBuyOrder_ != null) {
        output.writeMessage(309, getClientNewBuyOrder());
      }
      if (clientNewConvert_ != null) {
        output.writeMessage(310, getClientNewConvert());
      }
      if (clientAlipayAccount_ != null) {
        output.writeMessage(311, getClientAlipayAccount());
      }
      if (clientPayOptions_ != null) {
        output.writeMessage(312, getClientPayOptions());
      }
      if (clientIdVerify_ != null) {
        output.writeMessage(313, getClientIdVerify());
      }
      if (clientVerifyAward_ != null) {
        output.writeMessage(314, getClientVerifyAward());
      }
      if (clientMiniAppPay_ != null) {
        output.writeMessage(315, getClientMiniAppPay());
      }
      if (clientUnionAccount_ != null) {
        output.writeMessage(316, getClientUnionAccount());
      }
      if (clientGetAnnounce_ != null) {
        output.writeMessage(500, getClientGetAnnounce());
      }
      if (clientGetMail_ != null) {
        output.writeMessage(600, getClientGetMail());
      }
      if (clientGetMailReward_ != null) {
        output.writeMessage(601, getClientGetMailReward());
      }
      if (clientDelMail_ != null) {
        output.writeMessage(602, getClientDelMail());
      }
      if (clientReadMail_ != null) {
        output.writeMessage(603, getClientReadMail());
      }
      if (clientDel2R_ != null) {
        output.writeMessage(604, getClientDel2R());
      }
      if (clientQueryDailyTask_ != null) {
        output.writeMessage(700, getClientQueryDailyTask());
      }
      if (clientGetNoviceReward_ != null) {
        output.writeMessage(702, getClientGetNoviceReward());
      }
      if (clientQueryNoviceTask_ != null) {
        output.writeMessage(703, getClientQueryNoviceTask());
      }
      if (clientGetDTAward_ != null) {
        output.writeMessage(704, getClientGetDTAward());
      }
      if (clientGetReceiveAddr_ != null) {
        output.writeMessage(800, getClientGetReceiveAddr());
      }
      if (clientAlterReceiveAddr_ != null) {
        output.writeMessage(801, getClientAlterReceiveAddr());
      }
      if (clientSnatchList_ != null) {
        output.writeMessage(802, getClientSnatchList());
      }
      if (clientSnatchItemDetail_ != null) {
        output.writeMessage(803, getClientSnatchItemDetail());
      }
      if (clientSnatchBet_ != null) {
        output.writeMessage(804, getClientSnatchBet());
      }
      if (clientSnatchAwardList_ != null) {
        output.writeMessage(805, getClientSnatchAwardList());
      }
      if (clientOwnSnatchRecord_ != null) {
        output.writeMessage(806, getClientOwnSnatchRecord());
      }
      if (clientSnatchItemHistory_ != null) {
        output.writeMessage(807, getClientSnatchItemHistory());
      }
      if (clientSnatchHistoryDetail_ != null) {
        output.writeMessage(808, getClientSnatchHistoryDetail());
      }
      if (clientSnatchGetAward_ != null) {
        output.writeMessage(809, getClientSnatchGetAward());
      }
      if (clientEnterDG_ != null) {
        output.writeMessage(900, getClientEnterDG());
      }
      if (clientDGLottery_ != null) {
        output.writeMessage(901, getClientDGLottery());
      }
      if (clientResetLottery_ != null) {
        output.writeMessage(902, getClientResetLottery());
      }
      if (clientExitDG_ != null) {
        output.writeMessage(903, getClientExitDG());
      }
      if (clientOpenDG_ != null) {
        output.writeMessage(904, getClientOpenDG());
      }
      if (clientOpenDD_ != null) {
        output.writeMessage(905, getClientOpenDD());
      }
      if (clientDDLottery_ != null) {
        output.writeMessage(906, getClientDDLottery());
      }
      if (clientExitDD_ != null) {
        output.writeMessage(907, getClientExitDD());
      }
      if (clientQueryProp_ != null) {
        output.writeMessage(1001, getClientQueryProp());
      }
      if (clientUseProp_ != null) {
        output.writeMessage(1002, getClientUseProp());
      }
      if (clientQueryPropCount_ != null) {
        output.writeMessage(1003, getClientQueryPropCount());
      }
      if (clientSignInfo_ != null) {
        output.writeMessage(1101, getClientSignInfo());
      }
      if (clientSignAward_ != null) {
        output.writeMessage(1102, getClientSignAward());
      }
      if (clientSignState_ != null) {
        output.writeMessage(1103, getClientSignState());
      }
      if (clientLTLottery_ != null) {
        output.writeMessage(1104, getClientLTLottery());
      }
      if (clientGetTSReward_ != null) {
        output.writeMessage(1105, getClientGetTSReward());
      }
      if (clientGetLuckInfo_ != null) {
        output.writeMessage(1106, getClientGetLuckInfo());
      }
      if (clientGetVip_ != null) {
        output.writeMessage(1203, getClientGetVip());
      }
      if (clientGetDayGift_ != null) {
        output.writeMessage(1204, getClientGetDayGift());
      }
      if (clientEnterSleeve_ != null) {
        output.writeMessage(1300, getClientEnterSleeve());
      }
      if (clientSleeveSheep_ != null) {
        output.writeMessage(1301, getClientSleeveSheep());
      }
      if (clientQueryPlayerCoin_ != null) {
        output.writeMessage(1302, getClientQueryPlayerCoin());
      }
      if (clientExitSleeve_ != null) {
        output.writeMessage(1303, getClientExitSleeve());
      }
      if (clientEnterNewSleeve_ != null) {
        output.writeMessage(1304, getClientEnterNewSleeve());
      }
      if (clientNewSleeveSheep_ != null) {
        output.writeMessage(1305, getClientNewSleeveSheep());
      }
      if (clientNewSleeveResult_ != null) {
        output.writeMessage(1306, getClientNewSleeveResult());
      }
      if (clientExitNewSleeve_ != null) {
        output.writeMessage(1307, getClientExitNewSleeve());
      }
      if (client2DoCatch_ != null) {
        output.writeMessage(1401, getClient2DoCatch());
      }
      if (client2PlayCards_ != null) {
        output.writeMessage(1402, getClient2PlayCards());
      }
      if (client2RecoverGame_ != null) {
        output.writeMessage(1403, getClient2RecoverGame());
      }
      if (client2LeaveRoom_ != null) {
        output.writeMessage(1404, getClient2LeaveRoom());
      }
      if (clientMineShare_ != null) {
        output.writeMessage(1501, getClientMineShare());
      }
      if (clientGetMSAward_ != null) {
        output.writeMessage(1502, getClientGetMSAward());
      }
      if (clientFriendShare_ != null) {
        output.writeMessage(1503, getClientFriendShare());
      }
      if (clientGetFSAward_ != null) {
        output.writeMessage(1504, getClientGetFSAward());
      }
      if (clientGetShareTask_ != null) {
        output.writeMessage(1505, getClientGetShareTask());
      }
      if (clientGetShareTaskAward_ != null) {
        output.writeMessage(1506, getClientGetShareTaskAward());
      }
      if (clientQueryReviveInfo_ != null) {
        output.writeMessage(1601, getClientQueryReviveInfo());
      }
      if (clientUseRevive_ != null) {
        output.writeMessage(1602, getClientUseRevive());
      }
      if (clientReviveFirstCharge_ != null) {
        output.writeMessage(1603, getClientReviveFirstCharge());
      }
      if (clientReviveDayGift_ != null) {
        output.writeMessage(1604, getClientReviveDayGift());
      }
      if (clientGetRedTip_ != null) {
        output.writeMessage(1701, getClientGetRedTip());
      }
      if (clientGetMatchInfo_ != null) {
        output.writeMessage(1801, getClientGetMatchInfo());
      }
      if (clientGetMatchDetail_ != null) {
        output.writeMessage(1802, getClientGetMatchDetail());
      }
      if (clientGetMatchRecord_ != null) {
        output.writeMessage(1803, getClientGetMatchRecord());
      }
      if (clientMatchApply_ != null) {
        output.writeMessage(1804, getClientMatchApply());
      }
      if (clientMatchCancel_ != null) {
        output.writeMessage(1805, getClientMatchCancel());
      }
      if (clientOwnMatchRecord_ != null) {
        output.writeMessage(1806, getClientOwnMatchRecord());
      }
      if (clientApplyListChange_ != null) {
        output.writeMessage(1807, getClientApplyListChange());
      }
      if (clientMatchScore_ != null) {
        output.writeMessage(1808, getClientMatchScore());
      }
      if (clientMatchConfig_ != null) {
        output.writeMessage(1809, getClientMatchConfig());
      }
      if (clientGetKillCell_ != null) {
        output.writeMessage(1901, getClientGetKillCell());
      }
      if (clientEnterKillCell_ != null) {
        output.writeMessage(1902, getClientEnterKillCell());
      }
      if (clientQuitKillCell_ != null) {
        output.writeMessage(1903, getClientQuitKillCell());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (userId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, userId_);
      }
      if (methodId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, methodId_);
      }
      if (clientPlayerInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getClientPlayerInfo());
      }
      if (clientReturnHallHeartBeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getClientReturnHallHeartBeat());
      }
      if (clientReturnGameHeartBeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getClientReturnGameHeartBeat());
      }
      if (clientGetUserInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getClientGetUserInfo());
      }
      if (clientNewLogin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getClientNewLogin());
      }
      if (clientQuickJoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getClientQuickJoin());
      }
      if (clientEnterRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, getClientEnterRoom());
      }
      if (clientDoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, getClientDoCatch());
      }
      if (clientPlayCards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, getClientPlayCards());
      }
      if (clientRecoverGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, getClientRecoverGame());
      }
      if (clientAutoPlay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, getClientAutoPlay());
      }
      if (clientLeaveRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, getClientLeaveRoom());
      }
      if (clientCancleJoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(107, getClientCancleJoin());
      }
      if (clientQueryIndex_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(108, getClientQueryIndex());
      }
      if (clientRetryReturnGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(109, getClientRetryReturnGame());
      }
      if (clientGetRankList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(200, getClientGetRankList());
      }
      if (clientGetRoomConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(205, getClientGetRoomConfig());
      }
      if (clientRewardMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(206, getClientRewardMessage());
      }
      if (clientGetMonthCardDiamond_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(209, getClientGetMonthCardDiamond());
      }
      if (clientGetLotteryCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(210, getClientGetLotteryCount());
      }
      if (clientGetRoomInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(211, getClientGetRoomInfo());
      }
      if (clientSendTelCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(212, getClientSendTelCode());
      }
      if (clientVerifyTelCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(213, getClientVerifyTelCode());
      }
      if (clientSharePackage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(217, getClientSharePackage());
      }
      if (clientGetAwardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(218, getClientGetAwardList());
      }
      if (clientPlayerLogout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(219, getClientPlayerLogout());
      }
      if (clientCheckConnect_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(220, getClientCheckConnect());
      }
      if (clientGetPFList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(221, getClientGetPFList());
      }
      if (clientChoosePF_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(222, getClientChoosePF());
      }
      if (clientGetHistoryRank_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(223, getClientGetHistoryRank());
      }
      if (clientH5Reward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(224, getClientH5Reward());
      }
      if (clientNewDrawWinCup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(225, getClientNewDrawWinCup());
      }
      if (clientGetNewHallInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(226, getClientGetNewHallInfo());
      }
      if (clientLuckWall_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(229, getClientLuckWall());
      }
      if (clientCdkeyAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(230, getClientCdkeyAward());
      }
      if (clientGetStoreInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(300, getClientGetStoreInfo());
      }
      if (clientConvertGoods_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(301, getClientConvertGoods());
      }
      if (clientWXPayResultQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(302, getClientWXPayResultQuery());
      }
      if (clientBuyOrderGoods_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(303, getClientBuyOrderGoods());
      }
      if (clientGetFirstCharge_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(304, getClientGetFirstCharge());
      }
      if (clientGetDailyGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(305, getClientGetDailyGift());
      }
      if (clientGetMonthCard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(306, getClientGetMonthCard());
      }
      if (clientGetResurgenceGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(307, getClientGetResurgenceGift());
      }
      if (clientGetConvertMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(308, getClientGetConvertMessage());
      }
      if (clientNewBuyOrder_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(309, getClientNewBuyOrder());
      }
      if (clientNewConvert_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(310, getClientNewConvert());
      }
      if (clientAlipayAccount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(311, getClientAlipayAccount());
      }
      if (clientPayOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(312, getClientPayOptions());
      }
      if (clientIdVerify_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(313, getClientIdVerify());
      }
      if (clientVerifyAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(314, getClientVerifyAward());
      }
      if (clientMiniAppPay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(315, getClientMiniAppPay());
      }
      if (clientUnionAccount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(316, getClientUnionAccount());
      }
      if (clientGetAnnounce_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(500, getClientGetAnnounce());
      }
      if (clientGetMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(600, getClientGetMail());
      }
      if (clientGetMailReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(601, getClientGetMailReward());
      }
      if (clientDelMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(602, getClientDelMail());
      }
      if (clientReadMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(603, getClientReadMail());
      }
      if (clientDel2R_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(604, getClientDel2R());
      }
      if (clientQueryDailyTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(700, getClientQueryDailyTask());
      }
      if (clientGetNoviceReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(702, getClientGetNoviceReward());
      }
      if (clientQueryNoviceTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(703, getClientQueryNoviceTask());
      }
      if (clientGetDTAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(704, getClientGetDTAward());
      }
      if (clientGetReceiveAddr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(800, getClientGetReceiveAddr());
      }
      if (clientAlterReceiveAddr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(801, getClientAlterReceiveAddr());
      }
      if (clientSnatchList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(802, getClientSnatchList());
      }
      if (clientSnatchItemDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(803, getClientSnatchItemDetail());
      }
      if (clientSnatchBet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(804, getClientSnatchBet());
      }
      if (clientSnatchAwardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(805, getClientSnatchAwardList());
      }
      if (clientOwnSnatchRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(806, getClientOwnSnatchRecord());
      }
      if (clientSnatchItemHistory_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(807, getClientSnatchItemHistory());
      }
      if (clientSnatchHistoryDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(808, getClientSnatchHistoryDetail());
      }
      if (clientSnatchGetAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(809, getClientSnatchGetAward());
      }
      if (clientEnterDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(900, getClientEnterDG());
      }
      if (clientDGLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(901, getClientDGLottery());
      }
      if (clientResetLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(902, getClientResetLottery());
      }
      if (clientExitDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(903, getClientExitDG());
      }
      if (clientOpenDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(904, getClientOpenDG());
      }
      if (clientOpenDD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(905, getClientOpenDD());
      }
      if (clientDDLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(906, getClientDDLottery());
      }
      if (clientExitDD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(907, getClientExitDD());
      }
      if (clientQueryProp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1001, getClientQueryProp());
      }
      if (clientUseProp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1002, getClientUseProp());
      }
      if (clientQueryPropCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1003, getClientQueryPropCount());
      }
      if (clientSignInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1101, getClientSignInfo());
      }
      if (clientSignAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1102, getClientSignAward());
      }
      if (clientSignState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1103, getClientSignState());
      }
      if (clientLTLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1104, getClientLTLottery());
      }
      if (clientGetTSReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1105, getClientGetTSReward());
      }
      if (clientGetLuckInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1106, getClientGetLuckInfo());
      }
      if (clientGetVip_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1203, getClientGetVip());
      }
      if (clientGetDayGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1204, getClientGetDayGift());
      }
      if (clientEnterSleeve_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1300, getClientEnterSleeve());
      }
      if (clientSleeveSheep_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1301, getClientSleeveSheep());
      }
      if (clientQueryPlayerCoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1302, getClientQueryPlayerCoin());
      }
      if (clientExitSleeve_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1303, getClientExitSleeve());
      }
      if (clientEnterNewSleeve_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1304, getClientEnterNewSleeve());
      }
      if (clientNewSleeveSheep_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1305, getClientNewSleeveSheep());
      }
      if (clientNewSleeveResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1306, getClientNewSleeveResult());
      }
      if (clientExitNewSleeve_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1307, getClientExitNewSleeve());
      }
      if (client2DoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1401, getClient2DoCatch());
      }
      if (client2PlayCards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1402, getClient2PlayCards());
      }
      if (client2RecoverGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1403, getClient2RecoverGame());
      }
      if (client2LeaveRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1404, getClient2LeaveRoom());
      }
      if (clientMineShare_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1501, getClientMineShare());
      }
      if (clientGetMSAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1502, getClientGetMSAward());
      }
      if (clientFriendShare_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1503, getClientFriendShare());
      }
      if (clientGetFSAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1504, getClientGetFSAward());
      }
      if (clientGetShareTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1505, getClientGetShareTask());
      }
      if (clientGetShareTaskAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1506, getClientGetShareTaskAward());
      }
      if (clientQueryReviveInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1601, getClientQueryReviveInfo());
      }
      if (clientUseRevive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1602, getClientUseRevive());
      }
      if (clientReviveFirstCharge_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1603, getClientReviveFirstCharge());
      }
      if (clientReviveDayGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1604, getClientReviveDayGift());
      }
      if (clientGetRedTip_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1701, getClientGetRedTip());
      }
      if (clientGetMatchInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1801, getClientGetMatchInfo());
      }
      if (clientGetMatchDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1802, getClientGetMatchDetail());
      }
      if (clientGetMatchRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1803, getClientGetMatchRecord());
      }
      if (clientMatchApply_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1804, getClientMatchApply());
      }
      if (clientMatchCancel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1805, getClientMatchCancel());
      }
      if (clientOwnMatchRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1806, getClientOwnMatchRecord());
      }
      if (clientApplyListChange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1807, getClientApplyListChange());
      }
      if (clientMatchScore_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1808, getClientMatchScore());
      }
      if (clientMatchConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1809, getClientMatchConfig());
      }
      if (clientGetKillCell_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1901, getClientGetKillCell());
      }
      if (clientEnterKillCell_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1902, getClientEnterKillCell());
      }
      if (clientQuitKillCell_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1903, getClientQuitKillCell());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.kys.util.netty.proto.ProtoMsg.ClientRequest)) {
        return super.equals(obj);
      }
      com.kys.util.netty.proto.ProtoMsg.ClientRequest other = (com.kys.util.netty.proto.ProtoMsg.ClientRequest) obj;

      boolean result = true;
      result = result && (getUserId()
          == other.getUserId());
      result = result && (getMethodId()
          == other.getMethodId());
      result = result && (hasClientPlayerInfo() == other.hasClientPlayerInfo());
      if (hasClientPlayerInfo()) {
        result = result && getClientPlayerInfo()
            .equals(other.getClientPlayerInfo());
      }
      result = result && (hasClientReturnHallHeartBeat() == other.hasClientReturnHallHeartBeat());
      if (hasClientReturnHallHeartBeat()) {
        result = result && getClientReturnHallHeartBeat()
            .equals(other.getClientReturnHallHeartBeat());
      }
      result = result && (hasClientReturnGameHeartBeat() == other.hasClientReturnGameHeartBeat());
      if (hasClientReturnGameHeartBeat()) {
        result = result && getClientReturnGameHeartBeat()
            .equals(other.getClientReturnGameHeartBeat());
      }
      result = result && (hasClientGetUserInfo() == other.hasClientGetUserInfo());
      if (hasClientGetUserInfo()) {
        result = result && getClientGetUserInfo()
            .equals(other.getClientGetUserInfo());
      }
      result = result && (hasClientNewLogin() == other.hasClientNewLogin());
      if (hasClientNewLogin()) {
        result = result && getClientNewLogin()
            .equals(other.getClientNewLogin());
      }
      result = result && (hasClientQuickJoin() == other.hasClientQuickJoin());
      if (hasClientQuickJoin()) {
        result = result && getClientQuickJoin()
            .equals(other.getClientQuickJoin());
      }
      result = result && (hasClientEnterRoom() == other.hasClientEnterRoom());
      if (hasClientEnterRoom()) {
        result = result && getClientEnterRoom()
            .equals(other.getClientEnterRoom());
      }
      result = result && (hasClientDoCatch() == other.hasClientDoCatch());
      if (hasClientDoCatch()) {
        result = result && getClientDoCatch()
            .equals(other.getClientDoCatch());
      }
      result = result && (hasClientPlayCards() == other.hasClientPlayCards());
      if (hasClientPlayCards()) {
        result = result && getClientPlayCards()
            .equals(other.getClientPlayCards());
      }
      result = result && (hasClientRecoverGame() == other.hasClientRecoverGame());
      if (hasClientRecoverGame()) {
        result = result && getClientRecoverGame()
            .equals(other.getClientRecoverGame());
      }
      result = result && (hasClientAutoPlay() == other.hasClientAutoPlay());
      if (hasClientAutoPlay()) {
        result = result && getClientAutoPlay()
            .equals(other.getClientAutoPlay());
      }
      result = result && (hasClientLeaveRoom() == other.hasClientLeaveRoom());
      if (hasClientLeaveRoom()) {
        result = result && getClientLeaveRoom()
            .equals(other.getClientLeaveRoom());
      }
      result = result && (hasClientCancleJoin() == other.hasClientCancleJoin());
      if (hasClientCancleJoin()) {
        result = result && getClientCancleJoin()
            .equals(other.getClientCancleJoin());
      }
      result = result && (hasClientQueryIndex() == other.hasClientQueryIndex());
      if (hasClientQueryIndex()) {
        result = result && getClientQueryIndex()
            .equals(other.getClientQueryIndex());
      }
      result = result && (hasClientRetryReturnGame() == other.hasClientRetryReturnGame());
      if (hasClientRetryReturnGame()) {
        result = result && getClientRetryReturnGame()
            .equals(other.getClientRetryReturnGame());
      }
      result = result && (hasClientGetRankList() == other.hasClientGetRankList());
      if (hasClientGetRankList()) {
        result = result && getClientGetRankList()
            .equals(other.getClientGetRankList());
      }
      result = result && (hasClientGetRoomConfig() == other.hasClientGetRoomConfig());
      if (hasClientGetRoomConfig()) {
        result = result && getClientGetRoomConfig()
            .equals(other.getClientGetRoomConfig());
      }
      result = result && (hasClientRewardMessage() == other.hasClientRewardMessage());
      if (hasClientRewardMessage()) {
        result = result && getClientRewardMessage()
            .equals(other.getClientRewardMessage());
      }
      result = result && (hasClientGetMonthCardDiamond() == other.hasClientGetMonthCardDiamond());
      if (hasClientGetMonthCardDiamond()) {
        result = result && getClientGetMonthCardDiamond()
            .equals(other.getClientGetMonthCardDiamond());
      }
      result = result && (hasClientGetLotteryCount() == other.hasClientGetLotteryCount());
      if (hasClientGetLotteryCount()) {
        result = result && getClientGetLotteryCount()
            .equals(other.getClientGetLotteryCount());
      }
      result = result && (hasClientGetRoomInfo() == other.hasClientGetRoomInfo());
      if (hasClientGetRoomInfo()) {
        result = result && getClientGetRoomInfo()
            .equals(other.getClientGetRoomInfo());
      }
      result = result && (hasClientSendTelCode() == other.hasClientSendTelCode());
      if (hasClientSendTelCode()) {
        result = result && getClientSendTelCode()
            .equals(other.getClientSendTelCode());
      }
      result = result && (hasClientVerifyTelCode() == other.hasClientVerifyTelCode());
      if (hasClientVerifyTelCode()) {
        result = result && getClientVerifyTelCode()
            .equals(other.getClientVerifyTelCode());
      }
      result = result && (hasClientSharePackage() == other.hasClientSharePackage());
      if (hasClientSharePackage()) {
        result = result && getClientSharePackage()
            .equals(other.getClientSharePackage());
      }
      result = result && (hasClientGetAwardList() == other.hasClientGetAwardList());
      if (hasClientGetAwardList()) {
        result = result && getClientGetAwardList()
            .equals(other.getClientGetAwardList());
      }
      result = result && (hasClientPlayerLogout() == other.hasClientPlayerLogout());
      if (hasClientPlayerLogout()) {
        result = result && getClientPlayerLogout()
            .equals(other.getClientPlayerLogout());
      }
      result = result && (hasClientCheckConnect() == other.hasClientCheckConnect());
      if (hasClientCheckConnect()) {
        result = result && getClientCheckConnect()
            .equals(other.getClientCheckConnect());
      }
      result = result && (hasClientGetPFList() == other.hasClientGetPFList());
      if (hasClientGetPFList()) {
        result = result && getClientGetPFList()
            .equals(other.getClientGetPFList());
      }
      result = result && (hasClientChoosePF() == other.hasClientChoosePF());
      if (hasClientChoosePF()) {
        result = result && getClientChoosePF()
            .equals(other.getClientChoosePF());
      }
      result = result && (hasClientGetHistoryRank() == other.hasClientGetHistoryRank());
      if (hasClientGetHistoryRank()) {
        result = result && getClientGetHistoryRank()
            .equals(other.getClientGetHistoryRank());
      }
      result = result && (hasClientH5Reward() == other.hasClientH5Reward());
      if (hasClientH5Reward()) {
        result = result && getClientH5Reward()
            .equals(other.getClientH5Reward());
      }
      result = result && (hasClientNewDrawWinCup() == other.hasClientNewDrawWinCup());
      if (hasClientNewDrawWinCup()) {
        result = result && getClientNewDrawWinCup()
            .equals(other.getClientNewDrawWinCup());
      }
      result = result && (hasClientGetNewHallInfo() == other.hasClientGetNewHallInfo());
      if (hasClientGetNewHallInfo()) {
        result = result && getClientGetNewHallInfo()
            .equals(other.getClientGetNewHallInfo());
      }
      result = result && (hasClientLuckWall() == other.hasClientLuckWall());
      if (hasClientLuckWall()) {
        result = result && getClientLuckWall()
            .equals(other.getClientLuckWall());
      }
      result = result && (hasClientCdkeyAward() == other.hasClientCdkeyAward());
      if (hasClientCdkeyAward()) {
        result = result && getClientCdkeyAward()
            .equals(other.getClientCdkeyAward());
      }
      result = result && (hasClientGetStoreInfo() == other.hasClientGetStoreInfo());
      if (hasClientGetStoreInfo()) {
        result = result && getClientGetStoreInfo()
            .equals(other.getClientGetStoreInfo());
      }
      result = result && (hasClientConvertGoods() == other.hasClientConvertGoods());
      if (hasClientConvertGoods()) {
        result = result && getClientConvertGoods()
            .equals(other.getClientConvertGoods());
      }
      result = result && (hasClientWXPayResultQuery() == other.hasClientWXPayResultQuery());
      if (hasClientWXPayResultQuery()) {
        result = result && getClientWXPayResultQuery()
            .equals(other.getClientWXPayResultQuery());
      }
      result = result && (hasClientBuyOrderGoods() == other.hasClientBuyOrderGoods());
      if (hasClientBuyOrderGoods()) {
        result = result && getClientBuyOrderGoods()
            .equals(other.getClientBuyOrderGoods());
      }
      result = result && (hasClientGetFirstCharge() == other.hasClientGetFirstCharge());
      if (hasClientGetFirstCharge()) {
        result = result && getClientGetFirstCharge()
            .equals(other.getClientGetFirstCharge());
      }
      result = result && (hasClientGetDailyGift() == other.hasClientGetDailyGift());
      if (hasClientGetDailyGift()) {
        result = result && getClientGetDailyGift()
            .equals(other.getClientGetDailyGift());
      }
      result = result && (hasClientGetMonthCard() == other.hasClientGetMonthCard());
      if (hasClientGetMonthCard()) {
        result = result && getClientGetMonthCard()
            .equals(other.getClientGetMonthCard());
      }
      result = result && (hasClientGetResurgenceGift() == other.hasClientGetResurgenceGift());
      if (hasClientGetResurgenceGift()) {
        result = result && getClientGetResurgenceGift()
            .equals(other.getClientGetResurgenceGift());
      }
      result = result && (hasClientGetConvertMessage() == other.hasClientGetConvertMessage());
      if (hasClientGetConvertMessage()) {
        result = result && getClientGetConvertMessage()
            .equals(other.getClientGetConvertMessage());
      }
      result = result && (hasClientNewBuyOrder() == other.hasClientNewBuyOrder());
      if (hasClientNewBuyOrder()) {
        result = result && getClientNewBuyOrder()
            .equals(other.getClientNewBuyOrder());
      }
      result = result && (hasClientNewConvert() == other.hasClientNewConvert());
      if (hasClientNewConvert()) {
        result = result && getClientNewConvert()
            .equals(other.getClientNewConvert());
      }
      result = result && (hasClientAlipayAccount() == other.hasClientAlipayAccount());
      if (hasClientAlipayAccount()) {
        result = result && getClientAlipayAccount()
            .equals(other.getClientAlipayAccount());
      }
      result = result && (hasClientPayOptions() == other.hasClientPayOptions());
      if (hasClientPayOptions()) {
        result = result && getClientPayOptions()
            .equals(other.getClientPayOptions());
      }
      result = result && (hasClientIdVerify() == other.hasClientIdVerify());
      if (hasClientIdVerify()) {
        result = result && getClientIdVerify()
            .equals(other.getClientIdVerify());
      }
      result = result && (hasClientVerifyAward() == other.hasClientVerifyAward());
      if (hasClientVerifyAward()) {
        result = result && getClientVerifyAward()
            .equals(other.getClientVerifyAward());
      }
      result = result && (hasClientMiniAppPay() == other.hasClientMiniAppPay());
      if (hasClientMiniAppPay()) {
        result = result && getClientMiniAppPay()
            .equals(other.getClientMiniAppPay());
      }
      result = result && (hasClientUnionAccount() == other.hasClientUnionAccount());
      if (hasClientUnionAccount()) {
        result = result && getClientUnionAccount()
            .equals(other.getClientUnionAccount());
      }
      result = result && (hasClientGetAnnounce() == other.hasClientGetAnnounce());
      if (hasClientGetAnnounce()) {
        result = result && getClientGetAnnounce()
            .equals(other.getClientGetAnnounce());
      }
      result = result && (hasClientGetMail() == other.hasClientGetMail());
      if (hasClientGetMail()) {
        result = result && getClientGetMail()
            .equals(other.getClientGetMail());
      }
      result = result && (hasClientGetMailReward() == other.hasClientGetMailReward());
      if (hasClientGetMailReward()) {
        result = result && getClientGetMailReward()
            .equals(other.getClientGetMailReward());
      }
      result = result && (hasClientDelMail() == other.hasClientDelMail());
      if (hasClientDelMail()) {
        result = result && getClientDelMail()
            .equals(other.getClientDelMail());
      }
      result = result && (hasClientReadMail() == other.hasClientReadMail());
      if (hasClientReadMail()) {
        result = result && getClientReadMail()
            .equals(other.getClientReadMail());
      }
      result = result && (hasClientDel2R() == other.hasClientDel2R());
      if (hasClientDel2R()) {
        result = result && getClientDel2R()
            .equals(other.getClientDel2R());
      }
      result = result && (hasClientQueryDailyTask() == other.hasClientQueryDailyTask());
      if (hasClientQueryDailyTask()) {
        result = result && getClientQueryDailyTask()
            .equals(other.getClientQueryDailyTask());
      }
      result = result && (hasClientGetNoviceReward() == other.hasClientGetNoviceReward());
      if (hasClientGetNoviceReward()) {
        result = result && getClientGetNoviceReward()
            .equals(other.getClientGetNoviceReward());
      }
      result = result && (hasClientQueryNoviceTask() == other.hasClientQueryNoviceTask());
      if (hasClientQueryNoviceTask()) {
        result = result && getClientQueryNoviceTask()
            .equals(other.getClientQueryNoviceTask());
      }
      result = result && (hasClientGetDTAward() == other.hasClientGetDTAward());
      if (hasClientGetDTAward()) {
        result = result && getClientGetDTAward()
            .equals(other.getClientGetDTAward());
      }
      result = result && (hasClientGetReceiveAddr() == other.hasClientGetReceiveAddr());
      if (hasClientGetReceiveAddr()) {
        result = result && getClientGetReceiveAddr()
            .equals(other.getClientGetReceiveAddr());
      }
      result = result && (hasClientAlterReceiveAddr() == other.hasClientAlterReceiveAddr());
      if (hasClientAlterReceiveAddr()) {
        result = result && getClientAlterReceiveAddr()
            .equals(other.getClientAlterReceiveAddr());
      }
      result = result && (hasClientSnatchList() == other.hasClientSnatchList());
      if (hasClientSnatchList()) {
        result = result && getClientSnatchList()
            .equals(other.getClientSnatchList());
      }
      result = result && (hasClientSnatchItemDetail() == other.hasClientSnatchItemDetail());
      if (hasClientSnatchItemDetail()) {
        result = result && getClientSnatchItemDetail()
            .equals(other.getClientSnatchItemDetail());
      }
      result = result && (hasClientSnatchBet() == other.hasClientSnatchBet());
      if (hasClientSnatchBet()) {
        result = result && getClientSnatchBet()
            .equals(other.getClientSnatchBet());
      }
      result = result && (hasClientSnatchAwardList() == other.hasClientSnatchAwardList());
      if (hasClientSnatchAwardList()) {
        result = result && getClientSnatchAwardList()
            .equals(other.getClientSnatchAwardList());
      }
      result = result && (hasClientOwnSnatchRecord() == other.hasClientOwnSnatchRecord());
      if (hasClientOwnSnatchRecord()) {
        result = result && getClientOwnSnatchRecord()
            .equals(other.getClientOwnSnatchRecord());
      }
      result = result && (hasClientSnatchItemHistory() == other.hasClientSnatchItemHistory());
      if (hasClientSnatchItemHistory()) {
        result = result && getClientSnatchItemHistory()
            .equals(other.getClientSnatchItemHistory());
      }
      result = result && (hasClientSnatchHistoryDetail() == other.hasClientSnatchHistoryDetail());
      if (hasClientSnatchHistoryDetail()) {
        result = result && getClientSnatchHistoryDetail()
            .equals(other.getClientSnatchHistoryDetail());
      }
      result = result && (hasClientSnatchGetAward() == other.hasClientSnatchGetAward());
      if (hasClientSnatchGetAward()) {
        result = result && getClientSnatchGetAward()
            .equals(other.getClientSnatchGetAward());
      }
      result = result && (hasClientEnterDG() == other.hasClientEnterDG());
      if (hasClientEnterDG()) {
        result = result && getClientEnterDG()
            .equals(other.getClientEnterDG());
      }
      result = result && (hasClientDGLottery() == other.hasClientDGLottery());
      if (hasClientDGLottery()) {
        result = result && getClientDGLottery()
            .equals(other.getClientDGLottery());
      }
      result = result && (hasClientResetLottery() == other.hasClientResetLottery());
      if (hasClientResetLottery()) {
        result = result && getClientResetLottery()
            .equals(other.getClientResetLottery());
      }
      result = result && (hasClientExitDG() == other.hasClientExitDG());
      if (hasClientExitDG()) {
        result = result && getClientExitDG()
            .equals(other.getClientExitDG());
      }
      result = result && (hasClientOpenDG() == other.hasClientOpenDG());
      if (hasClientOpenDG()) {
        result = result && getClientOpenDG()
            .equals(other.getClientOpenDG());
      }
      result = result && (hasClientOpenDD() == other.hasClientOpenDD());
      if (hasClientOpenDD()) {
        result = result && getClientOpenDD()
            .equals(other.getClientOpenDD());
      }
      result = result && (hasClientDDLottery() == other.hasClientDDLottery());
      if (hasClientDDLottery()) {
        result = result && getClientDDLottery()
            .equals(other.getClientDDLottery());
      }
      result = result && (hasClientExitDD() == other.hasClientExitDD());
      if (hasClientExitDD()) {
        result = result && getClientExitDD()
            .equals(other.getClientExitDD());
      }
      result = result && (hasClientQueryProp() == other.hasClientQueryProp());
      if (hasClientQueryProp()) {
        result = result && getClientQueryProp()
            .equals(other.getClientQueryProp());
      }
      result = result && (hasClientUseProp() == other.hasClientUseProp());
      if (hasClientUseProp()) {
        result = result && getClientUseProp()
            .equals(other.getClientUseProp());
      }
      result = result && (hasClientQueryPropCount() == other.hasClientQueryPropCount());
      if (hasClientQueryPropCount()) {
        result = result && getClientQueryPropCount()
            .equals(other.getClientQueryPropCount());
      }
      result = result && (hasClientSignInfo() == other.hasClientSignInfo());
      if (hasClientSignInfo()) {
        result = result && getClientSignInfo()
            .equals(other.getClientSignInfo());
      }
      result = result && (hasClientSignAward() == other.hasClientSignAward());
      if (hasClientSignAward()) {
        result = result && getClientSignAward()
            .equals(other.getClientSignAward());
      }
      result = result && (hasClientSignState() == other.hasClientSignState());
      if (hasClientSignState()) {
        result = result && getClientSignState()
            .equals(other.getClientSignState());
      }
      result = result && (hasClientLTLottery() == other.hasClientLTLottery());
      if (hasClientLTLottery()) {
        result = result && getClientLTLottery()
            .equals(other.getClientLTLottery());
      }
      result = result && (hasClientGetTSReward() == other.hasClientGetTSReward());
      if (hasClientGetTSReward()) {
        result = result && getClientGetTSReward()
            .equals(other.getClientGetTSReward());
      }
      result = result && (hasClientGetLuckInfo() == other.hasClientGetLuckInfo());
      if (hasClientGetLuckInfo()) {
        result = result && getClientGetLuckInfo()
            .equals(other.getClientGetLuckInfo());
      }
      result = result && (hasClientGetVip() == other.hasClientGetVip());
      if (hasClientGetVip()) {
        result = result && getClientGetVip()
            .equals(other.getClientGetVip());
      }
      result = result && (hasClientGetDayGift() == other.hasClientGetDayGift());
      if (hasClientGetDayGift()) {
        result = result && getClientGetDayGift()
            .equals(other.getClientGetDayGift());
      }
      result = result && (hasClientEnterSleeve() == other.hasClientEnterSleeve());
      if (hasClientEnterSleeve()) {
        result = result && getClientEnterSleeve()
            .equals(other.getClientEnterSleeve());
      }
      result = result && (hasClientSleeveSheep() == other.hasClientSleeveSheep());
      if (hasClientSleeveSheep()) {
        result = result && getClientSleeveSheep()
            .equals(other.getClientSleeveSheep());
      }
      result = result && (hasClientQueryPlayerCoin() == other.hasClientQueryPlayerCoin());
      if (hasClientQueryPlayerCoin()) {
        result = result && getClientQueryPlayerCoin()
            .equals(other.getClientQueryPlayerCoin());
      }
      result = result && (hasClientExitSleeve() == other.hasClientExitSleeve());
      if (hasClientExitSleeve()) {
        result = result && getClientExitSleeve()
            .equals(other.getClientExitSleeve());
      }
      result = result && (hasClientEnterNewSleeve() == other.hasClientEnterNewSleeve());
      if (hasClientEnterNewSleeve()) {
        result = result && getClientEnterNewSleeve()
            .equals(other.getClientEnterNewSleeve());
      }
      result = result && (hasClientNewSleeveSheep() == other.hasClientNewSleeveSheep());
      if (hasClientNewSleeveSheep()) {
        result = result && getClientNewSleeveSheep()
            .equals(other.getClientNewSleeveSheep());
      }
      result = result && (hasClientNewSleeveResult() == other.hasClientNewSleeveResult());
      if (hasClientNewSleeveResult()) {
        result = result && getClientNewSleeveResult()
            .equals(other.getClientNewSleeveResult());
      }
      result = result && (hasClientExitNewSleeve() == other.hasClientExitNewSleeve());
      if (hasClientExitNewSleeve()) {
        result = result && getClientExitNewSleeve()
            .equals(other.getClientExitNewSleeve());
      }
      result = result && (hasClient2DoCatch() == other.hasClient2DoCatch());
      if (hasClient2DoCatch()) {
        result = result && getClient2DoCatch()
            .equals(other.getClient2DoCatch());
      }
      result = result && (hasClient2PlayCards() == other.hasClient2PlayCards());
      if (hasClient2PlayCards()) {
        result = result && getClient2PlayCards()
            .equals(other.getClient2PlayCards());
      }
      result = result && (hasClient2RecoverGame() == other.hasClient2RecoverGame());
      if (hasClient2RecoverGame()) {
        result = result && getClient2RecoverGame()
            .equals(other.getClient2RecoverGame());
      }
      result = result && (hasClient2LeaveRoom() == other.hasClient2LeaveRoom());
      if (hasClient2LeaveRoom()) {
        result = result && getClient2LeaveRoom()
            .equals(other.getClient2LeaveRoom());
      }
      result = result && (hasClientMineShare() == other.hasClientMineShare());
      if (hasClientMineShare()) {
        result = result && getClientMineShare()
            .equals(other.getClientMineShare());
      }
      result = result && (hasClientGetMSAward() == other.hasClientGetMSAward());
      if (hasClientGetMSAward()) {
        result = result && getClientGetMSAward()
            .equals(other.getClientGetMSAward());
      }
      result = result && (hasClientFriendShare() == other.hasClientFriendShare());
      if (hasClientFriendShare()) {
        result = result && getClientFriendShare()
            .equals(other.getClientFriendShare());
      }
      result = result && (hasClientGetFSAward() == other.hasClientGetFSAward());
      if (hasClientGetFSAward()) {
        result = result && getClientGetFSAward()
            .equals(other.getClientGetFSAward());
      }
      result = result && (hasClientGetShareTask() == other.hasClientGetShareTask());
      if (hasClientGetShareTask()) {
        result = result && getClientGetShareTask()
            .equals(other.getClientGetShareTask());
      }
      result = result && (hasClientGetShareTaskAward() == other.hasClientGetShareTaskAward());
      if (hasClientGetShareTaskAward()) {
        result = result && getClientGetShareTaskAward()
            .equals(other.getClientGetShareTaskAward());
      }
      result = result && (hasClientQueryReviveInfo() == other.hasClientQueryReviveInfo());
      if (hasClientQueryReviveInfo()) {
        result = result && getClientQueryReviveInfo()
            .equals(other.getClientQueryReviveInfo());
      }
      result = result && (hasClientUseRevive() == other.hasClientUseRevive());
      if (hasClientUseRevive()) {
        result = result && getClientUseRevive()
            .equals(other.getClientUseRevive());
      }
      result = result && (hasClientReviveFirstCharge() == other.hasClientReviveFirstCharge());
      if (hasClientReviveFirstCharge()) {
        result = result && getClientReviveFirstCharge()
            .equals(other.getClientReviveFirstCharge());
      }
      result = result && (hasClientReviveDayGift() == other.hasClientReviveDayGift());
      if (hasClientReviveDayGift()) {
        result = result && getClientReviveDayGift()
            .equals(other.getClientReviveDayGift());
      }
      result = result && (hasClientGetRedTip() == other.hasClientGetRedTip());
      if (hasClientGetRedTip()) {
        result = result && getClientGetRedTip()
            .equals(other.getClientGetRedTip());
      }
      result = result && (hasClientGetMatchInfo() == other.hasClientGetMatchInfo());
      if (hasClientGetMatchInfo()) {
        result = result && getClientGetMatchInfo()
            .equals(other.getClientGetMatchInfo());
      }
      result = result && (hasClientGetMatchDetail() == other.hasClientGetMatchDetail());
      if (hasClientGetMatchDetail()) {
        result = result && getClientGetMatchDetail()
            .equals(other.getClientGetMatchDetail());
      }
      result = result && (hasClientGetMatchRecord() == other.hasClientGetMatchRecord());
      if (hasClientGetMatchRecord()) {
        result = result && getClientGetMatchRecord()
            .equals(other.getClientGetMatchRecord());
      }
      result = result && (hasClientMatchApply() == other.hasClientMatchApply());
      if (hasClientMatchApply()) {
        result = result && getClientMatchApply()
            .equals(other.getClientMatchApply());
      }
      result = result && (hasClientMatchCancel() == other.hasClientMatchCancel());
      if (hasClientMatchCancel()) {
        result = result && getClientMatchCancel()
            .equals(other.getClientMatchCancel());
      }
      result = result && (hasClientOwnMatchRecord() == other.hasClientOwnMatchRecord());
      if (hasClientOwnMatchRecord()) {
        result = result && getClientOwnMatchRecord()
            .equals(other.getClientOwnMatchRecord());
      }
      result = result && (hasClientApplyListChange() == other.hasClientApplyListChange());
      if (hasClientApplyListChange()) {
        result = result && getClientApplyListChange()
            .equals(other.getClientApplyListChange());
      }
      result = result && (hasClientMatchScore() == other.hasClientMatchScore());
      if (hasClientMatchScore()) {
        result = result && getClientMatchScore()
            .equals(other.getClientMatchScore());
      }
      result = result && (hasClientMatchConfig() == other.hasClientMatchConfig());
      if (hasClientMatchConfig()) {
        result = result && getClientMatchConfig()
            .equals(other.getClientMatchConfig());
      }
      result = result && (hasClientGetKillCell() == other.hasClientGetKillCell());
      if (hasClientGetKillCell()) {
        result = result && getClientGetKillCell()
            .equals(other.getClientGetKillCell());
      }
      result = result && (hasClientEnterKillCell() == other.hasClientEnterKillCell());
      if (hasClientEnterKillCell()) {
        result = result && getClientEnterKillCell()
            .equals(other.getClientEnterKillCell());
      }
      result = result && (hasClientQuitKillCell() == other.hasClientQuitKillCell());
      if (hasClientQuitKillCell()) {
        result = result && getClientQuitKillCell()
            .equals(other.getClientQuitKillCell());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId();
      hash = (37 * hash) + METHODID_FIELD_NUMBER;
      hash = (53 * hash) + getMethodId();
      if (hasClientPlayerInfo()) {
        hash = (37 * hash) + CLIENTPLAYERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientPlayerInfo().hashCode();
      }
      if (hasClientReturnHallHeartBeat()) {
        hash = (37 * hash) + CLIENTRETURNHALLHEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getClientReturnHallHeartBeat().hashCode();
      }
      if (hasClientReturnGameHeartBeat()) {
        hash = (37 * hash) + CLIENTRETURNGAMEHEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getClientReturnGameHeartBeat().hashCode();
      }
      if (hasClientGetUserInfo()) {
        hash = (37 * hash) + CLIENTGETUSERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetUserInfo().hashCode();
      }
      if (hasClientNewLogin()) {
        hash = (37 * hash) + CLIENTNEWLOGIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientNewLogin().hashCode();
      }
      if (hasClientQuickJoin()) {
        hash = (37 * hash) + CLIENTQUICKJOIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientQuickJoin().hashCode();
      }
      if (hasClientEnterRoom()) {
        hash = (37 * hash) + CLIENTENTERROOM_FIELD_NUMBER;
        hash = (53 * hash) + getClientEnterRoom().hashCode();
      }
      if (hasClientDoCatch()) {
        hash = (37 * hash) + CLIENTDOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getClientDoCatch().hashCode();
      }
      if (hasClientPlayCards()) {
        hash = (37 * hash) + CLIENTPLAYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getClientPlayCards().hashCode();
      }
      if (hasClientRecoverGame()) {
        hash = (37 * hash) + CLIENTRECOVERGAME_FIELD_NUMBER;
        hash = (53 * hash) + getClientRecoverGame().hashCode();
      }
      if (hasClientAutoPlay()) {
        hash = (37 * hash) + CLIENTAUTOPLAY_FIELD_NUMBER;
        hash = (53 * hash) + getClientAutoPlay().hashCode();
      }
      if (hasClientLeaveRoom()) {
        hash = (37 * hash) + CLIENTLEAVEROOM_FIELD_NUMBER;
        hash = (53 * hash) + getClientLeaveRoom().hashCode();
      }
      if (hasClientCancleJoin()) {
        hash = (37 * hash) + CLIENTCANCLEJOIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientCancleJoin().hashCode();
      }
      if (hasClientQueryIndex()) {
        hash = (37 * hash) + CLIENTQUERYINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryIndex().hashCode();
      }
      if (hasClientRetryReturnGame()) {
        hash = (37 * hash) + CLIENTRETRYRETURNGAME_FIELD_NUMBER;
        hash = (53 * hash) + getClientRetryReturnGame().hashCode();
      }
      if (hasClientGetRankList()) {
        hash = (37 * hash) + CLIENTGETRANKLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetRankList().hashCode();
      }
      if (hasClientGetRoomConfig()) {
        hash = (37 * hash) + CLIENTGETROOMCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetRoomConfig().hashCode();
      }
      if (hasClientRewardMessage()) {
        hash = (37 * hash) + CLIENTREWARDMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientRewardMessage().hashCode();
      }
      if (hasClientGetMonthCardDiamond()) {
        hash = (37 * hash) + CLIENTGETMONTHCARDDIAMOND_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMonthCardDiamond().hashCode();
      }
      if (hasClientGetLotteryCount()) {
        hash = (37 * hash) + CLIENTGETLOTTERYCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetLotteryCount().hashCode();
      }
      if (hasClientGetRoomInfo()) {
        hash = (37 * hash) + CLIENTGETROOMINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetRoomInfo().hashCode();
      }
      if (hasClientSendTelCode()) {
        hash = (37 * hash) + CLIENTSENDTELCODE_FIELD_NUMBER;
        hash = (53 * hash) + getClientSendTelCode().hashCode();
      }
      if (hasClientVerifyTelCode()) {
        hash = (37 * hash) + CLIENTVERIFYTELCODE_FIELD_NUMBER;
        hash = (53 * hash) + getClientVerifyTelCode().hashCode();
      }
      if (hasClientSharePackage()) {
        hash = (37 * hash) + CLIENTSHAREPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientSharePackage().hashCode();
      }
      if (hasClientGetAwardList()) {
        hash = (37 * hash) + CLIENTGETAWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetAwardList().hashCode();
      }
      if (hasClientPlayerLogout()) {
        hash = (37 * hash) + CLIENTPLAYERLOGOUT_FIELD_NUMBER;
        hash = (53 * hash) + getClientPlayerLogout().hashCode();
      }
      if (hasClientCheckConnect()) {
        hash = (37 * hash) + CLIENTCHECKCONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getClientCheckConnect().hashCode();
      }
      if (hasClientGetPFList()) {
        hash = (37 * hash) + CLIENTGETPFLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetPFList().hashCode();
      }
      if (hasClientChoosePF()) {
        hash = (37 * hash) + CLIENTCHOOSEPF_FIELD_NUMBER;
        hash = (53 * hash) + getClientChoosePF().hashCode();
      }
      if (hasClientGetHistoryRank()) {
        hash = (37 * hash) + CLIENTGETHISTORYRANK_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetHistoryRank().hashCode();
      }
      if (hasClientH5Reward()) {
        hash = (37 * hash) + CLIENTH5REWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientH5Reward().hashCode();
      }
      if (hasClientNewDrawWinCup()) {
        hash = (37 * hash) + CLIENTNEWDRAWWINCUP_FIELD_NUMBER;
        hash = (53 * hash) + getClientNewDrawWinCup().hashCode();
      }
      if (hasClientGetNewHallInfo()) {
        hash = (37 * hash) + CLIENTGETNEWHALLINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetNewHallInfo().hashCode();
      }
      if (hasClientLuckWall()) {
        hash = (37 * hash) + CLIENTLUCKWALL_FIELD_NUMBER;
        hash = (53 * hash) + getClientLuckWall().hashCode();
      }
      if (hasClientCdkeyAward()) {
        hash = (37 * hash) + CLIENTCDKEYAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientCdkeyAward().hashCode();
      }
      if (hasClientGetStoreInfo()) {
        hash = (37 * hash) + CLIENTGETSTOREINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetStoreInfo().hashCode();
      }
      if (hasClientConvertGoods()) {
        hash = (37 * hash) + CLIENTCONVERTGOODS_FIELD_NUMBER;
        hash = (53 * hash) + getClientConvertGoods().hashCode();
      }
      if (hasClientWXPayResultQuery()) {
        hash = (37 * hash) + CLIENTWXPAYRESULTQUERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientWXPayResultQuery().hashCode();
      }
      if (hasClientBuyOrderGoods()) {
        hash = (37 * hash) + CLIENTBUYORDERGOODS_FIELD_NUMBER;
        hash = (53 * hash) + getClientBuyOrderGoods().hashCode();
      }
      if (hasClientGetFirstCharge()) {
        hash = (37 * hash) + CLIENTGETFIRSTCHARGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetFirstCharge().hashCode();
      }
      if (hasClientGetDailyGift()) {
        hash = (37 * hash) + CLIENTGETDAILYGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetDailyGift().hashCode();
      }
      if (hasClientGetMonthCard()) {
        hash = (37 * hash) + CLIENTGETMONTHCARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMonthCard().hashCode();
      }
      if (hasClientGetResurgenceGift()) {
        hash = (37 * hash) + CLIENTGETRESURGENCEGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetResurgenceGift().hashCode();
      }
      if (hasClientGetConvertMessage()) {
        hash = (37 * hash) + CLIENTGETCONVERTMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetConvertMessage().hashCode();
      }
      if (hasClientNewBuyOrder()) {
        hash = (37 * hash) + CLIENTNEWBUYORDER_FIELD_NUMBER;
        hash = (53 * hash) + getClientNewBuyOrder().hashCode();
      }
      if (hasClientNewConvert()) {
        hash = (37 * hash) + CLIENTNEWCONVERT_FIELD_NUMBER;
        hash = (53 * hash) + getClientNewConvert().hashCode();
      }
      if (hasClientAlipayAccount()) {
        hash = (37 * hash) + CLIENTALIPAYACCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getClientAlipayAccount().hashCode();
      }
      if (hasClientPayOptions()) {
        hash = (37 * hash) + CLIENTPAYOPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getClientPayOptions().hashCode();
      }
      if (hasClientIdVerify()) {
        hash = (37 * hash) + CLIENTIDVERIFY_FIELD_NUMBER;
        hash = (53 * hash) + getClientIdVerify().hashCode();
      }
      if (hasClientVerifyAward()) {
        hash = (37 * hash) + CLIENTVERIFYAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientVerifyAward().hashCode();
      }
      if (hasClientMiniAppPay()) {
        hash = (37 * hash) + CLIENTMINIAPPPAY_FIELD_NUMBER;
        hash = (53 * hash) + getClientMiniAppPay().hashCode();
      }
      if (hasClientUnionAccount()) {
        hash = (37 * hash) + CLIENTUNIONACCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getClientUnionAccount().hashCode();
      }
      if (hasClientGetAnnounce()) {
        hash = (37 * hash) + CLIENTGETANNOUNCE_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetAnnounce().hashCode();
      }
      if (hasClientGetMail()) {
        hash = (37 * hash) + CLIENTGETMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMail().hashCode();
      }
      if (hasClientGetMailReward()) {
        hash = (37 * hash) + CLIENTGETMAILREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMailReward().hashCode();
      }
      if (hasClientDelMail()) {
        hash = (37 * hash) + CLIENTDELMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientDelMail().hashCode();
      }
      if (hasClientReadMail()) {
        hash = (37 * hash) + CLIENTREADMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientReadMail().hashCode();
      }
      if (hasClientDel2R()) {
        hash = (37 * hash) + CLIENTDEL2R_FIELD_NUMBER;
        hash = (53 * hash) + getClientDel2R().hashCode();
      }
      if (hasClientQueryDailyTask()) {
        hash = (37 * hash) + CLIENTQUERYDAILYTASK_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryDailyTask().hashCode();
      }
      if (hasClientGetNoviceReward()) {
        hash = (37 * hash) + CLIENTGETNOVICEREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetNoviceReward().hashCode();
      }
      if (hasClientQueryNoviceTask()) {
        hash = (37 * hash) + CLIENTQUERYNOVICETASK_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryNoviceTask().hashCode();
      }
      if (hasClientGetDTAward()) {
        hash = (37 * hash) + CLIENTGETDTAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetDTAward().hashCode();
      }
      if (hasClientGetReceiveAddr()) {
        hash = (37 * hash) + CLIENTGETRECEIVEADDR_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetReceiveAddr().hashCode();
      }
      if (hasClientAlterReceiveAddr()) {
        hash = (37 * hash) + CLIENTALTERRECEIVEADDR_FIELD_NUMBER;
        hash = (53 * hash) + getClientAlterReceiveAddr().hashCode();
      }
      if (hasClientSnatchList()) {
        hash = (37 * hash) + CLIENTSNATCHLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchList().hashCode();
      }
      if (hasClientSnatchItemDetail()) {
        hash = (37 * hash) + CLIENTSNATCHITEMDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchItemDetail().hashCode();
      }
      if (hasClientSnatchBet()) {
        hash = (37 * hash) + CLIENTSNATCHBET_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchBet().hashCode();
      }
      if (hasClientSnatchAwardList()) {
        hash = (37 * hash) + CLIENTSNATCHAWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchAwardList().hashCode();
      }
      if (hasClientOwnSnatchRecord()) {
        hash = (37 * hash) + CLIENTOWNSNATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getClientOwnSnatchRecord().hashCode();
      }
      if (hasClientSnatchItemHistory()) {
        hash = (37 * hash) + CLIENTSNATCHITEMHISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchItemHistory().hashCode();
      }
      if (hasClientSnatchHistoryDetail()) {
        hash = (37 * hash) + CLIENTSNATCHHISTORYDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchHistoryDetail().hashCode();
      }
      if (hasClientSnatchGetAward()) {
        hash = (37 * hash) + CLIENTSNATCHGETAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchGetAward().hashCode();
      }
      if (hasClientEnterDG()) {
        hash = (37 * hash) + CLIENTENTERDG_FIELD_NUMBER;
        hash = (53 * hash) + getClientEnterDG().hashCode();
      }
      if (hasClientDGLottery()) {
        hash = (37 * hash) + CLIENTDGLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientDGLottery().hashCode();
      }
      if (hasClientResetLottery()) {
        hash = (37 * hash) + CLIENTRESETLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientResetLottery().hashCode();
      }
      if (hasClientExitDG()) {
        hash = (37 * hash) + CLIENTEXITDG_FIELD_NUMBER;
        hash = (53 * hash) + getClientExitDG().hashCode();
      }
      if (hasClientOpenDG()) {
        hash = (37 * hash) + CLIENTOPENDG_FIELD_NUMBER;
        hash = (53 * hash) + getClientOpenDG().hashCode();
      }
      if (hasClientOpenDD()) {
        hash = (37 * hash) + CLIENTOPENDD_FIELD_NUMBER;
        hash = (53 * hash) + getClientOpenDD().hashCode();
      }
      if (hasClientDDLottery()) {
        hash = (37 * hash) + CLIENTDDLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientDDLottery().hashCode();
      }
      if (hasClientExitDD()) {
        hash = (37 * hash) + CLIENTEXITDD_FIELD_NUMBER;
        hash = (53 * hash) + getClientExitDD().hashCode();
      }
      if (hasClientQueryProp()) {
        hash = (37 * hash) + CLIENTQUERYPROP_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryProp().hashCode();
      }
      if (hasClientUseProp()) {
        hash = (37 * hash) + CLIENTUSEPROP_FIELD_NUMBER;
        hash = (53 * hash) + getClientUseProp().hashCode();
      }
      if (hasClientQueryPropCount()) {
        hash = (37 * hash) + CLIENTQUERYPROPCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryPropCount().hashCode();
      }
      if (hasClientSignInfo()) {
        hash = (37 * hash) + CLIENTSIGNINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientSignInfo().hashCode();
      }
      if (hasClientSignAward()) {
        hash = (37 * hash) + CLIENTSIGNAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientSignAward().hashCode();
      }
      if (hasClientSignState()) {
        hash = (37 * hash) + CLIENTSIGNSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getClientSignState().hashCode();
      }
      if (hasClientLTLottery()) {
        hash = (37 * hash) + CLIENTLTLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientLTLottery().hashCode();
      }
      if (hasClientGetTSReward()) {
        hash = (37 * hash) + CLIENTGETTSREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetTSReward().hashCode();
      }
      if (hasClientGetLuckInfo()) {
        hash = (37 * hash) + CLIENTGETLUCKINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetLuckInfo().hashCode();
      }
      if (hasClientGetVip()) {
        hash = (37 * hash) + CLIENTGETVIP_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetVip().hashCode();
      }
      if (hasClientGetDayGift()) {
        hash = (37 * hash) + CLIENTGETDAYGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetDayGift().hashCode();
      }
      if (hasClientEnterSleeve()) {
        hash = (37 * hash) + CLIENTENTERSLEEVE_FIELD_NUMBER;
        hash = (53 * hash) + getClientEnterSleeve().hashCode();
      }
      if (hasClientSleeveSheep()) {
        hash = (37 * hash) + CLIENTSLEEVESHEEP_FIELD_NUMBER;
        hash = (53 * hash) + getClientSleeveSheep().hashCode();
      }
      if (hasClientQueryPlayerCoin()) {
        hash = (37 * hash) + CLIENTQUERYPLAYERCOIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryPlayerCoin().hashCode();
      }
      if (hasClientExitSleeve()) {
        hash = (37 * hash) + CLIENTEXITSLEEVE_FIELD_NUMBER;
        hash = (53 * hash) + getClientExitSleeve().hashCode();
      }
      if (hasClientEnterNewSleeve()) {
        hash = (37 * hash) + CLIENTENTERNEWSLEEVE_FIELD_NUMBER;
        hash = (53 * hash) + getClientEnterNewSleeve().hashCode();
      }
      if (hasClientNewSleeveSheep()) {
        hash = (37 * hash) + CLIENTNEWSLEEVESHEEP_FIELD_NUMBER;
        hash = (53 * hash) + getClientNewSleeveSheep().hashCode();
      }
      if (hasClientNewSleeveResult()) {
        hash = (37 * hash) + CLIENTNEWSLEEVERESULT_FIELD_NUMBER;
        hash = (53 * hash) + getClientNewSleeveResult().hashCode();
      }
      if (hasClientExitNewSleeve()) {
        hash = (37 * hash) + CLIENTEXITNEWSLEEVE_FIELD_NUMBER;
        hash = (53 * hash) + getClientExitNewSleeve().hashCode();
      }
      if (hasClient2DoCatch()) {
        hash = (37 * hash) + CLIENT_2_DOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getClient2DoCatch().hashCode();
      }
      if (hasClient2PlayCards()) {
        hash = (37 * hash) + CLIENT_2_PLAYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getClient2PlayCards().hashCode();
      }
      if (hasClient2RecoverGame()) {
        hash = (37 * hash) + CLIENT_2_RECOVERGAME_FIELD_NUMBER;
        hash = (53 * hash) + getClient2RecoverGame().hashCode();
      }
      if (hasClient2LeaveRoom()) {
        hash = (37 * hash) + CLIENT_2_LEAVEROOM_FIELD_NUMBER;
        hash = (53 * hash) + getClient2LeaveRoom().hashCode();
      }
      if (hasClientMineShare()) {
        hash = (37 * hash) + CLIENTMINESHARE_FIELD_NUMBER;
        hash = (53 * hash) + getClientMineShare().hashCode();
      }
      if (hasClientGetMSAward()) {
        hash = (37 * hash) + CLIENTGETMSAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMSAward().hashCode();
      }
      if (hasClientFriendShare()) {
        hash = (37 * hash) + CLIENTFRIENDSHARE_FIELD_NUMBER;
        hash = (53 * hash) + getClientFriendShare().hashCode();
      }
      if (hasClientGetFSAward()) {
        hash = (37 * hash) + CLIENTGETFSAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetFSAward().hashCode();
      }
      if (hasClientGetShareTask()) {
        hash = (37 * hash) + CLIENTGETSHARETASK_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetShareTask().hashCode();
      }
      if (hasClientGetShareTaskAward()) {
        hash = (37 * hash) + CLIENTGETSHARETASKAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetShareTaskAward().hashCode();
      }
      if (hasClientQueryReviveInfo()) {
        hash = (37 * hash) + CLIENTQUERYREVIVEINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryReviveInfo().hashCode();
      }
      if (hasClientUseRevive()) {
        hash = (37 * hash) + CLIENTUSEREVIVE_FIELD_NUMBER;
        hash = (53 * hash) + getClientUseRevive().hashCode();
      }
      if (hasClientReviveFirstCharge()) {
        hash = (37 * hash) + CLIENTREVIVEFIRSTCHARGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientReviveFirstCharge().hashCode();
      }
      if (hasClientReviveDayGift()) {
        hash = (37 * hash) + CLIENTREVIVEDAYGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getClientReviveDayGift().hashCode();
      }
      if (hasClientGetRedTip()) {
        hash = (37 * hash) + CLIENTGETREDTIP_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetRedTip().hashCode();
      }
      if (hasClientGetMatchInfo()) {
        hash = (37 * hash) + CLIENTGETMATCHINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMatchInfo().hashCode();
      }
      if (hasClientGetMatchDetail()) {
        hash = (37 * hash) + CLIENTGETMATCHDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMatchDetail().hashCode();
      }
      if (hasClientGetMatchRecord()) {
        hash = (37 * hash) + CLIENTGETMATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMatchRecord().hashCode();
      }
      if (hasClientMatchApply()) {
        hash = (37 * hash) + CLIENTMATCHAPPLY_FIELD_NUMBER;
        hash = (53 * hash) + getClientMatchApply().hashCode();
      }
      if (hasClientMatchCancel()) {
        hash = (37 * hash) + CLIENTMATCHCANCEL_FIELD_NUMBER;
        hash = (53 * hash) + getClientMatchCancel().hashCode();
      }
      if (hasClientOwnMatchRecord()) {
        hash = (37 * hash) + CLIENTOWNMATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getClientOwnMatchRecord().hashCode();
      }
      if (hasClientApplyListChange()) {
        hash = (37 * hash) + CLIENTAPPLYLISTCHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientApplyListChange().hashCode();
      }
      if (hasClientMatchScore()) {
        hash = (37 * hash) + CLIENTMATCHSCORE_FIELD_NUMBER;
        hash = (53 * hash) + getClientMatchScore().hashCode();
      }
      if (hasClientMatchConfig()) {
        hash = (37 * hash) + CLIENTMATCHCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getClientMatchConfig().hashCode();
      }
      if (hasClientGetKillCell()) {
        hash = (37 * hash) + CLIENTGETKILLCELL_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetKillCell().hashCode();
      }
      if (hasClientEnterKillCell()) {
        hash = (37 * hash) + CLIENTENTERKILLCELL_FIELD_NUMBER;
        hash = (53 * hash) + getClientEnterKillCell().hashCode();
      }
      if (hasClientQuitKillCell()) {
        hash = (37 * hash) + CLIENTQUITKILLCELL_FIELD_NUMBER;
        hash = (53 * hash) + getClientQuitKillCell().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.kys.util.netty.proto.ProtoMsg.ClientRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 所有上行请求都是clientRequest，服务器根据methodId读取具体的message内容,当 
     * </pre>
     *
     * Protobuf type {@code com.kys.util.netty.proto.ClientRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.kys.util.netty.proto.ClientRequest)
        com.kys.util.netty.proto.ProtoMsg.ClientRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kys.util.netty.proto.ProtoMsg.ClientRequest.class, com.kys.util.netty.proto.ProtoMsg.ClientRequest.Builder.class);
      }

      // Construct using com.kys.util.netty.proto.ProtoMsg.ClientRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        userId_ = 0;

        methodId_ = 0;

        if (clientPlayerInfoBuilder_ == null) {
          clientPlayerInfo_ = null;
        } else {
          clientPlayerInfo_ = null;
          clientPlayerInfoBuilder_ = null;
        }
        if (clientReturnHallHeartBeatBuilder_ == null) {
          clientReturnHallHeartBeat_ = null;
        } else {
          clientReturnHallHeartBeat_ = null;
          clientReturnHallHeartBeatBuilder_ = null;
        }
        if (clientReturnGameHeartBeatBuilder_ == null) {
          clientReturnGameHeartBeat_ = null;
        } else {
          clientReturnGameHeartBeat_ = null;
          clientReturnGameHeartBeatBuilder_ = null;
        }
        if (clientGetUserInfoBuilder_ == null) {
          clientGetUserInfo_ = null;
        } else {
          clientGetUserInfo_ = null;
          clientGetUserInfoBuilder_ = null;
        }
        if (clientNewLoginBuilder_ == null) {
          clientNewLogin_ = null;
        } else {
          clientNewLogin_ = null;
          clientNewLoginBuilder_ = null;
        }
        if (clientQuickJoinBuilder_ == null) {
          clientQuickJoin_ = null;
        } else {
          clientQuickJoin_ = null;
          clientQuickJoinBuilder_ = null;
        }
        if (clientEnterRoomBuilder_ == null) {
          clientEnterRoom_ = null;
        } else {
          clientEnterRoom_ = null;
          clientEnterRoomBuilder_ = null;
        }
        if (clientDoCatchBuilder_ == null) {
          clientDoCatch_ = null;
        } else {
          clientDoCatch_ = null;
          clientDoCatchBuilder_ = null;
        }
        if (clientPlayCardsBuilder_ == null) {
          clientPlayCards_ = null;
        } else {
          clientPlayCards_ = null;
          clientPlayCardsBuilder_ = null;
        }
        if (clientRecoverGameBuilder_ == null) {
          clientRecoverGame_ = null;
        } else {
          clientRecoverGame_ = null;
          clientRecoverGameBuilder_ = null;
        }
        if (clientAutoPlayBuilder_ == null) {
          clientAutoPlay_ = null;
        } else {
          clientAutoPlay_ = null;
          clientAutoPlayBuilder_ = null;
        }
        if (clientLeaveRoomBuilder_ == null) {
          clientLeaveRoom_ = null;
        } else {
          clientLeaveRoom_ = null;
          clientLeaveRoomBuilder_ = null;
        }
        if (clientCancleJoinBuilder_ == null) {
          clientCancleJoin_ = null;
        } else {
          clientCancleJoin_ = null;
          clientCancleJoinBuilder_ = null;
        }
        if (clientQueryIndexBuilder_ == null) {
          clientQueryIndex_ = null;
        } else {
          clientQueryIndex_ = null;
          clientQueryIndexBuilder_ = null;
        }
        if (clientRetryReturnGameBuilder_ == null) {
          clientRetryReturnGame_ = null;
        } else {
          clientRetryReturnGame_ = null;
          clientRetryReturnGameBuilder_ = null;
        }
        if (clientGetRankListBuilder_ == null) {
          clientGetRankList_ = null;
        } else {
          clientGetRankList_ = null;
          clientGetRankListBuilder_ = null;
        }
        if (clientGetRoomConfigBuilder_ == null) {
          clientGetRoomConfig_ = null;
        } else {
          clientGetRoomConfig_ = null;
          clientGetRoomConfigBuilder_ = null;
        }
        if (clientRewardMessageBuilder_ == null) {
          clientRewardMessage_ = null;
        } else {
          clientRewardMessage_ = null;
          clientRewardMessageBuilder_ = null;
        }
        if (clientGetMonthCardDiamondBuilder_ == null) {
          clientGetMonthCardDiamond_ = null;
        } else {
          clientGetMonthCardDiamond_ = null;
          clientGetMonthCardDiamondBuilder_ = null;
        }
        if (clientGetLotteryCountBuilder_ == null) {
          clientGetLotteryCount_ = null;
        } else {
          clientGetLotteryCount_ = null;
          clientGetLotteryCountBuilder_ = null;
        }
        if (clientGetRoomInfoBuilder_ == null) {
          clientGetRoomInfo_ = null;
        } else {
          clientGetRoomInfo_ = null;
          clientGetRoomInfoBuilder_ = null;
        }
        if (clientSendTelCodeBuilder_ == null) {
          clientSendTelCode_ = null;
        } else {
          clientSendTelCode_ = null;
          clientSendTelCodeBuilder_ = null;
        }
        if (clientVerifyTelCodeBuilder_ == null) {
          clientVerifyTelCode_ = null;
        } else {
          clientVerifyTelCode_ = null;
          clientVerifyTelCodeBuilder_ = null;
        }
        if (clientSharePackageBuilder_ == null) {
          clientSharePackage_ = null;
        } else {
          clientSharePackage_ = null;
          clientSharePackageBuilder_ = null;
        }
        if (clientGetAwardListBuilder_ == null) {
          clientGetAwardList_ = null;
        } else {
          clientGetAwardList_ = null;
          clientGetAwardListBuilder_ = null;
        }
        if (clientPlayerLogoutBuilder_ == null) {
          clientPlayerLogout_ = null;
        } else {
          clientPlayerLogout_ = null;
          clientPlayerLogoutBuilder_ = null;
        }
        if (clientCheckConnectBuilder_ == null) {
          clientCheckConnect_ = null;
        } else {
          clientCheckConnect_ = null;
          clientCheckConnectBuilder_ = null;
        }
        if (clientGetPFListBuilder_ == null) {
          clientGetPFList_ = null;
        } else {
          clientGetPFList_ = null;
          clientGetPFListBuilder_ = null;
        }
        if (clientChoosePFBuilder_ == null) {
          clientChoosePF_ = null;
        } else {
          clientChoosePF_ = null;
          clientChoosePFBuilder_ = null;
        }
        if (clientGetHistoryRankBuilder_ == null) {
          clientGetHistoryRank_ = null;
        } else {
          clientGetHistoryRank_ = null;
          clientGetHistoryRankBuilder_ = null;
        }
        if (clientH5RewardBuilder_ == null) {
          clientH5Reward_ = null;
        } else {
          clientH5Reward_ = null;
          clientH5RewardBuilder_ = null;
        }
        if (clientNewDrawWinCupBuilder_ == null) {
          clientNewDrawWinCup_ = null;
        } else {
          clientNewDrawWinCup_ = null;
          clientNewDrawWinCupBuilder_ = null;
        }
        if (clientGetNewHallInfoBuilder_ == null) {
          clientGetNewHallInfo_ = null;
        } else {
          clientGetNewHallInfo_ = null;
          clientGetNewHallInfoBuilder_ = null;
        }
        if (clientLuckWallBuilder_ == null) {
          clientLuckWall_ = null;
        } else {
          clientLuckWall_ = null;
          clientLuckWallBuilder_ = null;
        }
        if (clientCdkeyAwardBuilder_ == null) {
          clientCdkeyAward_ = null;
        } else {
          clientCdkeyAward_ = null;
          clientCdkeyAwardBuilder_ = null;
        }
        if (clientGetStoreInfoBuilder_ == null) {
          clientGetStoreInfo_ = null;
        } else {
          clientGetStoreInfo_ = null;
          clientGetStoreInfoBuilder_ = null;
        }
        if (clientConvertGoodsBuilder_ == null) {
          clientConvertGoods_ = null;
        } else {
          clientConvertGoods_ = null;
          clientConvertGoodsBuilder_ = null;
        }
        if (clientWXPayResultQueryBuilder_ == null) {
          clientWXPayResultQuery_ = null;
        } else {
          clientWXPayResultQuery_ = null;
          clientWXPayResultQueryBuilder_ = null;
        }
        if (clientBuyOrderGoodsBuilder_ == null) {
          clientBuyOrderGoods_ = null;
        } else {
          clientBuyOrderGoods_ = null;
          clientBuyOrderGoodsBuilder_ = null;
        }
        if (clientGetFirstChargeBuilder_ == null) {
          clientGetFirstCharge_ = null;
        } else {
          clientGetFirstCharge_ = null;
          clientGetFirstChargeBuilder_ = null;
        }
        if (clientGetDailyGiftBuilder_ == null) {
          clientGetDailyGift_ = null;
        } else {
          clientGetDailyGift_ = null;
          clientGetDailyGiftBuilder_ = null;
        }
        if (clientGetMonthCardBuilder_ == null) {
          clientGetMonthCard_ = null;
        } else {
          clientGetMonthCard_ = null;
          clientGetMonthCardBuilder_ = null;
        }
        if (clientGetResurgenceGiftBuilder_ == null) {
          clientGetResurgenceGift_ = null;
        } else {
          clientGetResurgenceGift_ = null;
          clientGetResurgenceGiftBuilder_ = null;
        }
        if (clientGetConvertMessageBuilder_ == null) {
          clientGetConvertMessage_ = null;
        } else {
          clientGetConvertMessage_ = null;
          clientGetConvertMessageBuilder_ = null;
        }
        if (clientNewBuyOrderBuilder_ == null) {
          clientNewBuyOrder_ = null;
        } else {
          clientNewBuyOrder_ = null;
          clientNewBuyOrderBuilder_ = null;
        }
        if (clientNewConvertBuilder_ == null) {
          clientNewConvert_ = null;
        } else {
          clientNewConvert_ = null;
          clientNewConvertBuilder_ = null;
        }
        if (clientAlipayAccountBuilder_ == null) {
          clientAlipayAccount_ = null;
        } else {
          clientAlipayAccount_ = null;
          clientAlipayAccountBuilder_ = null;
        }
        if (clientPayOptionsBuilder_ == null) {
          clientPayOptions_ = null;
        } else {
          clientPayOptions_ = null;
          clientPayOptionsBuilder_ = null;
        }
        if (clientIdVerifyBuilder_ == null) {
          clientIdVerify_ = null;
        } else {
          clientIdVerify_ = null;
          clientIdVerifyBuilder_ = null;
        }
        if (clientVerifyAwardBuilder_ == null) {
          clientVerifyAward_ = null;
        } else {
          clientVerifyAward_ = null;
          clientVerifyAwardBuilder_ = null;
        }
        if (clientMiniAppPayBuilder_ == null) {
          clientMiniAppPay_ = null;
        } else {
          clientMiniAppPay_ = null;
          clientMiniAppPayBuilder_ = null;
        }
        if (clientUnionAccountBuilder_ == null) {
          clientUnionAccount_ = null;
        } else {
          clientUnionAccount_ = null;
          clientUnionAccountBuilder_ = null;
        }
        if (clientGetAnnounceBuilder_ == null) {
          clientGetAnnounce_ = null;
        } else {
          clientGetAnnounce_ = null;
          clientGetAnnounceBuilder_ = null;
        }
        if (clientGetMailBuilder_ == null) {
          clientGetMail_ = null;
        } else {
          clientGetMail_ = null;
          clientGetMailBuilder_ = null;
        }
        if (clientGetMailRewardBuilder_ == null) {
          clientGetMailReward_ = null;
        } else {
          clientGetMailReward_ = null;
          clientGetMailRewardBuilder_ = null;
        }
        if (clientDelMailBuilder_ == null) {
          clientDelMail_ = null;
        } else {
          clientDelMail_ = null;
          clientDelMailBuilder_ = null;
        }
        if (clientReadMailBuilder_ == null) {
          clientReadMail_ = null;
        } else {
          clientReadMail_ = null;
          clientReadMailBuilder_ = null;
        }
        if (clientDel2RBuilder_ == null) {
          clientDel2R_ = null;
        } else {
          clientDel2R_ = null;
          clientDel2RBuilder_ = null;
        }
        if (clientQueryDailyTaskBuilder_ == null) {
          clientQueryDailyTask_ = null;
        } else {
          clientQueryDailyTask_ = null;
          clientQueryDailyTaskBuilder_ = null;
        }
        if (clientGetNoviceRewardBuilder_ == null) {
          clientGetNoviceReward_ = null;
        } else {
          clientGetNoviceReward_ = null;
          clientGetNoviceRewardBuilder_ = null;
        }
        if (clientQueryNoviceTaskBuilder_ == null) {
          clientQueryNoviceTask_ = null;
        } else {
          clientQueryNoviceTask_ = null;
          clientQueryNoviceTaskBuilder_ = null;
        }
        if (clientGetDTAwardBuilder_ == null) {
          clientGetDTAward_ = null;
        } else {
          clientGetDTAward_ = null;
          clientGetDTAwardBuilder_ = null;
        }
        if (clientGetReceiveAddrBuilder_ == null) {
          clientGetReceiveAddr_ = null;
        } else {
          clientGetReceiveAddr_ = null;
          clientGetReceiveAddrBuilder_ = null;
        }
        if (clientAlterReceiveAddrBuilder_ == null) {
          clientAlterReceiveAddr_ = null;
        } else {
          clientAlterReceiveAddr_ = null;
          clientAlterReceiveAddrBuilder_ = null;
        }
        if (clientSnatchListBuilder_ == null) {
          clientSnatchList_ = null;
        } else {
          clientSnatchList_ = null;
          clientSnatchListBuilder_ = null;
        }
        if (clientSnatchItemDetailBuilder_ == null) {
          clientSnatchItemDetail_ = null;
        } else {
          clientSnatchItemDetail_ = null;
          clientSnatchItemDetailBuilder_ = null;
        }
        if (clientSnatchBetBuilder_ == null) {
          clientSnatchBet_ = null;
        } else {
          clientSnatchBet_ = null;
          clientSnatchBetBuilder_ = null;
        }
        if (clientSnatchAwardListBuilder_ == null) {
          clientSnatchAwardList_ = null;
        } else {
          clientSnatchAwardList_ = null;
          clientSnatchAwardListBuilder_ = null;
        }
        if (clientOwnSnatchRecordBuilder_ == null) {
          clientOwnSnatchRecord_ = null;
        } else {
          clientOwnSnatchRecord_ = null;
          clientOwnSnatchRecordBuilder_ = null;
        }
        if (clientSnatchItemHistoryBuilder_ == null) {
          clientSnatchItemHistory_ = null;
        } else {
          clientSnatchItemHistory_ = null;
          clientSnatchItemHistoryBuilder_ = null;
        }
        if (clientSnatchHistoryDetailBuilder_ == null) {
          clientSnatchHistoryDetail_ = null;
        } else {
          clientSnatchHistoryDetail_ = null;
          clientSnatchHistoryDetailBuilder_ = null;
        }
        if (clientSnatchGetAwardBuilder_ == null) {
          clientSnatchGetAward_ = null;
        } else {
          clientSnatchGetAward_ = null;
          clientSnatchGetAwardBuilder_ = null;
        }
        if (clientEnterDGBuilder_ == null) {
          clientEnterDG_ = null;
        } else {
          clientEnterDG_ = null;
          clientEnterDGBuilder_ = null;
        }
        if (clientDGLotteryBuilder_ == null) {
          clientDGLottery_ = null;
        } else {
          clientDGLottery_ = null;
          clientDGLotteryBuilder_ = null;
        }
        if (clientResetLotteryBuilder_ == null) {
          clientResetLottery_ = null;
        } else {
          clientResetLottery_ = null;
          clientResetLotteryBuilder_ = null;
        }
        if (clientExitDGBuilder_ == null) {
          clientExitDG_ = null;
        } else {
          clientExitDG_ = null;
          clientExitDGBuilder_ = null;
        }
        if (clientOpenDGBuilder_ == null) {
          clientOpenDG_ = null;
        } else {
          clientOpenDG_ = null;
          clientOpenDGBuilder_ = null;
        }
        if (clientOpenDDBuilder_ == null) {
          clientOpenDD_ = null;
        } else {
          clientOpenDD_ = null;
          clientOpenDDBuilder_ = null;
        }
        if (clientDDLotteryBuilder_ == null) {
          clientDDLottery_ = null;
        } else {
          clientDDLottery_ = null;
          clientDDLotteryBuilder_ = null;
        }
        if (clientExitDDBuilder_ == null) {
          clientExitDD_ = null;
        } else {
          clientExitDD_ = null;
          clientExitDDBuilder_ = null;
        }
        if (clientQueryPropBuilder_ == null) {
          clientQueryProp_ = null;
        } else {
          clientQueryProp_ = null;
          clientQueryPropBuilder_ = null;
        }
        if (clientUsePropBuilder_ == null) {
          clientUseProp_ = null;
        } else {
          clientUseProp_ = null;
          clientUsePropBuilder_ = null;
        }
        if (clientQueryPropCountBuilder_ == null) {
          clientQueryPropCount_ = null;
        } else {
          clientQueryPropCount_ = null;
          clientQueryPropCountBuilder_ = null;
        }
        if (clientSignInfoBuilder_ == null) {
          clientSignInfo_ = null;
        } else {
          clientSignInfo_ = null;
          clientSignInfoBuilder_ = null;
        }
        if (clientSignAwardBuilder_ == null) {
          clientSignAward_ = null;
        } else {
          clientSignAward_ = null;
          clientSignAwardBuilder_ = null;
        }
        if (clientSignStateBuilder_ == null) {
          clientSignState_ = null;
        } else {
          clientSignState_ = null;
          clientSignStateBuilder_ = null;
        }
        if (clientLTLotteryBuilder_ == null) {
          clientLTLottery_ = null;
        } else {
          clientLTLottery_ = null;
          clientLTLotteryBuilder_ = null;
        }
        if (clientGetTSRewardBuilder_ == null) {
          clientGetTSReward_ = null;
        } else {
          clientGetTSReward_ = null;
          clientGetTSRewardBuilder_ = null;
        }
        if (clientGetLuckInfoBuilder_ == null) {
          clientGetLuckInfo_ = null;
        } else {
          clientGetLuckInfo_ = null;
          clientGetLuckInfoBuilder_ = null;
        }
        if (clientGetVipBuilder_ == null) {
          clientGetVip_ = null;
        } else {
          clientGetVip_ = null;
          clientGetVipBuilder_ = null;
        }
        if (clientGetDayGiftBuilder_ == null) {
          clientGetDayGift_ = null;
        } else {
          clientGetDayGift_ = null;
          clientGetDayGiftBuilder_ = null;
        }
        if (clientEnterSleeveBuilder_ == null) {
          clientEnterSleeve_ = null;
        } else {
          clientEnterSleeve_ = null;
          clientEnterSleeveBuilder_ = null;
        }
        if (clientSleeveSheepBuilder_ == null) {
          clientSleeveSheep_ = null;
        } else {
          clientSleeveSheep_ = null;
          clientSleeveSheepBuilder_ = null;
        }
        if (clientQueryPlayerCoinBuilder_ == null) {
          clientQueryPlayerCoin_ = null;
        } else {
          clientQueryPlayerCoin_ = null;
          clientQueryPlayerCoinBuilder_ = null;
        }
        if (clientExitSleeveBuilder_ == null) {
          clientExitSleeve_ = null;
        } else {
          clientExitSleeve_ = null;
          clientExitSleeveBuilder_ = null;
        }
        if (clientEnterNewSleeveBuilder_ == null) {
          clientEnterNewSleeve_ = null;
        } else {
          clientEnterNewSleeve_ = null;
          clientEnterNewSleeveBuilder_ = null;
        }
        if (clientNewSleeveSheepBuilder_ == null) {
          clientNewSleeveSheep_ = null;
        } else {
          clientNewSleeveSheep_ = null;
          clientNewSleeveSheepBuilder_ = null;
        }
        if (clientNewSleeveResultBuilder_ == null) {
          clientNewSleeveResult_ = null;
        } else {
          clientNewSleeveResult_ = null;
          clientNewSleeveResultBuilder_ = null;
        }
        if (clientExitNewSleeveBuilder_ == null) {
          clientExitNewSleeve_ = null;
        } else {
          clientExitNewSleeve_ = null;
          clientExitNewSleeveBuilder_ = null;
        }
        if (client2DoCatchBuilder_ == null) {
          client2DoCatch_ = null;
        } else {
          client2DoCatch_ = null;
          client2DoCatchBuilder_ = null;
        }
        if (client2PlayCardsBuilder_ == null) {
          client2PlayCards_ = null;
        } else {
          client2PlayCards_ = null;
          client2PlayCardsBuilder_ = null;
        }
        if (client2RecoverGameBuilder_ == null) {
          client2RecoverGame_ = null;
        } else {
          client2RecoverGame_ = null;
          client2RecoverGameBuilder_ = null;
        }
        if (client2LeaveRoomBuilder_ == null) {
          client2LeaveRoom_ = null;
        } else {
          client2LeaveRoom_ = null;
          client2LeaveRoomBuilder_ = null;
        }
        if (clientMineShareBuilder_ == null) {
          clientMineShare_ = null;
        } else {
          clientMineShare_ = null;
          clientMineShareBuilder_ = null;
        }
        if (clientGetMSAwardBuilder_ == null) {
          clientGetMSAward_ = null;
        } else {
          clientGetMSAward_ = null;
          clientGetMSAwardBuilder_ = null;
        }
        if (clientFriendShareBuilder_ == null) {
          clientFriendShare_ = null;
        } else {
          clientFriendShare_ = null;
          clientFriendShareBuilder_ = null;
        }
        if (clientGetFSAwardBuilder_ == null) {
          clientGetFSAward_ = null;
        } else {
          clientGetFSAward_ = null;
          clientGetFSAwardBuilder_ = null;
        }
        if (clientGetShareTaskBuilder_ == null) {
          clientGetShareTask_ = null;
        } else {
          clientGetShareTask_ = null;
          clientGetShareTaskBuilder_ = null;
        }
        if (clientGetShareTaskAwardBuilder_ == null) {
          clientGetShareTaskAward_ = null;
        } else {
          clientGetShareTaskAward_ = null;
          clientGetShareTaskAwardBuilder_ = null;
        }
        if (clientQueryReviveInfoBuilder_ == null) {
          clientQueryReviveInfo_ = null;
        } else {
          clientQueryReviveInfo_ = null;
          clientQueryReviveInfoBuilder_ = null;
        }
        if (clientUseReviveBuilder_ == null) {
          clientUseRevive_ = null;
        } else {
          clientUseRevive_ = null;
          clientUseReviveBuilder_ = null;
        }
        if (clientReviveFirstChargeBuilder_ == null) {
          clientReviveFirstCharge_ = null;
        } else {
          clientReviveFirstCharge_ = null;
          clientReviveFirstChargeBuilder_ = null;
        }
        if (clientReviveDayGiftBuilder_ == null) {
          clientReviveDayGift_ = null;
        } else {
          clientReviveDayGift_ = null;
          clientReviveDayGiftBuilder_ = null;
        }
        if (clientGetRedTipBuilder_ == null) {
          clientGetRedTip_ = null;
        } else {
          clientGetRedTip_ = null;
          clientGetRedTipBuilder_ = null;
        }
        if (clientGetMatchInfoBuilder_ == null) {
          clientGetMatchInfo_ = null;
        } else {
          clientGetMatchInfo_ = null;
          clientGetMatchInfoBuilder_ = null;
        }
        if (clientGetMatchDetailBuilder_ == null) {
          clientGetMatchDetail_ = null;
        } else {
          clientGetMatchDetail_ = null;
          clientGetMatchDetailBuilder_ = null;
        }
        if (clientGetMatchRecordBuilder_ == null) {
          clientGetMatchRecord_ = null;
        } else {
          clientGetMatchRecord_ = null;
          clientGetMatchRecordBuilder_ = null;
        }
        if (clientMatchApplyBuilder_ == null) {
          clientMatchApply_ = null;
        } else {
          clientMatchApply_ = null;
          clientMatchApplyBuilder_ = null;
        }
        if (clientMatchCancelBuilder_ == null) {
          clientMatchCancel_ = null;
        } else {
          clientMatchCancel_ = null;
          clientMatchCancelBuilder_ = null;
        }
        if (clientOwnMatchRecordBuilder_ == null) {
          clientOwnMatchRecord_ = null;
        } else {
          clientOwnMatchRecord_ = null;
          clientOwnMatchRecordBuilder_ = null;
        }
        if (clientApplyListChangeBuilder_ == null) {
          clientApplyListChange_ = null;
        } else {
          clientApplyListChange_ = null;
          clientApplyListChangeBuilder_ = null;
        }
        if (clientMatchScoreBuilder_ == null) {
          clientMatchScore_ = null;
        } else {
          clientMatchScore_ = null;
          clientMatchScoreBuilder_ = null;
        }
        if (clientMatchConfigBuilder_ == null) {
          clientMatchConfig_ = null;
        } else {
          clientMatchConfig_ = null;
          clientMatchConfigBuilder_ = null;
        }
        if (clientGetKillCellBuilder_ == null) {
          clientGetKillCell_ = null;
        } else {
          clientGetKillCell_ = null;
          clientGetKillCellBuilder_ = null;
        }
        if (clientEnterKillCellBuilder_ == null) {
          clientEnterKillCell_ = null;
        } else {
          clientEnterKillCell_ = null;
          clientEnterKillCellBuilder_ = null;
        }
        if (clientQuitKillCellBuilder_ == null) {
          clientQuitKillCell_ = null;
        } else {
          clientQuitKillCell_ = null;
          clientQuitKillCellBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_descriptor;
      }

      public com.kys.util.netty.proto.ProtoMsg.ClientRequest getDefaultInstanceForType() {
        return com.kys.util.netty.proto.ProtoMsg.ClientRequest.getDefaultInstance();
      }

      public com.kys.util.netty.proto.ProtoMsg.ClientRequest build() {
        com.kys.util.netty.proto.ProtoMsg.ClientRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kys.util.netty.proto.ProtoMsg.ClientRequest buildPartial() {
        com.kys.util.netty.proto.ProtoMsg.ClientRequest result = new com.kys.util.netty.proto.ProtoMsg.ClientRequest(this);
        result.userId_ = userId_;
        result.methodId_ = methodId_;
        if (clientPlayerInfoBuilder_ == null) {
          result.clientPlayerInfo_ = clientPlayerInfo_;
        } else {
          result.clientPlayerInfo_ = clientPlayerInfoBuilder_.build();
        }
        if (clientReturnHallHeartBeatBuilder_ == null) {
          result.clientReturnHallHeartBeat_ = clientReturnHallHeartBeat_;
        } else {
          result.clientReturnHallHeartBeat_ = clientReturnHallHeartBeatBuilder_.build();
        }
        if (clientReturnGameHeartBeatBuilder_ == null) {
          result.clientReturnGameHeartBeat_ = clientReturnGameHeartBeat_;
        } else {
          result.clientReturnGameHeartBeat_ = clientReturnGameHeartBeatBuilder_.build();
        }
        if (clientGetUserInfoBuilder_ == null) {
          result.clientGetUserInfo_ = clientGetUserInfo_;
        } else {
          result.clientGetUserInfo_ = clientGetUserInfoBuilder_.build();
        }
        if (clientNewLoginBuilder_ == null) {
          result.clientNewLogin_ = clientNewLogin_;
        } else {
          result.clientNewLogin_ = clientNewLoginBuilder_.build();
        }
        if (clientQuickJoinBuilder_ == null) {
          result.clientQuickJoin_ = clientQuickJoin_;
        } else {
          result.clientQuickJoin_ = clientQuickJoinBuilder_.build();
        }
        if (clientEnterRoomBuilder_ == null) {
          result.clientEnterRoom_ = clientEnterRoom_;
        } else {
          result.clientEnterRoom_ = clientEnterRoomBuilder_.build();
        }
        if (clientDoCatchBuilder_ == null) {
          result.clientDoCatch_ = clientDoCatch_;
        } else {
          result.clientDoCatch_ = clientDoCatchBuilder_.build();
        }
        if (clientPlayCardsBuilder_ == null) {
          result.clientPlayCards_ = clientPlayCards_;
        } else {
          result.clientPlayCards_ = clientPlayCardsBuilder_.build();
        }
        if (clientRecoverGameBuilder_ == null) {
          result.clientRecoverGame_ = clientRecoverGame_;
        } else {
          result.clientRecoverGame_ = clientRecoverGameBuilder_.build();
        }
        if (clientAutoPlayBuilder_ == null) {
          result.clientAutoPlay_ = clientAutoPlay_;
        } else {
          result.clientAutoPlay_ = clientAutoPlayBuilder_.build();
        }
        if (clientLeaveRoomBuilder_ == null) {
          result.clientLeaveRoom_ = clientLeaveRoom_;
        } else {
          result.clientLeaveRoom_ = clientLeaveRoomBuilder_.build();
        }
        if (clientCancleJoinBuilder_ == null) {
          result.clientCancleJoin_ = clientCancleJoin_;
        } else {
          result.clientCancleJoin_ = clientCancleJoinBuilder_.build();
        }
        if (clientQueryIndexBuilder_ == null) {
          result.clientQueryIndex_ = clientQueryIndex_;
        } else {
          result.clientQueryIndex_ = clientQueryIndexBuilder_.build();
        }
        if (clientRetryReturnGameBuilder_ == null) {
          result.clientRetryReturnGame_ = clientRetryReturnGame_;
        } else {
          result.clientRetryReturnGame_ = clientRetryReturnGameBuilder_.build();
        }
        if (clientGetRankListBuilder_ == null) {
          result.clientGetRankList_ = clientGetRankList_;
        } else {
          result.clientGetRankList_ = clientGetRankListBuilder_.build();
        }
        if (clientGetRoomConfigBuilder_ == null) {
          result.clientGetRoomConfig_ = clientGetRoomConfig_;
        } else {
          result.clientGetRoomConfig_ = clientGetRoomConfigBuilder_.build();
        }
        if (clientRewardMessageBuilder_ == null) {
          result.clientRewardMessage_ = clientRewardMessage_;
        } else {
          result.clientRewardMessage_ = clientRewardMessageBuilder_.build();
        }
        if (clientGetMonthCardDiamondBuilder_ == null) {
          result.clientGetMonthCardDiamond_ = clientGetMonthCardDiamond_;
        } else {
          result.clientGetMonthCardDiamond_ = clientGetMonthCardDiamondBuilder_.build();
        }
        if (clientGetLotteryCountBuilder_ == null) {
          result.clientGetLotteryCount_ = clientGetLotteryCount_;
        } else {
          result.clientGetLotteryCount_ = clientGetLotteryCountBuilder_.build();
        }
        if (clientGetRoomInfoBuilder_ == null) {
          result.clientGetRoomInfo_ = clientGetRoomInfo_;
        } else {
          result.clientGetRoomInfo_ = clientGetRoomInfoBuilder_.build();
        }
        if (clientSendTelCodeBuilder_ == null) {
          result.clientSendTelCode_ = clientSendTelCode_;
        } else {
          result.clientSendTelCode_ = clientSendTelCodeBuilder_.build();
        }
        if (clientVerifyTelCodeBuilder_ == null) {
          result.clientVerifyTelCode_ = clientVerifyTelCode_;
        } else {
          result.clientVerifyTelCode_ = clientVerifyTelCodeBuilder_.build();
        }
        if (clientSharePackageBuilder_ == null) {
          result.clientSharePackage_ = clientSharePackage_;
        } else {
          result.clientSharePackage_ = clientSharePackageBuilder_.build();
        }
        if (clientGetAwardListBuilder_ == null) {
          result.clientGetAwardList_ = clientGetAwardList_;
        } else {
          result.clientGetAwardList_ = clientGetAwardListBuilder_.build();
        }
        if (clientPlayerLogoutBuilder_ == null) {
          result.clientPlayerLogout_ = clientPlayerLogout_;
        } else {
          result.clientPlayerLogout_ = clientPlayerLogoutBuilder_.build();
        }
        if (clientCheckConnectBuilder_ == null) {
          result.clientCheckConnect_ = clientCheckConnect_;
        } else {
          result.clientCheckConnect_ = clientCheckConnectBuilder_.build();
        }
        if (clientGetPFListBuilder_ == null) {
          result.clientGetPFList_ = clientGetPFList_;
        } else {
          result.clientGetPFList_ = clientGetPFListBuilder_.build();
        }
        if (clientChoosePFBuilder_ == null) {
          result.clientChoosePF_ = clientChoosePF_;
        } else {
          result.clientChoosePF_ = clientChoosePFBuilder_.build();
        }
        if (clientGetHistoryRankBuilder_ == null) {
          result.clientGetHistoryRank_ = clientGetHistoryRank_;
        } else {
          result.clientGetHistoryRank_ = clientGetHistoryRankBuilder_.build();
        }
        if (clientH5RewardBuilder_ == null) {
          result.clientH5Reward_ = clientH5Reward_;
        } else {
          result.clientH5Reward_ = clientH5RewardBuilder_.build();
        }
        if (clientNewDrawWinCupBuilder_ == null) {
          result.clientNewDrawWinCup_ = clientNewDrawWinCup_;
        } else {
          result.clientNewDrawWinCup_ = clientNewDrawWinCupBuilder_.build();
        }
        if (clientGetNewHallInfoBuilder_ == null) {
          result.clientGetNewHallInfo_ = clientGetNewHallInfo_;
        } else {
          result.clientGetNewHallInfo_ = clientGetNewHallInfoBuilder_.build();
        }
        if (clientLuckWallBuilder_ == null) {
          result.clientLuckWall_ = clientLuckWall_;
        } else {
          result.clientLuckWall_ = clientLuckWallBuilder_.build();
        }
        if (clientCdkeyAwardBuilder_ == null) {
          result.clientCdkeyAward_ = clientCdkeyAward_;
        } else {
          result.clientCdkeyAward_ = clientCdkeyAwardBuilder_.build();
        }
        if (clientGetStoreInfoBuilder_ == null) {
          result.clientGetStoreInfo_ = clientGetStoreInfo_;
        } else {
          result.clientGetStoreInfo_ = clientGetStoreInfoBuilder_.build();
        }
        if (clientConvertGoodsBuilder_ == null) {
          result.clientConvertGoods_ = clientConvertGoods_;
        } else {
          result.clientConvertGoods_ = clientConvertGoodsBuilder_.build();
        }
        if (clientWXPayResultQueryBuilder_ == null) {
          result.clientWXPayResultQuery_ = clientWXPayResultQuery_;
        } else {
          result.clientWXPayResultQuery_ = clientWXPayResultQueryBuilder_.build();
        }
        if (clientBuyOrderGoodsBuilder_ == null) {
          result.clientBuyOrderGoods_ = clientBuyOrderGoods_;
        } else {
          result.clientBuyOrderGoods_ = clientBuyOrderGoodsBuilder_.build();
        }
        if (clientGetFirstChargeBuilder_ == null) {
          result.clientGetFirstCharge_ = clientGetFirstCharge_;
        } else {
          result.clientGetFirstCharge_ = clientGetFirstChargeBuilder_.build();
        }
        if (clientGetDailyGiftBuilder_ == null) {
          result.clientGetDailyGift_ = clientGetDailyGift_;
        } else {
          result.clientGetDailyGift_ = clientGetDailyGiftBuilder_.build();
        }
        if (clientGetMonthCardBuilder_ == null) {
          result.clientGetMonthCard_ = clientGetMonthCard_;
        } else {
          result.clientGetMonthCard_ = clientGetMonthCardBuilder_.build();
        }
        if (clientGetResurgenceGiftBuilder_ == null) {
          result.clientGetResurgenceGift_ = clientGetResurgenceGift_;
        } else {
          result.clientGetResurgenceGift_ = clientGetResurgenceGiftBuilder_.build();
        }
        if (clientGetConvertMessageBuilder_ == null) {
          result.clientGetConvertMessage_ = clientGetConvertMessage_;
        } else {
          result.clientGetConvertMessage_ = clientGetConvertMessageBuilder_.build();
        }
        if (clientNewBuyOrderBuilder_ == null) {
          result.clientNewBuyOrder_ = clientNewBuyOrder_;
        } else {
          result.clientNewBuyOrder_ = clientNewBuyOrderBuilder_.build();
        }
        if (clientNewConvertBuilder_ == null) {
          result.clientNewConvert_ = clientNewConvert_;
        } else {
          result.clientNewConvert_ = clientNewConvertBuilder_.build();
        }
        if (clientAlipayAccountBuilder_ == null) {
          result.clientAlipayAccount_ = clientAlipayAccount_;
        } else {
          result.clientAlipayAccount_ = clientAlipayAccountBuilder_.build();
        }
        if (clientPayOptionsBuilder_ == null) {
          result.clientPayOptions_ = clientPayOptions_;
        } else {
          result.clientPayOptions_ = clientPayOptionsBuilder_.build();
        }
        if (clientIdVerifyBuilder_ == null) {
          result.clientIdVerify_ = clientIdVerify_;
        } else {
          result.clientIdVerify_ = clientIdVerifyBuilder_.build();
        }
        if (clientVerifyAwardBuilder_ == null) {
          result.clientVerifyAward_ = clientVerifyAward_;
        } else {
          result.clientVerifyAward_ = clientVerifyAwardBuilder_.build();
        }
        if (clientMiniAppPayBuilder_ == null) {
          result.clientMiniAppPay_ = clientMiniAppPay_;
        } else {
          result.clientMiniAppPay_ = clientMiniAppPayBuilder_.build();
        }
        if (clientUnionAccountBuilder_ == null) {
          result.clientUnionAccount_ = clientUnionAccount_;
        } else {
          result.clientUnionAccount_ = clientUnionAccountBuilder_.build();
        }
        if (clientGetAnnounceBuilder_ == null) {
          result.clientGetAnnounce_ = clientGetAnnounce_;
        } else {
          result.clientGetAnnounce_ = clientGetAnnounceBuilder_.build();
        }
        if (clientGetMailBuilder_ == null) {
          result.clientGetMail_ = clientGetMail_;
        } else {
          result.clientGetMail_ = clientGetMailBuilder_.build();
        }
        if (clientGetMailRewardBuilder_ == null) {
          result.clientGetMailReward_ = clientGetMailReward_;
        } else {
          result.clientGetMailReward_ = clientGetMailRewardBuilder_.build();
        }
        if (clientDelMailBuilder_ == null) {
          result.clientDelMail_ = clientDelMail_;
        } else {
          result.clientDelMail_ = clientDelMailBuilder_.build();
        }
        if (clientReadMailBuilder_ == null) {
          result.clientReadMail_ = clientReadMail_;
        } else {
          result.clientReadMail_ = clientReadMailBuilder_.build();
        }
        if (clientDel2RBuilder_ == null) {
          result.clientDel2R_ = clientDel2R_;
        } else {
          result.clientDel2R_ = clientDel2RBuilder_.build();
        }
        if (clientQueryDailyTaskBuilder_ == null) {
          result.clientQueryDailyTask_ = clientQueryDailyTask_;
        } else {
          result.clientQueryDailyTask_ = clientQueryDailyTaskBuilder_.build();
        }
        if (clientGetNoviceRewardBuilder_ == null) {
          result.clientGetNoviceReward_ = clientGetNoviceReward_;
        } else {
          result.clientGetNoviceReward_ = clientGetNoviceRewardBuilder_.build();
        }
        if (clientQueryNoviceTaskBuilder_ == null) {
          result.clientQueryNoviceTask_ = clientQueryNoviceTask_;
        } else {
          result.clientQueryNoviceTask_ = clientQueryNoviceTaskBuilder_.build();
        }
        if (clientGetDTAwardBuilder_ == null) {
          result.clientGetDTAward_ = clientGetDTAward_;
        } else {
          result.clientGetDTAward_ = clientGetDTAwardBuilder_.build();
        }
        if (clientGetReceiveAddrBuilder_ == null) {
          result.clientGetReceiveAddr_ = clientGetReceiveAddr_;
        } else {
          result.clientGetReceiveAddr_ = clientGetReceiveAddrBuilder_.build();
        }
        if (clientAlterReceiveAddrBuilder_ == null) {
          result.clientAlterReceiveAddr_ = clientAlterReceiveAddr_;
        } else {
          result.clientAlterReceiveAddr_ = clientAlterReceiveAddrBuilder_.build();
        }
        if (clientSnatchListBuilder_ == null) {
          result.clientSnatchList_ = clientSnatchList_;
        } else {
          result.clientSnatchList_ = clientSnatchListBuilder_.build();
        }
        if (clientSnatchItemDetailBuilder_ == null) {
          result.clientSnatchItemDetail_ = clientSnatchItemDetail_;
        } else {
          result.clientSnatchItemDetail_ = clientSnatchItemDetailBuilder_.build();
        }
        if (clientSnatchBetBuilder_ == null) {
          result.clientSnatchBet_ = clientSnatchBet_;
        } else {
          result.clientSnatchBet_ = clientSnatchBetBuilder_.build();
        }
        if (clientSnatchAwardListBuilder_ == null) {
          result.clientSnatchAwardList_ = clientSnatchAwardList_;
        } else {
          result.clientSnatchAwardList_ = clientSnatchAwardListBuilder_.build();
        }
        if (clientOwnSnatchRecordBuilder_ == null) {
          result.clientOwnSnatchRecord_ = clientOwnSnatchRecord_;
        } else {
          result.clientOwnSnatchRecord_ = clientOwnSnatchRecordBuilder_.build();
        }
        if (clientSnatchItemHistoryBuilder_ == null) {
          result.clientSnatchItemHistory_ = clientSnatchItemHistory_;
        } else {
          result.clientSnatchItemHistory_ = clientSnatchItemHistoryBuilder_.build();
        }
        if (clientSnatchHistoryDetailBuilder_ == null) {
          result.clientSnatchHistoryDetail_ = clientSnatchHistoryDetail_;
        } else {
          result.clientSnatchHistoryDetail_ = clientSnatchHistoryDetailBuilder_.build();
        }
        if (clientSnatchGetAwardBuilder_ == null) {
          result.clientSnatchGetAward_ = clientSnatchGetAward_;
        } else {
          result.clientSnatchGetAward_ = clientSnatchGetAwardBuilder_.build();
        }
        if (clientEnterDGBuilder_ == null) {
          result.clientEnterDG_ = clientEnterDG_;
        } else {
          result.clientEnterDG_ = clientEnterDGBuilder_.build();
        }
        if (clientDGLotteryBuilder_ == null) {
          result.clientDGLottery_ = clientDGLottery_;
        } else {
          result.clientDGLottery_ = clientDGLotteryBuilder_.build();
        }
        if (clientResetLotteryBuilder_ == null) {
          result.clientResetLottery_ = clientResetLottery_;
        } else {
          result.clientResetLottery_ = clientResetLotteryBuilder_.build();
        }
        if (clientExitDGBuilder_ == null) {
          result.clientExitDG_ = clientExitDG_;
        } else {
          result.clientExitDG_ = clientExitDGBuilder_.build();
        }
        if (clientOpenDGBuilder_ == null) {
          result.clientOpenDG_ = clientOpenDG_;
        } else {
          result.clientOpenDG_ = clientOpenDGBuilder_.build();
        }
        if (clientOpenDDBuilder_ == null) {
          result.clientOpenDD_ = clientOpenDD_;
        } else {
          result.clientOpenDD_ = clientOpenDDBuilder_.build();
        }
        if (clientDDLotteryBuilder_ == null) {
          result.clientDDLottery_ = clientDDLottery_;
        } else {
          result.clientDDLottery_ = clientDDLotteryBuilder_.build();
        }
        if (clientExitDDBuilder_ == null) {
          result.clientExitDD_ = clientExitDD_;
        } else {
          result.clientExitDD_ = clientExitDDBuilder_.build();
        }
        if (clientQueryPropBuilder_ == null) {
          result.clientQueryProp_ = clientQueryProp_;
        } else {
          result.clientQueryProp_ = clientQueryPropBuilder_.build();
        }
        if (clientUsePropBuilder_ == null) {
          result.clientUseProp_ = clientUseProp_;
        } else {
          result.clientUseProp_ = clientUsePropBuilder_.build();
        }
        if (clientQueryPropCountBuilder_ == null) {
          result.clientQueryPropCount_ = clientQueryPropCount_;
        } else {
          result.clientQueryPropCount_ = clientQueryPropCountBuilder_.build();
        }
        if (clientSignInfoBuilder_ == null) {
          result.clientSignInfo_ = clientSignInfo_;
        } else {
          result.clientSignInfo_ = clientSignInfoBuilder_.build();
        }
        if (clientSignAwardBuilder_ == null) {
          result.clientSignAward_ = clientSignAward_;
        } else {
          result.clientSignAward_ = clientSignAwardBuilder_.build();
        }
        if (clientSignStateBuilder_ == null) {
          result.clientSignState_ = clientSignState_;
        } else {
          result.clientSignState_ = clientSignStateBuilder_.build();
        }
        if (clientLTLotteryBuilder_ == null) {
          result.clientLTLottery_ = clientLTLottery_;
        } else {
          result.clientLTLottery_ = clientLTLotteryBuilder_.build();
        }
        if (clientGetTSRewardBuilder_ == null) {
          result.clientGetTSReward_ = clientGetTSReward_;
        } else {
          result.clientGetTSReward_ = clientGetTSRewardBuilder_.build();
        }
        if (clientGetLuckInfoBuilder_ == null) {
          result.clientGetLuckInfo_ = clientGetLuckInfo_;
        } else {
          result.clientGetLuckInfo_ = clientGetLuckInfoBuilder_.build();
        }
        if (clientGetVipBuilder_ == null) {
          result.clientGetVip_ = clientGetVip_;
        } else {
          result.clientGetVip_ = clientGetVipBuilder_.build();
        }
        if (clientGetDayGiftBuilder_ == null) {
          result.clientGetDayGift_ = clientGetDayGift_;
        } else {
          result.clientGetDayGift_ = clientGetDayGiftBuilder_.build();
        }
        if (clientEnterSleeveBuilder_ == null) {
          result.clientEnterSleeve_ = clientEnterSleeve_;
        } else {
          result.clientEnterSleeve_ = clientEnterSleeveBuilder_.build();
        }
        if (clientSleeveSheepBuilder_ == null) {
          result.clientSleeveSheep_ = clientSleeveSheep_;
        } else {
          result.clientSleeveSheep_ = clientSleeveSheepBuilder_.build();
        }
        if (clientQueryPlayerCoinBuilder_ == null) {
          result.clientQueryPlayerCoin_ = clientQueryPlayerCoin_;
        } else {
          result.clientQueryPlayerCoin_ = clientQueryPlayerCoinBuilder_.build();
        }
        if (clientExitSleeveBuilder_ == null) {
          result.clientExitSleeve_ = clientExitSleeve_;
        } else {
          result.clientExitSleeve_ = clientExitSleeveBuilder_.build();
        }
        if (clientEnterNewSleeveBuilder_ == null) {
          result.clientEnterNewSleeve_ = clientEnterNewSleeve_;
        } else {
          result.clientEnterNewSleeve_ = clientEnterNewSleeveBuilder_.build();
        }
        if (clientNewSleeveSheepBuilder_ == null) {
          result.clientNewSleeveSheep_ = clientNewSleeveSheep_;
        } else {
          result.clientNewSleeveSheep_ = clientNewSleeveSheepBuilder_.build();
        }
        if (clientNewSleeveResultBuilder_ == null) {
          result.clientNewSleeveResult_ = clientNewSleeveResult_;
        } else {
          result.clientNewSleeveResult_ = clientNewSleeveResultBuilder_.build();
        }
        if (clientExitNewSleeveBuilder_ == null) {
          result.clientExitNewSleeve_ = clientExitNewSleeve_;
        } else {
          result.clientExitNewSleeve_ = clientExitNewSleeveBuilder_.build();
        }
        if (client2DoCatchBuilder_ == null) {
          result.client2DoCatch_ = client2DoCatch_;
        } else {
          result.client2DoCatch_ = client2DoCatchBuilder_.build();
        }
        if (client2PlayCardsBuilder_ == null) {
          result.client2PlayCards_ = client2PlayCards_;
        } else {
          result.client2PlayCards_ = client2PlayCardsBuilder_.build();
        }
        if (client2RecoverGameBuilder_ == null) {
          result.client2RecoverGame_ = client2RecoverGame_;
        } else {
          result.client2RecoverGame_ = client2RecoverGameBuilder_.build();
        }
        if (client2LeaveRoomBuilder_ == null) {
          result.client2LeaveRoom_ = client2LeaveRoom_;
        } else {
          result.client2LeaveRoom_ = client2LeaveRoomBuilder_.build();
        }
        if (clientMineShareBuilder_ == null) {
          result.clientMineShare_ = clientMineShare_;
        } else {
          result.clientMineShare_ = clientMineShareBuilder_.build();
        }
        if (clientGetMSAwardBuilder_ == null) {
          result.clientGetMSAward_ = clientGetMSAward_;
        } else {
          result.clientGetMSAward_ = clientGetMSAwardBuilder_.build();
        }
        if (clientFriendShareBuilder_ == null) {
          result.clientFriendShare_ = clientFriendShare_;
        } else {
          result.clientFriendShare_ = clientFriendShareBuilder_.build();
        }
        if (clientGetFSAwardBuilder_ == null) {
          result.clientGetFSAward_ = clientGetFSAward_;
        } else {
          result.clientGetFSAward_ = clientGetFSAwardBuilder_.build();
        }
        if (clientGetShareTaskBuilder_ == null) {
          result.clientGetShareTask_ = clientGetShareTask_;
        } else {
          result.clientGetShareTask_ = clientGetShareTaskBuilder_.build();
        }
        if (clientGetShareTaskAwardBuilder_ == null) {
          result.clientGetShareTaskAward_ = clientGetShareTaskAward_;
        } else {
          result.clientGetShareTaskAward_ = clientGetShareTaskAwardBuilder_.build();
        }
        if (clientQueryReviveInfoBuilder_ == null) {
          result.clientQueryReviveInfo_ = clientQueryReviveInfo_;
        } else {
          result.clientQueryReviveInfo_ = clientQueryReviveInfoBuilder_.build();
        }
        if (clientUseReviveBuilder_ == null) {
          result.clientUseRevive_ = clientUseRevive_;
        } else {
          result.clientUseRevive_ = clientUseReviveBuilder_.build();
        }
        if (clientReviveFirstChargeBuilder_ == null) {
          result.clientReviveFirstCharge_ = clientReviveFirstCharge_;
        } else {
          result.clientReviveFirstCharge_ = clientReviveFirstChargeBuilder_.build();
        }
        if (clientReviveDayGiftBuilder_ == null) {
          result.clientReviveDayGift_ = clientReviveDayGift_;
        } else {
          result.clientReviveDayGift_ = clientReviveDayGiftBuilder_.build();
        }
        if (clientGetRedTipBuilder_ == null) {
          result.clientGetRedTip_ = clientGetRedTip_;
        } else {
          result.clientGetRedTip_ = clientGetRedTipBuilder_.build();
        }
        if (clientGetMatchInfoBuilder_ == null) {
          result.clientGetMatchInfo_ = clientGetMatchInfo_;
        } else {
          result.clientGetMatchInfo_ = clientGetMatchInfoBuilder_.build();
        }
        if (clientGetMatchDetailBuilder_ == null) {
          result.clientGetMatchDetail_ = clientGetMatchDetail_;
        } else {
          result.clientGetMatchDetail_ = clientGetMatchDetailBuilder_.build();
        }
        if (clientGetMatchRecordBuilder_ == null) {
          result.clientGetMatchRecord_ = clientGetMatchRecord_;
        } else {
          result.clientGetMatchRecord_ = clientGetMatchRecordBuilder_.build();
        }
        if (clientMatchApplyBuilder_ == null) {
          result.clientMatchApply_ = clientMatchApply_;
        } else {
          result.clientMatchApply_ = clientMatchApplyBuilder_.build();
        }
        if (clientMatchCancelBuilder_ == null) {
          result.clientMatchCancel_ = clientMatchCancel_;
        } else {
          result.clientMatchCancel_ = clientMatchCancelBuilder_.build();
        }
        if (clientOwnMatchRecordBuilder_ == null) {
          result.clientOwnMatchRecord_ = clientOwnMatchRecord_;
        } else {
          result.clientOwnMatchRecord_ = clientOwnMatchRecordBuilder_.build();
        }
        if (clientApplyListChangeBuilder_ == null) {
          result.clientApplyListChange_ = clientApplyListChange_;
        } else {
          result.clientApplyListChange_ = clientApplyListChangeBuilder_.build();
        }
        if (clientMatchScoreBuilder_ == null) {
          result.clientMatchScore_ = clientMatchScore_;
        } else {
          result.clientMatchScore_ = clientMatchScoreBuilder_.build();
        }
        if (clientMatchConfigBuilder_ == null) {
          result.clientMatchConfig_ = clientMatchConfig_;
        } else {
          result.clientMatchConfig_ = clientMatchConfigBuilder_.build();
        }
        if (clientGetKillCellBuilder_ == null) {
          result.clientGetKillCell_ = clientGetKillCell_;
        } else {
          result.clientGetKillCell_ = clientGetKillCellBuilder_.build();
        }
        if (clientEnterKillCellBuilder_ == null) {
          result.clientEnterKillCell_ = clientEnterKillCell_;
        } else {
          result.clientEnterKillCell_ = clientEnterKillCellBuilder_.build();
        }
        if (clientQuitKillCellBuilder_ == null) {
          result.clientQuitKillCell_ = clientQuitKillCell_;
        } else {
          result.clientQuitKillCell_ = clientQuitKillCellBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kys.util.netty.proto.ProtoMsg.ClientRequest) {
          return mergeFrom((com.kys.util.netty.proto.ProtoMsg.ClientRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kys.util.netty.proto.ProtoMsg.ClientRequest other) {
        if (other == com.kys.util.netty.proto.ProtoMsg.ClientRequest.getDefaultInstance()) return this;
        if (other.getUserId() != 0) {
          setUserId(other.getUserId());
        }
        if (other.getMethodId() != 0) {
          setMethodId(other.getMethodId());
        }
        if (other.hasClientPlayerInfo()) {
          mergeClientPlayerInfo(other.getClientPlayerInfo());
        }
        if (other.hasClientReturnHallHeartBeat()) {
          mergeClientReturnHallHeartBeat(other.getClientReturnHallHeartBeat());
        }
        if (other.hasClientReturnGameHeartBeat()) {
          mergeClientReturnGameHeartBeat(other.getClientReturnGameHeartBeat());
        }
        if (other.hasClientGetUserInfo()) {
          mergeClientGetUserInfo(other.getClientGetUserInfo());
        }
        if (other.hasClientNewLogin()) {
          mergeClientNewLogin(other.getClientNewLogin());
        }
        if (other.hasClientQuickJoin()) {
          mergeClientQuickJoin(other.getClientQuickJoin());
        }
        if (other.hasClientEnterRoom()) {
          mergeClientEnterRoom(other.getClientEnterRoom());
        }
        if (other.hasClientDoCatch()) {
          mergeClientDoCatch(other.getClientDoCatch());
        }
        if (other.hasClientPlayCards()) {
          mergeClientPlayCards(other.getClientPlayCards());
        }
        if (other.hasClientRecoverGame()) {
          mergeClientRecoverGame(other.getClientRecoverGame());
        }
        if (other.hasClientAutoPlay()) {
          mergeClientAutoPlay(other.getClientAutoPlay());
        }
        if (other.hasClientLeaveRoom()) {
          mergeClientLeaveRoom(other.getClientLeaveRoom());
        }
        if (other.hasClientCancleJoin()) {
          mergeClientCancleJoin(other.getClientCancleJoin());
        }
        if (other.hasClientQueryIndex()) {
          mergeClientQueryIndex(other.getClientQueryIndex());
        }
        if (other.hasClientRetryReturnGame()) {
          mergeClientRetryReturnGame(other.getClientRetryReturnGame());
        }
        if (other.hasClientGetRankList()) {
          mergeClientGetRankList(other.getClientGetRankList());
        }
        if (other.hasClientGetRoomConfig()) {
          mergeClientGetRoomConfig(other.getClientGetRoomConfig());
        }
        if (other.hasClientRewardMessage()) {
          mergeClientRewardMessage(other.getClientRewardMessage());
        }
        if (other.hasClientGetMonthCardDiamond()) {
          mergeClientGetMonthCardDiamond(other.getClientGetMonthCardDiamond());
        }
        if (other.hasClientGetLotteryCount()) {
          mergeClientGetLotteryCount(other.getClientGetLotteryCount());
        }
        if (other.hasClientGetRoomInfo()) {
          mergeClientGetRoomInfo(other.getClientGetRoomInfo());
        }
        if (other.hasClientSendTelCode()) {
          mergeClientSendTelCode(other.getClientSendTelCode());
        }
        if (other.hasClientVerifyTelCode()) {
          mergeClientVerifyTelCode(other.getClientVerifyTelCode());
        }
        if (other.hasClientSharePackage()) {
          mergeClientSharePackage(other.getClientSharePackage());
        }
        if (other.hasClientGetAwardList()) {
          mergeClientGetAwardList(other.getClientGetAwardList());
        }
        if (other.hasClientPlayerLogout()) {
          mergeClientPlayerLogout(other.getClientPlayerLogout());
        }
        if (other.hasClientCheckConnect()) {
          mergeClientCheckConnect(other.getClientCheckConnect());
        }
        if (other.hasClientGetPFList()) {
          mergeClientGetPFList(other.getClientGetPFList());
        }
        if (other.hasClientChoosePF()) {
          mergeClientChoosePF(other.getClientChoosePF());
        }
        if (other.hasClientGetHistoryRank()) {
          mergeClientGetHistoryRank(other.getClientGetHistoryRank());
        }
        if (other.hasClientH5Reward()) {
          mergeClientH5Reward(other.getClientH5Reward());
        }
        if (other.hasClientNewDrawWinCup()) {
          mergeClientNewDrawWinCup(other.getClientNewDrawWinCup());
        }
        if (other.hasClientGetNewHallInfo()) {
          mergeClientGetNewHallInfo(other.getClientGetNewHallInfo());
        }
        if (other.hasClientLuckWall()) {
          mergeClientLuckWall(other.getClientLuckWall());
        }
        if (other.hasClientCdkeyAward()) {
          mergeClientCdkeyAward(other.getClientCdkeyAward());
        }
        if (other.hasClientGetStoreInfo()) {
          mergeClientGetStoreInfo(other.getClientGetStoreInfo());
        }
        if (other.hasClientConvertGoods()) {
          mergeClientConvertGoods(other.getClientConvertGoods());
        }
        if (other.hasClientWXPayResultQuery()) {
          mergeClientWXPayResultQuery(other.getClientWXPayResultQuery());
        }
        if (other.hasClientBuyOrderGoods()) {
          mergeClientBuyOrderGoods(other.getClientBuyOrderGoods());
        }
        if (other.hasClientGetFirstCharge()) {
          mergeClientGetFirstCharge(other.getClientGetFirstCharge());
        }
        if (other.hasClientGetDailyGift()) {
          mergeClientGetDailyGift(other.getClientGetDailyGift());
        }
        if (other.hasClientGetMonthCard()) {
          mergeClientGetMonthCard(other.getClientGetMonthCard());
        }
        if (other.hasClientGetResurgenceGift()) {
          mergeClientGetResurgenceGift(other.getClientGetResurgenceGift());
        }
        if (other.hasClientGetConvertMessage()) {
          mergeClientGetConvertMessage(other.getClientGetConvertMessage());
        }
        if (other.hasClientNewBuyOrder()) {
          mergeClientNewBuyOrder(other.getClientNewBuyOrder());
        }
        if (other.hasClientNewConvert()) {
          mergeClientNewConvert(other.getClientNewConvert());
        }
        if (other.hasClientAlipayAccount()) {
          mergeClientAlipayAccount(other.getClientAlipayAccount());
        }
        if (other.hasClientPayOptions()) {
          mergeClientPayOptions(other.getClientPayOptions());
        }
        if (other.hasClientIdVerify()) {
          mergeClientIdVerify(other.getClientIdVerify());
        }
        if (other.hasClientVerifyAward()) {
          mergeClientVerifyAward(other.getClientVerifyAward());
        }
        if (other.hasClientMiniAppPay()) {
          mergeClientMiniAppPay(other.getClientMiniAppPay());
        }
        if (other.hasClientUnionAccount()) {
          mergeClientUnionAccount(other.getClientUnionAccount());
        }
        if (other.hasClientGetAnnounce()) {
          mergeClientGetAnnounce(other.getClientGetAnnounce());
        }
        if (other.hasClientGetMail()) {
          mergeClientGetMail(other.getClientGetMail());
        }
        if (other.hasClientGetMailReward()) {
          mergeClientGetMailReward(other.getClientGetMailReward());
        }
        if (other.hasClientDelMail()) {
          mergeClientDelMail(other.getClientDelMail());
        }
        if (other.hasClientReadMail()) {
          mergeClientReadMail(other.getClientReadMail());
        }
        if (other.hasClientDel2R()) {
          mergeClientDel2R(other.getClientDel2R());
        }
        if (other.hasClientQueryDailyTask()) {
          mergeClientQueryDailyTask(other.getClientQueryDailyTask());
        }
        if (other.hasClientGetNoviceReward()) {
          mergeClientGetNoviceReward(other.getClientGetNoviceReward());
        }
        if (other.hasClientQueryNoviceTask()) {
          mergeClientQueryNoviceTask(other.getClientQueryNoviceTask());
        }
        if (other.hasClientGetDTAward()) {
          mergeClientGetDTAward(other.getClientGetDTAward());
        }
        if (other.hasClientGetReceiveAddr()) {
          mergeClientGetReceiveAddr(other.getClientGetReceiveAddr());
        }
        if (other.hasClientAlterReceiveAddr()) {
          mergeClientAlterReceiveAddr(other.getClientAlterReceiveAddr());
        }
        if (other.hasClientSnatchList()) {
          mergeClientSnatchList(other.getClientSnatchList());
        }
        if (other.hasClientSnatchItemDetail()) {
          mergeClientSnatchItemDetail(other.getClientSnatchItemDetail());
        }
        if (other.hasClientSnatchBet()) {
          mergeClientSnatchBet(other.getClientSnatchBet());
        }
        if (other.hasClientSnatchAwardList()) {
          mergeClientSnatchAwardList(other.getClientSnatchAwardList());
        }
        if (other.hasClientOwnSnatchRecord()) {
          mergeClientOwnSnatchRecord(other.getClientOwnSnatchRecord());
        }
        if (other.hasClientSnatchItemHistory()) {
          mergeClientSnatchItemHistory(other.getClientSnatchItemHistory());
        }
        if (other.hasClientSnatchHistoryDetail()) {
          mergeClientSnatchHistoryDetail(other.getClientSnatchHistoryDetail());
        }
        if (other.hasClientSnatchGetAward()) {
          mergeClientSnatchGetAward(other.getClientSnatchGetAward());
        }
        if (other.hasClientEnterDG()) {
          mergeClientEnterDG(other.getClientEnterDG());
        }
        if (other.hasClientDGLottery()) {
          mergeClientDGLottery(other.getClientDGLottery());
        }
        if (other.hasClientResetLottery()) {
          mergeClientResetLottery(other.getClientResetLottery());
        }
        if (other.hasClientExitDG()) {
          mergeClientExitDG(other.getClientExitDG());
        }
        if (other.hasClientOpenDG()) {
          mergeClientOpenDG(other.getClientOpenDG());
        }
        if (other.hasClientOpenDD()) {
          mergeClientOpenDD(other.getClientOpenDD());
        }
        if (other.hasClientDDLottery()) {
          mergeClientDDLottery(other.getClientDDLottery());
        }
        if (other.hasClientExitDD()) {
          mergeClientExitDD(other.getClientExitDD());
        }
        if (other.hasClientQueryProp()) {
          mergeClientQueryProp(other.getClientQueryProp());
        }
        if (other.hasClientUseProp()) {
          mergeClientUseProp(other.getClientUseProp());
        }
        if (other.hasClientQueryPropCount()) {
          mergeClientQueryPropCount(other.getClientQueryPropCount());
        }
        if (other.hasClientSignInfo()) {
          mergeClientSignInfo(other.getClientSignInfo());
        }
        if (other.hasClientSignAward()) {
          mergeClientSignAward(other.getClientSignAward());
        }
        if (other.hasClientSignState()) {
          mergeClientSignState(other.getClientSignState());
        }
        if (other.hasClientLTLottery()) {
          mergeClientLTLottery(other.getClientLTLottery());
        }
        if (other.hasClientGetTSReward()) {
          mergeClientGetTSReward(other.getClientGetTSReward());
        }
        if (other.hasClientGetLuckInfo()) {
          mergeClientGetLuckInfo(other.getClientGetLuckInfo());
        }
        if (other.hasClientGetVip()) {
          mergeClientGetVip(other.getClientGetVip());
        }
        if (other.hasClientGetDayGift()) {
          mergeClientGetDayGift(other.getClientGetDayGift());
        }
        if (other.hasClientEnterSleeve()) {
          mergeClientEnterSleeve(other.getClientEnterSleeve());
        }
        if (other.hasClientSleeveSheep()) {
          mergeClientSleeveSheep(other.getClientSleeveSheep());
        }
        if (other.hasClientQueryPlayerCoin()) {
          mergeClientQueryPlayerCoin(other.getClientQueryPlayerCoin());
        }
        if (other.hasClientExitSleeve()) {
          mergeClientExitSleeve(other.getClientExitSleeve());
        }
        if (other.hasClientEnterNewSleeve()) {
          mergeClientEnterNewSleeve(other.getClientEnterNewSleeve());
        }
        if (other.hasClientNewSleeveSheep()) {
          mergeClientNewSleeveSheep(other.getClientNewSleeveSheep());
        }
        if (other.hasClientNewSleeveResult()) {
          mergeClientNewSleeveResult(other.getClientNewSleeveResult());
        }
        if (other.hasClientExitNewSleeve()) {
          mergeClientExitNewSleeve(other.getClientExitNewSleeve());
        }
        if (other.hasClient2DoCatch()) {
          mergeClient2DoCatch(other.getClient2DoCatch());
        }
        if (other.hasClient2PlayCards()) {
          mergeClient2PlayCards(other.getClient2PlayCards());
        }
        if (other.hasClient2RecoverGame()) {
          mergeClient2RecoverGame(other.getClient2RecoverGame());
        }
        if (other.hasClient2LeaveRoom()) {
          mergeClient2LeaveRoom(other.getClient2LeaveRoom());
        }
        if (other.hasClientMineShare()) {
          mergeClientMineShare(other.getClientMineShare());
        }
        if (other.hasClientGetMSAward()) {
          mergeClientGetMSAward(other.getClientGetMSAward());
        }
        if (other.hasClientFriendShare()) {
          mergeClientFriendShare(other.getClientFriendShare());
        }
        if (other.hasClientGetFSAward()) {
          mergeClientGetFSAward(other.getClientGetFSAward());
        }
        if (other.hasClientGetShareTask()) {
          mergeClientGetShareTask(other.getClientGetShareTask());
        }
        if (other.hasClientGetShareTaskAward()) {
          mergeClientGetShareTaskAward(other.getClientGetShareTaskAward());
        }
        if (other.hasClientQueryReviveInfo()) {
          mergeClientQueryReviveInfo(other.getClientQueryReviveInfo());
        }
        if (other.hasClientUseRevive()) {
          mergeClientUseRevive(other.getClientUseRevive());
        }
        if (other.hasClientReviveFirstCharge()) {
          mergeClientReviveFirstCharge(other.getClientReviveFirstCharge());
        }
        if (other.hasClientReviveDayGift()) {
          mergeClientReviveDayGift(other.getClientReviveDayGift());
        }
        if (other.hasClientGetRedTip()) {
          mergeClientGetRedTip(other.getClientGetRedTip());
        }
        if (other.hasClientGetMatchInfo()) {
          mergeClientGetMatchInfo(other.getClientGetMatchInfo());
        }
        if (other.hasClientGetMatchDetail()) {
          mergeClientGetMatchDetail(other.getClientGetMatchDetail());
        }
        if (other.hasClientGetMatchRecord()) {
          mergeClientGetMatchRecord(other.getClientGetMatchRecord());
        }
        if (other.hasClientMatchApply()) {
          mergeClientMatchApply(other.getClientMatchApply());
        }
        if (other.hasClientMatchCancel()) {
          mergeClientMatchCancel(other.getClientMatchCancel());
        }
        if (other.hasClientOwnMatchRecord()) {
          mergeClientOwnMatchRecord(other.getClientOwnMatchRecord());
        }
        if (other.hasClientApplyListChange()) {
          mergeClientApplyListChange(other.getClientApplyListChange());
        }
        if (other.hasClientMatchScore()) {
          mergeClientMatchScore(other.getClientMatchScore());
        }
        if (other.hasClientMatchConfig()) {
          mergeClientMatchConfig(other.getClientMatchConfig());
        }
        if (other.hasClientGetKillCell()) {
          mergeClientGetKillCell(other.getClientGetKillCell());
        }
        if (other.hasClientEnterKillCell()) {
          mergeClientEnterKillCell(other.getClientEnterKillCell());
        }
        if (other.hasClientQuitKillCell()) {
          mergeClientQuitKillCell(other.getClientQuitKillCell());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kys.util.netty.proto.ProtoMsg.ClientRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kys.util.netty.proto.ProtoMsg.ClientRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int userId_ ;
      /**
       * <pre>
       ** 用户名 
       * </pre>
       *
       * <code>int32 userId = 1;</code>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <pre>
       ** 用户名 
       * </pre>
       *
       * <code>int32 userId = 1;</code>
       */
      public Builder setUserId(int value) {
        
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 用户名 
       * </pre>
       *
       * <code>int32 userId = 1;</code>
       */
      public Builder clearUserId() {
        
        userId_ = 0;
        onChanged();
        return this;
      }

      private int methodId_ ;
      /**
       * <pre>
       ** 请求方法名 
       * </pre>
       *
       * <code>int32 methodId = 2;</code>
       */
      public int getMethodId() {
        return methodId_;
      }
      /**
       * <pre>
       ** 请求方法名 
       * </pre>
       *
       * <code>int32 methodId = 2;</code>
       */
      public Builder setMethodId(int value) {
        
        methodId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 请求方法名 
       * </pre>
       *
       * <code>int32 methodId = 2;</code>
       */
      public Builder clearMethodId() {
        
        methodId_ = 0;
        onChanged();
        return this;
      }

      private com.kys.util.netty.proto.UserProto.ClientGetUserInfo clientPlayerInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder> clientPlayerInfoBuilder_;
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public boolean hasClientPlayerInfo() {
        return clientPlayerInfoBuilder_ != null || clientPlayerInfo_ != null;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientPlayerInfo() {
        if (clientPlayerInfoBuilder_ == null) {
          return clientPlayerInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientPlayerInfo_;
        } else {
          return clientPlayerInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public Builder setClientPlayerInfo(com.kys.util.netty.proto.UserProto.ClientGetUserInfo value) {
        if (clientPlayerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientPlayerInfo_ = value;
          onChanged();
        } else {
          clientPlayerInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public Builder setClientPlayerInfo(
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder builderForValue) {
        if (clientPlayerInfoBuilder_ == null) {
          clientPlayerInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientPlayerInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public Builder mergeClientPlayerInfo(com.kys.util.netty.proto.UserProto.ClientGetUserInfo value) {
        if (clientPlayerInfoBuilder_ == null) {
          if (clientPlayerInfo_ != null) {
            clientPlayerInfo_ =
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.newBuilder(clientPlayerInfo_).mergeFrom(value).buildPartial();
          } else {
            clientPlayerInfo_ = value;
          }
          onChanged();
        } else {
          clientPlayerInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public Builder clearClientPlayerInfo() {
        if (clientPlayerInfoBuilder_ == null) {
          clientPlayerInfo_ = null;
          onChanged();
        } else {
          clientPlayerInfo_ = null;
          clientPlayerInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder getClientPlayerInfoBuilder() {
        
        onChanged();
        return getClientPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientPlayerInfoOrBuilder() {
        if (clientPlayerInfoBuilder_ != null) {
          return clientPlayerInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientPlayerInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientPlayerInfo_;
        }
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder> 
          getClientPlayerInfoFieldBuilder() {
        if (clientPlayerInfoBuilder_ == null) {
          clientPlayerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder>(
                  getClientPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          clientPlayerInfo_ = null;
        }
        return clientPlayerInfoBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat clientReturnHallHeartBeat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder> clientReturnHallHeartBeatBuilder_;
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public boolean hasClientReturnHallHeartBeat() {
        return clientReturnHallHeartBeatBuilder_ != null || clientReturnHallHeartBeat_ != null;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat getClientReturnHallHeartBeat() {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          return clientReturnHallHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.getDefaultInstance() : clientReturnHallHeartBeat_;
        } else {
          return clientReturnHallHeartBeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public Builder setClientReturnHallHeartBeat(com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat value) {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientReturnHallHeartBeat_ = value;
          onChanged();
        } else {
          clientReturnHallHeartBeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public Builder setClientReturnHallHeartBeat(
          com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder builderForValue) {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          clientReturnHallHeartBeat_ = builderForValue.build();
          onChanged();
        } else {
          clientReturnHallHeartBeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public Builder mergeClientReturnHallHeartBeat(com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat value) {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          if (clientReturnHallHeartBeat_ != null) {
            clientReturnHallHeartBeat_ =
              com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.newBuilder(clientReturnHallHeartBeat_).mergeFrom(value).buildPartial();
          } else {
            clientReturnHallHeartBeat_ = value;
          }
          onChanged();
        } else {
          clientReturnHallHeartBeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public Builder clearClientReturnHallHeartBeat() {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          clientReturnHallHeartBeat_ = null;
          onChanged();
        } else {
          clientReturnHallHeartBeat_ = null;
          clientReturnHallHeartBeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder getClientReturnHallHeartBeatBuilder() {
        
        onChanged();
        return getClientReturnHallHeartBeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder getClientReturnHallHeartBeatOrBuilder() {
        if (clientReturnHallHeartBeatBuilder_ != null) {
          return clientReturnHallHeartBeatBuilder_.getMessageOrBuilder();
        } else {
          return clientReturnHallHeartBeat_ == null ?
              com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.getDefaultInstance() : clientReturnHallHeartBeat_;
        }
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder> 
          getClientReturnHallHeartBeatFieldBuilder() {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          clientReturnHallHeartBeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder>(
                  getClientReturnHallHeartBeat(),
                  getParentForChildren(),
                  isClean());
          clientReturnHallHeartBeat_ = null;
        }
        return clientReturnHallHeartBeatBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat clientReturnGameHeartBeat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder> clientReturnGameHeartBeatBuilder_;
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public boolean hasClientReturnGameHeartBeat() {
        return clientReturnGameHeartBeatBuilder_ != null || clientReturnGameHeartBeat_ != null;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat getClientReturnGameHeartBeat() {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          return clientReturnGameHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.getDefaultInstance() : clientReturnGameHeartBeat_;
        } else {
          return clientReturnGameHeartBeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public Builder setClientReturnGameHeartBeat(com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat value) {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientReturnGameHeartBeat_ = value;
          onChanged();
        } else {
          clientReturnGameHeartBeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public Builder setClientReturnGameHeartBeat(
          com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder builderForValue) {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          clientReturnGameHeartBeat_ = builderForValue.build();
          onChanged();
        } else {
          clientReturnGameHeartBeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public Builder mergeClientReturnGameHeartBeat(com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat value) {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          if (clientReturnGameHeartBeat_ != null) {
            clientReturnGameHeartBeat_ =
              com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.newBuilder(clientReturnGameHeartBeat_).mergeFrom(value).buildPartial();
          } else {
            clientReturnGameHeartBeat_ = value;
          }
          onChanged();
        } else {
          clientReturnGameHeartBeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public Builder clearClientReturnGameHeartBeat() {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          clientReturnGameHeartBeat_ = null;
          onChanged();
        } else {
          clientReturnGameHeartBeat_ = null;
          clientReturnGameHeartBeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder getClientReturnGameHeartBeatBuilder() {
        
        onChanged();
        return getClientReturnGameHeartBeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder getClientReturnGameHeartBeatOrBuilder() {
        if (clientReturnGameHeartBeatBuilder_ != null) {
          return clientReturnGameHeartBeatBuilder_.getMessageOrBuilder();
        } else {
          return clientReturnGameHeartBeat_ == null ?
              com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.getDefaultInstance() : clientReturnGameHeartBeat_;
        }
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder> 
          getClientReturnGameHeartBeatFieldBuilder() {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          clientReturnGameHeartBeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder>(
                  getClientReturnGameHeartBeat(),
                  getParentForChildren(),
                  isClean());
          clientReturnGameHeartBeat_ = null;
        }
        return clientReturnGameHeartBeatBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ClientGetUserInfo clientGetUserInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder> clientGetUserInfoBuilder_;
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public boolean hasClientGetUserInfo() {
        return clientGetUserInfoBuilder_ != null || clientGetUserInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientGetUserInfo() {
        if (clientGetUserInfoBuilder_ == null) {
          return clientGetUserInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientGetUserInfo_;
        } else {
          return clientGetUserInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public Builder setClientGetUserInfo(com.kys.util.netty.proto.UserProto.ClientGetUserInfo value) {
        if (clientGetUserInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetUserInfo_ = value;
          onChanged();
        } else {
          clientGetUserInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public Builder setClientGetUserInfo(
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder builderForValue) {
        if (clientGetUserInfoBuilder_ == null) {
          clientGetUserInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetUserInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public Builder mergeClientGetUserInfo(com.kys.util.netty.proto.UserProto.ClientGetUserInfo value) {
        if (clientGetUserInfoBuilder_ == null) {
          if (clientGetUserInfo_ != null) {
            clientGetUserInfo_ =
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.newBuilder(clientGetUserInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetUserInfo_ = value;
          }
          onChanged();
        } else {
          clientGetUserInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public Builder clearClientGetUserInfo() {
        if (clientGetUserInfoBuilder_ == null) {
          clientGetUserInfo_ = null;
          onChanged();
        } else {
          clientGetUserInfo_ = null;
          clientGetUserInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder getClientGetUserInfoBuilder() {
        
        onChanged();
        return getClientGetUserInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientGetUserInfoOrBuilder() {
        if (clientGetUserInfoBuilder_ != null) {
          return clientGetUserInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetUserInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientGetUserInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder> 
          getClientGetUserInfoFieldBuilder() {
        if (clientGetUserInfoBuilder_ == null) {
          clientGetUserInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder>(
                  getClientGetUserInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetUserInfo_ = null;
        }
        return clientGetUserInfoBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ClientNewLogin clientNewLogin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientNewLogin, com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder> clientNewLoginBuilder_;
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public boolean hasClientNewLogin() {
        return clientNewLoginBuilder_ != null || clientNewLogin_ != null;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientNewLogin getClientNewLogin() {
        if (clientNewLoginBuilder_ == null) {
          return clientNewLogin_ == null ? com.kys.util.netty.proto.LoginProto.ClientNewLogin.getDefaultInstance() : clientNewLogin_;
        } else {
          return clientNewLoginBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public Builder setClientNewLogin(com.kys.util.netty.proto.LoginProto.ClientNewLogin value) {
        if (clientNewLoginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientNewLogin_ = value;
          onChanged();
        } else {
          clientNewLoginBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public Builder setClientNewLogin(
          com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder builderForValue) {
        if (clientNewLoginBuilder_ == null) {
          clientNewLogin_ = builderForValue.build();
          onChanged();
        } else {
          clientNewLoginBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public Builder mergeClientNewLogin(com.kys.util.netty.proto.LoginProto.ClientNewLogin value) {
        if (clientNewLoginBuilder_ == null) {
          if (clientNewLogin_ != null) {
            clientNewLogin_ =
              com.kys.util.netty.proto.LoginProto.ClientNewLogin.newBuilder(clientNewLogin_).mergeFrom(value).buildPartial();
          } else {
            clientNewLogin_ = value;
          }
          onChanged();
        } else {
          clientNewLoginBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public Builder clearClientNewLogin() {
        if (clientNewLoginBuilder_ == null) {
          clientNewLogin_ = null;
          onChanged();
        } else {
          clientNewLogin_ = null;
          clientNewLoginBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder getClientNewLoginBuilder() {
        
        onChanged();
        return getClientNewLoginFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder getClientNewLoginOrBuilder() {
        if (clientNewLoginBuilder_ != null) {
          return clientNewLoginBuilder_.getMessageOrBuilder();
        } else {
          return clientNewLogin_ == null ?
              com.kys.util.netty.proto.LoginProto.ClientNewLogin.getDefaultInstance() : clientNewLogin_;
        }
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientNewLogin, com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder> 
          getClientNewLoginFieldBuilder() {
        if (clientNewLoginBuilder_ == null) {
          clientNewLoginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ClientNewLogin, com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder>(
                  getClientNewLogin(),
                  getParentForChildren(),
                  isClean());
          clientNewLogin_ = null;
        }
        return clientNewLoginBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientQuickJoin clientQuickJoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientQuickJoin, com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder> clientQuickJoinBuilder_;
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public boolean hasClientQuickJoin() {
        return clientQuickJoinBuilder_ != null || clientQuickJoin_ != null;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQuickJoin getClientQuickJoin() {
        if (clientQuickJoinBuilder_ == null) {
          return clientQuickJoin_ == null ? com.kys.util.netty.proto.GameProto.ClientQuickJoin.getDefaultInstance() : clientQuickJoin_;
        } else {
          return clientQuickJoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public Builder setClientQuickJoin(com.kys.util.netty.proto.GameProto.ClientQuickJoin value) {
        if (clientQuickJoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQuickJoin_ = value;
          onChanged();
        } else {
          clientQuickJoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public Builder setClientQuickJoin(
          com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder builderForValue) {
        if (clientQuickJoinBuilder_ == null) {
          clientQuickJoin_ = builderForValue.build();
          onChanged();
        } else {
          clientQuickJoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public Builder mergeClientQuickJoin(com.kys.util.netty.proto.GameProto.ClientQuickJoin value) {
        if (clientQuickJoinBuilder_ == null) {
          if (clientQuickJoin_ != null) {
            clientQuickJoin_ =
              com.kys.util.netty.proto.GameProto.ClientQuickJoin.newBuilder(clientQuickJoin_).mergeFrom(value).buildPartial();
          } else {
            clientQuickJoin_ = value;
          }
          onChanged();
        } else {
          clientQuickJoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public Builder clearClientQuickJoin() {
        if (clientQuickJoinBuilder_ == null) {
          clientQuickJoin_ = null;
          onChanged();
        } else {
          clientQuickJoin_ = null;
          clientQuickJoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder getClientQuickJoinBuilder() {
        
        onChanged();
        return getClientQuickJoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder getClientQuickJoinOrBuilder() {
        if (clientQuickJoinBuilder_ != null) {
          return clientQuickJoinBuilder_.getMessageOrBuilder();
        } else {
          return clientQuickJoin_ == null ?
              com.kys.util.netty.proto.GameProto.ClientQuickJoin.getDefaultInstance() : clientQuickJoin_;
        }
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientQuickJoin, com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder> 
          getClientQuickJoinFieldBuilder() {
        if (clientQuickJoinBuilder_ == null) {
          clientQuickJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientQuickJoin, com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder>(
                  getClientQuickJoin(),
                  getParentForChildren(),
                  isClean());
          clientQuickJoin_ = null;
        }
        return clientQuickJoinBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientEnterRoom clientEnterRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientEnterRoom, com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder> clientEnterRoomBuilder_;
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public boolean hasClientEnterRoom() {
        return clientEnterRoomBuilder_ != null || clientEnterRoom_ != null;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientEnterRoom getClientEnterRoom() {
        if (clientEnterRoomBuilder_ == null) {
          return clientEnterRoom_ == null ? com.kys.util.netty.proto.GameProto.ClientEnterRoom.getDefaultInstance() : clientEnterRoom_;
        } else {
          return clientEnterRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public Builder setClientEnterRoom(com.kys.util.netty.proto.GameProto.ClientEnterRoom value) {
        if (clientEnterRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientEnterRoom_ = value;
          onChanged();
        } else {
          clientEnterRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public Builder setClientEnterRoom(
          com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder builderForValue) {
        if (clientEnterRoomBuilder_ == null) {
          clientEnterRoom_ = builderForValue.build();
          onChanged();
        } else {
          clientEnterRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public Builder mergeClientEnterRoom(com.kys.util.netty.proto.GameProto.ClientEnterRoom value) {
        if (clientEnterRoomBuilder_ == null) {
          if (clientEnterRoom_ != null) {
            clientEnterRoom_ =
              com.kys.util.netty.proto.GameProto.ClientEnterRoom.newBuilder(clientEnterRoom_).mergeFrom(value).buildPartial();
          } else {
            clientEnterRoom_ = value;
          }
          onChanged();
        } else {
          clientEnterRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public Builder clearClientEnterRoom() {
        if (clientEnterRoomBuilder_ == null) {
          clientEnterRoom_ = null;
          onChanged();
        } else {
          clientEnterRoom_ = null;
          clientEnterRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder getClientEnterRoomBuilder() {
        
        onChanged();
        return getClientEnterRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder getClientEnterRoomOrBuilder() {
        if (clientEnterRoomBuilder_ != null) {
          return clientEnterRoomBuilder_.getMessageOrBuilder();
        } else {
          return clientEnterRoom_ == null ?
              com.kys.util.netty.proto.GameProto.ClientEnterRoom.getDefaultInstance() : clientEnterRoom_;
        }
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientEnterRoom, com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder> 
          getClientEnterRoomFieldBuilder() {
        if (clientEnterRoomBuilder_ == null) {
          clientEnterRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientEnterRoom, com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder>(
                  getClientEnterRoom(),
                  getParentForChildren(),
                  isClean());
          clientEnterRoom_ = null;
        }
        return clientEnterRoomBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientDoCatch clientDoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientDoCatch, com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder, com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder> clientDoCatchBuilder_;
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public boolean hasClientDoCatch() {
        return clientDoCatchBuilder_ != null || clientDoCatch_ != null;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientDoCatch getClientDoCatch() {
        if (clientDoCatchBuilder_ == null) {
          return clientDoCatch_ == null ? com.kys.util.netty.proto.GameProto.ClientDoCatch.getDefaultInstance() : clientDoCatch_;
        } else {
          return clientDoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public Builder setClientDoCatch(com.kys.util.netty.proto.GameProto.ClientDoCatch value) {
        if (clientDoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDoCatch_ = value;
          onChanged();
        } else {
          clientDoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public Builder setClientDoCatch(
          com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder builderForValue) {
        if (clientDoCatchBuilder_ == null) {
          clientDoCatch_ = builderForValue.build();
          onChanged();
        } else {
          clientDoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public Builder mergeClientDoCatch(com.kys.util.netty.proto.GameProto.ClientDoCatch value) {
        if (clientDoCatchBuilder_ == null) {
          if (clientDoCatch_ != null) {
            clientDoCatch_ =
              com.kys.util.netty.proto.GameProto.ClientDoCatch.newBuilder(clientDoCatch_).mergeFrom(value).buildPartial();
          } else {
            clientDoCatch_ = value;
          }
          onChanged();
        } else {
          clientDoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public Builder clearClientDoCatch() {
        if (clientDoCatchBuilder_ == null) {
          clientDoCatch_ = null;
          onChanged();
        } else {
          clientDoCatch_ = null;
          clientDoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder getClientDoCatchBuilder() {
        
        onChanged();
        return getClientDoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder getClientDoCatchOrBuilder() {
        if (clientDoCatchBuilder_ != null) {
          return clientDoCatchBuilder_.getMessageOrBuilder();
        } else {
          return clientDoCatch_ == null ?
              com.kys.util.netty.proto.GameProto.ClientDoCatch.getDefaultInstance() : clientDoCatch_;
        }
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientDoCatch, com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder, com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder> 
          getClientDoCatchFieldBuilder() {
        if (clientDoCatchBuilder_ == null) {
          clientDoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientDoCatch, com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder, com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder>(
                  getClientDoCatch(),
                  getParentForChildren(),
                  isClean());
          clientDoCatch_ = null;
        }
        return clientDoCatchBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientPlayCards clientPlayCards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientPlayCards, com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder, com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder> clientPlayCardsBuilder_;
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public boolean hasClientPlayCards() {
        return clientPlayCardsBuilder_ != null || clientPlayCards_ != null;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientPlayCards getClientPlayCards() {
        if (clientPlayCardsBuilder_ == null) {
          return clientPlayCards_ == null ? com.kys.util.netty.proto.GameProto.ClientPlayCards.getDefaultInstance() : clientPlayCards_;
        } else {
          return clientPlayCardsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public Builder setClientPlayCards(com.kys.util.netty.proto.GameProto.ClientPlayCards value) {
        if (clientPlayCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientPlayCards_ = value;
          onChanged();
        } else {
          clientPlayCardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public Builder setClientPlayCards(
          com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder builderForValue) {
        if (clientPlayCardsBuilder_ == null) {
          clientPlayCards_ = builderForValue.build();
          onChanged();
        } else {
          clientPlayCardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public Builder mergeClientPlayCards(com.kys.util.netty.proto.GameProto.ClientPlayCards value) {
        if (clientPlayCardsBuilder_ == null) {
          if (clientPlayCards_ != null) {
            clientPlayCards_ =
              com.kys.util.netty.proto.GameProto.ClientPlayCards.newBuilder(clientPlayCards_).mergeFrom(value).buildPartial();
          } else {
            clientPlayCards_ = value;
          }
          onChanged();
        } else {
          clientPlayCardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public Builder clearClientPlayCards() {
        if (clientPlayCardsBuilder_ == null) {
          clientPlayCards_ = null;
          onChanged();
        } else {
          clientPlayCards_ = null;
          clientPlayCardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder getClientPlayCardsBuilder() {
        
        onChanged();
        return getClientPlayCardsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder getClientPlayCardsOrBuilder() {
        if (clientPlayCardsBuilder_ != null) {
          return clientPlayCardsBuilder_.getMessageOrBuilder();
        } else {
          return clientPlayCards_ == null ?
              com.kys.util.netty.proto.GameProto.ClientPlayCards.getDefaultInstance() : clientPlayCards_;
        }
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientPlayCards, com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder, com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder> 
          getClientPlayCardsFieldBuilder() {
        if (clientPlayCardsBuilder_ == null) {
          clientPlayCardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientPlayCards, com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder, com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder>(
                  getClientPlayCards(),
                  getParentForChildren(),
                  isClean());
          clientPlayCards_ = null;
        }
        return clientPlayCardsBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientRecoverGame clientRecoverGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientRecoverGame, com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder> clientRecoverGameBuilder_;
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public boolean hasClientRecoverGame() {
        return clientRecoverGameBuilder_ != null || clientRecoverGame_ != null;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRecoverGame getClientRecoverGame() {
        if (clientRecoverGameBuilder_ == null) {
          return clientRecoverGame_ == null ? com.kys.util.netty.proto.GameProto.ClientRecoverGame.getDefaultInstance() : clientRecoverGame_;
        } else {
          return clientRecoverGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public Builder setClientRecoverGame(com.kys.util.netty.proto.GameProto.ClientRecoverGame value) {
        if (clientRecoverGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientRecoverGame_ = value;
          onChanged();
        } else {
          clientRecoverGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public Builder setClientRecoverGame(
          com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder builderForValue) {
        if (clientRecoverGameBuilder_ == null) {
          clientRecoverGame_ = builderForValue.build();
          onChanged();
        } else {
          clientRecoverGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public Builder mergeClientRecoverGame(com.kys.util.netty.proto.GameProto.ClientRecoverGame value) {
        if (clientRecoverGameBuilder_ == null) {
          if (clientRecoverGame_ != null) {
            clientRecoverGame_ =
              com.kys.util.netty.proto.GameProto.ClientRecoverGame.newBuilder(clientRecoverGame_).mergeFrom(value).buildPartial();
          } else {
            clientRecoverGame_ = value;
          }
          onChanged();
        } else {
          clientRecoverGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public Builder clearClientRecoverGame() {
        if (clientRecoverGameBuilder_ == null) {
          clientRecoverGame_ = null;
          onChanged();
        } else {
          clientRecoverGame_ = null;
          clientRecoverGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder getClientRecoverGameBuilder() {
        
        onChanged();
        return getClientRecoverGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder getClientRecoverGameOrBuilder() {
        if (clientRecoverGameBuilder_ != null) {
          return clientRecoverGameBuilder_.getMessageOrBuilder();
        } else {
          return clientRecoverGame_ == null ?
              com.kys.util.netty.proto.GameProto.ClientRecoverGame.getDefaultInstance() : clientRecoverGame_;
        }
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientRecoverGame, com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder> 
          getClientRecoverGameFieldBuilder() {
        if (clientRecoverGameBuilder_ == null) {
          clientRecoverGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientRecoverGame, com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder>(
                  getClientRecoverGame(),
                  getParentForChildren(),
                  isClean());
          clientRecoverGame_ = null;
        }
        return clientRecoverGameBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientAutoPlay clientAutoPlay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientAutoPlay, com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder> clientAutoPlayBuilder_;
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public boolean hasClientAutoPlay() {
        return clientAutoPlayBuilder_ != null || clientAutoPlay_ != null;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientAutoPlay getClientAutoPlay() {
        if (clientAutoPlayBuilder_ == null) {
          return clientAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.ClientAutoPlay.getDefaultInstance() : clientAutoPlay_;
        } else {
          return clientAutoPlayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public Builder setClientAutoPlay(com.kys.util.netty.proto.GameProto.ClientAutoPlay value) {
        if (clientAutoPlayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientAutoPlay_ = value;
          onChanged();
        } else {
          clientAutoPlayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public Builder setClientAutoPlay(
          com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder builderForValue) {
        if (clientAutoPlayBuilder_ == null) {
          clientAutoPlay_ = builderForValue.build();
          onChanged();
        } else {
          clientAutoPlayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public Builder mergeClientAutoPlay(com.kys.util.netty.proto.GameProto.ClientAutoPlay value) {
        if (clientAutoPlayBuilder_ == null) {
          if (clientAutoPlay_ != null) {
            clientAutoPlay_ =
              com.kys.util.netty.proto.GameProto.ClientAutoPlay.newBuilder(clientAutoPlay_).mergeFrom(value).buildPartial();
          } else {
            clientAutoPlay_ = value;
          }
          onChanged();
        } else {
          clientAutoPlayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public Builder clearClientAutoPlay() {
        if (clientAutoPlayBuilder_ == null) {
          clientAutoPlay_ = null;
          onChanged();
        } else {
          clientAutoPlay_ = null;
          clientAutoPlayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder getClientAutoPlayBuilder() {
        
        onChanged();
        return getClientAutoPlayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder getClientAutoPlayOrBuilder() {
        if (clientAutoPlayBuilder_ != null) {
          return clientAutoPlayBuilder_.getMessageOrBuilder();
        } else {
          return clientAutoPlay_ == null ?
              com.kys.util.netty.proto.GameProto.ClientAutoPlay.getDefaultInstance() : clientAutoPlay_;
        }
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientAutoPlay, com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder> 
          getClientAutoPlayFieldBuilder() {
        if (clientAutoPlayBuilder_ == null) {
          clientAutoPlayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientAutoPlay, com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder>(
                  getClientAutoPlay(),
                  getParentForChildren(),
                  isClean());
          clientAutoPlay_ = null;
        }
        return clientAutoPlayBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientLeaveRoom clientLeaveRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientLeaveRoom, com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder> clientLeaveRoomBuilder_;
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public boolean hasClientLeaveRoom() {
        return clientLeaveRoomBuilder_ != null || clientLeaveRoom_ != null;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientLeaveRoom getClientLeaveRoom() {
        if (clientLeaveRoomBuilder_ == null) {
          return clientLeaveRoom_ == null ? com.kys.util.netty.proto.GameProto.ClientLeaveRoom.getDefaultInstance() : clientLeaveRoom_;
        } else {
          return clientLeaveRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public Builder setClientLeaveRoom(com.kys.util.netty.proto.GameProto.ClientLeaveRoom value) {
        if (clientLeaveRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientLeaveRoom_ = value;
          onChanged();
        } else {
          clientLeaveRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public Builder setClientLeaveRoom(
          com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder builderForValue) {
        if (clientLeaveRoomBuilder_ == null) {
          clientLeaveRoom_ = builderForValue.build();
          onChanged();
        } else {
          clientLeaveRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public Builder mergeClientLeaveRoom(com.kys.util.netty.proto.GameProto.ClientLeaveRoom value) {
        if (clientLeaveRoomBuilder_ == null) {
          if (clientLeaveRoom_ != null) {
            clientLeaveRoom_ =
              com.kys.util.netty.proto.GameProto.ClientLeaveRoom.newBuilder(clientLeaveRoom_).mergeFrom(value).buildPartial();
          } else {
            clientLeaveRoom_ = value;
          }
          onChanged();
        } else {
          clientLeaveRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public Builder clearClientLeaveRoom() {
        if (clientLeaveRoomBuilder_ == null) {
          clientLeaveRoom_ = null;
          onChanged();
        } else {
          clientLeaveRoom_ = null;
          clientLeaveRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder getClientLeaveRoomBuilder() {
        
        onChanged();
        return getClientLeaveRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder getClientLeaveRoomOrBuilder() {
        if (clientLeaveRoomBuilder_ != null) {
          return clientLeaveRoomBuilder_.getMessageOrBuilder();
        } else {
          return clientLeaveRoom_ == null ?
              com.kys.util.netty.proto.GameProto.ClientLeaveRoom.getDefaultInstance() : clientLeaveRoom_;
        }
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientLeaveRoom, com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder> 
          getClientLeaveRoomFieldBuilder() {
        if (clientLeaveRoomBuilder_ == null) {
          clientLeaveRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientLeaveRoom, com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder>(
                  getClientLeaveRoom(),
                  getParentForChildren(),
                  isClean());
          clientLeaveRoom_ = null;
        }
        return clientLeaveRoomBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientCancleJoin clientCancleJoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientCancleJoin, com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder> clientCancleJoinBuilder_;
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public boolean hasClientCancleJoin() {
        return clientCancleJoinBuilder_ != null || clientCancleJoin_ != null;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientCancleJoin getClientCancleJoin() {
        if (clientCancleJoinBuilder_ == null) {
          return clientCancleJoin_ == null ? com.kys.util.netty.proto.GameProto.ClientCancleJoin.getDefaultInstance() : clientCancleJoin_;
        } else {
          return clientCancleJoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public Builder setClientCancleJoin(com.kys.util.netty.proto.GameProto.ClientCancleJoin value) {
        if (clientCancleJoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientCancleJoin_ = value;
          onChanged();
        } else {
          clientCancleJoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public Builder setClientCancleJoin(
          com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder builderForValue) {
        if (clientCancleJoinBuilder_ == null) {
          clientCancleJoin_ = builderForValue.build();
          onChanged();
        } else {
          clientCancleJoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public Builder mergeClientCancleJoin(com.kys.util.netty.proto.GameProto.ClientCancleJoin value) {
        if (clientCancleJoinBuilder_ == null) {
          if (clientCancleJoin_ != null) {
            clientCancleJoin_ =
              com.kys.util.netty.proto.GameProto.ClientCancleJoin.newBuilder(clientCancleJoin_).mergeFrom(value).buildPartial();
          } else {
            clientCancleJoin_ = value;
          }
          onChanged();
        } else {
          clientCancleJoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public Builder clearClientCancleJoin() {
        if (clientCancleJoinBuilder_ == null) {
          clientCancleJoin_ = null;
          onChanged();
        } else {
          clientCancleJoin_ = null;
          clientCancleJoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder getClientCancleJoinBuilder() {
        
        onChanged();
        return getClientCancleJoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder getClientCancleJoinOrBuilder() {
        if (clientCancleJoinBuilder_ != null) {
          return clientCancleJoinBuilder_.getMessageOrBuilder();
        } else {
          return clientCancleJoin_ == null ?
              com.kys.util.netty.proto.GameProto.ClientCancleJoin.getDefaultInstance() : clientCancleJoin_;
        }
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientCancleJoin, com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder> 
          getClientCancleJoinFieldBuilder() {
        if (clientCancleJoinBuilder_ == null) {
          clientCancleJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientCancleJoin, com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder>(
                  getClientCancleJoin(),
                  getParentForChildren(),
                  isClean());
          clientCancleJoin_ = null;
        }
        return clientCancleJoinBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientQueryIndex clientQueryIndex_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientQueryIndex, com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder> clientQueryIndexBuilder_;
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public boolean hasClientQueryIndex() {
        return clientQueryIndexBuilder_ != null || clientQueryIndex_ != null;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQueryIndex getClientQueryIndex() {
        if (clientQueryIndexBuilder_ == null) {
          return clientQueryIndex_ == null ? com.kys.util.netty.proto.GameProto.ClientQueryIndex.getDefaultInstance() : clientQueryIndex_;
        } else {
          return clientQueryIndexBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public Builder setClientQueryIndex(com.kys.util.netty.proto.GameProto.ClientQueryIndex value) {
        if (clientQueryIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryIndex_ = value;
          onChanged();
        } else {
          clientQueryIndexBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public Builder setClientQueryIndex(
          com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder builderForValue) {
        if (clientQueryIndexBuilder_ == null) {
          clientQueryIndex_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryIndexBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public Builder mergeClientQueryIndex(com.kys.util.netty.proto.GameProto.ClientQueryIndex value) {
        if (clientQueryIndexBuilder_ == null) {
          if (clientQueryIndex_ != null) {
            clientQueryIndex_ =
              com.kys.util.netty.proto.GameProto.ClientQueryIndex.newBuilder(clientQueryIndex_).mergeFrom(value).buildPartial();
          } else {
            clientQueryIndex_ = value;
          }
          onChanged();
        } else {
          clientQueryIndexBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public Builder clearClientQueryIndex() {
        if (clientQueryIndexBuilder_ == null) {
          clientQueryIndex_ = null;
          onChanged();
        } else {
          clientQueryIndex_ = null;
          clientQueryIndexBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder getClientQueryIndexBuilder() {
        
        onChanged();
        return getClientQueryIndexFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder getClientQueryIndexOrBuilder() {
        if (clientQueryIndexBuilder_ != null) {
          return clientQueryIndexBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryIndex_ == null ?
              com.kys.util.netty.proto.GameProto.ClientQueryIndex.getDefaultInstance() : clientQueryIndex_;
        }
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientQueryIndex, com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder> 
          getClientQueryIndexFieldBuilder() {
        if (clientQueryIndexBuilder_ == null) {
          clientQueryIndexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientQueryIndex, com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder>(
                  getClientQueryIndex(),
                  getParentForChildren(),
                  isClean());
          clientQueryIndex_ = null;
        }
        return clientQueryIndexBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientRetryReturnGame clientRetryReturnGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientRetryReturnGame, com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder> clientRetryReturnGameBuilder_;
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public boolean hasClientRetryReturnGame() {
        return clientRetryReturnGameBuilder_ != null || clientRetryReturnGame_ != null;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRetryReturnGame getClientRetryReturnGame() {
        if (clientRetryReturnGameBuilder_ == null) {
          return clientRetryReturnGame_ == null ? com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.getDefaultInstance() : clientRetryReturnGame_;
        } else {
          return clientRetryReturnGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public Builder setClientRetryReturnGame(com.kys.util.netty.proto.GameProto.ClientRetryReturnGame value) {
        if (clientRetryReturnGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientRetryReturnGame_ = value;
          onChanged();
        } else {
          clientRetryReturnGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public Builder setClientRetryReturnGame(
          com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder builderForValue) {
        if (clientRetryReturnGameBuilder_ == null) {
          clientRetryReturnGame_ = builderForValue.build();
          onChanged();
        } else {
          clientRetryReturnGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public Builder mergeClientRetryReturnGame(com.kys.util.netty.proto.GameProto.ClientRetryReturnGame value) {
        if (clientRetryReturnGameBuilder_ == null) {
          if (clientRetryReturnGame_ != null) {
            clientRetryReturnGame_ =
              com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.newBuilder(clientRetryReturnGame_).mergeFrom(value).buildPartial();
          } else {
            clientRetryReturnGame_ = value;
          }
          onChanged();
        } else {
          clientRetryReturnGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public Builder clearClientRetryReturnGame() {
        if (clientRetryReturnGameBuilder_ == null) {
          clientRetryReturnGame_ = null;
          onChanged();
        } else {
          clientRetryReturnGame_ = null;
          clientRetryReturnGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder getClientRetryReturnGameBuilder() {
        
        onChanged();
        return getClientRetryReturnGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder getClientRetryReturnGameOrBuilder() {
        if (clientRetryReturnGameBuilder_ != null) {
          return clientRetryReturnGameBuilder_.getMessageOrBuilder();
        } else {
          return clientRetryReturnGame_ == null ?
              com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.getDefaultInstance() : clientRetryReturnGame_;
        }
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientRetryReturnGame, com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder> 
          getClientRetryReturnGameFieldBuilder() {
        if (clientRetryReturnGameBuilder_ == null) {
          clientRetryReturnGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientRetryReturnGame, com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder>(
                  getClientRetryReturnGame(),
                  getParentForChildren(),
                  isClean());
          clientRetryReturnGame_ = null;
        }
        return clientRetryReturnGameBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetRankList clientGetRankList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRankList, com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder, com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder> clientGetRankListBuilder_;
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public boolean hasClientGetRankList() {
        return clientGetRankListBuilder_ != null || clientGetRankList_ != null;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRankList getClientGetRankList() {
        if (clientGetRankListBuilder_ == null) {
          return clientGetRankList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRankList.getDefaultInstance() : clientGetRankList_;
        } else {
          return clientGetRankListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public Builder setClientGetRankList(com.kys.util.netty.proto.HallProto.ClientGetRankList value) {
        if (clientGetRankListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetRankList_ = value;
          onChanged();
        } else {
          clientGetRankListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public Builder setClientGetRankList(
          com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder builderForValue) {
        if (clientGetRankListBuilder_ == null) {
          clientGetRankList_ = builderForValue.build();
          onChanged();
        } else {
          clientGetRankListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public Builder mergeClientGetRankList(com.kys.util.netty.proto.HallProto.ClientGetRankList value) {
        if (clientGetRankListBuilder_ == null) {
          if (clientGetRankList_ != null) {
            clientGetRankList_ =
              com.kys.util.netty.proto.HallProto.ClientGetRankList.newBuilder(clientGetRankList_).mergeFrom(value).buildPartial();
          } else {
            clientGetRankList_ = value;
          }
          onChanged();
        } else {
          clientGetRankListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public Builder clearClientGetRankList() {
        if (clientGetRankListBuilder_ == null) {
          clientGetRankList_ = null;
          onChanged();
        } else {
          clientGetRankList_ = null;
          clientGetRankListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder getClientGetRankListBuilder() {
        
        onChanged();
        return getClientGetRankListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder getClientGetRankListOrBuilder() {
        if (clientGetRankListBuilder_ != null) {
          return clientGetRankListBuilder_.getMessageOrBuilder();
        } else {
          return clientGetRankList_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetRankList.getDefaultInstance() : clientGetRankList_;
        }
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRankList, com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder, com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder> 
          getClientGetRankListFieldBuilder() {
        if (clientGetRankListBuilder_ == null) {
          clientGetRankListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetRankList, com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder, com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder>(
                  getClientGetRankList(),
                  getParentForChildren(),
                  isClean());
          clientGetRankList_ = null;
        }
        return clientGetRankListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetRoomConfig clientGetRoomConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder> clientGetRoomConfigBuilder_;
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public boolean hasClientGetRoomConfig() {
        return clientGetRoomConfigBuilder_ != null || clientGetRoomConfig_ != null;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomConfig getClientGetRoomConfig() {
        if (clientGetRoomConfigBuilder_ == null) {
          return clientGetRoomConfig_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.getDefaultInstance() : clientGetRoomConfig_;
        } else {
          return clientGetRoomConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public Builder setClientGetRoomConfig(com.kys.util.netty.proto.HallProto.ClientGetRoomConfig value) {
        if (clientGetRoomConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetRoomConfig_ = value;
          onChanged();
        } else {
          clientGetRoomConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public Builder setClientGetRoomConfig(
          com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder builderForValue) {
        if (clientGetRoomConfigBuilder_ == null) {
          clientGetRoomConfig_ = builderForValue.build();
          onChanged();
        } else {
          clientGetRoomConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public Builder mergeClientGetRoomConfig(com.kys.util.netty.proto.HallProto.ClientGetRoomConfig value) {
        if (clientGetRoomConfigBuilder_ == null) {
          if (clientGetRoomConfig_ != null) {
            clientGetRoomConfig_ =
              com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.newBuilder(clientGetRoomConfig_).mergeFrom(value).buildPartial();
          } else {
            clientGetRoomConfig_ = value;
          }
          onChanged();
        } else {
          clientGetRoomConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public Builder clearClientGetRoomConfig() {
        if (clientGetRoomConfigBuilder_ == null) {
          clientGetRoomConfig_ = null;
          onChanged();
        } else {
          clientGetRoomConfig_ = null;
          clientGetRoomConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder getClientGetRoomConfigBuilder() {
        
        onChanged();
        return getClientGetRoomConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder getClientGetRoomConfigOrBuilder() {
        if (clientGetRoomConfigBuilder_ != null) {
          return clientGetRoomConfigBuilder_.getMessageOrBuilder();
        } else {
          return clientGetRoomConfig_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.getDefaultInstance() : clientGetRoomConfig_;
        }
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder> 
          getClientGetRoomConfigFieldBuilder() {
        if (clientGetRoomConfigBuilder_ == null) {
          clientGetRoomConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetRoomConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder>(
                  getClientGetRoomConfig(),
                  getParentForChildren(),
                  isClean());
          clientGetRoomConfig_ = null;
        }
        return clientGetRoomConfigBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientRewardMessage clientRewardMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientRewardMessage, com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder> clientRewardMessageBuilder_;
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public boolean hasClientRewardMessage() {
        return clientRewardMessageBuilder_ != null || clientRewardMessage_ != null;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientRewardMessage getClientRewardMessage() {
        if (clientRewardMessageBuilder_ == null) {
          return clientRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.ClientRewardMessage.getDefaultInstance() : clientRewardMessage_;
        } else {
          return clientRewardMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public Builder setClientRewardMessage(com.kys.util.netty.proto.HallProto.ClientRewardMessage value) {
        if (clientRewardMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientRewardMessage_ = value;
          onChanged();
        } else {
          clientRewardMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public Builder setClientRewardMessage(
          com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder builderForValue) {
        if (clientRewardMessageBuilder_ == null) {
          clientRewardMessage_ = builderForValue.build();
          onChanged();
        } else {
          clientRewardMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public Builder mergeClientRewardMessage(com.kys.util.netty.proto.HallProto.ClientRewardMessage value) {
        if (clientRewardMessageBuilder_ == null) {
          if (clientRewardMessage_ != null) {
            clientRewardMessage_ =
              com.kys.util.netty.proto.HallProto.ClientRewardMessage.newBuilder(clientRewardMessage_).mergeFrom(value).buildPartial();
          } else {
            clientRewardMessage_ = value;
          }
          onChanged();
        } else {
          clientRewardMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public Builder clearClientRewardMessage() {
        if (clientRewardMessageBuilder_ == null) {
          clientRewardMessage_ = null;
          onChanged();
        } else {
          clientRewardMessage_ = null;
          clientRewardMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder getClientRewardMessageBuilder() {
        
        onChanged();
        return getClientRewardMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder getClientRewardMessageOrBuilder() {
        if (clientRewardMessageBuilder_ != null) {
          return clientRewardMessageBuilder_.getMessageOrBuilder();
        } else {
          return clientRewardMessage_ == null ?
              com.kys.util.netty.proto.HallProto.ClientRewardMessage.getDefaultInstance() : clientRewardMessage_;
        }
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientRewardMessage, com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder> 
          getClientRewardMessageFieldBuilder() {
        if (clientRewardMessageBuilder_ == null) {
          clientRewardMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientRewardMessage, com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder>(
                  getClientRewardMessage(),
                  getParentForChildren(),
                  isClean());
          clientRewardMessage_ = null;
        }
        return clientRewardMessageBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond clientGetMonthCardDiamond_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder> clientGetMonthCardDiamondBuilder_;
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public boolean hasClientGetMonthCardDiamond() {
        return clientGetMonthCardDiamondBuilder_ != null || clientGetMonthCardDiamond_ != null;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond getClientGetMonthCardDiamond() {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          return clientGetMonthCardDiamond_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.getDefaultInstance() : clientGetMonthCardDiamond_;
        } else {
          return clientGetMonthCardDiamondBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public Builder setClientGetMonthCardDiamond(com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond value) {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMonthCardDiamond_ = value;
          onChanged();
        } else {
          clientGetMonthCardDiamondBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public Builder setClientGetMonthCardDiamond(
          com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder builderForValue) {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          clientGetMonthCardDiamond_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMonthCardDiamondBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public Builder mergeClientGetMonthCardDiamond(com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond value) {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          if (clientGetMonthCardDiamond_ != null) {
            clientGetMonthCardDiamond_ =
              com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.newBuilder(clientGetMonthCardDiamond_).mergeFrom(value).buildPartial();
          } else {
            clientGetMonthCardDiamond_ = value;
          }
          onChanged();
        } else {
          clientGetMonthCardDiamondBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public Builder clearClientGetMonthCardDiamond() {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          clientGetMonthCardDiamond_ = null;
          onChanged();
        } else {
          clientGetMonthCardDiamond_ = null;
          clientGetMonthCardDiamondBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder getClientGetMonthCardDiamondBuilder() {
        
        onChanged();
        return getClientGetMonthCardDiamondFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder getClientGetMonthCardDiamondOrBuilder() {
        if (clientGetMonthCardDiamondBuilder_ != null) {
          return clientGetMonthCardDiamondBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMonthCardDiamond_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.getDefaultInstance() : clientGetMonthCardDiamond_;
        }
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder> 
          getClientGetMonthCardDiamondFieldBuilder() {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          clientGetMonthCardDiamondBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder>(
                  getClientGetMonthCardDiamond(),
                  getParentForChildren(),
                  isClean());
          clientGetMonthCardDiamond_ = null;
        }
        return clientGetMonthCardDiamondBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetLotteryCount clientGetLotteryCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetLotteryCount, com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder> clientGetLotteryCountBuilder_;
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public boolean hasClientGetLotteryCount() {
        return clientGetLotteryCountBuilder_ != null || clientGetLotteryCount_ != null;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetLotteryCount getClientGetLotteryCount() {
        if (clientGetLotteryCountBuilder_ == null) {
          return clientGetLotteryCount_ == null ? com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.getDefaultInstance() : clientGetLotteryCount_;
        } else {
          return clientGetLotteryCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public Builder setClientGetLotteryCount(com.kys.util.netty.proto.HallProto.ClientGetLotteryCount value) {
        if (clientGetLotteryCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetLotteryCount_ = value;
          onChanged();
        } else {
          clientGetLotteryCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public Builder setClientGetLotteryCount(
          com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder builderForValue) {
        if (clientGetLotteryCountBuilder_ == null) {
          clientGetLotteryCount_ = builderForValue.build();
          onChanged();
        } else {
          clientGetLotteryCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public Builder mergeClientGetLotteryCount(com.kys.util.netty.proto.HallProto.ClientGetLotteryCount value) {
        if (clientGetLotteryCountBuilder_ == null) {
          if (clientGetLotteryCount_ != null) {
            clientGetLotteryCount_ =
              com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.newBuilder(clientGetLotteryCount_).mergeFrom(value).buildPartial();
          } else {
            clientGetLotteryCount_ = value;
          }
          onChanged();
        } else {
          clientGetLotteryCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public Builder clearClientGetLotteryCount() {
        if (clientGetLotteryCountBuilder_ == null) {
          clientGetLotteryCount_ = null;
          onChanged();
        } else {
          clientGetLotteryCount_ = null;
          clientGetLotteryCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder getClientGetLotteryCountBuilder() {
        
        onChanged();
        return getClientGetLotteryCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder getClientGetLotteryCountOrBuilder() {
        if (clientGetLotteryCountBuilder_ != null) {
          return clientGetLotteryCountBuilder_.getMessageOrBuilder();
        } else {
          return clientGetLotteryCount_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.getDefaultInstance() : clientGetLotteryCount_;
        }
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetLotteryCount, com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder> 
          getClientGetLotteryCountFieldBuilder() {
        if (clientGetLotteryCountBuilder_ == null) {
          clientGetLotteryCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetLotteryCount, com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder>(
                  getClientGetLotteryCount(),
                  getParentForChildren(),
                  isClean());
          clientGetLotteryCount_ = null;
        }
        return clientGetLotteryCountBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetRoomInfo clientGetRoomInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomInfo, com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder> clientGetRoomInfoBuilder_;
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public boolean hasClientGetRoomInfo() {
        return clientGetRoomInfoBuilder_ != null || clientGetRoomInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomInfo getClientGetRoomInfo() {
        if (clientGetRoomInfoBuilder_ == null) {
          return clientGetRoomInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.getDefaultInstance() : clientGetRoomInfo_;
        } else {
          return clientGetRoomInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public Builder setClientGetRoomInfo(com.kys.util.netty.proto.HallProto.ClientGetRoomInfo value) {
        if (clientGetRoomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetRoomInfo_ = value;
          onChanged();
        } else {
          clientGetRoomInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public Builder setClientGetRoomInfo(
          com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder builderForValue) {
        if (clientGetRoomInfoBuilder_ == null) {
          clientGetRoomInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetRoomInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public Builder mergeClientGetRoomInfo(com.kys.util.netty.proto.HallProto.ClientGetRoomInfo value) {
        if (clientGetRoomInfoBuilder_ == null) {
          if (clientGetRoomInfo_ != null) {
            clientGetRoomInfo_ =
              com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.newBuilder(clientGetRoomInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetRoomInfo_ = value;
          }
          onChanged();
        } else {
          clientGetRoomInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public Builder clearClientGetRoomInfo() {
        if (clientGetRoomInfoBuilder_ == null) {
          clientGetRoomInfo_ = null;
          onChanged();
        } else {
          clientGetRoomInfo_ = null;
          clientGetRoomInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder getClientGetRoomInfoBuilder() {
        
        onChanged();
        return getClientGetRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder getClientGetRoomInfoOrBuilder() {
        if (clientGetRoomInfoBuilder_ != null) {
          return clientGetRoomInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetRoomInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.getDefaultInstance() : clientGetRoomInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomInfo, com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder> 
          getClientGetRoomInfoFieldBuilder() {
        if (clientGetRoomInfoBuilder_ == null) {
          clientGetRoomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetRoomInfo, com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder>(
                  getClientGetRoomInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetRoomInfo_ = null;
        }
        return clientGetRoomInfoBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientSendTelCode clientSendTelCode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSendTelCode, com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder> clientSendTelCodeBuilder_;
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public boolean hasClientSendTelCode() {
        return clientSendTelCodeBuilder_ != null || clientSendTelCode_ != null;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSendTelCode getClientSendTelCode() {
        if (clientSendTelCodeBuilder_ == null) {
          return clientSendTelCode_ == null ? com.kys.util.netty.proto.HallProto.ClientSendTelCode.getDefaultInstance() : clientSendTelCode_;
        } else {
          return clientSendTelCodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public Builder setClientSendTelCode(com.kys.util.netty.proto.HallProto.ClientSendTelCode value) {
        if (clientSendTelCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSendTelCode_ = value;
          onChanged();
        } else {
          clientSendTelCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public Builder setClientSendTelCode(
          com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder builderForValue) {
        if (clientSendTelCodeBuilder_ == null) {
          clientSendTelCode_ = builderForValue.build();
          onChanged();
        } else {
          clientSendTelCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public Builder mergeClientSendTelCode(com.kys.util.netty.proto.HallProto.ClientSendTelCode value) {
        if (clientSendTelCodeBuilder_ == null) {
          if (clientSendTelCode_ != null) {
            clientSendTelCode_ =
              com.kys.util.netty.proto.HallProto.ClientSendTelCode.newBuilder(clientSendTelCode_).mergeFrom(value).buildPartial();
          } else {
            clientSendTelCode_ = value;
          }
          onChanged();
        } else {
          clientSendTelCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public Builder clearClientSendTelCode() {
        if (clientSendTelCodeBuilder_ == null) {
          clientSendTelCode_ = null;
          onChanged();
        } else {
          clientSendTelCode_ = null;
          clientSendTelCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder getClientSendTelCodeBuilder() {
        
        onChanged();
        return getClientSendTelCodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder getClientSendTelCodeOrBuilder() {
        if (clientSendTelCodeBuilder_ != null) {
          return clientSendTelCodeBuilder_.getMessageOrBuilder();
        } else {
          return clientSendTelCode_ == null ?
              com.kys.util.netty.proto.HallProto.ClientSendTelCode.getDefaultInstance() : clientSendTelCode_;
        }
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSendTelCode, com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder> 
          getClientSendTelCodeFieldBuilder() {
        if (clientSendTelCodeBuilder_ == null) {
          clientSendTelCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientSendTelCode, com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder>(
                  getClientSendTelCode(),
                  getParentForChildren(),
                  isClean());
          clientSendTelCode_ = null;
        }
        return clientSendTelCodeBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientVerifyTelCode clientVerifyTelCode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientVerifyTelCode, com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder> clientVerifyTelCodeBuilder_;
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public boolean hasClientVerifyTelCode() {
        return clientVerifyTelCodeBuilder_ != null || clientVerifyTelCode_ != null;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientVerifyTelCode getClientVerifyTelCode() {
        if (clientVerifyTelCodeBuilder_ == null) {
          return clientVerifyTelCode_ == null ? com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.getDefaultInstance() : clientVerifyTelCode_;
        } else {
          return clientVerifyTelCodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public Builder setClientVerifyTelCode(com.kys.util.netty.proto.HallProto.ClientVerifyTelCode value) {
        if (clientVerifyTelCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientVerifyTelCode_ = value;
          onChanged();
        } else {
          clientVerifyTelCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public Builder setClientVerifyTelCode(
          com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder builderForValue) {
        if (clientVerifyTelCodeBuilder_ == null) {
          clientVerifyTelCode_ = builderForValue.build();
          onChanged();
        } else {
          clientVerifyTelCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public Builder mergeClientVerifyTelCode(com.kys.util.netty.proto.HallProto.ClientVerifyTelCode value) {
        if (clientVerifyTelCodeBuilder_ == null) {
          if (clientVerifyTelCode_ != null) {
            clientVerifyTelCode_ =
              com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.newBuilder(clientVerifyTelCode_).mergeFrom(value).buildPartial();
          } else {
            clientVerifyTelCode_ = value;
          }
          onChanged();
        } else {
          clientVerifyTelCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public Builder clearClientVerifyTelCode() {
        if (clientVerifyTelCodeBuilder_ == null) {
          clientVerifyTelCode_ = null;
          onChanged();
        } else {
          clientVerifyTelCode_ = null;
          clientVerifyTelCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder getClientVerifyTelCodeBuilder() {
        
        onChanged();
        return getClientVerifyTelCodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder getClientVerifyTelCodeOrBuilder() {
        if (clientVerifyTelCodeBuilder_ != null) {
          return clientVerifyTelCodeBuilder_.getMessageOrBuilder();
        } else {
          return clientVerifyTelCode_ == null ?
              com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.getDefaultInstance() : clientVerifyTelCode_;
        }
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientVerifyTelCode, com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder> 
          getClientVerifyTelCodeFieldBuilder() {
        if (clientVerifyTelCodeBuilder_ == null) {
          clientVerifyTelCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientVerifyTelCode, com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder>(
                  getClientVerifyTelCode(),
                  getParentForChildren(),
                  isClean());
          clientVerifyTelCode_ = null;
        }
        return clientVerifyTelCodeBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientSharePackage clientSharePackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSharePackage, com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder, com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder> clientSharePackageBuilder_;
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public boolean hasClientSharePackage() {
        return clientSharePackageBuilder_ != null || clientSharePackage_ != null;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSharePackage getClientSharePackage() {
        if (clientSharePackageBuilder_ == null) {
          return clientSharePackage_ == null ? com.kys.util.netty.proto.HallProto.ClientSharePackage.getDefaultInstance() : clientSharePackage_;
        } else {
          return clientSharePackageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public Builder setClientSharePackage(com.kys.util.netty.proto.HallProto.ClientSharePackage value) {
        if (clientSharePackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSharePackage_ = value;
          onChanged();
        } else {
          clientSharePackageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public Builder setClientSharePackage(
          com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder builderForValue) {
        if (clientSharePackageBuilder_ == null) {
          clientSharePackage_ = builderForValue.build();
          onChanged();
        } else {
          clientSharePackageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public Builder mergeClientSharePackage(com.kys.util.netty.proto.HallProto.ClientSharePackage value) {
        if (clientSharePackageBuilder_ == null) {
          if (clientSharePackage_ != null) {
            clientSharePackage_ =
              com.kys.util.netty.proto.HallProto.ClientSharePackage.newBuilder(clientSharePackage_).mergeFrom(value).buildPartial();
          } else {
            clientSharePackage_ = value;
          }
          onChanged();
        } else {
          clientSharePackageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public Builder clearClientSharePackage() {
        if (clientSharePackageBuilder_ == null) {
          clientSharePackage_ = null;
          onChanged();
        } else {
          clientSharePackage_ = null;
          clientSharePackageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder getClientSharePackageBuilder() {
        
        onChanged();
        return getClientSharePackageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder getClientSharePackageOrBuilder() {
        if (clientSharePackageBuilder_ != null) {
          return clientSharePackageBuilder_.getMessageOrBuilder();
        } else {
          return clientSharePackage_ == null ?
              com.kys.util.netty.proto.HallProto.ClientSharePackage.getDefaultInstance() : clientSharePackage_;
        }
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSharePackage, com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder, com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder> 
          getClientSharePackageFieldBuilder() {
        if (clientSharePackageBuilder_ == null) {
          clientSharePackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientSharePackage, com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder, com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder>(
                  getClientSharePackage(),
                  getParentForChildren(),
                  isClean());
          clientSharePackage_ = null;
        }
        return clientSharePackageBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetAwardList clientGetAwardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetAwardList, com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder> clientGetAwardListBuilder_;
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public boolean hasClientGetAwardList() {
        return clientGetAwardListBuilder_ != null || clientGetAwardList_ != null;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAwardList getClientGetAwardList() {
        if (clientGetAwardListBuilder_ == null) {
          return clientGetAwardList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetAwardList.getDefaultInstance() : clientGetAwardList_;
        } else {
          return clientGetAwardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public Builder setClientGetAwardList(com.kys.util.netty.proto.HallProto.ClientGetAwardList value) {
        if (clientGetAwardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetAwardList_ = value;
          onChanged();
        } else {
          clientGetAwardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public Builder setClientGetAwardList(
          com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder builderForValue) {
        if (clientGetAwardListBuilder_ == null) {
          clientGetAwardList_ = builderForValue.build();
          onChanged();
        } else {
          clientGetAwardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public Builder mergeClientGetAwardList(com.kys.util.netty.proto.HallProto.ClientGetAwardList value) {
        if (clientGetAwardListBuilder_ == null) {
          if (clientGetAwardList_ != null) {
            clientGetAwardList_ =
              com.kys.util.netty.proto.HallProto.ClientGetAwardList.newBuilder(clientGetAwardList_).mergeFrom(value).buildPartial();
          } else {
            clientGetAwardList_ = value;
          }
          onChanged();
        } else {
          clientGetAwardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public Builder clearClientGetAwardList() {
        if (clientGetAwardListBuilder_ == null) {
          clientGetAwardList_ = null;
          onChanged();
        } else {
          clientGetAwardList_ = null;
          clientGetAwardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder getClientGetAwardListBuilder() {
        
        onChanged();
        return getClientGetAwardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder getClientGetAwardListOrBuilder() {
        if (clientGetAwardListBuilder_ != null) {
          return clientGetAwardListBuilder_.getMessageOrBuilder();
        } else {
          return clientGetAwardList_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetAwardList.getDefaultInstance() : clientGetAwardList_;
        }
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetAwardList, com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder> 
          getClientGetAwardListFieldBuilder() {
        if (clientGetAwardListBuilder_ == null) {
          clientGetAwardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetAwardList, com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder>(
                  getClientGetAwardList(),
                  getParentForChildren(),
                  isClean());
          clientGetAwardList_ = null;
        }
        return clientGetAwardListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientPlayerLogout clientPlayerLogout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientPlayerLogout, com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder, com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder> clientPlayerLogoutBuilder_;
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public boolean hasClientPlayerLogout() {
        return clientPlayerLogoutBuilder_ != null || clientPlayerLogout_ != null;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientPlayerLogout getClientPlayerLogout() {
        if (clientPlayerLogoutBuilder_ == null) {
          return clientPlayerLogout_ == null ? com.kys.util.netty.proto.HallProto.ClientPlayerLogout.getDefaultInstance() : clientPlayerLogout_;
        } else {
          return clientPlayerLogoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public Builder setClientPlayerLogout(com.kys.util.netty.proto.HallProto.ClientPlayerLogout value) {
        if (clientPlayerLogoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientPlayerLogout_ = value;
          onChanged();
        } else {
          clientPlayerLogoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public Builder setClientPlayerLogout(
          com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder builderForValue) {
        if (clientPlayerLogoutBuilder_ == null) {
          clientPlayerLogout_ = builderForValue.build();
          onChanged();
        } else {
          clientPlayerLogoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public Builder mergeClientPlayerLogout(com.kys.util.netty.proto.HallProto.ClientPlayerLogout value) {
        if (clientPlayerLogoutBuilder_ == null) {
          if (clientPlayerLogout_ != null) {
            clientPlayerLogout_ =
              com.kys.util.netty.proto.HallProto.ClientPlayerLogout.newBuilder(clientPlayerLogout_).mergeFrom(value).buildPartial();
          } else {
            clientPlayerLogout_ = value;
          }
          onChanged();
        } else {
          clientPlayerLogoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public Builder clearClientPlayerLogout() {
        if (clientPlayerLogoutBuilder_ == null) {
          clientPlayerLogout_ = null;
          onChanged();
        } else {
          clientPlayerLogout_ = null;
          clientPlayerLogoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder getClientPlayerLogoutBuilder() {
        
        onChanged();
        return getClientPlayerLogoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder getClientPlayerLogoutOrBuilder() {
        if (clientPlayerLogoutBuilder_ != null) {
          return clientPlayerLogoutBuilder_.getMessageOrBuilder();
        } else {
          return clientPlayerLogout_ == null ?
              com.kys.util.netty.proto.HallProto.ClientPlayerLogout.getDefaultInstance() : clientPlayerLogout_;
        }
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientPlayerLogout, com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder, com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder> 
          getClientPlayerLogoutFieldBuilder() {
        if (clientPlayerLogoutBuilder_ == null) {
          clientPlayerLogoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientPlayerLogout, com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder, com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder>(
                  getClientPlayerLogout(),
                  getParentForChildren(),
                  isClean());
          clientPlayerLogout_ = null;
        }
        return clientPlayerLogoutBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientCheckConnect clientCheckConnect_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientCheckConnect, com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder> clientCheckConnectBuilder_;
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public boolean hasClientCheckConnect() {
        return clientCheckConnectBuilder_ != null || clientCheckConnect_ != null;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCheckConnect getClientCheckConnect() {
        if (clientCheckConnectBuilder_ == null) {
          return clientCheckConnect_ == null ? com.kys.util.netty.proto.HallProto.ClientCheckConnect.getDefaultInstance() : clientCheckConnect_;
        } else {
          return clientCheckConnectBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public Builder setClientCheckConnect(com.kys.util.netty.proto.HallProto.ClientCheckConnect value) {
        if (clientCheckConnectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientCheckConnect_ = value;
          onChanged();
        } else {
          clientCheckConnectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public Builder setClientCheckConnect(
          com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder builderForValue) {
        if (clientCheckConnectBuilder_ == null) {
          clientCheckConnect_ = builderForValue.build();
          onChanged();
        } else {
          clientCheckConnectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public Builder mergeClientCheckConnect(com.kys.util.netty.proto.HallProto.ClientCheckConnect value) {
        if (clientCheckConnectBuilder_ == null) {
          if (clientCheckConnect_ != null) {
            clientCheckConnect_ =
              com.kys.util.netty.proto.HallProto.ClientCheckConnect.newBuilder(clientCheckConnect_).mergeFrom(value).buildPartial();
          } else {
            clientCheckConnect_ = value;
          }
          onChanged();
        } else {
          clientCheckConnectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public Builder clearClientCheckConnect() {
        if (clientCheckConnectBuilder_ == null) {
          clientCheckConnect_ = null;
          onChanged();
        } else {
          clientCheckConnect_ = null;
          clientCheckConnectBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder getClientCheckConnectBuilder() {
        
        onChanged();
        return getClientCheckConnectFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder getClientCheckConnectOrBuilder() {
        if (clientCheckConnectBuilder_ != null) {
          return clientCheckConnectBuilder_.getMessageOrBuilder();
        } else {
          return clientCheckConnect_ == null ?
              com.kys.util.netty.proto.HallProto.ClientCheckConnect.getDefaultInstance() : clientCheckConnect_;
        }
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientCheckConnect, com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder> 
          getClientCheckConnectFieldBuilder() {
        if (clientCheckConnectBuilder_ == null) {
          clientCheckConnectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientCheckConnect, com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder>(
                  getClientCheckConnect(),
                  getParentForChildren(),
                  isClean());
          clientCheckConnect_ = null;
        }
        return clientCheckConnectBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetPFList clientGetPFList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetPFList, com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder, com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder> clientGetPFListBuilder_;
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public boolean hasClientGetPFList() {
        return clientGetPFListBuilder_ != null || clientGetPFList_ != null;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetPFList getClientGetPFList() {
        if (clientGetPFListBuilder_ == null) {
          return clientGetPFList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetPFList.getDefaultInstance() : clientGetPFList_;
        } else {
          return clientGetPFListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public Builder setClientGetPFList(com.kys.util.netty.proto.HallProto.ClientGetPFList value) {
        if (clientGetPFListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetPFList_ = value;
          onChanged();
        } else {
          clientGetPFListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public Builder setClientGetPFList(
          com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder builderForValue) {
        if (clientGetPFListBuilder_ == null) {
          clientGetPFList_ = builderForValue.build();
          onChanged();
        } else {
          clientGetPFListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public Builder mergeClientGetPFList(com.kys.util.netty.proto.HallProto.ClientGetPFList value) {
        if (clientGetPFListBuilder_ == null) {
          if (clientGetPFList_ != null) {
            clientGetPFList_ =
              com.kys.util.netty.proto.HallProto.ClientGetPFList.newBuilder(clientGetPFList_).mergeFrom(value).buildPartial();
          } else {
            clientGetPFList_ = value;
          }
          onChanged();
        } else {
          clientGetPFListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public Builder clearClientGetPFList() {
        if (clientGetPFListBuilder_ == null) {
          clientGetPFList_ = null;
          onChanged();
        } else {
          clientGetPFList_ = null;
          clientGetPFListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder getClientGetPFListBuilder() {
        
        onChanged();
        return getClientGetPFListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder getClientGetPFListOrBuilder() {
        if (clientGetPFListBuilder_ != null) {
          return clientGetPFListBuilder_.getMessageOrBuilder();
        } else {
          return clientGetPFList_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetPFList.getDefaultInstance() : clientGetPFList_;
        }
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetPFList, com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder, com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder> 
          getClientGetPFListFieldBuilder() {
        if (clientGetPFListBuilder_ == null) {
          clientGetPFListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetPFList, com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder, com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder>(
                  getClientGetPFList(),
                  getParentForChildren(),
                  isClean());
          clientGetPFList_ = null;
        }
        return clientGetPFListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientChoosePF clientChoosePF_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientChoosePF, com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder, com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder> clientChoosePFBuilder_;
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public boolean hasClientChoosePF() {
        return clientChoosePFBuilder_ != null || clientChoosePF_ != null;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientChoosePF getClientChoosePF() {
        if (clientChoosePFBuilder_ == null) {
          return clientChoosePF_ == null ? com.kys.util.netty.proto.HallProto.ClientChoosePF.getDefaultInstance() : clientChoosePF_;
        } else {
          return clientChoosePFBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public Builder setClientChoosePF(com.kys.util.netty.proto.HallProto.ClientChoosePF value) {
        if (clientChoosePFBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientChoosePF_ = value;
          onChanged();
        } else {
          clientChoosePFBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public Builder setClientChoosePF(
          com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder builderForValue) {
        if (clientChoosePFBuilder_ == null) {
          clientChoosePF_ = builderForValue.build();
          onChanged();
        } else {
          clientChoosePFBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public Builder mergeClientChoosePF(com.kys.util.netty.proto.HallProto.ClientChoosePF value) {
        if (clientChoosePFBuilder_ == null) {
          if (clientChoosePF_ != null) {
            clientChoosePF_ =
              com.kys.util.netty.proto.HallProto.ClientChoosePF.newBuilder(clientChoosePF_).mergeFrom(value).buildPartial();
          } else {
            clientChoosePF_ = value;
          }
          onChanged();
        } else {
          clientChoosePFBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public Builder clearClientChoosePF() {
        if (clientChoosePFBuilder_ == null) {
          clientChoosePF_ = null;
          onChanged();
        } else {
          clientChoosePF_ = null;
          clientChoosePFBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder getClientChoosePFBuilder() {
        
        onChanged();
        return getClientChoosePFFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder getClientChoosePFOrBuilder() {
        if (clientChoosePFBuilder_ != null) {
          return clientChoosePFBuilder_.getMessageOrBuilder();
        } else {
          return clientChoosePF_ == null ?
              com.kys.util.netty.proto.HallProto.ClientChoosePF.getDefaultInstance() : clientChoosePF_;
        }
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientChoosePF, com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder, com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder> 
          getClientChoosePFFieldBuilder() {
        if (clientChoosePFBuilder_ == null) {
          clientChoosePFBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientChoosePF, com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder, com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder>(
                  getClientChoosePF(),
                  getParentForChildren(),
                  isClean());
          clientChoosePF_ = null;
        }
        return clientChoosePFBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetHistoryRank clientGetHistoryRank_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetHistoryRank, com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder> clientGetHistoryRankBuilder_;
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public boolean hasClientGetHistoryRank() {
        return clientGetHistoryRankBuilder_ != null || clientGetHistoryRank_ != null;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHistoryRank getClientGetHistoryRank() {
        if (clientGetHistoryRankBuilder_ == null) {
          return clientGetHistoryRank_ == null ? com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.getDefaultInstance() : clientGetHistoryRank_;
        } else {
          return clientGetHistoryRankBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public Builder setClientGetHistoryRank(com.kys.util.netty.proto.HallProto.ClientGetHistoryRank value) {
        if (clientGetHistoryRankBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetHistoryRank_ = value;
          onChanged();
        } else {
          clientGetHistoryRankBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public Builder setClientGetHistoryRank(
          com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder builderForValue) {
        if (clientGetHistoryRankBuilder_ == null) {
          clientGetHistoryRank_ = builderForValue.build();
          onChanged();
        } else {
          clientGetHistoryRankBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public Builder mergeClientGetHistoryRank(com.kys.util.netty.proto.HallProto.ClientGetHistoryRank value) {
        if (clientGetHistoryRankBuilder_ == null) {
          if (clientGetHistoryRank_ != null) {
            clientGetHistoryRank_ =
              com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.newBuilder(clientGetHistoryRank_).mergeFrom(value).buildPartial();
          } else {
            clientGetHistoryRank_ = value;
          }
          onChanged();
        } else {
          clientGetHistoryRankBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public Builder clearClientGetHistoryRank() {
        if (clientGetHistoryRankBuilder_ == null) {
          clientGetHistoryRank_ = null;
          onChanged();
        } else {
          clientGetHistoryRank_ = null;
          clientGetHistoryRankBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder getClientGetHistoryRankBuilder() {
        
        onChanged();
        return getClientGetHistoryRankFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder getClientGetHistoryRankOrBuilder() {
        if (clientGetHistoryRankBuilder_ != null) {
          return clientGetHistoryRankBuilder_.getMessageOrBuilder();
        } else {
          return clientGetHistoryRank_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.getDefaultInstance() : clientGetHistoryRank_;
        }
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetHistoryRank, com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder> 
          getClientGetHistoryRankFieldBuilder() {
        if (clientGetHistoryRankBuilder_ == null) {
          clientGetHistoryRankBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetHistoryRank, com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder>(
                  getClientGetHistoryRank(),
                  getParentForChildren(),
                  isClean());
          clientGetHistoryRank_ = null;
        }
        return clientGetHistoryRankBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientH5Reward clientH5Reward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientH5Reward, com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder, com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder> clientH5RewardBuilder_;
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public boolean hasClientH5Reward() {
        return clientH5RewardBuilder_ != null || clientH5Reward_ != null;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientH5Reward getClientH5Reward() {
        if (clientH5RewardBuilder_ == null) {
          return clientH5Reward_ == null ? com.kys.util.netty.proto.HallProto.ClientH5Reward.getDefaultInstance() : clientH5Reward_;
        } else {
          return clientH5RewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public Builder setClientH5Reward(com.kys.util.netty.proto.HallProto.ClientH5Reward value) {
        if (clientH5RewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientH5Reward_ = value;
          onChanged();
        } else {
          clientH5RewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public Builder setClientH5Reward(
          com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder builderForValue) {
        if (clientH5RewardBuilder_ == null) {
          clientH5Reward_ = builderForValue.build();
          onChanged();
        } else {
          clientH5RewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public Builder mergeClientH5Reward(com.kys.util.netty.proto.HallProto.ClientH5Reward value) {
        if (clientH5RewardBuilder_ == null) {
          if (clientH5Reward_ != null) {
            clientH5Reward_ =
              com.kys.util.netty.proto.HallProto.ClientH5Reward.newBuilder(clientH5Reward_).mergeFrom(value).buildPartial();
          } else {
            clientH5Reward_ = value;
          }
          onChanged();
        } else {
          clientH5RewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public Builder clearClientH5Reward() {
        if (clientH5RewardBuilder_ == null) {
          clientH5Reward_ = null;
          onChanged();
        } else {
          clientH5Reward_ = null;
          clientH5RewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder getClientH5RewardBuilder() {
        
        onChanged();
        return getClientH5RewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder getClientH5RewardOrBuilder() {
        if (clientH5RewardBuilder_ != null) {
          return clientH5RewardBuilder_.getMessageOrBuilder();
        } else {
          return clientH5Reward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientH5Reward.getDefaultInstance() : clientH5Reward_;
        }
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientH5Reward, com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder, com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder> 
          getClientH5RewardFieldBuilder() {
        if (clientH5RewardBuilder_ == null) {
          clientH5RewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientH5Reward, com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder, com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder>(
                  getClientH5Reward(),
                  getParentForChildren(),
                  isClean());
          clientH5Reward_ = null;
        }
        return clientH5RewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup clientNewDrawWinCup_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder> clientNewDrawWinCupBuilder_;
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public boolean hasClientNewDrawWinCup() {
        return clientNewDrawWinCupBuilder_ != null || clientNewDrawWinCup_ != null;
      }
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup getClientNewDrawWinCup() {
        if (clientNewDrawWinCupBuilder_ == null) {
          return clientNewDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.getDefaultInstance() : clientNewDrawWinCup_;
        } else {
          return clientNewDrawWinCupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public Builder setClientNewDrawWinCup(com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup value) {
        if (clientNewDrawWinCupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientNewDrawWinCup_ = value;
          onChanged();
        } else {
          clientNewDrawWinCupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public Builder setClientNewDrawWinCup(
          com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder builderForValue) {
        if (clientNewDrawWinCupBuilder_ == null) {
          clientNewDrawWinCup_ = builderForValue.build();
          onChanged();
        } else {
          clientNewDrawWinCupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public Builder mergeClientNewDrawWinCup(com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup value) {
        if (clientNewDrawWinCupBuilder_ == null) {
          if (clientNewDrawWinCup_ != null) {
            clientNewDrawWinCup_ =
              com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.newBuilder(clientNewDrawWinCup_).mergeFrom(value).buildPartial();
          } else {
            clientNewDrawWinCup_ = value;
          }
          onChanged();
        } else {
          clientNewDrawWinCupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public Builder clearClientNewDrawWinCup() {
        if (clientNewDrawWinCupBuilder_ == null) {
          clientNewDrawWinCup_ = null;
          onChanged();
        } else {
          clientNewDrawWinCup_ = null;
          clientNewDrawWinCupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder getClientNewDrawWinCupBuilder() {
        
        onChanged();
        return getClientNewDrawWinCupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder getClientNewDrawWinCupOrBuilder() {
        if (clientNewDrawWinCupBuilder_ != null) {
          return clientNewDrawWinCupBuilder_.getMessageOrBuilder();
        } else {
          return clientNewDrawWinCup_ == null ?
              com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.getDefaultInstance() : clientNewDrawWinCup_;
        }
      }
      /**
       * <pre>
       ** 客户端新抽红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder> 
          getClientNewDrawWinCupFieldBuilder() {
        if (clientNewDrawWinCupBuilder_ == null) {
          clientNewDrawWinCupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder>(
                  getClientNewDrawWinCup(),
                  getParentForChildren(),
                  isClean());
          clientNewDrawWinCup_ = null;
        }
        return clientNewDrawWinCupBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo clientGetNewHallInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder> clientGetNewHallInfoBuilder_;
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public boolean hasClientGetNewHallInfo() {
        return clientGetNewHallInfoBuilder_ != null || clientGetNewHallInfo_ != null;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo getClientGetNewHallInfo() {
        if (clientGetNewHallInfoBuilder_ == null) {
          return clientGetNewHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.getDefaultInstance() : clientGetNewHallInfo_;
        } else {
          return clientGetNewHallInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public Builder setClientGetNewHallInfo(com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo value) {
        if (clientGetNewHallInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetNewHallInfo_ = value;
          onChanged();
        } else {
          clientGetNewHallInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public Builder setClientGetNewHallInfo(
          com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder builderForValue) {
        if (clientGetNewHallInfoBuilder_ == null) {
          clientGetNewHallInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetNewHallInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public Builder mergeClientGetNewHallInfo(com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo value) {
        if (clientGetNewHallInfoBuilder_ == null) {
          if (clientGetNewHallInfo_ != null) {
            clientGetNewHallInfo_ =
              com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.newBuilder(clientGetNewHallInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetNewHallInfo_ = value;
          }
          onChanged();
        } else {
          clientGetNewHallInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public Builder clearClientGetNewHallInfo() {
        if (clientGetNewHallInfoBuilder_ == null) {
          clientGetNewHallInfo_ = null;
          onChanged();
        } else {
          clientGetNewHallInfo_ = null;
          clientGetNewHallInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder getClientGetNewHallInfoBuilder() {
        
        onChanged();
        return getClientGetNewHallInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder getClientGetNewHallInfoOrBuilder() {
        if (clientGetNewHallInfoBuilder_ != null) {
          return clientGetNewHallInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetNewHallInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.getDefaultInstance() : clientGetNewHallInfo_;
        }
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder> 
          getClientGetNewHallInfoFieldBuilder() {
        if (clientGetNewHallInfoBuilder_ == null) {
          clientGetNewHallInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder>(
                  getClientGetNewHallInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetNewHallInfo_ = null;
        }
        return clientGetNewHallInfoBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientLuckWall clientLuckWall_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientLuckWall, com.kys.util.netty.proto.HallProto.ClientLuckWall.Builder, com.kys.util.netty.proto.HallProto.ClientLuckWallOrBuilder> clientLuckWallBuilder_;
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      public boolean hasClientLuckWall() {
        return clientLuckWallBuilder_ != null || clientLuckWall_ != null;
      }
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientLuckWall getClientLuckWall() {
        if (clientLuckWallBuilder_ == null) {
          return clientLuckWall_ == null ? com.kys.util.netty.proto.HallProto.ClientLuckWall.getDefaultInstance() : clientLuckWall_;
        } else {
          return clientLuckWallBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      public Builder setClientLuckWall(com.kys.util.netty.proto.HallProto.ClientLuckWall value) {
        if (clientLuckWallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientLuckWall_ = value;
          onChanged();
        } else {
          clientLuckWallBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      public Builder setClientLuckWall(
          com.kys.util.netty.proto.HallProto.ClientLuckWall.Builder builderForValue) {
        if (clientLuckWallBuilder_ == null) {
          clientLuckWall_ = builderForValue.build();
          onChanged();
        } else {
          clientLuckWallBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      public Builder mergeClientLuckWall(com.kys.util.netty.proto.HallProto.ClientLuckWall value) {
        if (clientLuckWallBuilder_ == null) {
          if (clientLuckWall_ != null) {
            clientLuckWall_ =
              com.kys.util.netty.proto.HallProto.ClientLuckWall.newBuilder(clientLuckWall_).mergeFrom(value).buildPartial();
          } else {
            clientLuckWall_ = value;
          }
          onChanged();
        } else {
          clientLuckWallBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      public Builder clearClientLuckWall() {
        if (clientLuckWallBuilder_ == null) {
          clientLuckWall_ = null;
          onChanged();
        } else {
          clientLuckWall_ = null;
          clientLuckWallBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientLuckWall.Builder getClientLuckWallBuilder() {
        
        onChanged();
        return getClientLuckWallFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientLuckWallOrBuilder getClientLuckWallOrBuilder() {
        if (clientLuckWallBuilder_ != null) {
          return clientLuckWallBuilder_.getMessageOrBuilder();
        } else {
          return clientLuckWall_ == null ?
              com.kys.util.netty.proto.HallProto.ClientLuckWall.getDefaultInstance() : clientLuckWall_;
        }
      }
      /**
       * <pre>
       ** 玩家获取好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLuckWall clientLuckWall = 229;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientLuckWall, com.kys.util.netty.proto.HallProto.ClientLuckWall.Builder, com.kys.util.netty.proto.HallProto.ClientLuckWallOrBuilder> 
          getClientLuckWallFieldBuilder() {
        if (clientLuckWallBuilder_ == null) {
          clientLuckWallBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientLuckWall, com.kys.util.netty.proto.HallProto.ClientLuckWall.Builder, com.kys.util.netty.proto.HallProto.ClientLuckWallOrBuilder>(
                  getClientLuckWall(),
                  getParentForChildren(),
                  isClean());
          clientLuckWall_ = null;
        }
        return clientLuckWallBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientCdkeyAward clientCdkeyAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientCdkeyAward, com.kys.util.netty.proto.HallProto.ClientCdkeyAward.Builder, com.kys.util.netty.proto.HallProto.ClientCdkeyAwardOrBuilder> clientCdkeyAwardBuilder_;
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      public boolean hasClientCdkeyAward() {
        return clientCdkeyAwardBuilder_ != null || clientCdkeyAward_ != null;
      }
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCdkeyAward getClientCdkeyAward() {
        if (clientCdkeyAwardBuilder_ == null) {
          return clientCdkeyAward_ == null ? com.kys.util.netty.proto.HallProto.ClientCdkeyAward.getDefaultInstance() : clientCdkeyAward_;
        } else {
          return clientCdkeyAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      public Builder setClientCdkeyAward(com.kys.util.netty.proto.HallProto.ClientCdkeyAward value) {
        if (clientCdkeyAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientCdkeyAward_ = value;
          onChanged();
        } else {
          clientCdkeyAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      public Builder setClientCdkeyAward(
          com.kys.util.netty.proto.HallProto.ClientCdkeyAward.Builder builderForValue) {
        if (clientCdkeyAwardBuilder_ == null) {
          clientCdkeyAward_ = builderForValue.build();
          onChanged();
        } else {
          clientCdkeyAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      public Builder mergeClientCdkeyAward(com.kys.util.netty.proto.HallProto.ClientCdkeyAward value) {
        if (clientCdkeyAwardBuilder_ == null) {
          if (clientCdkeyAward_ != null) {
            clientCdkeyAward_ =
              com.kys.util.netty.proto.HallProto.ClientCdkeyAward.newBuilder(clientCdkeyAward_).mergeFrom(value).buildPartial();
          } else {
            clientCdkeyAward_ = value;
          }
          onChanged();
        } else {
          clientCdkeyAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      public Builder clearClientCdkeyAward() {
        if (clientCdkeyAwardBuilder_ == null) {
          clientCdkeyAward_ = null;
          onChanged();
        } else {
          clientCdkeyAward_ = null;
          clientCdkeyAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCdkeyAward.Builder getClientCdkeyAwardBuilder() {
        
        onChanged();
        return getClientCdkeyAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCdkeyAwardOrBuilder getClientCdkeyAwardOrBuilder() {
        if (clientCdkeyAwardBuilder_ != null) {
          return clientCdkeyAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientCdkeyAward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientCdkeyAward.getDefaultInstance() : clientCdkeyAward_;
        }
      }
      /**
       * <pre>
       ** 客户端请求cdkey奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCdkeyAward clientCdkeyAward = 230;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientCdkeyAward, com.kys.util.netty.proto.HallProto.ClientCdkeyAward.Builder, com.kys.util.netty.proto.HallProto.ClientCdkeyAwardOrBuilder> 
          getClientCdkeyAwardFieldBuilder() {
        if (clientCdkeyAwardBuilder_ == null) {
          clientCdkeyAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientCdkeyAward, com.kys.util.netty.proto.HallProto.ClientCdkeyAward.Builder, com.kys.util.netty.proto.HallProto.ClientCdkeyAwardOrBuilder>(
                  getClientCdkeyAward(),
                  getParentForChildren(),
                  isClean());
          clientCdkeyAward_ = null;
        }
        return clientCdkeyAwardBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo clientGetStoreInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo, com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.Builder, com.kys.util.netty.proto.StoreProto.ClientGetStoreInfoOrBuilder> clientGetStoreInfoBuilder_;
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      public boolean hasClientGetStoreInfo() {
        return clientGetStoreInfoBuilder_ != null || clientGetStoreInfo_ != null;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo getClientGetStoreInfo() {
        if (clientGetStoreInfoBuilder_ == null) {
          return clientGetStoreInfo_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.getDefaultInstance() : clientGetStoreInfo_;
        } else {
          return clientGetStoreInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      public Builder setClientGetStoreInfo(com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo value) {
        if (clientGetStoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetStoreInfo_ = value;
          onChanged();
        } else {
          clientGetStoreInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      public Builder setClientGetStoreInfo(
          com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.Builder builderForValue) {
        if (clientGetStoreInfoBuilder_ == null) {
          clientGetStoreInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetStoreInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      public Builder mergeClientGetStoreInfo(com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo value) {
        if (clientGetStoreInfoBuilder_ == null) {
          if (clientGetStoreInfo_ != null) {
            clientGetStoreInfo_ =
              com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.newBuilder(clientGetStoreInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetStoreInfo_ = value;
          }
          onChanged();
        } else {
          clientGetStoreInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      public Builder clearClientGetStoreInfo() {
        if (clientGetStoreInfoBuilder_ == null) {
          clientGetStoreInfo_ = null;
          onChanged();
        } else {
          clientGetStoreInfo_ = null;
          clientGetStoreInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.Builder getClientGetStoreInfoBuilder() {
        
        onChanged();
        return getClientGetStoreInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetStoreInfoOrBuilder getClientGetStoreInfoOrBuilder() {
        if (clientGetStoreInfoBuilder_ != null) {
          return clientGetStoreInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetStoreInfo_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.getDefaultInstance() : clientGetStoreInfo_;
        }
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreInfo clientGetStoreInfo = 300;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo, com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.Builder, com.kys.util.netty.proto.StoreProto.ClientGetStoreInfoOrBuilder> 
          getClientGetStoreInfoFieldBuilder() {
        if (clientGetStoreInfoBuilder_ == null) {
          clientGetStoreInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo, com.kys.util.netty.proto.StoreProto.ClientGetStoreInfo.Builder, com.kys.util.netty.proto.StoreProto.ClientGetStoreInfoOrBuilder>(
                  getClientGetStoreInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetStoreInfo_ = null;
        }
        return clientGetStoreInfoBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientConvertGoods clientConvertGoods_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientConvertGoods, com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder> clientConvertGoodsBuilder_;
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public boolean hasClientConvertGoods() {
        return clientConvertGoodsBuilder_ != null || clientConvertGoods_ != null;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientConvertGoods getClientConvertGoods() {
        if (clientConvertGoodsBuilder_ == null) {
          return clientConvertGoods_ == null ? com.kys.util.netty.proto.StoreProto.ClientConvertGoods.getDefaultInstance() : clientConvertGoods_;
        } else {
          return clientConvertGoodsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public Builder setClientConvertGoods(com.kys.util.netty.proto.StoreProto.ClientConvertGoods value) {
        if (clientConvertGoodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientConvertGoods_ = value;
          onChanged();
        } else {
          clientConvertGoodsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public Builder setClientConvertGoods(
          com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder builderForValue) {
        if (clientConvertGoodsBuilder_ == null) {
          clientConvertGoods_ = builderForValue.build();
          onChanged();
        } else {
          clientConvertGoodsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public Builder mergeClientConvertGoods(com.kys.util.netty.proto.StoreProto.ClientConvertGoods value) {
        if (clientConvertGoodsBuilder_ == null) {
          if (clientConvertGoods_ != null) {
            clientConvertGoods_ =
              com.kys.util.netty.proto.StoreProto.ClientConvertGoods.newBuilder(clientConvertGoods_).mergeFrom(value).buildPartial();
          } else {
            clientConvertGoods_ = value;
          }
          onChanged();
        } else {
          clientConvertGoodsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public Builder clearClientConvertGoods() {
        if (clientConvertGoodsBuilder_ == null) {
          clientConvertGoods_ = null;
          onChanged();
        } else {
          clientConvertGoods_ = null;
          clientConvertGoodsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder getClientConvertGoodsBuilder() {
        
        onChanged();
        return getClientConvertGoodsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder getClientConvertGoodsOrBuilder() {
        if (clientConvertGoodsBuilder_ != null) {
          return clientConvertGoodsBuilder_.getMessageOrBuilder();
        } else {
          return clientConvertGoods_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientConvertGoods.getDefaultInstance() : clientConvertGoods_;
        }
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientConvertGoods, com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder> 
          getClientConvertGoodsFieldBuilder() {
        if (clientConvertGoodsBuilder_ == null) {
          clientConvertGoodsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientConvertGoods, com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder>(
                  getClientConvertGoods(),
                  getParentForChildren(),
                  isClean());
          clientConvertGoods_ = null;
        }
        return clientConvertGoodsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery clientWXPayResultQuery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder> clientWXPayResultQueryBuilder_;
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public boolean hasClientWXPayResultQuery() {
        return clientWXPayResultQueryBuilder_ != null || clientWXPayResultQuery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery getClientWXPayResultQuery() {
        if (clientWXPayResultQueryBuilder_ == null) {
          return clientWXPayResultQuery_ == null ? com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.getDefaultInstance() : clientWXPayResultQuery_;
        } else {
          return clientWXPayResultQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public Builder setClientWXPayResultQuery(com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery value) {
        if (clientWXPayResultQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientWXPayResultQuery_ = value;
          onChanged();
        } else {
          clientWXPayResultQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public Builder setClientWXPayResultQuery(
          com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder builderForValue) {
        if (clientWXPayResultQueryBuilder_ == null) {
          clientWXPayResultQuery_ = builderForValue.build();
          onChanged();
        } else {
          clientWXPayResultQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public Builder mergeClientWXPayResultQuery(com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery value) {
        if (clientWXPayResultQueryBuilder_ == null) {
          if (clientWXPayResultQuery_ != null) {
            clientWXPayResultQuery_ =
              com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.newBuilder(clientWXPayResultQuery_).mergeFrom(value).buildPartial();
          } else {
            clientWXPayResultQuery_ = value;
          }
          onChanged();
        } else {
          clientWXPayResultQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public Builder clearClientWXPayResultQuery() {
        if (clientWXPayResultQueryBuilder_ == null) {
          clientWXPayResultQuery_ = null;
          onChanged();
        } else {
          clientWXPayResultQuery_ = null;
          clientWXPayResultQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder getClientWXPayResultQueryBuilder() {
        
        onChanged();
        return getClientWXPayResultQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder getClientWXPayResultQueryOrBuilder() {
        if (clientWXPayResultQueryBuilder_ != null) {
          return clientWXPayResultQueryBuilder_.getMessageOrBuilder();
        } else {
          return clientWXPayResultQuery_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.getDefaultInstance() : clientWXPayResultQuery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder> 
          getClientWXPayResultQueryFieldBuilder() {
        if (clientWXPayResultQueryBuilder_ == null) {
          clientWXPayResultQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder>(
                  getClientWXPayResultQuery(),
                  getParentForChildren(),
                  isClean());
          clientWXPayResultQuery_ = null;
        }
        return clientWXPayResultQueryBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods clientBuyOrderGoods_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder> clientBuyOrderGoodsBuilder_;
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public boolean hasClientBuyOrderGoods() {
        return clientBuyOrderGoodsBuilder_ != null || clientBuyOrderGoods_ != null;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods getClientBuyOrderGoods() {
        if (clientBuyOrderGoodsBuilder_ == null) {
          return clientBuyOrderGoods_ == null ? com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.getDefaultInstance() : clientBuyOrderGoods_;
        } else {
          return clientBuyOrderGoodsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public Builder setClientBuyOrderGoods(com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods value) {
        if (clientBuyOrderGoodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientBuyOrderGoods_ = value;
          onChanged();
        } else {
          clientBuyOrderGoodsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public Builder setClientBuyOrderGoods(
          com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder builderForValue) {
        if (clientBuyOrderGoodsBuilder_ == null) {
          clientBuyOrderGoods_ = builderForValue.build();
          onChanged();
        } else {
          clientBuyOrderGoodsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public Builder mergeClientBuyOrderGoods(com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods value) {
        if (clientBuyOrderGoodsBuilder_ == null) {
          if (clientBuyOrderGoods_ != null) {
            clientBuyOrderGoods_ =
              com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.newBuilder(clientBuyOrderGoods_).mergeFrom(value).buildPartial();
          } else {
            clientBuyOrderGoods_ = value;
          }
          onChanged();
        } else {
          clientBuyOrderGoodsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public Builder clearClientBuyOrderGoods() {
        if (clientBuyOrderGoodsBuilder_ == null) {
          clientBuyOrderGoods_ = null;
          onChanged();
        } else {
          clientBuyOrderGoods_ = null;
          clientBuyOrderGoodsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder getClientBuyOrderGoodsBuilder() {
        
        onChanged();
        return getClientBuyOrderGoodsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder getClientBuyOrderGoodsOrBuilder() {
        if (clientBuyOrderGoodsBuilder_ != null) {
          return clientBuyOrderGoodsBuilder_.getMessageOrBuilder();
        } else {
          return clientBuyOrderGoods_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.getDefaultInstance() : clientBuyOrderGoods_;
        }
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder> 
          getClientBuyOrderGoodsFieldBuilder() {
        if (clientBuyOrderGoodsBuilder_ == null) {
          clientBuyOrderGoodsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder>(
                  getClientBuyOrderGoods(),
                  getParentForChildren(),
                  isClean());
          clientBuyOrderGoods_ = null;
        }
        return clientBuyOrderGoodsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge clientGetFirstCharge_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge, com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder> clientGetFirstChargeBuilder_;
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public boolean hasClientGetFirstCharge() {
        return clientGetFirstChargeBuilder_ != null || clientGetFirstCharge_ != null;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge getClientGetFirstCharge() {
        if (clientGetFirstChargeBuilder_ == null) {
          return clientGetFirstCharge_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.getDefaultInstance() : clientGetFirstCharge_;
        } else {
          return clientGetFirstChargeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public Builder setClientGetFirstCharge(com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge value) {
        if (clientGetFirstChargeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetFirstCharge_ = value;
          onChanged();
        } else {
          clientGetFirstChargeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public Builder setClientGetFirstCharge(
          com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder builderForValue) {
        if (clientGetFirstChargeBuilder_ == null) {
          clientGetFirstCharge_ = builderForValue.build();
          onChanged();
        } else {
          clientGetFirstChargeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public Builder mergeClientGetFirstCharge(com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge value) {
        if (clientGetFirstChargeBuilder_ == null) {
          if (clientGetFirstCharge_ != null) {
            clientGetFirstCharge_ =
              com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.newBuilder(clientGetFirstCharge_).mergeFrom(value).buildPartial();
          } else {
            clientGetFirstCharge_ = value;
          }
          onChanged();
        } else {
          clientGetFirstChargeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public Builder clearClientGetFirstCharge() {
        if (clientGetFirstChargeBuilder_ == null) {
          clientGetFirstCharge_ = null;
          onChanged();
        } else {
          clientGetFirstCharge_ = null;
          clientGetFirstChargeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder getClientGetFirstChargeBuilder() {
        
        onChanged();
        return getClientGetFirstChargeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder getClientGetFirstChargeOrBuilder() {
        if (clientGetFirstChargeBuilder_ != null) {
          return clientGetFirstChargeBuilder_.getMessageOrBuilder();
        } else {
          return clientGetFirstCharge_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.getDefaultInstance() : clientGetFirstCharge_;
        }
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge, com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder> 
          getClientGetFirstChargeFieldBuilder() {
        if (clientGetFirstChargeBuilder_ == null) {
          clientGetFirstChargeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge, com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder>(
                  getClientGetFirstCharge(),
                  getParentForChildren(),
                  isClean());
          clientGetFirstCharge_ = null;
        }
        return clientGetFirstChargeBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetDailyGift clientGetDailyGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetDailyGift, com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder> clientGetDailyGiftBuilder_;
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public boolean hasClientGetDailyGift() {
        return clientGetDailyGiftBuilder_ != null || clientGetDailyGift_ != null;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetDailyGift getClientGetDailyGift() {
        if (clientGetDailyGiftBuilder_ == null) {
          return clientGetDailyGift_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.getDefaultInstance() : clientGetDailyGift_;
        } else {
          return clientGetDailyGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public Builder setClientGetDailyGift(com.kys.util.netty.proto.StoreProto.ClientGetDailyGift value) {
        if (clientGetDailyGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetDailyGift_ = value;
          onChanged();
        } else {
          clientGetDailyGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public Builder setClientGetDailyGift(
          com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder builderForValue) {
        if (clientGetDailyGiftBuilder_ == null) {
          clientGetDailyGift_ = builderForValue.build();
          onChanged();
        } else {
          clientGetDailyGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public Builder mergeClientGetDailyGift(com.kys.util.netty.proto.StoreProto.ClientGetDailyGift value) {
        if (clientGetDailyGiftBuilder_ == null) {
          if (clientGetDailyGift_ != null) {
            clientGetDailyGift_ =
              com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.newBuilder(clientGetDailyGift_).mergeFrom(value).buildPartial();
          } else {
            clientGetDailyGift_ = value;
          }
          onChanged();
        } else {
          clientGetDailyGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public Builder clearClientGetDailyGift() {
        if (clientGetDailyGiftBuilder_ == null) {
          clientGetDailyGift_ = null;
          onChanged();
        } else {
          clientGetDailyGift_ = null;
          clientGetDailyGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder getClientGetDailyGiftBuilder() {
        
        onChanged();
        return getClientGetDailyGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder getClientGetDailyGiftOrBuilder() {
        if (clientGetDailyGiftBuilder_ != null) {
          return clientGetDailyGiftBuilder_.getMessageOrBuilder();
        } else {
          return clientGetDailyGift_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.getDefaultInstance() : clientGetDailyGift_;
        }
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetDailyGift, com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder> 
          getClientGetDailyGiftFieldBuilder() {
        if (clientGetDailyGiftBuilder_ == null) {
          clientGetDailyGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetDailyGift, com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder>(
                  getClientGetDailyGift(),
                  getParentForChildren(),
                  isClean());
          clientGetDailyGift_ = null;
        }
        return clientGetDailyGiftBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetMonthCard clientGetMonthCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetMonthCard, com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder> clientGetMonthCardBuilder_;
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public boolean hasClientGetMonthCard() {
        return clientGetMonthCardBuilder_ != null || clientGetMonthCard_ != null;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetMonthCard getClientGetMonthCard() {
        if (clientGetMonthCardBuilder_ == null) {
          return clientGetMonthCard_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.getDefaultInstance() : clientGetMonthCard_;
        } else {
          return clientGetMonthCardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public Builder setClientGetMonthCard(com.kys.util.netty.proto.StoreProto.ClientGetMonthCard value) {
        if (clientGetMonthCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMonthCard_ = value;
          onChanged();
        } else {
          clientGetMonthCardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public Builder setClientGetMonthCard(
          com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder builderForValue) {
        if (clientGetMonthCardBuilder_ == null) {
          clientGetMonthCard_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMonthCardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public Builder mergeClientGetMonthCard(com.kys.util.netty.proto.StoreProto.ClientGetMonthCard value) {
        if (clientGetMonthCardBuilder_ == null) {
          if (clientGetMonthCard_ != null) {
            clientGetMonthCard_ =
              com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.newBuilder(clientGetMonthCard_).mergeFrom(value).buildPartial();
          } else {
            clientGetMonthCard_ = value;
          }
          onChanged();
        } else {
          clientGetMonthCardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public Builder clearClientGetMonthCard() {
        if (clientGetMonthCardBuilder_ == null) {
          clientGetMonthCard_ = null;
          onChanged();
        } else {
          clientGetMonthCard_ = null;
          clientGetMonthCardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder getClientGetMonthCardBuilder() {
        
        onChanged();
        return getClientGetMonthCardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder getClientGetMonthCardOrBuilder() {
        if (clientGetMonthCardBuilder_ != null) {
          return clientGetMonthCardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMonthCard_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.getDefaultInstance() : clientGetMonthCard_;
        }
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetMonthCard, com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder> 
          getClientGetMonthCardFieldBuilder() {
        if (clientGetMonthCardBuilder_ == null) {
          clientGetMonthCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetMonthCard, com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder>(
                  getClientGetMonthCard(),
                  getParentForChildren(),
                  isClean());
          clientGetMonthCard_ = null;
        }
        return clientGetMonthCardBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift clientGetResurgenceGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder> clientGetResurgenceGiftBuilder_;
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public boolean hasClientGetResurgenceGift() {
        return clientGetResurgenceGiftBuilder_ != null || clientGetResurgenceGift_ != null;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift getClientGetResurgenceGift() {
        if (clientGetResurgenceGiftBuilder_ == null) {
          return clientGetResurgenceGift_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.getDefaultInstance() : clientGetResurgenceGift_;
        } else {
          return clientGetResurgenceGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public Builder setClientGetResurgenceGift(com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift value) {
        if (clientGetResurgenceGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetResurgenceGift_ = value;
          onChanged();
        } else {
          clientGetResurgenceGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public Builder setClientGetResurgenceGift(
          com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder builderForValue) {
        if (clientGetResurgenceGiftBuilder_ == null) {
          clientGetResurgenceGift_ = builderForValue.build();
          onChanged();
        } else {
          clientGetResurgenceGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public Builder mergeClientGetResurgenceGift(com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift value) {
        if (clientGetResurgenceGiftBuilder_ == null) {
          if (clientGetResurgenceGift_ != null) {
            clientGetResurgenceGift_ =
              com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.newBuilder(clientGetResurgenceGift_).mergeFrom(value).buildPartial();
          } else {
            clientGetResurgenceGift_ = value;
          }
          onChanged();
        } else {
          clientGetResurgenceGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public Builder clearClientGetResurgenceGift() {
        if (clientGetResurgenceGiftBuilder_ == null) {
          clientGetResurgenceGift_ = null;
          onChanged();
        } else {
          clientGetResurgenceGift_ = null;
          clientGetResurgenceGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder getClientGetResurgenceGiftBuilder() {
        
        onChanged();
        return getClientGetResurgenceGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder getClientGetResurgenceGiftOrBuilder() {
        if (clientGetResurgenceGiftBuilder_ != null) {
          return clientGetResurgenceGiftBuilder_.getMessageOrBuilder();
        } else {
          return clientGetResurgenceGift_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.getDefaultInstance() : clientGetResurgenceGift_;
        }
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder> 
          getClientGetResurgenceGiftFieldBuilder() {
        if (clientGetResurgenceGiftBuilder_ == null) {
          clientGetResurgenceGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder>(
                  getClientGetResurgenceGift(),
                  getParentForChildren(),
                  isClean());
          clientGetResurgenceGift_ = null;
        }
        return clientGetResurgenceGiftBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage clientGetConvertMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage, com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.Builder, com.kys.util.netty.proto.StoreProto.ClientGetConvertMessageOrBuilder> clientGetConvertMessageBuilder_;
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      public boolean hasClientGetConvertMessage() {
        return clientGetConvertMessageBuilder_ != null || clientGetConvertMessage_ != null;
      }
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage getClientGetConvertMessage() {
        if (clientGetConvertMessageBuilder_ == null) {
          return clientGetConvertMessage_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.getDefaultInstance() : clientGetConvertMessage_;
        } else {
          return clientGetConvertMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      public Builder setClientGetConvertMessage(com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage value) {
        if (clientGetConvertMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetConvertMessage_ = value;
          onChanged();
        } else {
          clientGetConvertMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      public Builder setClientGetConvertMessage(
          com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.Builder builderForValue) {
        if (clientGetConvertMessageBuilder_ == null) {
          clientGetConvertMessage_ = builderForValue.build();
          onChanged();
        } else {
          clientGetConvertMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      public Builder mergeClientGetConvertMessage(com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage value) {
        if (clientGetConvertMessageBuilder_ == null) {
          if (clientGetConvertMessage_ != null) {
            clientGetConvertMessage_ =
              com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.newBuilder(clientGetConvertMessage_).mergeFrom(value).buildPartial();
          } else {
            clientGetConvertMessage_ = value;
          }
          onChanged();
        } else {
          clientGetConvertMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      public Builder clearClientGetConvertMessage() {
        if (clientGetConvertMessageBuilder_ == null) {
          clientGetConvertMessage_ = null;
          onChanged();
        } else {
          clientGetConvertMessage_ = null;
          clientGetConvertMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.Builder getClientGetConvertMessageBuilder() {
        
        onChanged();
        return getClientGetConvertMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetConvertMessageOrBuilder getClientGetConvertMessageOrBuilder() {
        if (clientGetConvertMessageBuilder_ != null) {
          return clientGetConvertMessageBuilder_.getMessageOrBuilder();
        } else {
          return clientGetConvertMessage_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.getDefaultInstance() : clientGetConvertMessage_;
        }
      }
      /**
       * <pre>
       ** 客户端请求兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetConvertMessage clientGetConvertMessage = 308;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage, com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.Builder, com.kys.util.netty.proto.StoreProto.ClientGetConvertMessageOrBuilder> 
          getClientGetConvertMessageFieldBuilder() {
        if (clientGetConvertMessageBuilder_ == null) {
          clientGetConvertMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage, com.kys.util.netty.proto.StoreProto.ClientGetConvertMessage.Builder, com.kys.util.netty.proto.StoreProto.ClientGetConvertMessageOrBuilder>(
                  getClientGetConvertMessage(),
                  getParentForChildren(),
                  isClean());
          clientGetConvertMessage_ = null;
        }
        return clientGetConvertMessageBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder clientNewBuyOrder_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder, com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.Builder, com.kys.util.netty.proto.StoreProto.ClientNewBuyOrderOrBuilder> clientNewBuyOrderBuilder_;
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      public boolean hasClientNewBuyOrder() {
        return clientNewBuyOrderBuilder_ != null || clientNewBuyOrder_ != null;
      }
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder getClientNewBuyOrder() {
        if (clientNewBuyOrderBuilder_ == null) {
          return clientNewBuyOrder_ == null ? com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.getDefaultInstance() : clientNewBuyOrder_;
        } else {
          return clientNewBuyOrderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      public Builder setClientNewBuyOrder(com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder value) {
        if (clientNewBuyOrderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientNewBuyOrder_ = value;
          onChanged();
        } else {
          clientNewBuyOrderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      public Builder setClientNewBuyOrder(
          com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.Builder builderForValue) {
        if (clientNewBuyOrderBuilder_ == null) {
          clientNewBuyOrder_ = builderForValue.build();
          onChanged();
        } else {
          clientNewBuyOrderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      public Builder mergeClientNewBuyOrder(com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder value) {
        if (clientNewBuyOrderBuilder_ == null) {
          if (clientNewBuyOrder_ != null) {
            clientNewBuyOrder_ =
              com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.newBuilder(clientNewBuyOrder_).mergeFrom(value).buildPartial();
          } else {
            clientNewBuyOrder_ = value;
          }
          onChanged();
        } else {
          clientNewBuyOrderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      public Builder clearClientNewBuyOrder() {
        if (clientNewBuyOrderBuilder_ == null) {
          clientNewBuyOrder_ = null;
          onChanged();
        } else {
          clientNewBuyOrder_ = null;
          clientNewBuyOrderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.Builder getClientNewBuyOrderBuilder() {
        
        onChanged();
        return getClientNewBuyOrderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientNewBuyOrderOrBuilder getClientNewBuyOrderOrBuilder() {
        if (clientNewBuyOrderBuilder_ != null) {
          return clientNewBuyOrderBuilder_.getMessageOrBuilder();
        } else {
          return clientNewBuyOrder_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.getDefaultInstance() : clientNewBuyOrder_;
        }
      }
      /**
       * <pre>
       ** 客户端新下单购买接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewBuyOrder clientNewBuyOrder = 309;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder, com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.Builder, com.kys.util.netty.proto.StoreProto.ClientNewBuyOrderOrBuilder> 
          getClientNewBuyOrderFieldBuilder() {
        if (clientNewBuyOrderBuilder_ == null) {
          clientNewBuyOrderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder, com.kys.util.netty.proto.StoreProto.ClientNewBuyOrder.Builder, com.kys.util.netty.proto.StoreProto.ClientNewBuyOrderOrBuilder>(
                  getClientNewBuyOrder(),
                  getParentForChildren(),
                  isClean());
          clientNewBuyOrder_ = null;
        }
        return clientNewBuyOrderBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientNewConvert clientNewConvert_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientNewConvert, com.kys.util.netty.proto.StoreProto.ClientNewConvert.Builder, com.kys.util.netty.proto.StoreProto.ClientNewConvertOrBuilder> clientNewConvertBuilder_;
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      public boolean hasClientNewConvert() {
        return clientNewConvertBuilder_ != null || clientNewConvert_ != null;
      }
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientNewConvert getClientNewConvert() {
        if (clientNewConvertBuilder_ == null) {
          return clientNewConvert_ == null ? com.kys.util.netty.proto.StoreProto.ClientNewConvert.getDefaultInstance() : clientNewConvert_;
        } else {
          return clientNewConvertBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      public Builder setClientNewConvert(com.kys.util.netty.proto.StoreProto.ClientNewConvert value) {
        if (clientNewConvertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientNewConvert_ = value;
          onChanged();
        } else {
          clientNewConvertBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      public Builder setClientNewConvert(
          com.kys.util.netty.proto.StoreProto.ClientNewConvert.Builder builderForValue) {
        if (clientNewConvertBuilder_ == null) {
          clientNewConvert_ = builderForValue.build();
          onChanged();
        } else {
          clientNewConvertBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      public Builder mergeClientNewConvert(com.kys.util.netty.proto.StoreProto.ClientNewConvert value) {
        if (clientNewConvertBuilder_ == null) {
          if (clientNewConvert_ != null) {
            clientNewConvert_ =
              com.kys.util.netty.proto.StoreProto.ClientNewConvert.newBuilder(clientNewConvert_).mergeFrom(value).buildPartial();
          } else {
            clientNewConvert_ = value;
          }
          onChanged();
        } else {
          clientNewConvertBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      public Builder clearClientNewConvert() {
        if (clientNewConvertBuilder_ == null) {
          clientNewConvert_ = null;
          onChanged();
        } else {
          clientNewConvert_ = null;
          clientNewConvertBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientNewConvert.Builder getClientNewConvertBuilder() {
        
        onChanged();
        return getClientNewConvertFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientNewConvertOrBuilder getClientNewConvertOrBuilder() {
        if (clientNewConvertBuilder_ != null) {
          return clientNewConvertBuilder_.getMessageOrBuilder();
        } else {
          return clientNewConvert_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientNewConvert.getDefaultInstance() : clientNewConvert_;
        }
      }
      /**
       * <pre>
       ** 客户端新兑换红包请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewConvert clientNewConvert = 310;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientNewConvert, com.kys.util.netty.proto.StoreProto.ClientNewConvert.Builder, com.kys.util.netty.proto.StoreProto.ClientNewConvertOrBuilder> 
          getClientNewConvertFieldBuilder() {
        if (clientNewConvertBuilder_ == null) {
          clientNewConvertBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientNewConvert, com.kys.util.netty.proto.StoreProto.ClientNewConvert.Builder, com.kys.util.netty.proto.StoreProto.ClientNewConvertOrBuilder>(
                  getClientNewConvert(),
                  getParentForChildren(),
                  isClean());
          clientNewConvert_ = null;
        }
        return clientNewConvertBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientAlipayAccount clientAlipayAccount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientAlipayAccount, com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.Builder, com.kys.util.netty.proto.StoreProto.ClientAlipayAccountOrBuilder> clientAlipayAccountBuilder_;
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      public boolean hasClientAlipayAccount() {
        return clientAlipayAccountBuilder_ != null || clientAlipayAccount_ != null;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientAlipayAccount getClientAlipayAccount() {
        if (clientAlipayAccountBuilder_ == null) {
          return clientAlipayAccount_ == null ? com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.getDefaultInstance() : clientAlipayAccount_;
        } else {
          return clientAlipayAccountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      public Builder setClientAlipayAccount(com.kys.util.netty.proto.StoreProto.ClientAlipayAccount value) {
        if (clientAlipayAccountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientAlipayAccount_ = value;
          onChanged();
        } else {
          clientAlipayAccountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      public Builder setClientAlipayAccount(
          com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.Builder builderForValue) {
        if (clientAlipayAccountBuilder_ == null) {
          clientAlipayAccount_ = builderForValue.build();
          onChanged();
        } else {
          clientAlipayAccountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      public Builder mergeClientAlipayAccount(com.kys.util.netty.proto.StoreProto.ClientAlipayAccount value) {
        if (clientAlipayAccountBuilder_ == null) {
          if (clientAlipayAccount_ != null) {
            clientAlipayAccount_ =
              com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.newBuilder(clientAlipayAccount_).mergeFrom(value).buildPartial();
          } else {
            clientAlipayAccount_ = value;
          }
          onChanged();
        } else {
          clientAlipayAccountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      public Builder clearClientAlipayAccount() {
        if (clientAlipayAccountBuilder_ == null) {
          clientAlipayAccount_ = null;
          onChanged();
        } else {
          clientAlipayAccount_ = null;
          clientAlipayAccountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.Builder getClientAlipayAccountBuilder() {
        
        onChanged();
        return getClientAlipayAccountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientAlipayAccountOrBuilder getClientAlipayAccountOrBuilder() {
        if (clientAlipayAccountBuilder_ != null) {
          return clientAlipayAccountBuilder_.getMessageOrBuilder();
        } else {
          return clientAlipayAccount_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.getDefaultInstance() : clientAlipayAccount_;
        }
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的支付宝名字和账号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlipayAccount clientAlipayAccount = 311;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientAlipayAccount, com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.Builder, com.kys.util.netty.proto.StoreProto.ClientAlipayAccountOrBuilder> 
          getClientAlipayAccountFieldBuilder() {
        if (clientAlipayAccountBuilder_ == null) {
          clientAlipayAccountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientAlipayAccount, com.kys.util.netty.proto.StoreProto.ClientAlipayAccount.Builder, com.kys.util.netty.proto.StoreProto.ClientAlipayAccountOrBuilder>(
                  getClientAlipayAccount(),
                  getParentForChildren(),
                  isClean());
          clientAlipayAccount_ = null;
        }
        return clientAlipayAccountBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientPayOptions clientPayOptions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientPayOptions, com.kys.util.netty.proto.StoreProto.ClientPayOptions.Builder, com.kys.util.netty.proto.StoreProto.ClientPayOptionsOrBuilder> clientPayOptionsBuilder_;
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      public boolean hasClientPayOptions() {
        return clientPayOptionsBuilder_ != null || clientPayOptions_ != null;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientPayOptions getClientPayOptions() {
        if (clientPayOptionsBuilder_ == null) {
          return clientPayOptions_ == null ? com.kys.util.netty.proto.StoreProto.ClientPayOptions.getDefaultInstance() : clientPayOptions_;
        } else {
          return clientPayOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      public Builder setClientPayOptions(com.kys.util.netty.proto.StoreProto.ClientPayOptions value) {
        if (clientPayOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientPayOptions_ = value;
          onChanged();
        } else {
          clientPayOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      public Builder setClientPayOptions(
          com.kys.util.netty.proto.StoreProto.ClientPayOptions.Builder builderForValue) {
        if (clientPayOptionsBuilder_ == null) {
          clientPayOptions_ = builderForValue.build();
          onChanged();
        } else {
          clientPayOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      public Builder mergeClientPayOptions(com.kys.util.netty.proto.StoreProto.ClientPayOptions value) {
        if (clientPayOptionsBuilder_ == null) {
          if (clientPayOptions_ != null) {
            clientPayOptions_ =
              com.kys.util.netty.proto.StoreProto.ClientPayOptions.newBuilder(clientPayOptions_).mergeFrom(value).buildPartial();
          } else {
            clientPayOptions_ = value;
          }
          onChanged();
        } else {
          clientPayOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      public Builder clearClientPayOptions() {
        if (clientPayOptionsBuilder_ == null) {
          clientPayOptions_ = null;
          onChanged();
        } else {
          clientPayOptions_ = null;
          clientPayOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientPayOptions.Builder getClientPayOptionsBuilder() {
        
        onChanged();
        return getClientPayOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientPayOptionsOrBuilder getClientPayOptionsOrBuilder() {
        if (clientPayOptionsBuilder_ != null) {
          return clientPayOptionsBuilder_.getMessageOrBuilder();
        } else {
          return clientPayOptions_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientPayOptions.getDefaultInstance() : clientPayOptions_;
        }
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPayOptions clientPayOptions = 312;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientPayOptions, com.kys.util.netty.proto.StoreProto.ClientPayOptions.Builder, com.kys.util.netty.proto.StoreProto.ClientPayOptionsOrBuilder> 
          getClientPayOptionsFieldBuilder() {
        if (clientPayOptionsBuilder_ == null) {
          clientPayOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientPayOptions, com.kys.util.netty.proto.StoreProto.ClientPayOptions.Builder, com.kys.util.netty.proto.StoreProto.ClientPayOptionsOrBuilder>(
                  getClientPayOptions(),
                  getParentForChildren(),
                  isClean());
          clientPayOptions_ = null;
        }
        return clientPayOptionsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientIdVerify clientIdVerify_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientIdVerify, com.kys.util.netty.proto.StoreProto.ClientIdVerify.Builder, com.kys.util.netty.proto.StoreProto.ClientIdVerifyOrBuilder> clientIdVerifyBuilder_;
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      public boolean hasClientIdVerify() {
        return clientIdVerifyBuilder_ != null || clientIdVerify_ != null;
      }
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientIdVerify getClientIdVerify() {
        if (clientIdVerifyBuilder_ == null) {
          return clientIdVerify_ == null ? com.kys.util.netty.proto.StoreProto.ClientIdVerify.getDefaultInstance() : clientIdVerify_;
        } else {
          return clientIdVerifyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      public Builder setClientIdVerify(com.kys.util.netty.proto.StoreProto.ClientIdVerify value) {
        if (clientIdVerifyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientIdVerify_ = value;
          onChanged();
        } else {
          clientIdVerifyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      public Builder setClientIdVerify(
          com.kys.util.netty.proto.StoreProto.ClientIdVerify.Builder builderForValue) {
        if (clientIdVerifyBuilder_ == null) {
          clientIdVerify_ = builderForValue.build();
          onChanged();
        } else {
          clientIdVerifyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      public Builder mergeClientIdVerify(com.kys.util.netty.proto.StoreProto.ClientIdVerify value) {
        if (clientIdVerifyBuilder_ == null) {
          if (clientIdVerify_ != null) {
            clientIdVerify_ =
              com.kys.util.netty.proto.StoreProto.ClientIdVerify.newBuilder(clientIdVerify_).mergeFrom(value).buildPartial();
          } else {
            clientIdVerify_ = value;
          }
          onChanged();
        } else {
          clientIdVerifyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      public Builder clearClientIdVerify() {
        if (clientIdVerifyBuilder_ == null) {
          clientIdVerify_ = null;
          onChanged();
        } else {
          clientIdVerify_ = null;
          clientIdVerifyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientIdVerify.Builder getClientIdVerifyBuilder() {
        
        onChanged();
        return getClientIdVerifyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientIdVerifyOrBuilder getClientIdVerifyOrBuilder() {
        if (clientIdVerifyBuilder_ != null) {
          return clientIdVerifyBuilder_.getMessageOrBuilder();
        } else {
          return clientIdVerify_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientIdVerify.getDefaultInstance() : clientIdVerify_;
        }
      }
      /**
       * <pre>
       ** 实名认证 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientIdVerify clientIdVerify = 313;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientIdVerify, com.kys.util.netty.proto.StoreProto.ClientIdVerify.Builder, com.kys.util.netty.proto.StoreProto.ClientIdVerifyOrBuilder> 
          getClientIdVerifyFieldBuilder() {
        if (clientIdVerifyBuilder_ == null) {
          clientIdVerifyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientIdVerify, com.kys.util.netty.proto.StoreProto.ClientIdVerify.Builder, com.kys.util.netty.proto.StoreProto.ClientIdVerifyOrBuilder>(
                  getClientIdVerify(),
                  getParentForChildren(),
                  isClean());
          clientIdVerify_ = null;
        }
        return clientIdVerifyBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientVerifyAward clientVerifyAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientVerifyAward, com.kys.util.netty.proto.StoreProto.ClientVerifyAward.Builder, com.kys.util.netty.proto.StoreProto.ClientVerifyAwardOrBuilder> clientVerifyAwardBuilder_;
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      public boolean hasClientVerifyAward() {
        return clientVerifyAwardBuilder_ != null || clientVerifyAward_ != null;
      }
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientVerifyAward getClientVerifyAward() {
        if (clientVerifyAwardBuilder_ == null) {
          return clientVerifyAward_ == null ? com.kys.util.netty.proto.StoreProto.ClientVerifyAward.getDefaultInstance() : clientVerifyAward_;
        } else {
          return clientVerifyAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      public Builder setClientVerifyAward(com.kys.util.netty.proto.StoreProto.ClientVerifyAward value) {
        if (clientVerifyAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientVerifyAward_ = value;
          onChanged();
        } else {
          clientVerifyAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      public Builder setClientVerifyAward(
          com.kys.util.netty.proto.StoreProto.ClientVerifyAward.Builder builderForValue) {
        if (clientVerifyAwardBuilder_ == null) {
          clientVerifyAward_ = builderForValue.build();
          onChanged();
        } else {
          clientVerifyAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      public Builder mergeClientVerifyAward(com.kys.util.netty.proto.StoreProto.ClientVerifyAward value) {
        if (clientVerifyAwardBuilder_ == null) {
          if (clientVerifyAward_ != null) {
            clientVerifyAward_ =
              com.kys.util.netty.proto.StoreProto.ClientVerifyAward.newBuilder(clientVerifyAward_).mergeFrom(value).buildPartial();
          } else {
            clientVerifyAward_ = value;
          }
          onChanged();
        } else {
          clientVerifyAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      public Builder clearClientVerifyAward() {
        if (clientVerifyAwardBuilder_ == null) {
          clientVerifyAward_ = null;
          onChanged();
        } else {
          clientVerifyAward_ = null;
          clientVerifyAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientVerifyAward.Builder getClientVerifyAwardBuilder() {
        
        onChanged();
        return getClientVerifyAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientVerifyAwardOrBuilder getClientVerifyAwardOrBuilder() {
        if (clientVerifyAwardBuilder_ != null) {
          return clientVerifyAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientVerifyAward_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientVerifyAward.getDefaultInstance() : clientVerifyAward_;
        }
      }
      /**
       * <pre>
       ** 获取实名认证奖励的值 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyAward clientVerifyAward = 314;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientVerifyAward, com.kys.util.netty.proto.StoreProto.ClientVerifyAward.Builder, com.kys.util.netty.proto.StoreProto.ClientVerifyAwardOrBuilder> 
          getClientVerifyAwardFieldBuilder() {
        if (clientVerifyAwardBuilder_ == null) {
          clientVerifyAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientVerifyAward, com.kys.util.netty.proto.StoreProto.ClientVerifyAward.Builder, com.kys.util.netty.proto.StoreProto.ClientVerifyAwardOrBuilder>(
                  getClientVerifyAward(),
                  getParentForChildren(),
                  isClean());
          clientVerifyAward_ = null;
        }
        return clientVerifyAwardBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientMiniAppPay clientMiniAppPay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientMiniAppPay, com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.Builder, com.kys.util.netty.proto.StoreProto.ClientMiniAppPayOrBuilder> clientMiniAppPayBuilder_;
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      public boolean hasClientMiniAppPay() {
        return clientMiniAppPayBuilder_ != null || clientMiniAppPay_ != null;
      }
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientMiniAppPay getClientMiniAppPay() {
        if (clientMiniAppPayBuilder_ == null) {
          return clientMiniAppPay_ == null ? com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.getDefaultInstance() : clientMiniAppPay_;
        } else {
          return clientMiniAppPayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      public Builder setClientMiniAppPay(com.kys.util.netty.proto.StoreProto.ClientMiniAppPay value) {
        if (clientMiniAppPayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientMiniAppPay_ = value;
          onChanged();
        } else {
          clientMiniAppPayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      public Builder setClientMiniAppPay(
          com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.Builder builderForValue) {
        if (clientMiniAppPayBuilder_ == null) {
          clientMiniAppPay_ = builderForValue.build();
          onChanged();
        } else {
          clientMiniAppPayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      public Builder mergeClientMiniAppPay(com.kys.util.netty.proto.StoreProto.ClientMiniAppPay value) {
        if (clientMiniAppPayBuilder_ == null) {
          if (clientMiniAppPay_ != null) {
            clientMiniAppPay_ =
              com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.newBuilder(clientMiniAppPay_).mergeFrom(value).buildPartial();
          } else {
            clientMiniAppPay_ = value;
          }
          onChanged();
        } else {
          clientMiniAppPayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      public Builder clearClientMiniAppPay() {
        if (clientMiniAppPayBuilder_ == null) {
          clientMiniAppPay_ = null;
          onChanged();
        } else {
          clientMiniAppPay_ = null;
          clientMiniAppPayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.Builder getClientMiniAppPayBuilder() {
        
        onChanged();
        return getClientMiniAppPayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientMiniAppPayOrBuilder getClientMiniAppPayOrBuilder() {
        if (clientMiniAppPayBuilder_ != null) {
          return clientMiniAppPayBuilder_.getMessageOrBuilder();
        } else {
          return clientMiniAppPay_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.getDefaultInstance() : clientMiniAppPay_;
        }
      }
      /**
       * <pre>
       ** 客户端请求微信支付信息，用于微信小程序支付 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMiniAppPay clientMiniAppPay = 315;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientMiniAppPay, com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.Builder, com.kys.util.netty.proto.StoreProto.ClientMiniAppPayOrBuilder> 
          getClientMiniAppPayFieldBuilder() {
        if (clientMiniAppPayBuilder_ == null) {
          clientMiniAppPayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientMiniAppPay, com.kys.util.netty.proto.StoreProto.ClientMiniAppPay.Builder, com.kys.util.netty.proto.StoreProto.ClientMiniAppPayOrBuilder>(
                  getClientMiniAppPay(),
                  getParentForChildren(),
                  isClean());
          clientMiniAppPay_ = null;
        }
        return clientMiniAppPayBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientUnionAccount clientUnionAccount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientUnionAccount, com.kys.util.netty.proto.StoreProto.ClientUnionAccount.Builder, com.kys.util.netty.proto.StoreProto.ClientUnionAccountOrBuilder> clientUnionAccountBuilder_;
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      public boolean hasClientUnionAccount() {
        return clientUnionAccountBuilder_ != null || clientUnionAccount_ != null;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientUnionAccount getClientUnionAccount() {
        if (clientUnionAccountBuilder_ == null) {
          return clientUnionAccount_ == null ? com.kys.util.netty.proto.StoreProto.ClientUnionAccount.getDefaultInstance() : clientUnionAccount_;
        } else {
          return clientUnionAccountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      public Builder setClientUnionAccount(com.kys.util.netty.proto.StoreProto.ClientUnionAccount value) {
        if (clientUnionAccountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientUnionAccount_ = value;
          onChanged();
        } else {
          clientUnionAccountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      public Builder setClientUnionAccount(
          com.kys.util.netty.proto.StoreProto.ClientUnionAccount.Builder builderForValue) {
        if (clientUnionAccountBuilder_ == null) {
          clientUnionAccount_ = builderForValue.build();
          onChanged();
        } else {
          clientUnionAccountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      public Builder mergeClientUnionAccount(com.kys.util.netty.proto.StoreProto.ClientUnionAccount value) {
        if (clientUnionAccountBuilder_ == null) {
          if (clientUnionAccount_ != null) {
            clientUnionAccount_ =
              com.kys.util.netty.proto.StoreProto.ClientUnionAccount.newBuilder(clientUnionAccount_).mergeFrom(value).buildPartial();
          } else {
            clientUnionAccount_ = value;
          }
          onChanged();
        } else {
          clientUnionAccountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      public Builder clearClientUnionAccount() {
        if (clientUnionAccountBuilder_ == null) {
          clientUnionAccount_ = null;
          onChanged();
        } else {
          clientUnionAccount_ = null;
          clientUnionAccountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientUnionAccount.Builder getClientUnionAccountBuilder() {
        
        onChanged();
        return getClientUnionAccountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientUnionAccountOrBuilder getClientUnionAccountOrBuilder() {
        if (clientUnionAccountBuilder_ != null) {
          return clientUnionAccountBuilder_.getMessageOrBuilder();
        } else {
          return clientUnionAccount_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientUnionAccount.getDefaultInstance() : clientUnionAccount_;
        }
      }
      /**
       * <pre>
       ** 客户端查询自己已经成功兑换记录中的银行卡卡号信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUnionAccount clientUnionAccount = 316;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientUnionAccount, com.kys.util.netty.proto.StoreProto.ClientUnionAccount.Builder, com.kys.util.netty.proto.StoreProto.ClientUnionAccountOrBuilder> 
          getClientUnionAccountFieldBuilder() {
        if (clientUnionAccountBuilder_ == null) {
          clientUnionAccountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientUnionAccount, com.kys.util.netty.proto.StoreProto.ClientUnionAccount.Builder, com.kys.util.netty.proto.StoreProto.ClientUnionAccountOrBuilder>(
                  getClientUnionAccount(),
                  getParentForChildren(),
                  isClean());
          clientUnionAccount_ = null;
        }
        return clientUnionAccountBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetAnnounce clientGetAnnounce_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetAnnounce, com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder> clientGetAnnounceBuilder_;
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public boolean hasClientGetAnnounce() {
        return clientGetAnnounceBuilder_ != null || clientGetAnnounce_ != null;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAnnounce getClientGetAnnounce() {
        if (clientGetAnnounceBuilder_ == null) {
          return clientGetAnnounce_ == null ? com.kys.util.netty.proto.HallProto.ClientGetAnnounce.getDefaultInstance() : clientGetAnnounce_;
        } else {
          return clientGetAnnounceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public Builder setClientGetAnnounce(com.kys.util.netty.proto.HallProto.ClientGetAnnounce value) {
        if (clientGetAnnounceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetAnnounce_ = value;
          onChanged();
        } else {
          clientGetAnnounceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public Builder setClientGetAnnounce(
          com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder builderForValue) {
        if (clientGetAnnounceBuilder_ == null) {
          clientGetAnnounce_ = builderForValue.build();
          onChanged();
        } else {
          clientGetAnnounceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public Builder mergeClientGetAnnounce(com.kys.util.netty.proto.HallProto.ClientGetAnnounce value) {
        if (clientGetAnnounceBuilder_ == null) {
          if (clientGetAnnounce_ != null) {
            clientGetAnnounce_ =
              com.kys.util.netty.proto.HallProto.ClientGetAnnounce.newBuilder(clientGetAnnounce_).mergeFrom(value).buildPartial();
          } else {
            clientGetAnnounce_ = value;
          }
          onChanged();
        } else {
          clientGetAnnounceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public Builder clearClientGetAnnounce() {
        if (clientGetAnnounceBuilder_ == null) {
          clientGetAnnounce_ = null;
          onChanged();
        } else {
          clientGetAnnounce_ = null;
          clientGetAnnounceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder getClientGetAnnounceBuilder() {
        
        onChanged();
        return getClientGetAnnounceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder getClientGetAnnounceOrBuilder() {
        if (clientGetAnnounceBuilder_ != null) {
          return clientGetAnnounceBuilder_.getMessageOrBuilder();
        } else {
          return clientGetAnnounce_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetAnnounce.getDefaultInstance() : clientGetAnnounce_;
        }
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetAnnounce, com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder> 
          getClientGetAnnounceFieldBuilder() {
        if (clientGetAnnounceBuilder_ == null) {
          clientGetAnnounceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetAnnounce, com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder>(
                  getClientGetAnnounce(),
                  getParentForChildren(),
                  isClean());
          clientGetAnnounce_ = null;
        }
        return clientGetAnnounceBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetMail clientGetMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMail, com.kys.util.netty.proto.HallProto.ClientGetMail.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder> clientGetMailBuilder_;
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public boolean hasClientGetMail() {
        return clientGetMailBuilder_ != null || clientGetMail_ != null;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMail getClientGetMail() {
        if (clientGetMailBuilder_ == null) {
          return clientGetMail_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMail.getDefaultInstance() : clientGetMail_;
        } else {
          return clientGetMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public Builder setClientGetMail(com.kys.util.netty.proto.HallProto.ClientGetMail value) {
        if (clientGetMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMail_ = value;
          onChanged();
        } else {
          clientGetMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public Builder setClientGetMail(
          com.kys.util.netty.proto.HallProto.ClientGetMail.Builder builderForValue) {
        if (clientGetMailBuilder_ == null) {
          clientGetMail_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public Builder mergeClientGetMail(com.kys.util.netty.proto.HallProto.ClientGetMail value) {
        if (clientGetMailBuilder_ == null) {
          if (clientGetMail_ != null) {
            clientGetMail_ =
              com.kys.util.netty.proto.HallProto.ClientGetMail.newBuilder(clientGetMail_).mergeFrom(value).buildPartial();
          } else {
            clientGetMail_ = value;
          }
          onChanged();
        } else {
          clientGetMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public Builder clearClientGetMail() {
        if (clientGetMailBuilder_ == null) {
          clientGetMail_ = null;
          onChanged();
        } else {
          clientGetMail_ = null;
          clientGetMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMail.Builder getClientGetMailBuilder() {
        
        onChanged();
        return getClientGetMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder getClientGetMailOrBuilder() {
        if (clientGetMailBuilder_ != null) {
          return clientGetMailBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMail_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetMail.getDefaultInstance() : clientGetMail_;
        }
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMail, com.kys.util.netty.proto.HallProto.ClientGetMail.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder> 
          getClientGetMailFieldBuilder() {
        if (clientGetMailBuilder_ == null) {
          clientGetMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetMail, com.kys.util.netty.proto.HallProto.ClientGetMail.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder>(
                  getClientGetMail(),
                  getParentForChildren(),
                  isClean());
          clientGetMail_ = null;
        }
        return clientGetMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetMailReward clientGetMailReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMailReward, com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder> clientGetMailRewardBuilder_;
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public boolean hasClientGetMailReward() {
        return clientGetMailRewardBuilder_ != null || clientGetMailReward_ != null;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMailReward getClientGetMailReward() {
        if (clientGetMailRewardBuilder_ == null) {
          return clientGetMailReward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMailReward.getDefaultInstance() : clientGetMailReward_;
        } else {
          return clientGetMailRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public Builder setClientGetMailReward(com.kys.util.netty.proto.HallProto.ClientGetMailReward value) {
        if (clientGetMailRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMailReward_ = value;
          onChanged();
        } else {
          clientGetMailRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public Builder setClientGetMailReward(
          com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder builderForValue) {
        if (clientGetMailRewardBuilder_ == null) {
          clientGetMailReward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMailRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public Builder mergeClientGetMailReward(com.kys.util.netty.proto.HallProto.ClientGetMailReward value) {
        if (clientGetMailRewardBuilder_ == null) {
          if (clientGetMailReward_ != null) {
            clientGetMailReward_ =
              com.kys.util.netty.proto.HallProto.ClientGetMailReward.newBuilder(clientGetMailReward_).mergeFrom(value).buildPartial();
          } else {
            clientGetMailReward_ = value;
          }
          onChanged();
        } else {
          clientGetMailRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public Builder clearClientGetMailReward() {
        if (clientGetMailRewardBuilder_ == null) {
          clientGetMailReward_ = null;
          onChanged();
        } else {
          clientGetMailReward_ = null;
          clientGetMailRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder getClientGetMailRewardBuilder() {
        
        onChanged();
        return getClientGetMailRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder getClientGetMailRewardOrBuilder() {
        if (clientGetMailRewardBuilder_ != null) {
          return clientGetMailRewardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMailReward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetMailReward.getDefaultInstance() : clientGetMailReward_;
        }
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMailReward, com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder> 
          getClientGetMailRewardFieldBuilder() {
        if (clientGetMailRewardBuilder_ == null) {
          clientGetMailRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetMailReward, com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder>(
                  getClientGetMailReward(),
                  getParentForChildren(),
                  isClean());
          clientGetMailReward_ = null;
        }
        return clientGetMailRewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientDelMail clientDelMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDelMail, com.kys.util.netty.proto.HallProto.ClientDelMail.Builder, com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder> clientDelMailBuilder_;
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public boolean hasClientDelMail() {
        return clientDelMailBuilder_ != null || clientDelMail_ != null;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDelMail getClientDelMail() {
        if (clientDelMailBuilder_ == null) {
          return clientDelMail_ == null ? com.kys.util.netty.proto.HallProto.ClientDelMail.getDefaultInstance() : clientDelMail_;
        } else {
          return clientDelMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public Builder setClientDelMail(com.kys.util.netty.proto.HallProto.ClientDelMail value) {
        if (clientDelMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDelMail_ = value;
          onChanged();
        } else {
          clientDelMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public Builder setClientDelMail(
          com.kys.util.netty.proto.HallProto.ClientDelMail.Builder builderForValue) {
        if (clientDelMailBuilder_ == null) {
          clientDelMail_ = builderForValue.build();
          onChanged();
        } else {
          clientDelMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public Builder mergeClientDelMail(com.kys.util.netty.proto.HallProto.ClientDelMail value) {
        if (clientDelMailBuilder_ == null) {
          if (clientDelMail_ != null) {
            clientDelMail_ =
              com.kys.util.netty.proto.HallProto.ClientDelMail.newBuilder(clientDelMail_).mergeFrom(value).buildPartial();
          } else {
            clientDelMail_ = value;
          }
          onChanged();
        } else {
          clientDelMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public Builder clearClientDelMail() {
        if (clientDelMailBuilder_ == null) {
          clientDelMail_ = null;
          onChanged();
        } else {
          clientDelMail_ = null;
          clientDelMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDelMail.Builder getClientDelMailBuilder() {
        
        onChanged();
        return getClientDelMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder getClientDelMailOrBuilder() {
        if (clientDelMailBuilder_ != null) {
          return clientDelMailBuilder_.getMessageOrBuilder();
        } else {
          return clientDelMail_ == null ?
              com.kys.util.netty.proto.HallProto.ClientDelMail.getDefaultInstance() : clientDelMail_;
        }
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDelMail, com.kys.util.netty.proto.HallProto.ClientDelMail.Builder, com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder> 
          getClientDelMailFieldBuilder() {
        if (clientDelMailBuilder_ == null) {
          clientDelMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientDelMail, com.kys.util.netty.proto.HallProto.ClientDelMail.Builder, com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder>(
                  getClientDelMail(),
                  getParentForChildren(),
                  isClean());
          clientDelMail_ = null;
        }
        return clientDelMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientReadMail clientReadMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientReadMail, com.kys.util.netty.proto.HallProto.ClientReadMail.Builder, com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder> clientReadMailBuilder_;
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public boolean hasClientReadMail() {
        return clientReadMailBuilder_ != null || clientReadMail_ != null;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientReadMail getClientReadMail() {
        if (clientReadMailBuilder_ == null) {
          return clientReadMail_ == null ? com.kys.util.netty.proto.HallProto.ClientReadMail.getDefaultInstance() : clientReadMail_;
        } else {
          return clientReadMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public Builder setClientReadMail(com.kys.util.netty.proto.HallProto.ClientReadMail value) {
        if (clientReadMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientReadMail_ = value;
          onChanged();
        } else {
          clientReadMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public Builder setClientReadMail(
          com.kys.util.netty.proto.HallProto.ClientReadMail.Builder builderForValue) {
        if (clientReadMailBuilder_ == null) {
          clientReadMail_ = builderForValue.build();
          onChanged();
        } else {
          clientReadMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public Builder mergeClientReadMail(com.kys.util.netty.proto.HallProto.ClientReadMail value) {
        if (clientReadMailBuilder_ == null) {
          if (clientReadMail_ != null) {
            clientReadMail_ =
              com.kys.util.netty.proto.HallProto.ClientReadMail.newBuilder(clientReadMail_).mergeFrom(value).buildPartial();
          } else {
            clientReadMail_ = value;
          }
          onChanged();
        } else {
          clientReadMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public Builder clearClientReadMail() {
        if (clientReadMailBuilder_ == null) {
          clientReadMail_ = null;
          onChanged();
        } else {
          clientReadMail_ = null;
          clientReadMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientReadMail.Builder getClientReadMailBuilder() {
        
        onChanged();
        return getClientReadMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder getClientReadMailOrBuilder() {
        if (clientReadMailBuilder_ != null) {
          return clientReadMailBuilder_.getMessageOrBuilder();
        } else {
          return clientReadMail_ == null ?
              com.kys.util.netty.proto.HallProto.ClientReadMail.getDefaultInstance() : clientReadMail_;
        }
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientReadMail, com.kys.util.netty.proto.HallProto.ClientReadMail.Builder, com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder> 
          getClientReadMailFieldBuilder() {
        if (clientReadMailBuilder_ == null) {
          clientReadMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientReadMail, com.kys.util.netty.proto.HallProto.ClientReadMail.Builder, com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder>(
                  getClientReadMail(),
                  getParentForChildren(),
                  isClean());
          clientReadMail_ = null;
        }
        return clientReadMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientDel2R clientDel2R_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDel2R, com.kys.util.netty.proto.HallProto.ClientDel2R.Builder, com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder> clientDel2RBuilder_;
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public boolean hasClientDel2R() {
        return clientDel2RBuilder_ != null || clientDel2R_ != null;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDel2R getClientDel2R() {
        if (clientDel2RBuilder_ == null) {
          return clientDel2R_ == null ? com.kys.util.netty.proto.HallProto.ClientDel2R.getDefaultInstance() : clientDel2R_;
        } else {
          return clientDel2RBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public Builder setClientDel2R(com.kys.util.netty.proto.HallProto.ClientDel2R value) {
        if (clientDel2RBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDel2R_ = value;
          onChanged();
        } else {
          clientDel2RBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public Builder setClientDel2R(
          com.kys.util.netty.proto.HallProto.ClientDel2R.Builder builderForValue) {
        if (clientDel2RBuilder_ == null) {
          clientDel2R_ = builderForValue.build();
          onChanged();
        } else {
          clientDel2RBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public Builder mergeClientDel2R(com.kys.util.netty.proto.HallProto.ClientDel2R value) {
        if (clientDel2RBuilder_ == null) {
          if (clientDel2R_ != null) {
            clientDel2R_ =
              com.kys.util.netty.proto.HallProto.ClientDel2R.newBuilder(clientDel2R_).mergeFrom(value).buildPartial();
          } else {
            clientDel2R_ = value;
          }
          onChanged();
        } else {
          clientDel2RBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public Builder clearClientDel2R() {
        if (clientDel2RBuilder_ == null) {
          clientDel2R_ = null;
          onChanged();
        } else {
          clientDel2R_ = null;
          clientDel2RBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDel2R.Builder getClientDel2RBuilder() {
        
        onChanged();
        return getClientDel2RFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder getClientDel2ROrBuilder() {
        if (clientDel2RBuilder_ != null) {
          return clientDel2RBuilder_.getMessageOrBuilder();
        } else {
          return clientDel2R_ == null ?
              com.kys.util.netty.proto.HallProto.ClientDel2R.getDefaultInstance() : clientDel2R_;
        }
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDel2R, com.kys.util.netty.proto.HallProto.ClientDel2R.Builder, com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder> 
          getClientDel2RFieldBuilder() {
        if (clientDel2RBuilder_ == null) {
          clientDel2RBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientDel2R, com.kys.util.netty.proto.HallProto.ClientDel2R.Builder, com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder>(
                  getClientDel2R(),
                  getParentForChildren(),
                  isClean());
          clientDel2R_ = null;
        }
        return clientDel2RBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientQueryDailyTask clientQueryDailyTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryDailyTask, com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder> clientQueryDailyTaskBuilder_;
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public boolean hasClientQueryDailyTask() {
        return clientQueryDailyTaskBuilder_ != null || clientQueryDailyTask_ != null;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryDailyTask getClientQueryDailyTask() {
        if (clientQueryDailyTaskBuilder_ == null) {
          return clientQueryDailyTask_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.getDefaultInstance() : clientQueryDailyTask_;
        } else {
          return clientQueryDailyTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public Builder setClientQueryDailyTask(com.kys.util.netty.proto.HallProto.ClientQueryDailyTask value) {
        if (clientQueryDailyTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryDailyTask_ = value;
          onChanged();
        } else {
          clientQueryDailyTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public Builder setClientQueryDailyTask(
          com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder builderForValue) {
        if (clientQueryDailyTaskBuilder_ == null) {
          clientQueryDailyTask_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryDailyTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public Builder mergeClientQueryDailyTask(com.kys.util.netty.proto.HallProto.ClientQueryDailyTask value) {
        if (clientQueryDailyTaskBuilder_ == null) {
          if (clientQueryDailyTask_ != null) {
            clientQueryDailyTask_ =
              com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.newBuilder(clientQueryDailyTask_).mergeFrom(value).buildPartial();
          } else {
            clientQueryDailyTask_ = value;
          }
          onChanged();
        } else {
          clientQueryDailyTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public Builder clearClientQueryDailyTask() {
        if (clientQueryDailyTaskBuilder_ == null) {
          clientQueryDailyTask_ = null;
          onChanged();
        } else {
          clientQueryDailyTask_ = null;
          clientQueryDailyTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder getClientQueryDailyTaskBuilder() {
        
        onChanged();
        return getClientQueryDailyTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder getClientQueryDailyTaskOrBuilder() {
        if (clientQueryDailyTaskBuilder_ != null) {
          return clientQueryDailyTaskBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryDailyTask_ == null ?
              com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.getDefaultInstance() : clientQueryDailyTask_;
        }
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryDailyTask, com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder> 
          getClientQueryDailyTaskFieldBuilder() {
        if (clientQueryDailyTaskBuilder_ == null) {
          clientQueryDailyTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientQueryDailyTask, com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder>(
                  getClientQueryDailyTask(),
                  getParentForChildren(),
                  isClean());
          clientQueryDailyTask_ = null;
        }
        return clientQueryDailyTaskBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetNoviceReward clientGetNoviceReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetNoviceReward, com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder> clientGetNoviceRewardBuilder_;
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public boolean hasClientGetNoviceReward() {
        return clientGetNoviceRewardBuilder_ != null || clientGetNoviceReward_ != null;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNoviceReward getClientGetNoviceReward() {
        if (clientGetNoviceRewardBuilder_ == null) {
          return clientGetNoviceReward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.getDefaultInstance() : clientGetNoviceReward_;
        } else {
          return clientGetNoviceRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public Builder setClientGetNoviceReward(com.kys.util.netty.proto.HallProto.ClientGetNoviceReward value) {
        if (clientGetNoviceRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetNoviceReward_ = value;
          onChanged();
        } else {
          clientGetNoviceRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public Builder setClientGetNoviceReward(
          com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder builderForValue) {
        if (clientGetNoviceRewardBuilder_ == null) {
          clientGetNoviceReward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetNoviceRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public Builder mergeClientGetNoviceReward(com.kys.util.netty.proto.HallProto.ClientGetNoviceReward value) {
        if (clientGetNoviceRewardBuilder_ == null) {
          if (clientGetNoviceReward_ != null) {
            clientGetNoviceReward_ =
              com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.newBuilder(clientGetNoviceReward_).mergeFrom(value).buildPartial();
          } else {
            clientGetNoviceReward_ = value;
          }
          onChanged();
        } else {
          clientGetNoviceRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public Builder clearClientGetNoviceReward() {
        if (clientGetNoviceRewardBuilder_ == null) {
          clientGetNoviceReward_ = null;
          onChanged();
        } else {
          clientGetNoviceReward_ = null;
          clientGetNoviceRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder getClientGetNoviceRewardBuilder() {
        
        onChanged();
        return getClientGetNoviceRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder getClientGetNoviceRewardOrBuilder() {
        if (clientGetNoviceRewardBuilder_ != null) {
          return clientGetNoviceRewardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetNoviceReward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.getDefaultInstance() : clientGetNoviceReward_;
        }
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导红包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetNoviceReward, com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder> 
          getClientGetNoviceRewardFieldBuilder() {
        if (clientGetNoviceRewardBuilder_ == null) {
          clientGetNoviceRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetNoviceReward, com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder>(
                  getClientGetNoviceReward(),
                  getParentForChildren(),
                  isClean());
          clientGetNoviceReward_ = null;
        }
        return clientGetNoviceRewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask clientQueryNoviceTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder> clientQueryNoviceTaskBuilder_;
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public boolean hasClientQueryNoviceTask() {
        return clientQueryNoviceTaskBuilder_ != null || clientQueryNoviceTask_ != null;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask getClientQueryNoviceTask() {
        if (clientQueryNoviceTaskBuilder_ == null) {
          return clientQueryNoviceTask_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.getDefaultInstance() : clientQueryNoviceTask_;
        } else {
          return clientQueryNoviceTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public Builder setClientQueryNoviceTask(com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask value) {
        if (clientQueryNoviceTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryNoviceTask_ = value;
          onChanged();
        } else {
          clientQueryNoviceTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public Builder setClientQueryNoviceTask(
          com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder builderForValue) {
        if (clientQueryNoviceTaskBuilder_ == null) {
          clientQueryNoviceTask_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryNoviceTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public Builder mergeClientQueryNoviceTask(com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask value) {
        if (clientQueryNoviceTaskBuilder_ == null) {
          if (clientQueryNoviceTask_ != null) {
            clientQueryNoviceTask_ =
              com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.newBuilder(clientQueryNoviceTask_).mergeFrom(value).buildPartial();
          } else {
            clientQueryNoviceTask_ = value;
          }
          onChanged();
        } else {
          clientQueryNoviceTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public Builder clearClientQueryNoviceTask() {
        if (clientQueryNoviceTaskBuilder_ == null) {
          clientQueryNoviceTask_ = null;
          onChanged();
        } else {
          clientQueryNoviceTask_ = null;
          clientQueryNoviceTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder getClientQueryNoviceTaskBuilder() {
        
        onChanged();
        return getClientQueryNoviceTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder getClientQueryNoviceTaskOrBuilder() {
        if (clientQueryNoviceTaskBuilder_ != null) {
          return clientQueryNoviceTaskBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryNoviceTask_ == null ?
              com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.getDefaultInstance() : clientQueryNoviceTask_;
        }
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder> 
          getClientQueryNoviceTaskFieldBuilder() {
        if (clientQueryNoviceTaskBuilder_ == null) {
          clientQueryNoviceTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder>(
                  getClientQueryNoviceTask(),
                  getParentForChildren(),
                  isClean());
          clientQueryNoviceTask_ = null;
        }
        return clientQueryNoviceTaskBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetDTAward clientGetDTAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetDTAward, com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder> clientGetDTAwardBuilder_;
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public boolean hasClientGetDTAward() {
        return clientGetDTAwardBuilder_ != null || clientGetDTAward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDTAward getClientGetDTAward() {
        if (clientGetDTAwardBuilder_ == null) {
          return clientGetDTAward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetDTAward.getDefaultInstance() : clientGetDTAward_;
        } else {
          return clientGetDTAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public Builder setClientGetDTAward(com.kys.util.netty.proto.HallProto.ClientGetDTAward value) {
        if (clientGetDTAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetDTAward_ = value;
          onChanged();
        } else {
          clientGetDTAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public Builder setClientGetDTAward(
          com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder builderForValue) {
        if (clientGetDTAwardBuilder_ == null) {
          clientGetDTAward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetDTAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public Builder mergeClientGetDTAward(com.kys.util.netty.proto.HallProto.ClientGetDTAward value) {
        if (clientGetDTAwardBuilder_ == null) {
          if (clientGetDTAward_ != null) {
            clientGetDTAward_ =
              com.kys.util.netty.proto.HallProto.ClientGetDTAward.newBuilder(clientGetDTAward_).mergeFrom(value).buildPartial();
          } else {
            clientGetDTAward_ = value;
          }
          onChanged();
        } else {
          clientGetDTAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public Builder clearClientGetDTAward() {
        if (clientGetDTAwardBuilder_ == null) {
          clientGetDTAward_ = null;
          onChanged();
        } else {
          clientGetDTAward_ = null;
          clientGetDTAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder getClientGetDTAwardBuilder() {
        
        onChanged();
        return getClientGetDTAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder getClientGetDTAwardOrBuilder() {
        if (clientGetDTAwardBuilder_ != null) {
          return clientGetDTAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetDTAward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetDTAward.getDefaultInstance() : clientGetDTAward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetDTAward, com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder> 
          getClientGetDTAwardFieldBuilder() {
        if (clientGetDTAwardBuilder_ == null) {
          clientGetDTAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetDTAward, com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder>(
                  getClientGetDTAward(),
                  getParentForChildren(),
                  isClean());
          clientGetDTAward_ = null;
        }
        return clientGetDTAwardBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr clientGetReceiveAddr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder> clientGetReceiveAddrBuilder_;
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public boolean hasClientGetReceiveAddr() {
        return clientGetReceiveAddrBuilder_ != null || clientGetReceiveAddr_ != null;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr getClientGetReceiveAddr() {
        if (clientGetReceiveAddrBuilder_ == null) {
          return clientGetReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.getDefaultInstance() : clientGetReceiveAddr_;
        } else {
          return clientGetReceiveAddrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public Builder setClientGetReceiveAddr(com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr value) {
        if (clientGetReceiveAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetReceiveAddr_ = value;
          onChanged();
        } else {
          clientGetReceiveAddrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public Builder setClientGetReceiveAddr(
          com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder builderForValue) {
        if (clientGetReceiveAddrBuilder_ == null) {
          clientGetReceiveAddr_ = builderForValue.build();
          onChanged();
        } else {
          clientGetReceiveAddrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public Builder mergeClientGetReceiveAddr(com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr value) {
        if (clientGetReceiveAddrBuilder_ == null) {
          if (clientGetReceiveAddr_ != null) {
            clientGetReceiveAddr_ =
              com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.newBuilder(clientGetReceiveAddr_).mergeFrom(value).buildPartial();
          } else {
            clientGetReceiveAddr_ = value;
          }
          onChanged();
        } else {
          clientGetReceiveAddrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public Builder clearClientGetReceiveAddr() {
        if (clientGetReceiveAddrBuilder_ == null) {
          clientGetReceiveAddr_ = null;
          onChanged();
        } else {
          clientGetReceiveAddr_ = null;
          clientGetReceiveAddrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder getClientGetReceiveAddrBuilder() {
        
        onChanged();
        return getClientGetReceiveAddrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder getClientGetReceiveAddrOrBuilder() {
        if (clientGetReceiveAddrBuilder_ != null) {
          return clientGetReceiveAddrBuilder_.getMessageOrBuilder();
        } else {
          return clientGetReceiveAddr_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.getDefaultInstance() : clientGetReceiveAddr_;
        }
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder> 
          getClientGetReceiveAddrFieldBuilder() {
        if (clientGetReceiveAddrBuilder_ == null) {
          clientGetReceiveAddrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder>(
                  getClientGetReceiveAddr(),
                  getParentForChildren(),
                  isClean());
          clientGetReceiveAddr_ = null;
        }
        return clientGetReceiveAddrBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr clientAlterReceiveAddr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder> clientAlterReceiveAddrBuilder_;
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public boolean hasClientAlterReceiveAddr() {
        return clientAlterReceiveAddrBuilder_ != null || clientAlterReceiveAddr_ != null;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr getClientAlterReceiveAddr() {
        if (clientAlterReceiveAddrBuilder_ == null) {
          return clientAlterReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.getDefaultInstance() : clientAlterReceiveAddr_;
        } else {
          return clientAlterReceiveAddrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public Builder setClientAlterReceiveAddr(com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr value) {
        if (clientAlterReceiveAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientAlterReceiveAddr_ = value;
          onChanged();
        } else {
          clientAlterReceiveAddrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public Builder setClientAlterReceiveAddr(
          com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder builderForValue) {
        if (clientAlterReceiveAddrBuilder_ == null) {
          clientAlterReceiveAddr_ = builderForValue.build();
          onChanged();
        } else {
          clientAlterReceiveAddrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public Builder mergeClientAlterReceiveAddr(com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr value) {
        if (clientAlterReceiveAddrBuilder_ == null) {
          if (clientAlterReceiveAddr_ != null) {
            clientAlterReceiveAddr_ =
              com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.newBuilder(clientAlterReceiveAddr_).mergeFrom(value).buildPartial();
          } else {
            clientAlterReceiveAddr_ = value;
          }
          onChanged();
        } else {
          clientAlterReceiveAddrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public Builder clearClientAlterReceiveAddr() {
        if (clientAlterReceiveAddrBuilder_ == null) {
          clientAlterReceiveAddr_ = null;
          onChanged();
        } else {
          clientAlterReceiveAddr_ = null;
          clientAlterReceiveAddrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder getClientAlterReceiveAddrBuilder() {
        
        onChanged();
        return getClientAlterReceiveAddrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder getClientAlterReceiveAddrOrBuilder() {
        if (clientAlterReceiveAddrBuilder_ != null) {
          return clientAlterReceiveAddrBuilder_.getMessageOrBuilder();
        } else {
          return clientAlterReceiveAddr_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.getDefaultInstance() : clientAlterReceiveAddr_;
        }
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder> 
          getClientAlterReceiveAddrFieldBuilder() {
        if (clientAlterReceiveAddrBuilder_ == null) {
          clientAlterReceiveAddrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder>(
                  getClientAlterReceiveAddr(),
                  getParentForChildren(),
                  isClean());
          clientAlterReceiveAddr_ = null;
        }
        return clientAlterReceiveAddrBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchList clientSnatchList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchList, com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder> clientSnatchListBuilder_;
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public boolean hasClientSnatchList() {
        return clientSnatchListBuilder_ != null || clientSnatchList_ != null;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchList getClientSnatchList() {
        if (clientSnatchListBuilder_ == null) {
          return clientSnatchList_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchList.getDefaultInstance() : clientSnatchList_;
        } else {
          return clientSnatchListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public Builder setClientSnatchList(com.kys.util.netty.proto.SnatchProto.ClientSnatchList value) {
        if (clientSnatchListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchList_ = value;
          onChanged();
        } else {
          clientSnatchListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public Builder setClientSnatchList(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder builderForValue) {
        if (clientSnatchListBuilder_ == null) {
          clientSnatchList_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public Builder mergeClientSnatchList(com.kys.util.netty.proto.SnatchProto.ClientSnatchList value) {
        if (clientSnatchListBuilder_ == null) {
          if (clientSnatchList_ != null) {
            clientSnatchList_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchList.newBuilder(clientSnatchList_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchList_ = value;
          }
          onChanged();
        } else {
          clientSnatchListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public Builder clearClientSnatchList() {
        if (clientSnatchListBuilder_ == null) {
          clientSnatchList_ = null;
          onChanged();
        } else {
          clientSnatchList_ = null;
          clientSnatchListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder getClientSnatchListBuilder() {
        
        onChanged();
        return getClientSnatchListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder getClientSnatchListOrBuilder() {
        if (clientSnatchListBuilder_ != null) {
          return clientSnatchListBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchList_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchList.getDefaultInstance() : clientSnatchList_;
        }
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchList, com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder> 
          getClientSnatchListFieldBuilder() {
        if (clientSnatchListBuilder_ == null) {
          clientSnatchListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchList, com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder>(
                  getClientSnatchList(),
                  getParentForChildren(),
                  isClean());
          clientSnatchList_ = null;
        }
        return clientSnatchListBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail clientSnatchItemDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder> clientSnatchItemDetailBuilder_;
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public boolean hasClientSnatchItemDetail() {
        return clientSnatchItemDetailBuilder_ != null || clientSnatchItemDetail_ != null;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail getClientSnatchItemDetail() {
        if (clientSnatchItemDetailBuilder_ == null) {
          return clientSnatchItemDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.getDefaultInstance() : clientSnatchItemDetail_;
        } else {
          return clientSnatchItemDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public Builder setClientSnatchItemDetail(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail value) {
        if (clientSnatchItemDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchItemDetail_ = value;
          onChanged();
        } else {
          clientSnatchItemDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public Builder setClientSnatchItemDetail(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder builderForValue) {
        if (clientSnatchItemDetailBuilder_ == null) {
          clientSnatchItemDetail_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchItemDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public Builder mergeClientSnatchItemDetail(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail value) {
        if (clientSnatchItemDetailBuilder_ == null) {
          if (clientSnatchItemDetail_ != null) {
            clientSnatchItemDetail_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.newBuilder(clientSnatchItemDetail_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchItemDetail_ = value;
          }
          onChanged();
        } else {
          clientSnatchItemDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public Builder clearClientSnatchItemDetail() {
        if (clientSnatchItemDetailBuilder_ == null) {
          clientSnatchItemDetail_ = null;
          onChanged();
        } else {
          clientSnatchItemDetail_ = null;
          clientSnatchItemDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder getClientSnatchItemDetailBuilder() {
        
        onChanged();
        return getClientSnatchItemDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder getClientSnatchItemDetailOrBuilder() {
        if (clientSnatchItemDetailBuilder_ != null) {
          return clientSnatchItemDetailBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchItemDetail_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.getDefaultInstance() : clientSnatchItemDetail_;
        }
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder> 
          getClientSnatchItemDetailFieldBuilder() {
        if (clientSnatchItemDetailBuilder_ == null) {
          clientSnatchItemDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder>(
                  getClientSnatchItemDetail(),
                  getParentForChildren(),
                  isClean());
          clientSnatchItemDetail_ = null;
        }
        return clientSnatchItemDetailBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchBet clientSnatchBet_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchBet, com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder> clientSnatchBetBuilder_;
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public boolean hasClientSnatchBet() {
        return clientSnatchBetBuilder_ != null || clientSnatchBet_ != null;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchBet getClientSnatchBet() {
        if (clientSnatchBetBuilder_ == null) {
          return clientSnatchBet_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.getDefaultInstance() : clientSnatchBet_;
        } else {
          return clientSnatchBetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public Builder setClientSnatchBet(com.kys.util.netty.proto.SnatchProto.ClientSnatchBet value) {
        if (clientSnatchBetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchBet_ = value;
          onChanged();
        } else {
          clientSnatchBetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public Builder setClientSnatchBet(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder builderForValue) {
        if (clientSnatchBetBuilder_ == null) {
          clientSnatchBet_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchBetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public Builder mergeClientSnatchBet(com.kys.util.netty.proto.SnatchProto.ClientSnatchBet value) {
        if (clientSnatchBetBuilder_ == null) {
          if (clientSnatchBet_ != null) {
            clientSnatchBet_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.newBuilder(clientSnatchBet_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchBet_ = value;
          }
          onChanged();
        } else {
          clientSnatchBetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public Builder clearClientSnatchBet() {
        if (clientSnatchBetBuilder_ == null) {
          clientSnatchBet_ = null;
          onChanged();
        } else {
          clientSnatchBet_ = null;
          clientSnatchBetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder getClientSnatchBetBuilder() {
        
        onChanged();
        return getClientSnatchBetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder getClientSnatchBetOrBuilder() {
        if (clientSnatchBetBuilder_ != null) {
          return clientSnatchBetBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchBet_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.getDefaultInstance() : clientSnatchBet_;
        }
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchBet, com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder> 
          getClientSnatchBetFieldBuilder() {
        if (clientSnatchBetBuilder_ == null) {
          clientSnatchBetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchBet, com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder>(
                  getClientSnatchBet(),
                  getParentForChildren(),
                  isClean());
          clientSnatchBet_ = null;
        }
        return clientSnatchBetBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList clientSnatchAwardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder> clientSnatchAwardListBuilder_;
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public boolean hasClientSnatchAwardList() {
        return clientSnatchAwardListBuilder_ != null || clientSnatchAwardList_ != null;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList getClientSnatchAwardList() {
        if (clientSnatchAwardListBuilder_ == null) {
          return clientSnatchAwardList_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.getDefaultInstance() : clientSnatchAwardList_;
        } else {
          return clientSnatchAwardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public Builder setClientSnatchAwardList(com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList value) {
        if (clientSnatchAwardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchAwardList_ = value;
          onChanged();
        } else {
          clientSnatchAwardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public Builder setClientSnatchAwardList(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder builderForValue) {
        if (clientSnatchAwardListBuilder_ == null) {
          clientSnatchAwardList_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchAwardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public Builder mergeClientSnatchAwardList(com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList value) {
        if (clientSnatchAwardListBuilder_ == null) {
          if (clientSnatchAwardList_ != null) {
            clientSnatchAwardList_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.newBuilder(clientSnatchAwardList_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchAwardList_ = value;
          }
          onChanged();
        } else {
          clientSnatchAwardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public Builder clearClientSnatchAwardList() {
        if (clientSnatchAwardListBuilder_ == null) {
          clientSnatchAwardList_ = null;
          onChanged();
        } else {
          clientSnatchAwardList_ = null;
          clientSnatchAwardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder getClientSnatchAwardListBuilder() {
        
        onChanged();
        return getClientSnatchAwardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder getClientSnatchAwardListOrBuilder() {
        if (clientSnatchAwardListBuilder_ != null) {
          return clientSnatchAwardListBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchAwardList_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.getDefaultInstance() : clientSnatchAwardList_;
        }
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder> 
          getClientSnatchAwardListFieldBuilder() {
        if (clientSnatchAwardListBuilder_ == null) {
          clientSnatchAwardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder>(
                  getClientSnatchAwardList(),
                  getParentForChildren(),
                  isClean());
          clientSnatchAwardList_ = null;
        }
        return clientSnatchAwardListBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord clientOwnSnatchRecord_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder> clientOwnSnatchRecordBuilder_;
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public boolean hasClientOwnSnatchRecord() {
        return clientOwnSnatchRecordBuilder_ != null || clientOwnSnatchRecord_ != null;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord getClientOwnSnatchRecord() {
        if (clientOwnSnatchRecordBuilder_ == null) {
          return clientOwnSnatchRecord_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.getDefaultInstance() : clientOwnSnatchRecord_;
        } else {
          return clientOwnSnatchRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public Builder setClientOwnSnatchRecord(com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord value) {
        if (clientOwnSnatchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientOwnSnatchRecord_ = value;
          onChanged();
        } else {
          clientOwnSnatchRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public Builder setClientOwnSnatchRecord(
          com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder builderForValue) {
        if (clientOwnSnatchRecordBuilder_ == null) {
          clientOwnSnatchRecord_ = builderForValue.build();
          onChanged();
        } else {
          clientOwnSnatchRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public Builder mergeClientOwnSnatchRecord(com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord value) {
        if (clientOwnSnatchRecordBuilder_ == null) {
          if (clientOwnSnatchRecord_ != null) {
            clientOwnSnatchRecord_ =
              com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.newBuilder(clientOwnSnatchRecord_).mergeFrom(value).buildPartial();
          } else {
            clientOwnSnatchRecord_ = value;
          }
          onChanged();
        } else {
          clientOwnSnatchRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public Builder clearClientOwnSnatchRecord() {
        if (clientOwnSnatchRecordBuilder_ == null) {
          clientOwnSnatchRecord_ = null;
          onChanged();
        } else {
          clientOwnSnatchRecord_ = null;
          clientOwnSnatchRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder getClientOwnSnatchRecordBuilder() {
        
        onChanged();
        return getClientOwnSnatchRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder getClientOwnSnatchRecordOrBuilder() {
        if (clientOwnSnatchRecordBuilder_ != null) {
          return clientOwnSnatchRecordBuilder_.getMessageOrBuilder();
        } else {
          return clientOwnSnatchRecord_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.getDefaultInstance() : clientOwnSnatchRecord_;
        }
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder> 
          getClientOwnSnatchRecordFieldBuilder() {
        if (clientOwnSnatchRecordBuilder_ == null) {
          clientOwnSnatchRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder>(
                  getClientOwnSnatchRecord(),
                  getParentForChildren(),
                  isClean());
          clientOwnSnatchRecord_ = null;
        }
        return clientOwnSnatchRecordBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory clientSnatchItemHistory_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder> clientSnatchItemHistoryBuilder_;
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public boolean hasClientSnatchItemHistory() {
        return clientSnatchItemHistoryBuilder_ != null || clientSnatchItemHistory_ != null;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory getClientSnatchItemHistory() {
        if (clientSnatchItemHistoryBuilder_ == null) {
          return clientSnatchItemHistory_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.getDefaultInstance() : clientSnatchItemHistory_;
        } else {
          return clientSnatchItemHistoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public Builder setClientSnatchItemHistory(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory value) {
        if (clientSnatchItemHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchItemHistory_ = value;
          onChanged();
        } else {
          clientSnatchItemHistoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public Builder setClientSnatchItemHistory(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder builderForValue) {
        if (clientSnatchItemHistoryBuilder_ == null) {
          clientSnatchItemHistory_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchItemHistoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public Builder mergeClientSnatchItemHistory(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory value) {
        if (clientSnatchItemHistoryBuilder_ == null) {
          if (clientSnatchItemHistory_ != null) {
            clientSnatchItemHistory_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.newBuilder(clientSnatchItemHistory_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchItemHistory_ = value;
          }
          onChanged();
        } else {
          clientSnatchItemHistoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public Builder clearClientSnatchItemHistory() {
        if (clientSnatchItemHistoryBuilder_ == null) {
          clientSnatchItemHistory_ = null;
          onChanged();
        } else {
          clientSnatchItemHistory_ = null;
          clientSnatchItemHistoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder getClientSnatchItemHistoryBuilder() {
        
        onChanged();
        return getClientSnatchItemHistoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder getClientSnatchItemHistoryOrBuilder() {
        if (clientSnatchItemHistoryBuilder_ != null) {
          return clientSnatchItemHistoryBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchItemHistory_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.getDefaultInstance() : clientSnatchItemHistory_;
        }
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder> 
          getClientSnatchItemHistoryFieldBuilder() {
        if (clientSnatchItemHistoryBuilder_ == null) {
          clientSnatchItemHistoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder>(
                  getClientSnatchItemHistory(),
                  getParentForChildren(),
                  isClean());
          clientSnatchItemHistory_ = null;
        }
        return clientSnatchItemHistoryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail clientSnatchHistoryDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder> clientSnatchHistoryDetailBuilder_;
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public boolean hasClientSnatchHistoryDetail() {
        return clientSnatchHistoryDetailBuilder_ != null || clientSnatchHistoryDetail_ != null;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail getClientSnatchHistoryDetail() {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          return clientSnatchHistoryDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.getDefaultInstance() : clientSnatchHistoryDetail_;
        } else {
          return clientSnatchHistoryDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public Builder setClientSnatchHistoryDetail(com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail value) {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchHistoryDetail_ = value;
          onChanged();
        } else {
          clientSnatchHistoryDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public Builder setClientSnatchHistoryDetail(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder builderForValue) {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          clientSnatchHistoryDetail_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchHistoryDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public Builder mergeClientSnatchHistoryDetail(com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail value) {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          if (clientSnatchHistoryDetail_ != null) {
            clientSnatchHistoryDetail_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.newBuilder(clientSnatchHistoryDetail_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchHistoryDetail_ = value;
          }
          onChanged();
        } else {
          clientSnatchHistoryDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public Builder clearClientSnatchHistoryDetail() {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          clientSnatchHistoryDetail_ = null;
          onChanged();
        } else {
          clientSnatchHistoryDetail_ = null;
          clientSnatchHistoryDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder getClientSnatchHistoryDetailBuilder() {
        
        onChanged();
        return getClientSnatchHistoryDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder getClientSnatchHistoryDetailOrBuilder() {
        if (clientSnatchHistoryDetailBuilder_ != null) {
          return clientSnatchHistoryDetailBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchHistoryDetail_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.getDefaultInstance() : clientSnatchHistoryDetail_;
        }
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder> 
          getClientSnatchHistoryDetailFieldBuilder() {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          clientSnatchHistoryDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder>(
                  getClientSnatchHistoryDetail(),
                  getParentForChildren(),
                  isClean());
          clientSnatchHistoryDetail_ = null;
        }
        return clientSnatchHistoryDetailBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward clientSnatchGetAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder> clientSnatchGetAwardBuilder_;
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public boolean hasClientSnatchGetAward() {
        return clientSnatchGetAwardBuilder_ != null || clientSnatchGetAward_ != null;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward getClientSnatchGetAward() {
        if (clientSnatchGetAwardBuilder_ == null) {
          return clientSnatchGetAward_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.getDefaultInstance() : clientSnatchGetAward_;
        } else {
          return clientSnatchGetAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public Builder setClientSnatchGetAward(com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward value) {
        if (clientSnatchGetAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchGetAward_ = value;
          onChanged();
        } else {
          clientSnatchGetAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public Builder setClientSnatchGetAward(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder builderForValue) {
        if (clientSnatchGetAwardBuilder_ == null) {
          clientSnatchGetAward_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchGetAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public Builder mergeClientSnatchGetAward(com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward value) {
        if (clientSnatchGetAwardBuilder_ == null) {
          if (clientSnatchGetAward_ != null) {
            clientSnatchGetAward_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.newBuilder(clientSnatchGetAward_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchGetAward_ = value;
          }
          onChanged();
        } else {
          clientSnatchGetAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public Builder clearClientSnatchGetAward() {
        if (clientSnatchGetAwardBuilder_ == null) {
          clientSnatchGetAward_ = null;
          onChanged();
        } else {
          clientSnatchGetAward_ = null;
          clientSnatchGetAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder getClientSnatchGetAwardBuilder() {
        
        onChanged();
        return getClientSnatchGetAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder getClientSnatchGetAwardOrBuilder() {
        if (clientSnatchGetAwardBuilder_ != null) {
          return clientSnatchGetAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchGetAward_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.getDefaultInstance() : clientSnatchGetAward_;
        }
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder> 
          getClientSnatchGetAwardFieldBuilder() {
        if (clientSnatchGetAwardBuilder_ == null) {
          clientSnatchGetAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder>(
                  getClientSnatchGetAward(),
                  getParentForChildren(),
                  isClean());
          clientSnatchGetAward_ = null;
        }
        return clientSnatchGetAwardBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientEnterDG clientEnterDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientEnterDG, com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder> clientEnterDGBuilder_;
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public boolean hasClientEnterDG() {
        return clientEnterDGBuilder_ != null || clientEnterDG_ != null;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientEnterDG getClientEnterDG() {
        if (clientEnterDGBuilder_ == null) {
          return clientEnterDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientEnterDG.getDefaultInstance() : clientEnterDG_;
        } else {
          return clientEnterDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public Builder setClientEnterDG(com.kys.util.netty.proto.SnatchProto.ClientEnterDG value) {
        if (clientEnterDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientEnterDG_ = value;
          onChanged();
        } else {
          clientEnterDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public Builder setClientEnterDG(
          com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder builderForValue) {
        if (clientEnterDGBuilder_ == null) {
          clientEnterDG_ = builderForValue.build();
          onChanged();
        } else {
          clientEnterDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public Builder mergeClientEnterDG(com.kys.util.netty.proto.SnatchProto.ClientEnterDG value) {
        if (clientEnterDGBuilder_ == null) {
          if (clientEnterDG_ != null) {
            clientEnterDG_ =
              com.kys.util.netty.proto.SnatchProto.ClientEnterDG.newBuilder(clientEnterDG_).mergeFrom(value).buildPartial();
          } else {
            clientEnterDG_ = value;
          }
          onChanged();
        } else {
          clientEnterDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public Builder clearClientEnterDG() {
        if (clientEnterDGBuilder_ == null) {
          clientEnterDG_ = null;
          onChanged();
        } else {
          clientEnterDG_ = null;
          clientEnterDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder getClientEnterDGBuilder() {
        
        onChanged();
        return getClientEnterDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder getClientEnterDGOrBuilder() {
        if (clientEnterDGBuilder_ != null) {
          return clientEnterDGBuilder_.getMessageOrBuilder();
        } else {
          return clientEnterDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientEnterDG.getDefaultInstance() : clientEnterDG_;
        }
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientEnterDG, com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder> 
          getClientEnterDGFieldBuilder() {
        if (clientEnterDGBuilder_ == null) {
          clientEnterDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientEnterDG, com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder>(
                  getClientEnterDG(),
                  getParentForChildren(),
                  isClean());
          clientEnterDG_ = null;
        }
        return clientEnterDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientDGLottery clientDGLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientDGLottery, com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder> clientDGLotteryBuilder_;
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public boolean hasClientDGLottery() {
        return clientDGLotteryBuilder_ != null || clientDGLottery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDGLottery getClientDGLottery() {
        if (clientDGLotteryBuilder_ == null) {
          return clientDGLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientDGLottery.getDefaultInstance() : clientDGLottery_;
        } else {
          return clientDGLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public Builder setClientDGLottery(com.kys.util.netty.proto.SnatchProto.ClientDGLottery value) {
        if (clientDGLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDGLottery_ = value;
          onChanged();
        } else {
          clientDGLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public Builder setClientDGLottery(
          com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder builderForValue) {
        if (clientDGLotteryBuilder_ == null) {
          clientDGLottery_ = builderForValue.build();
          onChanged();
        } else {
          clientDGLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public Builder mergeClientDGLottery(com.kys.util.netty.proto.SnatchProto.ClientDGLottery value) {
        if (clientDGLotteryBuilder_ == null) {
          if (clientDGLottery_ != null) {
            clientDGLottery_ =
              com.kys.util.netty.proto.SnatchProto.ClientDGLottery.newBuilder(clientDGLottery_).mergeFrom(value).buildPartial();
          } else {
            clientDGLottery_ = value;
          }
          onChanged();
        } else {
          clientDGLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public Builder clearClientDGLottery() {
        if (clientDGLotteryBuilder_ == null) {
          clientDGLottery_ = null;
          onChanged();
        } else {
          clientDGLottery_ = null;
          clientDGLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder getClientDGLotteryBuilder() {
        
        onChanged();
        return getClientDGLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder getClientDGLotteryOrBuilder() {
        if (clientDGLotteryBuilder_ != null) {
          return clientDGLotteryBuilder_.getMessageOrBuilder();
        } else {
          return clientDGLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientDGLottery.getDefaultInstance() : clientDGLottery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientDGLottery, com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder> 
          getClientDGLotteryFieldBuilder() {
        if (clientDGLotteryBuilder_ == null) {
          clientDGLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientDGLottery, com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder>(
                  getClientDGLottery(),
                  getParentForChildren(),
                  isClean());
          clientDGLottery_ = null;
        }
        return clientDGLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientResetLottery clientResetLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientResetLottery, com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder> clientResetLotteryBuilder_;
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public boolean hasClientResetLottery() {
        return clientResetLotteryBuilder_ != null || clientResetLottery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientResetLottery getClientResetLottery() {
        if (clientResetLotteryBuilder_ == null) {
          return clientResetLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientResetLottery.getDefaultInstance() : clientResetLottery_;
        } else {
          return clientResetLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public Builder setClientResetLottery(com.kys.util.netty.proto.SnatchProto.ClientResetLottery value) {
        if (clientResetLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientResetLottery_ = value;
          onChanged();
        } else {
          clientResetLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public Builder setClientResetLottery(
          com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder builderForValue) {
        if (clientResetLotteryBuilder_ == null) {
          clientResetLottery_ = builderForValue.build();
          onChanged();
        } else {
          clientResetLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public Builder mergeClientResetLottery(com.kys.util.netty.proto.SnatchProto.ClientResetLottery value) {
        if (clientResetLotteryBuilder_ == null) {
          if (clientResetLottery_ != null) {
            clientResetLottery_ =
              com.kys.util.netty.proto.SnatchProto.ClientResetLottery.newBuilder(clientResetLottery_).mergeFrom(value).buildPartial();
          } else {
            clientResetLottery_ = value;
          }
          onChanged();
        } else {
          clientResetLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public Builder clearClientResetLottery() {
        if (clientResetLotteryBuilder_ == null) {
          clientResetLottery_ = null;
          onChanged();
        } else {
          clientResetLottery_ = null;
          clientResetLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder getClientResetLotteryBuilder() {
        
        onChanged();
        return getClientResetLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder getClientResetLotteryOrBuilder() {
        if (clientResetLotteryBuilder_ != null) {
          return clientResetLotteryBuilder_.getMessageOrBuilder();
        } else {
          return clientResetLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientResetLottery.getDefaultInstance() : clientResetLottery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientResetLottery, com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder> 
          getClientResetLotteryFieldBuilder() {
        if (clientResetLotteryBuilder_ == null) {
          clientResetLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientResetLottery, com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder>(
                  getClientResetLottery(),
                  getParentForChildren(),
                  isClean());
          clientResetLottery_ = null;
        }
        return clientResetLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientExitDG clientExitDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientExitDG, com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder> clientExitDGBuilder_;
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public boolean hasClientExitDG() {
        return clientExitDGBuilder_ != null || clientExitDG_ != null;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDG getClientExitDG() {
        if (clientExitDGBuilder_ == null) {
          return clientExitDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientExitDG.getDefaultInstance() : clientExitDG_;
        } else {
          return clientExitDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public Builder setClientExitDG(com.kys.util.netty.proto.SnatchProto.ClientExitDG value) {
        if (clientExitDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientExitDG_ = value;
          onChanged();
        } else {
          clientExitDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public Builder setClientExitDG(
          com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder builderForValue) {
        if (clientExitDGBuilder_ == null) {
          clientExitDG_ = builderForValue.build();
          onChanged();
        } else {
          clientExitDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public Builder mergeClientExitDG(com.kys.util.netty.proto.SnatchProto.ClientExitDG value) {
        if (clientExitDGBuilder_ == null) {
          if (clientExitDG_ != null) {
            clientExitDG_ =
              com.kys.util.netty.proto.SnatchProto.ClientExitDG.newBuilder(clientExitDG_).mergeFrom(value).buildPartial();
          } else {
            clientExitDG_ = value;
          }
          onChanged();
        } else {
          clientExitDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public Builder clearClientExitDG() {
        if (clientExitDGBuilder_ == null) {
          clientExitDG_ = null;
          onChanged();
        } else {
          clientExitDG_ = null;
          clientExitDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder getClientExitDGBuilder() {
        
        onChanged();
        return getClientExitDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder getClientExitDGOrBuilder() {
        if (clientExitDGBuilder_ != null) {
          return clientExitDGBuilder_.getMessageOrBuilder();
        } else {
          return clientExitDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientExitDG.getDefaultInstance() : clientExitDG_;
        }
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientExitDG, com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder> 
          getClientExitDGFieldBuilder() {
        if (clientExitDGBuilder_ == null) {
          clientExitDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientExitDG, com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder>(
                  getClientExitDG(),
                  getParentForChildren(),
                  isClean());
          clientExitDG_ = null;
        }
        return clientExitDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientOpenDG clientOpenDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOpenDG, com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder> clientOpenDGBuilder_;
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public boolean hasClientOpenDG() {
        return clientOpenDGBuilder_ != null || clientOpenDG_ != null;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDG getClientOpenDG() {
        if (clientOpenDGBuilder_ == null) {
          return clientOpenDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOpenDG.getDefaultInstance() : clientOpenDG_;
        } else {
          return clientOpenDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public Builder setClientOpenDG(com.kys.util.netty.proto.SnatchProto.ClientOpenDG value) {
        if (clientOpenDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientOpenDG_ = value;
          onChanged();
        } else {
          clientOpenDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public Builder setClientOpenDG(
          com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder builderForValue) {
        if (clientOpenDGBuilder_ == null) {
          clientOpenDG_ = builderForValue.build();
          onChanged();
        } else {
          clientOpenDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public Builder mergeClientOpenDG(com.kys.util.netty.proto.SnatchProto.ClientOpenDG value) {
        if (clientOpenDGBuilder_ == null) {
          if (clientOpenDG_ != null) {
            clientOpenDG_ =
              com.kys.util.netty.proto.SnatchProto.ClientOpenDG.newBuilder(clientOpenDG_).mergeFrom(value).buildPartial();
          } else {
            clientOpenDG_ = value;
          }
          onChanged();
        } else {
          clientOpenDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public Builder clearClientOpenDG() {
        if (clientOpenDGBuilder_ == null) {
          clientOpenDG_ = null;
          onChanged();
        } else {
          clientOpenDG_ = null;
          clientOpenDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder getClientOpenDGBuilder() {
        
        onChanged();
        return getClientOpenDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder getClientOpenDGOrBuilder() {
        if (clientOpenDGBuilder_ != null) {
          return clientOpenDGBuilder_.getMessageOrBuilder();
        } else {
          return clientOpenDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientOpenDG.getDefaultInstance() : clientOpenDG_;
        }
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOpenDG, com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder> 
          getClientOpenDGFieldBuilder() {
        if (clientOpenDGBuilder_ == null) {
          clientOpenDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientOpenDG, com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder>(
                  getClientOpenDG(),
                  getParentForChildren(),
                  isClean());
          clientOpenDG_ = null;
        }
        return clientOpenDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientOpenDD clientOpenDD_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOpenDD, com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder> clientOpenDDBuilder_;
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public boolean hasClientOpenDD() {
        return clientOpenDDBuilder_ != null || clientOpenDD_ != null;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDD getClientOpenDD() {
        if (clientOpenDDBuilder_ == null) {
          return clientOpenDD_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOpenDD.getDefaultInstance() : clientOpenDD_;
        } else {
          return clientOpenDDBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public Builder setClientOpenDD(com.kys.util.netty.proto.SnatchProto.ClientOpenDD value) {
        if (clientOpenDDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientOpenDD_ = value;
          onChanged();
        } else {
          clientOpenDDBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public Builder setClientOpenDD(
          com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder builderForValue) {
        if (clientOpenDDBuilder_ == null) {
          clientOpenDD_ = builderForValue.build();
          onChanged();
        } else {
          clientOpenDDBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public Builder mergeClientOpenDD(com.kys.util.netty.proto.SnatchProto.ClientOpenDD value) {
        if (clientOpenDDBuilder_ == null) {
          if (clientOpenDD_ != null) {
            clientOpenDD_ =
              com.kys.util.netty.proto.SnatchProto.ClientOpenDD.newBuilder(clientOpenDD_).mergeFrom(value).buildPartial();
          } else {
            clientOpenDD_ = value;
          }
          onChanged();
        } else {
          clientOpenDDBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public Builder clearClientOpenDD() {
        if (clientOpenDDBuilder_ == null) {
          clientOpenDD_ = null;
          onChanged();
        } else {
          clientOpenDD_ = null;
          clientOpenDDBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder getClientOpenDDBuilder() {
        
        onChanged();
        return getClientOpenDDFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder getClientOpenDDOrBuilder() {
        if (clientOpenDDBuilder_ != null) {
          return clientOpenDDBuilder_.getMessageOrBuilder();
        } else {
          return clientOpenDD_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientOpenDD.getDefaultInstance() : clientOpenDD_;
        }
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOpenDD, com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder> 
          getClientOpenDDFieldBuilder() {
        if (clientOpenDDBuilder_ == null) {
          clientOpenDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientOpenDD, com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder>(
                  getClientOpenDD(),
                  getParentForChildren(),
                  isClean());
          clientOpenDD_ = null;
        }
        return clientOpenDDBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientDDLottery clientDDLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientDDLottery, com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder> clientDDLotteryBuilder_;
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public boolean hasClientDDLottery() {
        return clientDDLotteryBuilder_ != null || clientDDLottery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDDLottery getClientDDLottery() {
        if (clientDDLotteryBuilder_ == null) {
          return clientDDLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientDDLottery.getDefaultInstance() : clientDDLottery_;
        } else {
          return clientDDLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public Builder setClientDDLottery(com.kys.util.netty.proto.SnatchProto.ClientDDLottery value) {
        if (clientDDLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDDLottery_ = value;
          onChanged();
        } else {
          clientDDLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public Builder setClientDDLottery(
          com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder builderForValue) {
        if (clientDDLotteryBuilder_ == null) {
          clientDDLottery_ = builderForValue.build();
          onChanged();
        } else {
          clientDDLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public Builder mergeClientDDLottery(com.kys.util.netty.proto.SnatchProto.ClientDDLottery value) {
        if (clientDDLotteryBuilder_ == null) {
          if (clientDDLottery_ != null) {
            clientDDLottery_ =
              com.kys.util.netty.proto.SnatchProto.ClientDDLottery.newBuilder(clientDDLottery_).mergeFrom(value).buildPartial();
          } else {
            clientDDLottery_ = value;
          }
          onChanged();
        } else {
          clientDDLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public Builder clearClientDDLottery() {
        if (clientDDLotteryBuilder_ == null) {
          clientDDLottery_ = null;
          onChanged();
        } else {
          clientDDLottery_ = null;
          clientDDLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder getClientDDLotteryBuilder() {
        
        onChanged();
        return getClientDDLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder getClientDDLotteryOrBuilder() {
        if (clientDDLotteryBuilder_ != null) {
          return clientDDLotteryBuilder_.getMessageOrBuilder();
        } else {
          return clientDDLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientDDLottery.getDefaultInstance() : clientDDLottery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientDDLottery, com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder> 
          getClientDDLotteryFieldBuilder() {
        if (clientDDLotteryBuilder_ == null) {
          clientDDLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientDDLottery, com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder>(
                  getClientDDLottery(),
                  getParentForChildren(),
                  isClean());
          clientDDLottery_ = null;
        }
        return clientDDLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientExitDD clientExitDD_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientExitDD, com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder> clientExitDDBuilder_;
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public boolean hasClientExitDD() {
        return clientExitDDBuilder_ != null || clientExitDD_ != null;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDD getClientExitDD() {
        if (clientExitDDBuilder_ == null) {
          return clientExitDD_ == null ? com.kys.util.netty.proto.SnatchProto.ClientExitDD.getDefaultInstance() : clientExitDD_;
        } else {
          return clientExitDDBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public Builder setClientExitDD(com.kys.util.netty.proto.SnatchProto.ClientExitDD value) {
        if (clientExitDDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientExitDD_ = value;
          onChanged();
        } else {
          clientExitDDBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public Builder setClientExitDD(
          com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder builderForValue) {
        if (clientExitDDBuilder_ == null) {
          clientExitDD_ = builderForValue.build();
          onChanged();
        } else {
          clientExitDDBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public Builder mergeClientExitDD(com.kys.util.netty.proto.SnatchProto.ClientExitDD value) {
        if (clientExitDDBuilder_ == null) {
          if (clientExitDD_ != null) {
            clientExitDD_ =
              com.kys.util.netty.proto.SnatchProto.ClientExitDD.newBuilder(clientExitDD_).mergeFrom(value).buildPartial();
          } else {
            clientExitDD_ = value;
          }
          onChanged();
        } else {
          clientExitDDBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public Builder clearClientExitDD() {
        if (clientExitDDBuilder_ == null) {
          clientExitDD_ = null;
          onChanged();
        } else {
          clientExitDD_ = null;
          clientExitDDBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder getClientExitDDBuilder() {
        
        onChanged();
        return getClientExitDDFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder getClientExitDDOrBuilder() {
        if (clientExitDDBuilder_ != null) {
          return clientExitDDBuilder_.getMessageOrBuilder();
        } else {
          return clientExitDD_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientExitDD.getDefaultInstance() : clientExitDD_;
        }
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientExitDD, com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder> 
          getClientExitDDFieldBuilder() {
        if (clientExitDDBuilder_ == null) {
          clientExitDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientExitDD, com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder>(
                  getClientExitDD(),
                  getParentForChildren(),
                  isClean());
          clientExitDD_ = null;
        }
        return clientExitDDBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ClientQueryProp clientQueryProp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientQueryProp, com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder> clientQueryPropBuilder_;
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public boolean hasClientQueryProp() {
        return clientQueryPropBuilder_ != null || clientQueryProp_ != null;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryProp getClientQueryProp() {
        if (clientQueryPropBuilder_ == null) {
          return clientQueryProp_ == null ? com.kys.util.netty.proto.PropProto.ClientQueryProp.getDefaultInstance() : clientQueryProp_;
        } else {
          return clientQueryPropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public Builder setClientQueryProp(com.kys.util.netty.proto.PropProto.ClientQueryProp value) {
        if (clientQueryPropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryProp_ = value;
          onChanged();
        } else {
          clientQueryPropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public Builder setClientQueryProp(
          com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder builderForValue) {
        if (clientQueryPropBuilder_ == null) {
          clientQueryProp_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryPropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public Builder mergeClientQueryProp(com.kys.util.netty.proto.PropProto.ClientQueryProp value) {
        if (clientQueryPropBuilder_ == null) {
          if (clientQueryProp_ != null) {
            clientQueryProp_ =
              com.kys.util.netty.proto.PropProto.ClientQueryProp.newBuilder(clientQueryProp_).mergeFrom(value).buildPartial();
          } else {
            clientQueryProp_ = value;
          }
          onChanged();
        } else {
          clientQueryPropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public Builder clearClientQueryProp() {
        if (clientQueryPropBuilder_ == null) {
          clientQueryProp_ = null;
          onChanged();
        } else {
          clientQueryProp_ = null;
          clientQueryPropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder getClientQueryPropBuilder() {
        
        onChanged();
        return getClientQueryPropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder getClientQueryPropOrBuilder() {
        if (clientQueryPropBuilder_ != null) {
          return clientQueryPropBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryProp_ == null ?
              com.kys.util.netty.proto.PropProto.ClientQueryProp.getDefaultInstance() : clientQueryProp_;
        }
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientQueryProp, com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder> 
          getClientQueryPropFieldBuilder() {
        if (clientQueryPropBuilder_ == null) {
          clientQueryPropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ClientQueryProp, com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder>(
                  getClientQueryProp(),
                  getParentForChildren(),
                  isClean());
          clientQueryProp_ = null;
        }
        return clientQueryPropBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ClientUseProp clientUseProp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientUseProp, com.kys.util.netty.proto.PropProto.ClientUseProp.Builder, com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder> clientUsePropBuilder_;
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public boolean hasClientUseProp() {
        return clientUsePropBuilder_ != null || clientUseProp_ != null;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientUseProp getClientUseProp() {
        if (clientUsePropBuilder_ == null) {
          return clientUseProp_ == null ? com.kys.util.netty.proto.PropProto.ClientUseProp.getDefaultInstance() : clientUseProp_;
        } else {
          return clientUsePropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public Builder setClientUseProp(com.kys.util.netty.proto.PropProto.ClientUseProp value) {
        if (clientUsePropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientUseProp_ = value;
          onChanged();
        } else {
          clientUsePropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public Builder setClientUseProp(
          com.kys.util.netty.proto.PropProto.ClientUseProp.Builder builderForValue) {
        if (clientUsePropBuilder_ == null) {
          clientUseProp_ = builderForValue.build();
          onChanged();
        } else {
          clientUsePropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public Builder mergeClientUseProp(com.kys.util.netty.proto.PropProto.ClientUseProp value) {
        if (clientUsePropBuilder_ == null) {
          if (clientUseProp_ != null) {
            clientUseProp_ =
              com.kys.util.netty.proto.PropProto.ClientUseProp.newBuilder(clientUseProp_).mergeFrom(value).buildPartial();
          } else {
            clientUseProp_ = value;
          }
          onChanged();
        } else {
          clientUsePropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public Builder clearClientUseProp() {
        if (clientUsePropBuilder_ == null) {
          clientUseProp_ = null;
          onChanged();
        } else {
          clientUseProp_ = null;
          clientUsePropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientUseProp.Builder getClientUsePropBuilder() {
        
        onChanged();
        return getClientUsePropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder getClientUsePropOrBuilder() {
        if (clientUsePropBuilder_ != null) {
          return clientUsePropBuilder_.getMessageOrBuilder();
        } else {
          return clientUseProp_ == null ?
              com.kys.util.netty.proto.PropProto.ClientUseProp.getDefaultInstance() : clientUseProp_;
        }
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientUseProp, com.kys.util.netty.proto.PropProto.ClientUseProp.Builder, com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder> 
          getClientUsePropFieldBuilder() {
        if (clientUsePropBuilder_ == null) {
          clientUsePropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ClientUseProp, com.kys.util.netty.proto.PropProto.ClientUseProp.Builder, com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder>(
                  getClientUseProp(),
                  getParentForChildren(),
                  isClean());
          clientUseProp_ = null;
        }
        return clientUsePropBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ClientQueryPropCount clientQueryPropCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientQueryPropCount, com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder> clientQueryPropCountBuilder_;
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public boolean hasClientQueryPropCount() {
        return clientQueryPropCountBuilder_ != null || clientQueryPropCount_ != null;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryPropCount getClientQueryPropCount() {
        if (clientQueryPropCountBuilder_ == null) {
          return clientQueryPropCount_ == null ? com.kys.util.netty.proto.PropProto.ClientQueryPropCount.getDefaultInstance() : clientQueryPropCount_;
        } else {
          return clientQueryPropCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public Builder setClientQueryPropCount(com.kys.util.netty.proto.PropProto.ClientQueryPropCount value) {
        if (clientQueryPropCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryPropCount_ = value;
          onChanged();
        } else {
          clientQueryPropCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public Builder setClientQueryPropCount(
          com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder builderForValue) {
        if (clientQueryPropCountBuilder_ == null) {
          clientQueryPropCount_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryPropCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public Builder mergeClientQueryPropCount(com.kys.util.netty.proto.PropProto.ClientQueryPropCount value) {
        if (clientQueryPropCountBuilder_ == null) {
          if (clientQueryPropCount_ != null) {
            clientQueryPropCount_ =
              com.kys.util.netty.proto.PropProto.ClientQueryPropCount.newBuilder(clientQueryPropCount_).mergeFrom(value).buildPartial();
          } else {
            clientQueryPropCount_ = value;
          }
          onChanged();
        } else {
          clientQueryPropCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public Builder clearClientQueryPropCount() {
        if (clientQueryPropCountBuilder_ == null) {
          clientQueryPropCount_ = null;
          onChanged();
        } else {
          clientQueryPropCount_ = null;
          clientQueryPropCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder getClientQueryPropCountBuilder() {
        
        onChanged();
        return getClientQueryPropCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder getClientQueryPropCountOrBuilder() {
        if (clientQueryPropCountBuilder_ != null) {
          return clientQueryPropCountBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryPropCount_ == null ?
              com.kys.util.netty.proto.PropProto.ClientQueryPropCount.getDefaultInstance() : clientQueryPropCount_;
        }
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientQueryPropCount, com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder> 
          getClientQueryPropCountFieldBuilder() {
        if (clientQueryPropCountBuilder_ == null) {
          clientQueryPropCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ClientQueryPropCount, com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder>(
                  getClientQueryPropCount(),
                  getParentForChildren(),
                  isClean());
          clientQueryPropCount_ = null;
        }
        return clientQueryPropCountBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientSignInfo clientSignInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientSignInfo, com.kys.util.netty.proto.SignProto.ClientSignInfo.Builder, com.kys.util.netty.proto.SignProto.ClientSignInfoOrBuilder> clientSignInfoBuilder_;
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      public boolean hasClientSignInfo() {
        return clientSignInfoBuilder_ != null || clientSignInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignInfo getClientSignInfo() {
        if (clientSignInfoBuilder_ == null) {
          return clientSignInfo_ == null ? com.kys.util.netty.proto.SignProto.ClientSignInfo.getDefaultInstance() : clientSignInfo_;
        } else {
          return clientSignInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      public Builder setClientSignInfo(com.kys.util.netty.proto.SignProto.ClientSignInfo value) {
        if (clientSignInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSignInfo_ = value;
          onChanged();
        } else {
          clientSignInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      public Builder setClientSignInfo(
          com.kys.util.netty.proto.SignProto.ClientSignInfo.Builder builderForValue) {
        if (clientSignInfoBuilder_ == null) {
          clientSignInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientSignInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      public Builder mergeClientSignInfo(com.kys.util.netty.proto.SignProto.ClientSignInfo value) {
        if (clientSignInfoBuilder_ == null) {
          if (clientSignInfo_ != null) {
            clientSignInfo_ =
              com.kys.util.netty.proto.SignProto.ClientSignInfo.newBuilder(clientSignInfo_).mergeFrom(value).buildPartial();
          } else {
            clientSignInfo_ = value;
          }
          onChanged();
        } else {
          clientSignInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      public Builder clearClientSignInfo() {
        if (clientSignInfoBuilder_ == null) {
          clientSignInfo_ = null;
          onChanged();
        } else {
          clientSignInfo_ = null;
          clientSignInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignInfo.Builder getClientSignInfoBuilder() {
        
        onChanged();
        return getClientSignInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignInfoOrBuilder getClientSignInfoOrBuilder() {
        if (clientSignInfoBuilder_ != null) {
          return clientSignInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientSignInfo_ == null ?
              com.kys.util.netty.proto.SignProto.ClientSignInfo.getDefaultInstance() : clientSignInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端请求签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignInfo clientSignInfo = 1101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientSignInfo, com.kys.util.netty.proto.SignProto.ClientSignInfo.Builder, com.kys.util.netty.proto.SignProto.ClientSignInfoOrBuilder> 
          getClientSignInfoFieldBuilder() {
        if (clientSignInfoBuilder_ == null) {
          clientSignInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientSignInfo, com.kys.util.netty.proto.SignProto.ClientSignInfo.Builder, com.kys.util.netty.proto.SignProto.ClientSignInfoOrBuilder>(
                  getClientSignInfo(),
                  getParentForChildren(),
                  isClean());
          clientSignInfo_ = null;
        }
        return clientSignInfoBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientSignAward clientSignAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientSignAward, com.kys.util.netty.proto.SignProto.ClientSignAward.Builder, com.kys.util.netty.proto.SignProto.ClientSignAwardOrBuilder> clientSignAwardBuilder_;
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      public boolean hasClientSignAward() {
        return clientSignAwardBuilder_ != null || clientSignAward_ != null;
      }
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignAward getClientSignAward() {
        if (clientSignAwardBuilder_ == null) {
          return clientSignAward_ == null ? com.kys.util.netty.proto.SignProto.ClientSignAward.getDefaultInstance() : clientSignAward_;
        } else {
          return clientSignAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      public Builder setClientSignAward(com.kys.util.netty.proto.SignProto.ClientSignAward value) {
        if (clientSignAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSignAward_ = value;
          onChanged();
        } else {
          clientSignAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      public Builder setClientSignAward(
          com.kys.util.netty.proto.SignProto.ClientSignAward.Builder builderForValue) {
        if (clientSignAwardBuilder_ == null) {
          clientSignAward_ = builderForValue.build();
          onChanged();
        } else {
          clientSignAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      public Builder mergeClientSignAward(com.kys.util.netty.proto.SignProto.ClientSignAward value) {
        if (clientSignAwardBuilder_ == null) {
          if (clientSignAward_ != null) {
            clientSignAward_ =
              com.kys.util.netty.proto.SignProto.ClientSignAward.newBuilder(clientSignAward_).mergeFrom(value).buildPartial();
          } else {
            clientSignAward_ = value;
          }
          onChanged();
        } else {
          clientSignAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      public Builder clearClientSignAward() {
        if (clientSignAwardBuilder_ == null) {
          clientSignAward_ = null;
          onChanged();
        } else {
          clientSignAward_ = null;
          clientSignAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignAward.Builder getClientSignAwardBuilder() {
        
        onChanged();
        return getClientSignAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignAwardOrBuilder getClientSignAwardOrBuilder() {
        if (clientSignAwardBuilder_ != null) {
          return clientSignAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientSignAward_ == null ?
              com.kys.util.netty.proto.SignProto.ClientSignAward.getDefaultInstance() : clientSignAward_;
        }
      }
      /**
       * <pre>
       ** 客户端请求签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignAward clientSignAward = 1102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientSignAward, com.kys.util.netty.proto.SignProto.ClientSignAward.Builder, com.kys.util.netty.proto.SignProto.ClientSignAwardOrBuilder> 
          getClientSignAwardFieldBuilder() {
        if (clientSignAwardBuilder_ == null) {
          clientSignAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientSignAward, com.kys.util.netty.proto.SignProto.ClientSignAward.Builder, com.kys.util.netty.proto.SignProto.ClientSignAwardOrBuilder>(
                  getClientSignAward(),
                  getParentForChildren(),
                  isClean());
          clientSignAward_ = null;
        }
        return clientSignAwardBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientSignState clientSignState_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientSignState, com.kys.util.netty.proto.SignProto.ClientSignState.Builder, com.kys.util.netty.proto.SignProto.ClientSignStateOrBuilder> clientSignStateBuilder_;
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      public boolean hasClientSignState() {
        return clientSignStateBuilder_ != null || clientSignState_ != null;
      }
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignState getClientSignState() {
        if (clientSignStateBuilder_ == null) {
          return clientSignState_ == null ? com.kys.util.netty.proto.SignProto.ClientSignState.getDefaultInstance() : clientSignState_;
        } else {
          return clientSignStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      public Builder setClientSignState(com.kys.util.netty.proto.SignProto.ClientSignState value) {
        if (clientSignStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSignState_ = value;
          onChanged();
        } else {
          clientSignStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      public Builder setClientSignState(
          com.kys.util.netty.proto.SignProto.ClientSignState.Builder builderForValue) {
        if (clientSignStateBuilder_ == null) {
          clientSignState_ = builderForValue.build();
          onChanged();
        } else {
          clientSignStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      public Builder mergeClientSignState(com.kys.util.netty.proto.SignProto.ClientSignState value) {
        if (clientSignStateBuilder_ == null) {
          if (clientSignState_ != null) {
            clientSignState_ =
              com.kys.util.netty.proto.SignProto.ClientSignState.newBuilder(clientSignState_).mergeFrom(value).buildPartial();
          } else {
            clientSignState_ = value;
          }
          onChanged();
        } else {
          clientSignStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      public Builder clearClientSignState() {
        if (clientSignStateBuilder_ == null) {
          clientSignState_ = null;
          onChanged();
        } else {
          clientSignState_ = null;
          clientSignStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignState.Builder getClientSignStateBuilder() {
        
        onChanged();
        return getClientSignStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientSignStateOrBuilder getClientSignStateOrBuilder() {
        if (clientSignStateBuilder_ != null) {
          return clientSignStateBuilder_.getMessageOrBuilder();
        } else {
          return clientSignState_ == null ?
              com.kys.util.netty.proto.SignProto.ClientSignState.getDefaultInstance() : clientSignState_;
        }
      }
      /**
       * <pre>
       ** 客户端请求签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignState clientSignState = 1103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientSignState, com.kys.util.netty.proto.SignProto.ClientSignState.Builder, com.kys.util.netty.proto.SignProto.ClientSignStateOrBuilder> 
          getClientSignStateFieldBuilder() {
        if (clientSignStateBuilder_ == null) {
          clientSignStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientSignState, com.kys.util.netty.proto.SignProto.ClientSignState.Builder, com.kys.util.netty.proto.SignProto.ClientSignStateOrBuilder>(
                  getClientSignState(),
                  getParentForChildren(),
                  isClean());
          clientSignState_ = null;
        }
        return clientSignStateBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientLTLottery clientLTLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientLTLottery, com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder, com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder> clientLTLotteryBuilder_;
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public boolean hasClientLTLottery() {
        return clientLTLotteryBuilder_ != null || clientLTLottery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientLTLottery getClientLTLottery() {
        if (clientLTLotteryBuilder_ == null) {
          return clientLTLottery_ == null ? com.kys.util.netty.proto.SignProto.ClientLTLottery.getDefaultInstance() : clientLTLottery_;
        } else {
          return clientLTLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public Builder setClientLTLottery(com.kys.util.netty.proto.SignProto.ClientLTLottery value) {
        if (clientLTLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientLTLottery_ = value;
          onChanged();
        } else {
          clientLTLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public Builder setClientLTLottery(
          com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder builderForValue) {
        if (clientLTLotteryBuilder_ == null) {
          clientLTLottery_ = builderForValue.build();
          onChanged();
        } else {
          clientLTLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public Builder mergeClientLTLottery(com.kys.util.netty.proto.SignProto.ClientLTLottery value) {
        if (clientLTLotteryBuilder_ == null) {
          if (clientLTLottery_ != null) {
            clientLTLottery_ =
              com.kys.util.netty.proto.SignProto.ClientLTLottery.newBuilder(clientLTLottery_).mergeFrom(value).buildPartial();
          } else {
            clientLTLottery_ = value;
          }
          onChanged();
        } else {
          clientLTLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public Builder clearClientLTLottery() {
        if (clientLTLotteryBuilder_ == null) {
          clientLTLottery_ = null;
          onChanged();
        } else {
          clientLTLottery_ = null;
          clientLTLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder getClientLTLotteryBuilder() {
        
        onChanged();
        return getClientLTLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder getClientLTLotteryOrBuilder() {
        if (clientLTLotteryBuilder_ != null) {
          return clientLTLotteryBuilder_.getMessageOrBuilder();
        } else {
          return clientLTLottery_ == null ?
              com.kys.util.netty.proto.SignProto.ClientLTLottery.getDefaultInstance() : clientLTLottery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientLTLottery, com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder, com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder> 
          getClientLTLotteryFieldBuilder() {
        if (clientLTLotteryBuilder_ == null) {
          clientLTLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientLTLottery, com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder, com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder>(
                  getClientLTLottery(),
                  getParentForChildren(),
                  isClean());
          clientLTLottery_ = null;
        }
        return clientLTLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientGetTSReward clientGetTSReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetTSReward, com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder> clientGetTSRewardBuilder_;
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public boolean hasClientGetTSReward() {
        return clientGetTSRewardBuilder_ != null || clientGetTSReward_ != null;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetTSReward getClientGetTSReward() {
        if (clientGetTSRewardBuilder_ == null) {
          return clientGetTSReward_ == null ? com.kys.util.netty.proto.SignProto.ClientGetTSReward.getDefaultInstance() : clientGetTSReward_;
        } else {
          return clientGetTSRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public Builder setClientGetTSReward(com.kys.util.netty.proto.SignProto.ClientGetTSReward value) {
        if (clientGetTSRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetTSReward_ = value;
          onChanged();
        } else {
          clientGetTSRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public Builder setClientGetTSReward(
          com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder builderForValue) {
        if (clientGetTSRewardBuilder_ == null) {
          clientGetTSReward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetTSRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public Builder mergeClientGetTSReward(com.kys.util.netty.proto.SignProto.ClientGetTSReward value) {
        if (clientGetTSRewardBuilder_ == null) {
          if (clientGetTSReward_ != null) {
            clientGetTSReward_ =
              com.kys.util.netty.proto.SignProto.ClientGetTSReward.newBuilder(clientGetTSReward_).mergeFrom(value).buildPartial();
          } else {
            clientGetTSReward_ = value;
          }
          onChanged();
        } else {
          clientGetTSRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public Builder clearClientGetTSReward() {
        if (clientGetTSRewardBuilder_ == null) {
          clientGetTSReward_ = null;
          onChanged();
        } else {
          clientGetTSReward_ = null;
          clientGetTSRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder getClientGetTSRewardBuilder() {
        
        onChanged();
        return getClientGetTSRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder getClientGetTSRewardOrBuilder() {
        if (clientGetTSRewardBuilder_ != null) {
          return clientGetTSRewardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetTSReward_ == null ?
              com.kys.util.netty.proto.SignProto.ClientGetTSReward.getDefaultInstance() : clientGetTSReward_;
        }
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetTSReward, com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder> 
          getClientGetTSRewardFieldBuilder() {
        if (clientGetTSRewardBuilder_ == null) {
          clientGetTSRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientGetTSReward, com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder>(
                  getClientGetTSReward(),
                  getParentForChildren(),
                  isClean());
          clientGetTSReward_ = null;
        }
        return clientGetTSRewardBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientGetLuckInfo clientGetLuckInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetLuckInfo, com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder> clientGetLuckInfoBuilder_;
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public boolean hasClientGetLuckInfo() {
        return clientGetLuckInfoBuilder_ != null || clientGetLuckInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetLuckInfo getClientGetLuckInfo() {
        if (clientGetLuckInfoBuilder_ == null) {
          return clientGetLuckInfo_ == null ? com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.getDefaultInstance() : clientGetLuckInfo_;
        } else {
          return clientGetLuckInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public Builder setClientGetLuckInfo(com.kys.util.netty.proto.SignProto.ClientGetLuckInfo value) {
        if (clientGetLuckInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetLuckInfo_ = value;
          onChanged();
        } else {
          clientGetLuckInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public Builder setClientGetLuckInfo(
          com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder builderForValue) {
        if (clientGetLuckInfoBuilder_ == null) {
          clientGetLuckInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetLuckInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public Builder mergeClientGetLuckInfo(com.kys.util.netty.proto.SignProto.ClientGetLuckInfo value) {
        if (clientGetLuckInfoBuilder_ == null) {
          if (clientGetLuckInfo_ != null) {
            clientGetLuckInfo_ =
              com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.newBuilder(clientGetLuckInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetLuckInfo_ = value;
          }
          onChanged();
        } else {
          clientGetLuckInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public Builder clearClientGetLuckInfo() {
        if (clientGetLuckInfoBuilder_ == null) {
          clientGetLuckInfo_ = null;
          onChanged();
        } else {
          clientGetLuckInfo_ = null;
          clientGetLuckInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder getClientGetLuckInfoBuilder() {
        
        onChanged();
        return getClientGetLuckInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder getClientGetLuckInfoOrBuilder() {
        if (clientGetLuckInfoBuilder_ != null) {
          return clientGetLuckInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetLuckInfo_ == null ?
              com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.getDefaultInstance() : clientGetLuckInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetLuckInfo, com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder> 
          getClientGetLuckInfoFieldBuilder() {
        if (clientGetLuckInfoBuilder_ == null) {
          clientGetLuckInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientGetLuckInfo, com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder>(
                  getClientGetLuckInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetLuckInfo_ = null;
        }
        return clientGetLuckInfoBuilder_;
      }

      private com.kys.util.netty.proto.VipProto.ClientGetVip clientGetVip_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ClientGetVip, com.kys.util.netty.proto.VipProto.ClientGetVip.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipOrBuilder> clientGetVipBuilder_;
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      public boolean hasClientGetVip() {
        return clientGetVipBuilder_ != null || clientGetVip_ != null;
      }
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVip getClientGetVip() {
        if (clientGetVipBuilder_ == null) {
          return clientGetVip_ == null ? com.kys.util.netty.proto.VipProto.ClientGetVip.getDefaultInstance() : clientGetVip_;
        } else {
          return clientGetVipBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      public Builder setClientGetVip(com.kys.util.netty.proto.VipProto.ClientGetVip value) {
        if (clientGetVipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetVip_ = value;
          onChanged();
        } else {
          clientGetVipBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      public Builder setClientGetVip(
          com.kys.util.netty.proto.VipProto.ClientGetVip.Builder builderForValue) {
        if (clientGetVipBuilder_ == null) {
          clientGetVip_ = builderForValue.build();
          onChanged();
        } else {
          clientGetVipBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      public Builder mergeClientGetVip(com.kys.util.netty.proto.VipProto.ClientGetVip value) {
        if (clientGetVipBuilder_ == null) {
          if (clientGetVip_ != null) {
            clientGetVip_ =
              com.kys.util.netty.proto.VipProto.ClientGetVip.newBuilder(clientGetVip_).mergeFrom(value).buildPartial();
          } else {
            clientGetVip_ = value;
          }
          onChanged();
        } else {
          clientGetVipBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      public Builder clearClientGetVip() {
        if (clientGetVipBuilder_ == null) {
          clientGetVip_ = null;
          onChanged();
        } else {
          clientGetVip_ = null;
          clientGetVipBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVip.Builder getClientGetVipBuilder() {
        
        onChanged();
        return getClientGetVipFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVipOrBuilder getClientGetVipOrBuilder() {
        if (clientGetVipBuilder_ != null) {
          return clientGetVipBuilder_.getMessageOrBuilder();
        } else {
          return clientGetVip_ == null ?
              com.kys.util.netty.proto.VipProto.ClientGetVip.getDefaultInstance() : clientGetVip_;
        }
      }
      /**
       * <pre>
       ** 获取新版VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVip clientGetVip = 1203;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ClientGetVip, com.kys.util.netty.proto.VipProto.ClientGetVip.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipOrBuilder> 
          getClientGetVipFieldBuilder() {
        if (clientGetVipBuilder_ == null) {
          clientGetVipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.VipProto.ClientGetVip, com.kys.util.netty.proto.VipProto.ClientGetVip.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipOrBuilder>(
                  getClientGetVip(),
                  getParentForChildren(),
                  isClean());
          clientGetVip_ = null;
        }
        return clientGetVipBuilder_;
      }

      private com.kys.util.netty.proto.VipProto.ClientGetDayGift clientGetDayGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ClientGetDayGift, com.kys.util.netty.proto.VipProto.ClientGetDayGift.Builder, com.kys.util.netty.proto.VipProto.ClientGetDayGiftOrBuilder> clientGetDayGiftBuilder_;
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      public boolean hasClientGetDayGift() {
        return clientGetDayGiftBuilder_ != null || clientGetDayGift_ != null;
      }
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetDayGift getClientGetDayGift() {
        if (clientGetDayGiftBuilder_ == null) {
          return clientGetDayGift_ == null ? com.kys.util.netty.proto.VipProto.ClientGetDayGift.getDefaultInstance() : clientGetDayGift_;
        } else {
          return clientGetDayGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      public Builder setClientGetDayGift(com.kys.util.netty.proto.VipProto.ClientGetDayGift value) {
        if (clientGetDayGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetDayGift_ = value;
          onChanged();
        } else {
          clientGetDayGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      public Builder setClientGetDayGift(
          com.kys.util.netty.proto.VipProto.ClientGetDayGift.Builder builderForValue) {
        if (clientGetDayGiftBuilder_ == null) {
          clientGetDayGift_ = builderForValue.build();
          onChanged();
        } else {
          clientGetDayGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      public Builder mergeClientGetDayGift(com.kys.util.netty.proto.VipProto.ClientGetDayGift value) {
        if (clientGetDayGiftBuilder_ == null) {
          if (clientGetDayGift_ != null) {
            clientGetDayGift_ =
              com.kys.util.netty.proto.VipProto.ClientGetDayGift.newBuilder(clientGetDayGift_).mergeFrom(value).buildPartial();
          } else {
            clientGetDayGift_ = value;
          }
          onChanged();
        } else {
          clientGetDayGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      public Builder clearClientGetDayGift() {
        if (clientGetDayGiftBuilder_ == null) {
          clientGetDayGift_ = null;
          onChanged();
        } else {
          clientGetDayGift_ = null;
          clientGetDayGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetDayGift.Builder getClientGetDayGiftBuilder() {
        
        onChanged();
        return getClientGetDayGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetDayGiftOrBuilder getClientGetDayGiftOrBuilder() {
        if (clientGetDayGiftBuilder_ != null) {
          return clientGetDayGiftBuilder_.getMessageOrBuilder();
        } else {
          return clientGetDayGift_ == null ?
              com.kys.util.netty.proto.VipProto.ClientGetDayGift.getDefaultInstance() : clientGetDayGift_;
        }
      }
      /**
       * <pre>
       ** 获取新版VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDayGift clientGetDayGift = 1204;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ClientGetDayGift, com.kys.util.netty.proto.VipProto.ClientGetDayGift.Builder, com.kys.util.netty.proto.VipProto.ClientGetDayGiftOrBuilder> 
          getClientGetDayGiftFieldBuilder() {
        if (clientGetDayGiftBuilder_ == null) {
          clientGetDayGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.VipProto.ClientGetDayGift, com.kys.util.netty.proto.VipProto.ClientGetDayGift.Builder, com.kys.util.netty.proto.VipProto.ClientGetDayGiftOrBuilder>(
                  getClientGetDayGift(),
                  getParentForChildren(),
                  isClean());
          clientGetDayGift_ = null;
        }
        return clientGetDayGiftBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ClientEnterSleeve clientEnterSleeve_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientEnterSleeve, com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientEnterSleeveOrBuilder> clientEnterSleeveBuilder_;
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      public boolean hasClientEnterSleeve() {
        return clientEnterSleeveBuilder_ != null || clientEnterSleeve_ != null;
      }
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientEnterSleeve getClientEnterSleeve() {
        if (clientEnterSleeveBuilder_ == null) {
          return clientEnterSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.getDefaultInstance() : clientEnterSleeve_;
        } else {
          return clientEnterSleeveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      public Builder setClientEnterSleeve(com.kys.util.netty.proto.LittleProto.ClientEnterSleeve value) {
        if (clientEnterSleeveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientEnterSleeve_ = value;
          onChanged();
        } else {
          clientEnterSleeveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      public Builder setClientEnterSleeve(
          com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.Builder builderForValue) {
        if (clientEnterSleeveBuilder_ == null) {
          clientEnterSleeve_ = builderForValue.build();
          onChanged();
        } else {
          clientEnterSleeveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      public Builder mergeClientEnterSleeve(com.kys.util.netty.proto.LittleProto.ClientEnterSleeve value) {
        if (clientEnterSleeveBuilder_ == null) {
          if (clientEnterSleeve_ != null) {
            clientEnterSleeve_ =
              com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.newBuilder(clientEnterSleeve_).mergeFrom(value).buildPartial();
          } else {
            clientEnterSleeve_ = value;
          }
          onChanged();
        } else {
          clientEnterSleeveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      public Builder clearClientEnterSleeve() {
        if (clientEnterSleeveBuilder_ == null) {
          clientEnterSleeve_ = null;
          onChanged();
        } else {
          clientEnterSleeve_ = null;
          clientEnterSleeveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.Builder getClientEnterSleeveBuilder() {
        
        onChanged();
        return getClientEnterSleeveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientEnterSleeveOrBuilder getClientEnterSleeveOrBuilder() {
        if (clientEnterSleeveBuilder_ != null) {
          return clientEnterSleeveBuilder_.getMessageOrBuilder();
        } else {
          return clientEnterSleeve_ == null ?
              com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.getDefaultInstance() : clientEnterSleeve_;
        }
      }
      /**
       * <pre>
       ** 客户端请求进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterSleeve clientEnterSleeve = 1300;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientEnterSleeve, com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientEnterSleeveOrBuilder> 
          getClientEnterSleeveFieldBuilder() {
        if (clientEnterSleeveBuilder_ == null) {
          clientEnterSleeveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ClientEnterSleeve, com.kys.util.netty.proto.LittleProto.ClientEnterSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientEnterSleeveOrBuilder>(
                  getClientEnterSleeve(),
                  getParentForChildren(),
                  isClean());
          clientEnterSleeve_ = null;
        }
        return clientEnterSleeveBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ClientSleeveSheep clientSleeveSheep_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientSleeveSheep, com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ClientSleeveSheepOrBuilder> clientSleeveSheepBuilder_;
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      public boolean hasClientSleeveSheep() {
        return clientSleeveSheepBuilder_ != null || clientSleeveSheep_ != null;
      }
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientSleeveSheep getClientSleeveSheep() {
        if (clientSleeveSheepBuilder_ == null) {
          return clientSleeveSheep_ == null ? com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.getDefaultInstance() : clientSleeveSheep_;
        } else {
          return clientSleeveSheepBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      public Builder setClientSleeveSheep(com.kys.util.netty.proto.LittleProto.ClientSleeveSheep value) {
        if (clientSleeveSheepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSleeveSheep_ = value;
          onChanged();
        } else {
          clientSleeveSheepBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      public Builder setClientSleeveSheep(
          com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.Builder builderForValue) {
        if (clientSleeveSheepBuilder_ == null) {
          clientSleeveSheep_ = builderForValue.build();
          onChanged();
        } else {
          clientSleeveSheepBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      public Builder mergeClientSleeveSheep(com.kys.util.netty.proto.LittleProto.ClientSleeveSheep value) {
        if (clientSleeveSheepBuilder_ == null) {
          if (clientSleeveSheep_ != null) {
            clientSleeveSheep_ =
              com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.newBuilder(clientSleeveSheep_).mergeFrom(value).buildPartial();
          } else {
            clientSleeveSheep_ = value;
          }
          onChanged();
        } else {
          clientSleeveSheepBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      public Builder clearClientSleeveSheep() {
        if (clientSleeveSheepBuilder_ == null) {
          clientSleeveSheep_ = null;
          onChanged();
        } else {
          clientSleeveSheep_ = null;
          clientSleeveSheepBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.Builder getClientSleeveSheepBuilder() {
        
        onChanged();
        return getClientSleeveSheepFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientSleeveSheepOrBuilder getClientSleeveSheepOrBuilder() {
        if (clientSleeveSheepBuilder_ != null) {
          return clientSleeveSheepBuilder_.getMessageOrBuilder();
        } else {
          return clientSleeveSheep_ == null ?
              com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.getDefaultInstance() : clientSleeveSheep_;
        }
      }
      /**
       * <pre>
       ** 客户端套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSleeveSheep clientSleeveSheep = 1301;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientSleeveSheep, com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ClientSleeveSheepOrBuilder> 
          getClientSleeveSheepFieldBuilder() {
        if (clientSleeveSheepBuilder_ == null) {
          clientSleeveSheepBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ClientSleeveSheep, com.kys.util.netty.proto.LittleProto.ClientSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ClientSleeveSheepOrBuilder>(
                  getClientSleeveSheep(),
                  getParentForChildren(),
                  isClean());
          clientSleeveSheep_ = null;
        }
        return clientSleeveSheepBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin clientQueryPlayerCoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin, com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.Builder, com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoinOrBuilder> clientQueryPlayerCoinBuilder_;
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      public boolean hasClientQueryPlayerCoin() {
        return clientQueryPlayerCoinBuilder_ != null || clientQueryPlayerCoin_ != null;
      }
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin getClientQueryPlayerCoin() {
        if (clientQueryPlayerCoinBuilder_ == null) {
          return clientQueryPlayerCoin_ == null ? com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.getDefaultInstance() : clientQueryPlayerCoin_;
        } else {
          return clientQueryPlayerCoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      public Builder setClientQueryPlayerCoin(com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin value) {
        if (clientQueryPlayerCoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryPlayerCoin_ = value;
          onChanged();
        } else {
          clientQueryPlayerCoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      public Builder setClientQueryPlayerCoin(
          com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.Builder builderForValue) {
        if (clientQueryPlayerCoinBuilder_ == null) {
          clientQueryPlayerCoin_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryPlayerCoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      public Builder mergeClientQueryPlayerCoin(com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin value) {
        if (clientQueryPlayerCoinBuilder_ == null) {
          if (clientQueryPlayerCoin_ != null) {
            clientQueryPlayerCoin_ =
              com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.newBuilder(clientQueryPlayerCoin_).mergeFrom(value).buildPartial();
          } else {
            clientQueryPlayerCoin_ = value;
          }
          onChanged();
        } else {
          clientQueryPlayerCoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      public Builder clearClientQueryPlayerCoin() {
        if (clientQueryPlayerCoinBuilder_ == null) {
          clientQueryPlayerCoin_ = null;
          onChanged();
        } else {
          clientQueryPlayerCoin_ = null;
          clientQueryPlayerCoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.Builder getClientQueryPlayerCoinBuilder() {
        
        onChanged();
        return getClientQueryPlayerCoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoinOrBuilder getClientQueryPlayerCoinOrBuilder() {
        if (clientQueryPlayerCoinBuilder_ != null) {
          return clientQueryPlayerCoinBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryPlayerCoin_ == null ?
              com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.getDefaultInstance() : clientQueryPlayerCoin_;
        }
      }
      /**
       * <pre>
       ** 客户端请求查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPlayerCoin clientQueryPlayerCoin = 1302;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin, com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.Builder, com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoinOrBuilder> 
          getClientQueryPlayerCoinFieldBuilder() {
        if (clientQueryPlayerCoinBuilder_ == null) {
          clientQueryPlayerCoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin, com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoin.Builder, com.kys.util.netty.proto.LittleProto.ClientQueryPlayerCoinOrBuilder>(
                  getClientQueryPlayerCoin(),
                  getParentForChildren(),
                  isClean());
          clientQueryPlayerCoin_ = null;
        }
        return clientQueryPlayerCoinBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ClientExitSleeve clientExitSleeve_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientExitSleeve, com.kys.util.netty.proto.LittleProto.ClientExitSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientExitSleeveOrBuilder> clientExitSleeveBuilder_;
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      public boolean hasClientExitSleeve() {
        return clientExitSleeveBuilder_ != null || clientExitSleeve_ != null;
      }
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientExitSleeve getClientExitSleeve() {
        if (clientExitSleeveBuilder_ == null) {
          return clientExitSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ClientExitSleeve.getDefaultInstance() : clientExitSleeve_;
        } else {
          return clientExitSleeveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      public Builder setClientExitSleeve(com.kys.util.netty.proto.LittleProto.ClientExitSleeve value) {
        if (clientExitSleeveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientExitSleeve_ = value;
          onChanged();
        } else {
          clientExitSleeveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      public Builder setClientExitSleeve(
          com.kys.util.netty.proto.LittleProto.ClientExitSleeve.Builder builderForValue) {
        if (clientExitSleeveBuilder_ == null) {
          clientExitSleeve_ = builderForValue.build();
          onChanged();
        } else {
          clientExitSleeveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      public Builder mergeClientExitSleeve(com.kys.util.netty.proto.LittleProto.ClientExitSleeve value) {
        if (clientExitSleeveBuilder_ == null) {
          if (clientExitSleeve_ != null) {
            clientExitSleeve_ =
              com.kys.util.netty.proto.LittleProto.ClientExitSleeve.newBuilder(clientExitSleeve_).mergeFrom(value).buildPartial();
          } else {
            clientExitSleeve_ = value;
          }
          onChanged();
        } else {
          clientExitSleeveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      public Builder clearClientExitSleeve() {
        if (clientExitSleeveBuilder_ == null) {
          clientExitSleeve_ = null;
          onChanged();
        } else {
          clientExitSleeve_ = null;
          clientExitSleeveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientExitSleeve.Builder getClientExitSleeveBuilder() {
        
        onChanged();
        return getClientExitSleeveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientExitSleeveOrBuilder getClientExitSleeveOrBuilder() {
        if (clientExitSleeveBuilder_ != null) {
          return clientExitSleeveBuilder_.getMessageOrBuilder();
        } else {
          return clientExitSleeve_ == null ?
              com.kys.util.netty.proto.LittleProto.ClientExitSleeve.getDefaultInstance() : clientExitSleeve_;
        }
      }
      /**
       * <pre>
       ** 客户端请求退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitSleeve clientExitSleeve = 1303;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientExitSleeve, com.kys.util.netty.proto.LittleProto.ClientExitSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientExitSleeveOrBuilder> 
          getClientExitSleeveFieldBuilder() {
        if (clientExitSleeveBuilder_ == null) {
          clientExitSleeveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ClientExitSleeve, com.kys.util.netty.proto.LittleProto.ClientExitSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientExitSleeveOrBuilder>(
                  getClientExitSleeve(),
                  getParentForChildren(),
                  isClean());
          clientExitSleeve_ = null;
        }
        return clientExitSleeveBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve clientEnterNewSleeve_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve, com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeveOrBuilder> clientEnterNewSleeveBuilder_;
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      public boolean hasClientEnterNewSleeve() {
        return clientEnterNewSleeveBuilder_ != null || clientEnterNewSleeve_ != null;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve getClientEnterNewSleeve() {
        if (clientEnterNewSleeveBuilder_ == null) {
          return clientEnterNewSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.getDefaultInstance() : clientEnterNewSleeve_;
        } else {
          return clientEnterNewSleeveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      public Builder setClientEnterNewSleeve(com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve value) {
        if (clientEnterNewSleeveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientEnterNewSleeve_ = value;
          onChanged();
        } else {
          clientEnterNewSleeveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      public Builder setClientEnterNewSleeve(
          com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.Builder builderForValue) {
        if (clientEnterNewSleeveBuilder_ == null) {
          clientEnterNewSleeve_ = builderForValue.build();
          onChanged();
        } else {
          clientEnterNewSleeveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      public Builder mergeClientEnterNewSleeve(com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve value) {
        if (clientEnterNewSleeveBuilder_ == null) {
          if (clientEnterNewSleeve_ != null) {
            clientEnterNewSleeve_ =
              com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.newBuilder(clientEnterNewSleeve_).mergeFrom(value).buildPartial();
          } else {
            clientEnterNewSleeve_ = value;
          }
          onChanged();
        } else {
          clientEnterNewSleeveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      public Builder clearClientEnterNewSleeve() {
        if (clientEnterNewSleeveBuilder_ == null) {
          clientEnterNewSleeve_ = null;
          onChanged();
        } else {
          clientEnterNewSleeve_ = null;
          clientEnterNewSleeveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.Builder getClientEnterNewSleeveBuilder() {
        
        onChanged();
        return getClientEnterNewSleeveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeveOrBuilder getClientEnterNewSleeveOrBuilder() {
        if (clientEnterNewSleeveBuilder_ != null) {
          return clientEnterNewSleeveBuilder_.getMessageOrBuilder();
        } else {
          return clientEnterNewSleeve_ == null ?
              com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.getDefaultInstance() : clientEnterNewSleeve_;
        }
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterNewSleeve clientEnterNewSleeve = 1304;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve, com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeveOrBuilder> 
          getClientEnterNewSleeveFieldBuilder() {
        if (clientEnterNewSleeveBuilder_ == null) {
          clientEnterNewSleeveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve, com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientEnterNewSleeveOrBuilder>(
                  getClientEnterNewSleeve(),
                  getParentForChildren(),
                  isClean());
          clientEnterNewSleeve_ = null;
        }
        return clientEnterNewSleeveBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep clientNewSleeveSheep_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep, com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheepOrBuilder> clientNewSleeveSheepBuilder_;
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      public boolean hasClientNewSleeveSheep() {
        return clientNewSleeveSheepBuilder_ != null || clientNewSleeveSheep_ != null;
      }
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep getClientNewSleeveSheep() {
        if (clientNewSleeveSheepBuilder_ == null) {
          return clientNewSleeveSheep_ == null ? com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.getDefaultInstance() : clientNewSleeveSheep_;
        } else {
          return clientNewSleeveSheepBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      public Builder setClientNewSleeveSheep(com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep value) {
        if (clientNewSleeveSheepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientNewSleeveSheep_ = value;
          onChanged();
        } else {
          clientNewSleeveSheepBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      public Builder setClientNewSleeveSheep(
          com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.Builder builderForValue) {
        if (clientNewSleeveSheepBuilder_ == null) {
          clientNewSleeveSheep_ = builderForValue.build();
          onChanged();
        } else {
          clientNewSleeveSheepBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      public Builder mergeClientNewSleeveSheep(com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep value) {
        if (clientNewSleeveSheepBuilder_ == null) {
          if (clientNewSleeveSheep_ != null) {
            clientNewSleeveSheep_ =
              com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.newBuilder(clientNewSleeveSheep_).mergeFrom(value).buildPartial();
          } else {
            clientNewSleeveSheep_ = value;
          }
          onChanged();
        } else {
          clientNewSleeveSheepBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      public Builder clearClientNewSleeveSheep() {
        if (clientNewSleeveSheepBuilder_ == null) {
          clientNewSleeveSheep_ = null;
          onChanged();
        } else {
          clientNewSleeveSheep_ = null;
          clientNewSleeveSheepBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.Builder getClientNewSleeveSheepBuilder() {
        
        onChanged();
        return getClientNewSleeveSheepFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheepOrBuilder getClientNewSleeveSheepOrBuilder() {
        if (clientNewSleeveSheepBuilder_ != null) {
          return clientNewSleeveSheepBuilder_.getMessageOrBuilder();
        } else {
          return clientNewSleeveSheep_ == null ?
              com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.getDefaultInstance() : clientNewSleeveSheep_;
        }
      }
      /**
       * <pre>
       ** 客户端请求开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveSheep clientNewSleeveSheep = 1305;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep, com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheepOrBuilder> 
          getClientNewSleeveSheepFieldBuilder() {
        if (clientNewSleeveSheepBuilder_ == null) {
          clientNewSleeveSheepBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep, com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ClientNewSleeveSheepOrBuilder>(
                  getClientNewSleeveSheep(),
                  getParentForChildren(),
                  isClean());
          clientNewSleeveSheep_ = null;
        }
        return clientNewSleeveSheepBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult clientNewSleeveResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult, com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.Builder, com.kys.util.netty.proto.LittleProto.ClientNewSleeveResultOrBuilder> clientNewSleeveResultBuilder_;
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      public boolean hasClientNewSleeveResult() {
        return clientNewSleeveResultBuilder_ != null || clientNewSleeveResult_ != null;
      }
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult getClientNewSleeveResult() {
        if (clientNewSleeveResultBuilder_ == null) {
          return clientNewSleeveResult_ == null ? com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.getDefaultInstance() : clientNewSleeveResult_;
        } else {
          return clientNewSleeveResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      public Builder setClientNewSleeveResult(com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult value) {
        if (clientNewSleeveResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientNewSleeveResult_ = value;
          onChanged();
        } else {
          clientNewSleeveResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      public Builder setClientNewSleeveResult(
          com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.Builder builderForValue) {
        if (clientNewSleeveResultBuilder_ == null) {
          clientNewSleeveResult_ = builderForValue.build();
          onChanged();
        } else {
          clientNewSleeveResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      public Builder mergeClientNewSleeveResult(com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult value) {
        if (clientNewSleeveResultBuilder_ == null) {
          if (clientNewSleeveResult_ != null) {
            clientNewSleeveResult_ =
              com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.newBuilder(clientNewSleeveResult_).mergeFrom(value).buildPartial();
          } else {
            clientNewSleeveResult_ = value;
          }
          onChanged();
        } else {
          clientNewSleeveResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      public Builder clearClientNewSleeveResult() {
        if (clientNewSleeveResultBuilder_ == null) {
          clientNewSleeveResult_ = null;
          onChanged();
        } else {
          clientNewSleeveResult_ = null;
          clientNewSleeveResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.Builder getClientNewSleeveResultBuilder() {
        
        onChanged();
        return getClientNewSleeveResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientNewSleeveResultOrBuilder getClientNewSleeveResultOrBuilder() {
        if (clientNewSleeveResultBuilder_ != null) {
          return clientNewSleeveResultBuilder_.getMessageOrBuilder();
        } else {
          return clientNewSleeveResult_ == null ?
              com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.getDefaultInstance() : clientNewSleeveResult_;
        }
      }
      /**
       * <pre>
       ** 客户端请求(新套羊结果) 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewSleeveResult clientNewSleeveResult = 1306;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult, com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.Builder, com.kys.util.netty.proto.LittleProto.ClientNewSleeveResultOrBuilder> 
          getClientNewSleeveResultFieldBuilder() {
        if (clientNewSleeveResultBuilder_ == null) {
          clientNewSleeveResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult, com.kys.util.netty.proto.LittleProto.ClientNewSleeveResult.Builder, com.kys.util.netty.proto.LittleProto.ClientNewSleeveResultOrBuilder>(
                  getClientNewSleeveResult(),
                  getParentForChildren(),
                  isClean());
          clientNewSleeveResult_ = null;
        }
        return clientNewSleeveResultBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve clientExitNewSleeve_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve, com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientExitNewSleeveOrBuilder> clientExitNewSleeveBuilder_;
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      public boolean hasClientExitNewSleeve() {
        return clientExitNewSleeveBuilder_ != null || clientExitNewSleeve_ != null;
      }
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve getClientExitNewSleeve() {
        if (clientExitNewSleeveBuilder_ == null) {
          return clientExitNewSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.getDefaultInstance() : clientExitNewSleeve_;
        } else {
          return clientExitNewSleeveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      public Builder setClientExitNewSleeve(com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve value) {
        if (clientExitNewSleeveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientExitNewSleeve_ = value;
          onChanged();
        } else {
          clientExitNewSleeveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      public Builder setClientExitNewSleeve(
          com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.Builder builderForValue) {
        if (clientExitNewSleeveBuilder_ == null) {
          clientExitNewSleeve_ = builderForValue.build();
          onChanged();
        } else {
          clientExitNewSleeveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      public Builder mergeClientExitNewSleeve(com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve value) {
        if (clientExitNewSleeveBuilder_ == null) {
          if (clientExitNewSleeve_ != null) {
            clientExitNewSleeve_ =
              com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.newBuilder(clientExitNewSleeve_).mergeFrom(value).buildPartial();
          } else {
            clientExitNewSleeve_ = value;
          }
          onChanged();
        } else {
          clientExitNewSleeveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      public Builder clearClientExitNewSleeve() {
        if (clientExitNewSleeveBuilder_ == null) {
          clientExitNewSleeve_ = null;
          onChanged();
        } else {
          clientExitNewSleeve_ = null;
          clientExitNewSleeveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.Builder getClientExitNewSleeveBuilder() {
        
        onChanged();
        return getClientExitNewSleeveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ClientExitNewSleeveOrBuilder getClientExitNewSleeveOrBuilder() {
        if (clientExitNewSleeveBuilder_ != null) {
          return clientExitNewSleeveBuilder_.getMessageOrBuilder();
        } else {
          return clientExitNewSleeve_ == null ?
              com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.getDefaultInstance() : clientExitNewSleeve_;
        }
      }
      /**
       * <pre>
       ** 客户端退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitNewSleeve clientExitNewSleeve = 1307;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve, com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientExitNewSleeveOrBuilder> 
          getClientExitNewSleeveFieldBuilder() {
        if (clientExitNewSleeveBuilder_ == null) {
          clientExitNewSleeveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve, com.kys.util.netty.proto.LittleProto.ClientExitNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ClientExitNewSleeveOrBuilder>(
                  getClientExitNewSleeve(),
                  getParentForChildren(),
                  isClean());
          clientExitNewSleeve_ = null;
        }
        return clientExitNewSleeveBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch client2DoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch, com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_DoCatchOrBuilder> client2DoCatchBuilder_;
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      public boolean hasClient2DoCatch() {
        return client2DoCatchBuilder_ != null || client2DoCatch_ != null;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch getClient2DoCatch() {
        if (client2DoCatchBuilder_ == null) {
          return client2DoCatch_ == null ? com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.getDefaultInstance() : client2DoCatch_;
        } else {
          return client2DoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      public Builder setClient2DoCatch(com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch value) {
        if (client2DoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          client2DoCatch_ = value;
          onChanged();
        } else {
          client2DoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      public Builder setClient2DoCatch(
          com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.Builder builderForValue) {
        if (client2DoCatchBuilder_ == null) {
          client2DoCatch_ = builderForValue.build();
          onChanged();
        } else {
          client2DoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      public Builder mergeClient2DoCatch(com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch value) {
        if (client2DoCatchBuilder_ == null) {
          if (client2DoCatch_ != null) {
            client2DoCatch_ =
              com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.newBuilder(client2DoCatch_).mergeFrom(value).buildPartial();
          } else {
            client2DoCatch_ = value;
          }
          onChanged();
        } else {
          client2DoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      public Builder clearClient2DoCatch() {
        if (client2DoCatchBuilder_ == null) {
          client2DoCatch_ = null;
          onChanged();
        } else {
          client2DoCatch_ = null;
          client2DoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.Builder getClient2DoCatchBuilder() {
        
        onChanged();
        return getClient2DoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_DoCatchOrBuilder getClient2DoCatchOrBuilder() {
        if (client2DoCatchBuilder_ != null) {
          return client2DoCatchBuilder_.getMessageOrBuilder();
        } else {
          return client2DoCatch_ == null ?
              com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.getDefaultInstance() : client2DoCatch_;
        }
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_DoCatch client_2_DoCatch = 1401;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch, com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_DoCatchOrBuilder> 
          getClient2DoCatchFieldBuilder() {
        if (client2DoCatchBuilder_ == null) {
          client2DoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch, com.kys.util.netty.proto.Game2Proto.Client_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_DoCatchOrBuilder>(
                  getClient2DoCatch(),
                  getParentForChildren(),
                  isClean());
          client2DoCatch_ = null;
        }
        return client2DoCatchBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards client2PlayCards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards, com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_PlayCardsOrBuilder> client2PlayCardsBuilder_;
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      public boolean hasClient2PlayCards() {
        return client2PlayCardsBuilder_ != null || client2PlayCards_ != null;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards getClient2PlayCards() {
        if (client2PlayCardsBuilder_ == null) {
          return client2PlayCards_ == null ? com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.getDefaultInstance() : client2PlayCards_;
        } else {
          return client2PlayCardsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      public Builder setClient2PlayCards(com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards value) {
        if (client2PlayCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          client2PlayCards_ = value;
          onChanged();
        } else {
          client2PlayCardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      public Builder setClient2PlayCards(
          com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.Builder builderForValue) {
        if (client2PlayCardsBuilder_ == null) {
          client2PlayCards_ = builderForValue.build();
          onChanged();
        } else {
          client2PlayCardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      public Builder mergeClient2PlayCards(com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards value) {
        if (client2PlayCardsBuilder_ == null) {
          if (client2PlayCards_ != null) {
            client2PlayCards_ =
              com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.newBuilder(client2PlayCards_).mergeFrom(value).buildPartial();
          } else {
            client2PlayCards_ = value;
          }
          onChanged();
        } else {
          client2PlayCardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      public Builder clearClient2PlayCards() {
        if (client2PlayCardsBuilder_ == null) {
          client2PlayCards_ = null;
          onChanged();
        } else {
          client2PlayCards_ = null;
          client2PlayCardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.Builder getClient2PlayCardsBuilder() {
        
        onChanged();
        return getClient2PlayCardsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_PlayCardsOrBuilder getClient2PlayCardsOrBuilder() {
        if (client2PlayCardsBuilder_ != null) {
          return client2PlayCardsBuilder_.getMessageOrBuilder();
        } else {
          return client2PlayCards_ == null ?
              com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.getDefaultInstance() : client2PlayCards_;
        }
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_PlayCards client_2_PlayCards = 1402;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards, com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_PlayCardsOrBuilder> 
          getClient2PlayCardsFieldBuilder() {
        if (client2PlayCardsBuilder_ == null) {
          client2PlayCardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards, com.kys.util.netty.proto.Game2Proto.Client_2_PlayCards.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_PlayCardsOrBuilder>(
                  getClient2PlayCards(),
                  getParentForChildren(),
                  isClean());
          client2PlayCards_ = null;
        }
        return client2PlayCardsBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame client2RecoverGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame, com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGameOrBuilder> client2RecoverGameBuilder_;
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      public boolean hasClient2RecoverGame() {
        return client2RecoverGameBuilder_ != null || client2RecoverGame_ != null;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame getClient2RecoverGame() {
        if (client2RecoverGameBuilder_ == null) {
          return client2RecoverGame_ == null ? com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.getDefaultInstance() : client2RecoverGame_;
        } else {
          return client2RecoverGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      public Builder setClient2RecoverGame(com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame value) {
        if (client2RecoverGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          client2RecoverGame_ = value;
          onChanged();
        } else {
          client2RecoverGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      public Builder setClient2RecoverGame(
          com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.Builder builderForValue) {
        if (client2RecoverGameBuilder_ == null) {
          client2RecoverGame_ = builderForValue.build();
          onChanged();
        } else {
          client2RecoverGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      public Builder mergeClient2RecoverGame(com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame value) {
        if (client2RecoverGameBuilder_ == null) {
          if (client2RecoverGame_ != null) {
            client2RecoverGame_ =
              com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.newBuilder(client2RecoverGame_).mergeFrom(value).buildPartial();
          } else {
            client2RecoverGame_ = value;
          }
          onChanged();
        } else {
          client2RecoverGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      public Builder clearClient2RecoverGame() {
        if (client2RecoverGameBuilder_ == null) {
          client2RecoverGame_ = null;
          onChanged();
        } else {
          client2RecoverGame_ = null;
          client2RecoverGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.Builder getClient2RecoverGameBuilder() {
        
        onChanged();
        return getClient2RecoverGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGameOrBuilder getClient2RecoverGameOrBuilder() {
        if (client2RecoverGameBuilder_ != null) {
          return client2RecoverGameBuilder_.getMessageOrBuilder();
        } else {
          return client2RecoverGame_ == null ?
              com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.getDefaultInstance() : client2RecoverGame_;
        }
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_RecoverGame client_2_RecoverGame = 1403;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame, com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGameOrBuilder> 
          getClient2RecoverGameFieldBuilder() {
        if (client2RecoverGameBuilder_ == null) {
          client2RecoverGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame, com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGame.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_RecoverGameOrBuilder>(
                  getClient2RecoverGame(),
                  getParentForChildren(),
                  isClean());
          client2RecoverGame_ = null;
        }
        return client2RecoverGameBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom client2LeaveRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom, com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoomOrBuilder> client2LeaveRoomBuilder_;
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      public boolean hasClient2LeaveRoom() {
        return client2LeaveRoomBuilder_ != null || client2LeaveRoom_ != null;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom getClient2LeaveRoom() {
        if (client2LeaveRoomBuilder_ == null) {
          return client2LeaveRoom_ == null ? com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.getDefaultInstance() : client2LeaveRoom_;
        } else {
          return client2LeaveRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      public Builder setClient2LeaveRoom(com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom value) {
        if (client2LeaveRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          client2LeaveRoom_ = value;
          onChanged();
        } else {
          client2LeaveRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      public Builder setClient2LeaveRoom(
          com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.Builder builderForValue) {
        if (client2LeaveRoomBuilder_ == null) {
          client2LeaveRoom_ = builderForValue.build();
          onChanged();
        } else {
          client2LeaveRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      public Builder mergeClient2LeaveRoom(com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom value) {
        if (client2LeaveRoomBuilder_ == null) {
          if (client2LeaveRoom_ != null) {
            client2LeaveRoom_ =
              com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.newBuilder(client2LeaveRoom_).mergeFrom(value).buildPartial();
          } else {
            client2LeaveRoom_ = value;
          }
          onChanged();
        } else {
          client2LeaveRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      public Builder clearClient2LeaveRoom() {
        if (client2LeaveRoomBuilder_ == null) {
          client2LeaveRoom_ = null;
          onChanged();
        } else {
          client2LeaveRoom_ = null;
          client2LeaveRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.Builder getClient2LeaveRoomBuilder() {
        
        onChanged();
        return getClient2LeaveRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoomOrBuilder getClient2LeaveRoomOrBuilder() {
        if (client2LeaveRoomBuilder_ != null) {
          return client2LeaveRoomBuilder_.getMessageOrBuilder();
        } else {
          return client2LeaveRoom_ == null ?
              com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.getDefaultInstance() : client2LeaveRoom_;
        }
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Client_2_LeaveRoom client_2_LeaveRoom = 1404;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom, com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoomOrBuilder> 
          getClient2LeaveRoomFieldBuilder() {
        if (client2LeaveRoomBuilder_ == null) {
          client2LeaveRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom, com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoom.Builder, com.kys.util.netty.proto.Game2Proto.Client_2_LeaveRoomOrBuilder>(
                  getClient2LeaveRoom(),
                  getParentForChildren(),
                  isClean());
          client2LeaveRoom_ = null;
        }
        return client2LeaveRoomBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ClientMineShare clientMineShare_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientMineShare, com.kys.util.netty.proto.ShareProto.ClientMineShare.Builder, com.kys.util.netty.proto.ShareProto.ClientMineShareOrBuilder> clientMineShareBuilder_;
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      public boolean hasClientMineShare() {
        return clientMineShareBuilder_ != null || clientMineShare_ != null;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientMineShare getClientMineShare() {
        if (clientMineShareBuilder_ == null) {
          return clientMineShare_ == null ? com.kys.util.netty.proto.ShareProto.ClientMineShare.getDefaultInstance() : clientMineShare_;
        } else {
          return clientMineShareBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      public Builder setClientMineShare(com.kys.util.netty.proto.ShareProto.ClientMineShare value) {
        if (clientMineShareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientMineShare_ = value;
          onChanged();
        } else {
          clientMineShareBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      public Builder setClientMineShare(
          com.kys.util.netty.proto.ShareProto.ClientMineShare.Builder builderForValue) {
        if (clientMineShareBuilder_ == null) {
          clientMineShare_ = builderForValue.build();
          onChanged();
        } else {
          clientMineShareBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      public Builder mergeClientMineShare(com.kys.util.netty.proto.ShareProto.ClientMineShare value) {
        if (clientMineShareBuilder_ == null) {
          if (clientMineShare_ != null) {
            clientMineShare_ =
              com.kys.util.netty.proto.ShareProto.ClientMineShare.newBuilder(clientMineShare_).mergeFrom(value).buildPartial();
          } else {
            clientMineShare_ = value;
          }
          onChanged();
        } else {
          clientMineShareBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      public Builder clearClientMineShare() {
        if (clientMineShareBuilder_ == null) {
          clientMineShare_ = null;
          onChanged();
        } else {
          clientMineShare_ = null;
          clientMineShareBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientMineShare.Builder getClientMineShareBuilder() {
        
        onChanged();
        return getClientMineShareFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientMineShareOrBuilder getClientMineShareOrBuilder() {
        if (clientMineShareBuilder_ != null) {
          return clientMineShareBuilder_.getMessageOrBuilder();
        } else {
          return clientMineShare_ == null ?
              com.kys.util.netty.proto.ShareProto.ClientMineShare.getDefaultInstance() : clientMineShare_;
        }
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMineShare clientMineShare = 1501;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientMineShare, com.kys.util.netty.proto.ShareProto.ClientMineShare.Builder, com.kys.util.netty.proto.ShareProto.ClientMineShareOrBuilder> 
          getClientMineShareFieldBuilder() {
        if (clientMineShareBuilder_ == null) {
          clientMineShareBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ClientMineShare, com.kys.util.netty.proto.ShareProto.ClientMineShare.Builder, com.kys.util.netty.proto.ShareProto.ClientMineShareOrBuilder>(
                  getClientMineShare(),
                  getParentForChildren(),
                  isClean());
          clientMineShare_ = null;
        }
        return clientMineShareBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ClientGetMSAward clientGetMSAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientGetMSAward, com.kys.util.netty.proto.ShareProto.ClientGetMSAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetMSAwardOrBuilder> clientGetMSAwardBuilder_;
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      public boolean hasClientGetMSAward() {
        return clientGetMSAwardBuilder_ != null || clientGetMSAward_ != null;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetMSAward getClientGetMSAward() {
        if (clientGetMSAwardBuilder_ == null) {
          return clientGetMSAward_ == null ? com.kys.util.netty.proto.ShareProto.ClientGetMSAward.getDefaultInstance() : clientGetMSAward_;
        } else {
          return clientGetMSAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      public Builder setClientGetMSAward(com.kys.util.netty.proto.ShareProto.ClientGetMSAward value) {
        if (clientGetMSAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMSAward_ = value;
          onChanged();
        } else {
          clientGetMSAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      public Builder setClientGetMSAward(
          com.kys.util.netty.proto.ShareProto.ClientGetMSAward.Builder builderForValue) {
        if (clientGetMSAwardBuilder_ == null) {
          clientGetMSAward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMSAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      public Builder mergeClientGetMSAward(com.kys.util.netty.proto.ShareProto.ClientGetMSAward value) {
        if (clientGetMSAwardBuilder_ == null) {
          if (clientGetMSAward_ != null) {
            clientGetMSAward_ =
              com.kys.util.netty.proto.ShareProto.ClientGetMSAward.newBuilder(clientGetMSAward_).mergeFrom(value).buildPartial();
          } else {
            clientGetMSAward_ = value;
          }
          onChanged();
        } else {
          clientGetMSAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      public Builder clearClientGetMSAward() {
        if (clientGetMSAwardBuilder_ == null) {
          clientGetMSAward_ = null;
          onChanged();
        } else {
          clientGetMSAward_ = null;
          clientGetMSAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetMSAward.Builder getClientGetMSAwardBuilder() {
        
        onChanged();
        return getClientGetMSAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetMSAwardOrBuilder getClientGetMSAwardOrBuilder() {
        if (clientGetMSAwardBuilder_ != null) {
          return clientGetMSAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMSAward_ == null ?
              com.kys.util.netty.proto.ShareProto.ClientGetMSAward.getDefaultInstance() : clientGetMSAward_;
        }
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMSAward clientGetMSAward = 1502;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientGetMSAward, com.kys.util.netty.proto.ShareProto.ClientGetMSAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetMSAwardOrBuilder> 
          getClientGetMSAwardFieldBuilder() {
        if (clientGetMSAwardBuilder_ == null) {
          clientGetMSAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ClientGetMSAward, com.kys.util.netty.proto.ShareProto.ClientGetMSAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetMSAwardOrBuilder>(
                  getClientGetMSAward(),
                  getParentForChildren(),
                  isClean());
          clientGetMSAward_ = null;
        }
        return clientGetMSAwardBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ClientFriendShare clientFriendShare_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientFriendShare, com.kys.util.netty.proto.ShareProto.ClientFriendShare.Builder, com.kys.util.netty.proto.ShareProto.ClientFriendShareOrBuilder> clientFriendShareBuilder_;
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      public boolean hasClientFriendShare() {
        return clientFriendShareBuilder_ != null || clientFriendShare_ != null;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientFriendShare getClientFriendShare() {
        if (clientFriendShareBuilder_ == null) {
          return clientFriendShare_ == null ? com.kys.util.netty.proto.ShareProto.ClientFriendShare.getDefaultInstance() : clientFriendShare_;
        } else {
          return clientFriendShareBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      public Builder setClientFriendShare(com.kys.util.netty.proto.ShareProto.ClientFriendShare value) {
        if (clientFriendShareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientFriendShare_ = value;
          onChanged();
        } else {
          clientFriendShareBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      public Builder setClientFriendShare(
          com.kys.util.netty.proto.ShareProto.ClientFriendShare.Builder builderForValue) {
        if (clientFriendShareBuilder_ == null) {
          clientFriendShare_ = builderForValue.build();
          onChanged();
        } else {
          clientFriendShareBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      public Builder mergeClientFriendShare(com.kys.util.netty.proto.ShareProto.ClientFriendShare value) {
        if (clientFriendShareBuilder_ == null) {
          if (clientFriendShare_ != null) {
            clientFriendShare_ =
              com.kys.util.netty.proto.ShareProto.ClientFriendShare.newBuilder(clientFriendShare_).mergeFrom(value).buildPartial();
          } else {
            clientFriendShare_ = value;
          }
          onChanged();
        } else {
          clientFriendShareBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      public Builder clearClientFriendShare() {
        if (clientFriendShareBuilder_ == null) {
          clientFriendShare_ = null;
          onChanged();
        } else {
          clientFriendShare_ = null;
          clientFriendShareBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientFriendShare.Builder getClientFriendShareBuilder() {
        
        onChanged();
        return getClientFriendShareFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientFriendShareOrBuilder getClientFriendShareOrBuilder() {
        if (clientFriendShareBuilder_ != null) {
          return clientFriendShareBuilder_.getMessageOrBuilder();
        } else {
          return clientFriendShare_ == null ?
              com.kys.util.netty.proto.ShareProto.ClientFriendShare.getDefaultInstance() : clientFriendShare_;
        }
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientFriendShare clientFriendShare = 1503;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientFriendShare, com.kys.util.netty.proto.ShareProto.ClientFriendShare.Builder, com.kys.util.netty.proto.ShareProto.ClientFriendShareOrBuilder> 
          getClientFriendShareFieldBuilder() {
        if (clientFriendShareBuilder_ == null) {
          clientFriendShareBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ClientFriendShare, com.kys.util.netty.proto.ShareProto.ClientFriendShare.Builder, com.kys.util.netty.proto.ShareProto.ClientFriendShareOrBuilder>(
                  getClientFriendShare(),
                  getParentForChildren(),
                  isClean());
          clientFriendShare_ = null;
        }
        return clientFriendShareBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ClientGetFSAward clientGetFSAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientGetFSAward, com.kys.util.netty.proto.ShareProto.ClientGetFSAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetFSAwardOrBuilder> clientGetFSAwardBuilder_;
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      public boolean hasClientGetFSAward() {
        return clientGetFSAwardBuilder_ != null || clientGetFSAward_ != null;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetFSAward getClientGetFSAward() {
        if (clientGetFSAwardBuilder_ == null) {
          return clientGetFSAward_ == null ? com.kys.util.netty.proto.ShareProto.ClientGetFSAward.getDefaultInstance() : clientGetFSAward_;
        } else {
          return clientGetFSAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      public Builder setClientGetFSAward(com.kys.util.netty.proto.ShareProto.ClientGetFSAward value) {
        if (clientGetFSAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetFSAward_ = value;
          onChanged();
        } else {
          clientGetFSAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      public Builder setClientGetFSAward(
          com.kys.util.netty.proto.ShareProto.ClientGetFSAward.Builder builderForValue) {
        if (clientGetFSAwardBuilder_ == null) {
          clientGetFSAward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetFSAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      public Builder mergeClientGetFSAward(com.kys.util.netty.proto.ShareProto.ClientGetFSAward value) {
        if (clientGetFSAwardBuilder_ == null) {
          if (clientGetFSAward_ != null) {
            clientGetFSAward_ =
              com.kys.util.netty.proto.ShareProto.ClientGetFSAward.newBuilder(clientGetFSAward_).mergeFrom(value).buildPartial();
          } else {
            clientGetFSAward_ = value;
          }
          onChanged();
        } else {
          clientGetFSAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      public Builder clearClientGetFSAward() {
        if (clientGetFSAwardBuilder_ == null) {
          clientGetFSAward_ = null;
          onChanged();
        } else {
          clientGetFSAward_ = null;
          clientGetFSAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetFSAward.Builder getClientGetFSAwardBuilder() {
        
        onChanged();
        return getClientGetFSAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetFSAwardOrBuilder getClientGetFSAwardOrBuilder() {
        if (clientGetFSAwardBuilder_ != null) {
          return clientGetFSAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetFSAward_ == null ?
              com.kys.util.netty.proto.ShareProto.ClientGetFSAward.getDefaultInstance() : clientGetFSAward_;
        }
      }
      /**
       * <pre>
       ** 玩家获取好友的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFSAward clientGetFSAward = 1504;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientGetFSAward, com.kys.util.netty.proto.ShareProto.ClientGetFSAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetFSAwardOrBuilder> 
          getClientGetFSAwardFieldBuilder() {
        if (clientGetFSAwardBuilder_ == null) {
          clientGetFSAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ClientGetFSAward, com.kys.util.netty.proto.ShareProto.ClientGetFSAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetFSAwardOrBuilder>(
                  getClientGetFSAward(),
                  getParentForChildren(),
                  isClean());
          clientGetFSAward_ = null;
        }
        return clientGetFSAwardBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ClientGetShareTask clientGetShareTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientGetShareTask, com.kys.util.netty.proto.ShareProto.ClientGetShareTask.Builder, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskOrBuilder> clientGetShareTaskBuilder_;
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      public boolean hasClientGetShareTask() {
        return clientGetShareTaskBuilder_ != null || clientGetShareTask_ != null;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetShareTask getClientGetShareTask() {
        if (clientGetShareTaskBuilder_ == null) {
          return clientGetShareTask_ == null ? com.kys.util.netty.proto.ShareProto.ClientGetShareTask.getDefaultInstance() : clientGetShareTask_;
        } else {
          return clientGetShareTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      public Builder setClientGetShareTask(com.kys.util.netty.proto.ShareProto.ClientGetShareTask value) {
        if (clientGetShareTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetShareTask_ = value;
          onChanged();
        } else {
          clientGetShareTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      public Builder setClientGetShareTask(
          com.kys.util.netty.proto.ShareProto.ClientGetShareTask.Builder builderForValue) {
        if (clientGetShareTaskBuilder_ == null) {
          clientGetShareTask_ = builderForValue.build();
          onChanged();
        } else {
          clientGetShareTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      public Builder mergeClientGetShareTask(com.kys.util.netty.proto.ShareProto.ClientGetShareTask value) {
        if (clientGetShareTaskBuilder_ == null) {
          if (clientGetShareTask_ != null) {
            clientGetShareTask_ =
              com.kys.util.netty.proto.ShareProto.ClientGetShareTask.newBuilder(clientGetShareTask_).mergeFrom(value).buildPartial();
          } else {
            clientGetShareTask_ = value;
          }
          onChanged();
        } else {
          clientGetShareTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      public Builder clearClientGetShareTask() {
        if (clientGetShareTaskBuilder_ == null) {
          clientGetShareTask_ = null;
          onChanged();
        } else {
          clientGetShareTask_ = null;
          clientGetShareTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetShareTask.Builder getClientGetShareTaskBuilder() {
        
        onChanged();
        return getClientGetShareTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetShareTaskOrBuilder getClientGetShareTaskOrBuilder() {
        if (clientGetShareTaskBuilder_ != null) {
          return clientGetShareTaskBuilder_.getMessageOrBuilder();
        } else {
          return clientGetShareTask_ == null ?
              com.kys.util.netty.proto.ShareProto.ClientGetShareTask.getDefaultInstance() : clientGetShareTask_;
        }
      }
      /**
       * <pre>
       ** 玩家获取邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTask clientGetShareTask = 1505;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientGetShareTask, com.kys.util.netty.proto.ShareProto.ClientGetShareTask.Builder, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskOrBuilder> 
          getClientGetShareTaskFieldBuilder() {
        if (clientGetShareTaskBuilder_ == null) {
          clientGetShareTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ClientGetShareTask, com.kys.util.netty.proto.ShareProto.ClientGetShareTask.Builder, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskOrBuilder>(
                  getClientGetShareTask(),
                  getParentForChildren(),
                  isClean());
          clientGetShareTask_ = null;
        }
        return clientGetShareTaskBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward clientGetShareTaskAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAwardOrBuilder> clientGetShareTaskAwardBuilder_;
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      public boolean hasClientGetShareTaskAward() {
        return clientGetShareTaskAwardBuilder_ != null || clientGetShareTaskAward_ != null;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward getClientGetShareTaskAward() {
        if (clientGetShareTaskAwardBuilder_ == null) {
          return clientGetShareTaskAward_ == null ? com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.getDefaultInstance() : clientGetShareTaskAward_;
        } else {
          return clientGetShareTaskAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      public Builder setClientGetShareTaskAward(com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward value) {
        if (clientGetShareTaskAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetShareTaskAward_ = value;
          onChanged();
        } else {
          clientGetShareTaskAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      public Builder setClientGetShareTaskAward(
          com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.Builder builderForValue) {
        if (clientGetShareTaskAwardBuilder_ == null) {
          clientGetShareTaskAward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetShareTaskAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      public Builder mergeClientGetShareTaskAward(com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward value) {
        if (clientGetShareTaskAwardBuilder_ == null) {
          if (clientGetShareTaskAward_ != null) {
            clientGetShareTaskAward_ =
              com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.newBuilder(clientGetShareTaskAward_).mergeFrom(value).buildPartial();
          } else {
            clientGetShareTaskAward_ = value;
          }
          onChanged();
        } else {
          clientGetShareTaskAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      public Builder clearClientGetShareTaskAward() {
        if (clientGetShareTaskAwardBuilder_ == null) {
          clientGetShareTaskAward_ = null;
          onChanged();
        } else {
          clientGetShareTaskAward_ = null;
          clientGetShareTaskAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.Builder getClientGetShareTaskAwardBuilder() {
        
        onChanged();
        return getClientGetShareTaskAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAwardOrBuilder getClientGetShareTaskAwardOrBuilder() {
        if (clientGetShareTaskAwardBuilder_ != null) {
          return clientGetShareTaskAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetShareTaskAward_ == null ?
              com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.getDefaultInstance() : clientGetShareTaskAward_;
        }
      }
      /**
       * <pre>
       ** 玩家获取邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetShareTaskAward clientGetShareTaskAward = 1506;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAwardOrBuilder> 
          getClientGetShareTaskAwardFieldBuilder() {
        if (clientGetShareTaskAwardBuilder_ == null) {
          clientGetShareTaskAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAward.Builder, com.kys.util.netty.proto.ShareProto.ClientGetShareTaskAwardOrBuilder>(
                  getClientGetShareTaskAward(),
                  getParentForChildren(),
                  isClean());
          clientGetShareTaskAward_ = null;
        }
        return clientGetShareTaskAwardBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo clientQueryReviveInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo, com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfoOrBuilder> clientQueryReviveInfoBuilder_;
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      public boolean hasClientQueryReviveInfo() {
        return clientQueryReviveInfoBuilder_ != null || clientQueryReviveInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo getClientQueryReviveInfo() {
        if (clientQueryReviveInfoBuilder_ == null) {
          return clientQueryReviveInfo_ == null ? com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.getDefaultInstance() : clientQueryReviveInfo_;
        } else {
          return clientQueryReviveInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      public Builder setClientQueryReviveInfo(com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo value) {
        if (clientQueryReviveInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryReviveInfo_ = value;
          onChanged();
        } else {
          clientQueryReviveInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      public Builder setClientQueryReviveInfo(
          com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.Builder builderForValue) {
        if (clientQueryReviveInfoBuilder_ == null) {
          clientQueryReviveInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryReviveInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      public Builder mergeClientQueryReviveInfo(com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo value) {
        if (clientQueryReviveInfoBuilder_ == null) {
          if (clientQueryReviveInfo_ != null) {
            clientQueryReviveInfo_ =
              com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.newBuilder(clientQueryReviveInfo_).mergeFrom(value).buildPartial();
          } else {
            clientQueryReviveInfo_ = value;
          }
          onChanged();
        } else {
          clientQueryReviveInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      public Builder clearClientQueryReviveInfo() {
        if (clientQueryReviveInfoBuilder_ == null) {
          clientQueryReviveInfo_ = null;
          onChanged();
        } else {
          clientQueryReviveInfo_ = null;
          clientQueryReviveInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.Builder getClientQueryReviveInfoBuilder() {
        
        onChanged();
        return getClientQueryReviveInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfoOrBuilder getClientQueryReviveInfoOrBuilder() {
        if (clientQueryReviveInfoBuilder_ != null) {
          return clientQueryReviveInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryReviveInfo_ == null ?
              com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.getDefaultInstance() : clientQueryReviveInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端查询复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryReviveInfo clientQueryReviveInfo = 1601;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo, com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfoOrBuilder> 
          getClientQueryReviveInfoFieldBuilder() {
        if (clientQueryReviveInfoBuilder_ == null) {
          clientQueryReviveInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo, com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.ClientQueryReviveInfoOrBuilder>(
                  getClientQueryReviveInfo(),
                  getParentForChildren(),
                  isClean());
          clientQueryReviveInfo_ = null;
        }
        return clientQueryReviveInfoBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.ClientUseRevive clientUseRevive_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ClientUseRevive, com.kys.util.netty.proto.ReviveProto.ClientUseRevive.Builder, com.kys.util.netty.proto.ReviveProto.ClientUseReviveOrBuilder> clientUseReviveBuilder_;
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      public boolean hasClientUseRevive() {
        return clientUseReviveBuilder_ != null || clientUseRevive_ != null;
      }
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientUseRevive getClientUseRevive() {
        if (clientUseReviveBuilder_ == null) {
          return clientUseRevive_ == null ? com.kys.util.netty.proto.ReviveProto.ClientUseRevive.getDefaultInstance() : clientUseRevive_;
        } else {
          return clientUseReviveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      public Builder setClientUseRevive(com.kys.util.netty.proto.ReviveProto.ClientUseRevive value) {
        if (clientUseReviveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientUseRevive_ = value;
          onChanged();
        } else {
          clientUseReviveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      public Builder setClientUseRevive(
          com.kys.util.netty.proto.ReviveProto.ClientUseRevive.Builder builderForValue) {
        if (clientUseReviveBuilder_ == null) {
          clientUseRevive_ = builderForValue.build();
          onChanged();
        } else {
          clientUseReviveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      public Builder mergeClientUseRevive(com.kys.util.netty.proto.ReviveProto.ClientUseRevive value) {
        if (clientUseReviveBuilder_ == null) {
          if (clientUseRevive_ != null) {
            clientUseRevive_ =
              com.kys.util.netty.proto.ReviveProto.ClientUseRevive.newBuilder(clientUseRevive_).mergeFrom(value).buildPartial();
          } else {
            clientUseRevive_ = value;
          }
          onChanged();
        } else {
          clientUseReviveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      public Builder clearClientUseRevive() {
        if (clientUseReviveBuilder_ == null) {
          clientUseRevive_ = null;
          onChanged();
        } else {
          clientUseRevive_ = null;
          clientUseReviveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientUseRevive.Builder getClientUseReviveBuilder() {
        
        onChanged();
        return getClientUseReviveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientUseReviveOrBuilder getClientUseReviveOrBuilder() {
        if (clientUseReviveBuilder_ != null) {
          return clientUseReviveBuilder_.getMessageOrBuilder();
        } else {
          return clientUseRevive_ == null ?
              com.kys.util.netty.proto.ReviveProto.ClientUseRevive.getDefaultInstance() : clientUseRevive_;
        }
      }
      /**
       * <pre>
       ** 客户端使用复活次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseRevive clientUseRevive = 1602;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ClientUseRevive, com.kys.util.netty.proto.ReviveProto.ClientUseRevive.Builder, com.kys.util.netty.proto.ReviveProto.ClientUseReviveOrBuilder> 
          getClientUseReviveFieldBuilder() {
        if (clientUseReviveBuilder_ == null) {
          clientUseReviveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.ClientUseRevive, com.kys.util.netty.proto.ReviveProto.ClientUseRevive.Builder, com.kys.util.netty.proto.ReviveProto.ClientUseReviveOrBuilder>(
                  getClientUseRevive(),
                  getParentForChildren(),
                  isClean());
          clientUseRevive_ = null;
        }
        return clientUseReviveBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge clientReviveFirstCharge_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge, com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.Builder, com.kys.util.netty.proto.ReviveProto.ClientReviveFirstChargeOrBuilder> clientReviveFirstChargeBuilder_;
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      public boolean hasClientReviveFirstCharge() {
        return clientReviveFirstChargeBuilder_ != null || clientReviveFirstCharge_ != null;
      }
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge getClientReviveFirstCharge() {
        if (clientReviveFirstChargeBuilder_ == null) {
          return clientReviveFirstCharge_ == null ? com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.getDefaultInstance() : clientReviveFirstCharge_;
        } else {
          return clientReviveFirstChargeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      public Builder setClientReviveFirstCharge(com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge value) {
        if (clientReviveFirstChargeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientReviveFirstCharge_ = value;
          onChanged();
        } else {
          clientReviveFirstChargeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      public Builder setClientReviveFirstCharge(
          com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.Builder builderForValue) {
        if (clientReviveFirstChargeBuilder_ == null) {
          clientReviveFirstCharge_ = builderForValue.build();
          onChanged();
        } else {
          clientReviveFirstChargeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      public Builder mergeClientReviveFirstCharge(com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge value) {
        if (clientReviveFirstChargeBuilder_ == null) {
          if (clientReviveFirstCharge_ != null) {
            clientReviveFirstCharge_ =
              com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.newBuilder(clientReviveFirstCharge_).mergeFrom(value).buildPartial();
          } else {
            clientReviveFirstCharge_ = value;
          }
          onChanged();
        } else {
          clientReviveFirstChargeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      public Builder clearClientReviveFirstCharge() {
        if (clientReviveFirstChargeBuilder_ == null) {
          clientReviveFirstCharge_ = null;
          onChanged();
        } else {
          clientReviveFirstCharge_ = null;
          clientReviveFirstChargeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.Builder getClientReviveFirstChargeBuilder() {
        
        onChanged();
        return getClientReviveFirstChargeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientReviveFirstChargeOrBuilder getClientReviveFirstChargeOrBuilder() {
        if (clientReviveFirstChargeBuilder_ != null) {
          return clientReviveFirstChargeBuilder_.getMessageOrBuilder();
        } else {
          return clientReviveFirstCharge_ == null ?
              com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.getDefaultInstance() : clientReviveFirstCharge_;
        }
      }
      /**
       * <pre>
       ** 获取新手启航礼包信息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveFirstCharge clientReviveFirstCharge = 1603;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge, com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.Builder, com.kys.util.netty.proto.ReviveProto.ClientReviveFirstChargeOrBuilder> 
          getClientReviveFirstChargeFieldBuilder() {
        if (clientReviveFirstChargeBuilder_ == null) {
          clientReviveFirstChargeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge, com.kys.util.netty.proto.ReviveProto.ClientReviveFirstCharge.Builder, com.kys.util.netty.proto.ReviveProto.ClientReviveFirstChargeOrBuilder>(
                  getClientReviveFirstCharge(),
                  getParentForChildren(),
                  isClean());
          clientReviveFirstCharge_ = null;
        }
        return clientReviveFirstChargeBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift clientReviveDayGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift, com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.Builder, com.kys.util.netty.proto.ReviveProto.ClientReviveDayGiftOrBuilder> clientReviveDayGiftBuilder_;
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      public boolean hasClientReviveDayGift() {
        return clientReviveDayGiftBuilder_ != null || clientReviveDayGift_ != null;
      }
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift getClientReviveDayGift() {
        if (clientReviveDayGiftBuilder_ == null) {
          return clientReviveDayGift_ == null ? com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.getDefaultInstance() : clientReviveDayGift_;
        } else {
          return clientReviveDayGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      public Builder setClientReviveDayGift(com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift value) {
        if (clientReviveDayGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientReviveDayGift_ = value;
          onChanged();
        } else {
          clientReviveDayGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      public Builder setClientReviveDayGift(
          com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.Builder builderForValue) {
        if (clientReviveDayGiftBuilder_ == null) {
          clientReviveDayGift_ = builderForValue.build();
          onChanged();
        } else {
          clientReviveDayGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      public Builder mergeClientReviveDayGift(com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift value) {
        if (clientReviveDayGiftBuilder_ == null) {
          if (clientReviveDayGift_ != null) {
            clientReviveDayGift_ =
              com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.newBuilder(clientReviveDayGift_).mergeFrom(value).buildPartial();
          } else {
            clientReviveDayGift_ = value;
          }
          onChanged();
        } else {
          clientReviveDayGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      public Builder clearClientReviveDayGift() {
        if (clientReviveDayGiftBuilder_ == null) {
          clientReviveDayGift_ = null;
          onChanged();
        } else {
          clientReviveDayGift_ = null;
          clientReviveDayGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.Builder getClientReviveDayGiftBuilder() {
        
        onChanged();
        return getClientReviveDayGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ClientReviveDayGiftOrBuilder getClientReviveDayGiftOrBuilder() {
        if (clientReviveDayGiftBuilder_ != null) {
          return clientReviveDayGiftBuilder_.getMessageOrBuilder();
        } else {
          return clientReviveDayGift_ == null ?
              com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.getDefaultInstance() : clientReviveDayGift_;
        }
      }
      /**
       * <pre>
       ** 获取每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReviveDayGift clientReviveDayGift = 1604;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift, com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.Builder, com.kys.util.netty.proto.ReviveProto.ClientReviveDayGiftOrBuilder> 
          getClientReviveDayGiftFieldBuilder() {
        if (clientReviveDayGiftBuilder_ == null) {
          clientReviveDayGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift, com.kys.util.netty.proto.ReviveProto.ClientReviveDayGift.Builder, com.kys.util.netty.proto.ReviveProto.ClientReviveDayGiftOrBuilder>(
                  getClientReviveDayGift(),
                  getParentForChildren(),
                  isClean());
          clientReviveDayGift_ = null;
        }
        return clientReviveDayGiftBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetRedTip clientGetRedTip_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRedTip, com.kys.util.netty.proto.HallProto.ClientGetRedTip.Builder, com.kys.util.netty.proto.HallProto.ClientGetRedTipOrBuilder> clientGetRedTipBuilder_;
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      public boolean hasClientGetRedTip() {
        return clientGetRedTipBuilder_ != null || clientGetRedTip_ != null;
      }
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRedTip getClientGetRedTip() {
        if (clientGetRedTipBuilder_ == null) {
          return clientGetRedTip_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRedTip.getDefaultInstance() : clientGetRedTip_;
        } else {
          return clientGetRedTipBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      public Builder setClientGetRedTip(com.kys.util.netty.proto.HallProto.ClientGetRedTip value) {
        if (clientGetRedTipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetRedTip_ = value;
          onChanged();
        } else {
          clientGetRedTipBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      public Builder setClientGetRedTip(
          com.kys.util.netty.proto.HallProto.ClientGetRedTip.Builder builderForValue) {
        if (clientGetRedTipBuilder_ == null) {
          clientGetRedTip_ = builderForValue.build();
          onChanged();
        } else {
          clientGetRedTipBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      public Builder mergeClientGetRedTip(com.kys.util.netty.proto.HallProto.ClientGetRedTip value) {
        if (clientGetRedTipBuilder_ == null) {
          if (clientGetRedTip_ != null) {
            clientGetRedTip_ =
              com.kys.util.netty.proto.HallProto.ClientGetRedTip.newBuilder(clientGetRedTip_).mergeFrom(value).buildPartial();
          } else {
            clientGetRedTip_ = value;
          }
          onChanged();
        } else {
          clientGetRedTipBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      public Builder clearClientGetRedTip() {
        if (clientGetRedTipBuilder_ == null) {
          clientGetRedTip_ = null;
          onChanged();
        } else {
          clientGetRedTip_ = null;
          clientGetRedTipBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRedTip.Builder getClientGetRedTipBuilder() {
        
        onChanged();
        return getClientGetRedTipFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRedTipOrBuilder getClientGetRedTipOrBuilder() {
        if (clientGetRedTipBuilder_ != null) {
          return clientGetRedTipBuilder_.getMessageOrBuilder();
        } else {
          return clientGetRedTip_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetRedTip.getDefaultInstance() : clientGetRedTip_;
        }
      }
      /**
       * <pre>
       ** 客户端获取大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRedTip clientGetRedTip = 1701;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRedTip, com.kys.util.netty.proto.HallProto.ClientGetRedTip.Builder, com.kys.util.netty.proto.HallProto.ClientGetRedTipOrBuilder> 
          getClientGetRedTipFieldBuilder() {
        if (clientGetRedTipBuilder_ == null) {
          clientGetRedTipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetRedTip, com.kys.util.netty.proto.HallProto.ClientGetRedTip.Builder, com.kys.util.netty.proto.HallProto.ClientGetRedTipOrBuilder>(
                  getClientGetRedTip(),
                  getParentForChildren(),
                  isClean());
          clientGetRedTip_ = null;
        }
        return clientGetRedTipBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo clientGetMatchInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo, com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchInfoOrBuilder> clientGetMatchInfoBuilder_;
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      public boolean hasClientGetMatchInfo() {
        return clientGetMatchInfoBuilder_ != null || clientGetMatchInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo getClientGetMatchInfo() {
        if (clientGetMatchInfoBuilder_ == null) {
          return clientGetMatchInfo_ == null ? com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.getDefaultInstance() : clientGetMatchInfo_;
        } else {
          return clientGetMatchInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      public Builder setClientGetMatchInfo(com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo value) {
        if (clientGetMatchInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMatchInfo_ = value;
          onChanged();
        } else {
          clientGetMatchInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      public Builder setClientGetMatchInfo(
          com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.Builder builderForValue) {
        if (clientGetMatchInfoBuilder_ == null) {
          clientGetMatchInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMatchInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      public Builder mergeClientGetMatchInfo(com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo value) {
        if (clientGetMatchInfoBuilder_ == null) {
          if (clientGetMatchInfo_ != null) {
            clientGetMatchInfo_ =
              com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.newBuilder(clientGetMatchInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetMatchInfo_ = value;
          }
          onChanged();
        } else {
          clientGetMatchInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      public Builder clearClientGetMatchInfo() {
        if (clientGetMatchInfoBuilder_ == null) {
          clientGetMatchInfo_ = null;
          onChanged();
        } else {
          clientGetMatchInfo_ = null;
          clientGetMatchInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.Builder getClientGetMatchInfoBuilder() {
        
        onChanged();
        return getClientGetMatchInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchInfoOrBuilder getClientGetMatchInfoOrBuilder() {
        if (clientGetMatchInfoBuilder_ != null) {
          return clientGetMatchInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMatchInfo_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.getDefaultInstance() : clientGetMatchInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchInfo clientGetMatchInfo = 1801;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo, com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchInfoOrBuilder> 
          getClientGetMatchInfoFieldBuilder() {
        if (clientGetMatchInfoBuilder_ == null) {
          clientGetMatchInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo, com.kys.util.netty.proto.MatchProto.ClientGetMatchInfo.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchInfoOrBuilder>(
                  getClientGetMatchInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetMatchInfo_ = null;
        }
        return clientGetMatchInfoBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail clientGetMatchDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail, com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchDetailOrBuilder> clientGetMatchDetailBuilder_;
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      public boolean hasClientGetMatchDetail() {
        return clientGetMatchDetailBuilder_ != null || clientGetMatchDetail_ != null;
      }
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail getClientGetMatchDetail() {
        if (clientGetMatchDetailBuilder_ == null) {
          return clientGetMatchDetail_ == null ? com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.getDefaultInstance() : clientGetMatchDetail_;
        } else {
          return clientGetMatchDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      public Builder setClientGetMatchDetail(com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail value) {
        if (clientGetMatchDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMatchDetail_ = value;
          onChanged();
        } else {
          clientGetMatchDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      public Builder setClientGetMatchDetail(
          com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.Builder builderForValue) {
        if (clientGetMatchDetailBuilder_ == null) {
          clientGetMatchDetail_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMatchDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      public Builder mergeClientGetMatchDetail(com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail value) {
        if (clientGetMatchDetailBuilder_ == null) {
          if (clientGetMatchDetail_ != null) {
            clientGetMatchDetail_ =
              com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.newBuilder(clientGetMatchDetail_).mergeFrom(value).buildPartial();
          } else {
            clientGetMatchDetail_ = value;
          }
          onChanged();
        } else {
          clientGetMatchDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      public Builder clearClientGetMatchDetail() {
        if (clientGetMatchDetailBuilder_ == null) {
          clientGetMatchDetail_ = null;
          onChanged();
        } else {
          clientGetMatchDetail_ = null;
          clientGetMatchDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.Builder getClientGetMatchDetailBuilder() {
        
        onChanged();
        return getClientGetMatchDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchDetailOrBuilder getClientGetMatchDetailOrBuilder() {
        if (clientGetMatchDetailBuilder_ != null) {
          return clientGetMatchDetailBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMatchDetail_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.getDefaultInstance() : clientGetMatchDetail_;
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchDetail clientGetMatchDetail = 1802;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail, com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchDetailOrBuilder> 
          getClientGetMatchDetailFieldBuilder() {
        if (clientGetMatchDetailBuilder_ == null) {
          clientGetMatchDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail, com.kys.util.netty.proto.MatchProto.ClientGetMatchDetail.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchDetailOrBuilder>(
                  getClientGetMatchDetail(),
                  getParentForChildren(),
                  isClean());
          clientGetMatchDetail_ = null;
        }
        return clientGetMatchDetailBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord clientGetMatchRecord_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord, com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchRecordOrBuilder> clientGetMatchRecordBuilder_;
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      public boolean hasClientGetMatchRecord() {
        return clientGetMatchRecordBuilder_ != null || clientGetMatchRecord_ != null;
      }
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord getClientGetMatchRecord() {
        if (clientGetMatchRecordBuilder_ == null) {
          return clientGetMatchRecord_ == null ? com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.getDefaultInstance() : clientGetMatchRecord_;
        } else {
          return clientGetMatchRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      public Builder setClientGetMatchRecord(com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord value) {
        if (clientGetMatchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMatchRecord_ = value;
          onChanged();
        } else {
          clientGetMatchRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      public Builder setClientGetMatchRecord(
          com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.Builder builderForValue) {
        if (clientGetMatchRecordBuilder_ == null) {
          clientGetMatchRecord_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMatchRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      public Builder mergeClientGetMatchRecord(com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord value) {
        if (clientGetMatchRecordBuilder_ == null) {
          if (clientGetMatchRecord_ != null) {
            clientGetMatchRecord_ =
              com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.newBuilder(clientGetMatchRecord_).mergeFrom(value).buildPartial();
          } else {
            clientGetMatchRecord_ = value;
          }
          onChanged();
        } else {
          clientGetMatchRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      public Builder clearClientGetMatchRecord() {
        if (clientGetMatchRecordBuilder_ == null) {
          clientGetMatchRecord_ = null;
          onChanged();
        } else {
          clientGetMatchRecord_ = null;
          clientGetMatchRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.Builder getClientGetMatchRecordBuilder() {
        
        onChanged();
        return getClientGetMatchRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientGetMatchRecordOrBuilder getClientGetMatchRecordOrBuilder() {
        if (clientGetMatchRecordBuilder_ != null) {
          return clientGetMatchRecordBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMatchRecord_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.getDefaultInstance() : clientGetMatchRecord_;
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMatchRecord clientGetMatchRecord = 1803;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord, com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchRecordOrBuilder> 
          getClientGetMatchRecordFieldBuilder() {
        if (clientGetMatchRecordBuilder_ == null) {
          clientGetMatchRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord, com.kys.util.netty.proto.MatchProto.ClientGetMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ClientGetMatchRecordOrBuilder>(
                  getClientGetMatchRecord(),
                  getParentForChildren(),
                  isClean());
          clientGetMatchRecord_ = null;
        }
        return clientGetMatchRecordBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientMatchApply clientMatchApply_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientMatchApply, com.kys.util.netty.proto.MatchProto.ClientMatchApply.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchApplyOrBuilder> clientMatchApplyBuilder_;
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      public boolean hasClientMatchApply() {
        return clientMatchApplyBuilder_ != null || clientMatchApply_ != null;
      }
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchApply getClientMatchApply() {
        if (clientMatchApplyBuilder_ == null) {
          return clientMatchApply_ == null ? com.kys.util.netty.proto.MatchProto.ClientMatchApply.getDefaultInstance() : clientMatchApply_;
        } else {
          return clientMatchApplyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      public Builder setClientMatchApply(com.kys.util.netty.proto.MatchProto.ClientMatchApply value) {
        if (clientMatchApplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientMatchApply_ = value;
          onChanged();
        } else {
          clientMatchApplyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      public Builder setClientMatchApply(
          com.kys.util.netty.proto.MatchProto.ClientMatchApply.Builder builderForValue) {
        if (clientMatchApplyBuilder_ == null) {
          clientMatchApply_ = builderForValue.build();
          onChanged();
        } else {
          clientMatchApplyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      public Builder mergeClientMatchApply(com.kys.util.netty.proto.MatchProto.ClientMatchApply value) {
        if (clientMatchApplyBuilder_ == null) {
          if (clientMatchApply_ != null) {
            clientMatchApply_ =
              com.kys.util.netty.proto.MatchProto.ClientMatchApply.newBuilder(clientMatchApply_).mergeFrom(value).buildPartial();
          } else {
            clientMatchApply_ = value;
          }
          onChanged();
        } else {
          clientMatchApplyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      public Builder clearClientMatchApply() {
        if (clientMatchApplyBuilder_ == null) {
          clientMatchApply_ = null;
          onChanged();
        } else {
          clientMatchApply_ = null;
          clientMatchApplyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchApply.Builder getClientMatchApplyBuilder() {
        
        onChanged();
        return getClientMatchApplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchApplyOrBuilder getClientMatchApplyOrBuilder() {
        if (clientMatchApplyBuilder_ != null) {
          return clientMatchApplyBuilder_.getMessageOrBuilder();
        } else {
          return clientMatchApply_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientMatchApply.getDefaultInstance() : clientMatchApply_;
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事报名 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchApply clientMatchApply = 1804;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientMatchApply, com.kys.util.netty.proto.MatchProto.ClientMatchApply.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchApplyOrBuilder> 
          getClientMatchApplyFieldBuilder() {
        if (clientMatchApplyBuilder_ == null) {
          clientMatchApplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientMatchApply, com.kys.util.netty.proto.MatchProto.ClientMatchApply.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchApplyOrBuilder>(
                  getClientMatchApply(),
                  getParentForChildren(),
                  isClean());
          clientMatchApply_ = null;
        }
        return clientMatchApplyBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientMatchCancel clientMatchCancel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientMatchCancel, com.kys.util.netty.proto.MatchProto.ClientMatchCancel.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchCancelOrBuilder> clientMatchCancelBuilder_;
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      public boolean hasClientMatchCancel() {
        return clientMatchCancelBuilder_ != null || clientMatchCancel_ != null;
      }
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchCancel getClientMatchCancel() {
        if (clientMatchCancelBuilder_ == null) {
          return clientMatchCancel_ == null ? com.kys.util.netty.proto.MatchProto.ClientMatchCancel.getDefaultInstance() : clientMatchCancel_;
        } else {
          return clientMatchCancelBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      public Builder setClientMatchCancel(com.kys.util.netty.proto.MatchProto.ClientMatchCancel value) {
        if (clientMatchCancelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientMatchCancel_ = value;
          onChanged();
        } else {
          clientMatchCancelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      public Builder setClientMatchCancel(
          com.kys.util.netty.proto.MatchProto.ClientMatchCancel.Builder builderForValue) {
        if (clientMatchCancelBuilder_ == null) {
          clientMatchCancel_ = builderForValue.build();
          onChanged();
        } else {
          clientMatchCancelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      public Builder mergeClientMatchCancel(com.kys.util.netty.proto.MatchProto.ClientMatchCancel value) {
        if (clientMatchCancelBuilder_ == null) {
          if (clientMatchCancel_ != null) {
            clientMatchCancel_ =
              com.kys.util.netty.proto.MatchProto.ClientMatchCancel.newBuilder(clientMatchCancel_).mergeFrom(value).buildPartial();
          } else {
            clientMatchCancel_ = value;
          }
          onChanged();
        } else {
          clientMatchCancelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      public Builder clearClientMatchCancel() {
        if (clientMatchCancelBuilder_ == null) {
          clientMatchCancel_ = null;
          onChanged();
        } else {
          clientMatchCancel_ = null;
          clientMatchCancelBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchCancel.Builder getClientMatchCancelBuilder() {
        
        onChanged();
        return getClientMatchCancelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchCancelOrBuilder getClientMatchCancelOrBuilder() {
        if (clientMatchCancelBuilder_ != null) {
          return clientMatchCancelBuilder_.getMessageOrBuilder();
        } else {
          return clientMatchCancel_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientMatchCancel.getDefaultInstance() : clientMatchCancel_;
        }
      }
      /**
       * <pre>
       ** 客户端请求取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchCancel clientMatchCancel = 1805;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientMatchCancel, com.kys.util.netty.proto.MatchProto.ClientMatchCancel.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchCancelOrBuilder> 
          getClientMatchCancelFieldBuilder() {
        if (clientMatchCancelBuilder_ == null) {
          clientMatchCancelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientMatchCancel, com.kys.util.netty.proto.MatchProto.ClientMatchCancel.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchCancelOrBuilder>(
                  getClientMatchCancel(),
                  getParentForChildren(),
                  isClean());
          clientMatchCancel_ = null;
        }
        return clientMatchCancelBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord clientOwnMatchRecord_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord, com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecordOrBuilder> clientOwnMatchRecordBuilder_;
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      public boolean hasClientOwnMatchRecord() {
        return clientOwnMatchRecordBuilder_ != null || clientOwnMatchRecord_ != null;
      }
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord getClientOwnMatchRecord() {
        if (clientOwnMatchRecordBuilder_ == null) {
          return clientOwnMatchRecord_ == null ? com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.getDefaultInstance() : clientOwnMatchRecord_;
        } else {
          return clientOwnMatchRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      public Builder setClientOwnMatchRecord(com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord value) {
        if (clientOwnMatchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientOwnMatchRecord_ = value;
          onChanged();
        } else {
          clientOwnMatchRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      public Builder setClientOwnMatchRecord(
          com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.Builder builderForValue) {
        if (clientOwnMatchRecordBuilder_ == null) {
          clientOwnMatchRecord_ = builderForValue.build();
          onChanged();
        } else {
          clientOwnMatchRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      public Builder mergeClientOwnMatchRecord(com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord value) {
        if (clientOwnMatchRecordBuilder_ == null) {
          if (clientOwnMatchRecord_ != null) {
            clientOwnMatchRecord_ =
              com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.newBuilder(clientOwnMatchRecord_).mergeFrom(value).buildPartial();
          } else {
            clientOwnMatchRecord_ = value;
          }
          onChanged();
        } else {
          clientOwnMatchRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      public Builder clearClientOwnMatchRecord() {
        if (clientOwnMatchRecordBuilder_ == null) {
          clientOwnMatchRecord_ = null;
          onChanged();
        } else {
          clientOwnMatchRecord_ = null;
          clientOwnMatchRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.Builder getClientOwnMatchRecordBuilder() {
        
        onChanged();
        return getClientOwnMatchRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecordOrBuilder getClientOwnMatchRecordOrBuilder() {
        if (clientOwnMatchRecordBuilder_ != null) {
          return clientOwnMatchRecordBuilder_.getMessageOrBuilder();
        } else {
          return clientOwnMatchRecord_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.getDefaultInstance() : clientOwnMatchRecord_;
        }
      }
      /**
       * <pre>
       ** 客户端获取自己记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnMatchRecord clientOwnMatchRecord = 1806;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord, com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecordOrBuilder> 
          getClientOwnMatchRecordFieldBuilder() {
        if (clientOwnMatchRecordBuilder_ == null) {
          clientOwnMatchRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord, com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ClientOwnMatchRecordOrBuilder>(
                  getClientOwnMatchRecord(),
                  getParentForChildren(),
                  isClean());
          clientOwnMatchRecord_ = null;
        }
        return clientOwnMatchRecordBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientApplyListChange clientApplyListChange_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientApplyListChange, com.kys.util.netty.proto.MatchProto.ClientApplyListChange.Builder, com.kys.util.netty.proto.MatchProto.ClientApplyListChangeOrBuilder> clientApplyListChangeBuilder_;
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      public boolean hasClientApplyListChange() {
        return clientApplyListChangeBuilder_ != null || clientApplyListChange_ != null;
      }
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientApplyListChange getClientApplyListChange() {
        if (clientApplyListChangeBuilder_ == null) {
          return clientApplyListChange_ == null ? com.kys.util.netty.proto.MatchProto.ClientApplyListChange.getDefaultInstance() : clientApplyListChange_;
        } else {
          return clientApplyListChangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      public Builder setClientApplyListChange(com.kys.util.netty.proto.MatchProto.ClientApplyListChange value) {
        if (clientApplyListChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientApplyListChange_ = value;
          onChanged();
        } else {
          clientApplyListChangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      public Builder setClientApplyListChange(
          com.kys.util.netty.proto.MatchProto.ClientApplyListChange.Builder builderForValue) {
        if (clientApplyListChangeBuilder_ == null) {
          clientApplyListChange_ = builderForValue.build();
          onChanged();
        } else {
          clientApplyListChangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      public Builder mergeClientApplyListChange(com.kys.util.netty.proto.MatchProto.ClientApplyListChange value) {
        if (clientApplyListChangeBuilder_ == null) {
          if (clientApplyListChange_ != null) {
            clientApplyListChange_ =
              com.kys.util.netty.proto.MatchProto.ClientApplyListChange.newBuilder(clientApplyListChange_).mergeFrom(value).buildPartial();
          } else {
            clientApplyListChange_ = value;
          }
          onChanged();
        } else {
          clientApplyListChangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      public Builder clearClientApplyListChange() {
        if (clientApplyListChangeBuilder_ == null) {
          clientApplyListChange_ = null;
          onChanged();
        } else {
          clientApplyListChange_ = null;
          clientApplyListChangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientApplyListChange.Builder getClientApplyListChangeBuilder() {
        
        onChanged();
        return getClientApplyListChangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientApplyListChangeOrBuilder getClientApplyListChangeOrBuilder() {
        if (clientApplyListChangeBuilder_ != null) {
          return clientApplyListChangeBuilder_.getMessageOrBuilder();
        } else {
          return clientApplyListChange_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientApplyListChange.getDefaultInstance() : clientApplyListChange_;
        }
      }
      /**
       * <pre>
       ** 客户端请求赛事列表人数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientApplyListChange clientApplyListChange = 1807;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientApplyListChange, com.kys.util.netty.proto.MatchProto.ClientApplyListChange.Builder, com.kys.util.netty.proto.MatchProto.ClientApplyListChangeOrBuilder> 
          getClientApplyListChangeFieldBuilder() {
        if (clientApplyListChangeBuilder_ == null) {
          clientApplyListChangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientApplyListChange, com.kys.util.netty.proto.MatchProto.ClientApplyListChange.Builder, com.kys.util.netty.proto.MatchProto.ClientApplyListChangeOrBuilder>(
                  getClientApplyListChange(),
                  getParentForChildren(),
                  isClean());
          clientApplyListChange_ = null;
        }
        return clientApplyListChangeBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientMatchScore clientMatchScore_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientMatchScore, com.kys.util.netty.proto.MatchProto.ClientMatchScore.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchScoreOrBuilder> clientMatchScoreBuilder_;
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      public boolean hasClientMatchScore() {
        return clientMatchScoreBuilder_ != null || clientMatchScore_ != null;
      }
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchScore getClientMatchScore() {
        if (clientMatchScoreBuilder_ == null) {
          return clientMatchScore_ == null ? com.kys.util.netty.proto.MatchProto.ClientMatchScore.getDefaultInstance() : clientMatchScore_;
        } else {
          return clientMatchScoreBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      public Builder setClientMatchScore(com.kys.util.netty.proto.MatchProto.ClientMatchScore value) {
        if (clientMatchScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientMatchScore_ = value;
          onChanged();
        } else {
          clientMatchScoreBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      public Builder setClientMatchScore(
          com.kys.util.netty.proto.MatchProto.ClientMatchScore.Builder builderForValue) {
        if (clientMatchScoreBuilder_ == null) {
          clientMatchScore_ = builderForValue.build();
          onChanged();
        } else {
          clientMatchScoreBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      public Builder mergeClientMatchScore(com.kys.util.netty.proto.MatchProto.ClientMatchScore value) {
        if (clientMatchScoreBuilder_ == null) {
          if (clientMatchScore_ != null) {
            clientMatchScore_ =
              com.kys.util.netty.proto.MatchProto.ClientMatchScore.newBuilder(clientMatchScore_).mergeFrom(value).buildPartial();
          } else {
            clientMatchScore_ = value;
          }
          onChanged();
        } else {
          clientMatchScoreBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      public Builder clearClientMatchScore() {
        if (clientMatchScoreBuilder_ == null) {
          clientMatchScore_ = null;
          onChanged();
        } else {
          clientMatchScore_ = null;
          clientMatchScoreBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchScore.Builder getClientMatchScoreBuilder() {
        
        onChanged();
        return getClientMatchScoreFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchScoreOrBuilder getClientMatchScoreOrBuilder() {
        if (clientMatchScoreBuilder_ != null) {
          return clientMatchScoreBuilder_.getMessageOrBuilder();
        } else {
          return clientMatchScore_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientMatchScore.getDefaultInstance() : clientMatchScore_;
        }
      }
      /**
       * <pre>
       ** 客户端获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchScore clientMatchScore = 1808;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientMatchScore, com.kys.util.netty.proto.MatchProto.ClientMatchScore.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchScoreOrBuilder> 
          getClientMatchScoreFieldBuilder() {
        if (clientMatchScoreBuilder_ == null) {
          clientMatchScoreBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientMatchScore, com.kys.util.netty.proto.MatchProto.ClientMatchScore.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchScoreOrBuilder>(
                  getClientMatchScore(),
                  getParentForChildren(),
                  isClean());
          clientMatchScore_ = null;
        }
        return clientMatchScoreBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ClientMatchConfig clientMatchConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientMatchConfig, com.kys.util.netty.proto.MatchProto.ClientMatchConfig.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchConfigOrBuilder> clientMatchConfigBuilder_;
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      public boolean hasClientMatchConfig() {
        return clientMatchConfigBuilder_ != null || clientMatchConfig_ != null;
      }
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchConfig getClientMatchConfig() {
        if (clientMatchConfigBuilder_ == null) {
          return clientMatchConfig_ == null ? com.kys.util.netty.proto.MatchProto.ClientMatchConfig.getDefaultInstance() : clientMatchConfig_;
        } else {
          return clientMatchConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      public Builder setClientMatchConfig(com.kys.util.netty.proto.MatchProto.ClientMatchConfig value) {
        if (clientMatchConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientMatchConfig_ = value;
          onChanged();
        } else {
          clientMatchConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      public Builder setClientMatchConfig(
          com.kys.util.netty.proto.MatchProto.ClientMatchConfig.Builder builderForValue) {
        if (clientMatchConfigBuilder_ == null) {
          clientMatchConfig_ = builderForValue.build();
          onChanged();
        } else {
          clientMatchConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      public Builder mergeClientMatchConfig(com.kys.util.netty.proto.MatchProto.ClientMatchConfig value) {
        if (clientMatchConfigBuilder_ == null) {
          if (clientMatchConfig_ != null) {
            clientMatchConfig_ =
              com.kys.util.netty.proto.MatchProto.ClientMatchConfig.newBuilder(clientMatchConfig_).mergeFrom(value).buildPartial();
          } else {
            clientMatchConfig_ = value;
          }
          onChanged();
        } else {
          clientMatchConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      public Builder clearClientMatchConfig() {
        if (clientMatchConfigBuilder_ == null) {
          clientMatchConfig_ = null;
          onChanged();
        } else {
          clientMatchConfig_ = null;
          clientMatchConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchConfig.Builder getClientMatchConfigBuilder() {
        
        onChanged();
        return getClientMatchConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ClientMatchConfigOrBuilder getClientMatchConfigOrBuilder() {
        if (clientMatchConfigBuilder_ != null) {
          return clientMatchConfigBuilder_.getMessageOrBuilder();
        } else {
          return clientMatchConfig_ == null ?
              com.kys.util.netty.proto.MatchProto.ClientMatchConfig.getDefaultInstance() : clientMatchConfig_;
        }
      }
      /**
       * <pre>
       ** 客户端赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMatchConfig clientMatchConfig = 1809;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ClientMatchConfig, com.kys.util.netty.proto.MatchProto.ClientMatchConfig.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchConfigOrBuilder> 
          getClientMatchConfigFieldBuilder() {
        if (clientMatchConfigBuilder_ == null) {
          clientMatchConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ClientMatchConfig, com.kys.util.netty.proto.MatchProto.ClientMatchConfig.Builder, com.kys.util.netty.proto.MatchProto.ClientMatchConfigOrBuilder>(
                  getClientMatchConfig(),
                  getParentForChildren(),
                  isClean());
          clientMatchConfig_ = null;
        }
        return clientMatchConfigBuilder_;
      }

      private com.kys.util.netty.proto.Triplekill.ClientGetKillCell clientGetKillCell_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ClientGetKillCell, com.kys.util.netty.proto.Triplekill.ClientGetKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientGetKillCellOrBuilder> clientGetKillCellBuilder_;
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      public boolean hasClientGetKillCell() {
        return clientGetKillCellBuilder_ != null || clientGetKillCell_ != null;
      }
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientGetKillCell getClientGetKillCell() {
        if (clientGetKillCellBuilder_ == null) {
          return clientGetKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ClientGetKillCell.getDefaultInstance() : clientGetKillCell_;
        } else {
          return clientGetKillCellBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      public Builder setClientGetKillCell(com.kys.util.netty.proto.Triplekill.ClientGetKillCell value) {
        if (clientGetKillCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetKillCell_ = value;
          onChanged();
        } else {
          clientGetKillCellBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      public Builder setClientGetKillCell(
          com.kys.util.netty.proto.Triplekill.ClientGetKillCell.Builder builderForValue) {
        if (clientGetKillCellBuilder_ == null) {
          clientGetKillCell_ = builderForValue.build();
          onChanged();
        } else {
          clientGetKillCellBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      public Builder mergeClientGetKillCell(com.kys.util.netty.proto.Triplekill.ClientGetKillCell value) {
        if (clientGetKillCellBuilder_ == null) {
          if (clientGetKillCell_ != null) {
            clientGetKillCell_ =
              com.kys.util.netty.proto.Triplekill.ClientGetKillCell.newBuilder(clientGetKillCell_).mergeFrom(value).buildPartial();
          } else {
            clientGetKillCell_ = value;
          }
          onChanged();
        } else {
          clientGetKillCellBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      public Builder clearClientGetKillCell() {
        if (clientGetKillCellBuilder_ == null) {
          clientGetKillCell_ = null;
          onChanged();
        } else {
          clientGetKillCell_ = null;
          clientGetKillCellBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientGetKillCell.Builder getClientGetKillCellBuilder() {
        
        onChanged();
        return getClientGetKillCellFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientGetKillCellOrBuilder getClientGetKillCellOrBuilder() {
        if (clientGetKillCellBuilder_ != null) {
          return clientGetKillCellBuilder_.getMessageOrBuilder();
        } else {
          return clientGetKillCell_ == null ?
              com.kys.util.netty.proto.Triplekill.ClientGetKillCell.getDefaultInstance() : clientGetKillCell_;
        }
      }
      /**
       * <pre>
       ** 客户端请求消除元素 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetKillCell clientGetKillCell = 1901;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ClientGetKillCell, com.kys.util.netty.proto.Triplekill.ClientGetKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientGetKillCellOrBuilder> 
          getClientGetKillCellFieldBuilder() {
        if (clientGetKillCellBuilder_ == null) {
          clientGetKillCellBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Triplekill.ClientGetKillCell, com.kys.util.netty.proto.Triplekill.ClientGetKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientGetKillCellOrBuilder>(
                  getClientGetKillCell(),
                  getParentForChildren(),
                  isClean());
          clientGetKillCell_ = null;
        }
        return clientGetKillCellBuilder_;
      }

      private com.kys.util.netty.proto.Triplekill.ClientEnterKillCell clientEnterKillCell_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ClientEnterKillCell, com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientEnterKillCellOrBuilder> clientEnterKillCellBuilder_;
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      public boolean hasClientEnterKillCell() {
        return clientEnterKillCellBuilder_ != null || clientEnterKillCell_ != null;
      }
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientEnterKillCell getClientEnterKillCell() {
        if (clientEnterKillCellBuilder_ == null) {
          return clientEnterKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.getDefaultInstance() : clientEnterKillCell_;
        } else {
          return clientEnterKillCellBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      public Builder setClientEnterKillCell(com.kys.util.netty.proto.Triplekill.ClientEnterKillCell value) {
        if (clientEnterKillCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientEnterKillCell_ = value;
          onChanged();
        } else {
          clientEnterKillCellBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      public Builder setClientEnterKillCell(
          com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.Builder builderForValue) {
        if (clientEnterKillCellBuilder_ == null) {
          clientEnterKillCell_ = builderForValue.build();
          onChanged();
        } else {
          clientEnterKillCellBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      public Builder mergeClientEnterKillCell(com.kys.util.netty.proto.Triplekill.ClientEnterKillCell value) {
        if (clientEnterKillCellBuilder_ == null) {
          if (clientEnterKillCell_ != null) {
            clientEnterKillCell_ =
              com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.newBuilder(clientEnterKillCell_).mergeFrom(value).buildPartial();
          } else {
            clientEnterKillCell_ = value;
          }
          onChanged();
        } else {
          clientEnterKillCellBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      public Builder clearClientEnterKillCell() {
        if (clientEnterKillCellBuilder_ == null) {
          clientEnterKillCell_ = null;
          onChanged();
        } else {
          clientEnterKillCell_ = null;
          clientEnterKillCellBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.Builder getClientEnterKillCellBuilder() {
        
        onChanged();
        return getClientEnterKillCellFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientEnterKillCellOrBuilder getClientEnterKillCellOrBuilder() {
        if (clientEnterKillCellBuilder_ != null) {
          return clientEnterKillCellBuilder_.getMessageOrBuilder();
        } else {
          return clientEnterKillCell_ == null ?
              com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.getDefaultInstance() : clientEnterKillCell_;
        }
      }
      /**
       * <pre>
       ** Client 请求进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterKillCell clientEnterKillCell = 1902;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ClientEnterKillCell, com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientEnterKillCellOrBuilder> 
          getClientEnterKillCellFieldBuilder() {
        if (clientEnterKillCellBuilder_ == null) {
          clientEnterKillCellBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Triplekill.ClientEnterKillCell, com.kys.util.netty.proto.Triplekill.ClientEnterKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientEnterKillCellOrBuilder>(
                  getClientEnterKillCell(),
                  getParentForChildren(),
                  isClean());
          clientEnterKillCell_ = null;
        }
        return clientEnterKillCellBuilder_;
      }

      private com.kys.util.netty.proto.Triplekill.ClientQuitKillCell clientQuitKillCell_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ClientQuitKillCell, com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientQuitKillCellOrBuilder> clientQuitKillCellBuilder_;
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      public boolean hasClientQuitKillCell() {
        return clientQuitKillCellBuilder_ != null || clientQuitKillCell_ != null;
      }
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientQuitKillCell getClientQuitKillCell() {
        if (clientQuitKillCellBuilder_ == null) {
          return clientQuitKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.getDefaultInstance() : clientQuitKillCell_;
        } else {
          return clientQuitKillCellBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      public Builder setClientQuitKillCell(com.kys.util.netty.proto.Triplekill.ClientQuitKillCell value) {
        if (clientQuitKillCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQuitKillCell_ = value;
          onChanged();
        } else {
          clientQuitKillCellBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      public Builder setClientQuitKillCell(
          com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.Builder builderForValue) {
        if (clientQuitKillCellBuilder_ == null) {
          clientQuitKillCell_ = builderForValue.build();
          onChanged();
        } else {
          clientQuitKillCellBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      public Builder mergeClientQuitKillCell(com.kys.util.netty.proto.Triplekill.ClientQuitKillCell value) {
        if (clientQuitKillCellBuilder_ == null) {
          if (clientQuitKillCell_ != null) {
            clientQuitKillCell_ =
              com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.newBuilder(clientQuitKillCell_).mergeFrom(value).buildPartial();
          } else {
            clientQuitKillCell_ = value;
          }
          onChanged();
        } else {
          clientQuitKillCellBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      public Builder clearClientQuitKillCell() {
        if (clientQuitKillCellBuilder_ == null) {
          clientQuitKillCell_ = null;
          onChanged();
        } else {
          clientQuitKillCell_ = null;
          clientQuitKillCellBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.Builder getClientQuitKillCellBuilder() {
        
        onChanged();
        return getClientQuitKillCellFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ClientQuitKillCellOrBuilder getClientQuitKillCellOrBuilder() {
        if (clientQuitKillCellBuilder_ != null) {
          return clientQuitKillCellBuilder_.getMessageOrBuilder();
        } else {
          return clientQuitKillCell_ == null ?
              com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.getDefaultInstance() : clientQuitKillCell_;
        }
      }
      /**
       * <pre>
       ** Client 请求退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuitKillCell clientQuitKillCell = 1903;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ClientQuitKillCell, com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientQuitKillCellOrBuilder> 
          getClientQuitKillCellFieldBuilder() {
        if (clientQuitKillCellBuilder_ == null) {
          clientQuitKillCellBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Triplekill.ClientQuitKillCell, com.kys.util.netty.proto.Triplekill.ClientQuitKillCell.Builder, com.kys.util.netty.proto.Triplekill.ClientQuitKillCellOrBuilder>(
                  getClientQuitKillCell(),
                  getParentForChildren(),
                  isClean());
          clientQuitKillCell_ = null;
        }
        return clientQuitKillCellBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.kys.util.netty.proto.ClientRequest)
    }

    // @@protoc_insertion_point(class_scope:com.kys.util.netty.proto.ClientRequest)
    private static final com.kys.util.netty.proto.ProtoMsg.ClientRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.kys.util.netty.proto.ProtoMsg.ClientRequest();
    }

    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClientRequest>
        PARSER = new com.google.protobuf.AbstractParser<ClientRequest>() {
      public ClientRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ClientRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClientRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClientRequest> getParserForType() {
      return PARSER;
    }

    public com.kys.util.netty.proto.ProtoMsg.ClientRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.kys.util.netty.proto.ServerResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 methodId = 1;</code>
     */
    int getMethodId();

    /**
     * <pre>
     ** 返回码，包含success和错误码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
     */
    int getResultValue();
    /**
     * <pre>
     ** 返回码，包含success和错误码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
     */
    com.kys.util.netty.proto.ProtoMsg.ResultCode getResult();

    /**
     * <pre>
     ** 错误展示字段，如果result不为0，则取该字段给用户展示 
     * </pre>
     *
     * <code>string errStr = 99;</code>
     */
    java.lang.String getErrStr();
    /**
     * <pre>
     ** 错误展示字段，如果result不为0，则取该字段给用户展示 
     * </pre>
     *
     * <code>string errStr = 99;</code>
     */
    com.google.protobuf.ByteString
        getErrStrBytes();

    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    boolean hasServerLogin();
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerLogin getServerLogin();
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder getServerLoginOrBuilder();

    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    boolean hasServerPlayerInfo();
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerPlayerInfo();
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerPlayerInfoOrBuilder();

    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    boolean hasServerSendHallHeartBeat();
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat getServerSendHallHeartBeat();
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder getServerSendHallHeartBeatOrBuilder();

    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    boolean hasServerSendGameHeartBeat();
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat getServerSendGameHeartBeat();
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder getServerSendGameHeartBeatOrBuilder();

    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    boolean hasServerGetUserInfo();
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerGetUserInfo();
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerGetUserInfoOrBuilder();

    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    boolean hasServerQuickJoin();
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerQuickJoin getServerQuickJoin();
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder getServerQuickJoinOrBuilder();

    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    boolean hasServerEnterRoom();
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerEnterRoom getServerEnterRoom();
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder getServerEnterRoomOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    boolean hasServerRecoverGame();
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerRecoverGame getServerRecoverGame();
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder getServerRecoverGameOrBuilder();

    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    boolean hasServerDoCatch();
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerDoCatch getServerDoCatch();
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder getServerDoCatchOrBuilder();

    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    boolean hasServerPlayCards();
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerPlayCards getServerPlayCards();
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder getServerPlayCardsOrBuilder();

    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    boolean hasServerAutoPlay();
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerAutoPlay getServerAutoPlay();
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder getServerAutoPlayOrBuilder();

    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    boolean hasServerLeaveRoom();
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerLeaveRoom getServerLeaveRoom();
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder getServerLeaveRoomOrBuilder();

    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    boolean hasServerCancleJoin();
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerCancleJoin getServerCancleJoin();
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder getServerCancleJoinOrBuilder();

    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    boolean hasServerQueryIndex();
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerQueryIndex getServerQueryIndex();
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder getServerQueryIndexOrBuilder();

    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    boolean hasServerRetryReturnGame();
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerRetryReturnGame getServerRetryReturnGame();
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder getServerRetryReturnGameOrBuilder();

    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    boolean hasServerGetRankList();
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRankList getServerGetRankList();
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder getServerGetRankListOrBuilder();

    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    boolean hasServerRewardMessage();
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerRewardMessage getServerRewardMessage();
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder getServerRewardMessageOrBuilder();

    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    boolean hasServerGetRoomConfig();
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomConfig getServerGetRoomConfig();
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder getServerGetRoomConfigOrBuilder();

    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    boolean hasServerGetMonthCardDiamond();
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond getServerGetMonthCardDiamond();
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder getServerGetMonthCardDiamondOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    boolean hasServerGetLotteryCount();
    /**
     * <pre>
     ** 服务器返回玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetLotteryCount getServerGetLotteryCount();
    /**
     * <pre>
     ** 服务器返回玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder getServerGetLotteryCountOrBuilder();

    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    boolean hasServerGetRoomInfo();
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomInfo getServerGetRoomInfo();
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder getServerGetRoomInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    boolean hasServerSendTelCode();
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSendTelCode getServerSendTelCode();
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder getServerSendTelCodeOrBuilder();

    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    boolean hasServerVerifyTelCode();
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerVerifyTelCode getServerVerifyTelCode();
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder getServerVerifyTelCodeOrBuilder();

    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    boolean hasServerSharePackage();
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSharePackage getServerSharePackage();
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder getServerSharePackageOrBuilder();

    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    boolean hasServerGetAwardList();
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetAwardList getServerGetAwardList();
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder getServerGetAwardListOrBuilder();

    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    boolean hasServerCheckConnect();
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerCheckConnect getServerCheckConnect();
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder getServerCheckConnectOrBuilder();

    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    boolean hasServerGetPFList();
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetPFList getServerGetPFList();
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder getServerGetPFListOrBuilder();

    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    boolean hasServerChoosePF();
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerChoosePF getServerChoosePF();
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder getServerChoosePFOrBuilder();

    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    boolean hasServerGetHistoryRank();
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetHistoryRank getServerGetHistoryRank();
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder getServerGetHistoryRankOrBuilder();

    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    boolean hasServerH5Reward();
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerH5Reward getServerH5Reward();
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder getServerH5RewardOrBuilder();

    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    boolean hasServerNewDrawWinCup();
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup getServerNewDrawWinCup();
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder getServerNewDrawWinCupOrBuilder();

    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    boolean hasServerGetNewHallInfo();
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo getServerGetNewHallInfo();
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder getServerGetNewHallInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
     */
    boolean hasServerLuckWall();
    /**
     * <pre>
     ** 服务器返回好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerLuckWall getServerLuckWall();
    /**
     * <pre>
     ** 服务器返回好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerLuckWallOrBuilder getServerLuckWallOrBuilder();

    /**
     * <pre>
     ** 服务器兑换码奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
     */
    boolean hasServerCdkeyAward();
    /**
     * <pre>
     ** 服务器兑换码奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerCdkeyAward getServerCdkeyAward();
    /**
     * <pre>
     ** 服务器兑换码奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerCdkeyAwardOrBuilder getServerCdkeyAwardOrBuilder();

    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
     */
    boolean hasServerGetStoreInfo();
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo getServerGetStoreInfo();
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetStoreInfoOrBuilder getServerGetStoreInfoOrBuilder();

    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    boolean hasServerConvertGoods();
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerConvertGoods getServerConvertGoods();
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder getServerConvertGoodsOrBuilder();

    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    boolean hasServerWXPayResult();
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerWXPayResult getServerWXPayResult();
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder getServerWXPayResultOrBuilder();

    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    boolean hasServerBuyOrderGoods();
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods getServerBuyOrderGoods();
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder getServerBuyOrderGoodsOrBuilder();

    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    boolean hasServerGetFirstCharge();
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge getServerGetFirstCharge();
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder getServerGetFirstChargeOrBuilder();

    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    boolean hasServerGetDailyGift();
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetDailyGift getServerGetDailyGift();
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder getServerGetDailyGiftOrBuilder();

    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    boolean hasServerGetMonthCard();
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetMonthCard getServerGetMonthCard();
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder getServerGetMonthCardOrBuilder();

    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    boolean hasServerGetResurgenceGift();
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift getServerGetResurgenceGift();
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder getServerGetResurgenceGiftOrBuilder();

    /**
     * <pre>
     ** 服务器返回兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
     */
    boolean hasServerGetConvertMessage();
    /**
     * <pre>
     ** 服务器返回兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage getServerGetConvertMessage();
    /**
     * <pre>
     ** 服务器返回兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetConvertMessageOrBuilder getServerGetConvertMessageOrBuilder();

    /**
     * <pre>
     ** 服务器返回下单接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
     */
    boolean hasServerNewBuyOrder();
    /**
     * <pre>
     ** 服务器返回下单接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder getServerNewBuyOrder();
    /**
     * <pre>
     ** 服务器返回下单接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerNewBuyOrderOrBuilder getServerNewBuyOrderOrBuilder();

    /**
     * <pre>
     ** Server 返回兑换商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
     */
    boolean hasServerNewConvert();
    /**
     * <pre>
     ** Server 返回兑换商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerNewConvert getServerNewConvert();
    /**
     * <pre>
     ** Server 返回兑换商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerNewConvertOrBuilder getServerNewConvertOrBuilder();

    /**
     * <pre>
     ** 服务器返回支付宝账号和名字信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
     */
    boolean hasServerAlipayAccount();
    /**
     * <pre>
     ** 服务器返回支付宝账号和名字信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerAlipayAccount getServerAlipayAccount();
    /**
     * <pre>
     ** 服务器返回支付宝账号和名字信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerAlipayAccountOrBuilder getServerAlipayAccountOrBuilder();

    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
     */
    boolean hasServerPayOptions();
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerPayOptions getServerPayOptions();
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerPayOptionsOrBuilder getServerPayOptionsOrBuilder();

    /**
     * <pre>
     ** 返回实名认证信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
     */
    boolean hasServerIdVerify();
    /**
     * <pre>
     ** 返回实名认证信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerIdVerify getServerIdVerify();
    /**
     * <pre>
     ** 返回实名认证信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerIdVerifyOrBuilder getServerIdVerifyOrBuilder();

    /**
     * <pre>
     ** 展示实名认证的奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
     */
    boolean hasServerVerifyAward();
    /**
     * <pre>
     ** 展示实名认证的奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerVerifyAward getServerVerifyAward();
    /**
     * <pre>
     ** 展示实名认证的奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerVerifyAwardOrBuilder getServerVerifyAwardOrBuilder();

    /**
     * <pre>
     ** 用于微信小程序支付的返回信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
     */
    boolean hasServerMiniAppPay();
    /**
     * <pre>
     ** 用于微信小程序支付的返回信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerMiniAppPay getServerMiniAppPay();
    /**
     * <pre>
     ** 用于微信小程序支付的返回信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerMiniAppPayOrBuilder getServerMiniAppPayOrBuilder();

    /**
     * <pre>
     ** 服务器返回银行卡卡号信息列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
     */
    boolean hasServerUnionAccount();
    /**
     * <pre>
     ** 服务器返回银行卡卡号信息列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerUnionAccount getServerUnionAccount();
    /**
     * <pre>
     ** 服务器返回银行卡卡号信息列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerUnionAccountOrBuilder getServerUnionAccountOrBuilder();

    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    boolean hasServerGetAnnounce();
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetAnnounce getServerGetAnnounce();
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder getServerGetAnnounceOrBuilder();

    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    boolean hasServerGetMail();
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMail getServerGetMail();
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder getServerGetMailOrBuilder();

    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    boolean hasServerGetMailReward();
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMailReward getServerGetMailReward();
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder getServerGetMailRewardOrBuilder();

    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    boolean hasServerDelMail();
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDelMail getServerDelMail();
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder getServerDelMailOrBuilder();

    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    boolean hasServerReadMail();
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerReadMail getServerReadMail();
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder getServerReadMailOrBuilder();

    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    boolean hasServerDel2R();
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDel2R getServerDel2R();
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder getServerDel2ROrBuilder();

    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    boolean hasServerQueryDailyTask();
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryDailyTask getServerQueryDailyTask();
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder getServerQueryDailyTaskOrBuilder();

    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    boolean hasServerGetNoviceReward();
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetNoviceReward getServerGetNoviceReward();
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder getServerGetNoviceRewardOrBuilder();

    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    boolean hasServerQueryNoviceTask();
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask getServerQueryNoviceTask();
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder getServerQueryNoviceTaskOrBuilder();

    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    boolean hasServerGetDTAward();
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetDTAward getServerGetDTAward();
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder getServerGetDTAwardOrBuilder();

    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    boolean hasServerGetReceiveAddr();
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr getServerGetReceiveAddr();
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder getServerGetReceiveAddrOrBuilder();

    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    boolean hasServerAlterReceiveAddr();
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr getServerAlterReceiveAddr();
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder getServerAlterReceiveAddrOrBuilder();

    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    boolean hasServerSnatchList();
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchList getServerSnatchList();
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder getServerSnatchListOrBuilder();

    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    boolean hasServerSnatchItemDetail();
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail getServerSnatchItemDetail();
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder getServerSnatchItemDetailOrBuilder();

    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    boolean hasServerSnatchBet();
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchBet getServerSnatchBet();
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder getServerSnatchBetOrBuilder();

    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    boolean hasServerSnatchAwardList();
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList getServerSnatchAwardList();
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder getServerSnatchAwardListOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    boolean hasServerOwnSnatchRecord();
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord getServerOwnSnatchRecord();
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder getServerOwnSnatchRecordOrBuilder();

    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    boolean hasServerSnatchItemHistory();
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory getServerSnatchItemHistory();
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder getServerSnatchItemHistoryOrBuilder();

    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    boolean hasServerSnatchHistoryDetail();
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail getServerSnatchHistoryDetail();
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder getServerSnatchHistoryDetailOrBuilder();

    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    boolean hasServerSnatchGetAward();
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward getServerSnatchGetAward();
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder getServerSnatchGetAwardOrBuilder();

    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    boolean hasServerEnterDG();
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerEnterDG getServerEnterDG();
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder getServerEnterDGOrBuilder();

    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    boolean hasServerDGLottery();
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerDGLottery getServerDGLottery();
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder getServerDGLotteryOrBuilder();

    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    boolean hasServerResetLottery();
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerResetLottery getServerResetLottery();
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder getServerResetLotteryOrBuilder();

    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    boolean hasServerExitDG();
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerExitDG getServerExitDG();
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder getServerExitDGOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    boolean hasServerOpenDG();
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOpenDG getServerOpenDG();
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder getServerOpenDGOrBuilder();

    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    boolean hasServerOpenDD();
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOpenDD getServerOpenDD();
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder getServerOpenDDOrBuilder();

    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    boolean hasServerDDLottery();
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerDDLottery getServerDDLottery();
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder getServerDDLotteryOrBuilder();

    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    boolean hasServerExitDD();
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerExitDD getServerExitDD();
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder getServerExitDDOrBuilder();

    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    boolean hasServerQueryProp();
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerQueryProp getServerQueryProp();
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder getServerQueryPropOrBuilder();

    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    boolean hasServerUseProp();
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerUseProp getServerUseProp();
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder getServerUsePropOrBuilder();

    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    boolean hasServerQueryPropCount();
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerQueryPropCount getServerQueryPropCount();
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder getServerQueryPropCountOrBuilder();

    /**
     * <pre>
     ** 服务端返回签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
     */
    boolean hasServerSignInfo();
    /**
     * <pre>
     ** 服务端返回签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerSignInfo getServerSignInfo();
    /**
     * <pre>
     ** 服务端返回签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerSignInfoOrBuilder getServerSignInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
     */
    boolean hasServerSignAward();
    /**
     * <pre>
     ** 服务器返回签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerSignAward getServerSignAward();
    /**
     * <pre>
     ** 服务器返回签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerSignAwardOrBuilder getServerSignAwardOrBuilder();

    /**
     * <pre>
     ** 服务端返回签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
     */
    boolean hasServerSignState();
    /**
     * <pre>
     ** 服务端返回签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerSignState getServerSignState();
    /**
     * <pre>
     ** 服务端返回签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerSignStateOrBuilder getServerSignStateOrBuilder();

    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    boolean hasServerLTLottery();
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerLTLottery getServerLTLottery();
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder getServerLTLotteryOrBuilder();

    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    boolean hasServerGetTSReward();
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetTSReward getServerGetTSReward();
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder getServerGetTSRewardOrBuilder();

    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    boolean hasServerGetLuckInfo();
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetLuckInfo getServerGetLuckInfo();
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder getServerGetLuckInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
     */
    boolean hasServerGetVip();
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
     */
    com.kys.util.netty.proto.VipProto.ServerGetVip getServerGetVip();
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
     */
    com.kys.util.netty.proto.VipProto.ServerGetVipOrBuilder getServerGetVipOrBuilder();

    /**
     * <pre>
     ** 服务器返回领取VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
     */
    boolean hasServerGetDayGift();
    /**
     * <pre>
     ** 服务器返回领取VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
     */
    com.kys.util.netty.proto.VipProto.ServerGetDayGift getServerGetDayGift();
    /**
     * <pre>
     ** 服务器返回领取VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
     */
    com.kys.util.netty.proto.VipProto.ServerGetDayGiftOrBuilder getServerGetDayGiftOrBuilder();

    /**
     * <pre>
     ** 服务端返回进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
     */
    boolean hasServerEnterSleeve();
    /**
     * <pre>
     ** 服务端返回进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerEnterSleeve getServerEnterSleeve();
    /**
     * <pre>
     ** 服务端返回进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerEnterSleeveOrBuilder getServerEnterSleeveOrBuilder();

    /**
     * <pre>
     ** 服务端返回套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
     */
    boolean hasServerSleeveSheep();
    /**
     * <pre>
     ** 服务端返回套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerSleeveSheep getServerSleeveSheep();
    /**
     * <pre>
     ** 服务端返回套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerSleeveSheepOrBuilder getServerSleeveSheepOrBuilder();

    /**
     * <pre>
     ** 服务器返回查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
     */
    boolean hasServerQueryPlayerCoin();
    /**
     * <pre>
     ** 服务器返回查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin getServerQueryPlayerCoin();
    /**
     * <pre>
     ** 服务器返回查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoinOrBuilder getServerQueryPlayerCoinOrBuilder();

    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
     */
    boolean hasServerExitSleeve();
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerExitSleeve getServerExitSleeve();
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerExitSleeveOrBuilder getServerExitSleeveOrBuilder();

    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
     */
    boolean hasServerEnterNewSleeve();
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve getServerEnterNewSleeve();
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeveOrBuilder getServerEnterNewSleeveOrBuilder();

    /**
     * <pre>
     ** 服务器返回开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
     */
    boolean hasServerNewSleeveSheep();
    /**
     * <pre>
     ** 服务器返回开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep getServerNewSleeveSheep();
    /**
     * <pre>
     ** 服务器返回开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheepOrBuilder getServerNewSleeveSheepOrBuilder();

    /**
     * <pre>
     ** 服务器返回套羊结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
     */
    boolean hasServerNewSleeveResult();
    /**
     * <pre>
     ** 服务器返回套羊结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult getServerNewSleeveResult();
    /**
     * <pre>
     ** 服务器返回套羊结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerNewSleeveResultOrBuilder getServerNewSleeveResultOrBuilder();

    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
     */
    boolean hasServerExitNewSleeve();
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve getServerExitNewSleeve();
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
     */
    com.kys.util.netty.proto.LittleProto.ServerExitNewSleeveOrBuilder getServerExitNewSleeveOrBuilder();

    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
     */
    boolean hasServer2DoCatch();
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch getServer2DoCatch();
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Server_2_DoCatchOrBuilder getServer2DoCatchOrBuilder();

    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
     */
    boolean hasServer2PlayCards();
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards getServer2PlayCards();
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Server_2_PlayCardsOrBuilder getServer2PlayCardsOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
     */
    boolean hasServer2RecoverGame();
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame getServer2RecoverGame();
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGameOrBuilder getServer2RecoverGameOrBuilder();

    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
     */
    boolean hasServer2LeaveRoom();
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom getServer2LeaveRoom();
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
     */
    com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoomOrBuilder getServer2LeaveRoomOrBuilder();

    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
     */
    boolean hasServerMineShare();
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerMineShare getServerMineShare();
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerMineShareOrBuilder getServerMineShareOrBuilder();

    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
     */
    boolean hasServerGetMSAward();
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerGetMSAward getServerGetMSAward();
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerGetMSAwardOrBuilder getServerGetMSAwardOrBuilder();

    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
     */
    boolean hasServerFriendShare();
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerFriendShare getServerFriendShare();
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerFriendShareOrBuilder getServerFriendShareOrBuilder();

    /**
     * <pre>
     ** 服务器返回好友福利 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
     */
    boolean hasServerGetFSAward();
    /**
     * <pre>
     ** 服务器返回好友福利 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerGetFSAward getServerGetFSAward();
    /**
     * <pre>
     ** 服务器返回好友福利 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerGetFSAwardOrBuilder getServerGetFSAwardOrBuilder();

    /**
     * <pre>
     ** 服务器返回邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
     */
    boolean hasServerGetShareTask();
    /**
     * <pre>
     ** 服务器返回邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerGetShareTask getServerGetShareTask();
    /**
     * <pre>
     ** 服务器返回邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerGetShareTaskOrBuilder getServerGetShareTaskOrBuilder();

    /**
     * <pre>
     ** 服务器返回邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
     */
    boolean hasServerGetShareTaskAward();
    /**
     * <pre>
     ** 服务器返回邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward getServerGetShareTaskAward();
    /**
     * <pre>
     ** 服务器返回邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
     */
    com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAwardOrBuilder getServerGetShareTaskAwardOrBuilder();

    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
     */
    boolean hasServerQueryReviveInfo();
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo getServerQueryReviveInfo();
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfoOrBuilder getServerQueryReviveInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回使用复活结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
     */
    boolean hasServerUseRevive();
    /**
     * <pre>
     ** 服务器返回使用复活结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ServerUseRevive getServerUseRevive();
    /**
     * <pre>
     ** 服务器返回使用复活结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ServerUseReviveOrBuilder getServerUseReviveOrBuilder();

    /**
     * <pre>
     ** 服务器返回新手启航礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
     */
    boolean hasServerReviveFirstCharge();
    /**
     * <pre>
     ** 服务器返回新手启航礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge getServerReviveFirstCharge();
    /**
     * <pre>
     ** 服务器返回新手启航礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ServerReviveFirstChargeOrBuilder getServerReviveFirstChargeOrBuilder();

    /**
     * <pre>
     ** 服务器返回每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
     */
    boolean hasServerReviveDayGift();
    /**
     * <pre>
     ** 服务器返回每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift getServerReviveDayGift();
    /**
     * <pre>
     ** 服务器返回每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
     */
    com.kys.util.netty.proto.ReviveProto.ServerReviveDayGiftOrBuilder getServerReviveDayGiftOrBuilder();

    /**
     * <pre>
     ** 服务器返回大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
     */
    boolean hasServerGetRedTip();
    /**
     * <pre>
     ** 服务器返回大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRedTip getServerGetRedTip();
    /**
     * <pre>
     ** 服务器返回大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRedTipOrBuilder getServerGetRedTipOrBuilder();

    /**
     * <pre>
     ** 服务器返回赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
     */
    boolean hasServerGetMatchInfo();
    /**
     * <pre>
     ** 服务器返回赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo getServerGetMatchInfo();
    /**
     * <pre>
     ** 服务器返回赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerGetMatchInfoOrBuilder getServerGetMatchInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
     */
    boolean hasServerGetMatchDetail();
    /**
     * <pre>
     ** 服务器返回赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail getServerGetMatchDetail();
    /**
     * <pre>
     ** 服务器返回赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerGetMatchDetailOrBuilder getServerGetMatchDetailOrBuilder();

    /**
     * <pre>
     ** 服务器返回赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
     */
    boolean hasServerGetMatchRecord();
    /**
     * <pre>
     ** 服务器返回赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord getServerGetMatchRecord();
    /**
     * <pre>
     ** 服务器返回赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerGetMatchRecordOrBuilder getServerGetMatchRecordOrBuilder();

    /**
     * <pre>
     ** 服务器返回赛事报名结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
     */
    boolean hasServerMatchApply();
    /**
     * <pre>
     ** 服务器返回赛事报名结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerMatchApply getServerMatchApply();
    /**
     * <pre>
     ** 服务器返回赛事报名结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerMatchApplyOrBuilder getServerMatchApplyOrBuilder();

    /**
     * <pre>
     ** 服务器返回取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
     */
    boolean hasServerMatchCancel();
    /**
     * <pre>
     ** 服务器返回取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerMatchCancel getServerMatchCancel();
    /**
     * <pre>
     ** 服务器返回取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerMatchCancelOrBuilder getServerMatchCancelOrBuilder();

    /**
     * <pre>
     ** 服务器返回自己历史记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
     */
    boolean hasServerOwnMatchRecord();
    /**
     * <pre>
     ** 服务器返回自己历史记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord getServerOwnMatchRecord();
    /**
     * <pre>
     ** 服务器返回自己历史记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecordOrBuilder getServerOwnMatchRecordOrBuilder();

    /**
     * <pre>
     ** 服务器返回赛事列表参赛人数变化推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
     */
    boolean hasServerApplyListChange();
    /**
     * <pre>
     ** 服务器返回赛事列表参赛人数变化推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerApplyListChange getServerApplyListChange();
    /**
     * <pre>
     ** 服务器返回赛事列表参赛人数变化推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerApplyListChangeOrBuilder getServerApplyListChangeOrBuilder();

    /**
     * <pre>
     ** 服务器返回获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
     */
    boolean hasServerMatchScore();
    /**
     * <pre>
     ** 服务器返回获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerMatchScore getServerMatchScore();
    /**
     * <pre>
     ** 服务器返回获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerMatchScoreOrBuilder getServerMatchScoreOrBuilder();

    /**
     * <pre>
     ** 服务器返回赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
     */
    boolean hasServerMatchConfig();
    /**
     * <pre>
     ** 服务器返回赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerMatchConfig getServerMatchConfig();
    /**
     * <pre>
     ** 服务器返回赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
     */
    com.kys.util.netty.proto.MatchProto.ServerMatchConfigOrBuilder getServerMatchConfigOrBuilder();

    /**
     * <pre>
     ** 服务器返回消除元素信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
     */
    boolean hasServerGetKillCell();
    /**
     * <pre>
     ** 服务器返回消除元素信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
     */
    com.kys.util.netty.proto.Triplekill.ServerGetKillCell getServerGetKillCell();
    /**
     * <pre>
     ** 服务器返回消除元素信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
     */
    com.kys.util.netty.proto.Triplekill.ServerGetKillCellOrBuilder getServerGetKillCellOrBuilder();

    /**
     * <pre>
     ** 服务器返回进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
     */
    boolean hasServerEnterKillCell();
    /**
     * <pre>
     ** 服务器返回进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
     */
    com.kys.util.netty.proto.Triplekill.ServerEnterKillCell getServerEnterKillCell();
    /**
     * <pre>
     ** 服务器返回进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
     */
    com.kys.util.netty.proto.Triplekill.ServerEnterKillCellOrBuilder getServerEnterKillCellOrBuilder();

    /**
     * <pre>
     ** 服务器返回退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
     */
    boolean hasServerQuitKillCell();
    /**
     * <pre>
     ** 服务器返回退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
     */
    com.kys.util.netty.proto.Triplekill.ServerQuitKillCell getServerQuitKillCell();
    /**
     * <pre>
     ** 服务器返回退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
     */
    com.kys.util.netty.proto.Triplekill.ServerQuitKillCellOrBuilder getServerQuitKillCellOrBuilder();

    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    boolean hasBGameStart();
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    com.kys.util.netty.proto.GameProto.B_GameStart getBGameStart();
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder getBGameStartOrBuilder();

    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    boolean hasBDoCatch();
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    com.kys.util.netty.proto.GameProto.B_DoCatch getBDoCatch();
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder getBDoCatchOrBuilder();

    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    boolean hasBCatchResult();
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    com.kys.util.netty.proto.GameProto.B_CatchResult getBCatchResult();
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder getBCatchResultOrBuilder();

    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    boolean hasBPlayCards();
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    com.kys.util.netty.proto.GameProto.B_PlayCards getBPlayCards();
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder getBPlayCardsOrBuilder();

    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    boolean hasBSendDiZhuCard();
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    com.kys.util.netty.proto.GameProto.B_SendDiZhuCard getBSendDiZhuCard();
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder getBSendDiZhuCardOrBuilder();

    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    boolean hasBNextPlayer();
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    com.kys.util.netty.proto.GameProto.B_NextPlayer getBNextPlayer();
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder getBNextPlayerOrBuilder();

    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    boolean hasBGameSettle();
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    com.kys.util.netty.proto.GameProto.B_GameSettle getBGameSettle();
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder getBGameSettleOrBuilder();

    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    boolean hasBRewardMessage();
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    com.kys.util.netty.proto.HallProto.B_RewardMessage getBRewardMessage();
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder getBRewardMessageOrBuilder();

    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    boolean hasBAutoPlay();
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    com.kys.util.netty.proto.GameProto.B_AutoPlay getBAutoPlay();
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder getBAutoPlayOrBuilder();

    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    boolean hasBRoomIdUrl();
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    com.kys.util.netty.proto.GameProto.B_RoomIdUrl getBRoomIdUrl();
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder getBRoomIdUrlOrBuilder();

    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    boolean hasBAwardDialog();
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    com.kys.util.netty.proto.HallProto.B_AwardDialog getBAwardDialog();
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder getBAwardDialogOrBuilder();

    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    boolean hasBBuySuccess();
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    com.kys.util.netty.proto.StoreProto.B_BuySuccess getBBuySuccess();
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder getBBuySuccessOrBuilder();

    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    boolean hasBRedDotPush();
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    com.kys.util.netty.proto.HallProto.B_RedDotPush getBRedDotPush();
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder getBRedDotPushOrBuilder();

    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    boolean hasBForceAnnounce();
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    com.kys.util.netty.proto.HallProto.B_ForceAnnounce getBForceAnnounce();
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder getBForceAnnounceOrBuilder();

    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    boolean hasBDGameMessage();
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DGameMessage getBDGameMessage();
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder getBDGameMessageOrBuilder();

    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    boolean hasBDGOver();
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DGOver getBDGOver();
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder getBDGOverOrBuilder();

    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    boolean hasBDDOver();
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DDOver getBDDOver();
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder getBDDOverOrBuilder();

    /**
     * <pre>
     ** 广播钻石抽奖[跑马灯] 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    boolean hasBDDInfo();
    /**
     * <pre>
     ** 广播钻石抽奖[跑马灯] 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DDInfo getBDDInfo();
    /**
     * <pre>
     ** 广播钻石抽奖[跑马灯] 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder getBDDInfoOrBuilder();

    /**
     * <pre>
     ** 广播套羊跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
     */
    boolean hasBSSInfo();
    /**
     * <pre>
     ** 广播套羊跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
     */
    com.kys.util.netty.proto.LittleProto.B_SSInfo getBSSInfo();
    /**
     * <pre>
     ** 广播套羊跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
     */
    com.kys.util.netty.proto.LittleProto.B_SSInfoOrBuilder getBSSInfoOrBuilder();

    /**
     * <pre>
     ** 套羊跑马灯信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
     */
    boolean hasBNewSleeveSheepInfo();
    /**
     * <pre>
     ** 套羊跑马灯信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
     */
    com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo getBNewSleeveSheepInfo();
    /**
     * <pre>
     ** 套羊跑马灯信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
     */
    com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfoOrBuilder getBNewSleeveSheepInfoOrBuilder();

    /**
     * <pre>
     ** 广播新套羊活动结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
     */
    boolean hasBNewSleeverOver();
    /**
     * <pre>
     ** 广播新套羊活动结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
     */
    com.kys.util.netty.proto.LittleProto.B_NewSleeverOver getBNewSleeverOver();
    /**
     * <pre>
     ** 广播新套羊活动结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
     */
    com.kys.util.netty.proto.LittleProto.B_NewSleeverOverOrBuilder getBNewSleeverOverOrBuilder();

    /**
     * <pre>
     ** 服务器推送钻石复活次数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
     */
    boolean hasBDiamondReviveInfo();
    /**
     * <pre>
     ** 服务器推送钻石复活次数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
     */
    com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo getBDiamondReviveInfo();
    /**
     * <pre>
     ** 服务器推送钻石复活次数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
     */
    com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfoOrBuilder getBDiamondReviveInfoOrBuilder();

    /**
     * <pre>
     ** 二人场-广播有玩家进行托管了 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
     */
    boolean hasB2AutoPlay();
    /**
     * <pre>
     ** 二人场-广播有玩家进行托管了 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay getB2AutoPlay();
    /**
     * <pre>
     ** 二人场-广播有玩家进行托管了 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_AutoPlayOrBuilder getB2AutoPlayOrBuilder();

    /**
     * <pre>
     ** 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
     */
    boolean hasB2GameStart();
    /**
     * <pre>
     ** 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_GameStart getB2GameStart();
    /**
     * <pre>
     ** 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_GameStartOrBuilder getB2GameStartOrBuilder();

    /**
     * <pre>
     ** 二人场-通知叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
     */
    boolean hasB2DoCatch();
    /**
     * <pre>
     ** 二人场-通知叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_DoCatch getB2DoCatch();
    /**
     * <pre>
     ** 二人场-通知叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_DoCatchOrBuilder getB2DoCatchOrBuilder();

    /**
     * <pre>
     ** 二人场-广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
     */
    boolean hasB2CatchResult();
    /**
     * <pre>
     ** 二人场-广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_CatchResult getB2CatchResult();
    /**
     * <pre>
     ** 二人场-广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_CatchResultOrBuilder getB2CatchResultOrBuilder();

    /**
     * <pre>
     ** 二人场-广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
     */
    boolean hasB2SendDiZhuCard();
    /**
     * <pre>
     ** 二人场-广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard getB2SendDiZhuCard();
    /**
     * <pre>
     ** 二人场-广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCardOrBuilder getB2SendDiZhuCardOrBuilder();

    /**
     * <pre>
     ** 二人场-服务器推送游戏结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
     */
    boolean hasB2GameSettle();
    /**
     * <pre>
     ** 二人场-服务器推送游戏结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_GameSettle getB2GameSettle();
    /**
     * <pre>
     ** 二人场-服务器推送游戏结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
     */
    com.kys.util.netty.proto.Game2Proto.B_2_GameSettleOrBuilder getB2GameSettleOrBuilder();

    /**
     * <pre>
     ** 赛事准备开始的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
     */
    boolean hasBMatchStart();
    /**
     * <pre>
     ** 赛事准备开始的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
     */
    com.kys.util.netty.proto.MatchProto.B_MatchStart getBMatchStart();
    /**
     * <pre>
     ** 赛事准备开始的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
     */
    com.kys.util.netty.proto.MatchProto.B_MatchStartOrBuilder getBMatchStartOrBuilder();

    /**
     * <pre>
     ** 赛事结束等待的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
     */
    boolean hasBMatchEnd();
    /**
     * <pre>
     ** 赛事结束等待的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
     */
    com.kys.util.netty.proto.MatchProto.B_MatchEnd getBMatchEnd();
    /**
     * <pre>
     ** 赛事结束等待的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
     */
    com.kys.util.netty.proto.MatchProto.B_MatchEndOrBuilder getBMatchEndOrBuilder();

    /**
     * <pre>
     ** 赛事结算的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
     */
    boolean hasBMatchResult();
    /**
     * <pre>
     ** 赛事结算的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
     */
    com.kys.util.netty.proto.MatchProto.B_MatchResult getBMatchResult();
    /**
     * <pre>
     ** 赛事结算的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
     */
    com.kys.util.netty.proto.MatchProto.B_MatchResultOrBuilder getBMatchResultOrBuilder();
  }
  /**
   * <pre>
   ** 所有下行请求都是serverResponse，服务器会传递具体内容的标示methodId，客户端根据methodId进行处理 
   * </pre>
   *
   * Protobuf type {@code com.kys.util.netty.proto.ServerResponse}
   */
  public  static final class ServerResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.kys.util.netty.proto.ServerResponse)
      ServerResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServerResponse.newBuilder() to construct.
    private ServerResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServerResponse() {
      methodId_ = 0;
      result_ = 0;
      errStr_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ServerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      int mutable_bitField3_ = 0;
      int mutable_bitField4_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              methodId_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              result_ = rawValue;
              break;
            }
            case 26: {
              com.kys.util.netty.proto.LoginProto.ServerLogin.Builder subBuilder = null;
              if (serverLogin_ != null) {
                subBuilder = serverLogin_.toBuilder();
              }
              serverLogin_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ServerLogin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverLogin_);
                serverLogin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder subBuilder = null;
              if (serverPlayerInfo_ != null) {
                subBuilder = serverPlayerInfo_.toBuilder();
              }
              serverPlayerInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ServerGetUserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverPlayerInfo_);
                serverPlayerInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder subBuilder = null;
              if (serverSendHallHeartBeat_ != null) {
                subBuilder = serverSendHallHeartBeat_.toBuilder();
              }
              serverSendHallHeartBeat_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSendHallHeartBeat_);
                serverSendHallHeartBeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder subBuilder = null;
              if (serverSendGameHeartBeat_ != null) {
                subBuilder = serverSendGameHeartBeat_.toBuilder();
              }
              serverSendGameHeartBeat_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSendGameHeartBeat_);
                serverSendGameHeartBeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder subBuilder = null;
              if (serverGetUserInfo_ != null) {
                subBuilder = serverGetUserInfo_.toBuilder();
              }
              serverGetUserInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ServerGetUserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetUserInfo_);
                serverGetUserInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 794: {
              java.lang.String s = input.readStringRequireUtf8();

              errStr_ = s;
              break;
            }
            case 802: {
              com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder subBuilder = null;
              if (serverQuickJoin_ != null) {
                subBuilder = serverQuickJoin_.toBuilder();
              }
              serverQuickJoin_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerQuickJoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQuickJoin_);
                serverQuickJoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 810: {
              com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder subBuilder = null;
              if (serverEnterRoom_ != null) {
                subBuilder = serverEnterRoom_.toBuilder();
              }
              serverEnterRoom_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerEnterRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverEnterRoom_);
                serverEnterRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 818: {
              com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder subBuilder = null;
              if (serverRecoverGame_ != null) {
                subBuilder = serverRecoverGame_.toBuilder();
              }
              serverRecoverGame_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerRecoverGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverRecoverGame_);
                serverRecoverGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 826: {
              com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder subBuilder = null;
              if (serverDoCatch_ != null) {
                subBuilder = serverDoCatch_.toBuilder();
              }
              serverDoCatch_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerDoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDoCatch_);
                serverDoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 834: {
              com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder subBuilder = null;
              if (serverPlayCards_ != null) {
                subBuilder = serverPlayCards_.toBuilder();
              }
              serverPlayCards_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerPlayCards.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverPlayCards_);
                serverPlayCards_ = subBuilder.buildPartial();
              }

              break;
            }
            case 842: {
              com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder subBuilder = null;
              if (serverAutoPlay_ != null) {
                subBuilder = serverAutoPlay_.toBuilder();
              }
              serverAutoPlay_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerAutoPlay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverAutoPlay_);
                serverAutoPlay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 850: {
              com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder subBuilder = null;
              if (serverLeaveRoom_ != null) {
                subBuilder = serverLeaveRoom_.toBuilder();
              }
              serverLeaveRoom_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerLeaveRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverLeaveRoom_);
                serverLeaveRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 858: {
              com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder subBuilder = null;
              if (serverCancleJoin_ != null) {
                subBuilder = serverCancleJoin_.toBuilder();
              }
              serverCancleJoin_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerCancleJoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverCancleJoin_);
                serverCancleJoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 866: {
              com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder subBuilder = null;
              if (serverQueryIndex_ != null) {
                subBuilder = serverQueryIndex_.toBuilder();
              }
              serverQueryIndex_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerQueryIndex.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryIndex_);
                serverQueryIndex_ = subBuilder.buildPartial();
              }

              break;
            }
            case 874: {
              com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder subBuilder = null;
              if (serverRetryReturnGame_ != null) {
                subBuilder = serverRetryReturnGame_.toBuilder();
              }
              serverRetryReturnGame_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverRetryReturnGame_);
                serverRetryReturnGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1602: {
              com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder subBuilder = null;
              if (serverGetRankList_ != null) {
                subBuilder = serverGetRankList_.toBuilder();
              }
              serverGetRankList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetRankList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetRankList_);
                serverGetRankList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1634: {
              com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder subBuilder = null;
              if (serverRewardMessage_ != null) {
                subBuilder = serverRewardMessage_.toBuilder();
              }
              serverRewardMessage_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerRewardMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverRewardMessage_);
                serverRewardMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1650: {
              com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder subBuilder = null;
              if (serverGetRoomConfig_ != null) {
                subBuilder = serverGetRoomConfig_.toBuilder();
              }
              serverGetRoomConfig_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetRoomConfig_);
                serverGetRoomConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1674: {
              com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder subBuilder = null;
              if (serverGetMonthCardDiamond_ != null) {
                subBuilder = serverGetMonthCardDiamond_.toBuilder();
              }
              serverGetMonthCardDiamond_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMonthCardDiamond_);
                serverGetMonthCardDiamond_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1682: {
              com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder subBuilder = null;
              if (serverGetLotteryCount_ != null) {
                subBuilder = serverGetLotteryCount_.toBuilder();
              }
              serverGetLotteryCount_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetLotteryCount_);
                serverGetLotteryCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1690: {
              com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder subBuilder = null;
              if (serverGetRoomInfo_ != null) {
                subBuilder = serverGetRoomInfo_.toBuilder();
              }
              serverGetRoomInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetRoomInfo_);
                serverGetRoomInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1698: {
              com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder subBuilder = null;
              if (serverSendTelCode_ != null) {
                subBuilder = serverSendTelCode_.toBuilder();
              }
              serverSendTelCode_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerSendTelCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSendTelCode_);
                serverSendTelCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1706: {
              com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder subBuilder = null;
              if (serverVerifyTelCode_ != null) {
                subBuilder = serverVerifyTelCode_.toBuilder();
              }
              serverVerifyTelCode_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverVerifyTelCode_);
                serverVerifyTelCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1738: {
              com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder subBuilder = null;
              if (serverSharePackage_ != null) {
                subBuilder = serverSharePackage_.toBuilder();
              }
              serverSharePackage_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerSharePackage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSharePackage_);
                serverSharePackage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1746: {
              com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder subBuilder = null;
              if (serverGetAwardList_ != null) {
                subBuilder = serverGetAwardList_.toBuilder();
              }
              serverGetAwardList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetAwardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetAwardList_);
                serverGetAwardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1754: {
              com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder subBuilder = null;
              if (serverCheckConnect_ != null) {
                subBuilder = serverCheckConnect_.toBuilder();
              }
              serverCheckConnect_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerCheckConnect.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverCheckConnect_);
                serverCheckConnect_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1762: {
              com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder subBuilder = null;
              if (serverGetPFList_ != null) {
                subBuilder = serverGetPFList_.toBuilder();
              }
              serverGetPFList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetPFList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetPFList_);
                serverGetPFList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1770: {
              com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder subBuilder = null;
              if (serverChoosePF_ != null) {
                subBuilder = serverChoosePF_.toBuilder();
              }
              serverChoosePF_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerChoosePF.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverChoosePF_);
                serverChoosePF_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1778: {
              com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder subBuilder = null;
              if (serverGetHistoryRank_ != null) {
                subBuilder = serverGetHistoryRank_.toBuilder();
              }
              serverGetHistoryRank_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetHistoryRank_);
                serverGetHistoryRank_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1786: {
              com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder subBuilder = null;
              if (serverH5Reward_ != null) {
                subBuilder = serverH5Reward_.toBuilder();
              }
              serverH5Reward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerH5Reward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverH5Reward_);
                serverH5Reward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1794: {
              com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder subBuilder = null;
              if (serverNewDrawWinCup_ != null) {
                subBuilder = serverNewDrawWinCup_.toBuilder();
              }
              serverNewDrawWinCup_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverNewDrawWinCup_);
                serverNewDrawWinCup_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1802: {
              com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder subBuilder = null;
              if (serverGetNewHallInfo_ != null) {
                subBuilder = serverGetNewHallInfo_.toBuilder();
              }
              serverGetNewHallInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetNewHallInfo_);
                serverGetNewHallInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1826: {
              com.kys.util.netty.proto.HallProto.ServerLuckWall.Builder subBuilder = null;
              if (serverLuckWall_ != null) {
                subBuilder = serverLuckWall_.toBuilder();
              }
              serverLuckWall_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerLuckWall.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverLuckWall_);
                serverLuckWall_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1834: {
              com.kys.util.netty.proto.HallProto.ServerCdkeyAward.Builder subBuilder = null;
              if (serverCdkeyAward_ != null) {
                subBuilder = serverCdkeyAward_.toBuilder();
              }
              serverCdkeyAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerCdkeyAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverCdkeyAward_);
                serverCdkeyAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2402: {
              com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.Builder subBuilder = null;
              if (serverGetStoreInfo_ != null) {
                subBuilder = serverGetStoreInfo_.toBuilder();
              }
              serverGetStoreInfo_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetStoreInfo_);
                serverGetStoreInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2410: {
              com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder subBuilder = null;
              if (serverConvertGoods_ != null) {
                subBuilder = serverConvertGoods_.toBuilder();
              }
              serverConvertGoods_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerConvertGoods.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverConvertGoods_);
                serverConvertGoods_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2426: {
              com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder subBuilder = null;
              if (serverWXPayResult_ != null) {
                subBuilder = serverWXPayResult_.toBuilder();
              }
              serverWXPayResult_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerWXPayResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverWXPayResult_);
                serverWXPayResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2434: {
              com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder subBuilder = null;
              if (serverBuyOrderGoods_ != null) {
                subBuilder = serverBuyOrderGoods_.toBuilder();
              }
              serverBuyOrderGoods_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverBuyOrderGoods_);
                serverBuyOrderGoods_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2442: {
              com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder subBuilder = null;
              if (serverGetFirstCharge_ != null) {
                subBuilder = serverGetFirstCharge_.toBuilder();
              }
              serverGetFirstCharge_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetFirstCharge_);
                serverGetFirstCharge_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2450: {
              com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder subBuilder = null;
              if (serverGetDailyGift_ != null) {
                subBuilder = serverGetDailyGift_.toBuilder();
              }
              serverGetDailyGift_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetDailyGift_);
                serverGetDailyGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2458: {
              com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder subBuilder = null;
              if (serverGetMonthCard_ != null) {
                subBuilder = serverGetMonthCard_.toBuilder();
              }
              serverGetMonthCard_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMonthCard_);
                serverGetMonthCard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2466: {
              com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder subBuilder = null;
              if (serverGetResurgenceGift_ != null) {
                subBuilder = serverGetResurgenceGift_.toBuilder();
              }
              serverGetResurgenceGift_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetResurgenceGift_);
                serverGetResurgenceGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2474: {
              com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.Builder subBuilder = null;
              if (serverGetConvertMessage_ != null) {
                subBuilder = serverGetConvertMessage_.toBuilder();
              }
              serverGetConvertMessage_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetConvertMessage_);
                serverGetConvertMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2482: {
              com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.Builder subBuilder = null;
              if (serverNewBuyOrder_ != null) {
                subBuilder = serverNewBuyOrder_.toBuilder();
              }
              serverNewBuyOrder_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverNewBuyOrder_);
                serverNewBuyOrder_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2490: {
              com.kys.util.netty.proto.StoreProto.ServerNewConvert.Builder subBuilder = null;
              if (serverNewConvert_ != null) {
                subBuilder = serverNewConvert_.toBuilder();
              }
              serverNewConvert_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerNewConvert.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverNewConvert_);
                serverNewConvert_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2498: {
              com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.Builder subBuilder = null;
              if (serverAlipayAccount_ != null) {
                subBuilder = serverAlipayAccount_.toBuilder();
              }
              serverAlipayAccount_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverAlipayAccount_);
                serverAlipayAccount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2506: {
              com.kys.util.netty.proto.StoreProto.ServerPayOptions.Builder subBuilder = null;
              if (serverPayOptions_ != null) {
                subBuilder = serverPayOptions_.toBuilder();
              }
              serverPayOptions_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerPayOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverPayOptions_);
                serverPayOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2514: {
              com.kys.util.netty.proto.StoreProto.ServerIdVerify.Builder subBuilder = null;
              if (serverIdVerify_ != null) {
                subBuilder = serverIdVerify_.toBuilder();
              }
              serverIdVerify_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerIdVerify.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverIdVerify_);
                serverIdVerify_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2522: {
              com.kys.util.netty.proto.StoreProto.ServerVerifyAward.Builder subBuilder = null;
              if (serverVerifyAward_ != null) {
                subBuilder = serverVerifyAward_.toBuilder();
              }
              serverVerifyAward_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerVerifyAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverVerifyAward_);
                serverVerifyAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2530: {
              com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.Builder subBuilder = null;
              if (serverMiniAppPay_ != null) {
                subBuilder = serverMiniAppPay_.toBuilder();
              }
              serverMiniAppPay_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMiniAppPay_);
                serverMiniAppPay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2538: {
              com.kys.util.netty.proto.StoreProto.ServerUnionAccount.Builder subBuilder = null;
              if (serverUnionAccount_ != null) {
                subBuilder = serverUnionAccount_.toBuilder();
              }
              serverUnionAccount_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerUnionAccount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverUnionAccount_);
                serverUnionAccount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3218: {
              com.kys.util.netty.proto.GameProto.B_GameStart.Builder subBuilder = null;
              if (bGameStart_ != null) {
                subBuilder = bGameStart_.toBuilder();
              }
              bGameStart_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_GameStart.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bGameStart_);
                bGameStart_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3226: {
              com.kys.util.netty.proto.GameProto.B_DoCatch.Builder subBuilder = null;
              if (bDoCatch_ != null) {
                subBuilder = bDoCatch_.toBuilder();
              }
              bDoCatch_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_DoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDoCatch_);
                bDoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3234: {
              com.kys.util.netty.proto.GameProto.B_CatchResult.Builder subBuilder = null;
              if (bCatchResult_ != null) {
                subBuilder = bCatchResult_.toBuilder();
              }
              bCatchResult_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_CatchResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bCatchResult_);
                bCatchResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3242: {
              com.kys.util.netty.proto.GameProto.B_PlayCards.Builder subBuilder = null;
              if (bPlayCards_ != null) {
                subBuilder = bPlayCards_.toBuilder();
              }
              bPlayCards_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_PlayCards.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bPlayCards_);
                bPlayCards_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3258: {
              com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder subBuilder = null;
              if (bSendDiZhuCard_ != null) {
                subBuilder = bSendDiZhuCard_.toBuilder();
              }
              bSendDiZhuCard_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bSendDiZhuCard_);
                bSendDiZhuCard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3266: {
              com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder subBuilder = null;
              if (bNextPlayer_ != null) {
                subBuilder = bNextPlayer_.toBuilder();
              }
              bNextPlayer_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_NextPlayer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bNextPlayer_);
                bNextPlayer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3274: {
              com.kys.util.netty.proto.GameProto.B_GameSettle.Builder subBuilder = null;
              if (bGameSettle_ != null) {
                subBuilder = bGameSettle_.toBuilder();
              }
              bGameSettle_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_GameSettle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bGameSettle_);
                bGameSettle_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3282: {
              com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder subBuilder = null;
              if (bRewardMessage_ != null) {
                subBuilder = bRewardMessage_.toBuilder();
              }
              bRewardMessage_ = input.readMessage(com.kys.util.netty.proto.HallProto.B_RewardMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bRewardMessage_);
                bRewardMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3290: {
              com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder subBuilder = null;
              if (bAutoPlay_ != null) {
                subBuilder = bAutoPlay_.toBuilder();
              }
              bAutoPlay_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_AutoPlay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bAutoPlay_);
                bAutoPlay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3298: {
              com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder subBuilder = null;
              if (bRoomIdUrl_ != null) {
                subBuilder = bRoomIdUrl_.toBuilder();
              }
              bRoomIdUrl_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_RoomIdUrl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bRoomIdUrl_);
                bRoomIdUrl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3306: {
              com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder subBuilder = null;
              if (bAwardDialog_ != null) {
                subBuilder = bAwardDialog_.toBuilder();
              }
              bAwardDialog_ = input.readMessage(com.kys.util.netty.proto.HallProto.B_AwardDialog.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bAwardDialog_);
                bAwardDialog_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3314: {
              com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder subBuilder = null;
              if (bBuySuccess_ != null) {
                subBuilder = bBuySuccess_.toBuilder();
              }
              bBuySuccess_ = input.readMessage(com.kys.util.netty.proto.StoreProto.B_BuySuccess.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bBuySuccess_);
                bBuySuccess_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3322: {
              com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder subBuilder = null;
              if (bRedDotPush_ != null) {
                subBuilder = bRedDotPush_.toBuilder();
              }
              bRedDotPush_ = input.readMessage(com.kys.util.netty.proto.HallProto.B_RedDotPush.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bRedDotPush_);
                bRedDotPush_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3330: {
              com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder subBuilder = null;
              if (bForceAnnounce_ != null) {
                subBuilder = bForceAnnounce_.toBuilder();
              }
              bForceAnnounce_ = input.readMessage(com.kys.util.netty.proto.HallProto.B_ForceAnnounce.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bForceAnnounce_);
                bForceAnnounce_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3338: {
              com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder subBuilder = null;
              if (bDGameMessage_ != null) {
                subBuilder = bDGameMessage_.toBuilder();
              }
              bDGameMessage_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.B_DGameMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDGameMessage_);
                bDGameMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3346: {
              com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder subBuilder = null;
              if (bDGOver_ != null) {
                subBuilder = bDGOver_.toBuilder();
              }
              bDGOver_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.B_DGOver.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDGOver_);
                bDGOver_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3354: {
              com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder subBuilder = null;
              if (bDDOver_ != null) {
                subBuilder = bDDOver_.toBuilder();
              }
              bDDOver_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.B_DDOver.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDDOver_);
                bDDOver_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3362: {
              com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder subBuilder = null;
              if (bDDInfo_ != null) {
                subBuilder = bDDInfo_.toBuilder();
              }
              bDDInfo_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.B_DDInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDDInfo_);
                bDDInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3370: {
              com.kys.util.netty.proto.LittleProto.B_SSInfo.Builder subBuilder = null;
              if (bSSInfo_ != null) {
                subBuilder = bSSInfo_.toBuilder();
              }
              bSSInfo_ = input.readMessage(com.kys.util.netty.proto.LittleProto.B_SSInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bSSInfo_);
                bSSInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3378: {
              com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.Builder subBuilder = null;
              if (bNewSleeveSheepInfo_ != null) {
                subBuilder = bNewSleeveSheepInfo_.toBuilder();
              }
              bNewSleeveSheepInfo_ = input.readMessage(com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bNewSleeveSheepInfo_);
                bNewSleeveSheepInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3386: {
              com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.Builder subBuilder = null;
              if (bNewSleeverOver_ != null) {
                subBuilder = bNewSleeverOver_.toBuilder();
              }
              bNewSleeverOver_ = input.readMessage(com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bNewSleeverOver_);
                bNewSleeverOver_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3394: {
              com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.Builder subBuilder = null;
              if (bDiamondReviveInfo_ != null) {
                subBuilder = bDiamondReviveInfo_.toBuilder();
              }
              bDiamondReviveInfo_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDiamondReviveInfo_);
                bDiamondReviveInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3402: {
              com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.Builder subBuilder = null;
              if (b2AutoPlay_ != null) {
                subBuilder = b2AutoPlay_.toBuilder();
              }
              b2AutoPlay_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(b2AutoPlay_);
                b2AutoPlay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3410: {
              com.kys.util.netty.proto.Game2Proto.B_2_GameStart.Builder subBuilder = null;
              if (b2GameStart_ != null) {
                subBuilder = b2GameStart_.toBuilder();
              }
              b2GameStart_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.B_2_GameStart.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(b2GameStart_);
                b2GameStart_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3418: {
              com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.Builder subBuilder = null;
              if (b2DoCatch_ != null) {
                subBuilder = b2DoCatch_.toBuilder();
              }
              b2DoCatch_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(b2DoCatch_);
                b2DoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3426: {
              com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.Builder subBuilder = null;
              if (b2CatchResult_ != null) {
                subBuilder = b2CatchResult_.toBuilder();
              }
              b2CatchResult_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(b2CatchResult_);
                b2CatchResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3434: {
              com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.Builder subBuilder = null;
              if (b2SendDiZhuCard_ != null) {
                subBuilder = b2SendDiZhuCard_.toBuilder();
              }
              b2SendDiZhuCard_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(b2SendDiZhuCard_);
                b2SendDiZhuCard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3458: {
              com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.Builder subBuilder = null;
              if (b2GameSettle_ != null) {
                subBuilder = b2GameSettle_.toBuilder();
              }
              b2GameSettle_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(b2GameSettle_);
                b2GameSettle_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3474: {
              com.kys.util.netty.proto.MatchProto.B_MatchStart.Builder subBuilder = null;
              if (bMatchStart_ != null) {
                subBuilder = bMatchStart_.toBuilder();
              }
              bMatchStart_ = input.readMessage(com.kys.util.netty.proto.MatchProto.B_MatchStart.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bMatchStart_);
                bMatchStart_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3482: {
              com.kys.util.netty.proto.MatchProto.B_MatchEnd.Builder subBuilder = null;
              if (bMatchEnd_ != null) {
                subBuilder = bMatchEnd_.toBuilder();
              }
              bMatchEnd_ = input.readMessage(com.kys.util.netty.proto.MatchProto.B_MatchEnd.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bMatchEnd_);
                bMatchEnd_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3490: {
              com.kys.util.netty.proto.MatchProto.B_MatchResult.Builder subBuilder = null;
              if (bMatchResult_ != null) {
                subBuilder = bMatchResult_.toBuilder();
              }
              bMatchResult_ = input.readMessage(com.kys.util.netty.proto.MatchProto.B_MatchResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bMatchResult_);
                bMatchResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4002: {
              com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder subBuilder = null;
              if (serverGetAnnounce_ != null) {
                subBuilder = serverGetAnnounce_.toBuilder();
              }
              serverGetAnnounce_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetAnnounce.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetAnnounce_);
                serverGetAnnounce_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4802: {
              com.kys.util.netty.proto.HallProto.ServerGetMail.Builder subBuilder = null;
              if (serverGetMail_ != null) {
                subBuilder = serverGetMail_.toBuilder();
              }
              serverGetMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMail_);
                serverGetMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4810: {
              com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder subBuilder = null;
              if (serverGetMailReward_ != null) {
                subBuilder = serverGetMailReward_.toBuilder();
              }
              serverGetMailReward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetMailReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMailReward_);
                serverGetMailReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4818: {
              com.kys.util.netty.proto.HallProto.ServerDelMail.Builder subBuilder = null;
              if (serverDelMail_ != null) {
                subBuilder = serverDelMail_.toBuilder();
              }
              serverDelMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerDelMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDelMail_);
                serverDelMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4826: {
              com.kys.util.netty.proto.HallProto.ServerReadMail.Builder subBuilder = null;
              if (serverReadMail_ != null) {
                subBuilder = serverReadMail_.toBuilder();
              }
              serverReadMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerReadMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverReadMail_);
                serverReadMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4834: {
              com.kys.util.netty.proto.HallProto.ServerDel2R.Builder subBuilder = null;
              if (serverDel2R_ != null) {
                subBuilder = serverDel2R_.toBuilder();
              }
              serverDel2R_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerDel2R.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDel2R_);
                serverDel2R_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5602: {
              com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder subBuilder = null;
              if (serverQueryDailyTask_ != null) {
                subBuilder = serverQueryDailyTask_.toBuilder();
              }
              serverQueryDailyTask_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryDailyTask_);
                serverQueryDailyTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5618: {
              com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder subBuilder = null;
              if (serverGetNoviceReward_ != null) {
                subBuilder = serverGetNoviceReward_.toBuilder();
              }
              serverGetNoviceReward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetNoviceReward_);
                serverGetNoviceReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5626: {
              com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder subBuilder = null;
              if (serverQueryNoviceTask_ != null) {
                subBuilder = serverQueryNoviceTask_.toBuilder();
              }
              serverQueryNoviceTask_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryNoviceTask_);
                serverQueryNoviceTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5634: {
              com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder subBuilder = null;
              if (serverGetDTAward_ != null) {
                subBuilder = serverGetDTAward_.toBuilder();
              }
              serverGetDTAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetDTAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetDTAward_);
                serverGetDTAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6402: {
              com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder subBuilder = null;
              if (serverGetReceiveAddr_ != null) {
                subBuilder = serverGetReceiveAddr_.toBuilder();
              }
              serverGetReceiveAddr_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetReceiveAddr_);
                serverGetReceiveAddr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6410: {
              com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder subBuilder = null;
              if (serverAlterReceiveAddr_ != null) {
                subBuilder = serverAlterReceiveAddr_.toBuilder();
              }
              serverAlterReceiveAddr_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverAlterReceiveAddr_);
                serverAlterReceiveAddr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6418: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder subBuilder = null;
              if (serverSnatchList_ != null) {
                subBuilder = serverSnatchList_.toBuilder();
              }
              serverSnatchList_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchList_);
                serverSnatchList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6426: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder subBuilder = null;
              if (serverSnatchItemDetail_ != null) {
                subBuilder = serverSnatchItemDetail_.toBuilder();
              }
              serverSnatchItemDetail_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchItemDetail_);
                serverSnatchItemDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6434: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder subBuilder = null;
              if (serverSnatchBet_ != null) {
                subBuilder = serverSnatchBet_.toBuilder();
              }
              serverSnatchBet_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchBet_);
                serverSnatchBet_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6442: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder subBuilder = null;
              if (serverSnatchAwardList_ != null) {
                subBuilder = serverSnatchAwardList_.toBuilder();
              }
              serverSnatchAwardList_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchAwardList_);
                serverSnatchAwardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6450: {
              com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder subBuilder = null;
              if (serverOwnSnatchRecord_ != null) {
                subBuilder = serverOwnSnatchRecord_.toBuilder();
              }
              serverOwnSnatchRecord_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverOwnSnatchRecord_);
                serverOwnSnatchRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6458: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder subBuilder = null;
              if (serverSnatchItemHistory_ != null) {
                subBuilder = serverSnatchItemHistory_.toBuilder();
              }
              serverSnatchItemHistory_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchItemHistory_);
                serverSnatchItemHistory_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6466: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder subBuilder = null;
              if (serverSnatchHistoryDetail_ != null) {
                subBuilder = serverSnatchHistoryDetail_.toBuilder();
              }
              serverSnatchHistoryDetail_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchHistoryDetail_);
                serverSnatchHistoryDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6474: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder subBuilder = null;
              if (serverSnatchGetAward_ != null) {
                subBuilder = serverSnatchGetAward_.toBuilder();
              }
              serverSnatchGetAward_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchGetAward_);
                serverSnatchGetAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7202: {
              com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder subBuilder = null;
              if (serverEnterDG_ != null) {
                subBuilder = serverEnterDG_.toBuilder();
              }
              serverEnterDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerEnterDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverEnterDG_);
                serverEnterDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7210: {
              com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder subBuilder = null;
              if (serverDGLottery_ != null) {
                subBuilder = serverDGLottery_.toBuilder();
              }
              serverDGLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerDGLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDGLottery_);
                serverDGLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7218: {
              com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder subBuilder = null;
              if (serverResetLottery_ != null) {
                subBuilder = serverResetLottery_.toBuilder();
              }
              serverResetLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerResetLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverResetLottery_);
                serverResetLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7226: {
              com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder subBuilder = null;
              if (serverExitDG_ != null) {
                subBuilder = serverExitDG_.toBuilder();
              }
              serverExitDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerExitDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverExitDG_);
                serverExitDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7234: {
              com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder subBuilder = null;
              if (serverOpenDG_ != null) {
                subBuilder = serverOpenDG_.toBuilder();
              }
              serverOpenDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerOpenDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverOpenDG_);
                serverOpenDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7242: {
              com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder subBuilder = null;
              if (serverOpenDD_ != null) {
                subBuilder = serverOpenDD_.toBuilder();
              }
              serverOpenDD_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerOpenDD.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverOpenDD_);
                serverOpenDD_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7250: {
              com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder subBuilder = null;
              if (serverDDLottery_ != null) {
                subBuilder = serverDDLottery_.toBuilder();
              }
              serverDDLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerDDLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDDLottery_);
                serverDDLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7258: {
              com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder subBuilder = null;
              if (serverExitDD_ != null) {
                subBuilder = serverExitDD_.toBuilder();
              }
              serverExitDD_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerExitDD.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverExitDD_);
                serverExitDD_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8010: {
              com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder subBuilder = null;
              if (serverQueryProp_ != null) {
                subBuilder = serverQueryProp_.toBuilder();
              }
              serverQueryProp_ = input.readMessage(com.kys.util.netty.proto.PropProto.ServerQueryProp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryProp_);
                serverQueryProp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8018: {
              com.kys.util.netty.proto.PropProto.ServerUseProp.Builder subBuilder = null;
              if (serverUseProp_ != null) {
                subBuilder = serverUseProp_.toBuilder();
              }
              serverUseProp_ = input.readMessage(com.kys.util.netty.proto.PropProto.ServerUseProp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverUseProp_);
                serverUseProp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8026: {
              com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder subBuilder = null;
              if (serverQueryPropCount_ != null) {
                subBuilder = serverQueryPropCount_.toBuilder();
              }
              serverQueryPropCount_ = input.readMessage(com.kys.util.netty.proto.PropProto.ServerQueryPropCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryPropCount_);
                serverQueryPropCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8810: {
              com.kys.util.netty.proto.SignProto.ServerSignInfo.Builder subBuilder = null;
              if (serverSignInfo_ != null) {
                subBuilder = serverSignInfo_.toBuilder();
              }
              serverSignInfo_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerSignInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSignInfo_);
                serverSignInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8818: {
              com.kys.util.netty.proto.SignProto.ServerSignAward.Builder subBuilder = null;
              if (serverSignAward_ != null) {
                subBuilder = serverSignAward_.toBuilder();
              }
              serverSignAward_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerSignAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSignAward_);
                serverSignAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8826: {
              com.kys.util.netty.proto.SignProto.ServerSignState.Builder subBuilder = null;
              if (serverSignState_ != null) {
                subBuilder = serverSignState_.toBuilder();
              }
              serverSignState_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerSignState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSignState_);
                serverSignState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8834: {
              com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder subBuilder = null;
              if (serverLTLottery_ != null) {
                subBuilder = serverLTLottery_.toBuilder();
              }
              serverLTLottery_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerLTLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverLTLottery_);
                serverLTLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8842: {
              com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder subBuilder = null;
              if (serverGetTSReward_ != null) {
                subBuilder = serverGetTSReward_.toBuilder();
              }
              serverGetTSReward_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerGetTSReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetTSReward_);
                serverGetTSReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8850: {
              com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder subBuilder = null;
              if (serverGetLuckInfo_ != null) {
                subBuilder = serverGetLuckInfo_.toBuilder();
              }
              serverGetLuckInfo_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetLuckInfo_);
                serverGetLuckInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 9626: {
              com.kys.util.netty.proto.VipProto.ServerGetVip.Builder subBuilder = null;
              if (serverGetVip_ != null) {
                subBuilder = serverGetVip_.toBuilder();
              }
              serverGetVip_ = input.readMessage(com.kys.util.netty.proto.VipProto.ServerGetVip.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetVip_);
                serverGetVip_ = subBuilder.buildPartial();
              }

              break;
            }
            case 9634: {
              com.kys.util.netty.proto.VipProto.ServerGetDayGift.Builder subBuilder = null;
              if (serverGetDayGift_ != null) {
                subBuilder = serverGetDayGift_.toBuilder();
              }
              serverGetDayGift_ = input.readMessage(com.kys.util.netty.proto.VipProto.ServerGetDayGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetDayGift_);
                serverGetDayGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10402: {
              com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.Builder subBuilder = null;
              if (serverEnterSleeve_ != null) {
                subBuilder = serverEnterSleeve_.toBuilder();
              }
              serverEnterSleeve_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverEnterSleeve_);
                serverEnterSleeve_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10410: {
              com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.Builder subBuilder = null;
              if (serverSleeveSheep_ != null) {
                subBuilder = serverSleeveSheep_.toBuilder();
              }
              serverSleeveSheep_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSleeveSheep_);
                serverSleeveSheep_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10418: {
              com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.Builder subBuilder = null;
              if (serverQueryPlayerCoin_ != null) {
                subBuilder = serverQueryPlayerCoin_.toBuilder();
              }
              serverQueryPlayerCoin_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryPlayerCoin_);
                serverQueryPlayerCoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10426: {
              com.kys.util.netty.proto.LittleProto.ServerExitSleeve.Builder subBuilder = null;
              if (serverExitSleeve_ != null) {
                subBuilder = serverExitSleeve_.toBuilder();
              }
              serverExitSleeve_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ServerExitSleeve.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverExitSleeve_);
                serverExitSleeve_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10434: {
              com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.Builder subBuilder = null;
              if (serverEnterNewSleeve_ != null) {
                subBuilder = serverEnterNewSleeve_.toBuilder();
              }
              serverEnterNewSleeve_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverEnterNewSleeve_);
                serverEnterNewSleeve_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10442: {
              com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.Builder subBuilder = null;
              if (serverNewSleeveSheep_ != null) {
                subBuilder = serverNewSleeveSheep_.toBuilder();
              }
              serverNewSleeveSheep_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverNewSleeveSheep_);
                serverNewSleeveSheep_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10450: {
              com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.Builder subBuilder = null;
              if (serverNewSleeveResult_ != null) {
                subBuilder = serverNewSleeveResult_.toBuilder();
              }
              serverNewSleeveResult_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverNewSleeveResult_);
                serverNewSleeveResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 10458: {
              com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.Builder subBuilder = null;
              if (serverExitNewSleeve_ != null) {
                subBuilder = serverExitNewSleeve_.toBuilder();
              }
              serverExitNewSleeve_ = input.readMessage(com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverExitNewSleeve_);
                serverExitNewSleeve_ = subBuilder.buildPartial();
              }

              break;
            }
            case 11210: {
              com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.Builder subBuilder = null;
              if (server2DoCatch_ != null) {
                subBuilder = server2DoCatch_.toBuilder();
              }
              server2DoCatch_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(server2DoCatch_);
                server2DoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 11218: {
              com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.Builder subBuilder = null;
              if (server2PlayCards_ != null) {
                subBuilder = server2PlayCards_.toBuilder();
              }
              server2PlayCards_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(server2PlayCards_);
                server2PlayCards_ = subBuilder.buildPartial();
              }

              break;
            }
            case 11226: {
              com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.Builder subBuilder = null;
              if (server2RecoverGame_ != null) {
                subBuilder = server2RecoverGame_.toBuilder();
              }
              server2RecoverGame_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(server2RecoverGame_);
                server2RecoverGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 11234: {
              com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.Builder subBuilder = null;
              if (server2LeaveRoom_ != null) {
                subBuilder = server2LeaveRoom_.toBuilder();
              }
              server2LeaveRoom_ = input.readMessage(com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(server2LeaveRoom_);
                server2LeaveRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12010: {
              com.kys.util.netty.proto.ShareProto.ServerMineShare.Builder subBuilder = null;
              if (serverMineShare_ != null) {
                subBuilder = serverMineShare_.toBuilder();
              }
              serverMineShare_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ServerMineShare.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMineShare_);
                serverMineShare_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12018: {
              com.kys.util.netty.proto.ShareProto.ServerGetMSAward.Builder subBuilder = null;
              if (serverGetMSAward_ != null) {
                subBuilder = serverGetMSAward_.toBuilder();
              }
              serverGetMSAward_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ServerGetMSAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMSAward_);
                serverGetMSAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12026: {
              com.kys.util.netty.proto.ShareProto.ServerFriendShare.Builder subBuilder = null;
              if (serverFriendShare_ != null) {
                subBuilder = serverFriendShare_.toBuilder();
              }
              serverFriendShare_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ServerFriendShare.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverFriendShare_);
                serverFriendShare_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12034: {
              com.kys.util.netty.proto.ShareProto.ServerGetFSAward.Builder subBuilder = null;
              if (serverGetFSAward_ != null) {
                subBuilder = serverGetFSAward_.toBuilder();
              }
              serverGetFSAward_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ServerGetFSAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetFSAward_);
                serverGetFSAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12042: {
              com.kys.util.netty.proto.ShareProto.ServerGetShareTask.Builder subBuilder = null;
              if (serverGetShareTask_ != null) {
                subBuilder = serverGetShareTask_.toBuilder();
              }
              serverGetShareTask_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ServerGetShareTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetShareTask_);
                serverGetShareTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12050: {
              com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.Builder subBuilder = null;
              if (serverGetShareTaskAward_ != null) {
                subBuilder = serverGetShareTaskAward_.toBuilder();
              }
              serverGetShareTaskAward_ = input.readMessage(com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetShareTaskAward_);
                serverGetShareTaskAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12810: {
              com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.Builder subBuilder = null;
              if (serverQueryReviveInfo_ != null) {
                subBuilder = serverQueryReviveInfo_.toBuilder();
              }
              serverQueryReviveInfo_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryReviveInfo_);
                serverQueryReviveInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12818: {
              com.kys.util.netty.proto.ReviveProto.ServerUseRevive.Builder subBuilder = null;
              if (serverUseRevive_ != null) {
                subBuilder = serverUseRevive_.toBuilder();
              }
              serverUseRevive_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.ServerUseRevive.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverUseRevive_);
                serverUseRevive_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12826: {
              com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.Builder subBuilder = null;
              if (serverReviveFirstCharge_ != null) {
                subBuilder = serverReviveFirstCharge_.toBuilder();
              }
              serverReviveFirstCharge_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverReviveFirstCharge_);
                serverReviveFirstCharge_ = subBuilder.buildPartial();
              }

              break;
            }
            case 12834: {
              com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.Builder subBuilder = null;
              if (serverReviveDayGift_ != null) {
                subBuilder = serverReviveDayGift_.toBuilder();
              }
              serverReviveDayGift_ = input.readMessage(com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverReviveDayGift_);
                serverReviveDayGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 13610: {
              com.kys.util.netty.proto.HallProto.ServerGetRedTip.Builder subBuilder = null;
              if (serverGetRedTip_ != null) {
                subBuilder = serverGetRedTip_.toBuilder();
              }
              serverGetRedTip_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetRedTip.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetRedTip_);
                serverGetRedTip_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14410: {
              com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.Builder subBuilder = null;
              if (serverGetMatchInfo_ != null) {
                subBuilder = serverGetMatchInfo_.toBuilder();
              }
              serverGetMatchInfo_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMatchInfo_);
                serverGetMatchInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14418: {
              com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.Builder subBuilder = null;
              if (serverGetMatchDetail_ != null) {
                subBuilder = serverGetMatchDetail_.toBuilder();
              }
              serverGetMatchDetail_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMatchDetail_);
                serverGetMatchDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14426: {
              com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.Builder subBuilder = null;
              if (serverGetMatchRecord_ != null) {
                subBuilder = serverGetMatchRecord_.toBuilder();
              }
              serverGetMatchRecord_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMatchRecord_);
                serverGetMatchRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14434: {
              com.kys.util.netty.proto.MatchProto.ServerMatchApply.Builder subBuilder = null;
              if (serverMatchApply_ != null) {
                subBuilder = serverMatchApply_.toBuilder();
              }
              serverMatchApply_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerMatchApply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMatchApply_);
                serverMatchApply_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14442: {
              com.kys.util.netty.proto.MatchProto.ServerMatchCancel.Builder subBuilder = null;
              if (serverMatchCancel_ != null) {
                subBuilder = serverMatchCancel_.toBuilder();
              }
              serverMatchCancel_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerMatchCancel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMatchCancel_);
                serverMatchCancel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14450: {
              com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.Builder subBuilder = null;
              if (serverOwnMatchRecord_ != null) {
                subBuilder = serverOwnMatchRecord_.toBuilder();
              }
              serverOwnMatchRecord_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverOwnMatchRecord_);
                serverOwnMatchRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14458: {
              com.kys.util.netty.proto.MatchProto.ServerApplyListChange.Builder subBuilder = null;
              if (serverApplyListChange_ != null) {
                subBuilder = serverApplyListChange_.toBuilder();
              }
              serverApplyListChange_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerApplyListChange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverApplyListChange_);
                serverApplyListChange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14466: {
              com.kys.util.netty.proto.MatchProto.ServerMatchScore.Builder subBuilder = null;
              if (serverMatchScore_ != null) {
                subBuilder = serverMatchScore_.toBuilder();
              }
              serverMatchScore_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerMatchScore.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMatchScore_);
                serverMatchScore_ = subBuilder.buildPartial();
              }

              break;
            }
            case 14474: {
              com.kys.util.netty.proto.MatchProto.ServerMatchConfig.Builder subBuilder = null;
              if (serverMatchConfig_ != null) {
                subBuilder = serverMatchConfig_.toBuilder();
              }
              serverMatchConfig_ = input.readMessage(com.kys.util.netty.proto.MatchProto.ServerMatchConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMatchConfig_);
                serverMatchConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 15210: {
              com.kys.util.netty.proto.Triplekill.ServerGetKillCell.Builder subBuilder = null;
              if (serverGetKillCell_ != null) {
                subBuilder = serverGetKillCell_.toBuilder();
              }
              serverGetKillCell_ = input.readMessage(com.kys.util.netty.proto.Triplekill.ServerGetKillCell.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetKillCell_);
                serverGetKillCell_ = subBuilder.buildPartial();
              }

              break;
            }
            case 15218: {
              com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.Builder subBuilder = null;
              if (serverEnterKillCell_ != null) {
                subBuilder = serverEnterKillCell_.toBuilder();
              }
              serverEnterKillCell_ = input.readMessage(com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverEnterKillCell_);
                serverEnterKillCell_ = subBuilder.buildPartial();
              }

              break;
            }
            case 15226: {
              com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.Builder subBuilder = null;
              if (serverQuitKillCell_ != null) {
                subBuilder = serverQuitKillCell_.toBuilder();
              }
              serverQuitKillCell_ = input.readMessage(com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQuitKillCell_);
                serverQuitKillCell_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kys.util.netty.proto.ProtoMsg.ServerResponse.class, com.kys.util.netty.proto.ProtoMsg.ServerResponse.Builder.class);
    }

    public static final int METHODID_FIELD_NUMBER = 1;
    private int methodId_;
    /**
     * <code>int32 methodId = 1;</code>
     */
    public int getMethodId() {
      return methodId_;
    }

    public static final int RESULT_FIELD_NUMBER = 2;
    private int result_;
    /**
     * <pre>
     ** 返回码，包含success和错误码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
     */
    public int getResultValue() {
      return result_;
    }
    /**
     * <pre>
     ** 返回码，包含success和错误码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
     */
    public com.kys.util.netty.proto.ProtoMsg.ResultCode getResult() {
      com.kys.util.netty.proto.ProtoMsg.ResultCode result = com.kys.util.netty.proto.ProtoMsg.ResultCode.valueOf(result_);
      return result == null ? com.kys.util.netty.proto.ProtoMsg.ResultCode.UNRECOGNIZED : result;
    }

    public static final int ERRSTR_FIELD_NUMBER = 99;
    private volatile java.lang.Object errStr_;
    /**
     * <pre>
     ** 错误展示字段，如果result不为0，则取该字段给用户展示 
     * </pre>
     *
     * <code>string errStr = 99;</code>
     */
    public java.lang.String getErrStr() {
      java.lang.Object ref = errStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        errStr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 错误展示字段，如果result不为0，则取该字段给用户展示 
     * </pre>
     *
     * <code>string errStr = 99;</code>
     */
    public com.google.protobuf.ByteString
        getErrStrBytes() {
      java.lang.Object ref = errStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVERLOGIN_FIELD_NUMBER = 3;
    private com.kys.util.netty.proto.LoginProto.ServerLogin serverLogin_;
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    public boolean hasServerLogin() {
      return serverLogin_ != null;
    }
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerLogin getServerLogin() {
      return serverLogin_ == null ? com.kys.util.netty.proto.LoginProto.ServerLogin.getDefaultInstance() : serverLogin_;
    }
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder getServerLoginOrBuilder() {
      return getServerLogin();
    }

    public static final int SERVERPLAYERINFO_FIELD_NUMBER = 4;
    private com.kys.util.netty.proto.UserProto.ServerGetUserInfo serverPlayerInfo_;
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    public boolean hasServerPlayerInfo() {
      return serverPlayerInfo_ != null;
    }
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerPlayerInfo() {
      return serverPlayerInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverPlayerInfo_;
    }
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerPlayerInfoOrBuilder() {
      return getServerPlayerInfo();
    }

    public static final int SERVERSENDHALLHEARTBEAT_FIELD_NUMBER = 5;
    private com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat serverSendHallHeartBeat_;
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    public boolean hasServerSendHallHeartBeat() {
      return serverSendHallHeartBeat_ != null;
    }
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat getServerSendHallHeartBeat() {
      return serverSendHallHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.getDefaultInstance() : serverSendHallHeartBeat_;
    }
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder getServerSendHallHeartBeatOrBuilder() {
      return getServerSendHallHeartBeat();
    }

    public static final int SERVERSENDGAMEHEARTBEAT_FIELD_NUMBER = 6;
    private com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat serverSendGameHeartBeat_;
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    public boolean hasServerSendGameHeartBeat() {
      return serverSendGameHeartBeat_ != null;
    }
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat getServerSendGameHeartBeat() {
      return serverSendGameHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.getDefaultInstance() : serverSendGameHeartBeat_;
    }
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder getServerSendGameHeartBeatOrBuilder() {
      return getServerSendGameHeartBeat();
    }

    public static final int SERVERGETUSERINFO_FIELD_NUMBER = 7;
    private com.kys.util.netty.proto.UserProto.ServerGetUserInfo serverGetUserInfo_;
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    public boolean hasServerGetUserInfo() {
      return serverGetUserInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerGetUserInfo() {
      return serverGetUserInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverGetUserInfo_;
    }
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerGetUserInfoOrBuilder() {
      return getServerGetUserInfo();
    }

    public static final int SERVERQUICKJOIN_FIELD_NUMBER = 100;
    private com.kys.util.netty.proto.GameProto.ServerQuickJoin serverQuickJoin_;
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    public boolean hasServerQuickJoin() {
      return serverQuickJoin_ != null;
    }
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerQuickJoin getServerQuickJoin() {
      return serverQuickJoin_ == null ? com.kys.util.netty.proto.GameProto.ServerQuickJoin.getDefaultInstance() : serverQuickJoin_;
    }
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder getServerQuickJoinOrBuilder() {
      return getServerQuickJoin();
    }

    public static final int SERVERENTERROOM_FIELD_NUMBER = 101;
    private com.kys.util.netty.proto.GameProto.ServerEnterRoom serverEnterRoom_;
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    public boolean hasServerEnterRoom() {
      return serverEnterRoom_ != null;
    }
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerEnterRoom getServerEnterRoom() {
      return serverEnterRoom_ == null ? com.kys.util.netty.proto.GameProto.ServerEnterRoom.getDefaultInstance() : serverEnterRoom_;
    }
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder getServerEnterRoomOrBuilder() {
      return getServerEnterRoom();
    }

    public static final int SERVERRECOVERGAME_FIELD_NUMBER = 102;
    private com.kys.util.netty.proto.GameProto.ServerRecoverGame serverRecoverGame_;
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    public boolean hasServerRecoverGame() {
      return serverRecoverGame_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerRecoverGame getServerRecoverGame() {
      return serverRecoverGame_ == null ? com.kys.util.netty.proto.GameProto.ServerRecoverGame.getDefaultInstance() : serverRecoverGame_;
    }
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder getServerRecoverGameOrBuilder() {
      return getServerRecoverGame();
    }

    public static final int SERVERDOCATCH_FIELD_NUMBER = 103;
    private com.kys.util.netty.proto.GameProto.ServerDoCatch serverDoCatch_;
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    public boolean hasServerDoCatch() {
      return serverDoCatch_ != null;
    }
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerDoCatch getServerDoCatch() {
      return serverDoCatch_ == null ? com.kys.util.netty.proto.GameProto.ServerDoCatch.getDefaultInstance() : serverDoCatch_;
    }
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder getServerDoCatchOrBuilder() {
      return getServerDoCatch();
    }

    public static final int SERVERPLAYCARDS_FIELD_NUMBER = 104;
    private com.kys.util.netty.proto.GameProto.ServerPlayCards serverPlayCards_;
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    public boolean hasServerPlayCards() {
      return serverPlayCards_ != null;
    }
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerPlayCards getServerPlayCards() {
      return serverPlayCards_ == null ? com.kys.util.netty.proto.GameProto.ServerPlayCards.getDefaultInstance() : serverPlayCards_;
    }
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder getServerPlayCardsOrBuilder() {
      return getServerPlayCards();
    }

    public static final int SERVERAUTOPLAY_FIELD_NUMBER = 105;
    private com.kys.util.netty.proto.GameProto.ServerAutoPlay serverAutoPlay_;
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    public boolean hasServerAutoPlay() {
      return serverAutoPlay_ != null;
    }
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerAutoPlay getServerAutoPlay() {
      return serverAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.ServerAutoPlay.getDefaultInstance() : serverAutoPlay_;
    }
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder getServerAutoPlayOrBuilder() {
      return getServerAutoPlay();
    }

    public static final int SERVERLEAVEROOM_FIELD_NUMBER = 106;
    private com.kys.util.netty.proto.GameProto.ServerLeaveRoom serverLeaveRoom_;
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    public boolean hasServerLeaveRoom() {
      return serverLeaveRoom_ != null;
    }
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerLeaveRoom getServerLeaveRoom() {
      return serverLeaveRoom_ == null ? com.kys.util.netty.proto.GameProto.ServerLeaveRoom.getDefaultInstance() : serverLeaveRoom_;
    }
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder getServerLeaveRoomOrBuilder() {
      return getServerLeaveRoom();
    }

    public static final int SERVERCANCLEJOIN_FIELD_NUMBER = 107;
    private com.kys.util.netty.proto.GameProto.ServerCancleJoin serverCancleJoin_;
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    public boolean hasServerCancleJoin() {
      return serverCancleJoin_ != null;
    }
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerCancleJoin getServerCancleJoin() {
      return serverCancleJoin_ == null ? com.kys.util.netty.proto.GameProto.ServerCancleJoin.getDefaultInstance() : serverCancleJoin_;
    }
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder getServerCancleJoinOrBuilder() {
      return getServerCancleJoin();
    }

    public static final int SERVERQUERYINDEX_FIELD_NUMBER = 108;
    private com.kys.util.netty.proto.GameProto.ServerQueryIndex serverQueryIndex_;
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    public boolean hasServerQueryIndex() {
      return serverQueryIndex_ != null;
    }
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerQueryIndex getServerQueryIndex() {
      return serverQueryIndex_ == null ? com.kys.util.netty.proto.GameProto.ServerQueryIndex.getDefaultInstance() : serverQueryIndex_;
    }
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder getServerQueryIndexOrBuilder() {
      return getServerQueryIndex();
    }

    public static final int SERVERRETRYRETURNGAME_FIELD_NUMBER = 109;
    private com.kys.util.netty.proto.GameProto.ServerRetryReturnGame serverRetryReturnGame_;
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    public boolean hasServerRetryReturnGame() {
      return serverRetryReturnGame_ != null;
    }
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerRetryReturnGame getServerRetryReturnGame() {
      return serverRetryReturnGame_ == null ? com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.getDefaultInstance() : serverRetryReturnGame_;
    }
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder getServerRetryReturnGameOrBuilder() {
      return getServerRetryReturnGame();
    }

    public static final int SERVERGETRANKLIST_FIELD_NUMBER = 200;
    private com.kys.util.netty.proto.HallProto.ServerGetRankList serverGetRankList_;
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    public boolean hasServerGetRankList() {
      return serverGetRankList_ != null;
    }
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRankList getServerGetRankList() {
      return serverGetRankList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRankList.getDefaultInstance() : serverGetRankList_;
    }
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder getServerGetRankListOrBuilder() {
      return getServerGetRankList();
    }

    public static final int SERVERREWARDMESSAGE_FIELD_NUMBER = 204;
    private com.kys.util.netty.proto.HallProto.ServerRewardMessage serverRewardMessage_;
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    public boolean hasServerRewardMessage() {
      return serverRewardMessage_ != null;
    }
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerRewardMessage getServerRewardMessage() {
      return serverRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.ServerRewardMessage.getDefaultInstance() : serverRewardMessage_;
    }
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder getServerRewardMessageOrBuilder() {
      return getServerRewardMessage();
    }

    public static final int SERVERGETROOMCONFIG_FIELD_NUMBER = 206;
    private com.kys.util.netty.proto.HallProto.ServerGetRoomConfig serverGetRoomConfig_;
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    public boolean hasServerGetRoomConfig() {
      return serverGetRoomConfig_ != null;
    }
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomConfig getServerGetRoomConfig() {
      return serverGetRoomConfig_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.getDefaultInstance() : serverGetRoomConfig_;
    }
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder getServerGetRoomConfigOrBuilder() {
      return getServerGetRoomConfig();
    }

    public static final int SERVERGETMONTHCARDDIAMOND_FIELD_NUMBER = 209;
    private com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond serverGetMonthCardDiamond_;
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    public boolean hasServerGetMonthCardDiamond() {
      return serverGetMonthCardDiamond_ != null;
    }
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond getServerGetMonthCardDiamond() {
      return serverGetMonthCardDiamond_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.getDefaultInstance() : serverGetMonthCardDiamond_;
    }
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder getServerGetMonthCardDiamondOrBuilder() {
      return getServerGetMonthCardDiamond();
    }

    public static final int SERVERGETLOTTERYCOUNT_FIELD_NUMBER = 210;
    private com.kys.util.netty.proto.HallProto.ServerGetLotteryCount serverGetLotteryCount_;
    /**
     * <pre>
     ** 服务器返回玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    public boolean hasServerGetLotteryCount() {
      return serverGetLotteryCount_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetLotteryCount getServerGetLotteryCount() {
      return serverGetLotteryCount_ == null ? com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.getDefaultInstance() : serverGetLotteryCount_;
    }
    /**
     * <pre>
     ** 服务器返回玩家抽取红包比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder getServerGetLotteryCountOrBuilder() {
      return getServerGetLotteryCount();
    }

    public static final int SERVERGETROOMINFO_FIELD_NUMBER = 211;
    private com.kys.util.netty.proto.HallProto.ServerGetRoomInfo serverGetRoomInfo_;
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    public boolean hasServerGetRoomInfo() {
      return serverGetRoomInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomInfo getServerGetRoomInfo() {
      return serverGetRoomInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.getDefaultInstance() : serverGetRoomInfo_;
    }
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder getServerGetRoomInfoOrBuilder() {
      return getServerGetRoomInfo();
    }

    public static final int SERVERSENDTELCODE_FIELD_NUMBER = 212;
    private com.kys.util.netty.proto.HallProto.ServerSendTelCode serverSendTelCode_;
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    public boolean hasServerSendTelCode() {
      return serverSendTelCode_ != null;
    }
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSendTelCode getServerSendTelCode() {
      return serverSendTelCode_ == null ? com.kys.util.netty.proto.HallProto.ServerSendTelCode.getDefaultInstance() : serverSendTelCode_;
    }
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder getServerSendTelCodeOrBuilder() {
      return getServerSendTelCode();
    }

    public static final int SERVERVERIFYTELCODE_FIELD_NUMBER = 213;
    private com.kys.util.netty.proto.HallProto.ServerVerifyTelCode serverVerifyTelCode_;
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    public boolean hasServerVerifyTelCode() {
      return serverVerifyTelCode_ != null;
    }
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerVerifyTelCode getServerVerifyTelCode() {
      return serverVerifyTelCode_ == null ? com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.getDefaultInstance() : serverVerifyTelCode_;
    }
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder getServerVerifyTelCodeOrBuilder() {
      return getServerVerifyTelCode();
    }

    public static final int SERVERSHAREPACKAGE_FIELD_NUMBER = 217;
    private com.kys.util.netty.proto.HallProto.ServerSharePackage serverSharePackage_;
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    public boolean hasServerSharePackage() {
      return serverSharePackage_ != null;
    }
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSharePackage getServerSharePackage() {
      return serverSharePackage_ == null ? com.kys.util.netty.proto.HallProto.ServerSharePackage.getDefaultInstance() : serverSharePackage_;
    }
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder getServerSharePackageOrBuilder() {
      return getServerSharePackage();
    }

    public static final int SERVERGETAWARDLIST_FIELD_NUMBER = 218;
    private com.kys.util.netty.proto.HallProto.ServerGetAwardList serverGetAwardList_;
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    public boolean hasServerGetAwardList() {
      return serverGetAwardList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetAwardList getServerGetAwardList() {
      return serverGetAwardList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetAwardList.getDefaultInstance() : serverGetAwardList_;
    }
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder getServerGetAwardListOrBuilder() {
      return getServerGetAwardList();
    }

    public static final int SERVERCHECKCONNECT_FIELD_NUMBER = 219;
    private com.kys.util.netty.proto.HallProto.ServerCheckConnect serverCheckConnect_;
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    public boolean hasServerCheckConnect() {
      return serverCheckConnect_ != null;
    }
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerCheckConnect getServerCheckConnect() {
      return serverCheckConnect_ == null ? com.kys.util.netty.proto.HallProto.ServerCheckConnect.getDefaultInstance() : serverCheckConnect_;
    }
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder getServerCheckConnectOrBuilder() {
      return getServerCheckConnect();
    }

    public static final int SERVERGETPFLIST_FIELD_NUMBER = 220;
    private com.kys.util.netty.proto.HallProto.ServerGetPFList serverGetPFList_;
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    public boolean hasServerGetPFList() {
      return serverGetPFList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetPFList getServerGetPFList() {
      return serverGetPFList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetPFList.getDefaultInstance() : serverGetPFList_;
    }
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder getServerGetPFListOrBuilder() {
      return getServerGetPFList();
    }

    public static final int SERVERCHOOSEPF_FIELD_NUMBER = 221;
    private com.kys.util.netty.proto.HallProto.ServerChoosePF serverChoosePF_;
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    public boolean hasServerChoosePF() {
      return serverChoosePF_ != null;
    }
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerChoosePF getServerChoosePF() {
      return serverChoosePF_ == null ? com.kys.util.netty.proto.HallProto.ServerChoosePF.getDefaultInstance() : serverChoosePF_;
    }
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder getServerChoosePFOrBuilder() {
      return getServerChoosePF();
    }

    public static final int SERVERGETHISTORYRANK_FIELD_NUMBER = 222;
    private com.kys.util.netty.proto.HallProto.ServerGetHistoryRank serverGetHistoryRank_;
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    public boolean hasServerGetHistoryRank() {
      return serverGetHistoryRank_ != null;
    }
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetHistoryRank getServerGetHistoryRank() {
      return serverGetHistoryRank_ == null ? com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.getDefaultInstance() : serverGetHistoryRank_;
    }
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder getServerGetHistoryRankOrBuilder() {
      return getServerGetHistoryRank();
    }

    public static final int SERVERH5REWARD_FIELD_NUMBER = 223;
    private com.kys.util.netty.proto.HallProto.ServerH5Reward serverH5Reward_;
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    public boolean hasServerH5Reward() {
      return serverH5Reward_ != null;
    }
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerH5Reward getServerH5Reward() {
      return serverH5Reward_ == null ? com.kys.util.netty.proto.HallProto.ServerH5Reward.getDefaultInstance() : serverH5Reward_;
    }
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder getServerH5RewardOrBuilder() {
      return getServerH5Reward();
    }

    public static final int SERVERNEWDRAWWINCUP_FIELD_NUMBER = 224;
    private com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup serverNewDrawWinCup_;
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    public boolean hasServerNewDrawWinCup() {
      return serverNewDrawWinCup_ != null;
    }
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup getServerNewDrawWinCup() {
      return serverNewDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.getDefaultInstance() : serverNewDrawWinCup_;
    }
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder getServerNewDrawWinCupOrBuilder() {
      return getServerNewDrawWinCup();
    }

    public static final int SERVERGETNEWHALLINFO_FIELD_NUMBER = 225;
    private com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo serverGetNewHallInfo_;
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    public boolean hasServerGetNewHallInfo() {
      return serverGetNewHallInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo getServerGetNewHallInfo() {
      return serverGetNewHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.getDefaultInstance() : serverGetNewHallInfo_;
    }
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder getServerGetNewHallInfoOrBuilder() {
      return getServerGetNewHallInfo();
    }

    public static final int SERVERLUCKWALL_FIELD_NUMBER = 228;
    private com.kys.util.netty.proto.HallProto.ServerLuckWall serverLuckWall_;
    /**
     * <pre>
     ** 服务器返回好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
     */
    public boolean hasServerLuckWall() {
      return serverLuckWall_ != null;
    }
    /**
     * <pre>
     ** 服务器返回好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerLuckWall getServerLuckWall() {
      return serverLuckWall_ == null ? com.kys.util.netty.proto.HallProto.ServerLuckWall.getDefaultInstance() : serverLuckWall_;
    }
    /**
     * <pre>
     ** 服务器返回好运墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerLuckWallOrBuilder getServerLuckWallOrBuilder() {
      return getServerLuckWall();
    }

    public static final int SERVERCDKEYAWARD_FIELD_NUMBER = 229;
    private com.kys.util.netty.proto.HallProto.ServerCdkeyAward serverCdkeyAward_;
    /**
     * <pre>
     ** 服务器兑换码奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
     */
    public boolean hasServerCdkeyAward() {
      return serverCdkeyAward_ != null;
    }
    /**
     * <pre>
     ** 服务器兑换码奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerCdkeyAward getServerCdkeyAward() {
      return serverCdkeyAward_ == null ? com.kys.util.netty.proto.HallProto.ServerCdkeyAward.getDefaultInstance() : serverCdkeyAward_;
    }
    /**
     * <pre>
     ** 服务器兑换码奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerCdkeyAwardOrBuilder getServerCdkeyAwardOrBuilder() {
      return getServerCdkeyAward();
    }

    public static final int SERVERGETSTOREINFO_FIELD_NUMBER = 300;
    private com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo serverGetStoreInfo_;
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
     */
    public boolean hasServerGetStoreInfo() {
      return serverGetStoreInfo_ != null;
    }
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo getServerGetStoreInfo() {
      return serverGetStoreInfo_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.getDefaultInstance() : serverGetStoreInfo_;
    }
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetStoreInfoOrBuilder getServerGetStoreInfoOrBuilder() {
      return getServerGetStoreInfo();
    }

    public static final int SERVERCONVERTGOODS_FIELD_NUMBER = 301;
    private com.kys.util.netty.proto.StoreProto.ServerConvertGoods serverConvertGoods_;
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    public boolean hasServerConvertGoods() {
      return serverConvertGoods_ != null;
    }
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerConvertGoods getServerConvertGoods() {
      return serverConvertGoods_ == null ? com.kys.util.netty.proto.StoreProto.ServerConvertGoods.getDefaultInstance() : serverConvertGoods_;
    }
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder getServerConvertGoodsOrBuilder() {
      return getServerConvertGoods();
    }

    public static final int SERVERWXPAYRESULT_FIELD_NUMBER = 303;
    private com.kys.util.netty.proto.StoreProto.ServerWXPayResult serverWXPayResult_;
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    public boolean hasServerWXPayResult() {
      return serverWXPayResult_ != null;
    }
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerWXPayResult getServerWXPayResult() {
      return serverWXPayResult_ == null ? com.kys.util.netty.proto.StoreProto.ServerWXPayResult.getDefaultInstance() : serverWXPayResult_;
    }
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder getServerWXPayResultOrBuilder() {
      return getServerWXPayResult();
    }

    public static final int SERVERBUYORDERGOODS_FIELD_NUMBER = 304;
    private com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods serverBuyOrderGoods_;
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    public boolean hasServerBuyOrderGoods() {
      return serverBuyOrderGoods_ != null;
    }
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods getServerBuyOrderGoods() {
      return serverBuyOrderGoods_ == null ? com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.getDefaultInstance() : serverBuyOrderGoods_;
    }
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder getServerBuyOrderGoodsOrBuilder() {
      return getServerBuyOrderGoods();
    }

    public static final int SERVERGETFIRSTCHARGE_FIELD_NUMBER = 305;
    private com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge serverGetFirstCharge_;
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    public boolean hasServerGetFirstCharge() {
      return serverGetFirstCharge_ != null;
    }
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge getServerGetFirstCharge() {
      return serverGetFirstCharge_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.getDefaultInstance() : serverGetFirstCharge_;
    }
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder getServerGetFirstChargeOrBuilder() {
      return getServerGetFirstCharge();
    }

    public static final int SERVERGETDAILYGIFT_FIELD_NUMBER = 306;
    private com.kys.util.netty.proto.StoreProto.ServerGetDailyGift serverGetDailyGift_;
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    public boolean hasServerGetDailyGift() {
      return serverGetDailyGift_ != null;
    }
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetDailyGift getServerGetDailyGift() {
      return serverGetDailyGift_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.getDefaultInstance() : serverGetDailyGift_;
    }
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder getServerGetDailyGiftOrBuilder() {
      return getServerGetDailyGift();
    }

    public static final int SERVERGETMONTHCARD_FIELD_NUMBER = 307;
    private com.kys.util.netty.proto.StoreProto.ServerGetMonthCard serverGetMonthCard_;
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    public boolean hasServerGetMonthCard() {
      return serverGetMonthCard_ != null;
    }
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetMonthCard getServerGetMonthCard() {
      return serverGetMonthCard_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.getDefaultInstance() : serverGetMonthCard_;
    }
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder getServerGetMonthCardOrBuilder() {
      return getServerGetMonthCard();
    }

    public static final int SERVERGETRESURGENCEGIFT_FIELD_NUMBER = 308;
    private com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift serverGetResurgenceGift_;
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    public boolean hasServerGetResurgenceGift() {
      return serverGetResurgenceGift_ != null;
    }
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift getServerGetResurgenceGift() {
      return serverGetResurgenceGift_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.getDefaultInstance() : serverGetResurgenceGift_;
    }
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder getServerGetResurgenceGiftOrBuilder() {
      return getServerGetResurgenceGift();
    }

    public static final int SERVERGETCONVERTMESSAGE_FIELD_NUMBER = 309;
    private com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage serverGetConvertMessage_;
    /**
     * <pre>
     ** 服务器返回兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
     */
    public boolean hasServerGetConvertMessage() {
      return serverGetConvertMessage_ != null;
    }
    /**
     * <pre>
     ** 服务器返回兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage getServerGetConvertMessage() {
      return serverGetConvertMessage_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.getDefaultInstance() : serverGetConvertMessage_;
    }
    /**
     * <pre>
     ** 服务器返回兑换墙 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetConvertMessageOrBuilder getServerGetConvertMessageOrBuilder() {
      return getServerGetConvertMessage();
    }

    public static final int SERVERNEWBUYORDER_FIELD_NUMBER = 310;
    private com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder serverNewBuyOrder_;
    /**
     * <pre>
     ** 服务器返回下单接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
     */
    public boolean hasServerNewBuyOrder() {
      return serverNewBuyOrder_ != null;
    }
    /**
     * <pre>
     ** 服务器返回下单接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder getServerNewBuyOrder() {
      return serverNewBuyOrder_ == null ? com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.getDefaultInstance() : serverNewBuyOrder_;
    }
    /**
     * <pre>
     ** 服务器返回下单接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerNewBuyOrderOrBuilder getServerNewBuyOrderOrBuilder() {
      return getServerNewBuyOrder();
    }

    public static final int SERVERNEWCONVERT_FIELD_NUMBER = 311;
    private com.kys.util.netty.proto.StoreProto.ServerNewConvert serverNewConvert_;
    /**
     * <pre>
     ** Server 返回兑换商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
     */
    public boolean hasServerNewConvert() {
      return serverNewConvert_ != null;
    }
    /**
     * <pre>
     ** Server 返回兑换商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerNewConvert getServerNewConvert() {
      return serverNewConvert_ == null ? com.kys.util.netty.proto.StoreProto.ServerNewConvert.getDefaultInstance() : serverNewConvert_;
    }
    /**
     * <pre>
     ** Server 返回兑换商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerNewConvertOrBuilder getServerNewConvertOrBuilder() {
      return getServerNewConvert();
    }

    public static final int SERVERALIPAYACCOUNT_FIELD_NUMBER = 312;
    private com.kys.util.netty.proto.StoreProto.ServerAlipayAccount serverAlipayAccount_;
    /**
     * <pre>
     ** 服务器返回支付宝账号和名字信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
     */
    public boolean hasServerAlipayAccount() {
      return serverAlipayAccount_ != null;
    }
    /**
     * <pre>
     ** 服务器返回支付宝账号和名字信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerAlipayAccount getServerAlipayAccount() {
      return serverAlipayAccount_ == null ? com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.getDefaultInstance() : serverAlipayAccount_;
    }
    /**
     * <pre>
     ** 服务器返回支付宝账号和名字信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerAlipayAccountOrBuilder getServerAlipayAccountOrBuilder() {
      return getServerAlipayAccount();
    }

    public static final int SERVERPAYOPTIONS_FIELD_NUMBER = 313;
    private com.kys.util.netty.proto.StoreProto.ServerPayOptions serverPayOptions_;
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
     */
    public boolean hasServerPayOptions() {
      return serverPayOptions_ != null;
    }
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerPayOptions getServerPayOptions() {
      return serverPayOptions_ == null ? com.kys.util.netty.proto.StoreProto.ServerPayOptions.getDefaultInstance() : serverPayOptions_;
    }
    /**
     * <pre>
     ** 获取当前支付方式 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerPayOptionsOrBuilder getServerPayOptionsOrBuilder() {
      return getServerPayOptions();
    }

    public static final int SERVERIDVERIFY_FIELD_NUMBER = 314;
    private com.kys.util.netty.proto.StoreProto.ServerIdVerify serverIdVerify_;
    /**
     * <pre>
     ** 返回实名认证信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
     */
    public boolean hasServerIdVerify() {
      return serverIdVerify_ != null;
    }
    /**
     * <pre>
     ** 返回实名认证信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerIdVerify getServerIdVerify() {
      return serverIdVerify_ == null ? com.kys.util.netty.proto.StoreProto.ServerIdVerify.getDefaultInstance() : serverIdVerify_;
    }
    /**
     * <pre>
     ** 返回实名认证信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerIdVerifyOrBuilder getServerIdVerifyOrBuilder() {
      return getServerIdVerify();
    }

    public static final int SERVERVERIFYAWARD_FIELD_NUMBER = 315;
    private com.kys.util.netty.proto.StoreProto.ServerVerifyAward serverVerifyAward_;
    /**
     * <pre>
     ** 展示实名认证的奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
     */
    public boolean hasServerVerifyAward() {
      return serverVerifyAward_ != null;
    }
    /**
     * <pre>
     ** 展示实名认证的奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerVerifyAward getServerVerifyAward() {
      return serverVerifyAward_ == null ? com.kys.util.netty.proto.StoreProto.ServerVerifyAward.getDefaultInstance() : serverVerifyAward_;
    }
    /**
     * <pre>
     ** 展示实名认证的奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerVerifyAwardOrBuilder getServerVerifyAwardOrBuilder() {
      return getServerVerifyAward();
    }

    public static final int SERVERMINIAPPPAY_FIELD_NUMBER = 316;
    private com.kys.util.netty.proto.StoreProto.ServerMiniAppPay serverMiniAppPay_;
    /**
     * <pre>
     ** 用于微信小程序支付的返回信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
     */
    public boolean hasServerMiniAppPay() {
      return serverMiniAppPay_ != null;
    }
    /**
     * <pre>
     ** 用于微信小程序支付的返回信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerMiniAppPay getServerMiniAppPay() {
      return serverMiniAppPay_ == null ? com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.getDefaultInstance() : serverMiniAppPay_;
    }
    /**
     * <pre>
     ** 用于微信小程序支付的返回信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerMiniAppPayOrBuilder getServerMiniAppPayOrBuilder() {
      return getServerMiniAppPay();
    }

    public static final int SERVERUNIONACCOUNT_FIELD_NUMBER = 317;
    private com.kys.util.netty.proto.StoreProto.ServerUnionAccount serverUnionAccount_;
    /**
     * <pre>
     ** 服务器返回银行卡卡号信息列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
     */
    public boolean hasServerUnionAccount() {
      return serverUnionAccount_ != null;
    }
    /**
     * <pre>
     ** 服务器返回银行卡卡号信息列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerUnionAccount getServerUnionAccount() {
      return serverUnionAccount_ == null ? com.kys.util.netty.proto.StoreProto.ServerUnionAccount.getDefaultInstance() : serverUnionAccount_;
    }
    /**
     * <pre>
     ** 服务器返回银行卡卡号信息列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerUnionAccountOrBuilder getServerUnionAccountOrBuilder() {
      return getServerUnionAccount();
    }

    public static final int SERVERGETANNOUNCE_FIELD_NUMBER = 500;
    private com.kys.util.netty.proto.HallProto.ServerGetAnnounce serverGetAnnounce_;
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    public boolean hasServerGetAnnounce() {
      return serverGetAnnounce_ != null;
    }
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetAnnounce getServerGetAnnounce() {
      return serverGetAnnounce_ == null ? com.kys.util.netty.proto.HallProto.ServerGetAnnounce.getDefaultInstance() : serverGetAnnounce_;
    }
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder getServerGetAnnounceOrBuilder() {
      return getServerGetAnnounce();
    }

    public static final int SERVERGETMAIL_FIELD_NUMBER = 600;
    private com.kys.util.netty.proto.HallProto.ServerGetMail serverGetMail_;
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    public boolean hasServerGetMail() {
      return serverGetMail_ != null;
    }
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMail getServerGetMail() {
      return serverGetMail_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMail.getDefaultInstance() : serverGetMail_;
    }
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder getServerGetMailOrBuilder() {
      return getServerGetMail();
    }

    public static final int SERVERGETMAILREWARD_FIELD_NUMBER = 601;
    private com.kys.util.netty.proto.HallProto.ServerGetMailReward serverGetMailReward_;
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    public boolean hasServerGetMailReward() {
      return serverGetMailReward_ != null;
    }
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMailReward getServerGetMailReward() {
      return serverGetMailReward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMailReward.getDefaultInstance() : serverGetMailReward_;
    }
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder getServerGetMailRewardOrBuilder() {
      return getServerGetMailReward();
    }

    public static final int SERVERDELMAIL_FIELD_NUMBER = 602;
    private com.kys.util.netty.proto.HallProto.ServerDelMail serverDelMail_;
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    public boolean hasServerDelMail() {
      return serverDelMail_ != null;
    }
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDelMail getServerDelMail() {
      return serverDelMail_ == null ? com.kys.util.netty.proto.HallProto.ServerDelMail.getDefaultInstance() : serverDelMail_;
    }
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder getServerDelMailOrBuilder() {
      return getServerDelMail();
    }

    public static final int SERVERREADMAIL_FIELD_NUMBER = 603;
    private com.kys.util.netty.proto.HallProto.ServerReadMail serverReadMail_;
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    public boolean hasServerReadMail() {
      return serverReadMail_ != null;
    }
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerReadMail getServerReadMail() {
      return serverReadMail_ == null ? com.kys.util.netty.proto.HallProto.ServerReadMail.getDefaultInstance() : serverReadMail_;
    }
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder getServerReadMailOrBuilder() {
      return getServerReadMail();
    }

    public static final int SERVERDEL2R_FIELD_NUMBER = 604;
    private com.kys.util.netty.proto.HallProto.ServerDel2R serverDel2R_;
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    public boolean hasServerDel2R() {
      return serverDel2R_ != null;
    }
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDel2R getServerDel2R() {
      return serverDel2R_ == null ? com.kys.util.netty.proto.HallProto.ServerDel2R.getDefaultInstance() : serverDel2R_;
    }
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder getServerDel2ROrBuilder() {
      return getServerDel2R();
    }

    public static final int SERVERQUERYDAILYTASK_FIELD_NUMBER = 700;
    private com.kys.util.netty.proto.HallProto.ServerQueryDailyTask serverQueryDailyTask_;
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    public boolean hasServerQueryDailyTask() {
      return serverQueryDailyTask_ != null;
    }
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryDailyTask getServerQueryDailyTask() {
      return serverQueryDailyTask_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.getDefaultInstance() : serverQueryDailyTask_;
    }
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder getServerQueryDailyTaskOrBuilder() {
      return getServerQueryDailyTask();
    }

    public static final int SERVERGETNOVICEREWARD_FIELD_NUMBER = 702;
    private com.kys.util.netty.proto.HallProto.ServerGetNoviceReward serverGetNoviceReward_;
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    public boolean hasServerGetNoviceReward() {
      return serverGetNoviceReward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetNoviceReward getServerGetNoviceReward() {
      return serverGetNoviceReward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.getDefaultInstance() : serverGetNoviceReward_;
    }
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder getServerGetNoviceRewardOrBuilder() {
      return getServerGetNoviceReward();
    }

    public static final int SERVERQUERYNOVICETASK_FIELD_NUMBER = 703;
    private com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask serverQueryNoviceTask_;
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    public boolean hasServerQueryNoviceTask() {
      return serverQueryNoviceTask_ != null;
    }
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask getServerQueryNoviceTask() {
      return serverQueryNoviceTask_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.getDefaultInstance() : serverQueryNoviceTask_;
    }
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder getServerQueryNoviceTaskOrBuilder() {
      return getServerQueryNoviceTask();
    }

    public static final int SERVERGETDTAWARD_FIELD_NUMBER = 704;
    private com.kys.util.netty.proto.HallProto.ServerGetDTAward serverGetDTAward_;
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    public boolean hasServerGetDTAward() {
      return serverGetDTAward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetDTAward getServerGetDTAward() {
      return serverGetDTAward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetDTAward.getDefaultInstance() : serverGetDTAward_;
    }
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder getServerGetDTAwardOrBuilder() {
      return getServerGetDTAward();
    }

    public static final int SERVERGETRECEIVEADDR_FIELD_NUMBER = 800;
    private com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr serverGetReceiveAddr_;
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    public boolean hasServerGetReceiveAddr() {
      return serverGetReceiveAddr_ != null;
    }
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr getServerGetReceiveAddr() {
      return serverGetReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.getDefaultInstance() : serverGetReceiveAddr_;
    }
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder getServerGetReceiveAddrOrBuilder() {
      return getServerGetReceiveAddr();
    }

    public static final int SERVERALTERRECEIVEADDR_FIELD_NUMBER = 801;
    private com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr serverAlterReceiveAddr_;
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    public boolean hasServerAlterReceiveAddr() {
      return serverAlterReceiveAddr_ != null;
    }
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr getServerAlterReceiveAddr() {
      return serverAlterReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.getDefaultInstance() : serverAlterReceiveAddr_;
    }
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder getServerAlterReceiveAddrOrBuilder() {
      return getServerAlterReceiveAddr();
    }

    public static final int SERVERSNATCHLIST_FIELD_NUMBER = 802;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchList serverSnatchList_;
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    public boolean hasServerSnatchList() {
      return serverSnatchList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchList getServerSnatchList() {
      return serverSnatchList_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchList.getDefaultInstance() : serverSnatchList_;
    }
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder getServerSnatchListOrBuilder() {
      return getServerSnatchList();
    }

    public static final int SERVERSNATCHITEMDETAIL_FIELD_NUMBER = 803;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail serverSnatchItemDetail_;
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    public boolean hasServerSnatchItemDetail() {
      return serverSnatchItemDetail_ != null;
    }
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail getServerSnatchItemDetail() {
      return serverSnatchItemDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.getDefaultInstance() : serverSnatchItemDetail_;
    }
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder getServerSnatchItemDetailOrBuilder() {
      return getServerSnatchItemDetail();
    }

    public static final int SERVERSNATCHBET_FIELD_NUMBER = 804;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchBet serverSnatchBet_;
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    public boolean hasServerSnatchBet() {
      return serverSnatchBet_ != null;
    }
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchBet getServerSnatchBet() {
      return serverSnatchBet_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.getDefaultInstance() : serverSnatchBet_;
    }
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder getServerSnatchBetOrBuilder() {
      return getServerSnatchBet();
    }

    public static final int SERVERSNATCHAWARDLIST_FIELD_NUMBER = 805;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList serverSnatchAwardList_;
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    public boolean hasServerSnatchAwardList() {
      return serverSnatchAwardList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList getServerSnatchAwardList() {
      return serverSnatchAwardList_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.getDefaultInstance() : serverSnatchAwardList_;
    }
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder getServerSnatchAwardListOrBuilder() {
      return getServerSnatchAwardList();
    }

    public static final int SERVEROWNSNATCHRECORD_FIELD_NUMBER = 806;
    private com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord serverOwnSnatchRecord_;
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    public boolean hasServerOwnSnatchRecord() {
      return serverOwnSnatchRecord_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord getServerOwnSnatchRecord() {
      return serverOwnSnatchRecord_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.getDefaultInstance() : serverOwnSnatchRecord_;
    }
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder getServerOwnSnatchRecordOrBuilder() {
      return getServerOwnSnatchRecord();
    }

    public static final int SERVERSNATCHITEMHISTORY_FIELD_NUMBER = 807;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory serverSnatchItemHistory_;
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    public boolean hasServerSnatchItemHistory() {
      return serverSnatchItemHistory_ != null;
    }
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory getServerSnatchItemHistory() {
      return serverSnatchItemHistory_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.getDefaultInstance() : serverSnatchItemHistory_;
    }
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder getServerSnatchItemHistoryOrBuilder() {
      return getServerSnatchItemHistory();
    }

    public static final int SERVERSNATCHHISTORYDETAIL_FIELD_NUMBER = 808;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail serverSnatchHistoryDetail_;
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    public boolean hasServerSnatchHistoryDetail() {
      return serverSnatchHistoryDetail_ != null;
    }
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail getServerSnatchHistoryDetail() {
      return serverSnatchHistoryDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.getDefaultInstance() : serverSnatchHistoryDetail_;
    }
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder getServerSnatchHistoryDetailOrBuilder() {
      return getServerSnatchHistoryDetail();
    }

    public static final int SERVERSNATCHGETAWARD_FIELD_NUMBER = 809;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward serverSnatchGetAward_;
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    public boolean hasServerSnatchGetAward() {
      return serverSnatchGetAward_ != null;
    }
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward getServerSnatchGetAward() {
      return serverSnatchGetAward_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.getDefaultInstance() : serverSnatchGetAward_;
    }
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder getServerSnatchGetAwardOrBuilder() {
      return getServerSnatchGetAward();
    }

    public static final int SERVERENTERDG_FIELD_NUMBER = 900;
    private com.kys.util.netty.proto.SnatchProto.ServerEnterDG serverEnterDG_;
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    public boolean hasServerEnterDG() {
      return serverEnterDG_ != null;
    }
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerEnterDG getServerEnterDG() {
      return serverEnterDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerEnterDG.getDefaultInstance() : serverEnterDG_;
    }
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder getServerEnterDGOrBuilder() {
      return getServerEnterDG();
    }

    public static final int SERVERDGLOTTERY_FIELD_NUMBER = 901;
    private com.kys.util.netty.proto.SnatchProto.ServerDGLottery serverDGLottery_;
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    public boolean hasServerDGLottery() {
      return serverDGLottery_ != null;
    }
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerDGLottery getServerDGLottery() {
      return serverDGLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerDGLottery.getDefaultInstance() : serverDGLottery_;
    }
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder getServerDGLotteryOrBuilder() {
      return getServerDGLottery();
    }

    public static final int SERVERRESETLOTTERY_FIELD_NUMBER = 902;
    private com.kys.util.netty.proto.SnatchProto.ServerResetLottery serverResetLottery_;
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    public boolean hasServerResetLottery() {
      return serverResetLottery_ != null;
    }
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerResetLottery getServerResetLottery() {
      return serverResetLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerResetLottery.getDefaultInstance() : serverResetLottery_;
    }
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder getServerResetLotteryOrBuilder() {
      return getServerResetLottery();
    }

    public static final int SERVEREXITDG_FIELD_NUMBER = 903;
    private com.kys.util.netty.proto.SnatchProto.ServerExitDG serverExitDG_;
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    public boolean hasServerExitDG() {
      return serverExitDG_ != null;
    }
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerExitDG getServerExitDG() {
      return serverExitDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerExitDG.getDefaultInstance() : serverExitDG_;
    }
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder getServerExitDGOrBuilder() {
      return getServerExitDG();
    }

    public static final int SERVEROPENDG_FIELD_NUMBER = 904;
    private com.kys.util.netty.proto.SnatchProto.ServerOpenDG serverOpenDG_;
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    public boolean hasServerOpenDG() {
      return serverOpenDG_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOpenDG getServerOpenDG() {
      return serverOpenDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOpenDG.getDefaultInstance() : serverOpenDG_;
    }
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder getServerOpenDGOrBuilder() {
      return getServerOpenDG();
    }

    public static final int SERVEROPENDD_FIELD_NUMBER = 905;
    private com.kys.util.netty.proto.SnatchProto.ServerOpenDD serverOpenDD_;
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    public boolean hasServerOpenDD() {
      return serverOpenDD_ != null;
    }
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOpenDD getServerOpenDD() {
      return serverOpenDD_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOpenDD.getDefaultInstance() : serverOpenDD_;
    }
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder getServerOpenDDOrBuilder() {
      return getServerOpenDD();
    }

    public static final int SERVERDDLOTTERY_FIELD_NUMBER = 906;
    private com.kys.util.netty.proto.SnatchProto.ServerDDLottery serverDDLottery_;
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    public boolean hasServerDDLottery() {
      return serverDDLottery_ != null;
    }
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerDDLottery getServerDDLottery() {
      return serverDDLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerDDLottery.getDefaultInstance() : serverDDLottery_;
    }
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder getServerDDLotteryOrBuilder() {
      return getServerDDLottery();
    }

    public static final int SERVEREXITDD_FIELD_NUMBER = 907;
    private com.kys.util.netty.proto.SnatchProto.ServerExitDD serverExitDD_;
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    public boolean hasServerExitDD() {
      return serverExitDD_ != null;
    }
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerExitDD getServerExitDD() {
      return serverExitDD_ == null ? com.kys.util.netty.proto.SnatchProto.ServerExitDD.getDefaultInstance() : serverExitDD_;
    }
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder getServerExitDDOrBuilder() {
      return getServerExitDD();
    }

    public static final int SERVERQUERYPROP_FIELD_NUMBER = 1001;
    private com.kys.util.netty.proto.PropProto.ServerQueryProp serverQueryProp_;
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    public boolean hasServerQueryProp() {
      return serverQueryProp_ != null;
    }
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerQueryProp getServerQueryProp() {
      return serverQueryProp_ == null ? com.kys.util.netty.proto.PropProto.ServerQueryProp.getDefaultInstance() : serverQueryProp_;
    }
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder getServerQueryPropOrBuilder() {
      return getServerQueryProp();
    }

    public static final int SERVERUSEPROP_FIELD_NUMBER = 1002;
    private com.kys.util.netty.proto.PropProto.ServerUseProp serverUseProp_;
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    public boolean hasServerUseProp() {
      return serverUseProp_ != null;
    }
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerUseProp getServerUseProp() {
      return serverUseProp_ == null ? com.kys.util.netty.proto.PropProto.ServerUseProp.getDefaultInstance() : serverUseProp_;
    }
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder getServerUsePropOrBuilder() {
      return getServerUseProp();
    }

    public static final int SERVERQUERYPROPCOUNT_FIELD_NUMBER = 1003;
    private com.kys.util.netty.proto.PropProto.ServerQueryPropCount serverQueryPropCount_;
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    public boolean hasServerQueryPropCount() {
      return serverQueryPropCount_ != null;
    }
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerQueryPropCount getServerQueryPropCount() {
      return serverQueryPropCount_ == null ? com.kys.util.netty.proto.PropProto.ServerQueryPropCount.getDefaultInstance() : serverQueryPropCount_;
    }
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder getServerQueryPropCountOrBuilder() {
      return getServerQueryPropCount();
    }

    public static final int SERVERSIGNINFO_FIELD_NUMBER = 1101;
    private com.kys.util.netty.proto.SignProto.ServerSignInfo serverSignInfo_;
    /**
     * <pre>
     ** 服务端返回签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
     */
    public boolean hasServerSignInfo() {
      return serverSignInfo_ != null;
    }
    /**
     * <pre>
     ** 服务端返回签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerSignInfo getServerSignInfo() {
      return serverSignInfo_ == null ? com.kys.util.netty.proto.SignProto.ServerSignInfo.getDefaultInstance() : serverSignInfo_;
    }
    /**
     * <pre>
     ** 服务端返回签到信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerSignInfoOrBuilder getServerSignInfoOrBuilder() {
      return getServerSignInfo();
    }

    public static final int SERVERSIGNAWARD_FIELD_NUMBER = 1102;
    private com.kys.util.netty.proto.SignProto.ServerSignAward serverSignAward_;
    /**
     * <pre>
     ** 服务器返回签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
     */
    public boolean hasServerSignAward() {
      return serverSignAward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerSignAward getServerSignAward() {
      return serverSignAward_ == null ? com.kys.util.netty.proto.SignProto.ServerSignAward.getDefaultInstance() : serverSignAward_;
    }
    /**
     * <pre>
     ** 服务器返回签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerSignAwardOrBuilder getServerSignAwardOrBuilder() {
      return getServerSignAward();
    }

    public static final int SERVERSIGNSTATE_FIELD_NUMBER = 1103;
    private com.kys.util.netty.proto.SignProto.ServerSignState serverSignState_;
    /**
     * <pre>
     ** 服务端返回签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
     */
    public boolean hasServerSignState() {
      return serverSignState_ != null;
    }
    /**
     * <pre>
     ** 服务端返回签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerSignState getServerSignState() {
      return serverSignState_ == null ? com.kys.util.netty.proto.SignProto.ServerSignState.getDefaultInstance() : serverSignState_;
    }
    /**
     * <pre>
     ** 服务端返回签到状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerSignStateOrBuilder getServerSignStateOrBuilder() {
      return getServerSignState();
    }

    public static final int SERVERLTLOTTERY_FIELD_NUMBER = 1104;
    private com.kys.util.netty.proto.SignProto.ServerLTLottery serverLTLottery_;
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    public boolean hasServerLTLottery() {
      return serverLTLottery_ != null;
    }
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerLTLottery getServerLTLottery() {
      return serverLTLottery_ == null ? com.kys.util.netty.proto.SignProto.ServerLTLottery.getDefaultInstance() : serverLTLottery_;
    }
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder getServerLTLotteryOrBuilder() {
      return getServerLTLottery();
    }

    public static final int SERVERGETTSREWARD_FIELD_NUMBER = 1105;
    private com.kys.util.netty.proto.SignProto.ServerGetTSReward serverGetTSReward_;
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    public boolean hasServerGetTSReward() {
      return serverGetTSReward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetTSReward getServerGetTSReward() {
      return serverGetTSReward_ == null ? com.kys.util.netty.proto.SignProto.ServerGetTSReward.getDefaultInstance() : serverGetTSReward_;
    }
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder getServerGetTSRewardOrBuilder() {
      return getServerGetTSReward();
    }

    public static final int SERVERGETLUCKINFO_FIELD_NUMBER = 1106;
    private com.kys.util.netty.proto.SignProto.ServerGetLuckInfo serverGetLuckInfo_;
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    public boolean hasServerGetLuckInfo() {
      return serverGetLuckInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetLuckInfo getServerGetLuckInfo() {
      return serverGetLuckInfo_ == null ? com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.getDefaultInstance() : serverGetLuckInfo_;
    }
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder getServerGetLuckInfoOrBuilder() {
      return getServerGetLuckInfo();
    }

    public static final int SERVERGETVIP_FIELD_NUMBER = 1203;
    private com.kys.util.netty.proto.VipProto.ServerGetVip serverGetVip_;
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
     */
    public boolean hasServerGetVip() {
      return serverGetVip_ != null;
    }
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
     */
    public com.kys.util.netty.proto.VipProto.ServerGetVip getServerGetVip() {
      return serverGetVip_ == null ? com.kys.util.netty.proto.VipProto.ServerGetVip.getDefaultInstance() : serverGetVip_;
    }
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
     */
    public com.kys.util.netty.proto.VipProto.ServerGetVipOrBuilder getServerGetVipOrBuilder() {
      return getServerGetVip();
    }

    public static final int SERVERGETDAYGIFT_FIELD_NUMBER = 1204;
    private com.kys.util.netty.proto.VipProto.ServerGetDayGift serverGetDayGift_;
    /**
     * <pre>
     ** 服务器返回领取VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
     */
    public boolean hasServerGetDayGift() {
      return serverGetDayGift_ != null;
    }
    /**
     * <pre>
     ** 服务器返回领取VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
     */
    public com.kys.util.netty.proto.VipProto.ServerGetDayGift getServerGetDayGift() {
      return serverGetDayGift_ == null ? com.kys.util.netty.proto.VipProto.ServerGetDayGift.getDefaultInstance() : serverGetDayGift_;
    }
    /**
     * <pre>
     ** 服务器返回领取VIP每日礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
     */
    public com.kys.util.netty.proto.VipProto.ServerGetDayGiftOrBuilder getServerGetDayGiftOrBuilder() {
      return getServerGetDayGift();
    }

    public static final int SERVERENTERSLEEVE_FIELD_NUMBER = 1300;
    private com.kys.util.netty.proto.LittleProto.ServerEnterSleeve serverEnterSleeve_;
    /**
     * <pre>
     ** 服务端返回进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
     */
    public boolean hasServerEnterSleeve() {
      return serverEnterSleeve_ != null;
    }
    /**
     * <pre>
     ** 服务端返回进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerEnterSleeve getServerEnterSleeve() {
      return serverEnterSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.getDefaultInstance() : serverEnterSleeve_;
    }
    /**
     * <pre>
     ** 服务端返回进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerEnterSleeveOrBuilder getServerEnterSleeveOrBuilder() {
      return getServerEnterSleeve();
    }

    public static final int SERVERSLEEVESHEEP_FIELD_NUMBER = 1301;
    private com.kys.util.netty.proto.LittleProto.ServerSleeveSheep serverSleeveSheep_;
    /**
     * <pre>
     ** 服务端返回套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
     */
    public boolean hasServerSleeveSheep() {
      return serverSleeveSheep_ != null;
    }
    /**
     * <pre>
     ** 服务端返回套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerSleeveSheep getServerSleeveSheep() {
      return serverSleeveSheep_ == null ? com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.getDefaultInstance() : serverSleeveSheep_;
    }
    /**
     * <pre>
     ** 服务端返回套羊动作 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerSleeveSheepOrBuilder getServerSleeveSheepOrBuilder() {
      return getServerSleeveSheep();
    }

    public static final int SERVERQUERYPLAYERCOIN_FIELD_NUMBER = 1302;
    private com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin serverQueryPlayerCoin_;
    /**
     * <pre>
     ** 服务器返回查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
     */
    public boolean hasServerQueryPlayerCoin() {
      return serverQueryPlayerCoin_ != null;
    }
    /**
     * <pre>
     ** 服务器返回查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin getServerQueryPlayerCoin() {
      return serverQueryPlayerCoin_ == null ? com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.getDefaultInstance() : serverQueryPlayerCoin_;
    }
    /**
     * <pre>
     ** 服务器返回查询玩家货币 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoinOrBuilder getServerQueryPlayerCoinOrBuilder() {
      return getServerQueryPlayerCoin();
    }

    public static final int SERVEREXITSLEEVE_FIELD_NUMBER = 1303;
    private com.kys.util.netty.proto.LittleProto.ServerExitSleeve serverExitSleeve_;
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
     */
    public boolean hasServerExitSleeve() {
      return serverExitSleeve_ != null;
    }
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerExitSleeve getServerExitSleeve() {
      return serverExitSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ServerExitSleeve.getDefaultInstance() : serverExitSleeve_;
    }
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerExitSleeveOrBuilder getServerExitSleeveOrBuilder() {
      return getServerExitSleeve();
    }

    public static final int SERVERENTERNEWSLEEVE_FIELD_NUMBER = 1304;
    private com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve serverEnterNewSleeve_;
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
     */
    public boolean hasServerEnterNewSleeve() {
      return serverEnterNewSleeve_ != null;
    }
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve getServerEnterNewSleeve() {
      return serverEnterNewSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.getDefaultInstance() : serverEnterNewSleeve_;
    }
    /**
     * <pre>
     ** 客户端进入套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeveOrBuilder getServerEnterNewSleeveOrBuilder() {
      return getServerEnterNewSleeve();
    }

    public static final int SERVERNEWSLEEVESHEEP_FIELD_NUMBER = 1305;
    private com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep serverNewSleeveSheep_;
    /**
     * <pre>
     ** 服务器返回开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
     */
    public boolean hasServerNewSleeveSheep() {
      return serverNewSleeveSheep_ != null;
    }
    /**
     * <pre>
     ** 服务器返回开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep getServerNewSleeveSheep() {
      return serverNewSleeveSheep_ == null ? com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.getDefaultInstance() : serverNewSleeveSheep_;
    }
    /**
     * <pre>
     ** 服务器返回开始套羊信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheepOrBuilder getServerNewSleeveSheepOrBuilder() {
      return getServerNewSleeveSheep();
    }

    public static final int SERVERNEWSLEEVERESULT_FIELD_NUMBER = 1306;
    private com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult serverNewSleeveResult_;
    /**
     * <pre>
     ** 服务器返回套羊结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
     */
    public boolean hasServerNewSleeveResult() {
      return serverNewSleeveResult_ != null;
    }
    /**
     * <pre>
     ** 服务器返回套羊结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult getServerNewSleeveResult() {
      return serverNewSleeveResult_ == null ? com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.getDefaultInstance() : serverNewSleeveResult_;
    }
    /**
     * <pre>
     ** 服务器返回套羊结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerNewSleeveResultOrBuilder getServerNewSleeveResultOrBuilder() {
      return getServerNewSleeveResult();
    }

    public static final int SERVEREXITNEWSLEEVE_FIELD_NUMBER = 1307;
    private com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve serverExitNewSleeve_;
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
     */
    public boolean hasServerExitNewSleeve() {
      return serverExitNewSleeve_ != null;
    }
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve getServerExitNewSleeve() {
      return serverExitNewSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.getDefaultInstance() : serverExitNewSleeve_;
    }
    /**
     * <pre>
     ** 服务器返回退出套羊 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
     */
    public com.kys.util.netty.proto.LittleProto.ServerExitNewSleeveOrBuilder getServerExitNewSleeveOrBuilder() {
      return getServerExitNewSleeve();
    }

    public static final int SERVER_2_DOCATCH_FIELD_NUMBER = 1401;
    private com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch server2DoCatch_;
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
     */
    public boolean hasServer2DoCatch() {
      return server2DoCatch_ != null;
    }
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch getServer2DoCatch() {
      return server2DoCatch_ == null ? com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.getDefaultInstance() : server2DoCatch_;
    }
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Server_2_DoCatchOrBuilder getServer2DoCatchOrBuilder() {
      return getServer2DoCatch();
    }

    public static final int SERVER_2_PLAYCARDS_FIELD_NUMBER = 1402;
    private com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards server2PlayCards_;
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
     */
    public boolean hasServer2PlayCards() {
      return server2PlayCards_ != null;
    }
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards getServer2PlayCards() {
      return server2PlayCards_ == null ? com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.getDefaultInstance() : server2PlayCards_;
    }
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Server_2_PlayCardsOrBuilder getServer2PlayCardsOrBuilder() {
      return getServer2PlayCards();
    }

    public static final int SERVER_2_RECOVERGAME_FIELD_NUMBER = 1403;
    private com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame server2RecoverGame_;
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
     */
    public boolean hasServer2RecoverGame() {
      return server2RecoverGame_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame getServer2RecoverGame() {
      return server2RecoverGame_ == null ? com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.getDefaultInstance() : server2RecoverGame_;
    }
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGameOrBuilder getServer2RecoverGameOrBuilder() {
      return getServer2RecoverGame();
    }

    public static final int SERVER_2_LEAVEROOM_FIELD_NUMBER = 1404;
    private com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom server2LeaveRoom_;
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
     */
    public boolean hasServer2LeaveRoom() {
      return server2LeaveRoom_ != null;
    }
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom getServer2LeaveRoom() {
      return server2LeaveRoom_ == null ? com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.getDefaultInstance() : server2LeaveRoom_;
    }
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoomOrBuilder getServer2LeaveRoomOrBuilder() {
      return getServer2LeaveRoom();
    }

    public static final int SERVERMINESHARE_FIELD_NUMBER = 1501;
    private com.kys.util.netty.proto.ShareProto.ServerMineShare serverMineShare_;
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
     */
    public boolean hasServerMineShare() {
      return serverMineShare_ != null;
    }
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerMineShare getServerMineShare() {
      return serverMineShare_ == null ? com.kys.util.netty.proto.ShareProto.ServerMineShare.getDefaultInstance() : serverMineShare_;
    }
    /**
     * <pre>
     ** 玩家获取自己的分享的奖励领取次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerMineShareOrBuilder getServerMineShareOrBuilder() {
      return getServerMineShare();
    }

    public static final int SERVERGETMSAWARD_FIELD_NUMBER = 1502;
    private com.kys.util.netty.proto.ShareProto.ServerGetMSAward serverGetMSAward_;
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
     */
    public boolean hasServerGetMSAward() {
      return serverGetMSAward_ != null;
    }
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerGetMSAward getServerGetMSAward() {
      return serverGetMSAward_ == null ? com.kys.util.netty.proto.ShareProto.ServerGetMSAward.getDefaultInstance() : serverGetMSAward_;
    }
    /**
     * <pre>
     ** 玩家获取自己的分享奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerGetMSAwardOrBuilder getServerGetMSAwardOrBuilder() {
      return getServerGetMSAward();
    }

    public static final int SERVERFRIENDSHARE_FIELD_NUMBER = 1503;
    private com.kys.util.netty.proto.ShareProto.ServerFriendShare serverFriendShare_;
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
     */
    public boolean hasServerFriendShare() {
      return serverFriendShare_ != null;
    }
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerFriendShare getServerFriendShare() {
      return serverFriendShare_ == null ? com.kys.util.netty.proto.ShareProto.ServerFriendShare.getDefaultInstance() : serverFriendShare_;
    }
    /**
     * <pre>
     ** 玩家获取好友的分享福利是否可领 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerFriendShareOrBuilder getServerFriendShareOrBuilder() {
      return getServerFriendShare();
    }

    public static final int SERVERGETFSAWARD_FIELD_NUMBER = 1504;
    private com.kys.util.netty.proto.ShareProto.ServerGetFSAward serverGetFSAward_;
    /**
     * <pre>
     ** 服务器返回好友福利 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
     */
    public boolean hasServerGetFSAward() {
      return serverGetFSAward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回好友福利 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerGetFSAward getServerGetFSAward() {
      return serverGetFSAward_ == null ? com.kys.util.netty.proto.ShareProto.ServerGetFSAward.getDefaultInstance() : serverGetFSAward_;
    }
    /**
     * <pre>
     ** 服务器返回好友福利 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerGetFSAwardOrBuilder getServerGetFSAwardOrBuilder() {
      return getServerGetFSAward();
    }

    public static final int SERVERGETSHARETASK_FIELD_NUMBER = 1505;
    private com.kys.util.netty.proto.ShareProto.ServerGetShareTask serverGetShareTask_;
    /**
     * <pre>
     ** 服务器返回邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
     */
    public boolean hasServerGetShareTask() {
      return serverGetShareTask_ != null;
    }
    /**
     * <pre>
     ** 服务器返回邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerGetShareTask getServerGetShareTask() {
      return serverGetShareTask_ == null ? com.kys.util.netty.proto.ShareProto.ServerGetShareTask.getDefaultInstance() : serverGetShareTask_;
    }
    /**
     * <pre>
     ** 服务器返回邀请任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerGetShareTaskOrBuilder getServerGetShareTaskOrBuilder() {
      return getServerGetShareTask();
    }

    public static final int SERVERGETSHARETASKAWARD_FIELD_NUMBER = 1506;
    private com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward serverGetShareTaskAward_;
    /**
     * <pre>
     ** 服务器返回邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
     */
    public boolean hasServerGetShareTaskAward() {
      return serverGetShareTaskAward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward getServerGetShareTaskAward() {
      return serverGetShareTaskAward_ == null ? com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.getDefaultInstance() : serverGetShareTaskAward_;
    }
    /**
     * <pre>
     ** 服务器返回邀请任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
     */
    public com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAwardOrBuilder getServerGetShareTaskAwardOrBuilder() {
      return getServerGetShareTaskAward();
    }

    public static final int SERVERQUERYREVIVEINFO_FIELD_NUMBER = 1601;
    private com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo serverQueryReviveInfo_;
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
     */
    public boolean hasServerQueryReviveInfo() {
      return serverQueryReviveInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo getServerQueryReviveInfo() {
      return serverQueryReviveInfo_ == null ? com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.getDefaultInstance() : serverQueryReviveInfo_;
    }
    /**
     * <pre>
     ** 服务器返回复活界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfoOrBuilder getServerQueryReviveInfoOrBuilder() {
      return getServerQueryReviveInfo();
    }

    public static final int SERVERUSEREVIVE_FIELD_NUMBER = 1602;
    private com.kys.util.netty.proto.ReviveProto.ServerUseRevive serverUseRevive_;
    /**
     * <pre>
     ** 服务器返回使用复活结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
     */
    public boolean hasServerUseRevive() {
      return serverUseRevive_ != null;
    }
    /**
     * <pre>
     ** 服务器返回使用复活结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ServerUseRevive getServerUseRevive() {
      return serverUseRevive_ == null ? com.kys.util.netty.proto.ReviveProto.ServerUseRevive.getDefaultInstance() : serverUseRevive_;
    }
    /**
     * <pre>
     ** 服务器返回使用复活结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ServerUseReviveOrBuilder getServerUseReviveOrBuilder() {
      return getServerUseRevive();
    }

    public static final int SERVERREVIVEFIRSTCHARGE_FIELD_NUMBER = 1603;
    private com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge serverReviveFirstCharge_;
    /**
     * <pre>
     ** 服务器返回新手启航礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
     */
    public boolean hasServerReviveFirstCharge() {
      return serverReviveFirstCharge_ != null;
    }
    /**
     * <pre>
     ** 服务器返回新手启航礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge getServerReviveFirstCharge() {
      return serverReviveFirstCharge_ == null ? com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.getDefaultInstance() : serverReviveFirstCharge_;
    }
    /**
     * <pre>
     ** 服务器返回新手启航礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ServerReviveFirstChargeOrBuilder getServerReviveFirstChargeOrBuilder() {
      return getServerReviveFirstCharge();
    }

    public static final int SERVERREVIVEDAYGIFT_FIELD_NUMBER = 1604;
    private com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift serverReviveDayGift_;
    /**
     * <pre>
     ** 服务器返回每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
     */
    public boolean hasServerReviveDayGift() {
      return serverReviveDayGift_ != null;
    }
    /**
     * <pre>
     ** 服务器返回每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift getServerReviveDayGift() {
      return serverReviveDayGift_ == null ? com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.getDefaultInstance() : serverReviveDayGift_;
    }
    /**
     * <pre>
     ** 服务器返回每日复活礼包信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.ServerReviveDayGiftOrBuilder getServerReviveDayGiftOrBuilder() {
      return getServerReviveDayGift();
    }

    public static final int SERVERGETREDTIP_FIELD_NUMBER = 1701;
    private com.kys.util.netty.proto.HallProto.ServerGetRedTip serverGetRedTip_;
    /**
     * <pre>
     ** 服务器返回大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
     */
    public boolean hasServerGetRedTip() {
      return serverGetRedTip_ != null;
    }
    /**
     * <pre>
     ** 服务器返回大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRedTip getServerGetRedTip() {
      return serverGetRedTip_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRedTip.getDefaultInstance() : serverGetRedTip_;
    }
    /**
     * <pre>
     ** 服务器返回大厅红点 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRedTipOrBuilder getServerGetRedTipOrBuilder() {
      return getServerGetRedTip();
    }

    public static final int SERVERGETMATCHINFO_FIELD_NUMBER = 1801;
    private com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo serverGetMatchInfo_;
    /**
     * <pre>
     ** 服务器返回赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
     */
    public boolean hasServerGetMatchInfo() {
      return serverGetMatchInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo getServerGetMatchInfo() {
      return serverGetMatchInfo_ == null ? com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.getDefaultInstance() : serverGetMatchInfo_;
    }
    /**
     * <pre>
     ** 服务器返回赛事信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerGetMatchInfoOrBuilder getServerGetMatchInfoOrBuilder() {
      return getServerGetMatchInfo();
    }

    public static final int SERVERGETMATCHDETAIL_FIELD_NUMBER = 1802;
    private com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail serverGetMatchDetail_;
    /**
     * <pre>
     ** 服务器返回赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
     */
    public boolean hasServerGetMatchDetail() {
      return serverGetMatchDetail_ != null;
    }
    /**
     * <pre>
     ** 服务器返回赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail getServerGetMatchDetail() {
      return serverGetMatchDetail_ == null ? com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.getDefaultInstance() : serverGetMatchDetail_;
    }
    /**
     * <pre>
     ** 服务器返回赛事详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerGetMatchDetailOrBuilder getServerGetMatchDetailOrBuilder() {
      return getServerGetMatchDetail();
    }

    public static final int SERVERGETMATCHRECORD_FIELD_NUMBER = 1803;
    private com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord serverGetMatchRecord_;
    /**
     * <pre>
     ** 服务器返回赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
     */
    public boolean hasServerGetMatchRecord() {
      return serverGetMatchRecord_ != null;
    }
    /**
     * <pre>
     ** 服务器返回赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord getServerGetMatchRecord() {
      return serverGetMatchRecord_ == null ? com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.getDefaultInstance() : serverGetMatchRecord_;
    }
    /**
     * <pre>
     ** 服务器返回赛事记录信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerGetMatchRecordOrBuilder getServerGetMatchRecordOrBuilder() {
      return getServerGetMatchRecord();
    }

    public static final int SERVERMATCHAPPLY_FIELD_NUMBER = 1804;
    private com.kys.util.netty.proto.MatchProto.ServerMatchApply serverMatchApply_;
    /**
     * <pre>
     ** 服务器返回赛事报名结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
     */
    public boolean hasServerMatchApply() {
      return serverMatchApply_ != null;
    }
    /**
     * <pre>
     ** 服务器返回赛事报名结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerMatchApply getServerMatchApply() {
      return serverMatchApply_ == null ? com.kys.util.netty.proto.MatchProto.ServerMatchApply.getDefaultInstance() : serverMatchApply_;
    }
    /**
     * <pre>
     ** 服务器返回赛事报名结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerMatchApplyOrBuilder getServerMatchApplyOrBuilder() {
      return getServerMatchApply();
    }

    public static final int SERVERMATCHCANCEL_FIELD_NUMBER = 1805;
    private com.kys.util.netty.proto.MatchProto.ServerMatchCancel serverMatchCancel_;
    /**
     * <pre>
     ** 服务器返回取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
     */
    public boolean hasServerMatchCancel() {
      return serverMatchCancel_ != null;
    }
    /**
     * <pre>
     ** 服务器返回取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerMatchCancel getServerMatchCancel() {
      return serverMatchCancel_ == null ? com.kys.util.netty.proto.MatchProto.ServerMatchCancel.getDefaultInstance() : serverMatchCancel_;
    }
    /**
     * <pre>
     ** 服务器返回取消赛事 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerMatchCancelOrBuilder getServerMatchCancelOrBuilder() {
      return getServerMatchCancel();
    }

    public static final int SERVEROWNMATCHRECORD_FIELD_NUMBER = 1806;
    private com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord serverOwnMatchRecord_;
    /**
     * <pre>
     ** 服务器返回自己历史记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
     */
    public boolean hasServerOwnMatchRecord() {
      return serverOwnMatchRecord_ != null;
    }
    /**
     * <pre>
     ** 服务器返回自己历史记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord getServerOwnMatchRecord() {
      return serverOwnMatchRecord_ == null ? com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.getDefaultInstance() : serverOwnMatchRecord_;
    }
    /**
     * <pre>
     ** 服务器返回自己历史记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecordOrBuilder getServerOwnMatchRecordOrBuilder() {
      return getServerOwnMatchRecord();
    }

    public static final int SERVERAPPLYLISTCHANGE_FIELD_NUMBER = 1807;
    private com.kys.util.netty.proto.MatchProto.ServerApplyListChange serverApplyListChange_;
    /**
     * <pre>
     ** 服务器返回赛事列表参赛人数变化推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
     */
    public boolean hasServerApplyListChange() {
      return serverApplyListChange_ != null;
    }
    /**
     * <pre>
     ** 服务器返回赛事列表参赛人数变化推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerApplyListChange getServerApplyListChange() {
      return serverApplyListChange_ == null ? com.kys.util.netty.proto.MatchProto.ServerApplyListChange.getDefaultInstance() : serverApplyListChange_;
    }
    /**
     * <pre>
     ** 服务器返回赛事列表参赛人数变化推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerApplyListChangeOrBuilder getServerApplyListChangeOrBuilder() {
      return getServerApplyListChange();
    }

    public static final int SERVERMATCHSCORE_FIELD_NUMBER = 1808;
    private com.kys.util.netty.proto.MatchProto.ServerMatchScore serverMatchScore_;
    /**
     * <pre>
     ** 服务器返回获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
     */
    public boolean hasServerMatchScore() {
      return serverMatchScore_ != null;
    }
    /**
     * <pre>
     ** 服务器返回获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerMatchScore getServerMatchScore() {
      return serverMatchScore_ == null ? com.kys.util.netty.proto.MatchProto.ServerMatchScore.getDefaultInstance() : serverMatchScore_;
    }
    /**
     * <pre>
     ** 服务器返回获取比赛中玩家积分头像等信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerMatchScoreOrBuilder getServerMatchScoreOrBuilder() {
      return getServerMatchScore();
    }

    public static final int SERVERMATCHCONFIG_FIELD_NUMBER = 1809;
    private com.kys.util.netty.proto.MatchProto.ServerMatchConfig serverMatchConfig_;
    /**
     * <pre>
     ** 服务器返回赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
     */
    public boolean hasServerMatchConfig() {
      return serverMatchConfig_ != null;
    }
    /**
     * <pre>
     ** 服务器返回赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerMatchConfig getServerMatchConfig() {
      return serverMatchConfig_ == null ? com.kys.util.netty.proto.MatchProto.ServerMatchConfig.getDefaultInstance() : serverMatchConfig_;
    }
    /**
     * <pre>
     ** 服务器返回赛事配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
     */
    public com.kys.util.netty.proto.MatchProto.ServerMatchConfigOrBuilder getServerMatchConfigOrBuilder() {
      return getServerMatchConfig();
    }

    public static final int SERVERGETKILLCELL_FIELD_NUMBER = 1901;
    private com.kys.util.netty.proto.Triplekill.ServerGetKillCell serverGetKillCell_;
    /**
     * <pre>
     ** 服务器返回消除元素信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
     */
    public boolean hasServerGetKillCell() {
      return serverGetKillCell_ != null;
    }
    /**
     * <pre>
     ** 服务器返回消除元素信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ServerGetKillCell getServerGetKillCell() {
      return serverGetKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ServerGetKillCell.getDefaultInstance() : serverGetKillCell_;
    }
    /**
     * <pre>
     ** 服务器返回消除元素信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ServerGetKillCellOrBuilder getServerGetKillCellOrBuilder() {
      return getServerGetKillCell();
    }

    public static final int SERVERENTERKILLCELL_FIELD_NUMBER = 1902;
    private com.kys.util.netty.proto.Triplekill.ServerEnterKillCell serverEnterKillCell_;
    /**
     * <pre>
     ** 服务器返回进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
     */
    public boolean hasServerEnterKillCell() {
      return serverEnterKillCell_ != null;
    }
    /**
     * <pre>
     ** 服务器返回进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ServerEnterKillCell getServerEnterKillCell() {
      return serverEnterKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.getDefaultInstance() : serverEnterKillCell_;
    }
    /**
     * <pre>
     ** 服务器返回进入消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ServerEnterKillCellOrBuilder getServerEnterKillCellOrBuilder() {
      return getServerEnterKillCell();
    }

    public static final int SERVERQUITKILLCELL_FIELD_NUMBER = 1903;
    private com.kys.util.netty.proto.Triplekill.ServerQuitKillCell serverQuitKillCell_;
    /**
     * <pre>
     ** 服务器返回退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
     */
    public boolean hasServerQuitKillCell() {
      return serverQuitKillCell_ != null;
    }
    /**
     * <pre>
     ** 服务器返回退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ServerQuitKillCell getServerQuitKillCell() {
      return serverQuitKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.getDefaultInstance() : serverQuitKillCell_;
    }
    /**
     * <pre>
     ** 服务器返回退出消除游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
     */
    public com.kys.util.netty.proto.Triplekill.ServerQuitKillCellOrBuilder getServerQuitKillCellOrBuilder() {
      return getServerQuitKillCell();
    }

    public static final int B_GAMESTART_FIELD_NUMBER = 402;
    private com.kys.util.netty.proto.GameProto.B_GameStart bGameStart_;
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    public boolean hasBGameStart() {
      return bGameStart_ != null;
    }
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_GameStart getBGameStart() {
      return bGameStart_ == null ? com.kys.util.netty.proto.GameProto.B_GameStart.getDefaultInstance() : bGameStart_;
    }
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder getBGameStartOrBuilder() {
      return getBGameStart();
    }

    public static final int B_DOCATCH_FIELD_NUMBER = 403;
    private com.kys.util.netty.proto.GameProto.B_DoCatch bDoCatch_;
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    public boolean hasBDoCatch() {
      return bDoCatch_ != null;
    }
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_DoCatch getBDoCatch() {
      return bDoCatch_ == null ? com.kys.util.netty.proto.GameProto.B_DoCatch.getDefaultInstance() : bDoCatch_;
    }
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder getBDoCatchOrBuilder() {
      return getBDoCatch();
    }

    public static final int B_CATCHRESULT_FIELD_NUMBER = 404;
    private com.kys.util.netty.proto.GameProto.B_CatchResult bCatchResult_;
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    public boolean hasBCatchResult() {
      return bCatchResult_ != null;
    }
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_CatchResult getBCatchResult() {
      return bCatchResult_ == null ? com.kys.util.netty.proto.GameProto.B_CatchResult.getDefaultInstance() : bCatchResult_;
    }
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder getBCatchResultOrBuilder() {
      return getBCatchResult();
    }

    public static final int B_PLAYCARDS_FIELD_NUMBER = 405;
    private com.kys.util.netty.proto.GameProto.B_PlayCards bPlayCards_;
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    public boolean hasBPlayCards() {
      return bPlayCards_ != null;
    }
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_PlayCards getBPlayCards() {
      return bPlayCards_ == null ? com.kys.util.netty.proto.GameProto.B_PlayCards.getDefaultInstance() : bPlayCards_;
    }
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder getBPlayCardsOrBuilder() {
      return getBPlayCards();
    }

    public static final int B_SENDDIZHUCARD_FIELD_NUMBER = 407;
    private com.kys.util.netty.proto.GameProto.B_SendDiZhuCard bSendDiZhuCard_;
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    public boolean hasBSendDiZhuCard() {
      return bSendDiZhuCard_ != null;
    }
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_SendDiZhuCard getBSendDiZhuCard() {
      return bSendDiZhuCard_ == null ? com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.getDefaultInstance() : bSendDiZhuCard_;
    }
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder getBSendDiZhuCardOrBuilder() {
      return getBSendDiZhuCard();
    }

    public static final int B_NEXTPLAYER_FIELD_NUMBER = 408;
    private com.kys.util.netty.proto.GameProto.B_NextPlayer bNextPlayer_;
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    public boolean hasBNextPlayer() {
      return bNextPlayer_ != null;
    }
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_NextPlayer getBNextPlayer() {
      return bNextPlayer_ == null ? com.kys.util.netty.proto.GameProto.B_NextPlayer.getDefaultInstance() : bNextPlayer_;
    }
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder getBNextPlayerOrBuilder() {
      return getBNextPlayer();
    }

    public static final int B_GAMESETTLE_FIELD_NUMBER = 409;
    private com.kys.util.netty.proto.GameProto.B_GameSettle bGameSettle_;
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    public boolean hasBGameSettle() {
      return bGameSettle_ != null;
    }
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_GameSettle getBGameSettle() {
      return bGameSettle_ == null ? com.kys.util.netty.proto.GameProto.B_GameSettle.getDefaultInstance() : bGameSettle_;
    }
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder getBGameSettleOrBuilder() {
      return getBGameSettle();
    }

    public static final int B_REWARDMESSAGE_FIELD_NUMBER = 410;
    private com.kys.util.netty.proto.HallProto.B_RewardMessage bRewardMessage_;
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    public boolean hasBRewardMessage() {
      return bRewardMessage_ != null;
    }
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_RewardMessage getBRewardMessage() {
      return bRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.B_RewardMessage.getDefaultInstance() : bRewardMessage_;
    }
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder getBRewardMessageOrBuilder() {
      return getBRewardMessage();
    }

    public static final int B_AUTOPLAY_FIELD_NUMBER = 411;
    private com.kys.util.netty.proto.GameProto.B_AutoPlay bAutoPlay_;
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    public boolean hasBAutoPlay() {
      return bAutoPlay_ != null;
    }
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_AutoPlay getBAutoPlay() {
      return bAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.B_AutoPlay.getDefaultInstance() : bAutoPlay_;
    }
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder getBAutoPlayOrBuilder() {
      return getBAutoPlay();
    }

    public static final int B_ROOMIDURL_FIELD_NUMBER = 412;
    private com.kys.util.netty.proto.GameProto.B_RoomIdUrl bRoomIdUrl_;
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    public boolean hasBRoomIdUrl() {
      return bRoomIdUrl_ != null;
    }
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_RoomIdUrl getBRoomIdUrl() {
      return bRoomIdUrl_ == null ? com.kys.util.netty.proto.GameProto.B_RoomIdUrl.getDefaultInstance() : bRoomIdUrl_;
    }
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder getBRoomIdUrlOrBuilder() {
      return getBRoomIdUrl();
    }

    public static final int B_AWARDDIALOG_FIELD_NUMBER = 413;
    private com.kys.util.netty.proto.HallProto.B_AwardDialog bAwardDialog_;
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    public boolean hasBAwardDialog() {
      return bAwardDialog_ != null;
    }
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_AwardDialog getBAwardDialog() {
      return bAwardDialog_ == null ? com.kys.util.netty.proto.HallProto.B_AwardDialog.getDefaultInstance() : bAwardDialog_;
    }
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder getBAwardDialogOrBuilder() {
      return getBAwardDialog();
    }

    public static final int B_BUYSUCCESS_FIELD_NUMBER = 414;
    private com.kys.util.netty.proto.StoreProto.B_BuySuccess bBuySuccess_;
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    public boolean hasBBuySuccess() {
      return bBuySuccess_ != null;
    }
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    public com.kys.util.netty.proto.StoreProto.B_BuySuccess getBBuySuccess() {
      return bBuySuccess_ == null ? com.kys.util.netty.proto.StoreProto.B_BuySuccess.getDefaultInstance() : bBuySuccess_;
    }
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    public com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder getBBuySuccessOrBuilder() {
      return getBBuySuccess();
    }

    public static final int B_REDDOTPUSH_FIELD_NUMBER = 415;
    private com.kys.util.netty.proto.HallProto.B_RedDotPush bRedDotPush_;
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    public boolean hasBRedDotPush() {
      return bRedDotPush_ != null;
    }
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_RedDotPush getBRedDotPush() {
      return bRedDotPush_ == null ? com.kys.util.netty.proto.HallProto.B_RedDotPush.getDefaultInstance() : bRedDotPush_;
    }
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder getBRedDotPushOrBuilder() {
      return getBRedDotPush();
    }

    public static final int B_FORCEANNOUNCE_FIELD_NUMBER = 416;
    private com.kys.util.netty.proto.HallProto.B_ForceAnnounce bForceAnnounce_;
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    public boolean hasBForceAnnounce() {
      return bForceAnnounce_ != null;
    }
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_ForceAnnounce getBForceAnnounce() {
      return bForceAnnounce_ == null ? com.kys.util.netty.proto.HallProto.B_ForceAnnounce.getDefaultInstance() : bForceAnnounce_;
    }
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder getBForceAnnounceOrBuilder() {
      return getBForceAnnounce();
    }

    public static final int B_DGAMEMESSAGE_FIELD_NUMBER = 417;
    private com.kys.util.netty.proto.SnatchProto.B_DGameMessage bDGameMessage_;
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    public boolean hasBDGameMessage() {
      return bDGameMessage_ != null;
    }
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DGameMessage getBDGameMessage() {
      return bDGameMessage_ == null ? com.kys.util.netty.proto.SnatchProto.B_DGameMessage.getDefaultInstance() : bDGameMessage_;
    }
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder getBDGameMessageOrBuilder() {
      return getBDGameMessage();
    }

    public static final int B_DGOVER_FIELD_NUMBER = 418;
    private com.kys.util.netty.proto.SnatchProto.B_DGOver bDGOver_;
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    public boolean hasBDGOver() {
      return bDGOver_ != null;
    }
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DGOver getBDGOver() {
      return bDGOver_ == null ? com.kys.util.netty.proto.SnatchProto.B_DGOver.getDefaultInstance() : bDGOver_;
    }
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder getBDGOverOrBuilder() {
      return getBDGOver();
    }

    public static final int B_DDOVER_FIELD_NUMBER = 419;
    private com.kys.util.netty.proto.SnatchProto.B_DDOver bDDOver_;
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    public boolean hasBDDOver() {
      return bDDOver_ != null;
    }
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DDOver getBDDOver() {
      return bDDOver_ == null ? com.kys.util.netty.proto.SnatchProto.B_DDOver.getDefaultInstance() : bDDOver_;
    }
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder getBDDOverOrBuilder() {
      return getBDDOver();
    }

    public static final int B_DDINFO_FIELD_NUMBER = 420;
    private com.kys.util.netty.proto.SnatchProto.B_DDInfo bDDInfo_;
    /**
     * <pre>
     ** 广播钻石抽奖[跑马灯] 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    public boolean hasBDDInfo() {
      return bDDInfo_ != null;
    }
    /**
     * <pre>
     ** 广播钻石抽奖[跑马灯] 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DDInfo getBDDInfo() {
      return bDDInfo_ == null ? com.kys.util.netty.proto.SnatchProto.B_DDInfo.getDefaultInstance() : bDDInfo_;
    }
    /**
     * <pre>
     ** 广播钻石抽奖[跑马灯] 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder getBDDInfoOrBuilder() {
      return getBDDInfo();
    }

    public static final int B_SSINFO_FIELD_NUMBER = 421;
    private com.kys.util.netty.proto.LittleProto.B_SSInfo bSSInfo_;
    /**
     * <pre>
     ** 广播套羊跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
     */
    public boolean hasBSSInfo() {
      return bSSInfo_ != null;
    }
    /**
     * <pre>
     ** 广播套羊跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
     */
    public com.kys.util.netty.proto.LittleProto.B_SSInfo getBSSInfo() {
      return bSSInfo_ == null ? com.kys.util.netty.proto.LittleProto.B_SSInfo.getDefaultInstance() : bSSInfo_;
    }
    /**
     * <pre>
     ** 广播套羊跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
     */
    public com.kys.util.netty.proto.LittleProto.B_SSInfoOrBuilder getBSSInfoOrBuilder() {
      return getBSSInfo();
    }

    public static final int B_NEWSLEEVESHEEPINFO_FIELD_NUMBER = 422;
    private com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo bNewSleeveSheepInfo_;
    /**
     * <pre>
     ** 套羊跑马灯信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
     */
    public boolean hasBNewSleeveSheepInfo() {
      return bNewSleeveSheepInfo_ != null;
    }
    /**
     * <pre>
     ** 套羊跑马灯信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
     */
    public com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo getBNewSleeveSheepInfo() {
      return bNewSleeveSheepInfo_ == null ? com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.getDefaultInstance() : bNewSleeveSheepInfo_;
    }
    /**
     * <pre>
     ** 套羊跑马灯信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
     */
    public com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfoOrBuilder getBNewSleeveSheepInfoOrBuilder() {
      return getBNewSleeveSheepInfo();
    }

    public static final int B_NEWSLEEVEROVER_FIELD_NUMBER = 423;
    private com.kys.util.netty.proto.LittleProto.B_NewSleeverOver bNewSleeverOver_;
    /**
     * <pre>
     ** 广播新套羊活动结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
     */
    public boolean hasBNewSleeverOver() {
      return bNewSleeverOver_ != null;
    }
    /**
     * <pre>
     ** 广播新套羊活动结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
     */
    public com.kys.util.netty.proto.LittleProto.B_NewSleeverOver getBNewSleeverOver() {
      return bNewSleeverOver_ == null ? com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.getDefaultInstance() : bNewSleeverOver_;
    }
    /**
     * <pre>
     ** 广播新套羊活动结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
     */
    public com.kys.util.netty.proto.LittleProto.B_NewSleeverOverOrBuilder getBNewSleeverOverOrBuilder() {
      return getBNewSleeverOver();
    }

    public static final int B_DIAMONDREVIVEINFO_FIELD_NUMBER = 424;
    private com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo bDiamondReviveInfo_;
    /**
     * <pre>
     ** 服务器推送钻石复活次数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
     */
    public boolean hasBDiamondReviveInfo() {
      return bDiamondReviveInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器推送钻石复活次数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo getBDiamondReviveInfo() {
      return bDiamondReviveInfo_ == null ? com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.getDefaultInstance() : bDiamondReviveInfo_;
    }
    /**
     * <pre>
     ** 服务器推送钻石复活次数变化 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
     */
    public com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfoOrBuilder getBDiamondReviveInfoOrBuilder() {
      return getBDiamondReviveInfo();
    }

    public static final int B_2_AUTOPLAY_FIELD_NUMBER = 425;
    private com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay b2AutoPlay_;
    /**
     * <pre>
     ** 二人场-广播有玩家进行托管了 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
     */
    public boolean hasB2AutoPlay() {
      return b2AutoPlay_ != null;
    }
    /**
     * <pre>
     ** 二人场-广播有玩家进行托管了 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay getB2AutoPlay() {
      return b2AutoPlay_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.getDefaultInstance() : b2AutoPlay_;
    }
    /**
     * <pre>
     ** 二人场-广播有玩家进行托管了 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_AutoPlayOrBuilder getB2AutoPlayOrBuilder() {
      return getB2AutoPlay();
    }

    public static final int B_2_GAMESTART_FIELD_NUMBER = 426;
    private com.kys.util.netty.proto.Game2Proto.B_2_GameStart b2GameStart_;
    /**
     * <pre>
     ** 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
     */
    public boolean hasB2GameStart() {
      return b2GameStart_ != null;
    }
    /**
     * <pre>
     ** 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_GameStart getB2GameStart() {
      return b2GameStart_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_GameStart.getDefaultInstance() : b2GameStart_;
    }
    /**
     * <pre>
     ** 二人场-游戏开始，发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_GameStartOrBuilder getB2GameStartOrBuilder() {
      return getB2GameStart();
    }

    public static final int B_2_DOCATCH_FIELD_NUMBER = 427;
    private com.kys.util.netty.proto.Game2Proto.B_2_DoCatch b2DoCatch_;
    /**
     * <pre>
     ** 二人场-通知叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
     */
    public boolean hasB2DoCatch() {
      return b2DoCatch_ != null;
    }
    /**
     * <pre>
     ** 二人场-通知叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_DoCatch getB2DoCatch() {
      return b2DoCatch_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.getDefaultInstance() : b2DoCatch_;
    }
    /**
     * <pre>
     ** 二人场-通知叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_DoCatchOrBuilder getB2DoCatchOrBuilder() {
      return getB2DoCatch();
    }

    public static final int B_2_CATCHRESULT_FIELD_NUMBER = 428;
    private com.kys.util.netty.proto.Game2Proto.B_2_CatchResult b2CatchResult_;
    /**
     * <pre>
     ** 二人场-广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
     */
    public boolean hasB2CatchResult() {
      return b2CatchResult_ != null;
    }
    /**
     * <pre>
     ** 二人场-广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_CatchResult getB2CatchResult() {
      return b2CatchResult_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.getDefaultInstance() : b2CatchResult_;
    }
    /**
     * <pre>
     ** 二人场-广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_CatchResultOrBuilder getB2CatchResultOrBuilder() {
      return getB2CatchResult();
    }

    public static final int B_2_SENDDIZHUCARD_FIELD_NUMBER = 429;
    private com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard b2SendDiZhuCard_;
    /**
     * <pre>
     ** 二人场-广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
     */
    public boolean hasB2SendDiZhuCard() {
      return b2SendDiZhuCard_ != null;
    }
    /**
     * <pre>
     ** 二人场-广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard getB2SendDiZhuCard() {
      return b2SendDiZhuCard_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.getDefaultInstance() : b2SendDiZhuCard_;
    }
    /**
     * <pre>
     ** 二人场-广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCardOrBuilder getB2SendDiZhuCardOrBuilder() {
      return getB2SendDiZhuCard();
    }

    public static final int B_2_GAMESETTLE_FIELD_NUMBER = 432;
    private com.kys.util.netty.proto.Game2Proto.B_2_GameSettle b2GameSettle_;
    /**
     * <pre>
     ** 二人场-服务器推送游戏结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
     */
    public boolean hasB2GameSettle() {
      return b2GameSettle_ != null;
    }
    /**
     * <pre>
     ** 二人场-服务器推送游戏结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_GameSettle getB2GameSettle() {
      return b2GameSettle_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.getDefaultInstance() : b2GameSettle_;
    }
    /**
     * <pre>
     ** 二人场-服务器推送游戏结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
     */
    public com.kys.util.netty.proto.Game2Proto.B_2_GameSettleOrBuilder getB2GameSettleOrBuilder() {
      return getB2GameSettle();
    }

    public static final int B_MATCHSTART_FIELD_NUMBER = 434;
    private com.kys.util.netty.proto.MatchProto.B_MatchStart bMatchStart_;
    /**
     * <pre>
     ** 赛事准备开始的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
     */
    public boolean hasBMatchStart() {
      return bMatchStart_ != null;
    }
    /**
     * <pre>
     ** 赛事准备开始的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
     */
    public com.kys.util.netty.proto.MatchProto.B_MatchStart getBMatchStart() {
      return bMatchStart_ == null ? com.kys.util.netty.proto.MatchProto.B_MatchStart.getDefaultInstance() : bMatchStart_;
    }
    /**
     * <pre>
     ** 赛事准备开始的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
     */
    public com.kys.util.netty.proto.MatchProto.B_MatchStartOrBuilder getBMatchStartOrBuilder() {
      return getBMatchStart();
    }

    public static final int B_MATCHEND_FIELD_NUMBER = 435;
    private com.kys.util.netty.proto.MatchProto.B_MatchEnd bMatchEnd_;
    /**
     * <pre>
     ** 赛事结束等待的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
     */
    public boolean hasBMatchEnd() {
      return bMatchEnd_ != null;
    }
    /**
     * <pre>
     ** 赛事结束等待的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
     */
    public com.kys.util.netty.proto.MatchProto.B_MatchEnd getBMatchEnd() {
      return bMatchEnd_ == null ? com.kys.util.netty.proto.MatchProto.B_MatchEnd.getDefaultInstance() : bMatchEnd_;
    }
    /**
     * <pre>
     ** 赛事结束等待的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
     */
    public com.kys.util.netty.proto.MatchProto.B_MatchEndOrBuilder getBMatchEndOrBuilder() {
      return getBMatchEnd();
    }

    public static final int B_MATCHRESULT_FIELD_NUMBER = 436;
    private com.kys.util.netty.proto.MatchProto.B_MatchResult bMatchResult_;
    /**
     * <pre>
     ** 赛事结算的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
     */
    public boolean hasBMatchResult() {
      return bMatchResult_ != null;
    }
    /**
     * <pre>
     ** 赛事结算的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
     */
    public com.kys.util.netty.proto.MatchProto.B_MatchResult getBMatchResult() {
      return bMatchResult_ == null ? com.kys.util.netty.proto.MatchProto.B_MatchResult.getDefaultInstance() : bMatchResult_;
    }
    /**
     * <pre>
     ** 赛事结算的推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
     */
    public com.kys.util.netty.proto.MatchProto.B_MatchResultOrBuilder getBMatchResultOrBuilder() {
      return getBMatchResult();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (methodId_ != 0) {
        output.writeInt32(1, methodId_);
      }
      if (result_ != com.kys.util.netty.proto.ProtoMsg.ResultCode.success.getNumber()) {
        output.writeEnum(2, result_);
      }
      if (serverLogin_ != null) {
        output.writeMessage(3, getServerLogin());
      }
      if (serverPlayerInfo_ != null) {
        output.writeMessage(4, getServerPlayerInfo());
      }
      if (serverSendHallHeartBeat_ != null) {
        output.writeMessage(5, getServerSendHallHeartBeat());
      }
      if (serverSendGameHeartBeat_ != null) {
        output.writeMessage(6, getServerSendGameHeartBeat());
      }
      if (serverGetUserInfo_ != null) {
        output.writeMessage(7, getServerGetUserInfo());
      }
      if (!getErrStrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 99, errStr_);
      }
      if (serverQuickJoin_ != null) {
        output.writeMessage(100, getServerQuickJoin());
      }
      if (serverEnterRoom_ != null) {
        output.writeMessage(101, getServerEnterRoom());
      }
      if (serverRecoverGame_ != null) {
        output.writeMessage(102, getServerRecoverGame());
      }
      if (serverDoCatch_ != null) {
        output.writeMessage(103, getServerDoCatch());
      }
      if (serverPlayCards_ != null) {
        output.writeMessage(104, getServerPlayCards());
      }
      if (serverAutoPlay_ != null) {
        output.writeMessage(105, getServerAutoPlay());
      }
      if (serverLeaveRoom_ != null) {
        output.writeMessage(106, getServerLeaveRoom());
      }
      if (serverCancleJoin_ != null) {
        output.writeMessage(107, getServerCancleJoin());
      }
      if (serverQueryIndex_ != null) {
        output.writeMessage(108, getServerQueryIndex());
      }
      if (serverRetryReturnGame_ != null) {
        output.writeMessage(109, getServerRetryReturnGame());
      }
      if (serverGetRankList_ != null) {
        output.writeMessage(200, getServerGetRankList());
      }
      if (serverRewardMessage_ != null) {
        output.writeMessage(204, getServerRewardMessage());
      }
      if (serverGetRoomConfig_ != null) {
        output.writeMessage(206, getServerGetRoomConfig());
      }
      if (serverGetMonthCardDiamond_ != null) {
        output.writeMessage(209, getServerGetMonthCardDiamond());
      }
      if (serverGetLotteryCount_ != null) {
        output.writeMessage(210, getServerGetLotteryCount());
      }
      if (serverGetRoomInfo_ != null) {
        output.writeMessage(211, getServerGetRoomInfo());
      }
      if (serverSendTelCode_ != null) {
        output.writeMessage(212, getServerSendTelCode());
      }
      if (serverVerifyTelCode_ != null) {
        output.writeMessage(213, getServerVerifyTelCode());
      }
      if (serverSharePackage_ != null) {
        output.writeMessage(217, getServerSharePackage());
      }
      if (serverGetAwardList_ != null) {
        output.writeMessage(218, getServerGetAwardList());
      }
      if (serverCheckConnect_ != null) {
        output.writeMessage(219, getServerCheckConnect());
      }
      if (serverGetPFList_ != null) {
        output.writeMessage(220, getServerGetPFList());
      }
      if (serverChoosePF_ != null) {
        output.writeMessage(221, getServerChoosePF());
      }
      if (serverGetHistoryRank_ != null) {
        output.writeMessage(222, getServerGetHistoryRank());
      }
      if (serverH5Reward_ != null) {
        output.writeMessage(223, getServerH5Reward());
      }
      if (serverNewDrawWinCup_ != null) {
        output.writeMessage(224, getServerNewDrawWinCup());
      }
      if (serverGetNewHallInfo_ != null) {
        output.writeMessage(225, getServerGetNewHallInfo());
      }
      if (serverLuckWall_ != null) {
        output.writeMessage(228, getServerLuckWall());
      }
      if (serverCdkeyAward_ != null) {
        output.writeMessage(229, getServerCdkeyAward());
      }
      if (serverGetStoreInfo_ != null) {
        output.writeMessage(300, getServerGetStoreInfo());
      }
      if (serverConvertGoods_ != null) {
        output.writeMessage(301, getServerConvertGoods());
      }
      if (serverWXPayResult_ != null) {
        output.writeMessage(303, getServerWXPayResult());
      }
      if (serverBuyOrderGoods_ != null) {
        output.writeMessage(304, getServerBuyOrderGoods());
      }
      if (serverGetFirstCharge_ != null) {
        output.writeMessage(305, getServerGetFirstCharge());
      }
      if (serverGetDailyGift_ != null) {
        output.writeMessage(306, getServerGetDailyGift());
      }
      if (serverGetMonthCard_ != null) {
        output.writeMessage(307, getServerGetMonthCard());
      }
      if (serverGetResurgenceGift_ != null) {
        output.writeMessage(308, getServerGetResurgenceGift());
      }
      if (serverGetConvertMessage_ != null) {
        output.writeMessage(309, getServerGetConvertMessage());
      }
      if (serverNewBuyOrder_ != null) {
        output.writeMessage(310, getServerNewBuyOrder());
      }
      if (serverNewConvert_ != null) {
        output.writeMessage(311, getServerNewConvert());
      }
      if (serverAlipayAccount_ != null) {
        output.writeMessage(312, getServerAlipayAccount());
      }
      if (serverPayOptions_ != null) {
        output.writeMessage(313, getServerPayOptions());
      }
      if (serverIdVerify_ != null) {
        output.writeMessage(314, getServerIdVerify());
      }
      if (serverVerifyAward_ != null) {
        output.writeMessage(315, getServerVerifyAward());
      }
      if (serverMiniAppPay_ != null) {
        output.writeMessage(316, getServerMiniAppPay());
      }
      if (serverUnionAccount_ != null) {
        output.writeMessage(317, getServerUnionAccount());
      }
      if (bGameStart_ != null) {
        output.writeMessage(402, getBGameStart());
      }
      if (bDoCatch_ != null) {
        output.writeMessage(403, getBDoCatch());
      }
      if (bCatchResult_ != null) {
        output.writeMessage(404, getBCatchResult());
      }
      if (bPlayCards_ != null) {
        output.writeMessage(405, getBPlayCards());
      }
      if (bSendDiZhuCard_ != null) {
        output.writeMessage(407, getBSendDiZhuCard());
      }
      if (bNextPlayer_ != null) {
        output.writeMessage(408, getBNextPlayer());
      }
      if (bGameSettle_ != null) {
        output.writeMessage(409, getBGameSettle());
      }
      if (bRewardMessage_ != null) {
        output.writeMessage(410, getBRewardMessage());
      }
      if (bAutoPlay_ != null) {
        output.writeMessage(411, getBAutoPlay());
      }
      if (bRoomIdUrl_ != null) {
        output.writeMessage(412, getBRoomIdUrl());
      }
      if (bAwardDialog_ != null) {
        output.writeMessage(413, getBAwardDialog());
      }
      if (bBuySuccess_ != null) {
        output.writeMessage(414, getBBuySuccess());
      }
      if (bRedDotPush_ != null) {
        output.writeMessage(415, getBRedDotPush());
      }
      if (bForceAnnounce_ != null) {
        output.writeMessage(416, getBForceAnnounce());
      }
      if (bDGameMessage_ != null) {
        output.writeMessage(417, getBDGameMessage());
      }
      if (bDGOver_ != null) {
        output.writeMessage(418, getBDGOver());
      }
      if (bDDOver_ != null) {
        output.writeMessage(419, getBDDOver());
      }
      if (bDDInfo_ != null) {
        output.writeMessage(420, getBDDInfo());
      }
      if (bSSInfo_ != null) {
        output.writeMessage(421, getBSSInfo());
      }
      if (bNewSleeveSheepInfo_ != null) {
        output.writeMessage(422, getBNewSleeveSheepInfo());
      }
      if (bNewSleeverOver_ != null) {
        output.writeMessage(423, getBNewSleeverOver());
      }
      if (bDiamondReviveInfo_ != null) {
        output.writeMessage(424, getBDiamondReviveInfo());
      }
      if (b2AutoPlay_ != null) {
        output.writeMessage(425, getB2AutoPlay());
      }
      if (b2GameStart_ != null) {
        output.writeMessage(426, getB2GameStart());
      }
      if (b2DoCatch_ != null) {
        output.writeMessage(427, getB2DoCatch());
      }
      if (b2CatchResult_ != null) {
        output.writeMessage(428, getB2CatchResult());
      }
      if (b2SendDiZhuCard_ != null) {
        output.writeMessage(429, getB2SendDiZhuCard());
      }
      if (b2GameSettle_ != null) {
        output.writeMessage(432, getB2GameSettle());
      }
      if (bMatchStart_ != null) {
        output.writeMessage(434, getBMatchStart());
      }
      if (bMatchEnd_ != null) {
        output.writeMessage(435, getBMatchEnd());
      }
      if (bMatchResult_ != null) {
        output.writeMessage(436, getBMatchResult());
      }
      if (serverGetAnnounce_ != null) {
        output.writeMessage(500, getServerGetAnnounce());
      }
      if (serverGetMail_ != null) {
        output.writeMessage(600, getServerGetMail());
      }
      if (serverGetMailReward_ != null) {
        output.writeMessage(601, getServerGetMailReward());
      }
      if (serverDelMail_ != null) {
        output.writeMessage(602, getServerDelMail());
      }
      if (serverReadMail_ != null) {
        output.writeMessage(603, getServerReadMail());
      }
      if (serverDel2R_ != null) {
        output.writeMessage(604, getServerDel2R());
      }
      if (serverQueryDailyTask_ != null) {
        output.writeMessage(700, getServerQueryDailyTask());
      }
      if (serverGetNoviceReward_ != null) {
        output.writeMessage(702, getServerGetNoviceReward());
      }
      if (serverQueryNoviceTask_ != null) {
        output.writeMessage(703, getServerQueryNoviceTask());
      }
      if (serverGetDTAward_ != null) {
        output.writeMessage(704, getServerGetDTAward());
      }
      if (serverGetReceiveAddr_ != null) {
        output.writeMessage(800, getServerGetReceiveAddr());
      }
      if (serverAlterReceiveAddr_ != null) {
        output.writeMessage(801, getServerAlterReceiveAddr());
      }
      if (serverSnatchList_ != null) {
        output.writeMessage(802, getServerSnatchList());
      }
      if (serverSnatchItemDetail_ != null) {
        output.writeMessage(803, getServerSnatchItemDetail());
      }
      if (serverSnatchBet_ != null) {
        output.writeMessage(804, getServerSnatchBet());
      }
      if (serverSnatchAwardList_ != null) {
        output.writeMessage(805, getServerSnatchAwardList());
      }
      if (serverOwnSnatchRecord_ != null) {
        output.writeMessage(806, getServerOwnSnatchRecord());
      }
      if (serverSnatchItemHistory_ != null) {
        output.writeMessage(807, getServerSnatchItemHistory());
      }
      if (serverSnatchHistoryDetail_ != null) {
        output.writeMessage(808, getServerSnatchHistoryDetail());
      }
      if (serverSnatchGetAward_ != null) {
        output.writeMessage(809, getServerSnatchGetAward());
      }
      if (serverEnterDG_ != null) {
        output.writeMessage(900, getServerEnterDG());
      }
      if (serverDGLottery_ != null) {
        output.writeMessage(901, getServerDGLottery());
      }
      if (serverResetLottery_ != null) {
        output.writeMessage(902, getServerResetLottery());
      }
      if (serverExitDG_ != null) {
        output.writeMessage(903, getServerExitDG());
      }
      if (serverOpenDG_ != null) {
        output.writeMessage(904, getServerOpenDG());
      }
      if (serverOpenDD_ != null) {
        output.writeMessage(905, getServerOpenDD());
      }
      if (serverDDLottery_ != null) {
        output.writeMessage(906, getServerDDLottery());
      }
      if (serverExitDD_ != null) {
        output.writeMessage(907, getServerExitDD());
      }
      if (serverQueryProp_ != null) {
        output.writeMessage(1001, getServerQueryProp());
      }
      if (serverUseProp_ != null) {
        output.writeMessage(1002, getServerUseProp());
      }
      if (serverQueryPropCount_ != null) {
        output.writeMessage(1003, getServerQueryPropCount());
      }
      if (serverSignInfo_ != null) {
        output.writeMessage(1101, getServerSignInfo());
      }
      if (serverSignAward_ != null) {
        output.writeMessage(1102, getServerSignAward());
      }
      if (serverSignState_ != null) {
        output.writeMessage(1103, getServerSignState());
      }
      if (serverLTLottery_ != null) {
        output.writeMessage(1104, getServerLTLottery());
      }
      if (serverGetTSReward_ != null) {
        output.writeMessage(1105, getServerGetTSReward());
      }
      if (serverGetLuckInfo_ != null) {
        output.writeMessage(1106, getServerGetLuckInfo());
      }
      if (serverGetVip_ != null) {
        output.writeMessage(1203, getServerGetVip());
      }
      if (serverGetDayGift_ != null) {
        output.writeMessage(1204, getServerGetDayGift());
      }
      if (serverEnterSleeve_ != null) {
        output.writeMessage(1300, getServerEnterSleeve());
      }
      if (serverSleeveSheep_ != null) {
        output.writeMessage(1301, getServerSleeveSheep());
      }
      if (serverQueryPlayerCoin_ != null) {
        output.writeMessage(1302, getServerQueryPlayerCoin());
      }
      if (serverExitSleeve_ != null) {
        output.writeMessage(1303, getServerExitSleeve());
      }
      if (serverEnterNewSleeve_ != null) {
        output.writeMessage(1304, getServerEnterNewSleeve());
      }
      if (serverNewSleeveSheep_ != null) {
        output.writeMessage(1305, getServerNewSleeveSheep());
      }
      if (serverNewSleeveResult_ != null) {
        output.writeMessage(1306, getServerNewSleeveResult());
      }
      if (serverExitNewSleeve_ != null) {
        output.writeMessage(1307, getServerExitNewSleeve());
      }
      if (server2DoCatch_ != null) {
        output.writeMessage(1401, getServer2DoCatch());
      }
      if (server2PlayCards_ != null) {
        output.writeMessage(1402, getServer2PlayCards());
      }
      if (server2RecoverGame_ != null) {
        output.writeMessage(1403, getServer2RecoverGame());
      }
      if (server2LeaveRoom_ != null) {
        output.writeMessage(1404, getServer2LeaveRoom());
      }
      if (serverMineShare_ != null) {
        output.writeMessage(1501, getServerMineShare());
      }
      if (serverGetMSAward_ != null) {
        output.writeMessage(1502, getServerGetMSAward());
      }
      if (serverFriendShare_ != null) {
        output.writeMessage(1503, getServerFriendShare());
      }
      if (serverGetFSAward_ != null) {
        output.writeMessage(1504, getServerGetFSAward());
      }
      if (serverGetShareTask_ != null) {
        output.writeMessage(1505, getServerGetShareTask());
      }
      if (serverGetShareTaskAward_ != null) {
        output.writeMessage(1506, getServerGetShareTaskAward());
      }
      if (serverQueryReviveInfo_ != null) {
        output.writeMessage(1601, getServerQueryReviveInfo());
      }
      if (serverUseRevive_ != null) {
        output.writeMessage(1602, getServerUseRevive());
      }
      if (serverReviveFirstCharge_ != null) {
        output.writeMessage(1603, getServerReviveFirstCharge());
      }
      if (serverReviveDayGift_ != null) {
        output.writeMessage(1604, getServerReviveDayGift());
      }
      if (serverGetRedTip_ != null) {
        output.writeMessage(1701, getServerGetRedTip());
      }
      if (serverGetMatchInfo_ != null) {
        output.writeMessage(1801, getServerGetMatchInfo());
      }
      if (serverGetMatchDetail_ != null) {
        output.writeMessage(1802, getServerGetMatchDetail());
      }
      if (serverGetMatchRecord_ != null) {
        output.writeMessage(1803, getServerGetMatchRecord());
      }
      if (serverMatchApply_ != null) {
        output.writeMessage(1804, getServerMatchApply());
      }
      if (serverMatchCancel_ != null) {
        output.writeMessage(1805, getServerMatchCancel());
      }
      if (serverOwnMatchRecord_ != null) {
        output.writeMessage(1806, getServerOwnMatchRecord());
      }
      if (serverApplyListChange_ != null) {
        output.writeMessage(1807, getServerApplyListChange());
      }
      if (serverMatchScore_ != null) {
        output.writeMessage(1808, getServerMatchScore());
      }
      if (serverMatchConfig_ != null) {
        output.writeMessage(1809, getServerMatchConfig());
      }
      if (serverGetKillCell_ != null) {
        output.writeMessage(1901, getServerGetKillCell());
      }
      if (serverEnterKillCell_ != null) {
        output.writeMessage(1902, getServerEnterKillCell());
      }
      if (serverQuitKillCell_ != null) {
        output.writeMessage(1903, getServerQuitKillCell());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (methodId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, methodId_);
      }
      if (result_ != com.kys.util.netty.proto.ProtoMsg.ResultCode.success.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, result_);
      }
      if (serverLogin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getServerLogin());
      }
      if (serverPlayerInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getServerPlayerInfo());
      }
      if (serverSendHallHeartBeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getServerSendHallHeartBeat());
      }
      if (serverSendGameHeartBeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getServerSendGameHeartBeat());
      }
      if (serverGetUserInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getServerGetUserInfo());
      }
      if (!getErrStrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(99, errStr_);
      }
      if (serverQuickJoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getServerQuickJoin());
      }
      if (serverEnterRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, getServerEnterRoom());
      }
      if (serverRecoverGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, getServerRecoverGame());
      }
      if (serverDoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, getServerDoCatch());
      }
      if (serverPlayCards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, getServerPlayCards());
      }
      if (serverAutoPlay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, getServerAutoPlay());
      }
      if (serverLeaveRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, getServerLeaveRoom());
      }
      if (serverCancleJoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(107, getServerCancleJoin());
      }
      if (serverQueryIndex_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(108, getServerQueryIndex());
      }
      if (serverRetryReturnGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(109, getServerRetryReturnGame());
      }
      if (serverGetRankList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(200, getServerGetRankList());
      }
      if (serverRewardMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(204, getServerRewardMessage());
      }
      if (serverGetRoomConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(206, getServerGetRoomConfig());
      }
      if (serverGetMonthCardDiamond_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(209, getServerGetMonthCardDiamond());
      }
      if (serverGetLotteryCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(210, getServerGetLotteryCount());
      }
      if (serverGetRoomInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(211, getServerGetRoomInfo());
      }
      if (serverSendTelCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(212, getServerSendTelCode());
      }
      if (serverVerifyTelCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(213, getServerVerifyTelCode());
      }
      if (serverSharePackage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(217, getServerSharePackage());
      }
      if (serverGetAwardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(218, getServerGetAwardList());
      }
      if (serverCheckConnect_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(219, getServerCheckConnect());
      }
      if (serverGetPFList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(220, getServerGetPFList());
      }
      if (serverChoosePF_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(221, getServerChoosePF());
      }
      if (serverGetHistoryRank_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(222, getServerGetHistoryRank());
      }
      if (serverH5Reward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(223, getServerH5Reward());
      }
      if (serverNewDrawWinCup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(224, getServerNewDrawWinCup());
      }
      if (serverGetNewHallInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(225, getServerGetNewHallInfo());
      }
      if (serverLuckWall_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(228, getServerLuckWall());
      }
      if (serverCdkeyAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(229, getServerCdkeyAward());
      }
      if (serverGetStoreInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(300, getServerGetStoreInfo());
      }
      if (serverConvertGoods_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(301, getServerConvertGoods());
      }
      if (serverWXPayResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(303, getServerWXPayResult());
      }
      if (serverBuyOrderGoods_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(304, getServerBuyOrderGoods());
      }
      if (serverGetFirstCharge_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(305, getServerGetFirstCharge());
      }
      if (serverGetDailyGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(306, getServerGetDailyGift());
      }
      if (serverGetMonthCard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(307, getServerGetMonthCard());
      }
      if (serverGetResurgenceGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(308, getServerGetResurgenceGift());
      }
      if (serverGetConvertMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(309, getServerGetConvertMessage());
      }
      if (serverNewBuyOrder_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(310, getServerNewBuyOrder());
      }
      if (serverNewConvert_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(311, getServerNewConvert());
      }
      if (serverAlipayAccount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(312, getServerAlipayAccount());
      }
      if (serverPayOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(313, getServerPayOptions());
      }
      if (serverIdVerify_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(314, getServerIdVerify());
      }
      if (serverVerifyAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(315, getServerVerifyAward());
      }
      if (serverMiniAppPay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(316, getServerMiniAppPay());
      }
      if (serverUnionAccount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(317, getServerUnionAccount());
      }
      if (bGameStart_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(402, getBGameStart());
      }
      if (bDoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(403, getBDoCatch());
      }
      if (bCatchResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(404, getBCatchResult());
      }
      if (bPlayCards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(405, getBPlayCards());
      }
      if (bSendDiZhuCard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(407, getBSendDiZhuCard());
      }
      if (bNextPlayer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(408, getBNextPlayer());
      }
      if (bGameSettle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(409, getBGameSettle());
      }
      if (bRewardMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(410, getBRewardMessage());
      }
      if (bAutoPlay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(411, getBAutoPlay());
      }
      if (bRoomIdUrl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(412, getBRoomIdUrl());
      }
      if (bAwardDialog_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(413, getBAwardDialog());
      }
      if (bBuySuccess_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(414, getBBuySuccess());
      }
      if (bRedDotPush_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(415, getBRedDotPush());
      }
      if (bForceAnnounce_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(416, getBForceAnnounce());
      }
      if (bDGameMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(417, getBDGameMessage());
      }
      if (bDGOver_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(418, getBDGOver());
      }
      if (bDDOver_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(419, getBDDOver());
      }
      if (bDDInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(420, getBDDInfo());
      }
      if (bSSInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(421, getBSSInfo());
      }
      if (bNewSleeveSheepInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(422, getBNewSleeveSheepInfo());
      }
      if (bNewSleeverOver_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(423, getBNewSleeverOver());
      }
      if (bDiamondReviveInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(424, getBDiamondReviveInfo());
      }
      if (b2AutoPlay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(425, getB2AutoPlay());
      }
      if (b2GameStart_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(426, getB2GameStart());
      }
      if (b2DoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(427, getB2DoCatch());
      }
      if (b2CatchResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(428, getB2CatchResult());
      }
      if (b2SendDiZhuCard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(429, getB2SendDiZhuCard());
      }
      if (b2GameSettle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(432, getB2GameSettle());
      }
      if (bMatchStart_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(434, getBMatchStart());
      }
      if (bMatchEnd_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(435, getBMatchEnd());
      }
      if (bMatchResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(436, getBMatchResult());
      }
      if (serverGetAnnounce_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(500, getServerGetAnnounce());
      }
      if (serverGetMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(600, getServerGetMail());
      }
      if (serverGetMailReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(601, getServerGetMailReward());
      }
      if (serverDelMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(602, getServerDelMail());
      }
      if (serverReadMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(603, getServerReadMail());
      }
      if (serverDel2R_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(604, getServerDel2R());
      }
      if (serverQueryDailyTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(700, getServerQueryDailyTask());
      }
      if (serverGetNoviceReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(702, getServerGetNoviceReward());
      }
      if (serverQueryNoviceTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(703, getServerQueryNoviceTask());
      }
      if (serverGetDTAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(704, getServerGetDTAward());
      }
      if (serverGetReceiveAddr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(800, getServerGetReceiveAddr());
      }
      if (serverAlterReceiveAddr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(801, getServerAlterReceiveAddr());
      }
      if (serverSnatchList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(802, getServerSnatchList());
      }
      if (serverSnatchItemDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(803, getServerSnatchItemDetail());
      }
      if (serverSnatchBet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(804, getServerSnatchBet());
      }
      if (serverSnatchAwardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(805, getServerSnatchAwardList());
      }
      if (serverOwnSnatchRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(806, getServerOwnSnatchRecord());
      }
      if (serverSnatchItemHistory_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(807, getServerSnatchItemHistory());
      }
      if (serverSnatchHistoryDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(808, getServerSnatchHistoryDetail());
      }
      if (serverSnatchGetAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(809, getServerSnatchGetAward());
      }
      if (serverEnterDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(900, getServerEnterDG());
      }
      if (serverDGLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(901, getServerDGLottery());
      }
      if (serverResetLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(902, getServerResetLottery());
      }
      if (serverExitDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(903, getServerExitDG());
      }
      if (serverOpenDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(904, getServerOpenDG());
      }
      if (serverOpenDD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(905, getServerOpenDD());
      }
      if (serverDDLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(906, getServerDDLottery());
      }
      if (serverExitDD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(907, getServerExitDD());
      }
      if (serverQueryProp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1001, getServerQueryProp());
      }
      if (serverUseProp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1002, getServerUseProp());
      }
      if (serverQueryPropCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1003, getServerQueryPropCount());
      }
      if (serverSignInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1101, getServerSignInfo());
      }
      if (serverSignAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1102, getServerSignAward());
      }
      if (serverSignState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1103, getServerSignState());
      }
      if (serverLTLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1104, getServerLTLottery());
      }
      if (serverGetTSReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1105, getServerGetTSReward());
      }
      if (serverGetLuckInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1106, getServerGetLuckInfo());
      }
      if (serverGetVip_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1203, getServerGetVip());
      }
      if (serverGetDayGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1204, getServerGetDayGift());
      }
      if (serverEnterSleeve_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1300, getServerEnterSleeve());
      }
      if (serverSleeveSheep_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1301, getServerSleeveSheep());
      }
      if (serverQueryPlayerCoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1302, getServerQueryPlayerCoin());
      }
      if (serverExitSleeve_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1303, getServerExitSleeve());
      }
      if (serverEnterNewSleeve_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1304, getServerEnterNewSleeve());
      }
      if (serverNewSleeveSheep_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1305, getServerNewSleeveSheep());
      }
      if (serverNewSleeveResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1306, getServerNewSleeveResult());
      }
      if (serverExitNewSleeve_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1307, getServerExitNewSleeve());
      }
      if (server2DoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1401, getServer2DoCatch());
      }
      if (server2PlayCards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1402, getServer2PlayCards());
      }
      if (server2RecoverGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1403, getServer2RecoverGame());
      }
      if (server2LeaveRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1404, getServer2LeaveRoom());
      }
      if (serverMineShare_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1501, getServerMineShare());
      }
      if (serverGetMSAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1502, getServerGetMSAward());
      }
      if (serverFriendShare_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1503, getServerFriendShare());
      }
      if (serverGetFSAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1504, getServerGetFSAward());
      }
      if (serverGetShareTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1505, getServerGetShareTask());
      }
      if (serverGetShareTaskAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1506, getServerGetShareTaskAward());
      }
      if (serverQueryReviveInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1601, getServerQueryReviveInfo());
      }
      if (serverUseRevive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1602, getServerUseRevive());
      }
      if (serverReviveFirstCharge_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1603, getServerReviveFirstCharge());
      }
      if (serverReviveDayGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1604, getServerReviveDayGift());
      }
      if (serverGetRedTip_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1701, getServerGetRedTip());
      }
      if (serverGetMatchInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1801, getServerGetMatchInfo());
      }
      if (serverGetMatchDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1802, getServerGetMatchDetail());
      }
      if (serverGetMatchRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1803, getServerGetMatchRecord());
      }
      if (serverMatchApply_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1804, getServerMatchApply());
      }
      if (serverMatchCancel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1805, getServerMatchCancel());
      }
      if (serverOwnMatchRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1806, getServerOwnMatchRecord());
      }
      if (serverApplyListChange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1807, getServerApplyListChange());
      }
      if (serverMatchScore_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1808, getServerMatchScore());
      }
      if (serverMatchConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1809, getServerMatchConfig());
      }
      if (serverGetKillCell_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1901, getServerGetKillCell());
      }
      if (serverEnterKillCell_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1902, getServerEnterKillCell());
      }
      if (serverQuitKillCell_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1903, getServerQuitKillCell());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.kys.util.netty.proto.ProtoMsg.ServerResponse)) {
        return super.equals(obj);
      }
      com.kys.util.netty.proto.ProtoMsg.ServerResponse other = (com.kys.util.netty.proto.ProtoMsg.ServerResponse) obj;

      boolean result = true;
      result = result && (getMethodId()
          == other.getMethodId());
      result = result && result_ == other.result_;
      result = result && getErrStr()
          .equals(other.getErrStr());
      result = result && (hasServerLogin() == other.hasServerLogin());
      if (hasServerLogin()) {
        result = result && getServerLogin()
            .equals(other.getServerLogin());
      }
      result = result && (hasServerPlayerInfo() == other.hasServerPlayerInfo());
      if (hasServerPlayerInfo()) {
        result = result && getServerPlayerInfo()
            .equals(other.getServerPlayerInfo());
      }
      result = result && (hasServerSendHallHeartBeat() == other.hasServerSendHallHeartBeat());
      if (hasServerSendHallHeartBeat()) {
        result = result && getServerSendHallHeartBeat()
            .equals(other.getServerSendHallHeartBeat());
      }
      result = result && (hasServerSendGameHeartBeat() == other.hasServerSendGameHeartBeat());
      if (hasServerSendGameHeartBeat()) {
        result = result && getServerSendGameHeartBeat()
            .equals(other.getServerSendGameHeartBeat());
      }
      result = result && (hasServerGetUserInfo() == other.hasServerGetUserInfo());
      if (hasServerGetUserInfo()) {
        result = result && getServerGetUserInfo()
            .equals(other.getServerGetUserInfo());
      }
      result = result && (hasServerQuickJoin() == other.hasServerQuickJoin());
      if (hasServerQuickJoin()) {
        result = result && getServerQuickJoin()
            .equals(other.getServerQuickJoin());
      }
      result = result && (hasServerEnterRoom() == other.hasServerEnterRoom());
      if (hasServerEnterRoom()) {
        result = result && getServerEnterRoom()
            .equals(other.getServerEnterRoom());
      }
      result = result && (hasServerRecoverGame() == other.hasServerRecoverGame());
      if (hasServerRecoverGame()) {
        result = result && getServerRecoverGame()
            .equals(other.getServerRecoverGame());
      }
      result = result && (hasServerDoCatch() == other.hasServerDoCatch());
      if (hasServerDoCatch()) {
        result = result && getServerDoCatch()
            .equals(other.getServerDoCatch());
      }
      result = result && (hasServerPlayCards() == other.hasServerPlayCards());
      if (hasServerPlayCards()) {
        result = result && getServerPlayCards()
            .equals(other.getServerPlayCards());
      }
      result = result && (hasServerAutoPlay() == other.hasServerAutoPlay());
      if (hasServerAutoPlay()) {
        result = result && getServerAutoPlay()
            .equals(other.getServerAutoPlay());
      }
      result = result && (hasServerLeaveRoom() == other.hasServerLeaveRoom());
      if (hasServerLeaveRoom()) {
        result = result && getServerLeaveRoom()
            .equals(other.getServerLeaveRoom());
      }
      result = result && (hasServerCancleJoin() == other.hasServerCancleJoin());
      if (hasServerCancleJoin()) {
        result = result && getServerCancleJoin()
            .equals(other.getServerCancleJoin());
      }
      result = result && (hasServerQueryIndex() == other.hasServerQueryIndex());
      if (hasServerQueryIndex()) {
        result = result && getServerQueryIndex()
            .equals(other.getServerQueryIndex());
      }
      result = result && (hasServerRetryReturnGame() == other.hasServerRetryReturnGame());
      if (hasServerRetryReturnGame()) {
        result = result && getServerRetryReturnGame()
            .equals(other.getServerRetryReturnGame());
      }
      result = result && (hasServerGetRankList() == other.hasServerGetRankList());
      if (hasServerGetRankList()) {
        result = result && getServerGetRankList()
            .equals(other.getServerGetRankList());
      }
      result = result && (hasServerRewardMessage() == other.hasServerRewardMessage());
      if (hasServerRewardMessage()) {
        result = result && getServerRewardMessage()
            .equals(other.getServerRewardMessage());
      }
      result = result && (hasServerGetRoomConfig() == other.hasServerGetRoomConfig());
      if (hasServerGetRoomConfig()) {
        result = result && getServerGetRoomConfig()
            .equals(other.getServerGetRoomConfig());
      }
      result = result && (hasServerGetMonthCardDiamond() == other.hasServerGetMonthCardDiamond());
      if (hasServerGetMonthCardDiamond()) {
        result = result && getServerGetMonthCardDiamond()
            .equals(other.getServerGetMonthCardDiamond());
      }
      result = result && (hasServerGetLotteryCount() == other.hasServerGetLotteryCount());
      if (hasServerGetLotteryCount()) {
        result = result && getServerGetLotteryCount()
            .equals(other.getServerGetLotteryCount());
      }
      result = result && (hasServerGetRoomInfo() == other.hasServerGetRoomInfo());
      if (hasServerGetRoomInfo()) {
        result = result && getServerGetRoomInfo()
            .equals(other.getServerGetRoomInfo());
      }
      result = result && (hasServerSendTelCode() == other.hasServerSendTelCode());
      if (hasServerSendTelCode()) {
        result = result && getServerSendTelCode()
            .equals(other.getServerSendTelCode());
      }
      result = result && (hasServerVerifyTelCode() == other.hasServerVerifyTelCode());
      if (hasServerVerifyTelCode()) {
        result = result && getServerVerifyTelCode()
            .equals(other.getServerVerifyTelCode());
      }
      result = result && (hasServerSharePackage() == other.hasServerSharePackage());
      if (hasServerSharePackage()) {
        result = result && getServerSharePackage()
            .equals(other.getServerSharePackage());
      }
      result = result && (hasServerGetAwardList() == other.hasServerGetAwardList());
      if (hasServerGetAwardList()) {
        result = result && getServerGetAwardList()
            .equals(other.getServerGetAwardList());
      }
      result = result && (hasServerCheckConnect() == other.hasServerCheckConnect());
      if (hasServerCheckConnect()) {
        result = result && getServerCheckConnect()
            .equals(other.getServerCheckConnect());
      }
      result = result && (hasServerGetPFList() == other.hasServerGetPFList());
      if (hasServerGetPFList()) {
        result = result && getServerGetPFList()
            .equals(other.getServerGetPFList());
      }
      result = result && (hasServerChoosePF() == other.hasServerChoosePF());
      if (hasServerChoosePF()) {
        result = result && getServerChoosePF()
            .equals(other.getServerChoosePF());
      }
      result = result && (hasServerGetHistoryRank() == other.hasServerGetHistoryRank());
      if (hasServerGetHistoryRank()) {
        result = result && getServerGetHistoryRank()
            .equals(other.getServerGetHistoryRank());
      }
      result = result && (hasServerH5Reward() == other.hasServerH5Reward());
      if (hasServerH5Reward()) {
        result = result && getServerH5Reward()
            .equals(other.getServerH5Reward());
      }
      result = result && (hasServerNewDrawWinCup() == other.hasServerNewDrawWinCup());
      if (hasServerNewDrawWinCup()) {
        result = result && getServerNewDrawWinCup()
            .equals(other.getServerNewDrawWinCup());
      }
      result = result && (hasServerGetNewHallInfo() == other.hasServerGetNewHallInfo());
      if (hasServerGetNewHallInfo()) {
        result = result && getServerGetNewHallInfo()
            .equals(other.getServerGetNewHallInfo());
      }
      result = result && (hasServerLuckWall() == other.hasServerLuckWall());
      if (hasServerLuckWall()) {
        result = result && getServerLuckWall()
            .equals(other.getServerLuckWall());
      }
      result = result && (hasServerCdkeyAward() == other.hasServerCdkeyAward());
      if (hasServerCdkeyAward()) {
        result = result && getServerCdkeyAward()
            .equals(other.getServerCdkeyAward());
      }
      result = result && (hasServerGetStoreInfo() == other.hasServerGetStoreInfo());
      if (hasServerGetStoreInfo()) {
        result = result && getServerGetStoreInfo()
            .equals(other.getServerGetStoreInfo());
      }
      result = result && (hasServerConvertGoods() == other.hasServerConvertGoods());
      if (hasServerConvertGoods()) {
        result = result && getServerConvertGoods()
            .equals(other.getServerConvertGoods());
      }
      result = result && (hasServerWXPayResult() == other.hasServerWXPayResult());
      if (hasServerWXPayResult()) {
        result = result && getServerWXPayResult()
            .equals(other.getServerWXPayResult());
      }
      result = result && (hasServerBuyOrderGoods() == other.hasServerBuyOrderGoods());
      if (hasServerBuyOrderGoods()) {
        result = result && getServerBuyOrderGoods()
            .equals(other.getServerBuyOrderGoods());
      }
      result = result && (hasServerGetFirstCharge() == other.hasServerGetFirstCharge());
      if (hasServerGetFirstCharge()) {
        result = result && getServerGetFirstCharge()
            .equals(other.getServerGetFirstCharge());
      }
      result = result && (hasServerGetDailyGift() == other.hasServerGetDailyGift());
      if (hasServerGetDailyGift()) {
        result = result && getServerGetDailyGift()
            .equals(other.getServerGetDailyGift());
      }
      result = result && (hasServerGetMonthCard() == other.hasServerGetMonthCard());
      if (hasServerGetMonthCard()) {
        result = result && getServerGetMonthCard()
            .equals(other.getServerGetMonthCard());
      }
      result = result && (hasServerGetResurgenceGift() == other.hasServerGetResurgenceGift());
      if (hasServerGetResurgenceGift()) {
        result = result && getServerGetResurgenceGift()
            .equals(other.getServerGetResurgenceGift());
      }
      result = result && (hasServerGetConvertMessage() == other.hasServerGetConvertMessage());
      if (hasServerGetConvertMessage()) {
        result = result && getServerGetConvertMessage()
            .equals(other.getServerGetConvertMessage());
      }
      result = result && (hasServerNewBuyOrder() == other.hasServerNewBuyOrder());
      if (hasServerNewBuyOrder()) {
        result = result && getServerNewBuyOrder()
            .equals(other.getServerNewBuyOrder());
      }
      result = result && (hasServerNewConvert() == other.hasServerNewConvert());
      if (hasServerNewConvert()) {
        result = result && getServerNewConvert()
            .equals(other.getServerNewConvert());
      }
      result = result && (hasServerAlipayAccount() == other.hasServerAlipayAccount());
      if (hasServerAlipayAccount()) {
        result = result && getServerAlipayAccount()
            .equals(other.getServerAlipayAccount());
      }
      result = result && (hasServerPayOptions() == other.hasServerPayOptions());
      if (hasServerPayOptions()) {
        result = result && getServerPayOptions()
            .equals(other.getServerPayOptions());
      }
      result = result && (hasServerIdVerify() == other.hasServerIdVerify());
      if (hasServerIdVerify()) {
        result = result && getServerIdVerify()
            .equals(other.getServerIdVerify());
      }
      result = result && (hasServerVerifyAward() == other.hasServerVerifyAward());
      if (hasServerVerifyAward()) {
        result = result && getServerVerifyAward()
            .equals(other.getServerVerifyAward());
      }
      result = result && (hasServerMiniAppPay() == other.hasServerMiniAppPay());
      if (hasServerMiniAppPay()) {
        result = result && getServerMiniAppPay()
            .equals(other.getServerMiniAppPay());
      }
      result = result && (hasServerUnionAccount() == other.hasServerUnionAccount());
      if (hasServerUnionAccount()) {
        result = result && getServerUnionAccount()
            .equals(other.getServerUnionAccount());
      }
      result = result && (hasServerGetAnnounce() == other.hasServerGetAnnounce());
      if (hasServerGetAnnounce()) {
        result = result && getServerGetAnnounce()
            .equals(other.getServerGetAnnounce());
      }
      result = result && (hasServerGetMail() == other.hasServerGetMail());
      if (hasServerGetMail()) {
        result = result && getServerGetMail()
            .equals(other.getServerGetMail());
      }
      result = result && (hasServerGetMailReward() == other.hasServerGetMailReward());
      if (hasServerGetMailReward()) {
        result = result && getServerGetMailReward()
            .equals(other.getServerGetMailReward());
      }
      result = result && (hasServerDelMail() == other.hasServerDelMail());
      if (hasServerDelMail()) {
        result = result && getServerDelMail()
            .equals(other.getServerDelMail());
      }
      result = result && (hasServerReadMail() == other.hasServerReadMail());
      if (hasServerReadMail()) {
        result = result && getServerReadMail()
            .equals(other.getServerReadMail());
      }
      result = result && (hasServerDel2R() == other.hasServerDel2R());
      if (hasServerDel2R()) {
        result = result && getServerDel2R()
            .equals(other.getServerDel2R());
      }
      result = result && (hasServerQueryDailyTask() == other.hasServerQueryDailyTask());
      if (hasServerQueryDailyTask()) {
        result = result && getServerQueryDailyTask()
            .equals(other.getServerQueryDailyTask());
      }
      result = result && (hasServerGetNoviceReward() == other.hasServerGetNoviceReward());
      if (hasServerGetNoviceReward()) {
        result = result && getServerGetNoviceReward()
            .equals(other.getServerGetNoviceReward());
      }
      result = result && (hasServerQueryNoviceTask() == other.hasServerQueryNoviceTask());
      if (hasServerQueryNoviceTask()) {
        result = result && getServerQueryNoviceTask()
            .equals(other.getServerQueryNoviceTask());
      }
      result = result && (hasServerGetDTAward() == other.hasServerGetDTAward());
      if (hasServerGetDTAward()) {
        result = result && getServerGetDTAward()
            .equals(other.getServerGetDTAward());
      }
      result = result && (hasServerGetReceiveAddr() == other.hasServerGetReceiveAddr());
      if (hasServerGetReceiveAddr()) {
        result = result && getServerGetReceiveAddr()
            .equals(other.getServerGetReceiveAddr());
      }
      result = result && (hasServerAlterReceiveAddr() == other.hasServerAlterReceiveAddr());
      if (hasServerAlterReceiveAddr()) {
        result = result && getServerAlterReceiveAddr()
            .equals(other.getServerAlterReceiveAddr());
      }
      result = result && (hasServerSnatchList() == other.hasServerSnatchList());
      if (hasServerSnatchList()) {
        result = result && getServerSnatchList()
            .equals(other.getServerSnatchList());
      }
      result = result && (hasServerSnatchItemDetail() == other.hasServerSnatchItemDetail());
      if (hasServerSnatchItemDetail()) {
        result = result && getServerSnatchItemDetail()
            .equals(other.getServerSnatchItemDetail());
      }
      result = result && (hasServerSnatchBet() == other.hasServerSnatchBet());
      if (hasServerSnatchBet()) {
        result = result && getServerSnatchBet()
            .equals(other.getServerSnatchBet());
      }
      result = result && (hasServerSnatchAwardList() == other.hasServerSnatchAwardList());
      if (hasServerSnatchAwardList()) {
        result = result && getServerSnatchAwardList()
            .equals(other.getServerSnatchAwardList());
      }
      result = result && (hasServerOwnSnatchRecord() == other.hasServerOwnSnatchRecord());
      if (hasServerOwnSnatchRecord()) {
        result = result && getServerOwnSnatchRecord()
            .equals(other.getServerOwnSnatchRecord());
      }
      result = result && (hasServerSnatchItemHistory() == other.hasServerSnatchItemHistory());
      if (hasServerSnatchItemHistory()) {
        result = result && getServerSnatchItemHistory()
            .equals(other.getServerSnatchItemHistory());
      }
      result = result && (hasServerSnatchHistoryDetail() == other.hasServerSnatchHistoryDetail());
      if (hasServerSnatchHistoryDetail()) {
        result = result && getServerSnatchHistoryDetail()
            .equals(other.getServerSnatchHistoryDetail());
      }
      result = result && (hasServerSnatchGetAward() == other.hasServerSnatchGetAward());
      if (hasServerSnatchGetAward()) {
        result = result && getServerSnatchGetAward()
            .equals(other.getServerSnatchGetAward());
      }
      result = result && (hasServerEnterDG() == other.hasServerEnterDG());
      if (hasServerEnterDG()) {
        result = result && getServerEnterDG()
            .equals(other.getServerEnterDG());
      }
      result = result && (hasServerDGLottery() == other.hasServerDGLottery());
      if (hasServerDGLottery()) {
        result = result && getServerDGLottery()
            .equals(other.getServerDGLottery());
      }
      result = result && (hasServerResetLottery() == other.hasServerResetLottery());
      if (hasServerResetLottery()) {
        result = result && getServerResetLottery()
            .equals(other.getServerResetLottery());
      }
      result = result && (hasServerExitDG() == other.hasServerExitDG());
      if (hasServerExitDG()) {
        result = result && getServerExitDG()
            .equals(other.getServerExitDG());
      }
      result = result && (hasServerOpenDG() == other.hasServerOpenDG());
      if (hasServerOpenDG()) {
        result = result && getServerOpenDG()
            .equals(other.getServerOpenDG());
      }
      result = result && (hasServerOpenDD() == other.hasServerOpenDD());
      if (hasServerOpenDD()) {
        result = result && getServerOpenDD()
            .equals(other.getServerOpenDD());
      }
      result = result && (hasServerDDLottery() == other.hasServerDDLottery());
      if (hasServerDDLottery()) {
        result = result && getServerDDLottery()
            .equals(other.getServerDDLottery());
      }
      result = result && (hasServerExitDD() == other.hasServerExitDD());
      if (hasServerExitDD()) {
        result = result && getServerExitDD()
            .equals(other.getServerExitDD());
      }
      result = result && (hasServerQueryProp() == other.hasServerQueryProp());
      if (hasServerQueryProp()) {
        result = result && getServerQueryProp()
            .equals(other.getServerQueryProp());
      }
      result = result && (hasServerUseProp() == other.hasServerUseProp());
      if (hasServerUseProp()) {
        result = result && getServerUseProp()
            .equals(other.getServerUseProp());
      }
      result = result && (hasServerQueryPropCount() == other.hasServerQueryPropCount());
      if (hasServerQueryPropCount()) {
        result = result && getServerQueryPropCount()
            .equals(other.getServerQueryPropCount());
      }
      result = result && (hasServerSignInfo() == other.hasServerSignInfo());
      if (hasServerSignInfo()) {
        result = result && getServerSignInfo()
            .equals(other.getServerSignInfo());
      }
      result = result && (hasServerSignAward() == other.hasServerSignAward());
      if (hasServerSignAward()) {
        result = result && getServerSignAward()
            .equals(other.getServerSignAward());
      }
      result = result && (hasServerSignState() == other.hasServerSignState());
      if (hasServerSignState()) {
        result = result && getServerSignState()
            .equals(other.getServerSignState());
      }
      result = result && (hasServerLTLottery() == other.hasServerLTLottery());
      if (hasServerLTLottery()) {
        result = result && getServerLTLottery()
            .equals(other.getServerLTLottery());
      }
      result = result && (hasServerGetTSReward() == other.hasServerGetTSReward());
      if (hasServerGetTSReward()) {
        result = result && getServerGetTSReward()
            .equals(other.getServerGetTSReward());
      }
      result = result && (hasServerGetLuckInfo() == other.hasServerGetLuckInfo());
      if (hasServerGetLuckInfo()) {
        result = result && getServerGetLuckInfo()
            .equals(other.getServerGetLuckInfo());
      }
      result = result && (hasServerGetVip() == other.hasServerGetVip());
      if (hasServerGetVip()) {
        result = result && getServerGetVip()
            .equals(other.getServerGetVip());
      }
      result = result && (hasServerGetDayGift() == other.hasServerGetDayGift());
      if (hasServerGetDayGift()) {
        result = result && getServerGetDayGift()
            .equals(other.getServerGetDayGift());
      }
      result = result && (hasServerEnterSleeve() == other.hasServerEnterSleeve());
      if (hasServerEnterSleeve()) {
        result = result && getServerEnterSleeve()
            .equals(other.getServerEnterSleeve());
      }
      result = result && (hasServerSleeveSheep() == other.hasServerSleeveSheep());
      if (hasServerSleeveSheep()) {
        result = result && getServerSleeveSheep()
            .equals(other.getServerSleeveSheep());
      }
      result = result && (hasServerQueryPlayerCoin() == other.hasServerQueryPlayerCoin());
      if (hasServerQueryPlayerCoin()) {
        result = result && getServerQueryPlayerCoin()
            .equals(other.getServerQueryPlayerCoin());
      }
      result = result && (hasServerExitSleeve() == other.hasServerExitSleeve());
      if (hasServerExitSleeve()) {
        result = result && getServerExitSleeve()
            .equals(other.getServerExitSleeve());
      }
      result = result && (hasServerEnterNewSleeve() == other.hasServerEnterNewSleeve());
      if (hasServerEnterNewSleeve()) {
        result = result && getServerEnterNewSleeve()
            .equals(other.getServerEnterNewSleeve());
      }
      result = result && (hasServerNewSleeveSheep() == other.hasServerNewSleeveSheep());
      if (hasServerNewSleeveSheep()) {
        result = result && getServerNewSleeveSheep()
            .equals(other.getServerNewSleeveSheep());
      }
      result = result && (hasServerNewSleeveResult() == other.hasServerNewSleeveResult());
      if (hasServerNewSleeveResult()) {
        result = result && getServerNewSleeveResult()
            .equals(other.getServerNewSleeveResult());
      }
      result = result && (hasServerExitNewSleeve() == other.hasServerExitNewSleeve());
      if (hasServerExitNewSleeve()) {
        result = result && getServerExitNewSleeve()
            .equals(other.getServerExitNewSleeve());
      }
      result = result && (hasServer2DoCatch() == other.hasServer2DoCatch());
      if (hasServer2DoCatch()) {
        result = result && getServer2DoCatch()
            .equals(other.getServer2DoCatch());
      }
      result = result && (hasServer2PlayCards() == other.hasServer2PlayCards());
      if (hasServer2PlayCards()) {
        result = result && getServer2PlayCards()
            .equals(other.getServer2PlayCards());
      }
      result = result && (hasServer2RecoverGame() == other.hasServer2RecoverGame());
      if (hasServer2RecoverGame()) {
        result = result && getServer2RecoverGame()
            .equals(other.getServer2RecoverGame());
      }
      result = result && (hasServer2LeaveRoom() == other.hasServer2LeaveRoom());
      if (hasServer2LeaveRoom()) {
        result = result && getServer2LeaveRoom()
            .equals(other.getServer2LeaveRoom());
      }
      result = result && (hasServerMineShare() == other.hasServerMineShare());
      if (hasServerMineShare()) {
        result = result && getServerMineShare()
            .equals(other.getServerMineShare());
      }
      result = result && (hasServerGetMSAward() == other.hasServerGetMSAward());
      if (hasServerGetMSAward()) {
        result = result && getServerGetMSAward()
            .equals(other.getServerGetMSAward());
      }
      result = result && (hasServerFriendShare() == other.hasServerFriendShare());
      if (hasServerFriendShare()) {
        result = result && getServerFriendShare()
            .equals(other.getServerFriendShare());
      }
      result = result && (hasServerGetFSAward() == other.hasServerGetFSAward());
      if (hasServerGetFSAward()) {
        result = result && getServerGetFSAward()
            .equals(other.getServerGetFSAward());
      }
      result = result && (hasServerGetShareTask() == other.hasServerGetShareTask());
      if (hasServerGetShareTask()) {
        result = result && getServerGetShareTask()
            .equals(other.getServerGetShareTask());
      }
      result = result && (hasServerGetShareTaskAward() == other.hasServerGetShareTaskAward());
      if (hasServerGetShareTaskAward()) {
        result = result && getServerGetShareTaskAward()
            .equals(other.getServerGetShareTaskAward());
      }
      result = result && (hasServerQueryReviveInfo() == other.hasServerQueryReviveInfo());
      if (hasServerQueryReviveInfo()) {
        result = result && getServerQueryReviveInfo()
            .equals(other.getServerQueryReviveInfo());
      }
      result = result && (hasServerUseRevive() == other.hasServerUseRevive());
      if (hasServerUseRevive()) {
        result = result && getServerUseRevive()
            .equals(other.getServerUseRevive());
      }
      result = result && (hasServerReviveFirstCharge() == other.hasServerReviveFirstCharge());
      if (hasServerReviveFirstCharge()) {
        result = result && getServerReviveFirstCharge()
            .equals(other.getServerReviveFirstCharge());
      }
      result = result && (hasServerReviveDayGift() == other.hasServerReviveDayGift());
      if (hasServerReviveDayGift()) {
        result = result && getServerReviveDayGift()
            .equals(other.getServerReviveDayGift());
      }
      result = result && (hasServerGetRedTip() == other.hasServerGetRedTip());
      if (hasServerGetRedTip()) {
        result = result && getServerGetRedTip()
            .equals(other.getServerGetRedTip());
      }
      result = result && (hasServerGetMatchInfo() == other.hasServerGetMatchInfo());
      if (hasServerGetMatchInfo()) {
        result = result && getServerGetMatchInfo()
            .equals(other.getServerGetMatchInfo());
      }
      result = result && (hasServerGetMatchDetail() == other.hasServerGetMatchDetail());
      if (hasServerGetMatchDetail()) {
        result = result && getServerGetMatchDetail()
            .equals(other.getServerGetMatchDetail());
      }
      result = result && (hasServerGetMatchRecord() == other.hasServerGetMatchRecord());
      if (hasServerGetMatchRecord()) {
        result = result && getServerGetMatchRecord()
            .equals(other.getServerGetMatchRecord());
      }
      result = result && (hasServerMatchApply() == other.hasServerMatchApply());
      if (hasServerMatchApply()) {
        result = result && getServerMatchApply()
            .equals(other.getServerMatchApply());
      }
      result = result && (hasServerMatchCancel() == other.hasServerMatchCancel());
      if (hasServerMatchCancel()) {
        result = result && getServerMatchCancel()
            .equals(other.getServerMatchCancel());
      }
      result = result && (hasServerOwnMatchRecord() == other.hasServerOwnMatchRecord());
      if (hasServerOwnMatchRecord()) {
        result = result && getServerOwnMatchRecord()
            .equals(other.getServerOwnMatchRecord());
      }
      result = result && (hasServerApplyListChange() == other.hasServerApplyListChange());
      if (hasServerApplyListChange()) {
        result = result && getServerApplyListChange()
            .equals(other.getServerApplyListChange());
      }
      result = result && (hasServerMatchScore() == other.hasServerMatchScore());
      if (hasServerMatchScore()) {
        result = result && getServerMatchScore()
            .equals(other.getServerMatchScore());
      }
      result = result && (hasServerMatchConfig() == other.hasServerMatchConfig());
      if (hasServerMatchConfig()) {
        result = result && getServerMatchConfig()
            .equals(other.getServerMatchConfig());
      }
      result = result && (hasServerGetKillCell() == other.hasServerGetKillCell());
      if (hasServerGetKillCell()) {
        result = result && getServerGetKillCell()
            .equals(other.getServerGetKillCell());
      }
      result = result && (hasServerEnterKillCell() == other.hasServerEnterKillCell());
      if (hasServerEnterKillCell()) {
        result = result && getServerEnterKillCell()
            .equals(other.getServerEnterKillCell());
      }
      result = result && (hasServerQuitKillCell() == other.hasServerQuitKillCell());
      if (hasServerQuitKillCell()) {
        result = result && getServerQuitKillCell()
            .equals(other.getServerQuitKillCell());
      }
      result = result && (hasBGameStart() == other.hasBGameStart());
      if (hasBGameStart()) {
        result = result && getBGameStart()
            .equals(other.getBGameStart());
      }
      result = result && (hasBDoCatch() == other.hasBDoCatch());
      if (hasBDoCatch()) {
        result = result && getBDoCatch()
            .equals(other.getBDoCatch());
      }
      result = result && (hasBCatchResult() == other.hasBCatchResult());
      if (hasBCatchResult()) {
        result = result && getBCatchResult()
            .equals(other.getBCatchResult());
      }
      result = result && (hasBPlayCards() == other.hasBPlayCards());
      if (hasBPlayCards()) {
        result = result && getBPlayCards()
            .equals(other.getBPlayCards());
      }
      result = result && (hasBSendDiZhuCard() == other.hasBSendDiZhuCard());
      if (hasBSendDiZhuCard()) {
        result = result && getBSendDiZhuCard()
            .equals(other.getBSendDiZhuCard());
      }
      result = result && (hasBNextPlayer() == other.hasBNextPlayer());
      if (hasBNextPlayer()) {
        result = result && getBNextPlayer()
            .equals(other.getBNextPlayer());
      }
      result = result && (hasBGameSettle() == other.hasBGameSettle());
      if (hasBGameSettle()) {
        result = result && getBGameSettle()
            .equals(other.getBGameSettle());
      }
      result = result && (hasBRewardMessage() == other.hasBRewardMessage());
      if (hasBRewardMessage()) {
        result = result && getBRewardMessage()
            .equals(other.getBRewardMessage());
      }
      result = result && (hasBAutoPlay() == other.hasBAutoPlay());
      if (hasBAutoPlay()) {
        result = result && getBAutoPlay()
            .equals(other.getBAutoPlay());
      }
      result = result && (hasBRoomIdUrl() == other.hasBRoomIdUrl());
      if (hasBRoomIdUrl()) {
        result = result && getBRoomIdUrl()
            .equals(other.getBRoomIdUrl());
      }
      result = result && (hasBAwardDialog() == other.hasBAwardDialog());
      if (hasBAwardDialog()) {
        result = result && getBAwardDialog()
            .equals(other.getBAwardDialog());
      }
      result = result && (hasBBuySuccess() == other.hasBBuySuccess());
      if (hasBBuySuccess()) {
        result = result && getBBuySuccess()
            .equals(other.getBBuySuccess());
      }
      result = result && (hasBRedDotPush() == other.hasBRedDotPush());
      if (hasBRedDotPush()) {
        result = result && getBRedDotPush()
            .equals(other.getBRedDotPush());
      }
      result = result && (hasBForceAnnounce() == other.hasBForceAnnounce());
      if (hasBForceAnnounce()) {
        result = result && getBForceAnnounce()
            .equals(other.getBForceAnnounce());
      }
      result = result && (hasBDGameMessage() == other.hasBDGameMessage());
      if (hasBDGameMessage()) {
        result = result && getBDGameMessage()
            .equals(other.getBDGameMessage());
      }
      result = result && (hasBDGOver() == other.hasBDGOver());
      if (hasBDGOver()) {
        result = result && getBDGOver()
            .equals(other.getBDGOver());
      }
      result = result && (hasBDDOver() == other.hasBDDOver());
      if (hasBDDOver()) {
        result = result && getBDDOver()
            .equals(other.getBDDOver());
      }
      result = result && (hasBDDInfo() == other.hasBDDInfo());
      if (hasBDDInfo()) {
        result = result && getBDDInfo()
            .equals(other.getBDDInfo());
      }
      result = result && (hasBSSInfo() == other.hasBSSInfo());
      if (hasBSSInfo()) {
        result = result && getBSSInfo()
            .equals(other.getBSSInfo());
      }
      result = result && (hasBNewSleeveSheepInfo() == other.hasBNewSleeveSheepInfo());
      if (hasBNewSleeveSheepInfo()) {
        result = result && getBNewSleeveSheepInfo()
            .equals(other.getBNewSleeveSheepInfo());
      }
      result = result && (hasBNewSleeverOver() == other.hasBNewSleeverOver());
      if (hasBNewSleeverOver()) {
        result = result && getBNewSleeverOver()
            .equals(other.getBNewSleeverOver());
      }
      result = result && (hasBDiamondReviveInfo() == other.hasBDiamondReviveInfo());
      if (hasBDiamondReviveInfo()) {
        result = result && getBDiamondReviveInfo()
            .equals(other.getBDiamondReviveInfo());
      }
      result = result && (hasB2AutoPlay() == other.hasB2AutoPlay());
      if (hasB2AutoPlay()) {
        result = result && getB2AutoPlay()
            .equals(other.getB2AutoPlay());
      }
      result = result && (hasB2GameStart() == other.hasB2GameStart());
      if (hasB2GameStart()) {
        result = result && getB2GameStart()
            .equals(other.getB2GameStart());
      }
      result = result && (hasB2DoCatch() == other.hasB2DoCatch());
      if (hasB2DoCatch()) {
        result = result && getB2DoCatch()
            .equals(other.getB2DoCatch());
      }
      result = result && (hasB2CatchResult() == other.hasB2CatchResult());
      if (hasB2CatchResult()) {
        result = result && getB2CatchResult()
            .equals(other.getB2CatchResult());
      }
      result = result && (hasB2SendDiZhuCard() == other.hasB2SendDiZhuCard());
      if (hasB2SendDiZhuCard()) {
        result = result && getB2SendDiZhuCard()
            .equals(other.getB2SendDiZhuCard());
      }
      result = result && (hasB2GameSettle() == other.hasB2GameSettle());
      if (hasB2GameSettle()) {
        result = result && getB2GameSettle()
            .equals(other.getB2GameSettle());
      }
      result = result && (hasBMatchStart() == other.hasBMatchStart());
      if (hasBMatchStart()) {
        result = result && getBMatchStart()
            .equals(other.getBMatchStart());
      }
      result = result && (hasBMatchEnd() == other.hasBMatchEnd());
      if (hasBMatchEnd()) {
        result = result && getBMatchEnd()
            .equals(other.getBMatchEnd());
      }
      result = result && (hasBMatchResult() == other.hasBMatchResult());
      if (hasBMatchResult()) {
        result = result && getBMatchResult()
            .equals(other.getBMatchResult());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METHODID_FIELD_NUMBER;
      hash = (53 * hash) + getMethodId();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + result_;
      hash = (37 * hash) + ERRSTR_FIELD_NUMBER;
      hash = (53 * hash) + getErrStr().hashCode();
      if (hasServerLogin()) {
        hash = (37 * hash) + SERVERLOGIN_FIELD_NUMBER;
        hash = (53 * hash) + getServerLogin().hashCode();
      }
      if (hasServerPlayerInfo()) {
        hash = (37 * hash) + SERVERPLAYERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerPlayerInfo().hashCode();
      }
      if (hasServerSendHallHeartBeat()) {
        hash = (37 * hash) + SERVERSENDHALLHEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getServerSendHallHeartBeat().hashCode();
      }
      if (hasServerSendGameHeartBeat()) {
        hash = (37 * hash) + SERVERSENDGAMEHEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getServerSendGameHeartBeat().hashCode();
      }
      if (hasServerGetUserInfo()) {
        hash = (37 * hash) + SERVERGETUSERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetUserInfo().hashCode();
      }
      if (hasServerQuickJoin()) {
        hash = (37 * hash) + SERVERQUICKJOIN_FIELD_NUMBER;
        hash = (53 * hash) + getServerQuickJoin().hashCode();
      }
      if (hasServerEnterRoom()) {
        hash = (37 * hash) + SERVERENTERROOM_FIELD_NUMBER;
        hash = (53 * hash) + getServerEnterRoom().hashCode();
      }
      if (hasServerRecoverGame()) {
        hash = (37 * hash) + SERVERRECOVERGAME_FIELD_NUMBER;
        hash = (53 * hash) + getServerRecoverGame().hashCode();
      }
      if (hasServerDoCatch()) {
        hash = (37 * hash) + SERVERDOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getServerDoCatch().hashCode();
      }
      if (hasServerPlayCards()) {
        hash = (37 * hash) + SERVERPLAYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getServerPlayCards().hashCode();
      }
      if (hasServerAutoPlay()) {
        hash = (37 * hash) + SERVERAUTOPLAY_FIELD_NUMBER;
        hash = (53 * hash) + getServerAutoPlay().hashCode();
      }
      if (hasServerLeaveRoom()) {
        hash = (37 * hash) + SERVERLEAVEROOM_FIELD_NUMBER;
        hash = (53 * hash) + getServerLeaveRoom().hashCode();
      }
      if (hasServerCancleJoin()) {
        hash = (37 * hash) + SERVERCANCLEJOIN_FIELD_NUMBER;
        hash = (53 * hash) + getServerCancleJoin().hashCode();
      }
      if (hasServerQueryIndex()) {
        hash = (37 * hash) + SERVERQUERYINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryIndex().hashCode();
      }
      if (hasServerRetryReturnGame()) {
        hash = (37 * hash) + SERVERRETRYRETURNGAME_FIELD_NUMBER;
        hash = (53 * hash) + getServerRetryReturnGame().hashCode();
      }
      if (hasServerGetRankList()) {
        hash = (37 * hash) + SERVERGETRANKLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetRankList().hashCode();
      }
      if (hasServerRewardMessage()) {
        hash = (37 * hash) + SERVERREWARDMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerRewardMessage().hashCode();
      }
      if (hasServerGetRoomConfig()) {
        hash = (37 * hash) + SERVERGETROOMCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetRoomConfig().hashCode();
      }
      if (hasServerGetMonthCardDiamond()) {
        hash = (37 * hash) + SERVERGETMONTHCARDDIAMOND_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMonthCardDiamond().hashCode();
      }
      if (hasServerGetLotteryCount()) {
        hash = (37 * hash) + SERVERGETLOTTERYCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetLotteryCount().hashCode();
      }
      if (hasServerGetRoomInfo()) {
        hash = (37 * hash) + SERVERGETROOMINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetRoomInfo().hashCode();
      }
      if (hasServerSendTelCode()) {
        hash = (37 * hash) + SERVERSENDTELCODE_FIELD_NUMBER;
        hash = (53 * hash) + getServerSendTelCode().hashCode();
      }
      if (hasServerVerifyTelCode()) {
        hash = (37 * hash) + SERVERVERIFYTELCODE_FIELD_NUMBER;
        hash = (53 * hash) + getServerVerifyTelCode().hashCode();
      }
      if (hasServerSharePackage()) {
        hash = (37 * hash) + SERVERSHAREPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerSharePackage().hashCode();
      }
      if (hasServerGetAwardList()) {
        hash = (37 * hash) + SERVERGETAWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetAwardList().hashCode();
      }
      if (hasServerCheckConnect()) {
        hash = (37 * hash) + SERVERCHECKCONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getServerCheckConnect().hashCode();
      }
      if (hasServerGetPFList()) {
        hash = (37 * hash) + SERVERGETPFLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetPFList().hashCode();
      }
      if (hasServerChoosePF()) {
        hash = (37 * hash) + SERVERCHOOSEPF_FIELD_NUMBER;
        hash = (53 * hash) + getServerChoosePF().hashCode();
      }
      if (hasServerGetHistoryRank()) {
        hash = (37 * hash) + SERVERGETHISTORYRANK_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetHistoryRank().hashCode();
      }
      if (hasServerH5Reward()) {
        hash = (37 * hash) + SERVERH5REWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerH5Reward().hashCode();
      }
      if (hasServerNewDrawWinCup()) {
        hash = (37 * hash) + SERVERNEWDRAWWINCUP_FIELD_NUMBER;
        hash = (53 * hash) + getServerNewDrawWinCup().hashCode();
      }
      if (hasServerGetNewHallInfo()) {
        hash = (37 * hash) + SERVERGETNEWHALLINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetNewHallInfo().hashCode();
      }
      if (hasServerLuckWall()) {
        hash = (37 * hash) + SERVERLUCKWALL_FIELD_NUMBER;
        hash = (53 * hash) + getServerLuckWall().hashCode();
      }
      if (hasServerCdkeyAward()) {
        hash = (37 * hash) + SERVERCDKEYAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerCdkeyAward().hashCode();
      }
      if (hasServerGetStoreInfo()) {
        hash = (37 * hash) + SERVERGETSTOREINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetStoreInfo().hashCode();
      }
      if (hasServerConvertGoods()) {
        hash = (37 * hash) + SERVERCONVERTGOODS_FIELD_NUMBER;
        hash = (53 * hash) + getServerConvertGoods().hashCode();
      }
      if (hasServerWXPayResult()) {
        hash = (37 * hash) + SERVERWXPAYRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getServerWXPayResult().hashCode();
      }
      if (hasServerBuyOrderGoods()) {
        hash = (37 * hash) + SERVERBUYORDERGOODS_FIELD_NUMBER;
        hash = (53 * hash) + getServerBuyOrderGoods().hashCode();
      }
      if (hasServerGetFirstCharge()) {
        hash = (37 * hash) + SERVERGETFIRSTCHARGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetFirstCharge().hashCode();
      }
      if (hasServerGetDailyGift()) {
        hash = (37 * hash) + SERVERGETDAILYGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetDailyGift().hashCode();
      }
      if (hasServerGetMonthCard()) {
        hash = (37 * hash) + SERVERGETMONTHCARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMonthCard().hashCode();
      }
      if (hasServerGetResurgenceGift()) {
        hash = (37 * hash) + SERVERGETRESURGENCEGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetResurgenceGift().hashCode();
      }
      if (hasServerGetConvertMessage()) {
        hash = (37 * hash) + SERVERGETCONVERTMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetConvertMessage().hashCode();
      }
      if (hasServerNewBuyOrder()) {
        hash = (37 * hash) + SERVERNEWBUYORDER_FIELD_NUMBER;
        hash = (53 * hash) + getServerNewBuyOrder().hashCode();
      }
      if (hasServerNewConvert()) {
        hash = (37 * hash) + SERVERNEWCONVERT_FIELD_NUMBER;
        hash = (53 * hash) + getServerNewConvert().hashCode();
      }
      if (hasServerAlipayAccount()) {
        hash = (37 * hash) + SERVERALIPAYACCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getServerAlipayAccount().hashCode();
      }
      if (hasServerPayOptions()) {
        hash = (37 * hash) + SERVERPAYOPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getServerPayOptions().hashCode();
      }
      if (hasServerIdVerify()) {
        hash = (37 * hash) + SERVERIDVERIFY_FIELD_NUMBER;
        hash = (53 * hash) + getServerIdVerify().hashCode();
      }
      if (hasServerVerifyAward()) {
        hash = (37 * hash) + SERVERVERIFYAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerVerifyAward().hashCode();
      }
      if (hasServerMiniAppPay()) {
        hash = (37 * hash) + SERVERMINIAPPPAY_FIELD_NUMBER;
        hash = (53 * hash) + getServerMiniAppPay().hashCode();
      }
      if (hasServerUnionAccount()) {
        hash = (37 * hash) + SERVERUNIONACCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getServerUnionAccount().hashCode();
      }
      if (hasServerGetAnnounce()) {
        hash = (37 * hash) + SERVERGETANNOUNCE_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetAnnounce().hashCode();
      }
      if (hasServerGetMail()) {
        hash = (37 * hash) + SERVERGETMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMail().hashCode();
      }
      if (hasServerGetMailReward()) {
        hash = (37 * hash) + SERVERGETMAILREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMailReward().hashCode();
      }
      if (hasServerDelMail()) {
        hash = (37 * hash) + SERVERDELMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerDelMail().hashCode();
      }
      if (hasServerReadMail()) {
        hash = (37 * hash) + SERVERREADMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerReadMail().hashCode();
      }
      if (hasServerDel2R()) {
        hash = (37 * hash) + SERVERDEL2R_FIELD_NUMBER;
        hash = (53 * hash) + getServerDel2R().hashCode();
      }
      if (hasServerQueryDailyTask()) {
        hash = (37 * hash) + SERVERQUERYDAILYTASK_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryDailyTask().hashCode();
      }
      if (hasServerGetNoviceReward()) {
        hash = (37 * hash) + SERVERGETNOVICEREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetNoviceReward().hashCode();
      }
      if (hasServerQueryNoviceTask()) {
        hash = (37 * hash) + SERVERQUERYNOVICETASK_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryNoviceTask().hashCode();
      }
      if (hasServerGetDTAward()) {
        hash = (37 * hash) + SERVERGETDTAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetDTAward().hashCode();
      }
      if (hasServerGetReceiveAddr()) {
        hash = (37 * hash) + SERVERGETRECEIVEADDR_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetReceiveAddr().hashCode();
      }
      if (hasServerAlterReceiveAddr()) {
        hash = (37 * hash) + SERVERALTERRECEIVEADDR_FIELD_NUMBER;
        hash = (53 * hash) + getServerAlterReceiveAddr().hashCode();
      }
      if (hasServerSnatchList()) {
        hash = (37 * hash) + SERVERSNATCHLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchList().hashCode();
      }
      if (hasServerSnatchItemDetail()) {
        hash = (37 * hash) + SERVERSNATCHITEMDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchItemDetail().hashCode();
      }
      if (hasServerSnatchBet()) {
        hash = (37 * hash) + SERVERSNATCHBET_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchBet().hashCode();
      }
      if (hasServerSnatchAwardList()) {
        hash = (37 * hash) + SERVERSNATCHAWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchAwardList().hashCode();
      }
      if (hasServerOwnSnatchRecord()) {
        hash = (37 * hash) + SERVEROWNSNATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getServerOwnSnatchRecord().hashCode();
      }
      if (hasServerSnatchItemHistory()) {
        hash = (37 * hash) + SERVERSNATCHITEMHISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchItemHistory().hashCode();
      }
      if (hasServerSnatchHistoryDetail()) {
        hash = (37 * hash) + SERVERSNATCHHISTORYDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchHistoryDetail().hashCode();
      }
      if (hasServerSnatchGetAward()) {
        hash = (37 * hash) + SERVERSNATCHGETAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchGetAward().hashCode();
      }
      if (hasServerEnterDG()) {
        hash = (37 * hash) + SERVERENTERDG_FIELD_NUMBER;
        hash = (53 * hash) + getServerEnterDG().hashCode();
      }
      if (hasServerDGLottery()) {
        hash = (37 * hash) + SERVERDGLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getServerDGLottery().hashCode();
      }
      if (hasServerResetLottery()) {
        hash = (37 * hash) + SERVERRESETLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getServerResetLottery().hashCode();
      }
      if (hasServerExitDG()) {
        hash = (37 * hash) + SERVEREXITDG_FIELD_NUMBER;
        hash = (53 * hash) + getServerExitDG().hashCode();
      }
      if (hasServerOpenDG()) {
        hash = (37 * hash) + SERVEROPENDG_FIELD_NUMBER;
        hash = (53 * hash) + getServerOpenDG().hashCode();
      }
      if (hasServerOpenDD()) {
        hash = (37 * hash) + SERVEROPENDD_FIELD_NUMBER;
        hash = (53 * hash) + getServerOpenDD().hashCode();
      }
      if (hasServerDDLottery()) {
        hash = (37 * hash) + SERVERDDLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getServerDDLottery().hashCode();
      }
      if (hasServerExitDD()) {
        hash = (37 * hash) + SERVEREXITDD_FIELD_NUMBER;
        hash = (53 * hash) + getServerExitDD().hashCode();
      }
      if (hasServerQueryProp()) {
        hash = (37 * hash) + SERVERQUERYPROP_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryProp().hashCode();
      }
      if (hasServerUseProp()) {
        hash = (37 * hash) + SERVERUSEPROP_FIELD_NUMBER;
        hash = (53 * hash) + getServerUseProp().hashCode();
      }
      if (hasServerQueryPropCount()) {
        hash = (37 * hash) + SERVERQUERYPROPCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryPropCount().hashCode();
      }
      if (hasServerSignInfo()) {
        hash = (37 * hash) + SERVERSIGNINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerSignInfo().hashCode();
      }
      if (hasServerSignAward()) {
        hash = (37 * hash) + SERVERSIGNAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerSignAward().hashCode();
      }
      if (hasServerSignState()) {
        hash = (37 * hash) + SERVERSIGNSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getServerSignState().hashCode();
      }
      if (hasServerLTLottery()) {
        hash = (37 * hash) + SERVERLTLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getServerLTLottery().hashCode();
      }
      if (hasServerGetTSReward()) {
        hash = (37 * hash) + SERVERGETTSREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetTSReward().hashCode();
      }
      if (hasServerGetLuckInfo()) {
        hash = (37 * hash) + SERVERGETLUCKINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetLuckInfo().hashCode();
      }
      if (hasServerGetVip()) {
        hash = (37 * hash) + SERVERGETVIP_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetVip().hashCode();
      }
      if (hasServerGetDayGift()) {
        hash = (37 * hash) + SERVERGETDAYGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetDayGift().hashCode();
      }
      if (hasServerEnterSleeve()) {
        hash = (37 * hash) + SERVERENTERSLEEVE_FIELD_NUMBER;
        hash = (53 * hash) + getServerEnterSleeve().hashCode();
      }
      if (hasServerSleeveSheep()) {
        hash = (37 * hash) + SERVERSLEEVESHEEP_FIELD_NUMBER;
        hash = (53 * hash) + getServerSleeveSheep().hashCode();
      }
      if (hasServerQueryPlayerCoin()) {
        hash = (37 * hash) + SERVERQUERYPLAYERCOIN_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryPlayerCoin().hashCode();
      }
      if (hasServerExitSleeve()) {
        hash = (37 * hash) + SERVEREXITSLEEVE_FIELD_NUMBER;
        hash = (53 * hash) + getServerExitSleeve().hashCode();
      }
      if (hasServerEnterNewSleeve()) {
        hash = (37 * hash) + SERVERENTERNEWSLEEVE_FIELD_NUMBER;
        hash = (53 * hash) + getServerEnterNewSleeve().hashCode();
      }
      if (hasServerNewSleeveSheep()) {
        hash = (37 * hash) + SERVERNEWSLEEVESHEEP_FIELD_NUMBER;
        hash = (53 * hash) + getServerNewSleeveSheep().hashCode();
      }
      if (hasServerNewSleeveResult()) {
        hash = (37 * hash) + SERVERNEWSLEEVERESULT_FIELD_NUMBER;
        hash = (53 * hash) + getServerNewSleeveResult().hashCode();
      }
      if (hasServerExitNewSleeve()) {
        hash = (37 * hash) + SERVEREXITNEWSLEEVE_FIELD_NUMBER;
        hash = (53 * hash) + getServerExitNewSleeve().hashCode();
      }
      if (hasServer2DoCatch()) {
        hash = (37 * hash) + SERVER_2_DOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getServer2DoCatch().hashCode();
      }
      if (hasServer2PlayCards()) {
        hash = (37 * hash) + SERVER_2_PLAYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getServer2PlayCards().hashCode();
      }
      if (hasServer2RecoverGame()) {
        hash = (37 * hash) + SERVER_2_RECOVERGAME_FIELD_NUMBER;
        hash = (53 * hash) + getServer2RecoverGame().hashCode();
      }
      if (hasServer2LeaveRoom()) {
        hash = (37 * hash) + SERVER_2_LEAVEROOM_FIELD_NUMBER;
        hash = (53 * hash) + getServer2LeaveRoom().hashCode();
      }
      if (hasServerMineShare()) {
        hash = (37 * hash) + SERVERMINESHARE_FIELD_NUMBER;
        hash = (53 * hash) + getServerMineShare().hashCode();
      }
      if (hasServerGetMSAward()) {
        hash = (37 * hash) + SERVERGETMSAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMSAward().hashCode();
      }
      if (hasServerFriendShare()) {
        hash = (37 * hash) + SERVERFRIENDSHARE_FIELD_NUMBER;
        hash = (53 * hash) + getServerFriendShare().hashCode();
      }
      if (hasServerGetFSAward()) {
        hash = (37 * hash) + SERVERGETFSAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetFSAward().hashCode();
      }
      if (hasServerGetShareTask()) {
        hash = (37 * hash) + SERVERGETSHARETASK_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetShareTask().hashCode();
      }
      if (hasServerGetShareTaskAward()) {
        hash = (37 * hash) + SERVERGETSHARETASKAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetShareTaskAward().hashCode();
      }
      if (hasServerQueryReviveInfo()) {
        hash = (37 * hash) + SERVERQUERYREVIVEINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryReviveInfo().hashCode();
      }
      if (hasServerUseRevive()) {
        hash = (37 * hash) + SERVERUSEREVIVE_FIELD_NUMBER;
        hash = (53 * hash) + getServerUseRevive().hashCode();
      }
      if (hasServerReviveFirstCharge()) {
        hash = (37 * hash) + SERVERREVIVEFIRSTCHARGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerReviveFirstCharge().hashCode();
      }
      if (hasServerReviveDayGift()) {
        hash = (37 * hash) + SERVERREVIVEDAYGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getServerReviveDayGift().hashCode();
      }
      if (hasServerGetRedTip()) {
        hash = (37 * hash) + SERVERGETREDTIP_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetRedTip().hashCode();
      }
      if (hasServerGetMatchInfo()) {
        hash = (37 * hash) + SERVERGETMATCHINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMatchInfo().hashCode();
      }
      if (hasServerGetMatchDetail()) {
        hash = (37 * hash) + SERVERGETMATCHDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMatchDetail().hashCode();
      }
      if (hasServerGetMatchRecord()) {
        hash = (37 * hash) + SERVERGETMATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMatchRecord().hashCode();
      }
      if (hasServerMatchApply()) {
        hash = (37 * hash) + SERVERMATCHAPPLY_FIELD_NUMBER;
        hash = (53 * hash) + getServerMatchApply().hashCode();
      }
      if (hasServerMatchCancel()) {
        hash = (37 * hash) + SERVERMATCHCANCEL_FIELD_NUMBER;
        hash = (53 * hash) + getServerMatchCancel().hashCode();
      }
      if (hasServerOwnMatchRecord()) {
        hash = (37 * hash) + SERVEROWNMATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getServerOwnMatchRecord().hashCode();
      }
      if (hasServerApplyListChange()) {
        hash = (37 * hash) + SERVERAPPLYLISTCHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerApplyListChange().hashCode();
      }
      if (hasServerMatchScore()) {
        hash = (37 * hash) + SERVERMATCHSCORE_FIELD_NUMBER;
        hash = (53 * hash) + getServerMatchScore().hashCode();
      }
      if (hasServerMatchConfig()) {
        hash = (37 * hash) + SERVERMATCHCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getServerMatchConfig().hashCode();
      }
      if (hasServerGetKillCell()) {
        hash = (37 * hash) + SERVERGETKILLCELL_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetKillCell().hashCode();
      }
      if (hasServerEnterKillCell()) {
        hash = (37 * hash) + SERVERENTERKILLCELL_FIELD_NUMBER;
        hash = (53 * hash) + getServerEnterKillCell().hashCode();
      }
      if (hasServerQuitKillCell()) {
        hash = (37 * hash) + SERVERQUITKILLCELL_FIELD_NUMBER;
        hash = (53 * hash) + getServerQuitKillCell().hashCode();
      }
      if (hasBGameStart()) {
        hash = (37 * hash) + B_GAMESTART_FIELD_NUMBER;
        hash = (53 * hash) + getBGameStart().hashCode();
      }
      if (hasBDoCatch()) {
        hash = (37 * hash) + B_DOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getBDoCatch().hashCode();
      }
      if (hasBCatchResult()) {
        hash = (37 * hash) + B_CATCHRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getBCatchResult().hashCode();
      }
      if (hasBPlayCards()) {
        hash = (37 * hash) + B_PLAYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getBPlayCards().hashCode();
      }
      if (hasBSendDiZhuCard()) {
        hash = (37 * hash) + B_SENDDIZHUCARD_FIELD_NUMBER;
        hash = (53 * hash) + getBSendDiZhuCard().hashCode();
      }
      if (hasBNextPlayer()) {
        hash = (37 * hash) + B_NEXTPLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getBNextPlayer().hashCode();
      }
      if (hasBGameSettle()) {
        hash = (37 * hash) + B_GAMESETTLE_FIELD_NUMBER;
        hash = (53 * hash) + getBGameSettle().hashCode();
      }
      if (hasBRewardMessage()) {
        hash = (37 * hash) + B_REWARDMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getBRewardMessage().hashCode();
      }
      if (hasBAutoPlay()) {
        hash = (37 * hash) + B_AUTOPLAY_FIELD_NUMBER;
        hash = (53 * hash) + getBAutoPlay().hashCode();
      }
      if (hasBRoomIdUrl()) {
        hash = (37 * hash) + B_ROOMIDURL_FIELD_NUMBER;
        hash = (53 * hash) + getBRoomIdUrl().hashCode();
      }
      if (hasBAwardDialog()) {
        hash = (37 * hash) + B_AWARDDIALOG_FIELD_NUMBER;
        hash = (53 * hash) + getBAwardDialog().hashCode();
      }
      if (hasBBuySuccess()) {
        hash = (37 * hash) + B_BUYSUCCESS_FIELD_NUMBER;
        hash = (53 * hash) + getBBuySuccess().hashCode();
      }
      if (hasBRedDotPush()) {
        hash = (37 * hash) + B_REDDOTPUSH_FIELD_NUMBER;
        hash = (53 * hash) + getBRedDotPush().hashCode();
      }
      if (hasBForceAnnounce()) {
        hash = (37 * hash) + B_FORCEANNOUNCE_FIELD_NUMBER;
        hash = (53 * hash) + getBForceAnnounce().hashCode();
      }
      if (hasBDGameMessage()) {
        hash = (37 * hash) + B_DGAMEMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getBDGameMessage().hashCode();
      }
      if (hasBDGOver()) {
        hash = (37 * hash) + B_DGOVER_FIELD_NUMBER;
        hash = (53 * hash) + getBDGOver().hashCode();
      }
      if (hasBDDOver()) {
        hash = (37 * hash) + B_DDOVER_FIELD_NUMBER;
        hash = (53 * hash) + getBDDOver().hashCode();
      }
      if (hasBDDInfo()) {
        hash = (37 * hash) + B_DDINFO_FIELD_NUMBER;
        hash = (53 * hash) + getBDDInfo().hashCode();
      }
      if (hasBSSInfo()) {
        hash = (37 * hash) + B_SSINFO_FIELD_NUMBER;
        hash = (53 * hash) + getBSSInfo().hashCode();
      }
      if (hasBNewSleeveSheepInfo()) {
        hash = (37 * hash) + B_NEWSLEEVESHEEPINFO_FIELD_NUMBER;
        hash = (53 * hash) + getBNewSleeveSheepInfo().hashCode();
      }
      if (hasBNewSleeverOver()) {
        hash = (37 * hash) + B_NEWSLEEVEROVER_FIELD_NUMBER;
        hash = (53 * hash) + getBNewSleeverOver().hashCode();
      }
      if (hasBDiamondReviveInfo()) {
        hash = (37 * hash) + B_DIAMONDREVIVEINFO_FIELD_NUMBER;
        hash = (53 * hash) + getBDiamondReviveInfo().hashCode();
      }
      if (hasB2AutoPlay()) {
        hash = (37 * hash) + B_2_AUTOPLAY_FIELD_NUMBER;
        hash = (53 * hash) + getB2AutoPlay().hashCode();
      }
      if (hasB2GameStart()) {
        hash = (37 * hash) + B_2_GAMESTART_FIELD_NUMBER;
        hash = (53 * hash) + getB2GameStart().hashCode();
      }
      if (hasB2DoCatch()) {
        hash = (37 * hash) + B_2_DOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getB2DoCatch().hashCode();
      }
      if (hasB2CatchResult()) {
        hash = (37 * hash) + B_2_CATCHRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getB2CatchResult().hashCode();
      }
      if (hasB2SendDiZhuCard()) {
        hash = (37 * hash) + B_2_SENDDIZHUCARD_FIELD_NUMBER;
        hash = (53 * hash) + getB2SendDiZhuCard().hashCode();
      }
      if (hasB2GameSettle()) {
        hash = (37 * hash) + B_2_GAMESETTLE_FIELD_NUMBER;
        hash = (53 * hash) + getB2GameSettle().hashCode();
      }
      if (hasBMatchStart()) {
        hash = (37 * hash) + B_MATCHSTART_FIELD_NUMBER;
        hash = (53 * hash) + getBMatchStart().hashCode();
      }
      if (hasBMatchEnd()) {
        hash = (37 * hash) + B_MATCHEND_FIELD_NUMBER;
        hash = (53 * hash) + getBMatchEnd().hashCode();
      }
      if (hasBMatchResult()) {
        hash = (37 * hash) + B_MATCHRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getBMatchResult().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.kys.util.netty.proto.ProtoMsg.ServerResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 所有下行请求都是serverResponse，服务器会传递具体内容的标示methodId，客户端根据methodId进行处理 
     * </pre>
     *
     * Protobuf type {@code com.kys.util.netty.proto.ServerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.kys.util.netty.proto.ServerResponse)
        com.kys.util.netty.proto.ProtoMsg.ServerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kys.util.netty.proto.ProtoMsg.ServerResponse.class, com.kys.util.netty.proto.ProtoMsg.ServerResponse.Builder.class);
      }

      // Construct using com.kys.util.netty.proto.ProtoMsg.ServerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        methodId_ = 0;

        result_ = 0;

        errStr_ = "";

        if (serverLoginBuilder_ == null) {
          serverLogin_ = null;
        } else {
          serverLogin_ = null;
          serverLoginBuilder_ = null;
        }
        if (serverPlayerInfoBuilder_ == null) {
          serverPlayerInfo_ = null;
        } else {
          serverPlayerInfo_ = null;
          serverPlayerInfoBuilder_ = null;
        }
        if (serverSendHallHeartBeatBuilder_ == null) {
          serverSendHallHeartBeat_ = null;
        } else {
          serverSendHallHeartBeat_ = null;
          serverSendHallHeartBeatBuilder_ = null;
        }
        if (serverSendGameHeartBeatBuilder_ == null) {
          serverSendGameHeartBeat_ = null;
        } else {
          serverSendGameHeartBeat_ = null;
          serverSendGameHeartBeatBuilder_ = null;
        }
        if (serverGetUserInfoBuilder_ == null) {
          serverGetUserInfo_ = null;
        } else {
          serverGetUserInfo_ = null;
          serverGetUserInfoBuilder_ = null;
        }
        if (serverQuickJoinBuilder_ == null) {
          serverQuickJoin_ = null;
        } else {
          serverQuickJoin_ = null;
          serverQuickJoinBuilder_ = null;
        }
        if (serverEnterRoomBuilder_ == null) {
          serverEnterRoom_ = null;
        } else {
          serverEnterRoom_ = null;
          serverEnterRoomBuilder_ = null;
        }
        if (serverRecoverGameBuilder_ == null) {
          serverRecoverGame_ = null;
        } else {
          serverRecoverGame_ = null;
          serverRecoverGameBuilder_ = null;
        }
        if (serverDoCatchBuilder_ == null) {
          serverDoCatch_ = null;
        } else {
          serverDoCatch_ = null;
          serverDoCatchBuilder_ = null;
        }
        if (serverPlayCardsBuilder_ == null) {
          serverPlayCards_ = null;
        } else {
          serverPlayCards_ = null;
          serverPlayCardsBuilder_ = null;
        }
        if (serverAutoPlayBuilder_ == null) {
          serverAutoPlay_ = null;
        } else {
          serverAutoPlay_ = null;
          serverAutoPlayBuilder_ = null;
        }
        if (serverLeaveRoomBuilder_ == null) {
          serverLeaveRoom_ = null;
        } else {
          serverLeaveRoom_ = null;
          serverLeaveRoomBuilder_ = null;
        }
        if (serverCancleJoinBuilder_ == null) {
          serverCancleJoin_ = null;
        } else {
          serverCancleJoin_ = null;
          serverCancleJoinBuilder_ = null;
        }
        if (serverQueryIndexBuilder_ == null) {
          serverQueryIndex_ = null;
        } else {
          serverQueryIndex_ = null;
          serverQueryIndexBuilder_ = null;
        }
        if (serverRetryReturnGameBuilder_ == null) {
          serverRetryReturnGame_ = null;
        } else {
          serverRetryReturnGame_ = null;
          serverRetryReturnGameBuilder_ = null;
        }
        if (serverGetRankListBuilder_ == null) {
          serverGetRankList_ = null;
        } else {
          serverGetRankList_ = null;
          serverGetRankListBuilder_ = null;
        }
        if (serverRewardMessageBuilder_ == null) {
          serverRewardMessage_ = null;
        } else {
          serverRewardMessage_ = null;
          serverRewardMessageBuilder_ = null;
        }
        if (serverGetRoomConfigBuilder_ == null) {
          serverGetRoomConfig_ = null;
        } else {
          serverGetRoomConfig_ = null;
          serverGetRoomConfigBuilder_ = null;
        }
        if (serverGetMonthCardDiamondBuilder_ == null) {
          serverGetMonthCardDiamond_ = null;
        } else {
          serverGetMonthCardDiamond_ = null;
          serverGetMonthCardDiamondBuilder_ = null;
        }
        if (serverGetLotteryCountBuilder_ == null) {
          serverGetLotteryCount_ = null;
        } else {
          serverGetLotteryCount_ = null;
          serverGetLotteryCountBuilder_ = null;
        }
        if (serverGetRoomInfoBuilder_ == null) {
          serverGetRoomInfo_ = null;
        } else {
          serverGetRoomInfo_ = null;
          serverGetRoomInfoBuilder_ = null;
        }
        if (serverSendTelCodeBuilder_ == null) {
          serverSendTelCode_ = null;
        } else {
          serverSendTelCode_ = null;
          serverSendTelCodeBuilder_ = null;
        }
        if (serverVerifyTelCodeBuilder_ == null) {
          serverVerifyTelCode_ = null;
        } else {
          serverVerifyTelCode_ = null;
          serverVerifyTelCodeBuilder_ = null;
        }
        if (serverSharePackageBuilder_ == null) {
          serverSharePackage_ = null;
        } else {
          serverSharePackage_ = null;
          serverSharePackageBuilder_ = null;
        }
        if (serverGetAwardListBuilder_ == null) {
          serverGetAwardList_ = null;
        } else {
          serverGetAwardList_ = null;
          serverGetAwardListBuilder_ = null;
        }
        if (serverCheckConnectBuilder_ == null) {
          serverCheckConnect_ = null;
        } else {
          serverCheckConnect_ = null;
          serverCheckConnectBuilder_ = null;
        }
        if (serverGetPFListBuilder_ == null) {
          serverGetPFList_ = null;
        } else {
          serverGetPFList_ = null;
          serverGetPFListBuilder_ = null;
        }
        if (serverChoosePFBuilder_ == null) {
          serverChoosePF_ = null;
        } else {
          serverChoosePF_ = null;
          serverChoosePFBuilder_ = null;
        }
        if (serverGetHistoryRankBuilder_ == null) {
          serverGetHistoryRank_ = null;
        } else {
          serverGetHistoryRank_ = null;
          serverGetHistoryRankBuilder_ = null;
        }
        if (serverH5RewardBuilder_ == null) {
          serverH5Reward_ = null;
        } else {
          serverH5Reward_ = null;
          serverH5RewardBuilder_ = null;
        }
        if (serverNewDrawWinCupBuilder_ == null) {
          serverNewDrawWinCup_ = null;
        } else {
          serverNewDrawWinCup_ = null;
          serverNewDrawWinCupBuilder_ = null;
        }
        if (serverGetNewHallInfoBuilder_ == null) {
          serverGetNewHallInfo_ = null;
        } else {
          serverGetNewHallInfo_ = null;
          serverGetNewHallInfoBuilder_ = null;
        }
        if (serverLuckWallBuilder_ == null) {
          serverLuckWall_ = null;
        } else {
          serverLuckWall_ = null;
          serverLuckWallBuilder_ = null;
        }
        if (serverCdkeyAwardBuilder_ == null) {
          serverCdkeyAward_ = null;
        } else {
          serverCdkeyAward_ = null;
          serverCdkeyAwardBuilder_ = null;
        }
        if (serverGetStoreInfoBuilder_ == null) {
          serverGetStoreInfo_ = null;
        } else {
          serverGetStoreInfo_ = null;
          serverGetStoreInfoBuilder_ = null;
        }
        if (serverConvertGoodsBuilder_ == null) {
          serverConvertGoods_ = null;
        } else {
          serverConvertGoods_ = null;
          serverConvertGoodsBuilder_ = null;
        }
        if (serverWXPayResultBuilder_ == null) {
          serverWXPayResult_ = null;
        } else {
          serverWXPayResult_ = null;
          serverWXPayResultBuilder_ = null;
        }
        if (serverBuyOrderGoodsBuilder_ == null) {
          serverBuyOrderGoods_ = null;
        } else {
          serverBuyOrderGoods_ = null;
          serverBuyOrderGoodsBuilder_ = null;
        }
        if (serverGetFirstChargeBuilder_ == null) {
          serverGetFirstCharge_ = null;
        } else {
          serverGetFirstCharge_ = null;
          serverGetFirstChargeBuilder_ = null;
        }
        if (serverGetDailyGiftBuilder_ == null) {
          serverGetDailyGift_ = null;
        } else {
          serverGetDailyGift_ = null;
          serverGetDailyGiftBuilder_ = null;
        }
        if (serverGetMonthCardBuilder_ == null) {
          serverGetMonthCard_ = null;
        } else {
          serverGetMonthCard_ = null;
          serverGetMonthCardBuilder_ = null;
        }
        if (serverGetResurgenceGiftBuilder_ == null) {
          serverGetResurgenceGift_ = null;
        } else {
          serverGetResurgenceGift_ = null;
          serverGetResurgenceGiftBuilder_ = null;
        }
        if (serverGetConvertMessageBuilder_ == null) {
          serverGetConvertMessage_ = null;
        } else {
          serverGetConvertMessage_ = null;
          serverGetConvertMessageBuilder_ = null;
        }
        if (serverNewBuyOrderBuilder_ == null) {
          serverNewBuyOrder_ = null;
        } else {
          serverNewBuyOrder_ = null;
          serverNewBuyOrderBuilder_ = null;
        }
        if (serverNewConvertBuilder_ == null) {
          serverNewConvert_ = null;
        } else {
          serverNewConvert_ = null;
          serverNewConvertBuilder_ = null;
        }
        if (serverAlipayAccountBuilder_ == null) {
          serverAlipayAccount_ = null;
        } else {
          serverAlipayAccount_ = null;
          serverAlipayAccountBuilder_ = null;
        }
        if (serverPayOptionsBuilder_ == null) {
          serverPayOptions_ = null;
        } else {
          serverPayOptions_ = null;
          serverPayOptionsBuilder_ = null;
        }
        if (serverIdVerifyBuilder_ == null) {
          serverIdVerify_ = null;
        } else {
          serverIdVerify_ = null;
          serverIdVerifyBuilder_ = null;
        }
        if (serverVerifyAwardBuilder_ == null) {
          serverVerifyAward_ = null;
        } else {
          serverVerifyAward_ = null;
          serverVerifyAwardBuilder_ = null;
        }
        if (serverMiniAppPayBuilder_ == null) {
          serverMiniAppPay_ = null;
        } else {
          serverMiniAppPay_ = null;
          serverMiniAppPayBuilder_ = null;
        }
        if (serverUnionAccountBuilder_ == null) {
          serverUnionAccount_ = null;
        } else {
          serverUnionAccount_ = null;
          serverUnionAccountBuilder_ = null;
        }
        if (serverGetAnnounceBuilder_ == null) {
          serverGetAnnounce_ = null;
        } else {
          serverGetAnnounce_ = null;
          serverGetAnnounceBuilder_ = null;
        }
        if (serverGetMailBuilder_ == null) {
          serverGetMail_ = null;
        } else {
          serverGetMail_ = null;
          serverGetMailBuilder_ = null;
        }
        if (serverGetMailRewardBuilder_ == null) {
          serverGetMailReward_ = null;
        } else {
          serverGetMailReward_ = null;
          serverGetMailRewardBuilder_ = null;
        }
        if (serverDelMailBuilder_ == null) {
          serverDelMail_ = null;
        } else {
          serverDelMail_ = null;
          serverDelMailBuilder_ = null;
        }
        if (serverReadMailBuilder_ == null) {
          serverReadMail_ = null;
        } else {
          serverReadMail_ = null;
          serverReadMailBuilder_ = null;
        }
        if (serverDel2RBuilder_ == null) {
          serverDel2R_ = null;
        } else {
          serverDel2R_ = null;
          serverDel2RBuilder_ = null;
        }
        if (serverQueryDailyTaskBuilder_ == null) {
          serverQueryDailyTask_ = null;
        } else {
          serverQueryDailyTask_ = null;
          serverQueryDailyTaskBuilder_ = null;
        }
        if (serverGetNoviceRewardBuilder_ == null) {
          serverGetNoviceReward_ = null;
        } else {
          serverGetNoviceReward_ = null;
          serverGetNoviceRewardBuilder_ = null;
        }
        if (serverQueryNoviceTaskBuilder_ == null) {
          serverQueryNoviceTask_ = null;
        } else {
          serverQueryNoviceTask_ = null;
          serverQueryNoviceTaskBuilder_ = null;
        }
        if (serverGetDTAwardBuilder_ == null) {
          serverGetDTAward_ = null;
        } else {
          serverGetDTAward_ = null;
          serverGetDTAwardBuilder_ = null;
        }
        if (serverGetReceiveAddrBuilder_ == null) {
          serverGetReceiveAddr_ = null;
        } else {
          serverGetReceiveAddr_ = null;
          serverGetReceiveAddrBuilder_ = null;
        }
        if (serverAlterReceiveAddrBuilder_ == null) {
          serverAlterReceiveAddr_ = null;
        } else {
          serverAlterReceiveAddr_ = null;
          serverAlterReceiveAddrBuilder_ = null;
        }
        if (serverSnatchListBuilder_ == null) {
          serverSnatchList_ = null;
        } else {
          serverSnatchList_ = null;
          serverSnatchListBuilder_ = null;
        }
        if (serverSnatchItemDetailBuilder_ == null) {
          serverSnatchItemDetail_ = null;
        } else {
          serverSnatchItemDetail_ = null;
          serverSnatchItemDetailBuilder_ = null;
        }
        if (serverSnatchBetBuilder_ == null) {
          serverSnatchBet_ = null;
        } else {
          serverSnatchBet_ = null;
          serverSnatchBetBuilder_ = null;
        }
        if (serverSnatchAwardListBuilder_ == null) {
          serverSnatchAwardList_ = null;
        } else {
          serverSnatchAwardList_ = null;
          serverSnatchAwardListBuilder_ = null;
        }
        if (serverOwnSnatchRecordBuilder_ == null) {
          serverOwnSnatchRecord_ = null;
        } else {
          serverOwnSnatchRecord_ = null;
          serverOwnSnatchRecordBuilder_ = null;
        }
        if (serverSnatchItemHistoryBuilder_ == null) {
          serverSnatchItemHistory_ = null;
        } else {
          serverSnatchItemHistory_ = null;
          serverSnatchItemHistoryBuilder_ = null;
        }
        if (serverSnatchHistoryDetailBuilder_ == null) {
          serverSnatchHistoryDetail_ = null;
        } else {
          serverSnatchHistoryDetail_ = null;
          serverSnatchHistoryDetailBuilder_ = null;
        }
        if (serverSnatchGetAwardBuilder_ == null) {
          serverSnatchGetAward_ = null;
        } else {
          serverSnatchGetAward_ = null;
          serverSnatchGetAwardBuilder_ = null;
        }
        if (serverEnterDGBuilder_ == null) {
          serverEnterDG_ = null;
        } else {
          serverEnterDG_ = null;
          serverEnterDGBuilder_ = null;
        }
        if (serverDGLotteryBuilder_ == null) {
          serverDGLottery_ = null;
        } else {
          serverDGLottery_ = null;
          serverDGLotteryBuilder_ = null;
        }
        if (serverResetLotteryBuilder_ == null) {
          serverResetLottery_ = null;
        } else {
          serverResetLottery_ = null;
          serverResetLotteryBuilder_ = null;
        }
        if (serverExitDGBuilder_ == null) {
          serverExitDG_ = null;
        } else {
          serverExitDG_ = null;
          serverExitDGBuilder_ = null;
        }
        if (serverOpenDGBuilder_ == null) {
          serverOpenDG_ = null;
        } else {
          serverOpenDG_ = null;
          serverOpenDGBuilder_ = null;
        }
        if (serverOpenDDBuilder_ == null) {
          serverOpenDD_ = null;
        } else {
          serverOpenDD_ = null;
          serverOpenDDBuilder_ = null;
        }
        if (serverDDLotteryBuilder_ == null) {
          serverDDLottery_ = null;
        } else {
          serverDDLottery_ = null;
          serverDDLotteryBuilder_ = null;
        }
        if (serverExitDDBuilder_ == null) {
          serverExitDD_ = null;
        } else {
          serverExitDD_ = null;
          serverExitDDBuilder_ = null;
        }
        if (serverQueryPropBuilder_ == null) {
          serverQueryProp_ = null;
        } else {
          serverQueryProp_ = null;
          serverQueryPropBuilder_ = null;
        }
        if (serverUsePropBuilder_ == null) {
          serverUseProp_ = null;
        } else {
          serverUseProp_ = null;
          serverUsePropBuilder_ = null;
        }
        if (serverQueryPropCountBuilder_ == null) {
          serverQueryPropCount_ = null;
        } else {
          serverQueryPropCount_ = null;
          serverQueryPropCountBuilder_ = null;
        }
        if (serverSignInfoBuilder_ == null) {
          serverSignInfo_ = null;
        } else {
          serverSignInfo_ = null;
          serverSignInfoBuilder_ = null;
        }
        if (serverSignAwardBuilder_ == null) {
          serverSignAward_ = null;
        } else {
          serverSignAward_ = null;
          serverSignAwardBuilder_ = null;
        }
        if (serverSignStateBuilder_ == null) {
          serverSignState_ = null;
        } else {
          serverSignState_ = null;
          serverSignStateBuilder_ = null;
        }
        if (serverLTLotteryBuilder_ == null) {
          serverLTLottery_ = null;
        } else {
          serverLTLottery_ = null;
          serverLTLotteryBuilder_ = null;
        }
        if (serverGetTSRewardBuilder_ == null) {
          serverGetTSReward_ = null;
        } else {
          serverGetTSReward_ = null;
          serverGetTSRewardBuilder_ = null;
        }
        if (serverGetLuckInfoBuilder_ == null) {
          serverGetLuckInfo_ = null;
        } else {
          serverGetLuckInfo_ = null;
          serverGetLuckInfoBuilder_ = null;
        }
        if (serverGetVipBuilder_ == null) {
          serverGetVip_ = null;
        } else {
          serverGetVip_ = null;
          serverGetVipBuilder_ = null;
        }
        if (serverGetDayGiftBuilder_ == null) {
          serverGetDayGift_ = null;
        } else {
          serverGetDayGift_ = null;
          serverGetDayGiftBuilder_ = null;
        }
        if (serverEnterSleeveBuilder_ == null) {
          serverEnterSleeve_ = null;
        } else {
          serverEnterSleeve_ = null;
          serverEnterSleeveBuilder_ = null;
        }
        if (serverSleeveSheepBuilder_ == null) {
          serverSleeveSheep_ = null;
        } else {
          serverSleeveSheep_ = null;
          serverSleeveSheepBuilder_ = null;
        }
        if (serverQueryPlayerCoinBuilder_ == null) {
          serverQueryPlayerCoin_ = null;
        } else {
          serverQueryPlayerCoin_ = null;
          serverQueryPlayerCoinBuilder_ = null;
        }
        if (serverExitSleeveBuilder_ == null) {
          serverExitSleeve_ = null;
        } else {
          serverExitSleeve_ = null;
          serverExitSleeveBuilder_ = null;
        }
        if (serverEnterNewSleeveBuilder_ == null) {
          serverEnterNewSleeve_ = null;
        } else {
          serverEnterNewSleeve_ = null;
          serverEnterNewSleeveBuilder_ = null;
        }
        if (serverNewSleeveSheepBuilder_ == null) {
          serverNewSleeveSheep_ = null;
        } else {
          serverNewSleeveSheep_ = null;
          serverNewSleeveSheepBuilder_ = null;
        }
        if (serverNewSleeveResultBuilder_ == null) {
          serverNewSleeveResult_ = null;
        } else {
          serverNewSleeveResult_ = null;
          serverNewSleeveResultBuilder_ = null;
        }
        if (serverExitNewSleeveBuilder_ == null) {
          serverExitNewSleeve_ = null;
        } else {
          serverExitNewSleeve_ = null;
          serverExitNewSleeveBuilder_ = null;
        }
        if (server2DoCatchBuilder_ == null) {
          server2DoCatch_ = null;
        } else {
          server2DoCatch_ = null;
          server2DoCatchBuilder_ = null;
        }
        if (server2PlayCardsBuilder_ == null) {
          server2PlayCards_ = null;
        } else {
          server2PlayCards_ = null;
          server2PlayCardsBuilder_ = null;
        }
        if (server2RecoverGameBuilder_ == null) {
          server2RecoverGame_ = null;
        } else {
          server2RecoverGame_ = null;
          server2RecoverGameBuilder_ = null;
        }
        if (server2LeaveRoomBuilder_ == null) {
          server2LeaveRoom_ = null;
        } else {
          server2LeaveRoom_ = null;
          server2LeaveRoomBuilder_ = null;
        }
        if (serverMineShareBuilder_ == null) {
          serverMineShare_ = null;
        } else {
          serverMineShare_ = null;
          serverMineShareBuilder_ = null;
        }
        if (serverGetMSAwardBuilder_ == null) {
          serverGetMSAward_ = null;
        } else {
          serverGetMSAward_ = null;
          serverGetMSAwardBuilder_ = null;
        }
        if (serverFriendShareBuilder_ == null) {
          serverFriendShare_ = null;
        } else {
          serverFriendShare_ = null;
          serverFriendShareBuilder_ = null;
        }
        if (serverGetFSAwardBuilder_ == null) {
          serverGetFSAward_ = null;
        } else {
          serverGetFSAward_ = null;
          serverGetFSAwardBuilder_ = null;
        }
        if (serverGetShareTaskBuilder_ == null) {
          serverGetShareTask_ = null;
        } else {
          serverGetShareTask_ = null;
          serverGetShareTaskBuilder_ = null;
        }
        if (serverGetShareTaskAwardBuilder_ == null) {
          serverGetShareTaskAward_ = null;
        } else {
          serverGetShareTaskAward_ = null;
          serverGetShareTaskAwardBuilder_ = null;
        }
        if (serverQueryReviveInfoBuilder_ == null) {
          serverQueryReviveInfo_ = null;
        } else {
          serverQueryReviveInfo_ = null;
          serverQueryReviveInfoBuilder_ = null;
        }
        if (serverUseReviveBuilder_ == null) {
          serverUseRevive_ = null;
        } else {
          serverUseRevive_ = null;
          serverUseReviveBuilder_ = null;
        }
        if (serverReviveFirstChargeBuilder_ == null) {
          serverReviveFirstCharge_ = null;
        } else {
          serverReviveFirstCharge_ = null;
          serverReviveFirstChargeBuilder_ = null;
        }
        if (serverReviveDayGiftBuilder_ == null) {
          serverReviveDayGift_ = null;
        } else {
          serverReviveDayGift_ = null;
          serverReviveDayGiftBuilder_ = null;
        }
        if (serverGetRedTipBuilder_ == null) {
          serverGetRedTip_ = null;
        } else {
          serverGetRedTip_ = null;
          serverGetRedTipBuilder_ = null;
        }
        if (serverGetMatchInfoBuilder_ == null) {
          serverGetMatchInfo_ = null;
        } else {
          serverGetMatchInfo_ = null;
          serverGetMatchInfoBuilder_ = null;
        }
        if (serverGetMatchDetailBuilder_ == null) {
          serverGetMatchDetail_ = null;
        } else {
          serverGetMatchDetail_ = null;
          serverGetMatchDetailBuilder_ = null;
        }
        if (serverGetMatchRecordBuilder_ == null) {
          serverGetMatchRecord_ = null;
        } else {
          serverGetMatchRecord_ = null;
          serverGetMatchRecordBuilder_ = null;
        }
        if (serverMatchApplyBuilder_ == null) {
          serverMatchApply_ = null;
        } else {
          serverMatchApply_ = null;
          serverMatchApplyBuilder_ = null;
        }
        if (serverMatchCancelBuilder_ == null) {
          serverMatchCancel_ = null;
        } else {
          serverMatchCancel_ = null;
          serverMatchCancelBuilder_ = null;
        }
        if (serverOwnMatchRecordBuilder_ == null) {
          serverOwnMatchRecord_ = null;
        } else {
          serverOwnMatchRecord_ = null;
          serverOwnMatchRecordBuilder_ = null;
        }
        if (serverApplyListChangeBuilder_ == null) {
          serverApplyListChange_ = null;
        } else {
          serverApplyListChange_ = null;
          serverApplyListChangeBuilder_ = null;
        }
        if (serverMatchScoreBuilder_ == null) {
          serverMatchScore_ = null;
        } else {
          serverMatchScore_ = null;
          serverMatchScoreBuilder_ = null;
        }
        if (serverMatchConfigBuilder_ == null) {
          serverMatchConfig_ = null;
        } else {
          serverMatchConfig_ = null;
          serverMatchConfigBuilder_ = null;
        }
        if (serverGetKillCellBuilder_ == null) {
          serverGetKillCell_ = null;
        } else {
          serverGetKillCell_ = null;
          serverGetKillCellBuilder_ = null;
        }
        if (serverEnterKillCellBuilder_ == null) {
          serverEnterKillCell_ = null;
        } else {
          serverEnterKillCell_ = null;
          serverEnterKillCellBuilder_ = null;
        }
        if (serverQuitKillCellBuilder_ == null) {
          serverQuitKillCell_ = null;
        } else {
          serverQuitKillCell_ = null;
          serverQuitKillCellBuilder_ = null;
        }
        if (bGameStartBuilder_ == null) {
          bGameStart_ = null;
        } else {
          bGameStart_ = null;
          bGameStartBuilder_ = null;
        }
        if (bDoCatchBuilder_ == null) {
          bDoCatch_ = null;
        } else {
          bDoCatch_ = null;
          bDoCatchBuilder_ = null;
        }
        if (bCatchResultBuilder_ == null) {
          bCatchResult_ = null;
        } else {
          bCatchResult_ = null;
          bCatchResultBuilder_ = null;
        }
        if (bPlayCardsBuilder_ == null) {
          bPlayCards_ = null;
        } else {
          bPlayCards_ = null;
          bPlayCardsBuilder_ = null;
        }
        if (bSendDiZhuCardBuilder_ == null) {
          bSendDiZhuCard_ = null;
        } else {
          bSendDiZhuCard_ = null;
          bSendDiZhuCardBuilder_ = null;
        }
        if (bNextPlayerBuilder_ == null) {
          bNextPlayer_ = null;
        } else {
          bNextPlayer_ = null;
          bNextPlayerBuilder_ = null;
        }
        if (bGameSettleBuilder_ == null) {
          bGameSettle_ = null;
        } else {
          bGameSettle_ = null;
          bGameSettleBuilder_ = null;
        }
        if (bRewardMessageBuilder_ == null) {
          bRewardMessage_ = null;
        } else {
          bRewardMessage_ = null;
          bRewardMessageBuilder_ = null;
        }
        if (bAutoPlayBuilder_ == null) {
          bAutoPlay_ = null;
        } else {
          bAutoPlay_ = null;
          bAutoPlayBuilder_ = null;
        }
        if (bRoomIdUrlBuilder_ == null) {
          bRoomIdUrl_ = null;
        } else {
          bRoomIdUrl_ = null;
          bRoomIdUrlBuilder_ = null;
        }
        if (bAwardDialogBuilder_ == null) {
          bAwardDialog_ = null;
        } else {
          bAwardDialog_ = null;
          bAwardDialogBuilder_ = null;
        }
        if (bBuySuccessBuilder_ == null) {
          bBuySuccess_ = null;
        } else {
          bBuySuccess_ = null;
          bBuySuccessBuilder_ = null;
        }
        if (bRedDotPushBuilder_ == null) {
          bRedDotPush_ = null;
        } else {
          bRedDotPush_ = null;
          bRedDotPushBuilder_ = null;
        }
        if (bForceAnnounceBuilder_ == null) {
          bForceAnnounce_ = null;
        } else {
          bForceAnnounce_ = null;
          bForceAnnounceBuilder_ = null;
        }
        if (bDGameMessageBuilder_ == null) {
          bDGameMessage_ = null;
        } else {
          bDGameMessage_ = null;
          bDGameMessageBuilder_ = null;
        }
        if (bDGOverBuilder_ == null) {
          bDGOver_ = null;
        } else {
          bDGOver_ = null;
          bDGOverBuilder_ = null;
        }
        if (bDDOverBuilder_ == null) {
          bDDOver_ = null;
        } else {
          bDDOver_ = null;
          bDDOverBuilder_ = null;
        }
        if (bDDInfoBuilder_ == null) {
          bDDInfo_ = null;
        } else {
          bDDInfo_ = null;
          bDDInfoBuilder_ = null;
        }
        if (bSSInfoBuilder_ == null) {
          bSSInfo_ = null;
        } else {
          bSSInfo_ = null;
          bSSInfoBuilder_ = null;
        }
        if (bNewSleeveSheepInfoBuilder_ == null) {
          bNewSleeveSheepInfo_ = null;
        } else {
          bNewSleeveSheepInfo_ = null;
          bNewSleeveSheepInfoBuilder_ = null;
        }
        if (bNewSleeverOverBuilder_ == null) {
          bNewSleeverOver_ = null;
        } else {
          bNewSleeverOver_ = null;
          bNewSleeverOverBuilder_ = null;
        }
        if (bDiamondReviveInfoBuilder_ == null) {
          bDiamondReviveInfo_ = null;
        } else {
          bDiamondReviveInfo_ = null;
          bDiamondReviveInfoBuilder_ = null;
        }
        if (b2AutoPlayBuilder_ == null) {
          b2AutoPlay_ = null;
        } else {
          b2AutoPlay_ = null;
          b2AutoPlayBuilder_ = null;
        }
        if (b2GameStartBuilder_ == null) {
          b2GameStart_ = null;
        } else {
          b2GameStart_ = null;
          b2GameStartBuilder_ = null;
        }
        if (b2DoCatchBuilder_ == null) {
          b2DoCatch_ = null;
        } else {
          b2DoCatch_ = null;
          b2DoCatchBuilder_ = null;
        }
        if (b2CatchResultBuilder_ == null) {
          b2CatchResult_ = null;
        } else {
          b2CatchResult_ = null;
          b2CatchResultBuilder_ = null;
        }
        if (b2SendDiZhuCardBuilder_ == null) {
          b2SendDiZhuCard_ = null;
        } else {
          b2SendDiZhuCard_ = null;
          b2SendDiZhuCardBuilder_ = null;
        }
        if (b2GameSettleBuilder_ == null) {
          b2GameSettle_ = null;
        } else {
          b2GameSettle_ = null;
          b2GameSettleBuilder_ = null;
        }
        if (bMatchStartBuilder_ == null) {
          bMatchStart_ = null;
        } else {
          bMatchStart_ = null;
          bMatchStartBuilder_ = null;
        }
        if (bMatchEndBuilder_ == null) {
          bMatchEnd_ = null;
        } else {
          bMatchEnd_ = null;
          bMatchEndBuilder_ = null;
        }
        if (bMatchResultBuilder_ == null) {
          bMatchResult_ = null;
        } else {
          bMatchResult_ = null;
          bMatchResultBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_descriptor;
      }

      public com.kys.util.netty.proto.ProtoMsg.ServerResponse getDefaultInstanceForType() {
        return com.kys.util.netty.proto.ProtoMsg.ServerResponse.getDefaultInstance();
      }

      public com.kys.util.netty.proto.ProtoMsg.ServerResponse build() {
        com.kys.util.netty.proto.ProtoMsg.ServerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kys.util.netty.proto.ProtoMsg.ServerResponse buildPartial() {
        com.kys.util.netty.proto.ProtoMsg.ServerResponse result = new com.kys.util.netty.proto.ProtoMsg.ServerResponse(this);
        result.methodId_ = methodId_;
        result.result_ = result_;
        result.errStr_ = errStr_;
        if (serverLoginBuilder_ == null) {
          result.serverLogin_ = serverLogin_;
        } else {
          result.serverLogin_ = serverLoginBuilder_.build();
        }
        if (serverPlayerInfoBuilder_ == null) {
          result.serverPlayerInfo_ = serverPlayerInfo_;
        } else {
          result.serverPlayerInfo_ = serverPlayerInfoBuilder_.build();
        }
        if (serverSendHallHeartBeatBuilder_ == null) {
          result.serverSendHallHeartBeat_ = serverSendHallHeartBeat_;
        } else {
          result.serverSendHallHeartBeat_ = serverSendHallHeartBeatBuilder_.build();
        }
        if (serverSendGameHeartBeatBuilder_ == null) {
          result.serverSendGameHeartBeat_ = serverSendGameHeartBeat_;
        } else {
          result.serverSendGameHeartBeat_ = serverSendGameHeartBeatBuilder_.build();
        }
        if (serverGetUserInfoBuilder_ == null) {
          result.serverGetUserInfo_ = serverGetUserInfo_;
        } else {
          result.serverGetUserInfo_ = serverGetUserInfoBuilder_.build();
        }
        if (serverQuickJoinBuilder_ == null) {
          result.serverQuickJoin_ = serverQuickJoin_;
        } else {
          result.serverQuickJoin_ = serverQuickJoinBuilder_.build();
        }
        if (serverEnterRoomBuilder_ == null) {
          result.serverEnterRoom_ = serverEnterRoom_;
        } else {
          result.serverEnterRoom_ = serverEnterRoomBuilder_.build();
        }
        if (serverRecoverGameBuilder_ == null) {
          result.serverRecoverGame_ = serverRecoverGame_;
        } else {
          result.serverRecoverGame_ = serverRecoverGameBuilder_.build();
        }
        if (serverDoCatchBuilder_ == null) {
          result.serverDoCatch_ = serverDoCatch_;
        } else {
          result.serverDoCatch_ = serverDoCatchBuilder_.build();
        }
        if (serverPlayCardsBuilder_ == null) {
          result.serverPlayCards_ = serverPlayCards_;
        } else {
          result.serverPlayCards_ = serverPlayCardsBuilder_.build();
        }
        if (serverAutoPlayBuilder_ == null) {
          result.serverAutoPlay_ = serverAutoPlay_;
        } else {
          result.serverAutoPlay_ = serverAutoPlayBuilder_.build();
        }
        if (serverLeaveRoomBuilder_ == null) {
          result.serverLeaveRoom_ = serverLeaveRoom_;
        } else {
          result.serverLeaveRoom_ = serverLeaveRoomBuilder_.build();
        }
        if (serverCancleJoinBuilder_ == null) {
          result.serverCancleJoin_ = serverCancleJoin_;
        } else {
          result.serverCancleJoin_ = serverCancleJoinBuilder_.build();
        }
        if (serverQueryIndexBuilder_ == null) {
          result.serverQueryIndex_ = serverQueryIndex_;
        } else {
          result.serverQueryIndex_ = serverQueryIndexBuilder_.build();
        }
        if (serverRetryReturnGameBuilder_ == null) {
          result.serverRetryReturnGame_ = serverRetryReturnGame_;
        } else {
          result.serverRetryReturnGame_ = serverRetryReturnGameBuilder_.build();
        }
        if (serverGetRankListBuilder_ == null) {
          result.serverGetRankList_ = serverGetRankList_;
        } else {
          result.serverGetRankList_ = serverGetRankListBuilder_.build();
        }
        if (serverRewardMessageBuilder_ == null) {
          result.serverRewardMessage_ = serverRewardMessage_;
        } else {
          result.serverRewardMessage_ = serverRewardMessageBuilder_.build();
        }
        if (serverGetRoomConfigBuilder_ == null) {
          result.serverGetRoomConfig_ = serverGetRoomConfig_;
        } else {
          result.serverGetRoomConfig_ = serverGetRoomConfigBuilder_.build();
        }
        if (serverGetMonthCardDiamondBuilder_ == null) {
          result.serverGetMonthCardDiamond_ = serverGetMonthCardDiamond_;
        } else {
          result.serverGetMonthCardDiamond_ = serverGetMonthCardDiamondBuilder_.build();
        }
        if (serverGetLotteryCountBuilder_ == null) {
          result.serverGetLotteryCount_ = serverGetLotteryCount_;
        } else {
          result.serverGetLotteryCount_ = serverGetLotteryCountBuilder_.build();
        }
        if (serverGetRoomInfoBuilder_ == null) {
          result.serverGetRoomInfo_ = serverGetRoomInfo_;
        } else {
          result.serverGetRoomInfo_ = serverGetRoomInfoBuilder_.build();
        }
        if (serverSendTelCodeBuilder_ == null) {
          result.serverSendTelCode_ = serverSendTelCode_;
        } else {
          result.serverSendTelCode_ = serverSendTelCodeBuilder_.build();
        }
        if (serverVerifyTelCodeBuilder_ == null) {
          result.serverVerifyTelCode_ = serverVerifyTelCode_;
        } else {
          result.serverVerifyTelCode_ = serverVerifyTelCodeBuilder_.build();
        }
        if (serverSharePackageBuilder_ == null) {
          result.serverSharePackage_ = serverSharePackage_;
        } else {
          result.serverSharePackage_ = serverSharePackageBuilder_.build();
        }
        if (serverGetAwardListBuilder_ == null) {
          result.serverGetAwardList_ = serverGetAwardList_;
        } else {
          result.serverGetAwardList_ = serverGetAwardListBuilder_.build();
        }
        if (serverCheckConnectBuilder_ == null) {
          result.serverCheckConnect_ = serverCheckConnect_;
        } else {
          result.serverCheckConnect_ = serverCheckConnectBuilder_.build();
        }
        if (serverGetPFListBuilder_ == null) {
          result.serverGetPFList_ = serverGetPFList_;
        } else {
          result.serverGetPFList_ = serverGetPFListBuilder_.build();
        }
        if (serverChoosePFBuilder_ == null) {
          result.serverChoosePF_ = serverChoosePF_;
        } else {
          result.serverChoosePF_ = serverChoosePFBuilder_.build();
        }
        if (serverGetHistoryRankBuilder_ == null) {
          result.serverGetHistoryRank_ = serverGetHistoryRank_;
        } else {
          result.serverGetHistoryRank_ = serverGetHistoryRankBuilder_.build();
        }
        if (serverH5RewardBuilder_ == null) {
          result.serverH5Reward_ = serverH5Reward_;
        } else {
          result.serverH5Reward_ = serverH5RewardBuilder_.build();
        }
        if (serverNewDrawWinCupBuilder_ == null) {
          result.serverNewDrawWinCup_ = serverNewDrawWinCup_;
        } else {
          result.serverNewDrawWinCup_ = serverNewDrawWinCupBuilder_.build();
        }
        if (serverGetNewHallInfoBuilder_ == null) {
          result.serverGetNewHallInfo_ = serverGetNewHallInfo_;
        } else {
          result.serverGetNewHallInfo_ = serverGetNewHallInfoBuilder_.build();
        }
        if (serverLuckWallBuilder_ == null) {
          result.serverLuckWall_ = serverLuckWall_;
        } else {
          result.serverLuckWall_ = serverLuckWallBuilder_.build();
        }
        if (serverCdkeyAwardBuilder_ == null) {
          result.serverCdkeyAward_ = serverCdkeyAward_;
        } else {
          result.serverCdkeyAward_ = serverCdkeyAwardBuilder_.build();
        }
        if (serverGetStoreInfoBuilder_ == null) {
          result.serverGetStoreInfo_ = serverGetStoreInfo_;
        } else {
          result.serverGetStoreInfo_ = serverGetStoreInfoBuilder_.build();
        }
        if (serverConvertGoodsBuilder_ == null) {
          result.serverConvertGoods_ = serverConvertGoods_;
        } else {
          result.serverConvertGoods_ = serverConvertGoodsBuilder_.build();
        }
        if (serverWXPayResultBuilder_ == null) {
          result.serverWXPayResult_ = serverWXPayResult_;
        } else {
          result.serverWXPayResult_ = serverWXPayResultBuilder_.build();
        }
        if (serverBuyOrderGoodsBuilder_ == null) {
          result.serverBuyOrderGoods_ = serverBuyOrderGoods_;
        } else {
          result.serverBuyOrderGoods_ = serverBuyOrderGoodsBuilder_.build();
        }
        if (serverGetFirstChargeBuilder_ == null) {
          result.serverGetFirstCharge_ = serverGetFirstCharge_;
        } else {
          result.serverGetFirstCharge_ = serverGetFirstChargeBuilder_.build();
        }
        if (serverGetDailyGiftBuilder_ == null) {
          result.serverGetDailyGift_ = serverGetDailyGift_;
        } else {
          result.serverGetDailyGift_ = serverGetDailyGiftBuilder_.build();
        }
        if (serverGetMonthCardBuilder_ == null) {
          result.serverGetMonthCard_ = serverGetMonthCard_;
        } else {
          result.serverGetMonthCard_ = serverGetMonthCardBuilder_.build();
        }
        if (serverGetResurgenceGiftBuilder_ == null) {
          result.serverGetResurgenceGift_ = serverGetResurgenceGift_;
        } else {
          result.serverGetResurgenceGift_ = serverGetResurgenceGiftBuilder_.build();
        }
        if (serverGetConvertMessageBuilder_ == null) {
          result.serverGetConvertMessage_ = serverGetConvertMessage_;
        } else {
          result.serverGetConvertMessage_ = serverGetConvertMessageBuilder_.build();
        }
        if (serverNewBuyOrderBuilder_ == null) {
          result.serverNewBuyOrder_ = serverNewBuyOrder_;
        } else {
          result.serverNewBuyOrder_ = serverNewBuyOrderBuilder_.build();
        }
        if (serverNewConvertBuilder_ == null) {
          result.serverNewConvert_ = serverNewConvert_;
        } else {
          result.serverNewConvert_ = serverNewConvertBuilder_.build();
        }
        if (serverAlipayAccountBuilder_ == null) {
          result.serverAlipayAccount_ = serverAlipayAccount_;
        } else {
          result.serverAlipayAccount_ = serverAlipayAccountBuilder_.build();
        }
        if (serverPayOptionsBuilder_ == null) {
          result.serverPayOptions_ = serverPayOptions_;
        } else {
          result.serverPayOptions_ = serverPayOptionsBuilder_.build();
        }
        if (serverIdVerifyBuilder_ == null) {
          result.serverIdVerify_ = serverIdVerify_;
        } else {
          result.serverIdVerify_ = serverIdVerifyBuilder_.build();
        }
        if (serverVerifyAwardBuilder_ == null) {
          result.serverVerifyAward_ = serverVerifyAward_;
        } else {
          result.serverVerifyAward_ = serverVerifyAwardBuilder_.build();
        }
        if (serverMiniAppPayBuilder_ == null) {
          result.serverMiniAppPay_ = serverMiniAppPay_;
        } else {
          result.serverMiniAppPay_ = serverMiniAppPayBuilder_.build();
        }
        if (serverUnionAccountBuilder_ == null) {
          result.serverUnionAccount_ = serverUnionAccount_;
        } else {
          result.serverUnionAccount_ = serverUnionAccountBuilder_.build();
        }
        if (serverGetAnnounceBuilder_ == null) {
          result.serverGetAnnounce_ = serverGetAnnounce_;
        } else {
          result.serverGetAnnounce_ = serverGetAnnounceBuilder_.build();
        }
        if (serverGetMailBuilder_ == null) {
          result.serverGetMail_ = serverGetMail_;
        } else {
          result.serverGetMail_ = serverGetMailBuilder_.build();
        }
        if (serverGetMailRewardBuilder_ == null) {
          result.serverGetMailReward_ = serverGetMailReward_;
        } else {
          result.serverGetMailReward_ = serverGetMailRewardBuilder_.build();
        }
        if (serverDelMailBuilder_ == null) {
          result.serverDelMail_ = serverDelMail_;
        } else {
          result.serverDelMail_ = serverDelMailBuilder_.build();
        }
        if (serverReadMailBuilder_ == null) {
          result.serverReadMail_ = serverReadMail_;
        } else {
          result.serverReadMail_ = serverReadMailBuilder_.build();
        }
        if (serverDel2RBuilder_ == null) {
          result.serverDel2R_ = serverDel2R_;
        } else {
          result.serverDel2R_ = serverDel2RBuilder_.build();
        }
        if (serverQueryDailyTaskBuilder_ == null) {
          result.serverQueryDailyTask_ = serverQueryDailyTask_;
        } else {
          result.serverQueryDailyTask_ = serverQueryDailyTaskBuilder_.build();
        }
        if (serverGetNoviceRewardBuilder_ == null) {
          result.serverGetNoviceReward_ = serverGetNoviceReward_;
        } else {
          result.serverGetNoviceReward_ = serverGetNoviceRewardBuilder_.build();
        }
        if (serverQueryNoviceTaskBuilder_ == null) {
          result.serverQueryNoviceTask_ = serverQueryNoviceTask_;
        } else {
          result.serverQueryNoviceTask_ = serverQueryNoviceTaskBuilder_.build();
        }
        if (serverGetDTAwardBuilder_ == null) {
          result.serverGetDTAward_ = serverGetDTAward_;
        } else {
          result.serverGetDTAward_ = serverGetDTAwardBuilder_.build();
        }
        if (serverGetReceiveAddrBuilder_ == null) {
          result.serverGetReceiveAddr_ = serverGetReceiveAddr_;
        } else {
          result.serverGetReceiveAddr_ = serverGetReceiveAddrBuilder_.build();
        }
        if (serverAlterReceiveAddrBuilder_ == null) {
          result.serverAlterReceiveAddr_ = serverAlterReceiveAddr_;
        } else {
          result.serverAlterReceiveAddr_ = serverAlterReceiveAddrBuilder_.build();
        }
        if (serverSnatchListBuilder_ == null) {
          result.serverSnatchList_ = serverSnatchList_;
        } else {
          result.serverSnatchList_ = serverSnatchListBuilder_.build();
        }
        if (serverSnatchItemDetailBuilder_ == null) {
          result.serverSnatchItemDetail_ = serverSnatchItemDetail_;
        } else {
          result.serverSnatchItemDetail_ = serverSnatchItemDetailBuilder_.build();
        }
        if (serverSnatchBetBuilder_ == null) {
          result.serverSnatchBet_ = serverSnatchBet_;
        } else {
          result.serverSnatchBet_ = serverSnatchBetBuilder_.build();
        }
        if (serverSnatchAwardListBuilder_ == null) {
          result.serverSnatchAwardList_ = serverSnatchAwardList_;
        } else {
          result.serverSnatchAwardList_ = serverSnatchAwardListBuilder_.build();
        }
        if (serverOwnSnatchRecordBuilder_ == null) {
          result.serverOwnSnatchRecord_ = serverOwnSnatchRecord_;
        } else {
          result.serverOwnSnatchRecord_ = serverOwnSnatchRecordBuilder_.build();
        }
        if (serverSnatchItemHistoryBuilder_ == null) {
          result.serverSnatchItemHistory_ = serverSnatchItemHistory_;
        } else {
          result.serverSnatchItemHistory_ = serverSnatchItemHistoryBuilder_.build();
        }
        if (serverSnatchHistoryDetailBuilder_ == null) {
          result.serverSnatchHistoryDetail_ = serverSnatchHistoryDetail_;
        } else {
          result.serverSnatchHistoryDetail_ = serverSnatchHistoryDetailBuilder_.build();
        }
        if (serverSnatchGetAwardBuilder_ == null) {
          result.serverSnatchGetAward_ = serverSnatchGetAward_;
        } else {
          result.serverSnatchGetAward_ = serverSnatchGetAwardBuilder_.build();
        }
        if (serverEnterDGBuilder_ == null) {
          result.serverEnterDG_ = serverEnterDG_;
        } else {
          result.serverEnterDG_ = serverEnterDGBuilder_.build();
        }
        if (serverDGLotteryBuilder_ == null) {
          result.serverDGLottery_ = serverDGLottery_;
        } else {
          result.serverDGLottery_ = serverDGLotteryBuilder_.build();
        }
        if (serverResetLotteryBuilder_ == null) {
          result.serverResetLottery_ = serverResetLottery_;
        } else {
          result.serverResetLottery_ = serverResetLotteryBuilder_.build();
        }
        if (serverExitDGBuilder_ == null) {
          result.serverExitDG_ = serverExitDG_;
        } else {
          result.serverExitDG_ = serverExitDGBuilder_.build();
        }
        if (serverOpenDGBuilder_ == null) {
          result.serverOpenDG_ = serverOpenDG_;
        } else {
          result.serverOpenDG_ = serverOpenDGBuilder_.build();
        }
        if (serverOpenDDBuilder_ == null) {
          result.serverOpenDD_ = serverOpenDD_;
        } else {
          result.serverOpenDD_ = serverOpenDDBuilder_.build();
        }
        if (serverDDLotteryBuilder_ == null) {
          result.serverDDLottery_ = serverDDLottery_;
        } else {
          result.serverDDLottery_ = serverDDLotteryBuilder_.build();
        }
        if (serverExitDDBuilder_ == null) {
          result.serverExitDD_ = serverExitDD_;
        } else {
          result.serverExitDD_ = serverExitDDBuilder_.build();
        }
        if (serverQueryPropBuilder_ == null) {
          result.serverQueryProp_ = serverQueryProp_;
        } else {
          result.serverQueryProp_ = serverQueryPropBuilder_.build();
        }
        if (serverUsePropBuilder_ == null) {
          result.serverUseProp_ = serverUseProp_;
        } else {
          result.serverUseProp_ = serverUsePropBuilder_.build();
        }
        if (serverQueryPropCountBuilder_ == null) {
          result.serverQueryPropCount_ = serverQueryPropCount_;
        } else {
          result.serverQueryPropCount_ = serverQueryPropCountBuilder_.build();
        }
        if (serverSignInfoBuilder_ == null) {
          result.serverSignInfo_ = serverSignInfo_;
        } else {
          result.serverSignInfo_ = serverSignInfoBuilder_.build();
        }
        if (serverSignAwardBuilder_ == null) {
          result.serverSignAward_ = serverSignAward_;
        } else {
          result.serverSignAward_ = serverSignAwardBuilder_.build();
        }
        if (serverSignStateBuilder_ == null) {
          result.serverSignState_ = serverSignState_;
        } else {
          result.serverSignState_ = serverSignStateBuilder_.build();
        }
        if (serverLTLotteryBuilder_ == null) {
          result.serverLTLottery_ = serverLTLottery_;
        } else {
          result.serverLTLottery_ = serverLTLotteryBuilder_.build();
        }
        if (serverGetTSRewardBuilder_ == null) {
          result.serverGetTSReward_ = serverGetTSReward_;
        } else {
          result.serverGetTSReward_ = serverGetTSRewardBuilder_.build();
        }
        if (serverGetLuckInfoBuilder_ == null) {
          result.serverGetLuckInfo_ = serverGetLuckInfo_;
        } else {
          result.serverGetLuckInfo_ = serverGetLuckInfoBuilder_.build();
        }
        if (serverGetVipBuilder_ == null) {
          result.serverGetVip_ = serverGetVip_;
        } else {
          result.serverGetVip_ = serverGetVipBuilder_.build();
        }
        if (serverGetDayGiftBuilder_ == null) {
          result.serverGetDayGift_ = serverGetDayGift_;
        } else {
          result.serverGetDayGift_ = serverGetDayGiftBuilder_.build();
        }
        if (serverEnterSleeveBuilder_ == null) {
          result.serverEnterSleeve_ = serverEnterSleeve_;
        } else {
          result.serverEnterSleeve_ = serverEnterSleeveBuilder_.build();
        }
        if (serverSleeveSheepBuilder_ == null) {
          result.serverSleeveSheep_ = serverSleeveSheep_;
        } else {
          result.serverSleeveSheep_ = serverSleeveSheepBuilder_.build();
        }
        if (serverQueryPlayerCoinBuilder_ == null) {
          result.serverQueryPlayerCoin_ = serverQueryPlayerCoin_;
        } else {
          result.serverQueryPlayerCoin_ = serverQueryPlayerCoinBuilder_.build();
        }
        if (serverExitSleeveBuilder_ == null) {
          result.serverExitSleeve_ = serverExitSleeve_;
        } else {
          result.serverExitSleeve_ = serverExitSleeveBuilder_.build();
        }
        if (serverEnterNewSleeveBuilder_ == null) {
          result.serverEnterNewSleeve_ = serverEnterNewSleeve_;
        } else {
          result.serverEnterNewSleeve_ = serverEnterNewSleeveBuilder_.build();
        }
        if (serverNewSleeveSheepBuilder_ == null) {
          result.serverNewSleeveSheep_ = serverNewSleeveSheep_;
        } else {
          result.serverNewSleeveSheep_ = serverNewSleeveSheepBuilder_.build();
        }
        if (serverNewSleeveResultBuilder_ == null) {
          result.serverNewSleeveResult_ = serverNewSleeveResult_;
        } else {
          result.serverNewSleeveResult_ = serverNewSleeveResultBuilder_.build();
        }
        if (serverExitNewSleeveBuilder_ == null) {
          result.serverExitNewSleeve_ = serverExitNewSleeve_;
        } else {
          result.serverExitNewSleeve_ = serverExitNewSleeveBuilder_.build();
        }
        if (server2DoCatchBuilder_ == null) {
          result.server2DoCatch_ = server2DoCatch_;
        } else {
          result.server2DoCatch_ = server2DoCatchBuilder_.build();
        }
        if (server2PlayCardsBuilder_ == null) {
          result.server2PlayCards_ = server2PlayCards_;
        } else {
          result.server2PlayCards_ = server2PlayCardsBuilder_.build();
        }
        if (server2RecoverGameBuilder_ == null) {
          result.server2RecoverGame_ = server2RecoverGame_;
        } else {
          result.server2RecoverGame_ = server2RecoverGameBuilder_.build();
        }
        if (server2LeaveRoomBuilder_ == null) {
          result.server2LeaveRoom_ = server2LeaveRoom_;
        } else {
          result.server2LeaveRoom_ = server2LeaveRoomBuilder_.build();
        }
        if (serverMineShareBuilder_ == null) {
          result.serverMineShare_ = serverMineShare_;
        } else {
          result.serverMineShare_ = serverMineShareBuilder_.build();
        }
        if (serverGetMSAwardBuilder_ == null) {
          result.serverGetMSAward_ = serverGetMSAward_;
        } else {
          result.serverGetMSAward_ = serverGetMSAwardBuilder_.build();
        }
        if (serverFriendShareBuilder_ == null) {
          result.serverFriendShare_ = serverFriendShare_;
        } else {
          result.serverFriendShare_ = serverFriendShareBuilder_.build();
        }
        if (serverGetFSAwardBuilder_ == null) {
          result.serverGetFSAward_ = serverGetFSAward_;
        } else {
          result.serverGetFSAward_ = serverGetFSAwardBuilder_.build();
        }
        if (serverGetShareTaskBuilder_ == null) {
          result.serverGetShareTask_ = serverGetShareTask_;
        } else {
          result.serverGetShareTask_ = serverGetShareTaskBuilder_.build();
        }
        if (serverGetShareTaskAwardBuilder_ == null) {
          result.serverGetShareTaskAward_ = serverGetShareTaskAward_;
        } else {
          result.serverGetShareTaskAward_ = serverGetShareTaskAwardBuilder_.build();
        }
        if (serverQueryReviveInfoBuilder_ == null) {
          result.serverQueryReviveInfo_ = serverQueryReviveInfo_;
        } else {
          result.serverQueryReviveInfo_ = serverQueryReviveInfoBuilder_.build();
        }
        if (serverUseReviveBuilder_ == null) {
          result.serverUseRevive_ = serverUseRevive_;
        } else {
          result.serverUseRevive_ = serverUseReviveBuilder_.build();
        }
        if (serverReviveFirstChargeBuilder_ == null) {
          result.serverReviveFirstCharge_ = serverReviveFirstCharge_;
        } else {
          result.serverReviveFirstCharge_ = serverReviveFirstChargeBuilder_.build();
        }
        if (serverReviveDayGiftBuilder_ == null) {
          result.serverReviveDayGift_ = serverReviveDayGift_;
        } else {
          result.serverReviveDayGift_ = serverReviveDayGiftBuilder_.build();
        }
        if (serverGetRedTipBuilder_ == null) {
          result.serverGetRedTip_ = serverGetRedTip_;
        } else {
          result.serverGetRedTip_ = serverGetRedTipBuilder_.build();
        }
        if (serverGetMatchInfoBuilder_ == null) {
          result.serverGetMatchInfo_ = serverGetMatchInfo_;
        } else {
          result.serverGetMatchInfo_ = serverGetMatchInfoBuilder_.build();
        }
        if (serverGetMatchDetailBuilder_ == null) {
          result.serverGetMatchDetail_ = serverGetMatchDetail_;
        } else {
          result.serverGetMatchDetail_ = serverGetMatchDetailBuilder_.build();
        }
        if (serverGetMatchRecordBuilder_ == null) {
          result.serverGetMatchRecord_ = serverGetMatchRecord_;
        } else {
          result.serverGetMatchRecord_ = serverGetMatchRecordBuilder_.build();
        }
        if (serverMatchApplyBuilder_ == null) {
          result.serverMatchApply_ = serverMatchApply_;
        } else {
          result.serverMatchApply_ = serverMatchApplyBuilder_.build();
        }
        if (serverMatchCancelBuilder_ == null) {
          result.serverMatchCancel_ = serverMatchCancel_;
        } else {
          result.serverMatchCancel_ = serverMatchCancelBuilder_.build();
        }
        if (serverOwnMatchRecordBuilder_ == null) {
          result.serverOwnMatchRecord_ = serverOwnMatchRecord_;
        } else {
          result.serverOwnMatchRecord_ = serverOwnMatchRecordBuilder_.build();
        }
        if (serverApplyListChangeBuilder_ == null) {
          result.serverApplyListChange_ = serverApplyListChange_;
        } else {
          result.serverApplyListChange_ = serverApplyListChangeBuilder_.build();
        }
        if (serverMatchScoreBuilder_ == null) {
          result.serverMatchScore_ = serverMatchScore_;
        } else {
          result.serverMatchScore_ = serverMatchScoreBuilder_.build();
        }
        if (serverMatchConfigBuilder_ == null) {
          result.serverMatchConfig_ = serverMatchConfig_;
        } else {
          result.serverMatchConfig_ = serverMatchConfigBuilder_.build();
        }
        if (serverGetKillCellBuilder_ == null) {
          result.serverGetKillCell_ = serverGetKillCell_;
        } else {
          result.serverGetKillCell_ = serverGetKillCellBuilder_.build();
        }
        if (serverEnterKillCellBuilder_ == null) {
          result.serverEnterKillCell_ = serverEnterKillCell_;
        } else {
          result.serverEnterKillCell_ = serverEnterKillCellBuilder_.build();
        }
        if (serverQuitKillCellBuilder_ == null) {
          result.serverQuitKillCell_ = serverQuitKillCell_;
        } else {
          result.serverQuitKillCell_ = serverQuitKillCellBuilder_.build();
        }
        if (bGameStartBuilder_ == null) {
          result.bGameStart_ = bGameStart_;
        } else {
          result.bGameStart_ = bGameStartBuilder_.build();
        }
        if (bDoCatchBuilder_ == null) {
          result.bDoCatch_ = bDoCatch_;
        } else {
          result.bDoCatch_ = bDoCatchBuilder_.build();
        }
        if (bCatchResultBuilder_ == null) {
          result.bCatchResult_ = bCatchResult_;
        } else {
          result.bCatchResult_ = bCatchResultBuilder_.build();
        }
        if (bPlayCardsBuilder_ == null) {
          result.bPlayCards_ = bPlayCards_;
        } else {
          result.bPlayCards_ = bPlayCardsBuilder_.build();
        }
        if (bSendDiZhuCardBuilder_ == null) {
          result.bSendDiZhuCard_ = bSendDiZhuCard_;
        } else {
          result.bSendDiZhuCard_ = bSendDiZhuCardBuilder_.build();
        }
        if (bNextPlayerBuilder_ == null) {
          result.bNextPlayer_ = bNextPlayer_;
        } else {
          result.bNextPlayer_ = bNextPlayerBuilder_.build();
        }
        if (bGameSettleBuilder_ == null) {
          result.bGameSettle_ = bGameSettle_;
        } else {
          result.bGameSettle_ = bGameSettleBuilder_.build();
        }
        if (bRewardMessageBuilder_ == null) {
          result.bRewardMessage_ = bRewardMessage_;
        } else {
          result.bRewardMessage_ = bRewardMessageBuilder_.build();
        }
        if (bAutoPlayBuilder_ == null) {
          result.bAutoPlay_ = bAutoPlay_;
        } else {
          result.bAutoPlay_ = bAutoPlayBuilder_.build();
        }
        if (bRoomIdUrlBuilder_ == null) {
          result.bRoomIdUrl_ = bRoomIdUrl_;
        } else {
          result.bRoomIdUrl_ = bRoomIdUrlBuilder_.build();
        }
        if (bAwardDialogBuilder_ == null) {
          result.bAwardDialog_ = bAwardDialog_;
        } else {
          result.bAwardDialog_ = bAwardDialogBuilder_.build();
        }
        if (bBuySuccessBuilder_ == null) {
          result.bBuySuccess_ = bBuySuccess_;
        } else {
          result.bBuySuccess_ = bBuySuccessBuilder_.build();
        }
        if (bRedDotPushBuilder_ == null) {
          result.bRedDotPush_ = bRedDotPush_;
        } else {
          result.bRedDotPush_ = bRedDotPushBuilder_.build();
        }
        if (bForceAnnounceBuilder_ == null) {
          result.bForceAnnounce_ = bForceAnnounce_;
        } else {
          result.bForceAnnounce_ = bForceAnnounceBuilder_.build();
        }
        if (bDGameMessageBuilder_ == null) {
          result.bDGameMessage_ = bDGameMessage_;
        } else {
          result.bDGameMessage_ = bDGameMessageBuilder_.build();
        }
        if (bDGOverBuilder_ == null) {
          result.bDGOver_ = bDGOver_;
        } else {
          result.bDGOver_ = bDGOverBuilder_.build();
        }
        if (bDDOverBuilder_ == null) {
          result.bDDOver_ = bDDOver_;
        } else {
          result.bDDOver_ = bDDOverBuilder_.build();
        }
        if (bDDInfoBuilder_ == null) {
          result.bDDInfo_ = bDDInfo_;
        } else {
          result.bDDInfo_ = bDDInfoBuilder_.build();
        }
        if (bSSInfoBuilder_ == null) {
          result.bSSInfo_ = bSSInfo_;
        } else {
          result.bSSInfo_ = bSSInfoBuilder_.build();
        }
        if (bNewSleeveSheepInfoBuilder_ == null) {
          result.bNewSleeveSheepInfo_ = bNewSleeveSheepInfo_;
        } else {
          result.bNewSleeveSheepInfo_ = bNewSleeveSheepInfoBuilder_.build();
        }
        if (bNewSleeverOverBuilder_ == null) {
          result.bNewSleeverOver_ = bNewSleeverOver_;
        } else {
          result.bNewSleeverOver_ = bNewSleeverOverBuilder_.build();
        }
        if (bDiamondReviveInfoBuilder_ == null) {
          result.bDiamondReviveInfo_ = bDiamondReviveInfo_;
        } else {
          result.bDiamondReviveInfo_ = bDiamondReviveInfoBuilder_.build();
        }
        if (b2AutoPlayBuilder_ == null) {
          result.b2AutoPlay_ = b2AutoPlay_;
        } else {
          result.b2AutoPlay_ = b2AutoPlayBuilder_.build();
        }
        if (b2GameStartBuilder_ == null) {
          result.b2GameStart_ = b2GameStart_;
        } else {
          result.b2GameStart_ = b2GameStartBuilder_.build();
        }
        if (b2DoCatchBuilder_ == null) {
          result.b2DoCatch_ = b2DoCatch_;
        } else {
          result.b2DoCatch_ = b2DoCatchBuilder_.build();
        }
        if (b2CatchResultBuilder_ == null) {
          result.b2CatchResult_ = b2CatchResult_;
        } else {
          result.b2CatchResult_ = b2CatchResultBuilder_.build();
        }
        if (b2SendDiZhuCardBuilder_ == null) {
          result.b2SendDiZhuCard_ = b2SendDiZhuCard_;
        } else {
          result.b2SendDiZhuCard_ = b2SendDiZhuCardBuilder_.build();
        }
        if (b2GameSettleBuilder_ == null) {
          result.b2GameSettle_ = b2GameSettle_;
        } else {
          result.b2GameSettle_ = b2GameSettleBuilder_.build();
        }
        if (bMatchStartBuilder_ == null) {
          result.bMatchStart_ = bMatchStart_;
        } else {
          result.bMatchStart_ = bMatchStartBuilder_.build();
        }
        if (bMatchEndBuilder_ == null) {
          result.bMatchEnd_ = bMatchEnd_;
        } else {
          result.bMatchEnd_ = bMatchEndBuilder_.build();
        }
        if (bMatchResultBuilder_ == null) {
          result.bMatchResult_ = bMatchResult_;
        } else {
          result.bMatchResult_ = bMatchResultBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kys.util.netty.proto.ProtoMsg.ServerResponse) {
          return mergeFrom((com.kys.util.netty.proto.ProtoMsg.ServerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kys.util.netty.proto.ProtoMsg.ServerResponse other) {
        if (other == com.kys.util.netty.proto.ProtoMsg.ServerResponse.getDefaultInstance()) return this;
        if (other.getMethodId() != 0) {
          setMethodId(other.getMethodId());
        }
        if (other.result_ != 0) {
          setResultValue(other.getResultValue());
        }
        if (!other.getErrStr().isEmpty()) {
          errStr_ = other.errStr_;
          onChanged();
        }
        if (other.hasServerLogin()) {
          mergeServerLogin(other.getServerLogin());
        }
        if (other.hasServerPlayerInfo()) {
          mergeServerPlayerInfo(other.getServerPlayerInfo());
        }
        if (other.hasServerSendHallHeartBeat()) {
          mergeServerSendHallHeartBeat(other.getServerSendHallHeartBeat());
        }
        if (other.hasServerSendGameHeartBeat()) {
          mergeServerSendGameHeartBeat(other.getServerSendGameHeartBeat());
        }
        if (other.hasServerGetUserInfo()) {
          mergeServerGetUserInfo(other.getServerGetUserInfo());
        }
        if (other.hasServerQuickJoin()) {
          mergeServerQuickJoin(other.getServerQuickJoin());
        }
        if (other.hasServerEnterRoom()) {
          mergeServerEnterRoom(other.getServerEnterRoom());
        }
        if (other.hasServerRecoverGame()) {
          mergeServerRecoverGame(other.getServerRecoverGame());
        }
        if (other.hasServerDoCatch()) {
          mergeServerDoCatch(other.getServerDoCatch());
        }
        if (other.hasServerPlayCards()) {
          mergeServerPlayCards(other.getServerPlayCards());
        }
        if (other.hasServerAutoPlay()) {
          mergeServerAutoPlay(other.getServerAutoPlay());
        }
        if (other.hasServerLeaveRoom()) {
          mergeServerLeaveRoom(other.getServerLeaveRoom());
        }
        if (other.hasServerCancleJoin()) {
          mergeServerCancleJoin(other.getServerCancleJoin());
        }
        if (other.hasServerQueryIndex()) {
          mergeServerQueryIndex(other.getServerQueryIndex());
        }
        if (other.hasServerRetryReturnGame()) {
          mergeServerRetryReturnGame(other.getServerRetryReturnGame());
        }
        if (other.hasServerGetRankList()) {
          mergeServerGetRankList(other.getServerGetRankList());
        }
        if (other.hasServerRewardMessage()) {
          mergeServerRewardMessage(other.getServerRewardMessage());
        }
        if (other.hasServerGetRoomConfig()) {
          mergeServerGetRoomConfig(other.getServerGetRoomConfig());
        }
        if (other.hasServerGetMonthCardDiamond()) {
          mergeServerGetMonthCardDiamond(other.getServerGetMonthCardDiamond());
        }
        if (other.hasServerGetLotteryCount()) {
          mergeServerGetLotteryCount(other.getServerGetLotteryCount());
        }
        if (other.hasServerGetRoomInfo()) {
          mergeServerGetRoomInfo(other.getServerGetRoomInfo());
        }
        if (other.hasServerSendTelCode()) {
          mergeServerSendTelCode(other.getServerSendTelCode());
        }
        if (other.hasServerVerifyTelCode()) {
          mergeServerVerifyTelCode(other.getServerVerifyTelCode());
        }
        if (other.hasServerSharePackage()) {
          mergeServerSharePackage(other.getServerSharePackage());
        }
        if (other.hasServerGetAwardList()) {
          mergeServerGetAwardList(other.getServerGetAwardList());
        }
        if (other.hasServerCheckConnect()) {
          mergeServerCheckConnect(other.getServerCheckConnect());
        }
        if (other.hasServerGetPFList()) {
          mergeServerGetPFList(other.getServerGetPFList());
        }
        if (other.hasServerChoosePF()) {
          mergeServerChoosePF(other.getServerChoosePF());
        }
        if (other.hasServerGetHistoryRank()) {
          mergeServerGetHistoryRank(other.getServerGetHistoryRank());
        }
        if (other.hasServerH5Reward()) {
          mergeServerH5Reward(other.getServerH5Reward());
        }
        if (other.hasServerNewDrawWinCup()) {
          mergeServerNewDrawWinCup(other.getServerNewDrawWinCup());
        }
        if (other.hasServerGetNewHallInfo()) {
          mergeServerGetNewHallInfo(other.getServerGetNewHallInfo());
        }
        if (other.hasServerLuckWall()) {
          mergeServerLuckWall(other.getServerLuckWall());
        }
        if (other.hasServerCdkeyAward()) {
          mergeServerCdkeyAward(other.getServerCdkeyAward());
        }
        if (other.hasServerGetStoreInfo()) {
          mergeServerGetStoreInfo(other.getServerGetStoreInfo());
        }
        if (other.hasServerConvertGoods()) {
          mergeServerConvertGoods(other.getServerConvertGoods());
        }
        if (other.hasServerWXPayResult()) {
          mergeServerWXPayResult(other.getServerWXPayResult());
        }
        if (other.hasServerBuyOrderGoods()) {
          mergeServerBuyOrderGoods(other.getServerBuyOrderGoods());
        }
        if (other.hasServerGetFirstCharge()) {
          mergeServerGetFirstCharge(other.getServerGetFirstCharge());
        }
        if (other.hasServerGetDailyGift()) {
          mergeServerGetDailyGift(other.getServerGetDailyGift());
        }
        if (other.hasServerGetMonthCard()) {
          mergeServerGetMonthCard(other.getServerGetMonthCard());
        }
        if (other.hasServerGetResurgenceGift()) {
          mergeServerGetResurgenceGift(other.getServerGetResurgenceGift());
        }
        if (other.hasServerGetConvertMessage()) {
          mergeServerGetConvertMessage(other.getServerGetConvertMessage());
        }
        if (other.hasServerNewBuyOrder()) {
          mergeServerNewBuyOrder(other.getServerNewBuyOrder());
        }
        if (other.hasServerNewConvert()) {
          mergeServerNewConvert(other.getServerNewConvert());
        }
        if (other.hasServerAlipayAccount()) {
          mergeServerAlipayAccount(other.getServerAlipayAccount());
        }
        if (other.hasServerPayOptions()) {
          mergeServerPayOptions(other.getServerPayOptions());
        }
        if (other.hasServerIdVerify()) {
          mergeServerIdVerify(other.getServerIdVerify());
        }
        if (other.hasServerVerifyAward()) {
          mergeServerVerifyAward(other.getServerVerifyAward());
        }
        if (other.hasServerMiniAppPay()) {
          mergeServerMiniAppPay(other.getServerMiniAppPay());
        }
        if (other.hasServerUnionAccount()) {
          mergeServerUnionAccount(other.getServerUnionAccount());
        }
        if (other.hasServerGetAnnounce()) {
          mergeServerGetAnnounce(other.getServerGetAnnounce());
        }
        if (other.hasServerGetMail()) {
          mergeServerGetMail(other.getServerGetMail());
        }
        if (other.hasServerGetMailReward()) {
          mergeServerGetMailReward(other.getServerGetMailReward());
        }
        if (other.hasServerDelMail()) {
          mergeServerDelMail(other.getServerDelMail());
        }
        if (other.hasServerReadMail()) {
          mergeServerReadMail(other.getServerReadMail());
        }
        if (other.hasServerDel2R()) {
          mergeServerDel2R(other.getServerDel2R());
        }
        if (other.hasServerQueryDailyTask()) {
          mergeServerQueryDailyTask(other.getServerQueryDailyTask());
        }
        if (other.hasServerGetNoviceReward()) {
          mergeServerGetNoviceReward(other.getServerGetNoviceReward());
        }
        if (other.hasServerQueryNoviceTask()) {
          mergeServerQueryNoviceTask(other.getServerQueryNoviceTask());
        }
        if (other.hasServerGetDTAward()) {
          mergeServerGetDTAward(other.getServerGetDTAward());
        }
        if (other.hasServerGetReceiveAddr()) {
          mergeServerGetReceiveAddr(other.getServerGetReceiveAddr());
        }
        if (other.hasServerAlterReceiveAddr()) {
          mergeServerAlterReceiveAddr(other.getServerAlterReceiveAddr());
        }
        if (other.hasServerSnatchList()) {
          mergeServerSnatchList(other.getServerSnatchList());
        }
        if (other.hasServerSnatchItemDetail()) {
          mergeServerSnatchItemDetail(other.getServerSnatchItemDetail());
        }
        if (other.hasServerSnatchBet()) {
          mergeServerSnatchBet(other.getServerSnatchBet());
        }
        if (other.hasServerSnatchAwardList()) {
          mergeServerSnatchAwardList(other.getServerSnatchAwardList());
        }
        if (other.hasServerOwnSnatchRecord()) {
          mergeServerOwnSnatchRecord(other.getServerOwnSnatchRecord());
        }
        if (other.hasServerSnatchItemHistory()) {
          mergeServerSnatchItemHistory(other.getServerSnatchItemHistory());
        }
        if (other.hasServerSnatchHistoryDetail()) {
          mergeServerSnatchHistoryDetail(other.getServerSnatchHistoryDetail());
        }
        if (other.hasServerSnatchGetAward()) {
          mergeServerSnatchGetAward(other.getServerSnatchGetAward());
        }
        if (other.hasServerEnterDG()) {
          mergeServerEnterDG(other.getServerEnterDG());
        }
        if (other.hasServerDGLottery()) {
          mergeServerDGLottery(other.getServerDGLottery());
        }
        if (other.hasServerResetLottery()) {
          mergeServerResetLottery(other.getServerResetLottery());
        }
        if (other.hasServerExitDG()) {
          mergeServerExitDG(other.getServerExitDG());
        }
        if (other.hasServerOpenDG()) {
          mergeServerOpenDG(other.getServerOpenDG());
        }
        if (other.hasServerOpenDD()) {
          mergeServerOpenDD(other.getServerOpenDD());
        }
        if (other.hasServerDDLottery()) {
          mergeServerDDLottery(other.getServerDDLottery());
        }
        if (other.hasServerExitDD()) {
          mergeServerExitDD(other.getServerExitDD());
        }
        if (other.hasServerQueryProp()) {
          mergeServerQueryProp(other.getServerQueryProp());
        }
        if (other.hasServerUseProp()) {
          mergeServerUseProp(other.getServerUseProp());
        }
        if (other.hasServerQueryPropCount()) {
          mergeServerQueryPropCount(other.getServerQueryPropCount());
        }
        if (other.hasServerSignInfo()) {
          mergeServerSignInfo(other.getServerSignInfo());
        }
        if (other.hasServerSignAward()) {
          mergeServerSignAward(other.getServerSignAward());
        }
        if (other.hasServerSignState()) {
          mergeServerSignState(other.getServerSignState());
        }
        if (other.hasServerLTLottery()) {
          mergeServerLTLottery(other.getServerLTLottery());
        }
        if (other.hasServerGetTSReward()) {
          mergeServerGetTSReward(other.getServerGetTSReward());
        }
        if (other.hasServerGetLuckInfo()) {
          mergeServerGetLuckInfo(other.getServerGetLuckInfo());
        }
        if (other.hasServerGetVip()) {
          mergeServerGetVip(other.getServerGetVip());
        }
        if (other.hasServerGetDayGift()) {
          mergeServerGetDayGift(other.getServerGetDayGift());
        }
        if (other.hasServerEnterSleeve()) {
          mergeServerEnterSleeve(other.getServerEnterSleeve());
        }
        if (other.hasServerSleeveSheep()) {
          mergeServerSleeveSheep(other.getServerSleeveSheep());
        }
        if (other.hasServerQueryPlayerCoin()) {
          mergeServerQueryPlayerCoin(other.getServerQueryPlayerCoin());
        }
        if (other.hasServerExitSleeve()) {
          mergeServerExitSleeve(other.getServerExitSleeve());
        }
        if (other.hasServerEnterNewSleeve()) {
          mergeServerEnterNewSleeve(other.getServerEnterNewSleeve());
        }
        if (other.hasServerNewSleeveSheep()) {
          mergeServerNewSleeveSheep(other.getServerNewSleeveSheep());
        }
        if (other.hasServerNewSleeveResult()) {
          mergeServerNewSleeveResult(other.getServerNewSleeveResult());
        }
        if (other.hasServerExitNewSleeve()) {
          mergeServerExitNewSleeve(other.getServerExitNewSleeve());
        }
        if (other.hasServer2DoCatch()) {
          mergeServer2DoCatch(other.getServer2DoCatch());
        }
        if (other.hasServer2PlayCards()) {
          mergeServer2PlayCards(other.getServer2PlayCards());
        }
        if (other.hasServer2RecoverGame()) {
          mergeServer2RecoverGame(other.getServer2RecoverGame());
        }
        if (other.hasServer2LeaveRoom()) {
          mergeServer2LeaveRoom(other.getServer2LeaveRoom());
        }
        if (other.hasServerMineShare()) {
          mergeServerMineShare(other.getServerMineShare());
        }
        if (other.hasServerGetMSAward()) {
          mergeServerGetMSAward(other.getServerGetMSAward());
        }
        if (other.hasServerFriendShare()) {
          mergeServerFriendShare(other.getServerFriendShare());
        }
        if (other.hasServerGetFSAward()) {
          mergeServerGetFSAward(other.getServerGetFSAward());
        }
        if (other.hasServerGetShareTask()) {
          mergeServerGetShareTask(other.getServerGetShareTask());
        }
        if (other.hasServerGetShareTaskAward()) {
          mergeServerGetShareTaskAward(other.getServerGetShareTaskAward());
        }
        if (other.hasServerQueryReviveInfo()) {
          mergeServerQueryReviveInfo(other.getServerQueryReviveInfo());
        }
        if (other.hasServerUseRevive()) {
          mergeServerUseRevive(other.getServerUseRevive());
        }
        if (other.hasServerReviveFirstCharge()) {
          mergeServerReviveFirstCharge(other.getServerReviveFirstCharge());
        }
        if (other.hasServerReviveDayGift()) {
          mergeServerReviveDayGift(other.getServerReviveDayGift());
        }
        if (other.hasServerGetRedTip()) {
          mergeServerGetRedTip(other.getServerGetRedTip());
        }
        if (other.hasServerGetMatchInfo()) {
          mergeServerGetMatchInfo(other.getServerGetMatchInfo());
        }
        if (other.hasServerGetMatchDetail()) {
          mergeServerGetMatchDetail(other.getServerGetMatchDetail());
        }
        if (other.hasServerGetMatchRecord()) {
          mergeServerGetMatchRecord(other.getServerGetMatchRecord());
        }
        if (other.hasServerMatchApply()) {
          mergeServerMatchApply(other.getServerMatchApply());
        }
        if (other.hasServerMatchCancel()) {
          mergeServerMatchCancel(other.getServerMatchCancel());
        }
        if (other.hasServerOwnMatchRecord()) {
          mergeServerOwnMatchRecord(other.getServerOwnMatchRecord());
        }
        if (other.hasServerApplyListChange()) {
          mergeServerApplyListChange(other.getServerApplyListChange());
        }
        if (other.hasServerMatchScore()) {
          mergeServerMatchScore(other.getServerMatchScore());
        }
        if (other.hasServerMatchConfig()) {
          mergeServerMatchConfig(other.getServerMatchConfig());
        }
        if (other.hasServerGetKillCell()) {
          mergeServerGetKillCell(other.getServerGetKillCell());
        }
        if (other.hasServerEnterKillCell()) {
          mergeServerEnterKillCell(other.getServerEnterKillCell());
        }
        if (other.hasServerQuitKillCell()) {
          mergeServerQuitKillCell(other.getServerQuitKillCell());
        }
        if (other.hasBGameStart()) {
          mergeBGameStart(other.getBGameStart());
        }
        if (other.hasBDoCatch()) {
          mergeBDoCatch(other.getBDoCatch());
        }
        if (other.hasBCatchResult()) {
          mergeBCatchResult(other.getBCatchResult());
        }
        if (other.hasBPlayCards()) {
          mergeBPlayCards(other.getBPlayCards());
        }
        if (other.hasBSendDiZhuCard()) {
          mergeBSendDiZhuCard(other.getBSendDiZhuCard());
        }
        if (other.hasBNextPlayer()) {
          mergeBNextPlayer(other.getBNextPlayer());
        }
        if (other.hasBGameSettle()) {
          mergeBGameSettle(other.getBGameSettle());
        }
        if (other.hasBRewardMessage()) {
          mergeBRewardMessage(other.getBRewardMessage());
        }
        if (other.hasBAutoPlay()) {
          mergeBAutoPlay(other.getBAutoPlay());
        }
        if (other.hasBRoomIdUrl()) {
          mergeBRoomIdUrl(other.getBRoomIdUrl());
        }
        if (other.hasBAwardDialog()) {
          mergeBAwardDialog(other.getBAwardDialog());
        }
        if (other.hasBBuySuccess()) {
          mergeBBuySuccess(other.getBBuySuccess());
        }
        if (other.hasBRedDotPush()) {
          mergeBRedDotPush(other.getBRedDotPush());
        }
        if (other.hasBForceAnnounce()) {
          mergeBForceAnnounce(other.getBForceAnnounce());
        }
        if (other.hasBDGameMessage()) {
          mergeBDGameMessage(other.getBDGameMessage());
        }
        if (other.hasBDGOver()) {
          mergeBDGOver(other.getBDGOver());
        }
        if (other.hasBDDOver()) {
          mergeBDDOver(other.getBDDOver());
        }
        if (other.hasBDDInfo()) {
          mergeBDDInfo(other.getBDDInfo());
        }
        if (other.hasBSSInfo()) {
          mergeBSSInfo(other.getBSSInfo());
        }
        if (other.hasBNewSleeveSheepInfo()) {
          mergeBNewSleeveSheepInfo(other.getBNewSleeveSheepInfo());
        }
        if (other.hasBNewSleeverOver()) {
          mergeBNewSleeverOver(other.getBNewSleeverOver());
        }
        if (other.hasBDiamondReviveInfo()) {
          mergeBDiamondReviveInfo(other.getBDiamondReviveInfo());
        }
        if (other.hasB2AutoPlay()) {
          mergeB2AutoPlay(other.getB2AutoPlay());
        }
        if (other.hasB2GameStart()) {
          mergeB2GameStart(other.getB2GameStart());
        }
        if (other.hasB2DoCatch()) {
          mergeB2DoCatch(other.getB2DoCatch());
        }
        if (other.hasB2CatchResult()) {
          mergeB2CatchResult(other.getB2CatchResult());
        }
        if (other.hasB2SendDiZhuCard()) {
          mergeB2SendDiZhuCard(other.getB2SendDiZhuCard());
        }
        if (other.hasB2GameSettle()) {
          mergeB2GameSettle(other.getB2GameSettle());
        }
        if (other.hasBMatchStart()) {
          mergeBMatchStart(other.getBMatchStart());
        }
        if (other.hasBMatchEnd()) {
          mergeBMatchEnd(other.getBMatchEnd());
        }
        if (other.hasBMatchResult()) {
          mergeBMatchResult(other.getBMatchResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kys.util.netty.proto.ProtoMsg.ServerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kys.util.netty.proto.ProtoMsg.ServerResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int methodId_ ;
      /**
       * <code>int32 methodId = 1;</code>
       */
      public int getMethodId() {
        return methodId_;
      }
      /**
       * <code>int32 methodId = 1;</code>
       */
      public Builder setMethodId(int value) {
        
        methodId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 methodId = 1;</code>
       */
      public Builder clearMethodId() {
        
        methodId_ = 0;
        onChanged();
        return this;
      }

      private int result_ = 0;
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public int getResultValue() {
        return result_;
      }
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public Builder setResultValue(int value) {
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public com.kys.util.netty.proto.ProtoMsg.ResultCode getResult() {
        com.kys.util.netty.proto.ProtoMsg.ResultCode result = com.kys.util.netty.proto.ProtoMsg.ResultCode.valueOf(result_);
        return result == null ? com.kys.util.netty.proto.ProtoMsg.ResultCode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public Builder setResult(com.kys.util.netty.proto.ProtoMsg.ResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public Builder clearResult() {
        
        result_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object errStr_ = "";
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public java.lang.String getErrStr() {
        java.lang.Object ref = errStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          errStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public com.google.protobuf.ByteString
          getErrStrBytes() {
        java.lang.Object ref = errStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public Builder setErrStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        errStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public Builder clearErrStr() {
        
        errStr_ = getDefaultInstance().getErrStr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public Builder setErrStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        errStr_ = value;
        onChanged();
        return this;
      }

      private com.kys.util.netty.proto.LoginProto.ServerLogin serverLogin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerLogin, com.kys.util.netty.proto.LoginProto.ServerLogin.Builder, com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder> serverLoginBuilder_;
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public boolean hasServerLogin() {
        return serverLoginBuilder_ != null || serverLogin_ != null;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerLogin getServerLogin() {
        if (serverLoginBuilder_ == null) {
          return serverLogin_ == null ? com.kys.util.netty.proto.LoginProto.ServerLogin.getDefaultInstance() : serverLogin_;
        } else {
          return serverLoginBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public Builder setServerLogin(com.kys.util.netty.proto.LoginProto.ServerLogin value) {
        if (serverLoginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverLogin_ = value;
          onChanged();
        } else {
          serverLoginBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public Builder setServerLogin(
          com.kys.util.netty.proto.LoginProto.ServerLogin.Builder builderForValue) {
        if (serverLoginBuilder_ == null) {
          serverLogin_ = builderForValue.build();
          onChanged();
        } else {
          serverLoginBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public Builder mergeServerLogin(com.kys.util.netty.proto.LoginProto.ServerLogin value) {
        if (serverLoginBuilder_ == null) {
          if (serverLogin_ != null) {
            serverLogin_ =
              com.kys.util.netty.proto.LoginProto.ServerLogin.newBuilder(serverLogin_).mergeFrom(value).buildPartial();
          } else {
            serverLogin_ = value;
          }
          onChanged();
        } else {
          serverLoginBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public Builder clearServerLogin() {
        if (serverLoginBuilder_ == null) {
          serverLogin_ = null;
          onChanged();
        } else {
          serverLogin_ = null;
          serverLoginBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerLogin.Builder getServerLoginBuilder() {
        
        onChanged();
        return getServerLoginFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder getServerLoginOrBuilder() {
        if (serverLoginBuilder_ != null) {
          return serverLoginBuilder_.getMessageOrBuilder();
        } else {
          return serverLogin_ == null ?
              com.kys.util.netty.proto.LoginProto.ServerLogin.getDefaultInstance() : serverLogin_;
        }
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerLogin, com.kys.util.netty.proto.LoginProto.ServerLogin.Builder, com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder> 
          getServerLoginFieldBuilder() {
        if (serverLoginBuilder_ == null) {
          serverLoginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ServerLogin, com.kys.util.netty.proto.LoginProto.ServerLogin.Builder, com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder>(
                  getServerLogin(),
                  getParentForChildren(),
                  isClean());
          serverLogin_ = null;
        }
        return serverLoginBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ServerGetUserInfo serverPlayerInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder> serverPlayerInfoBuilder_;
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public boolean hasServerPlayerInfo() {
        return serverPlayerInfoBuilder_ != null || serverPlayerInfo_ != null;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerPlayerInfo() {
        if (serverPlayerInfoBuilder_ == null) {
          return serverPlayerInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverPlayerInfo_;
        } else {
          return serverPlayerInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public Builder setServerPlayerInfo(com.kys.util.netty.proto.UserProto.ServerGetUserInfo value) {
        if (serverPlayerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverPlayerInfo_ = value;
          onChanged();
        } else {
          serverPlayerInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public Builder setServerPlayerInfo(
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder builderForValue) {
        if (serverPlayerInfoBuilder_ == null) {
          serverPlayerInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverPlayerInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public Builder mergeServerPlayerInfo(com.kys.util.netty.proto.UserProto.ServerGetUserInfo value) {
        if (serverPlayerInfoBuilder_ == null) {
          if (serverPlayerInfo_ != null) {
            serverPlayerInfo_ =
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.newBuilder(serverPlayerInfo_).mergeFrom(value).buildPartial();
          } else {
            serverPlayerInfo_ = value;
          }
          onChanged();
        } else {
          serverPlayerInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public Builder clearServerPlayerInfo() {
        if (serverPlayerInfoBuilder_ == null) {
          serverPlayerInfo_ = null;
          onChanged();
        } else {
          serverPlayerInfo_ = null;
          serverPlayerInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder getServerPlayerInfoBuilder() {
        
        onChanged();
        return getServerPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerPlayerInfoOrBuilder() {
        if (serverPlayerInfoBuilder_ != null) {
          return serverPlayerInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverPlayerInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverPlayerInfo_;
        }
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder> 
          getServerPlayerInfoFieldBuilder() {
        if (serverPlayerInfoBuilder_ == null) {
          serverPlayerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder>(
                  getServerPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          serverPlayerInfo_ = null;
        }
        return serverPlayerInfoBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat serverSendHallHeartBeat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder> serverSendHallHeartBeatBuilder_;
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public boolean hasServerSendHallHeartBeat() {
        return serverSendHallHeartBeatBuilder_ != null || serverSendHallHeartBeat_ != null;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat getServerSendHallHeartBeat() {
        if (serverSendHallHeartBeatBuilder_ == null) {
          return serverSendHallHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.getDefaultInstance() : serverSendHallHeartBeat_;
        } else {
          return serverSendHallHeartBeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public Builder setServerSendHallHeartBeat(com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat value) {
        if (serverSendHallHeartBeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSendHallHeartBeat_ = value;
          onChanged();
        } else {
          serverSendHallHeartBeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public Builder setServerSendHallHeartBeat(
          com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder builderForValue) {
        if (serverSendHallHeartBeatBuilder_ == null) {
          serverSendHallHeartBeat_ = builderForValue.build();
          onChanged();
        } else {
          serverSendHallHeartBeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public Builder mergeServerSendHallHeartBeat(com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat value) {
        if (serverSendHallHeartBeatBuilder_ == null) {
          if (serverSendHallHeartBeat_ != null) {
            serverSendHallHeartBeat_ =
              com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.newBuilder(serverSendHallHeartBeat_).mergeFrom(value).buildPartial();
          } else {
            serverSendHallHeartBeat_ = value;
          }
          onChanged();
        } else {
          serverSendHallHeartBeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public Builder clearServerSendHallHeartBeat() {
        if (serverSendHallHeartBeatBuilder_ == null) {
          serverSendHallHeartBeat_ = null;
          onChanged();
        } else {
          serverSendHallHeartBeat_ = null;
          serverSendHallHeartBeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder getServerSendHallHeartBeatBuilder() {
        
        onChanged();
        return getServerSendHallHeartBeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder getServerSendHallHeartBeatOrBuilder() {
        if (serverSendHallHeartBeatBuilder_ != null) {
          return serverSendHallHeartBeatBuilder_.getMessageOrBuilder();
        } else {
          return serverSendHallHeartBeat_ == null ?
              com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.getDefaultInstance() : serverSendHallHeartBeat_;
        }
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder> 
          getServerSendHallHeartBeatFieldBuilder() {
        if (serverSendHallHeartBeatBuilder_ == null) {
          serverSendHallHeartBeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder>(
                  getServerSendHallHeartBeat(),
                  getParentForChildren(),
                  isClean());
          serverSendHallHeartBeat_ = null;
        }
        return serverSendHallHeartBeatBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat serverSendGameHeartBeat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder> serverSendGameHeartBeatBuilder_;
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public boolean hasServerSendGameHeartBeat() {
        return serverSendGameHeartBeatBuilder_ != null || serverSendGameHeartBeat_ != null;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat getServerSendGameHeartBeat() {
        if (serverSendGameHeartBeatBuilder_ == null) {
          return serverSendGameHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.getDefaultInstance() : serverSendGameHeartBeat_;
        } else {
          return serverSendGameHeartBeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public Builder setServerSendGameHeartBeat(com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat value) {
        if (serverSendGameHeartBeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSendGameHeartBeat_ = value;
          onChanged();
        } else {
          serverSendGameHeartBeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public Builder setServerSendGameHeartBeat(
          com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder builderForValue) {
        if (serverSendGameHeartBeatBuilder_ == null) {
          serverSendGameHeartBeat_ = builderForValue.build();
          onChanged();
        } else {
          serverSendGameHeartBeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public Builder mergeServerSendGameHeartBeat(com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat value) {
        if (serverSendGameHeartBeatBuilder_ == null) {
          if (serverSendGameHeartBeat_ != null) {
            serverSendGameHeartBeat_ =
              com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.newBuilder(serverSendGameHeartBeat_).mergeFrom(value).buildPartial();
          } else {
            serverSendGameHeartBeat_ = value;
          }
          onChanged();
        } else {
          serverSendGameHeartBeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public Builder clearServerSendGameHeartBeat() {
        if (serverSendGameHeartBeatBuilder_ == null) {
          serverSendGameHeartBeat_ = null;
          onChanged();
        } else {
          serverSendGameHeartBeat_ = null;
          serverSendGameHeartBeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder getServerSendGameHeartBeatBuilder() {
        
        onChanged();
        return getServerSendGameHeartBeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder getServerSendGameHeartBeatOrBuilder() {
        if (serverSendGameHeartBeatBuilder_ != null) {
          return serverSendGameHeartBeatBuilder_.getMessageOrBuilder();
        } else {
          return serverSendGameHeartBeat_ == null ?
              com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.getDefaultInstance() : serverSendGameHeartBeat_;
        }
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder> 
          getServerSendGameHeartBeatFieldBuilder() {
        if (serverSendGameHeartBeatBuilder_ == null) {
          serverSendGameHeartBeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder>(
                  getServerSendGameHeartBeat(),
                  getParentForChildren(),
                  isClean());
          serverSendGameHeartBeat_ = null;
        }
        return serverSendGameHeartBeatBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ServerGetUserInfo serverGetUserInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder> serverGetUserInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public boolean hasServerGetUserInfo() {
        return serverGetUserInfoBuilder_ != null || serverGetUserInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerGetUserInfo() {
        if (serverGetUserInfoBuilder_ == null) {
          return serverGetUserInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverGetUserInfo_;
        } else {
          return serverGetUserInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public Builder setServerGetUserInfo(com.kys.util.netty.proto.UserProto.ServerGetUserInfo value) {
        if (serverGetUserInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetUserInfo_ = value;
          onChanged();
        } else {
          serverGetUserInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public Builder setServerGetUserInfo(
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder builderForValue) {
        if (serverGetUserInfoBuilder_ == null) {
          serverGetUserInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetUserInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public Builder mergeServerGetUserInfo(com.kys.util.netty.proto.UserProto.ServerGetUserInfo value) {
        if (serverGetUserInfoBuilder_ == null) {
          if (serverGetUserInfo_ != null) {
            serverGetUserInfo_ =
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.newBuilder(serverGetUserInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetUserInfo_ = value;
          }
          onChanged();
        } else {
          serverGetUserInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public Builder clearServerGetUserInfo() {
        if (serverGetUserInfoBuilder_ == null) {
          serverGetUserInfo_ = null;
          onChanged();
        } else {
          serverGetUserInfo_ = null;
          serverGetUserInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder getServerGetUserInfoBuilder() {
        
        onChanged();
        return getServerGetUserInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerGetUserInfoOrBuilder() {
        if (serverGetUserInfoBuilder_ != null) {
          return serverGetUserInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetUserInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverGetUserInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder> 
          getServerGetUserInfoFieldBuilder() {
        if (serverGetUserInfoBuilder_ == null) {
          serverGetUserInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder>(
                  getServerGetUserInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetUserInfo_ = null;
        }
        return serverGetUserInfoBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerQuickJoin serverQuickJoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerQuickJoin, com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder> serverQuickJoinBuilder_;
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public boolean hasServerQuickJoin() {
        return serverQuickJoinBuilder_ != null || serverQuickJoin_ != null;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQuickJoin getServerQuickJoin() {
        if (serverQuickJoinBuilder_ == null) {
          return serverQuickJoin_ == null ? com.kys.util.netty.proto.GameProto.ServerQuickJoin.getDefaultInstance() : serverQuickJoin_;
        } else {
          return serverQuickJoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public Builder setServerQuickJoin(com.kys.util.netty.proto.GameProto.ServerQuickJoin value) {
        if (serverQuickJoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQuickJoin_ = value;
          onChanged();
        } else {
          serverQuickJoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public Builder setServerQuickJoin(
          com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder builderForValue) {
        if (serverQuickJoinBuilder_ == null) {
          serverQuickJoin_ = builderForValue.build();
          onChanged();
        } else {
          serverQuickJoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public Builder mergeServerQuickJoin(com.kys.util.netty.proto.GameProto.ServerQuickJoin value) {
        if (serverQuickJoinBuilder_ == null) {
          if (serverQuickJoin_ != null) {
            serverQuickJoin_ =
              com.kys.util.netty.proto.GameProto.ServerQuickJoin.newBuilder(serverQuickJoin_).mergeFrom(value).buildPartial();
          } else {
            serverQuickJoin_ = value;
          }
          onChanged();
        } else {
          serverQuickJoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public Builder clearServerQuickJoin() {
        if (serverQuickJoinBuilder_ == null) {
          serverQuickJoin_ = null;
          onChanged();
        } else {
          serverQuickJoin_ = null;
          serverQuickJoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder getServerQuickJoinBuilder() {
        
        onChanged();
        return getServerQuickJoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder getServerQuickJoinOrBuilder() {
        if (serverQuickJoinBuilder_ != null) {
          return serverQuickJoinBuilder_.getMessageOrBuilder();
        } else {
          return serverQuickJoin_ == null ?
              com.kys.util.netty.proto.GameProto.ServerQuickJoin.getDefaultInstance() : serverQuickJoin_;
        }
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerQuickJoin, com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder> 
          getServerQuickJoinFieldBuilder() {
        if (serverQuickJoinBuilder_ == null) {
          serverQuickJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerQuickJoin, com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder>(
                  getServerQuickJoin(),
                  getParentForChildren(),
                  isClean());
          serverQuickJoin_ = null;
        }
        return serverQuickJoinBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerEnterRoom serverEnterRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerEnterRoom, com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder> serverEnterRoomBuilder_;
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public boolean hasServerEnterRoom() {
        return serverEnterRoomBuilder_ != null || serverEnterRoom_ != null;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerEnterRoom getServerEnterRoom() {
        if (serverEnterRoomBuilder_ == null) {
          return serverEnterRoom_ == null ? com.kys.util.netty.proto.GameProto.ServerEnterRoom.getDefaultInstance() : serverEnterRoom_;
        } else {
          return serverEnterRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public Builder setServerEnterRoom(com.kys.util.netty.proto.GameProto.ServerEnterRoom value) {
        if (serverEnterRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverEnterRoom_ = value;
          onChanged();
        } else {
          serverEnterRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public Builder setServerEnterRoom(
          com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder builderForValue) {
        if (serverEnterRoomBuilder_ == null) {
          serverEnterRoom_ = builderForValue.build();
          onChanged();
        } else {
          serverEnterRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public Builder mergeServerEnterRoom(com.kys.util.netty.proto.GameProto.ServerEnterRoom value) {
        if (serverEnterRoomBuilder_ == null) {
          if (serverEnterRoom_ != null) {
            serverEnterRoom_ =
              com.kys.util.netty.proto.GameProto.ServerEnterRoom.newBuilder(serverEnterRoom_).mergeFrom(value).buildPartial();
          } else {
            serverEnterRoom_ = value;
          }
          onChanged();
        } else {
          serverEnterRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public Builder clearServerEnterRoom() {
        if (serverEnterRoomBuilder_ == null) {
          serverEnterRoom_ = null;
          onChanged();
        } else {
          serverEnterRoom_ = null;
          serverEnterRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder getServerEnterRoomBuilder() {
        
        onChanged();
        return getServerEnterRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder getServerEnterRoomOrBuilder() {
        if (serverEnterRoomBuilder_ != null) {
          return serverEnterRoomBuilder_.getMessageOrBuilder();
        } else {
          return serverEnterRoom_ == null ?
              com.kys.util.netty.proto.GameProto.ServerEnterRoom.getDefaultInstance() : serverEnterRoom_;
        }
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerEnterRoom, com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder> 
          getServerEnterRoomFieldBuilder() {
        if (serverEnterRoomBuilder_ == null) {
          serverEnterRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerEnterRoom, com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder>(
                  getServerEnterRoom(),
                  getParentForChildren(),
                  isClean());
          serverEnterRoom_ = null;
        }
        return serverEnterRoomBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerRecoverGame serverRecoverGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerRecoverGame, com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder> serverRecoverGameBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public boolean hasServerRecoverGame() {
        return serverRecoverGameBuilder_ != null || serverRecoverGame_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRecoverGame getServerRecoverGame() {
        if (serverRecoverGameBuilder_ == null) {
          return serverRecoverGame_ == null ? com.kys.util.netty.proto.GameProto.ServerRecoverGame.getDefaultInstance() : serverRecoverGame_;
        } else {
          return serverRecoverGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public Builder setServerRecoverGame(com.kys.util.netty.proto.GameProto.ServerRecoverGame value) {
        if (serverRecoverGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverRecoverGame_ = value;
          onChanged();
        } else {
          serverRecoverGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public Builder setServerRecoverGame(
          com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder builderForValue) {
        if (serverRecoverGameBuilder_ == null) {
          serverRecoverGame_ = builderForValue.build();
          onChanged();
        } else {
          serverRecoverGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public Builder mergeServerRecoverGame(com.kys.util.netty.proto.GameProto.ServerRecoverGame value) {
        if (serverRecoverGameBuilder_ == null) {
          if (serverRecoverGame_ != null) {
            serverRecoverGame_ =
              com.kys.util.netty.proto.GameProto.ServerRecoverGame.newBuilder(serverRecoverGame_).mergeFrom(value).buildPartial();
          } else {
            serverRecoverGame_ = value;
          }
          onChanged();
        } else {
          serverRecoverGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public Builder clearServerRecoverGame() {
        if (serverRecoverGameBuilder_ == null) {
          serverRecoverGame_ = null;
          onChanged();
        } else {
          serverRecoverGame_ = null;
          serverRecoverGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder getServerRecoverGameBuilder() {
        
        onChanged();
        return getServerRecoverGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder getServerRecoverGameOrBuilder() {
        if (serverRecoverGameBuilder_ != null) {
          return serverRecoverGameBuilder_.getMessageOrBuilder();
        } else {
          return serverRecoverGame_ == null ?
              com.kys.util.netty.proto.GameProto.ServerRecoverGame.getDefaultInstance() : serverRecoverGame_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerRecoverGame, com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder> 
          getServerRecoverGameFieldBuilder() {
        if (serverRecoverGameBuilder_ == null) {
          serverRecoverGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerRecoverGame, com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder>(
                  getServerRecoverGame(),
                  getParentForChildren(),
                  isClean());
          serverRecoverGame_ = null;
        }
        return serverRecoverGameBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerDoCatch serverDoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerDoCatch, com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder, com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder> serverDoCatchBuilder_;
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public boolean hasServerDoCatch() {
        return serverDoCatchBuilder_ != null || serverDoCatch_ != null;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerDoCatch getServerDoCatch() {
        if (serverDoCatchBuilder_ == null) {
          return serverDoCatch_ == null ? com.kys.util.netty.proto.GameProto.ServerDoCatch.getDefaultInstance() : serverDoCatch_;
        } else {
          return serverDoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public Builder setServerDoCatch(com.kys.util.netty.proto.GameProto.ServerDoCatch value) {
        if (serverDoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDoCatch_ = value;
          onChanged();
        } else {
          serverDoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public Builder setServerDoCatch(
          com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder builderForValue) {
        if (serverDoCatchBuilder_ == null) {
          serverDoCatch_ = builderForValue.build();
          onChanged();
        } else {
          serverDoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public Builder mergeServerDoCatch(com.kys.util.netty.proto.GameProto.ServerDoCatch value) {
        if (serverDoCatchBuilder_ == null) {
          if (serverDoCatch_ != null) {
            serverDoCatch_ =
              com.kys.util.netty.proto.GameProto.ServerDoCatch.newBuilder(serverDoCatch_).mergeFrom(value).buildPartial();
          } else {
            serverDoCatch_ = value;
          }
          onChanged();
        } else {
          serverDoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public Builder clearServerDoCatch() {
        if (serverDoCatchBuilder_ == null) {
          serverDoCatch_ = null;
          onChanged();
        } else {
          serverDoCatch_ = null;
          serverDoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder getServerDoCatchBuilder() {
        
        onChanged();
        return getServerDoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder getServerDoCatchOrBuilder() {
        if (serverDoCatchBuilder_ != null) {
          return serverDoCatchBuilder_.getMessageOrBuilder();
        } else {
          return serverDoCatch_ == null ?
              com.kys.util.netty.proto.GameProto.ServerDoCatch.getDefaultInstance() : serverDoCatch_;
        }
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerDoCatch, com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder, com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder> 
          getServerDoCatchFieldBuilder() {
        if (serverDoCatchBuilder_ == null) {
          serverDoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerDoCatch, com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder, com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder>(
                  getServerDoCatch(),
                  getParentForChildren(),
                  isClean());
          serverDoCatch_ = null;
        }
        return serverDoCatchBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerPlayCards serverPlayCards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerPlayCards, com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder, com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder> serverPlayCardsBuilder_;
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public boolean hasServerPlayCards() {
        return serverPlayCardsBuilder_ != null || serverPlayCards_ != null;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerPlayCards getServerPlayCards() {
        if (serverPlayCardsBuilder_ == null) {
          return serverPlayCards_ == null ? com.kys.util.netty.proto.GameProto.ServerPlayCards.getDefaultInstance() : serverPlayCards_;
        } else {
          return serverPlayCardsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public Builder setServerPlayCards(com.kys.util.netty.proto.GameProto.ServerPlayCards value) {
        if (serverPlayCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverPlayCards_ = value;
          onChanged();
        } else {
          serverPlayCardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public Builder setServerPlayCards(
          com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder builderForValue) {
        if (serverPlayCardsBuilder_ == null) {
          serverPlayCards_ = builderForValue.build();
          onChanged();
        } else {
          serverPlayCardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public Builder mergeServerPlayCards(com.kys.util.netty.proto.GameProto.ServerPlayCards value) {
        if (serverPlayCardsBuilder_ == null) {
          if (serverPlayCards_ != null) {
            serverPlayCards_ =
              com.kys.util.netty.proto.GameProto.ServerPlayCards.newBuilder(serverPlayCards_).mergeFrom(value).buildPartial();
          } else {
            serverPlayCards_ = value;
          }
          onChanged();
        } else {
          serverPlayCardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public Builder clearServerPlayCards() {
        if (serverPlayCardsBuilder_ == null) {
          serverPlayCards_ = null;
          onChanged();
        } else {
          serverPlayCards_ = null;
          serverPlayCardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder getServerPlayCardsBuilder() {
        
        onChanged();
        return getServerPlayCardsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder getServerPlayCardsOrBuilder() {
        if (serverPlayCardsBuilder_ != null) {
          return serverPlayCardsBuilder_.getMessageOrBuilder();
        } else {
          return serverPlayCards_ == null ?
              com.kys.util.netty.proto.GameProto.ServerPlayCards.getDefaultInstance() : serverPlayCards_;
        }
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerPlayCards, com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder, com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder> 
          getServerPlayCardsFieldBuilder() {
        if (serverPlayCardsBuilder_ == null) {
          serverPlayCardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerPlayCards, com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder, com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder>(
                  getServerPlayCards(),
                  getParentForChildren(),
                  isClean());
          serverPlayCards_ = null;
        }
        return serverPlayCardsBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerAutoPlay serverAutoPlay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerAutoPlay, com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder> serverAutoPlayBuilder_;
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public boolean hasServerAutoPlay() {
        return serverAutoPlayBuilder_ != null || serverAutoPlay_ != null;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerAutoPlay getServerAutoPlay() {
        if (serverAutoPlayBuilder_ == null) {
          return serverAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.ServerAutoPlay.getDefaultInstance() : serverAutoPlay_;
        } else {
          return serverAutoPlayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public Builder setServerAutoPlay(com.kys.util.netty.proto.GameProto.ServerAutoPlay value) {
        if (serverAutoPlayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverAutoPlay_ = value;
          onChanged();
        } else {
          serverAutoPlayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public Builder setServerAutoPlay(
          com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder builderForValue) {
        if (serverAutoPlayBuilder_ == null) {
          serverAutoPlay_ = builderForValue.build();
          onChanged();
        } else {
          serverAutoPlayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public Builder mergeServerAutoPlay(com.kys.util.netty.proto.GameProto.ServerAutoPlay value) {
        if (serverAutoPlayBuilder_ == null) {
          if (serverAutoPlay_ != null) {
            serverAutoPlay_ =
              com.kys.util.netty.proto.GameProto.ServerAutoPlay.newBuilder(serverAutoPlay_).mergeFrom(value).buildPartial();
          } else {
            serverAutoPlay_ = value;
          }
          onChanged();
        } else {
          serverAutoPlayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public Builder clearServerAutoPlay() {
        if (serverAutoPlayBuilder_ == null) {
          serverAutoPlay_ = null;
          onChanged();
        } else {
          serverAutoPlay_ = null;
          serverAutoPlayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder getServerAutoPlayBuilder() {
        
        onChanged();
        return getServerAutoPlayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder getServerAutoPlayOrBuilder() {
        if (serverAutoPlayBuilder_ != null) {
          return serverAutoPlayBuilder_.getMessageOrBuilder();
        } else {
          return serverAutoPlay_ == null ?
              com.kys.util.netty.proto.GameProto.ServerAutoPlay.getDefaultInstance() : serverAutoPlay_;
        }
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerAutoPlay, com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder> 
          getServerAutoPlayFieldBuilder() {
        if (serverAutoPlayBuilder_ == null) {
          serverAutoPlayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerAutoPlay, com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder>(
                  getServerAutoPlay(),
                  getParentForChildren(),
                  isClean());
          serverAutoPlay_ = null;
        }
        return serverAutoPlayBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerLeaveRoom serverLeaveRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerLeaveRoom, com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder> serverLeaveRoomBuilder_;
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public boolean hasServerLeaveRoom() {
        return serverLeaveRoomBuilder_ != null || serverLeaveRoom_ != null;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerLeaveRoom getServerLeaveRoom() {
        if (serverLeaveRoomBuilder_ == null) {
          return serverLeaveRoom_ == null ? com.kys.util.netty.proto.GameProto.ServerLeaveRoom.getDefaultInstance() : serverLeaveRoom_;
        } else {
          return serverLeaveRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public Builder setServerLeaveRoom(com.kys.util.netty.proto.GameProto.ServerLeaveRoom value) {
        if (serverLeaveRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverLeaveRoom_ = value;
          onChanged();
        } else {
          serverLeaveRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public Builder setServerLeaveRoom(
          com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder builderForValue) {
        if (serverLeaveRoomBuilder_ == null) {
          serverLeaveRoom_ = builderForValue.build();
          onChanged();
        } else {
          serverLeaveRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public Builder mergeServerLeaveRoom(com.kys.util.netty.proto.GameProto.ServerLeaveRoom value) {
        if (serverLeaveRoomBuilder_ == null) {
          if (serverLeaveRoom_ != null) {
            serverLeaveRoom_ =
              com.kys.util.netty.proto.GameProto.ServerLeaveRoom.newBuilder(serverLeaveRoom_).mergeFrom(value).buildPartial();
          } else {
            serverLeaveRoom_ = value;
          }
          onChanged();
        } else {
          serverLeaveRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public Builder clearServerLeaveRoom() {
        if (serverLeaveRoomBuilder_ == null) {
          serverLeaveRoom_ = null;
          onChanged();
        } else {
          serverLeaveRoom_ = null;
          serverLeaveRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder getServerLeaveRoomBuilder() {
        
        onChanged();
        return getServerLeaveRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder getServerLeaveRoomOrBuilder() {
        if (serverLeaveRoomBuilder_ != null) {
          return serverLeaveRoomBuilder_.getMessageOrBuilder();
        } else {
          return serverLeaveRoom_ == null ?
              com.kys.util.netty.proto.GameProto.ServerLeaveRoom.getDefaultInstance() : serverLeaveRoom_;
        }
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerLeaveRoom, com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder> 
          getServerLeaveRoomFieldBuilder() {
        if (serverLeaveRoomBuilder_ == null) {
          serverLeaveRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerLeaveRoom, com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder>(
                  getServerLeaveRoom(),
                  getParentForChildren(),
                  isClean());
          serverLeaveRoom_ = null;
        }
        return serverLeaveRoomBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerCancleJoin serverCancleJoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerCancleJoin, com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder> serverCancleJoinBuilder_;
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public boolean hasServerCancleJoin() {
        return serverCancleJoinBuilder_ != null || serverCancleJoin_ != null;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerCancleJoin getServerCancleJoin() {
        if (serverCancleJoinBuilder_ == null) {
          return serverCancleJoin_ == null ? com.kys.util.netty.proto.GameProto.ServerCancleJoin.getDefaultInstance() : serverCancleJoin_;
        } else {
          return serverCancleJoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public Builder setServerCancleJoin(com.kys.util.netty.proto.GameProto.ServerCancleJoin value) {
        if (serverCancleJoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverCancleJoin_ = value;
          onChanged();
        } else {
          serverCancleJoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public Builder setServerCancleJoin(
          com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder builderForValue) {
        if (serverCancleJoinBuilder_ == null) {
          serverCancleJoin_ = builderForValue.build();
          onChanged();
        } else {
          serverCancleJoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public Builder mergeServerCancleJoin(com.kys.util.netty.proto.GameProto.ServerCancleJoin value) {
        if (serverCancleJoinBuilder_ == null) {
          if (serverCancleJoin_ != null) {
            serverCancleJoin_ =
              com.kys.util.netty.proto.GameProto.ServerCancleJoin.newBuilder(serverCancleJoin_).mergeFrom(value).buildPartial();
          } else {
            serverCancleJoin_ = value;
          }
          onChanged();
        } else {
          serverCancleJoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public Builder clearServerCancleJoin() {
        if (serverCancleJoinBuilder_ == null) {
          serverCancleJoin_ = null;
          onChanged();
        } else {
          serverCancleJoin_ = null;
          serverCancleJoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder getServerCancleJoinBuilder() {
        
        onChanged();
        return getServerCancleJoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder getServerCancleJoinOrBuilder() {
        if (serverCancleJoinBuilder_ != null) {
          return serverCancleJoinBuilder_.getMessageOrBuilder();
        } else {
          return serverCancleJoin_ == null ?
              com.kys.util.netty.proto.GameProto.ServerCancleJoin.getDefaultInstance() : serverCancleJoin_;
        }
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerCancleJoin, com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder> 
          getServerCancleJoinFieldBuilder() {
        if (serverCancleJoinBuilder_ == null) {
          serverCancleJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerCancleJoin, com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder>(
                  getServerCancleJoin(),
                  getParentForChildren(),
                  isClean());
          serverCancleJoin_ = null;
        }
        return serverCancleJoinBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerQueryIndex serverQueryIndex_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerQueryIndex, com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder> serverQueryIndexBuilder_;
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public boolean hasServerQueryIndex() {
        return serverQueryIndexBuilder_ != null || serverQueryIndex_ != null;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQueryIndex getServerQueryIndex() {
        if (serverQueryIndexBuilder_ == null) {
          return serverQueryIndex_ == null ? com.kys.util.netty.proto.GameProto.ServerQueryIndex.getDefaultInstance() : serverQueryIndex_;
        } else {
          return serverQueryIndexBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public Builder setServerQueryIndex(com.kys.util.netty.proto.GameProto.ServerQueryIndex value) {
        if (serverQueryIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryIndex_ = value;
          onChanged();
        } else {
          serverQueryIndexBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public Builder setServerQueryIndex(
          com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder builderForValue) {
        if (serverQueryIndexBuilder_ == null) {
          serverQueryIndex_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryIndexBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public Builder mergeServerQueryIndex(com.kys.util.netty.proto.GameProto.ServerQueryIndex value) {
        if (serverQueryIndexBuilder_ == null) {
          if (serverQueryIndex_ != null) {
            serverQueryIndex_ =
              com.kys.util.netty.proto.GameProto.ServerQueryIndex.newBuilder(serverQueryIndex_).mergeFrom(value).buildPartial();
          } else {
            serverQueryIndex_ = value;
          }
          onChanged();
        } else {
          serverQueryIndexBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public Builder clearServerQueryIndex() {
        if (serverQueryIndexBuilder_ == null) {
          serverQueryIndex_ = null;
          onChanged();
        } else {
          serverQueryIndex_ = null;
          serverQueryIndexBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder getServerQueryIndexBuilder() {
        
        onChanged();
        return getServerQueryIndexFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder getServerQueryIndexOrBuilder() {
        if (serverQueryIndexBuilder_ != null) {
          return serverQueryIndexBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryIndex_ == null ?
              com.kys.util.netty.proto.GameProto.ServerQueryIndex.getDefaultInstance() : serverQueryIndex_;
        }
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerQueryIndex, com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder> 
          getServerQueryIndexFieldBuilder() {
        if (serverQueryIndexBuilder_ == null) {
          serverQueryIndexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerQueryIndex, com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder>(
                  getServerQueryIndex(),
                  getParentForChildren(),
                  isClean());
          serverQueryIndex_ = null;
        }
        return serverQueryIndexBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerRetryReturnGame serverRetryReturnGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerRetryReturnGame, com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder> serverRetryReturnGameBuilder_;
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public boolean hasServerRetryReturnGame() {
        return serverRetryReturnGameBuilder_ != null || serverRetryReturnGame_ != null;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRetryReturnGame getServerRetryReturnGame() {
        if (serverRetryReturnGameBuilder_ == null) {
          return serverRetryReturnGame_ == null ? com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.getDefaultInstance() : serverRetryReturnGame_;
        } else {
          return serverRetryReturnGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public Builder setServerRetryReturnGame(com.kys.util.netty.proto.GameProto.ServerRetryReturnGame value) {
        if (serverRetryReturnGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverRetryReturnGame_ = value;
          onChanged();
        } else {
          serverRetryReturnGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public Builder setServerRetryReturnGame(
          com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder builderForValue) {
        if (serverRetryReturnGameBuilder_ == null) {
          serverRetryReturnGame_ = builderForValue.build();
          onChanged();
        } else {
          serverRetryReturnGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public Builder mergeServerRetryReturnGame(com.kys.util.netty.proto.GameProto.ServerRetryReturnGame value) {
        if (serverRetryReturnGameBuilder_ == null) {
          if (serverRetryReturnGame_ != null) {
            serverRetryReturnGame_ =
              com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.newBuilder(serverRetryReturnGame_).mergeFrom(value).buildPartial();
          } else {
            serverRetryReturnGame_ = value;
          }
          onChanged();
        } else {
          serverRetryReturnGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public Builder clearServerRetryReturnGame() {
        if (serverRetryReturnGameBuilder_ == null) {
          serverRetryReturnGame_ = null;
          onChanged();
        } else {
          serverRetryReturnGame_ = null;
          serverRetryReturnGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder getServerRetryReturnGameBuilder() {
        
        onChanged();
        return getServerRetryReturnGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder getServerRetryReturnGameOrBuilder() {
        if (serverRetryReturnGameBuilder_ != null) {
          return serverRetryReturnGameBuilder_.getMessageOrBuilder();
        } else {
          return serverRetryReturnGame_ == null ?
              com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.getDefaultInstance() : serverRetryReturnGame_;
        }
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerRetryReturnGame, com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder> 
          getServerRetryReturnGameFieldBuilder() {
        if (serverRetryReturnGameBuilder_ == null) {
          serverRetryReturnGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerRetryReturnGame, com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder>(
                  getServerRetryReturnGame(),
                  getParentForChildren(),
                  isClean());
          serverRetryReturnGame_ = null;
        }
        return serverRetryReturnGameBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetRankList serverGetRankList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRankList, com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder, com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder> serverGetRankListBuilder_;
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public boolean hasServerGetRankList() {
        return serverGetRankListBuilder_ != null || serverGetRankList_ != null;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRankList getServerGetRankList() {
        if (serverGetRankListBuilder_ == null) {
          return serverGetRankList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRankList.getDefaultInstance() : serverGetRankList_;
        } else {
          return serverGetRankListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public Builder setServerGetRankList(com.kys.util.netty.proto.HallProto.ServerGetRankList value) {
        if (serverGetRankListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetRankList_ = value;
          onChanged();
        } else {
          serverGetRankListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public Builder setServerGetRankList(
          com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder builderForValue) {
        if (serverGetRankListBuilder_ == null) {
          serverGetRankList_ = builderForValue.build();
          onChanged();
        } else {
          serverGetRankListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public Builder mergeServerGetRankList(com.kys.util.netty.proto.HallProto.ServerGetRankList value) {
        if (serverGetRankListBuilder_ == null) {
          if (serverGetRankList_ != null) {
            serverGetRankList_ =
              com.kys.util.netty.proto.HallProto.ServerGetRankList.newBuilder(serverGetRankList_).mergeFrom(value).buildPartial();
          } else {
            serverGetRankList_ = value;
          }
          onChanged();
        } else {
          serverGetRankListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public Builder clearServerGetRankList() {
        if (serverGetRankListBuilder_ == null) {
          serverGetRankList_ = null;
          onChanged();
        } else {
          serverGetRankList_ = null;
          serverGetRankListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder getServerGetRankListBuilder() {
        
        onChanged();
        return getServerGetRankListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder getServerGetRankListOrBuilder() {
        if (serverGetRankListBuilder_ != null) {
          return serverGetRankListBuilder_.getMessageOrBuilder();
        } else {
          return serverGetRankList_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetRankList.getDefaultInstance() : serverGetRankList_;
        }
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRankList, com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder, com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder> 
          getServerGetRankListFieldBuilder() {
        if (serverGetRankListBuilder_ == null) {
          serverGetRankListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetRankList, com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder, com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder>(
                  getServerGetRankList(),
                  getParentForChildren(),
                  isClean());
          serverGetRankList_ = null;
        }
        return serverGetRankListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerRewardMessage serverRewardMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerRewardMessage, com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder> serverRewardMessageBuilder_;
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public boolean hasServerRewardMessage() {
        return serverRewardMessageBuilder_ != null || serverRewardMessage_ != null;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerRewardMessage getServerRewardMessage() {
        if (serverRewardMessageBuilder_ == null) {
          return serverRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.ServerRewardMessage.getDefaultInstance() : serverRewardMessage_;
        } else {
          return serverRewardMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public Builder setServerRewardMessage(com.kys.util.netty.proto.HallProto.ServerRewardMessage value) {
        if (serverRewardMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverRewardMessage_ = value;
          onChanged();
        } else {
          serverRewardMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public Builder setServerRewardMessage(
          com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder builderForValue) {
        if (serverRewardMessageBuilder_ == null) {
          serverRewardMessage_ = builderForValue.build();
          onChanged();
        } else {
          serverRewardMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public Builder mergeServerRewardMessage(com.kys.util.netty.proto.HallProto.ServerRewardMessage value) {
        if (serverRewardMessageBuilder_ == null) {
          if (serverRewardMessage_ != null) {
            serverRewardMessage_ =
              com.kys.util.netty.proto.HallProto.ServerRewardMessage.newBuilder(serverRewardMessage_).mergeFrom(value).buildPartial();
          } else {
            serverRewardMessage_ = value;
          }
          onChanged();
        } else {
          serverRewardMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public Builder clearServerRewardMessage() {
        if (serverRewardMessageBuilder_ == null) {
          serverRewardMessage_ = null;
          onChanged();
        } else {
          serverRewardMessage_ = null;
          serverRewardMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder getServerRewardMessageBuilder() {
        
        onChanged();
        return getServerRewardMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder getServerRewardMessageOrBuilder() {
        if (serverRewardMessageBuilder_ != null) {
          return serverRewardMessageBuilder_.getMessageOrBuilder();
        } else {
          return serverRewardMessage_ == null ?
              com.kys.util.netty.proto.HallProto.ServerRewardMessage.getDefaultInstance() : serverRewardMessage_;
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerRewardMessage, com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder> 
          getServerRewardMessageFieldBuilder() {
        if (serverRewardMessageBuilder_ == null) {
          serverRewardMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerRewardMessage, com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder>(
                  getServerRewardMessage(),
                  getParentForChildren(),
                  isClean());
          serverRewardMessage_ = null;
        }
        return serverRewardMessageBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetRoomConfig serverGetRoomConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder> serverGetRoomConfigBuilder_;
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public boolean hasServerGetRoomConfig() {
        return serverGetRoomConfigBuilder_ != null || serverGetRoomConfig_ != null;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomConfig getServerGetRoomConfig() {
        if (serverGetRoomConfigBuilder_ == null) {
          return serverGetRoomConfig_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.getDefaultInstance() : serverGetRoomConfig_;
        } else {
          return serverGetRoomConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public Builder setServerGetRoomConfig(com.kys.util.netty.proto.HallProto.ServerGetRoomConfig value) {
        if (serverGetRoomConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetRoomConfig_ = value;
          onChanged();
        } else {
          serverGetRoomConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public Builder setServerGetRoomConfig(
          com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder builderForValue) {
        if (serverGetRoomConfigBuilder_ == null) {
          serverGetRoomConfig_ = builderForValue.build();
          onChanged();
        } else {
          serverGetRoomConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public Builder mergeServerGetRoomConfig(com.kys.util.netty.proto.HallProto.ServerGetRoomConfig value) {
        if (serverGetRoomConfigBuilder_ == null) {
          if (serverGetRoomConfig_ != null) {
            serverGetRoomConfig_ =
              com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.newBuilder(serverGetRoomConfig_).mergeFrom(value).buildPartial();
          } else {
            serverGetRoomConfig_ = value;
          }
          onChanged();
        } else {
          serverGetRoomConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public Builder clearServerGetRoomConfig() {
        if (serverGetRoomConfigBuilder_ == null) {
          serverGetRoomConfig_ = null;
          onChanged();
        } else {
          serverGetRoomConfig_ = null;
          serverGetRoomConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder getServerGetRoomConfigBuilder() {
        
        onChanged();
        return getServerGetRoomConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder getServerGetRoomConfigOrBuilder() {
        if (serverGetRoomConfigBuilder_ != null) {
          return serverGetRoomConfigBuilder_.getMessageOrBuilder();
        } else {
          return serverGetRoomConfig_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.getDefaultInstance() : serverGetRoomConfig_;
        }
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder> 
          getServerGetRoomConfigFieldBuilder() {
        if (serverGetRoomConfigBuilder_ == null) {
          serverGetRoomConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetRoomConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder>(
                  getServerGetRoomConfig(),
                  getParentForChildren(),
                  isClean());
          serverGetRoomConfig_ = null;
        }
        return serverGetRoomConfigBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond serverGetMonthCardDiamond_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder> serverGetMonthCardDiamondBuilder_;
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public boolean hasServerGetMonthCardDiamond() {
        return serverGetMonthCardDiamondBuilder_ != null || serverGetMonthCardDiamond_ != null;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond getServerGetMonthCardDiamond() {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          return serverGetMonthCardDiamond_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.getDefaultInstance() : serverGetMonthCardDiamond_;
        } else {
          return serverGetMonthCardDiamondBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public Builder setServerGetMonthCardDiamond(com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond value) {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMonthCardDiamond_ = value;
          onChanged();
        } else {
          serverGetMonthCardDiamondBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public Builder setServerGetMonthCardDiamond(
          com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder builderForValue) {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          serverGetMonthCardDiamond_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMonthCardDiamondBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public Builder mergeServerGetMonthCardDiamond(com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond value) {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          if (serverGetMonthCardDiamond_ != null) {
            serverGetMonthCardDiamond_ =
              com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.newBuilder(serverGetMonthCardDiamond_).mergeFrom(value).buildPartial();
          } else {
            serverGetMonthCardDiamond_ = value;
          }
          onChanged();
        } else {
          serverGetMonthCardDiamondBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public Builder clearServerGetMonthCardDiamond() {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          serverGetMonthCardDiamond_ = null;
          onChanged();
        } else {
          serverGetMonthCardDiamond_ = null;
          serverGetMonthCardDiamondBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder getServerGetMonthCardDiamondBuilder() {
        
        onChanged();
        return getServerGetMonthCardDiamondFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder getServerGetMonthCardDiamondOrBuilder() {
        if (serverGetMonthCardDiamondBuilder_ != null) {
          return serverGetMonthCardDiamondBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMonthCardDiamond_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.getDefaultInstance() : serverGetMonthCardDiamond_;
        }
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder> 
          getServerGetMonthCardDiamondFieldBuilder() {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          serverGetMonthCardDiamondBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder>(
                  getServerGetMonthCardDiamond(),
                  getParentForChildren(),
                  isClean());
          serverGetMonthCardDiamond_ = null;
        }
        return serverGetMonthCardDiamondBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetLotteryCount serverGetLotteryCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetLotteryCount, com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder> serverGetLotteryCountBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public boolean hasServerGetLotteryCount() {
        return serverGetLotteryCountBuilder_ != null || serverGetLotteryCount_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetLotteryCount getServerGetLotteryCount() {
        if (serverGetLotteryCountBuilder_ == null) {
          return serverGetLotteryCount_ == null ? com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.getDefaultInstance() : serverGetLotteryCount_;
        } else {
          return serverGetLotteryCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public Builder setServerGetLotteryCount(com.kys.util.netty.proto.HallProto.ServerGetLotteryCount value) {
        if (serverGetLotteryCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetLotteryCount_ = value;
          onChanged();
        } else {
          serverGetLotteryCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public Builder setServerGetLotteryCount(
          com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder builderForValue) {
        if (serverGetLotteryCountBuilder_ == null) {
          serverGetLotteryCount_ = builderForValue.build();
          onChanged();
        } else {
          serverGetLotteryCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public Builder mergeServerGetLotteryCount(com.kys.util.netty.proto.HallProto.ServerGetLotteryCount value) {
        if (serverGetLotteryCountBuilder_ == null) {
          if (serverGetLotteryCount_ != null) {
            serverGetLotteryCount_ =
              com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.newBuilder(serverGetLotteryCount_).mergeFrom(value).buildPartial();
          } else {
            serverGetLotteryCount_ = value;
          }
          onChanged();
        } else {
          serverGetLotteryCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public Builder clearServerGetLotteryCount() {
        if (serverGetLotteryCountBuilder_ == null) {
          serverGetLotteryCount_ = null;
          onChanged();
        } else {
          serverGetLotteryCount_ = null;
          serverGetLotteryCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder getServerGetLotteryCountBuilder() {
        
        onChanged();
        return getServerGetLotteryCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder getServerGetLotteryCountOrBuilder() {
        if (serverGetLotteryCountBuilder_ != null) {
          return serverGetLotteryCountBuilder_.getMessageOrBuilder();
        } else {
          return serverGetLotteryCount_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.getDefaultInstance() : serverGetLotteryCount_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取红包比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetLotteryCount, com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder> 
          getServerGetLotteryCountFieldBuilder() {
        if (serverGetLotteryCountBuilder_ == null) {
          serverGetLotteryCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetLotteryCount, com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder>(
                  getServerGetLotteryCount(),
                  getParentForChildren(),
                  isClean());
          serverGetLotteryCount_ = null;
        }
        return serverGetLotteryCountBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetRoomInfo serverGetRoomInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomInfo, com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder> serverGetRoomInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public boolean hasServerGetRoomInfo() {
        return serverGetRoomInfoBuilder_ != null || serverGetRoomInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomInfo getServerGetRoomInfo() {
        if (serverGetRoomInfoBuilder_ == null) {
          return serverGetRoomInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.getDefaultInstance() : serverGetRoomInfo_;
        } else {
          return serverGetRoomInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public Builder setServerGetRoomInfo(com.kys.util.netty.proto.HallProto.ServerGetRoomInfo value) {
        if (serverGetRoomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetRoomInfo_ = value;
          onChanged();
        } else {
          serverGetRoomInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public Builder setServerGetRoomInfo(
          com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder builderForValue) {
        if (serverGetRoomInfoBuilder_ == null) {
          serverGetRoomInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetRoomInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public Builder mergeServerGetRoomInfo(com.kys.util.netty.proto.HallProto.ServerGetRoomInfo value) {
        if (serverGetRoomInfoBuilder_ == null) {
          if (serverGetRoomInfo_ != null) {
            serverGetRoomInfo_ =
              com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.newBuilder(serverGetRoomInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetRoomInfo_ = value;
          }
          onChanged();
        } else {
          serverGetRoomInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public Builder clearServerGetRoomInfo() {
        if (serverGetRoomInfoBuilder_ == null) {
          serverGetRoomInfo_ = null;
          onChanged();
        } else {
          serverGetRoomInfo_ = null;
          serverGetRoomInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder getServerGetRoomInfoBuilder() {
        
        onChanged();
        return getServerGetRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder getServerGetRoomInfoOrBuilder() {
        if (serverGetRoomInfoBuilder_ != null) {
          return serverGetRoomInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetRoomInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.getDefaultInstance() : serverGetRoomInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomInfo, com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder> 
          getServerGetRoomInfoFieldBuilder() {
        if (serverGetRoomInfoBuilder_ == null) {
          serverGetRoomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetRoomInfo, com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder>(
                  getServerGetRoomInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetRoomInfo_ = null;
        }
        return serverGetRoomInfoBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerSendTelCode serverSendTelCode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSendTelCode, com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder> serverSendTelCodeBuilder_;
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public boolean hasServerSendTelCode() {
        return serverSendTelCodeBuilder_ != null || serverSendTelCode_ != null;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSendTelCode getServerSendTelCode() {
        if (serverSendTelCodeBuilder_ == null) {
          return serverSendTelCode_ == null ? com.kys.util.netty.proto.HallProto.ServerSendTelCode.getDefaultInstance() : serverSendTelCode_;
        } else {
          return serverSendTelCodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public Builder setServerSendTelCode(com.kys.util.netty.proto.HallProto.ServerSendTelCode value) {
        if (serverSendTelCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSendTelCode_ = value;
          onChanged();
        } else {
          serverSendTelCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public Builder setServerSendTelCode(
          com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder builderForValue) {
        if (serverSendTelCodeBuilder_ == null) {
          serverSendTelCode_ = builderForValue.build();
          onChanged();
        } else {
          serverSendTelCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public Builder mergeServerSendTelCode(com.kys.util.netty.proto.HallProto.ServerSendTelCode value) {
        if (serverSendTelCodeBuilder_ == null) {
          if (serverSendTelCode_ != null) {
            serverSendTelCode_ =
              com.kys.util.netty.proto.HallProto.ServerSendTelCode.newBuilder(serverSendTelCode_).mergeFrom(value).buildPartial();
          } else {
            serverSendTelCode_ = value;
          }
          onChanged();
        } else {
          serverSendTelCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public Builder clearServerSendTelCode() {
        if (serverSendTelCodeBuilder_ == null) {
          serverSendTelCode_ = null;
          onChanged();
        } else {
          serverSendTelCode_ = null;
          serverSendTelCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder getServerSendTelCodeBuilder() {
        
        onChanged();
        return getServerSendTelCodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder getServerSendTelCodeOrBuilder() {
        if (serverSendTelCodeBuilder_ != null) {
          return serverSendTelCodeBuilder_.getMessageOrBuilder();
        } else {
          return serverSendTelCode_ == null ?
              com.kys.util.netty.proto.HallProto.ServerSendTelCode.getDefaultInstance() : serverSendTelCode_;
        }
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSendTelCode, com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder> 
          getServerSendTelCodeFieldBuilder() {
        if (serverSendTelCodeBuilder_ == null) {
          serverSendTelCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerSendTelCode, com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder>(
                  getServerSendTelCode(),
                  getParentForChildren(),
                  isClean());
          serverSendTelCode_ = null;
        }
        return serverSendTelCodeBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerVerifyTelCode serverVerifyTelCode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerVerifyTelCode, com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder> serverVerifyTelCodeBuilder_;
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public boolean hasServerVerifyTelCode() {
        return serverVerifyTelCodeBuilder_ != null || serverVerifyTelCode_ != null;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerVerifyTelCode getServerVerifyTelCode() {
        if (serverVerifyTelCodeBuilder_ == null) {
          return serverVerifyTelCode_ == null ? com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.getDefaultInstance() : serverVerifyTelCode_;
        } else {
          return serverVerifyTelCodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public Builder setServerVerifyTelCode(com.kys.util.netty.proto.HallProto.ServerVerifyTelCode value) {
        if (serverVerifyTelCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverVerifyTelCode_ = value;
          onChanged();
        } else {
          serverVerifyTelCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public Builder setServerVerifyTelCode(
          com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder builderForValue) {
        if (serverVerifyTelCodeBuilder_ == null) {
          serverVerifyTelCode_ = builderForValue.build();
          onChanged();
        } else {
          serverVerifyTelCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public Builder mergeServerVerifyTelCode(com.kys.util.netty.proto.HallProto.ServerVerifyTelCode value) {
        if (serverVerifyTelCodeBuilder_ == null) {
          if (serverVerifyTelCode_ != null) {
            serverVerifyTelCode_ =
              com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.newBuilder(serverVerifyTelCode_).mergeFrom(value).buildPartial();
          } else {
            serverVerifyTelCode_ = value;
          }
          onChanged();
        } else {
          serverVerifyTelCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public Builder clearServerVerifyTelCode() {
        if (serverVerifyTelCodeBuilder_ == null) {
          serverVerifyTelCode_ = null;
          onChanged();
        } else {
          serverVerifyTelCode_ = null;
          serverVerifyTelCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder getServerVerifyTelCodeBuilder() {
        
        onChanged();
        return getServerVerifyTelCodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder getServerVerifyTelCodeOrBuilder() {
        if (serverVerifyTelCodeBuilder_ != null) {
          return serverVerifyTelCodeBuilder_.getMessageOrBuilder();
        } else {
          return serverVerifyTelCode_ == null ?
              com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.getDefaultInstance() : serverVerifyTelCode_;
        }
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerVerifyTelCode, com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder> 
          getServerVerifyTelCodeFieldBuilder() {
        if (serverVerifyTelCodeBuilder_ == null) {
          serverVerifyTelCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerVerifyTelCode, com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder>(
                  getServerVerifyTelCode(),
                  getParentForChildren(),
                  isClean());
          serverVerifyTelCode_ = null;
        }
        return serverVerifyTelCodeBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerSharePackage serverSharePackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSharePackage, com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder, com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder> serverSharePackageBuilder_;
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public boolean hasServerSharePackage() {
        return serverSharePackageBuilder_ != null || serverSharePackage_ != null;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSharePackage getServerSharePackage() {
        if (serverSharePackageBuilder_ == null) {
          return serverSharePackage_ == null ? com.kys.util.netty.proto.HallProto.ServerSharePackage.getDefaultInstance() : serverSharePackage_;
        } else {
          return serverSharePackageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public Builder setServerSharePackage(com.kys.util.netty.proto.HallProto.ServerSharePackage value) {
        if (serverSharePackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSharePackage_ = value;
          onChanged();
        } else {
          serverSharePackageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public Builder setServerSharePackage(
          com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder builderForValue) {
        if (serverSharePackageBuilder_ == null) {
          serverSharePackage_ = builderForValue.build();
          onChanged();
        } else {
          serverSharePackageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public Builder mergeServerSharePackage(com.kys.util.netty.proto.HallProto.ServerSharePackage value) {
        if (serverSharePackageBuilder_ == null) {
          if (serverSharePackage_ != null) {
            serverSharePackage_ =
              com.kys.util.netty.proto.HallProto.ServerSharePackage.newBuilder(serverSharePackage_).mergeFrom(value).buildPartial();
          } else {
            serverSharePackage_ = value;
          }
          onChanged();
        } else {
          serverSharePackageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public Builder clearServerSharePackage() {
        if (serverSharePackageBuilder_ == null) {
          serverSharePackage_ = null;
          onChanged();
        } else {
          serverSharePackage_ = null;
          serverSharePackageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder getServerSharePackageBuilder() {
        
        onChanged();
        return getServerSharePackageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder getServerSharePackageOrBuilder() {
        if (serverSharePackageBuilder_ != null) {
          return serverSharePackageBuilder_.getMessageOrBuilder();
        } else {
          return serverSharePackage_ == null ?
              com.kys.util.netty.proto.HallProto.ServerSharePackage.getDefaultInstance() : serverSharePackage_;
        }
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSharePackage, com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder, com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder> 
          getServerSharePackageFieldBuilder() {
        if (serverSharePackageBuilder_ == null) {
          serverSharePackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerSharePackage, com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder, com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder>(
                  getServerSharePackage(),
                  getParentForChildren(),
                  isClean());
          serverSharePackage_ = null;
        }
        return serverSharePackageBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetAwardList serverGetAwardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetAwardList, com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder> serverGetAwardListBuilder_;
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public boolean hasServerGetAwardList() {
        return serverGetAwardListBuilder_ != null || serverGetAwardList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAwardList getServerGetAwardList() {
        if (serverGetAwardListBuilder_ == null) {
          return serverGetAwardList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetAwardList.getDefaultInstance() : serverGetAwardList_;
        } else {
          return serverGetAwardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public Builder setServerGetAwardList(com.kys.util.netty.proto.HallProto.ServerGetAwardList value) {
        if (serverGetAwardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetAwardList_ = value;
          onChanged();
        } else {
          serverGetAwardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public Builder setServerGetAwardList(
          com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder builderForValue) {
        if (serverGetAwardListBuilder_ == null) {
          serverGetAwardList_ = builderForValue.build();
          onChanged();
        } else {
          serverGetAwardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public Builder mergeServerGetAwardList(com.kys.util.netty.proto.HallProto.ServerGetAwardList value) {
        if (serverGetAwardListBuilder_ == null) {
          if (serverGetAwardList_ != null) {
            serverGetAwardList_ =
              com.kys.util.netty.proto.HallProto.ServerGetAwardList.newBuilder(serverGetAwardList_).mergeFrom(value).buildPartial();
          } else {
            serverGetAwardList_ = value;
          }
          onChanged();
        } else {
          serverGetAwardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public Builder clearServerGetAwardList() {
        if (serverGetAwardListBuilder_ == null) {
          serverGetAwardList_ = null;
          onChanged();
        } else {
          serverGetAwardList_ = null;
          serverGetAwardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder getServerGetAwardListBuilder() {
        
        onChanged();
        return getServerGetAwardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder getServerGetAwardListOrBuilder() {
        if (serverGetAwardListBuilder_ != null) {
          return serverGetAwardListBuilder_.getMessageOrBuilder();
        } else {
          return serverGetAwardList_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetAwardList.getDefaultInstance() : serverGetAwardList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetAwardList, com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder> 
          getServerGetAwardListFieldBuilder() {
        if (serverGetAwardListBuilder_ == null) {
          serverGetAwardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetAwardList, com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder>(
                  getServerGetAwardList(),
                  getParentForChildren(),
                  isClean());
          serverGetAwardList_ = null;
        }
        return serverGetAwardListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerCheckConnect serverCheckConnect_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerCheckConnect, com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder> serverCheckConnectBuilder_;
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public boolean hasServerCheckConnect() {
        return serverCheckConnectBuilder_ != null || serverCheckConnect_ != null;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCheckConnect getServerCheckConnect() {
        if (serverCheckConnectBuilder_ == null) {
          return serverCheckConnect_ == null ? com.kys.util.netty.proto.HallProto.ServerCheckConnect.getDefaultInstance() : serverCheckConnect_;
        } else {
          return serverCheckConnectBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public Builder setServerCheckConnect(com.kys.util.netty.proto.HallProto.ServerCheckConnect value) {
        if (serverCheckConnectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverCheckConnect_ = value;
          onChanged();
        } else {
          serverCheckConnectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public Builder setServerCheckConnect(
          com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder builderForValue) {
        if (serverCheckConnectBuilder_ == null) {
          serverCheckConnect_ = builderForValue.build();
          onChanged();
        } else {
          serverCheckConnectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public Builder mergeServerCheckConnect(com.kys.util.netty.proto.HallProto.ServerCheckConnect value) {
        if (serverCheckConnectBuilder_ == null) {
          if (serverCheckConnect_ != null) {
            serverCheckConnect_ =
              com.kys.util.netty.proto.HallProto.ServerCheckConnect.newBuilder(serverCheckConnect_).mergeFrom(value).buildPartial();
          } else {
            serverCheckConnect_ = value;
          }
          onChanged();
        } else {
          serverCheckConnectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public Builder clearServerCheckConnect() {
        if (serverCheckConnectBuilder_ == null) {
          serverCheckConnect_ = null;
          onChanged();
        } else {
          serverCheckConnect_ = null;
          serverCheckConnectBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder getServerCheckConnectBuilder() {
        
        onChanged();
        return getServerCheckConnectFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder getServerCheckConnectOrBuilder() {
        if (serverCheckConnectBuilder_ != null) {
          return serverCheckConnectBuilder_.getMessageOrBuilder();
        } else {
          return serverCheckConnect_ == null ?
              com.kys.util.netty.proto.HallProto.ServerCheckConnect.getDefaultInstance() : serverCheckConnect_;
        }
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerCheckConnect, com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder> 
          getServerCheckConnectFieldBuilder() {
        if (serverCheckConnectBuilder_ == null) {
          serverCheckConnectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerCheckConnect, com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder>(
                  getServerCheckConnect(),
                  getParentForChildren(),
                  isClean());
          serverCheckConnect_ = null;
        }
        return serverCheckConnectBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetPFList serverGetPFList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetPFList, com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder, com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder> serverGetPFListBuilder_;
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public boolean hasServerGetPFList() {
        return serverGetPFListBuilder_ != null || serverGetPFList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetPFList getServerGetPFList() {
        if (serverGetPFListBuilder_ == null) {
          return serverGetPFList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetPFList.getDefaultInstance() : serverGetPFList_;
        } else {
          return serverGetPFListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public Builder setServerGetPFList(com.kys.util.netty.proto.HallProto.ServerGetPFList value) {
        if (serverGetPFListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetPFList_ = value;
          onChanged();
        } else {
          serverGetPFListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public Builder setServerGetPFList(
          com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder builderForValue) {
        if (serverGetPFListBuilder_ == null) {
          serverGetPFList_ = builderForValue.build();
          onChanged();
        } else {
          serverGetPFListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public Builder mergeServerGetPFList(com.kys.util.netty.proto.HallProto.ServerGetPFList value) {
        if (serverGetPFListBuilder_ == null) {
          if (serverGetPFList_ != null) {
            serverGetPFList_ =
              com.kys.util.netty.proto.HallProto.ServerGetPFList.newBuilder(serverGetPFList_).mergeFrom(value).buildPartial();
          } else {
            serverGetPFList_ = value;
          }
          onChanged();
        } else {
          serverGetPFListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public Builder clearServerGetPFList() {
        if (serverGetPFListBuilder_ == null) {
          serverGetPFList_ = null;
          onChanged();
        } else {
          serverGetPFList_ = null;
          serverGetPFListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder getServerGetPFListBuilder() {
        
        onChanged();
        return getServerGetPFListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder getServerGetPFListOrBuilder() {
        if (serverGetPFListBuilder_ != null) {
          return serverGetPFListBuilder_.getMessageOrBuilder();
        } else {
          return serverGetPFList_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetPFList.getDefaultInstance() : serverGetPFList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetPFList, com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder, com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder> 
          getServerGetPFListFieldBuilder() {
        if (serverGetPFListBuilder_ == null) {
          serverGetPFListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetPFList, com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder, com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder>(
                  getServerGetPFList(),
                  getParentForChildren(),
                  isClean());
          serverGetPFList_ = null;
        }
        return serverGetPFListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerChoosePF serverChoosePF_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerChoosePF, com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder, com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder> serverChoosePFBuilder_;
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public boolean hasServerChoosePF() {
        return serverChoosePFBuilder_ != null || serverChoosePF_ != null;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerChoosePF getServerChoosePF() {
        if (serverChoosePFBuilder_ == null) {
          return serverChoosePF_ == null ? com.kys.util.netty.proto.HallProto.ServerChoosePF.getDefaultInstance() : serverChoosePF_;
        } else {
          return serverChoosePFBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public Builder setServerChoosePF(com.kys.util.netty.proto.HallProto.ServerChoosePF value) {
        if (serverChoosePFBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverChoosePF_ = value;
          onChanged();
        } else {
          serverChoosePFBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public Builder setServerChoosePF(
          com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder builderForValue) {
        if (serverChoosePFBuilder_ == null) {
          serverChoosePF_ = builderForValue.build();
          onChanged();
        } else {
          serverChoosePFBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public Builder mergeServerChoosePF(com.kys.util.netty.proto.HallProto.ServerChoosePF value) {
        if (serverChoosePFBuilder_ == null) {
          if (serverChoosePF_ != null) {
            serverChoosePF_ =
              com.kys.util.netty.proto.HallProto.ServerChoosePF.newBuilder(serverChoosePF_).mergeFrom(value).buildPartial();
          } else {
            serverChoosePF_ = value;
          }
          onChanged();
        } else {
          serverChoosePFBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public Builder clearServerChoosePF() {
        if (serverChoosePFBuilder_ == null) {
          serverChoosePF_ = null;
          onChanged();
        } else {
          serverChoosePF_ = null;
          serverChoosePFBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder getServerChoosePFBuilder() {
        
        onChanged();
        return getServerChoosePFFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder getServerChoosePFOrBuilder() {
        if (serverChoosePFBuilder_ != null) {
          return serverChoosePFBuilder_.getMessageOrBuilder();
        } else {
          return serverChoosePF_ == null ?
              com.kys.util.netty.proto.HallProto.ServerChoosePF.getDefaultInstance() : serverChoosePF_;
        }
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerChoosePF, com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder, com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder> 
          getServerChoosePFFieldBuilder() {
        if (serverChoosePFBuilder_ == null) {
          serverChoosePFBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerChoosePF, com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder, com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder>(
                  getServerChoosePF(),
                  getParentForChildren(),
                  isClean());
          serverChoosePF_ = null;
        }
        return serverChoosePFBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetHistoryRank serverGetHistoryRank_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetHistoryRank, com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder> serverGetHistoryRankBuilder_;
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public boolean hasServerGetHistoryRank() {
        return serverGetHistoryRankBuilder_ != null || serverGetHistoryRank_ != null;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHistoryRank getServerGetHistoryRank() {
        if (serverGetHistoryRankBuilder_ == null) {
          return serverGetHistoryRank_ == null ? com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.getDefaultInstance() : serverGetHistoryRank_;
        } else {
          return serverGetHistoryRankBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public Builder setServerGetHistoryRank(com.kys.util.netty.proto.HallProto.ServerGetHistoryRank value) {
        if (serverGetHistoryRankBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetHistoryRank_ = value;
          onChanged();
        } else {
          serverGetHistoryRankBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public Builder setServerGetHistoryRank(
          com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder builderForValue) {
        if (serverGetHistoryRankBuilder_ == null) {
          serverGetHistoryRank_ = builderForValue.build();
          onChanged();
        } else {
          serverGetHistoryRankBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public Builder mergeServerGetHistoryRank(com.kys.util.netty.proto.HallProto.ServerGetHistoryRank value) {
        if (serverGetHistoryRankBuilder_ == null) {
          if (serverGetHistoryRank_ != null) {
            serverGetHistoryRank_ =
              com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.newBuilder(serverGetHistoryRank_).mergeFrom(value).buildPartial();
          } else {
            serverGetHistoryRank_ = value;
          }
          onChanged();
        } else {
          serverGetHistoryRankBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public Builder clearServerGetHistoryRank() {
        if (serverGetHistoryRankBuilder_ == null) {
          serverGetHistoryRank_ = null;
          onChanged();
        } else {
          serverGetHistoryRank_ = null;
          serverGetHistoryRankBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder getServerGetHistoryRankBuilder() {
        
        onChanged();
        return getServerGetHistoryRankFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder getServerGetHistoryRankOrBuilder() {
        if (serverGetHistoryRankBuilder_ != null) {
          return serverGetHistoryRankBuilder_.getMessageOrBuilder();
        } else {
          return serverGetHistoryRank_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.getDefaultInstance() : serverGetHistoryRank_;
        }
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetHistoryRank, com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder> 
          getServerGetHistoryRankFieldBuilder() {
        if (serverGetHistoryRankBuilder_ == null) {
          serverGetHistoryRankBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetHistoryRank, com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder>(
                  getServerGetHistoryRank(),
                  getParentForChildren(),
                  isClean());
          serverGetHistoryRank_ = null;
        }
        return serverGetHistoryRankBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerH5Reward serverH5Reward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerH5Reward, com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder, com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder> serverH5RewardBuilder_;
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public boolean hasServerH5Reward() {
        return serverH5RewardBuilder_ != null || serverH5Reward_ != null;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerH5Reward getServerH5Reward() {
        if (serverH5RewardBuilder_ == null) {
          return serverH5Reward_ == null ? com.kys.util.netty.proto.HallProto.ServerH5Reward.getDefaultInstance() : serverH5Reward_;
        } else {
          return serverH5RewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public Builder setServerH5Reward(com.kys.util.netty.proto.HallProto.ServerH5Reward value) {
        if (serverH5RewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverH5Reward_ = value;
          onChanged();
        } else {
          serverH5RewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public Builder setServerH5Reward(
          com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder builderForValue) {
        if (serverH5RewardBuilder_ == null) {
          serverH5Reward_ = builderForValue.build();
          onChanged();
        } else {
          serverH5RewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public Builder mergeServerH5Reward(com.kys.util.netty.proto.HallProto.ServerH5Reward value) {
        if (serverH5RewardBuilder_ == null) {
          if (serverH5Reward_ != null) {
            serverH5Reward_ =
              com.kys.util.netty.proto.HallProto.ServerH5Reward.newBuilder(serverH5Reward_).mergeFrom(value).buildPartial();
          } else {
            serverH5Reward_ = value;
          }
          onChanged();
        } else {
          serverH5RewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public Builder clearServerH5Reward() {
        if (serverH5RewardBuilder_ == null) {
          serverH5Reward_ = null;
          onChanged();
        } else {
          serverH5Reward_ = null;
          serverH5RewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder getServerH5RewardBuilder() {
        
        onChanged();
        return getServerH5RewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder getServerH5RewardOrBuilder() {
        if (serverH5RewardBuilder_ != null) {
          return serverH5RewardBuilder_.getMessageOrBuilder();
        } else {
          return serverH5Reward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerH5Reward.getDefaultInstance() : serverH5Reward_;
        }
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerH5Reward, com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder, com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder> 
          getServerH5RewardFieldBuilder() {
        if (serverH5RewardBuilder_ == null) {
          serverH5RewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerH5Reward, com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder, com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder>(
                  getServerH5Reward(),
                  getParentForChildren(),
                  isClean());
          serverH5Reward_ = null;
        }
        return serverH5RewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup serverNewDrawWinCup_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder> serverNewDrawWinCupBuilder_;
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public boolean hasServerNewDrawWinCup() {
        return serverNewDrawWinCupBuilder_ != null || serverNewDrawWinCup_ != null;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup getServerNewDrawWinCup() {
        if (serverNewDrawWinCupBuilder_ == null) {
          return serverNewDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.getDefaultInstance() : serverNewDrawWinCup_;
        } else {
          return serverNewDrawWinCupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public Builder setServerNewDrawWinCup(com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup value) {
        if (serverNewDrawWinCupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverNewDrawWinCup_ = value;
          onChanged();
        } else {
          serverNewDrawWinCupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public Builder setServerNewDrawWinCup(
          com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder builderForValue) {
        if (serverNewDrawWinCupBuilder_ == null) {
          serverNewDrawWinCup_ = builderForValue.build();
          onChanged();
        } else {
          serverNewDrawWinCupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public Builder mergeServerNewDrawWinCup(com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup value) {
        if (serverNewDrawWinCupBuilder_ == null) {
          if (serverNewDrawWinCup_ != null) {
            serverNewDrawWinCup_ =
              com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.newBuilder(serverNewDrawWinCup_).mergeFrom(value).buildPartial();
          } else {
            serverNewDrawWinCup_ = value;
          }
          onChanged();
        } else {
          serverNewDrawWinCupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public Builder clearServerNewDrawWinCup() {
        if (serverNewDrawWinCupBuilder_ == null) {
          serverNewDrawWinCup_ = null;
          onChanged();
        } else {
          serverNewDrawWinCup_ = null;
          serverNewDrawWinCupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder getServerNewDrawWinCupBuilder() {
        
        onChanged();
        return getServerNewDrawWinCupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder getServerNewDrawWinCupOrBuilder() {
        if (serverNewDrawWinCupBuilder_ != null) {
          return serverNewDrawWinCupBuilder_.getMessageOrBuilder();
        } else {
          return serverNewDrawWinCup_ == null ?
              com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.getDefaultInstance() : serverNewDrawWinCup_;
        }
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder> 
          getServerNewDrawWinCupFieldBuilder() {
        if (serverNewDrawWinCupBuilder_ == null) {
          serverNewDrawWinCupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder>(
                  getServerNewDrawWinCup(),
                  getParentForChildren(),
                  isClean());
          serverNewDrawWinCup_ = null;
        }
        return serverNewDrawWinCupBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo serverGetNewHallInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder> serverGetNewHallInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public boolean hasServerGetNewHallInfo() {
        return serverGetNewHallInfoBuilder_ != null || serverGetNewHallInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo getServerGetNewHallInfo() {
        if (serverGetNewHallInfoBuilder_ == null) {
          return serverGetNewHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.getDefaultInstance() : serverGetNewHallInfo_;
        } else {
          return serverGetNewHallInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public Builder setServerGetNewHallInfo(com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo value) {
        if (serverGetNewHallInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetNewHallInfo_ = value;
          onChanged();
        } else {
          serverGetNewHallInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public Builder setServerGetNewHallInfo(
          com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder builderForValue) {
        if (serverGetNewHallInfoBuilder_ == null) {
          serverGetNewHallInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetNewHallInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public Builder mergeServerGetNewHallInfo(com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo value) {
        if (serverGetNewHallInfoBuilder_ == null) {
          if (serverGetNewHallInfo_ != null) {
            serverGetNewHallInfo_ =
              com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.newBuilder(serverGetNewHallInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetNewHallInfo_ = value;
          }
          onChanged();
        } else {
          serverGetNewHallInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public Builder clearServerGetNewHallInfo() {
        if (serverGetNewHallInfoBuilder_ == null) {
          serverGetNewHallInfo_ = null;
          onChanged();
        } else {
          serverGetNewHallInfo_ = null;
          serverGetNewHallInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder getServerGetNewHallInfoBuilder() {
        
        onChanged();
        return getServerGetNewHallInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder getServerGetNewHallInfoOrBuilder() {
        if (serverGetNewHallInfoBuilder_ != null) {
          return serverGetNewHallInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetNewHallInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.getDefaultInstance() : serverGetNewHallInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder> 
          getServerGetNewHallInfoFieldBuilder() {
        if (serverGetNewHallInfoBuilder_ == null) {
          serverGetNewHallInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder>(
                  getServerGetNewHallInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetNewHallInfo_ = null;
        }
        return serverGetNewHallInfoBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerLuckWall serverLuckWall_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerLuckWall, com.kys.util.netty.proto.HallProto.ServerLuckWall.Builder, com.kys.util.netty.proto.HallProto.ServerLuckWallOrBuilder> serverLuckWallBuilder_;
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      public boolean hasServerLuckWall() {
        return serverLuckWallBuilder_ != null || serverLuckWall_ != null;
      }
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerLuckWall getServerLuckWall() {
        if (serverLuckWallBuilder_ == null) {
          return serverLuckWall_ == null ? com.kys.util.netty.proto.HallProto.ServerLuckWall.getDefaultInstance() : serverLuckWall_;
        } else {
          return serverLuckWallBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      public Builder setServerLuckWall(com.kys.util.netty.proto.HallProto.ServerLuckWall value) {
        if (serverLuckWallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverLuckWall_ = value;
          onChanged();
        } else {
          serverLuckWallBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      public Builder setServerLuckWall(
          com.kys.util.netty.proto.HallProto.ServerLuckWall.Builder builderForValue) {
        if (serverLuckWallBuilder_ == null) {
          serverLuckWall_ = builderForValue.build();
          onChanged();
        } else {
          serverLuckWallBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      public Builder mergeServerLuckWall(com.kys.util.netty.proto.HallProto.ServerLuckWall value) {
        if (serverLuckWallBuilder_ == null) {
          if (serverLuckWall_ != null) {
            serverLuckWall_ =
              com.kys.util.netty.proto.HallProto.ServerLuckWall.newBuilder(serverLuckWall_).mergeFrom(value).buildPartial();
          } else {
            serverLuckWall_ = value;
          }
          onChanged();
        } else {
          serverLuckWallBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      public Builder clearServerLuckWall() {
        if (serverLuckWallBuilder_ == null) {
          serverLuckWall_ = null;
          onChanged();
        } else {
          serverLuckWall_ = null;
          serverLuckWallBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerLuckWall.Builder getServerLuckWallBuilder() {
        
        onChanged();
        return getServerLuckWallFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerLuckWallOrBuilder getServerLuckWallOrBuilder() {
        if (serverLuckWallBuilder_ != null) {
          return serverLuckWallBuilder_.getMessageOrBuilder();
        } else {
          return serverLuckWall_ == null ?
              com.kys.util.netty.proto.HallProto.ServerLuckWall.getDefaultInstance() : serverLuckWall_;
        }
      }
      /**
       * <pre>
       ** 服务器返回好运墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLuckWall serverLuckWall = 228;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerLuckWall, com.kys.util.netty.proto.HallProto.ServerLuckWall.Builder, com.kys.util.netty.proto.HallProto.ServerLuckWallOrBuilder> 
          getServerLuckWallFieldBuilder() {
        if (serverLuckWallBuilder_ == null) {
          serverLuckWallBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerLuckWall, com.kys.util.netty.proto.HallProto.ServerLuckWall.Builder, com.kys.util.netty.proto.HallProto.ServerLuckWallOrBuilder>(
                  getServerLuckWall(),
                  getParentForChildren(),
                  isClean());
          serverLuckWall_ = null;
        }
        return serverLuckWallBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerCdkeyAward serverCdkeyAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerCdkeyAward, com.kys.util.netty.proto.HallProto.ServerCdkeyAward.Builder, com.kys.util.netty.proto.HallProto.ServerCdkeyAwardOrBuilder> serverCdkeyAwardBuilder_;
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      public boolean hasServerCdkeyAward() {
        return serverCdkeyAwardBuilder_ != null || serverCdkeyAward_ != null;
      }
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCdkeyAward getServerCdkeyAward() {
        if (serverCdkeyAwardBuilder_ == null) {
          return serverCdkeyAward_ == null ? com.kys.util.netty.proto.HallProto.ServerCdkeyAward.getDefaultInstance() : serverCdkeyAward_;
        } else {
          return serverCdkeyAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      public Builder setServerCdkeyAward(com.kys.util.netty.proto.HallProto.ServerCdkeyAward value) {
        if (serverCdkeyAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverCdkeyAward_ = value;
          onChanged();
        } else {
          serverCdkeyAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      public Builder setServerCdkeyAward(
          com.kys.util.netty.proto.HallProto.ServerCdkeyAward.Builder builderForValue) {
        if (serverCdkeyAwardBuilder_ == null) {
          serverCdkeyAward_ = builderForValue.build();
          onChanged();
        } else {
          serverCdkeyAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      public Builder mergeServerCdkeyAward(com.kys.util.netty.proto.HallProto.ServerCdkeyAward value) {
        if (serverCdkeyAwardBuilder_ == null) {
          if (serverCdkeyAward_ != null) {
            serverCdkeyAward_ =
              com.kys.util.netty.proto.HallProto.ServerCdkeyAward.newBuilder(serverCdkeyAward_).mergeFrom(value).buildPartial();
          } else {
            serverCdkeyAward_ = value;
          }
          onChanged();
        } else {
          serverCdkeyAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      public Builder clearServerCdkeyAward() {
        if (serverCdkeyAwardBuilder_ == null) {
          serverCdkeyAward_ = null;
          onChanged();
        } else {
          serverCdkeyAward_ = null;
          serverCdkeyAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCdkeyAward.Builder getServerCdkeyAwardBuilder() {
        
        onChanged();
        return getServerCdkeyAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCdkeyAwardOrBuilder getServerCdkeyAwardOrBuilder() {
        if (serverCdkeyAwardBuilder_ != null) {
          return serverCdkeyAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverCdkeyAward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerCdkeyAward.getDefaultInstance() : serverCdkeyAward_;
        }
      }
      /**
       * <pre>
       ** 服务器兑换码奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCdkeyAward serverCdkeyAward = 229;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerCdkeyAward, com.kys.util.netty.proto.HallProto.ServerCdkeyAward.Builder, com.kys.util.netty.proto.HallProto.ServerCdkeyAwardOrBuilder> 
          getServerCdkeyAwardFieldBuilder() {
        if (serverCdkeyAwardBuilder_ == null) {
          serverCdkeyAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerCdkeyAward, com.kys.util.netty.proto.HallProto.ServerCdkeyAward.Builder, com.kys.util.netty.proto.HallProto.ServerCdkeyAwardOrBuilder>(
                  getServerCdkeyAward(),
                  getParentForChildren(),
                  isClean());
          serverCdkeyAward_ = null;
        }
        return serverCdkeyAwardBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo serverGetStoreInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo, com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.Builder, com.kys.util.netty.proto.StoreProto.ServerGetStoreInfoOrBuilder> serverGetStoreInfoBuilder_;
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      public boolean hasServerGetStoreInfo() {
        return serverGetStoreInfoBuilder_ != null || serverGetStoreInfo_ != null;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo getServerGetStoreInfo() {
        if (serverGetStoreInfoBuilder_ == null) {
          return serverGetStoreInfo_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.getDefaultInstance() : serverGetStoreInfo_;
        } else {
          return serverGetStoreInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      public Builder setServerGetStoreInfo(com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo value) {
        if (serverGetStoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetStoreInfo_ = value;
          onChanged();
        } else {
          serverGetStoreInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      public Builder setServerGetStoreInfo(
          com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.Builder builderForValue) {
        if (serverGetStoreInfoBuilder_ == null) {
          serverGetStoreInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetStoreInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      public Builder mergeServerGetStoreInfo(com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo value) {
        if (serverGetStoreInfoBuilder_ == null) {
          if (serverGetStoreInfo_ != null) {
            serverGetStoreInfo_ =
              com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.newBuilder(serverGetStoreInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetStoreInfo_ = value;
          }
          onChanged();
        } else {
          serverGetStoreInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      public Builder clearServerGetStoreInfo() {
        if (serverGetStoreInfoBuilder_ == null) {
          serverGetStoreInfo_ = null;
          onChanged();
        } else {
          serverGetStoreInfo_ = null;
          serverGetStoreInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.Builder getServerGetStoreInfoBuilder() {
        
        onChanged();
        return getServerGetStoreInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetStoreInfoOrBuilder getServerGetStoreInfoOrBuilder() {
        if (serverGetStoreInfoBuilder_ != null) {
          return serverGetStoreInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetStoreInfo_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.getDefaultInstance() : serverGetStoreInfo_;
        }
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreInfo serverGetStoreInfo = 300;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo, com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.Builder, com.kys.util.netty.proto.StoreProto.ServerGetStoreInfoOrBuilder> 
          getServerGetStoreInfoFieldBuilder() {
        if (serverGetStoreInfoBuilder_ == null) {
          serverGetStoreInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo, com.kys.util.netty.proto.StoreProto.ServerGetStoreInfo.Builder, com.kys.util.netty.proto.StoreProto.ServerGetStoreInfoOrBuilder>(
                  getServerGetStoreInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetStoreInfo_ = null;
        }
        return serverGetStoreInfoBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerConvertGoods serverConvertGoods_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerConvertGoods, com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder> serverConvertGoodsBuilder_;
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public boolean hasServerConvertGoods() {
        return serverConvertGoodsBuilder_ != null || serverConvertGoods_ != null;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerConvertGoods getServerConvertGoods() {
        if (serverConvertGoodsBuilder_ == null) {
          return serverConvertGoods_ == null ? com.kys.util.netty.proto.StoreProto.ServerConvertGoods.getDefaultInstance() : serverConvertGoods_;
        } else {
          return serverConvertGoodsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public Builder setServerConvertGoods(com.kys.util.netty.proto.StoreProto.ServerConvertGoods value) {
        if (serverConvertGoodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverConvertGoods_ = value;
          onChanged();
        } else {
          serverConvertGoodsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public Builder setServerConvertGoods(
          com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder builderForValue) {
        if (serverConvertGoodsBuilder_ == null) {
          serverConvertGoods_ = builderForValue.build();
          onChanged();
        } else {
          serverConvertGoodsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public Builder mergeServerConvertGoods(com.kys.util.netty.proto.StoreProto.ServerConvertGoods value) {
        if (serverConvertGoodsBuilder_ == null) {
          if (serverConvertGoods_ != null) {
            serverConvertGoods_ =
              com.kys.util.netty.proto.StoreProto.ServerConvertGoods.newBuilder(serverConvertGoods_).mergeFrom(value).buildPartial();
          } else {
            serverConvertGoods_ = value;
          }
          onChanged();
        } else {
          serverConvertGoodsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public Builder clearServerConvertGoods() {
        if (serverConvertGoodsBuilder_ == null) {
          serverConvertGoods_ = null;
          onChanged();
        } else {
          serverConvertGoods_ = null;
          serverConvertGoodsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder getServerConvertGoodsBuilder() {
        
        onChanged();
        return getServerConvertGoodsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder getServerConvertGoodsOrBuilder() {
        if (serverConvertGoodsBuilder_ != null) {
          return serverConvertGoodsBuilder_.getMessageOrBuilder();
        } else {
          return serverConvertGoods_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerConvertGoods.getDefaultInstance() : serverConvertGoods_;
        }
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerConvertGoods, com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder> 
          getServerConvertGoodsFieldBuilder() {
        if (serverConvertGoodsBuilder_ == null) {
          serverConvertGoodsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerConvertGoods, com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder>(
                  getServerConvertGoods(),
                  getParentForChildren(),
                  isClean());
          serverConvertGoods_ = null;
        }
        return serverConvertGoodsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerWXPayResult serverWXPayResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerWXPayResult, com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder, com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder> serverWXPayResultBuilder_;
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public boolean hasServerWXPayResult() {
        return serverWXPayResultBuilder_ != null || serverWXPayResult_ != null;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerWXPayResult getServerWXPayResult() {
        if (serverWXPayResultBuilder_ == null) {
          return serverWXPayResult_ == null ? com.kys.util.netty.proto.StoreProto.ServerWXPayResult.getDefaultInstance() : serverWXPayResult_;
        } else {
          return serverWXPayResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public Builder setServerWXPayResult(com.kys.util.netty.proto.StoreProto.ServerWXPayResult value) {
        if (serverWXPayResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverWXPayResult_ = value;
          onChanged();
        } else {
          serverWXPayResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public Builder setServerWXPayResult(
          com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder builderForValue) {
        if (serverWXPayResultBuilder_ == null) {
          serverWXPayResult_ = builderForValue.build();
          onChanged();
        } else {
          serverWXPayResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public Builder mergeServerWXPayResult(com.kys.util.netty.proto.StoreProto.ServerWXPayResult value) {
        if (serverWXPayResultBuilder_ == null) {
          if (serverWXPayResult_ != null) {
            serverWXPayResult_ =
              com.kys.util.netty.proto.StoreProto.ServerWXPayResult.newBuilder(serverWXPayResult_).mergeFrom(value).buildPartial();
          } else {
            serverWXPayResult_ = value;
          }
          onChanged();
        } else {
          serverWXPayResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public Builder clearServerWXPayResult() {
        if (serverWXPayResultBuilder_ == null) {
          serverWXPayResult_ = null;
          onChanged();
        } else {
          serverWXPayResult_ = null;
          serverWXPayResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder getServerWXPayResultBuilder() {
        
        onChanged();
        return getServerWXPayResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder getServerWXPayResultOrBuilder() {
        if (serverWXPayResultBuilder_ != null) {
          return serverWXPayResultBuilder_.getMessageOrBuilder();
        } else {
          return serverWXPayResult_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerWXPayResult.getDefaultInstance() : serverWXPayResult_;
        }
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerWXPayResult, com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder, com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder> 
          getServerWXPayResultFieldBuilder() {
        if (serverWXPayResultBuilder_ == null) {
          serverWXPayResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerWXPayResult, com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder, com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder>(
                  getServerWXPayResult(),
                  getParentForChildren(),
                  isClean());
          serverWXPayResult_ = null;
        }
        return serverWXPayResultBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods serverBuyOrderGoods_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder> serverBuyOrderGoodsBuilder_;
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public boolean hasServerBuyOrderGoods() {
        return serverBuyOrderGoodsBuilder_ != null || serverBuyOrderGoods_ != null;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods getServerBuyOrderGoods() {
        if (serverBuyOrderGoodsBuilder_ == null) {
          return serverBuyOrderGoods_ == null ? com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.getDefaultInstance() : serverBuyOrderGoods_;
        } else {
          return serverBuyOrderGoodsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public Builder setServerBuyOrderGoods(com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods value) {
        if (serverBuyOrderGoodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverBuyOrderGoods_ = value;
          onChanged();
        } else {
          serverBuyOrderGoodsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public Builder setServerBuyOrderGoods(
          com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder builderForValue) {
        if (serverBuyOrderGoodsBuilder_ == null) {
          serverBuyOrderGoods_ = builderForValue.build();
          onChanged();
        } else {
          serverBuyOrderGoodsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public Builder mergeServerBuyOrderGoods(com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods value) {
        if (serverBuyOrderGoodsBuilder_ == null) {
          if (serverBuyOrderGoods_ != null) {
            serverBuyOrderGoods_ =
              com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.newBuilder(serverBuyOrderGoods_).mergeFrom(value).buildPartial();
          } else {
            serverBuyOrderGoods_ = value;
          }
          onChanged();
        } else {
          serverBuyOrderGoodsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public Builder clearServerBuyOrderGoods() {
        if (serverBuyOrderGoodsBuilder_ == null) {
          serverBuyOrderGoods_ = null;
          onChanged();
        } else {
          serverBuyOrderGoods_ = null;
          serverBuyOrderGoodsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder getServerBuyOrderGoodsBuilder() {
        
        onChanged();
        return getServerBuyOrderGoodsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder getServerBuyOrderGoodsOrBuilder() {
        if (serverBuyOrderGoodsBuilder_ != null) {
          return serverBuyOrderGoodsBuilder_.getMessageOrBuilder();
        } else {
          return serverBuyOrderGoods_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.getDefaultInstance() : serverBuyOrderGoods_;
        }
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder> 
          getServerBuyOrderGoodsFieldBuilder() {
        if (serverBuyOrderGoodsBuilder_ == null) {
          serverBuyOrderGoodsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder>(
                  getServerBuyOrderGoods(),
                  getParentForChildren(),
                  isClean());
          serverBuyOrderGoods_ = null;
        }
        return serverBuyOrderGoodsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge serverGetFirstCharge_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge, com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder> serverGetFirstChargeBuilder_;
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public boolean hasServerGetFirstCharge() {
        return serverGetFirstChargeBuilder_ != null || serverGetFirstCharge_ != null;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge getServerGetFirstCharge() {
        if (serverGetFirstChargeBuilder_ == null) {
          return serverGetFirstCharge_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.getDefaultInstance() : serverGetFirstCharge_;
        } else {
          return serverGetFirstChargeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public Builder setServerGetFirstCharge(com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge value) {
        if (serverGetFirstChargeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetFirstCharge_ = value;
          onChanged();
        } else {
          serverGetFirstChargeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public Builder setServerGetFirstCharge(
          com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder builderForValue) {
        if (serverGetFirstChargeBuilder_ == null) {
          serverGetFirstCharge_ = builderForValue.build();
          onChanged();
        } else {
          serverGetFirstChargeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public Builder mergeServerGetFirstCharge(com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge value) {
        if (serverGetFirstChargeBuilder_ == null) {
          if (serverGetFirstCharge_ != null) {
            serverGetFirstCharge_ =
              com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.newBuilder(serverGetFirstCharge_).mergeFrom(value).buildPartial();
          } else {
            serverGetFirstCharge_ = value;
          }
          onChanged();
        } else {
          serverGetFirstChargeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public Builder clearServerGetFirstCharge() {
        if (serverGetFirstChargeBuilder_ == null) {
          serverGetFirstCharge_ = null;
          onChanged();
        } else {
          serverGetFirstCharge_ = null;
          serverGetFirstChargeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder getServerGetFirstChargeBuilder() {
        
        onChanged();
        return getServerGetFirstChargeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder getServerGetFirstChargeOrBuilder() {
        if (serverGetFirstChargeBuilder_ != null) {
          return serverGetFirstChargeBuilder_.getMessageOrBuilder();
        } else {
          return serverGetFirstCharge_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.getDefaultInstance() : serverGetFirstCharge_;
        }
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge, com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder> 
          getServerGetFirstChargeFieldBuilder() {
        if (serverGetFirstChargeBuilder_ == null) {
          serverGetFirstChargeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge, com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder>(
                  getServerGetFirstCharge(),
                  getParentForChildren(),
                  isClean());
          serverGetFirstCharge_ = null;
        }
        return serverGetFirstChargeBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetDailyGift serverGetDailyGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetDailyGift, com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder> serverGetDailyGiftBuilder_;
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public boolean hasServerGetDailyGift() {
        return serverGetDailyGiftBuilder_ != null || serverGetDailyGift_ != null;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetDailyGift getServerGetDailyGift() {
        if (serverGetDailyGiftBuilder_ == null) {
          return serverGetDailyGift_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.getDefaultInstance() : serverGetDailyGift_;
        } else {
          return serverGetDailyGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public Builder setServerGetDailyGift(com.kys.util.netty.proto.StoreProto.ServerGetDailyGift value) {
        if (serverGetDailyGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetDailyGift_ = value;
          onChanged();
        } else {
          serverGetDailyGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public Builder setServerGetDailyGift(
          com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder builderForValue) {
        if (serverGetDailyGiftBuilder_ == null) {
          serverGetDailyGift_ = builderForValue.build();
          onChanged();
        } else {
          serverGetDailyGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public Builder mergeServerGetDailyGift(com.kys.util.netty.proto.StoreProto.ServerGetDailyGift value) {
        if (serverGetDailyGiftBuilder_ == null) {
          if (serverGetDailyGift_ != null) {
            serverGetDailyGift_ =
              com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.newBuilder(serverGetDailyGift_).mergeFrom(value).buildPartial();
          } else {
            serverGetDailyGift_ = value;
          }
          onChanged();
        } else {
          serverGetDailyGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public Builder clearServerGetDailyGift() {
        if (serverGetDailyGiftBuilder_ == null) {
          serverGetDailyGift_ = null;
          onChanged();
        } else {
          serverGetDailyGift_ = null;
          serverGetDailyGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder getServerGetDailyGiftBuilder() {
        
        onChanged();
        return getServerGetDailyGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder getServerGetDailyGiftOrBuilder() {
        if (serverGetDailyGiftBuilder_ != null) {
          return serverGetDailyGiftBuilder_.getMessageOrBuilder();
        } else {
          return serverGetDailyGift_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.getDefaultInstance() : serverGetDailyGift_;
        }
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetDailyGift, com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder> 
          getServerGetDailyGiftFieldBuilder() {
        if (serverGetDailyGiftBuilder_ == null) {
          serverGetDailyGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetDailyGift, com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder>(
                  getServerGetDailyGift(),
                  getParentForChildren(),
                  isClean());
          serverGetDailyGift_ = null;
        }
        return serverGetDailyGiftBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetMonthCard serverGetMonthCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetMonthCard, com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder> serverGetMonthCardBuilder_;
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public boolean hasServerGetMonthCard() {
        return serverGetMonthCardBuilder_ != null || serverGetMonthCard_ != null;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetMonthCard getServerGetMonthCard() {
        if (serverGetMonthCardBuilder_ == null) {
          return serverGetMonthCard_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.getDefaultInstance() : serverGetMonthCard_;
        } else {
          return serverGetMonthCardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public Builder setServerGetMonthCard(com.kys.util.netty.proto.StoreProto.ServerGetMonthCard value) {
        if (serverGetMonthCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMonthCard_ = value;
          onChanged();
        } else {
          serverGetMonthCardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public Builder setServerGetMonthCard(
          com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder builderForValue) {
        if (serverGetMonthCardBuilder_ == null) {
          serverGetMonthCard_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMonthCardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public Builder mergeServerGetMonthCard(com.kys.util.netty.proto.StoreProto.ServerGetMonthCard value) {
        if (serverGetMonthCardBuilder_ == null) {
          if (serverGetMonthCard_ != null) {
            serverGetMonthCard_ =
              com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.newBuilder(serverGetMonthCard_).mergeFrom(value).buildPartial();
          } else {
            serverGetMonthCard_ = value;
          }
          onChanged();
        } else {
          serverGetMonthCardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public Builder clearServerGetMonthCard() {
        if (serverGetMonthCardBuilder_ == null) {
          serverGetMonthCard_ = null;
          onChanged();
        } else {
          serverGetMonthCard_ = null;
          serverGetMonthCardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder getServerGetMonthCardBuilder() {
        
        onChanged();
        return getServerGetMonthCardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder getServerGetMonthCardOrBuilder() {
        if (serverGetMonthCardBuilder_ != null) {
          return serverGetMonthCardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMonthCard_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.getDefaultInstance() : serverGetMonthCard_;
        }
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetMonthCard, com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder> 
          getServerGetMonthCardFieldBuilder() {
        if (serverGetMonthCardBuilder_ == null) {
          serverGetMonthCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetMonthCard, com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder>(
                  getServerGetMonthCard(),
                  getParentForChildren(),
                  isClean());
          serverGetMonthCard_ = null;
        }
        return serverGetMonthCardBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift serverGetResurgenceGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder> serverGetResurgenceGiftBuilder_;
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public boolean hasServerGetResurgenceGift() {
        return serverGetResurgenceGiftBuilder_ != null || serverGetResurgenceGift_ != null;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift getServerGetResurgenceGift() {
        if (serverGetResurgenceGiftBuilder_ == null) {
          return serverGetResurgenceGift_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.getDefaultInstance() : serverGetResurgenceGift_;
        } else {
          return serverGetResurgenceGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public Builder setServerGetResurgenceGift(com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift value) {
        if (serverGetResurgenceGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetResurgenceGift_ = value;
          onChanged();
        } else {
          serverGetResurgenceGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public Builder setServerGetResurgenceGift(
          com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder builderForValue) {
        if (serverGetResurgenceGiftBuilder_ == null) {
          serverGetResurgenceGift_ = builderForValue.build();
          onChanged();
        } else {
          serverGetResurgenceGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public Builder mergeServerGetResurgenceGift(com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift value) {
        if (serverGetResurgenceGiftBuilder_ == null) {
          if (serverGetResurgenceGift_ != null) {
            serverGetResurgenceGift_ =
              com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.newBuilder(serverGetResurgenceGift_).mergeFrom(value).buildPartial();
          } else {
            serverGetResurgenceGift_ = value;
          }
          onChanged();
        } else {
          serverGetResurgenceGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public Builder clearServerGetResurgenceGift() {
        if (serverGetResurgenceGiftBuilder_ == null) {
          serverGetResurgenceGift_ = null;
          onChanged();
        } else {
          serverGetResurgenceGift_ = null;
          serverGetResurgenceGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder getServerGetResurgenceGiftBuilder() {
        
        onChanged();
        return getServerGetResurgenceGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder getServerGetResurgenceGiftOrBuilder() {
        if (serverGetResurgenceGiftBuilder_ != null) {
          return serverGetResurgenceGiftBuilder_.getMessageOrBuilder();
        } else {
          return serverGetResurgenceGift_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.getDefaultInstance() : serverGetResurgenceGift_;
        }
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder> 
          getServerGetResurgenceGiftFieldBuilder() {
        if (serverGetResurgenceGiftBuilder_ == null) {
          serverGetResurgenceGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder>(
                  getServerGetResurgenceGift(),
                  getParentForChildren(),
                  isClean());
          serverGetResurgenceGift_ = null;
        }
        return serverGetResurgenceGiftBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage serverGetConvertMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage, com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.Builder, com.kys.util.netty.proto.StoreProto.ServerGetConvertMessageOrBuilder> serverGetConvertMessageBuilder_;
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      public boolean hasServerGetConvertMessage() {
        return serverGetConvertMessageBuilder_ != null || serverGetConvertMessage_ != null;
      }
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage getServerGetConvertMessage() {
        if (serverGetConvertMessageBuilder_ == null) {
          return serverGetConvertMessage_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.getDefaultInstance() : serverGetConvertMessage_;
        } else {
          return serverGetConvertMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      public Builder setServerGetConvertMessage(com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage value) {
        if (serverGetConvertMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetConvertMessage_ = value;
          onChanged();
        } else {
          serverGetConvertMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      public Builder setServerGetConvertMessage(
          com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.Builder builderForValue) {
        if (serverGetConvertMessageBuilder_ == null) {
          serverGetConvertMessage_ = builderForValue.build();
          onChanged();
        } else {
          serverGetConvertMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      public Builder mergeServerGetConvertMessage(com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage value) {
        if (serverGetConvertMessageBuilder_ == null) {
          if (serverGetConvertMessage_ != null) {
            serverGetConvertMessage_ =
              com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.newBuilder(serverGetConvertMessage_).mergeFrom(value).buildPartial();
          } else {
            serverGetConvertMessage_ = value;
          }
          onChanged();
        } else {
          serverGetConvertMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      public Builder clearServerGetConvertMessage() {
        if (serverGetConvertMessageBuilder_ == null) {
          serverGetConvertMessage_ = null;
          onChanged();
        } else {
          serverGetConvertMessage_ = null;
          serverGetConvertMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.Builder getServerGetConvertMessageBuilder() {
        
        onChanged();
        return getServerGetConvertMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetConvertMessageOrBuilder getServerGetConvertMessageOrBuilder() {
        if (serverGetConvertMessageBuilder_ != null) {
          return serverGetConvertMessageBuilder_.getMessageOrBuilder();
        } else {
          return serverGetConvertMessage_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.getDefaultInstance() : serverGetConvertMessage_;
        }
      }
      /**
       * <pre>
       ** 服务器返回兑换墙 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetConvertMessage serverGetConvertMessage = 309;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage, com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.Builder, com.kys.util.netty.proto.StoreProto.ServerGetConvertMessageOrBuilder> 
          getServerGetConvertMessageFieldBuilder() {
        if (serverGetConvertMessageBuilder_ == null) {
          serverGetConvertMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage, com.kys.util.netty.proto.StoreProto.ServerGetConvertMessage.Builder, com.kys.util.netty.proto.StoreProto.ServerGetConvertMessageOrBuilder>(
                  getServerGetConvertMessage(),
                  getParentForChildren(),
                  isClean());
          serverGetConvertMessage_ = null;
        }
        return serverGetConvertMessageBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder serverNewBuyOrder_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder, com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.Builder, com.kys.util.netty.proto.StoreProto.ServerNewBuyOrderOrBuilder> serverNewBuyOrderBuilder_;
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      public boolean hasServerNewBuyOrder() {
        return serverNewBuyOrderBuilder_ != null || serverNewBuyOrder_ != null;
      }
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder getServerNewBuyOrder() {
        if (serverNewBuyOrderBuilder_ == null) {
          return serverNewBuyOrder_ == null ? com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.getDefaultInstance() : serverNewBuyOrder_;
        } else {
          return serverNewBuyOrderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      public Builder setServerNewBuyOrder(com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder value) {
        if (serverNewBuyOrderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverNewBuyOrder_ = value;
          onChanged();
        } else {
          serverNewBuyOrderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      public Builder setServerNewBuyOrder(
          com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.Builder builderForValue) {
        if (serverNewBuyOrderBuilder_ == null) {
          serverNewBuyOrder_ = builderForValue.build();
          onChanged();
        } else {
          serverNewBuyOrderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      public Builder mergeServerNewBuyOrder(com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder value) {
        if (serverNewBuyOrderBuilder_ == null) {
          if (serverNewBuyOrder_ != null) {
            serverNewBuyOrder_ =
              com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.newBuilder(serverNewBuyOrder_).mergeFrom(value).buildPartial();
          } else {
            serverNewBuyOrder_ = value;
          }
          onChanged();
        } else {
          serverNewBuyOrderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      public Builder clearServerNewBuyOrder() {
        if (serverNewBuyOrderBuilder_ == null) {
          serverNewBuyOrder_ = null;
          onChanged();
        } else {
          serverNewBuyOrder_ = null;
          serverNewBuyOrderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.Builder getServerNewBuyOrderBuilder() {
        
        onChanged();
        return getServerNewBuyOrderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerNewBuyOrderOrBuilder getServerNewBuyOrderOrBuilder() {
        if (serverNewBuyOrderBuilder_ != null) {
          return serverNewBuyOrderBuilder_.getMessageOrBuilder();
        } else {
          return serverNewBuyOrder_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.getDefaultInstance() : serverNewBuyOrder_;
        }
      }
      /**
       * <pre>
       ** 服务器返回下单接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewBuyOrder serverNewBuyOrder = 310;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder, com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.Builder, com.kys.util.netty.proto.StoreProto.ServerNewBuyOrderOrBuilder> 
          getServerNewBuyOrderFieldBuilder() {
        if (serverNewBuyOrderBuilder_ == null) {
          serverNewBuyOrderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder, com.kys.util.netty.proto.StoreProto.ServerNewBuyOrder.Builder, com.kys.util.netty.proto.StoreProto.ServerNewBuyOrderOrBuilder>(
                  getServerNewBuyOrder(),
                  getParentForChildren(),
                  isClean());
          serverNewBuyOrder_ = null;
        }
        return serverNewBuyOrderBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerNewConvert serverNewConvert_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerNewConvert, com.kys.util.netty.proto.StoreProto.ServerNewConvert.Builder, com.kys.util.netty.proto.StoreProto.ServerNewConvertOrBuilder> serverNewConvertBuilder_;
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      public boolean hasServerNewConvert() {
        return serverNewConvertBuilder_ != null || serverNewConvert_ != null;
      }
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerNewConvert getServerNewConvert() {
        if (serverNewConvertBuilder_ == null) {
          return serverNewConvert_ == null ? com.kys.util.netty.proto.StoreProto.ServerNewConvert.getDefaultInstance() : serverNewConvert_;
        } else {
          return serverNewConvertBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      public Builder setServerNewConvert(com.kys.util.netty.proto.StoreProto.ServerNewConvert value) {
        if (serverNewConvertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverNewConvert_ = value;
          onChanged();
        } else {
          serverNewConvertBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      public Builder setServerNewConvert(
          com.kys.util.netty.proto.StoreProto.ServerNewConvert.Builder builderForValue) {
        if (serverNewConvertBuilder_ == null) {
          serverNewConvert_ = builderForValue.build();
          onChanged();
        } else {
          serverNewConvertBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      public Builder mergeServerNewConvert(com.kys.util.netty.proto.StoreProto.ServerNewConvert value) {
        if (serverNewConvertBuilder_ == null) {
          if (serverNewConvert_ != null) {
            serverNewConvert_ =
              com.kys.util.netty.proto.StoreProto.ServerNewConvert.newBuilder(serverNewConvert_).mergeFrom(value).buildPartial();
          } else {
            serverNewConvert_ = value;
          }
          onChanged();
        } else {
          serverNewConvertBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      public Builder clearServerNewConvert() {
        if (serverNewConvertBuilder_ == null) {
          serverNewConvert_ = null;
          onChanged();
        } else {
          serverNewConvert_ = null;
          serverNewConvertBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerNewConvert.Builder getServerNewConvertBuilder() {
        
        onChanged();
        return getServerNewConvertFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerNewConvertOrBuilder getServerNewConvertOrBuilder() {
        if (serverNewConvertBuilder_ != null) {
          return serverNewConvertBuilder_.getMessageOrBuilder();
        } else {
          return serverNewConvert_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerNewConvert.getDefaultInstance() : serverNewConvert_;
        }
      }
      /**
       * <pre>
       ** Server 返回兑换商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewConvert serverNewConvert = 311;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerNewConvert, com.kys.util.netty.proto.StoreProto.ServerNewConvert.Builder, com.kys.util.netty.proto.StoreProto.ServerNewConvertOrBuilder> 
          getServerNewConvertFieldBuilder() {
        if (serverNewConvertBuilder_ == null) {
          serverNewConvertBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerNewConvert, com.kys.util.netty.proto.StoreProto.ServerNewConvert.Builder, com.kys.util.netty.proto.StoreProto.ServerNewConvertOrBuilder>(
                  getServerNewConvert(),
                  getParentForChildren(),
                  isClean());
          serverNewConvert_ = null;
        }
        return serverNewConvertBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerAlipayAccount serverAlipayAccount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerAlipayAccount, com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.Builder, com.kys.util.netty.proto.StoreProto.ServerAlipayAccountOrBuilder> serverAlipayAccountBuilder_;
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      public boolean hasServerAlipayAccount() {
        return serverAlipayAccountBuilder_ != null || serverAlipayAccount_ != null;
      }
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerAlipayAccount getServerAlipayAccount() {
        if (serverAlipayAccountBuilder_ == null) {
          return serverAlipayAccount_ == null ? com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.getDefaultInstance() : serverAlipayAccount_;
        } else {
          return serverAlipayAccountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      public Builder setServerAlipayAccount(com.kys.util.netty.proto.StoreProto.ServerAlipayAccount value) {
        if (serverAlipayAccountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverAlipayAccount_ = value;
          onChanged();
        } else {
          serverAlipayAccountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      public Builder setServerAlipayAccount(
          com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.Builder builderForValue) {
        if (serverAlipayAccountBuilder_ == null) {
          serverAlipayAccount_ = builderForValue.build();
          onChanged();
        } else {
          serverAlipayAccountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      public Builder mergeServerAlipayAccount(com.kys.util.netty.proto.StoreProto.ServerAlipayAccount value) {
        if (serverAlipayAccountBuilder_ == null) {
          if (serverAlipayAccount_ != null) {
            serverAlipayAccount_ =
              com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.newBuilder(serverAlipayAccount_).mergeFrom(value).buildPartial();
          } else {
            serverAlipayAccount_ = value;
          }
          onChanged();
        } else {
          serverAlipayAccountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      public Builder clearServerAlipayAccount() {
        if (serverAlipayAccountBuilder_ == null) {
          serverAlipayAccount_ = null;
          onChanged();
        } else {
          serverAlipayAccount_ = null;
          serverAlipayAccountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.Builder getServerAlipayAccountBuilder() {
        
        onChanged();
        return getServerAlipayAccountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerAlipayAccountOrBuilder getServerAlipayAccountOrBuilder() {
        if (serverAlipayAccountBuilder_ != null) {
          return serverAlipayAccountBuilder_.getMessageOrBuilder();
        } else {
          return serverAlipayAccount_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.getDefaultInstance() : serverAlipayAccount_;
        }
      }
      /**
       * <pre>
       ** 服务器返回支付宝账号和名字信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlipayAccount serverAlipayAccount = 312;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerAlipayAccount, com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.Builder, com.kys.util.netty.proto.StoreProto.ServerAlipayAccountOrBuilder> 
          getServerAlipayAccountFieldBuilder() {
        if (serverAlipayAccountBuilder_ == null) {
          serverAlipayAccountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerAlipayAccount, com.kys.util.netty.proto.StoreProto.ServerAlipayAccount.Builder, com.kys.util.netty.proto.StoreProto.ServerAlipayAccountOrBuilder>(
                  getServerAlipayAccount(),
                  getParentForChildren(),
                  isClean());
          serverAlipayAccount_ = null;
        }
        return serverAlipayAccountBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerPayOptions serverPayOptions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerPayOptions, com.kys.util.netty.proto.StoreProto.ServerPayOptions.Builder, com.kys.util.netty.proto.StoreProto.ServerPayOptionsOrBuilder> serverPayOptionsBuilder_;
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      public boolean hasServerPayOptions() {
        return serverPayOptionsBuilder_ != null || serverPayOptions_ != null;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerPayOptions getServerPayOptions() {
        if (serverPayOptionsBuilder_ == null) {
          return serverPayOptions_ == null ? com.kys.util.netty.proto.StoreProto.ServerPayOptions.getDefaultInstance() : serverPayOptions_;
        } else {
          return serverPayOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      public Builder setServerPayOptions(com.kys.util.netty.proto.StoreProto.ServerPayOptions value) {
        if (serverPayOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverPayOptions_ = value;
          onChanged();
        } else {
          serverPayOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      public Builder setServerPayOptions(
          com.kys.util.netty.proto.StoreProto.ServerPayOptions.Builder builderForValue) {
        if (serverPayOptionsBuilder_ == null) {
          serverPayOptions_ = builderForValue.build();
          onChanged();
        } else {
          serverPayOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      public Builder mergeServerPayOptions(com.kys.util.netty.proto.StoreProto.ServerPayOptions value) {
        if (serverPayOptionsBuilder_ == null) {
          if (serverPayOptions_ != null) {
            serverPayOptions_ =
              com.kys.util.netty.proto.StoreProto.ServerPayOptions.newBuilder(serverPayOptions_).mergeFrom(value).buildPartial();
          } else {
            serverPayOptions_ = value;
          }
          onChanged();
        } else {
          serverPayOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      public Builder clearServerPayOptions() {
        if (serverPayOptionsBuilder_ == null) {
          serverPayOptions_ = null;
          onChanged();
        } else {
          serverPayOptions_ = null;
          serverPayOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerPayOptions.Builder getServerPayOptionsBuilder() {
        
        onChanged();
        return getServerPayOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerPayOptionsOrBuilder getServerPayOptionsOrBuilder() {
        if (serverPayOptionsBuilder_ != null) {
          return serverPayOptionsBuilder_.getMessageOrBuilder();
        } else {
          return serverPayOptions_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerPayOptions.getDefaultInstance() : serverPayOptions_;
        }
      }
      /**
       * <pre>
       ** 获取当前支付方式 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPayOptions serverPayOptions = 313;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerPayOptions, com.kys.util.netty.proto.StoreProto.ServerPayOptions.Builder, com.kys.util.netty.proto.StoreProto.ServerPayOptionsOrBuilder> 
          getServerPayOptionsFieldBuilder() {
        if (serverPayOptionsBuilder_ == null) {
          serverPayOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerPayOptions, com.kys.util.netty.proto.StoreProto.ServerPayOptions.Builder, com.kys.util.netty.proto.StoreProto.ServerPayOptionsOrBuilder>(
                  getServerPayOptions(),
                  getParentForChildren(),
                  isClean());
          serverPayOptions_ = null;
        }
        return serverPayOptionsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerIdVerify serverIdVerify_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerIdVerify, com.kys.util.netty.proto.StoreProto.ServerIdVerify.Builder, com.kys.util.netty.proto.StoreProto.ServerIdVerifyOrBuilder> serverIdVerifyBuilder_;
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      public boolean hasServerIdVerify() {
        return serverIdVerifyBuilder_ != null || serverIdVerify_ != null;
      }
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerIdVerify getServerIdVerify() {
        if (serverIdVerifyBuilder_ == null) {
          return serverIdVerify_ == null ? com.kys.util.netty.proto.StoreProto.ServerIdVerify.getDefaultInstance() : serverIdVerify_;
        } else {
          return serverIdVerifyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      public Builder setServerIdVerify(com.kys.util.netty.proto.StoreProto.ServerIdVerify value) {
        if (serverIdVerifyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverIdVerify_ = value;
          onChanged();
        } else {
          serverIdVerifyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      public Builder setServerIdVerify(
          com.kys.util.netty.proto.StoreProto.ServerIdVerify.Builder builderForValue) {
        if (serverIdVerifyBuilder_ == null) {
          serverIdVerify_ = builderForValue.build();
          onChanged();
        } else {
          serverIdVerifyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      public Builder mergeServerIdVerify(com.kys.util.netty.proto.StoreProto.ServerIdVerify value) {
        if (serverIdVerifyBuilder_ == null) {
          if (serverIdVerify_ != null) {
            serverIdVerify_ =
              com.kys.util.netty.proto.StoreProto.ServerIdVerify.newBuilder(serverIdVerify_).mergeFrom(value).buildPartial();
          } else {
            serverIdVerify_ = value;
          }
          onChanged();
        } else {
          serverIdVerifyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      public Builder clearServerIdVerify() {
        if (serverIdVerifyBuilder_ == null) {
          serverIdVerify_ = null;
          onChanged();
        } else {
          serverIdVerify_ = null;
          serverIdVerifyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerIdVerify.Builder getServerIdVerifyBuilder() {
        
        onChanged();
        return getServerIdVerifyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerIdVerifyOrBuilder getServerIdVerifyOrBuilder() {
        if (serverIdVerifyBuilder_ != null) {
          return serverIdVerifyBuilder_.getMessageOrBuilder();
        } else {
          return serverIdVerify_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerIdVerify.getDefaultInstance() : serverIdVerify_;
        }
      }
      /**
       * <pre>
       ** 返回实名认证信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerIdVerify serverIdVerify = 314;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerIdVerify, com.kys.util.netty.proto.StoreProto.ServerIdVerify.Builder, com.kys.util.netty.proto.StoreProto.ServerIdVerifyOrBuilder> 
          getServerIdVerifyFieldBuilder() {
        if (serverIdVerifyBuilder_ == null) {
          serverIdVerifyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerIdVerify, com.kys.util.netty.proto.StoreProto.ServerIdVerify.Builder, com.kys.util.netty.proto.StoreProto.ServerIdVerifyOrBuilder>(
                  getServerIdVerify(),
                  getParentForChildren(),
                  isClean());
          serverIdVerify_ = null;
        }
        return serverIdVerifyBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerVerifyAward serverVerifyAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerVerifyAward, com.kys.util.netty.proto.StoreProto.ServerVerifyAward.Builder, com.kys.util.netty.proto.StoreProto.ServerVerifyAwardOrBuilder> serverVerifyAwardBuilder_;
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      public boolean hasServerVerifyAward() {
        return serverVerifyAwardBuilder_ != null || serverVerifyAward_ != null;
      }
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerVerifyAward getServerVerifyAward() {
        if (serverVerifyAwardBuilder_ == null) {
          return serverVerifyAward_ == null ? com.kys.util.netty.proto.StoreProto.ServerVerifyAward.getDefaultInstance() : serverVerifyAward_;
        } else {
          return serverVerifyAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      public Builder setServerVerifyAward(com.kys.util.netty.proto.StoreProto.ServerVerifyAward value) {
        if (serverVerifyAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverVerifyAward_ = value;
          onChanged();
        } else {
          serverVerifyAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      public Builder setServerVerifyAward(
          com.kys.util.netty.proto.StoreProto.ServerVerifyAward.Builder builderForValue) {
        if (serverVerifyAwardBuilder_ == null) {
          serverVerifyAward_ = builderForValue.build();
          onChanged();
        } else {
          serverVerifyAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      public Builder mergeServerVerifyAward(com.kys.util.netty.proto.StoreProto.ServerVerifyAward value) {
        if (serverVerifyAwardBuilder_ == null) {
          if (serverVerifyAward_ != null) {
            serverVerifyAward_ =
              com.kys.util.netty.proto.StoreProto.ServerVerifyAward.newBuilder(serverVerifyAward_).mergeFrom(value).buildPartial();
          } else {
            serverVerifyAward_ = value;
          }
          onChanged();
        } else {
          serverVerifyAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      public Builder clearServerVerifyAward() {
        if (serverVerifyAwardBuilder_ == null) {
          serverVerifyAward_ = null;
          onChanged();
        } else {
          serverVerifyAward_ = null;
          serverVerifyAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerVerifyAward.Builder getServerVerifyAwardBuilder() {
        
        onChanged();
        return getServerVerifyAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerVerifyAwardOrBuilder getServerVerifyAwardOrBuilder() {
        if (serverVerifyAwardBuilder_ != null) {
          return serverVerifyAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverVerifyAward_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerVerifyAward.getDefaultInstance() : serverVerifyAward_;
        }
      }
      /**
       * <pre>
       ** 展示实名认证的奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyAward serverVerifyAward = 315;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerVerifyAward, com.kys.util.netty.proto.StoreProto.ServerVerifyAward.Builder, com.kys.util.netty.proto.StoreProto.ServerVerifyAwardOrBuilder> 
          getServerVerifyAwardFieldBuilder() {
        if (serverVerifyAwardBuilder_ == null) {
          serverVerifyAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerVerifyAward, com.kys.util.netty.proto.StoreProto.ServerVerifyAward.Builder, com.kys.util.netty.proto.StoreProto.ServerVerifyAwardOrBuilder>(
                  getServerVerifyAward(),
                  getParentForChildren(),
                  isClean());
          serverVerifyAward_ = null;
        }
        return serverVerifyAwardBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerMiniAppPay serverMiniAppPay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerMiniAppPay, com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.Builder, com.kys.util.netty.proto.StoreProto.ServerMiniAppPayOrBuilder> serverMiniAppPayBuilder_;
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      public boolean hasServerMiniAppPay() {
        return serverMiniAppPayBuilder_ != null || serverMiniAppPay_ != null;
      }
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerMiniAppPay getServerMiniAppPay() {
        if (serverMiniAppPayBuilder_ == null) {
          return serverMiniAppPay_ == null ? com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.getDefaultInstance() : serverMiniAppPay_;
        } else {
          return serverMiniAppPayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      public Builder setServerMiniAppPay(com.kys.util.netty.proto.StoreProto.ServerMiniAppPay value) {
        if (serverMiniAppPayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMiniAppPay_ = value;
          onChanged();
        } else {
          serverMiniAppPayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      public Builder setServerMiniAppPay(
          com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.Builder builderForValue) {
        if (serverMiniAppPayBuilder_ == null) {
          serverMiniAppPay_ = builderForValue.build();
          onChanged();
        } else {
          serverMiniAppPayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      public Builder mergeServerMiniAppPay(com.kys.util.netty.proto.StoreProto.ServerMiniAppPay value) {
        if (serverMiniAppPayBuilder_ == null) {
          if (serverMiniAppPay_ != null) {
            serverMiniAppPay_ =
              com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.newBuilder(serverMiniAppPay_).mergeFrom(value).buildPartial();
          } else {
            serverMiniAppPay_ = value;
          }
          onChanged();
        } else {
          serverMiniAppPayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      public Builder clearServerMiniAppPay() {
        if (serverMiniAppPayBuilder_ == null) {
          serverMiniAppPay_ = null;
          onChanged();
        } else {
          serverMiniAppPay_ = null;
          serverMiniAppPayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.Builder getServerMiniAppPayBuilder() {
        
        onChanged();
        return getServerMiniAppPayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerMiniAppPayOrBuilder getServerMiniAppPayOrBuilder() {
        if (serverMiniAppPayBuilder_ != null) {
          return serverMiniAppPayBuilder_.getMessageOrBuilder();
        } else {
          return serverMiniAppPay_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.getDefaultInstance() : serverMiniAppPay_;
        }
      }
      /**
       * <pre>
       ** 用于微信小程序支付的返回信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMiniAppPay serverMiniAppPay = 316;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerMiniAppPay, com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.Builder, com.kys.util.netty.proto.StoreProto.ServerMiniAppPayOrBuilder> 
          getServerMiniAppPayFieldBuilder() {
        if (serverMiniAppPayBuilder_ == null) {
          serverMiniAppPayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerMiniAppPay, com.kys.util.netty.proto.StoreProto.ServerMiniAppPay.Builder, com.kys.util.netty.proto.StoreProto.ServerMiniAppPayOrBuilder>(
                  getServerMiniAppPay(),
                  getParentForChildren(),
                  isClean());
          serverMiniAppPay_ = null;
        }
        return serverMiniAppPayBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerUnionAccount serverUnionAccount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerUnionAccount, com.kys.util.netty.proto.StoreProto.ServerUnionAccount.Builder, com.kys.util.netty.proto.StoreProto.ServerUnionAccountOrBuilder> serverUnionAccountBuilder_;
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      public boolean hasServerUnionAccount() {
        return serverUnionAccountBuilder_ != null || serverUnionAccount_ != null;
      }
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerUnionAccount getServerUnionAccount() {
        if (serverUnionAccountBuilder_ == null) {
          return serverUnionAccount_ == null ? com.kys.util.netty.proto.StoreProto.ServerUnionAccount.getDefaultInstance() : serverUnionAccount_;
        } else {
          return serverUnionAccountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      public Builder setServerUnionAccount(com.kys.util.netty.proto.StoreProto.ServerUnionAccount value) {
        if (serverUnionAccountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverUnionAccount_ = value;
          onChanged();
        } else {
          serverUnionAccountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      public Builder setServerUnionAccount(
          com.kys.util.netty.proto.StoreProto.ServerUnionAccount.Builder builderForValue) {
        if (serverUnionAccountBuilder_ == null) {
          serverUnionAccount_ = builderForValue.build();
          onChanged();
        } else {
          serverUnionAccountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      public Builder mergeServerUnionAccount(com.kys.util.netty.proto.StoreProto.ServerUnionAccount value) {
        if (serverUnionAccountBuilder_ == null) {
          if (serverUnionAccount_ != null) {
            serverUnionAccount_ =
              com.kys.util.netty.proto.StoreProto.ServerUnionAccount.newBuilder(serverUnionAccount_).mergeFrom(value).buildPartial();
          } else {
            serverUnionAccount_ = value;
          }
          onChanged();
        } else {
          serverUnionAccountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      public Builder clearServerUnionAccount() {
        if (serverUnionAccountBuilder_ == null) {
          serverUnionAccount_ = null;
          onChanged();
        } else {
          serverUnionAccount_ = null;
          serverUnionAccountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerUnionAccount.Builder getServerUnionAccountBuilder() {
        
        onChanged();
        return getServerUnionAccountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerUnionAccountOrBuilder getServerUnionAccountOrBuilder() {
        if (serverUnionAccountBuilder_ != null) {
          return serverUnionAccountBuilder_.getMessageOrBuilder();
        } else {
          return serverUnionAccount_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerUnionAccount.getDefaultInstance() : serverUnionAccount_;
        }
      }
      /**
       * <pre>
       ** 服务器返回银行卡卡号信息列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUnionAccount serverUnionAccount = 317;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerUnionAccount, com.kys.util.netty.proto.StoreProto.ServerUnionAccount.Builder, com.kys.util.netty.proto.StoreProto.ServerUnionAccountOrBuilder> 
          getServerUnionAccountFieldBuilder() {
        if (serverUnionAccountBuilder_ == null) {
          serverUnionAccountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerUnionAccount, com.kys.util.netty.proto.StoreProto.ServerUnionAccount.Builder, com.kys.util.netty.proto.StoreProto.ServerUnionAccountOrBuilder>(
                  getServerUnionAccount(),
                  getParentForChildren(),
                  isClean());
          serverUnionAccount_ = null;
        }
        return serverUnionAccountBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetAnnounce serverGetAnnounce_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetAnnounce, com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder> serverGetAnnounceBuilder_;
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public boolean hasServerGetAnnounce() {
        return serverGetAnnounceBuilder_ != null || serverGetAnnounce_ != null;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAnnounce getServerGetAnnounce() {
        if (serverGetAnnounceBuilder_ == null) {
          return serverGetAnnounce_ == null ? com.kys.util.netty.proto.HallProto.ServerGetAnnounce.getDefaultInstance() : serverGetAnnounce_;
        } else {
          return serverGetAnnounceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public Builder setServerGetAnnounce(com.kys.util.netty.proto.HallProto.ServerGetAnnounce value) {
        if (serverGetAnnounceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetAnnounce_ = value;
          onChanged();
        } else {
          serverGetAnnounceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public Builder setServerGetAnnounce(
          com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder builderForValue) {
        if (serverGetAnnounceBuilder_ == null) {
          serverGetAnnounce_ = builderForValue.build();
          onChanged();
        } else {
          serverGetAnnounceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public Builder mergeServerGetAnnounce(com.kys.util.netty.proto.HallProto.ServerGetAnnounce value) {
        if (serverGetAnnounceBuilder_ == null) {
          if (serverGetAnnounce_ != null) {
            serverGetAnnounce_ =
              com.kys.util.netty.proto.HallProto.ServerGetAnnounce.newBuilder(serverGetAnnounce_).mergeFrom(value).buildPartial();
          } else {
            serverGetAnnounce_ = value;
          }
          onChanged();
        } else {
          serverGetAnnounceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public Builder clearServerGetAnnounce() {
        if (serverGetAnnounceBuilder_ == null) {
          serverGetAnnounce_ = null;
          onChanged();
        } else {
          serverGetAnnounce_ = null;
          serverGetAnnounceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder getServerGetAnnounceBuilder() {
        
        onChanged();
        return getServerGetAnnounceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder getServerGetAnnounceOrBuilder() {
        if (serverGetAnnounceBuilder_ != null) {
          return serverGetAnnounceBuilder_.getMessageOrBuilder();
        } else {
          return serverGetAnnounce_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetAnnounce.getDefaultInstance() : serverGetAnnounce_;
        }
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetAnnounce, com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder> 
          getServerGetAnnounceFieldBuilder() {
        if (serverGetAnnounceBuilder_ == null) {
          serverGetAnnounceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetAnnounce, com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder>(
                  getServerGetAnnounce(),
                  getParentForChildren(),
                  isClean());
          serverGetAnnounce_ = null;
        }
        return serverGetAnnounceBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetMail serverGetMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMail, com.kys.util.netty.proto.HallProto.ServerGetMail.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder> serverGetMailBuilder_;
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public boolean hasServerGetMail() {
        return serverGetMailBuilder_ != null || serverGetMail_ != null;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMail getServerGetMail() {
        if (serverGetMailBuilder_ == null) {
          return serverGetMail_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMail.getDefaultInstance() : serverGetMail_;
        } else {
          return serverGetMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public Builder setServerGetMail(com.kys.util.netty.proto.HallProto.ServerGetMail value) {
        if (serverGetMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMail_ = value;
          onChanged();
        } else {
          serverGetMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public Builder setServerGetMail(
          com.kys.util.netty.proto.HallProto.ServerGetMail.Builder builderForValue) {
        if (serverGetMailBuilder_ == null) {
          serverGetMail_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public Builder mergeServerGetMail(com.kys.util.netty.proto.HallProto.ServerGetMail value) {
        if (serverGetMailBuilder_ == null) {
          if (serverGetMail_ != null) {
            serverGetMail_ =
              com.kys.util.netty.proto.HallProto.ServerGetMail.newBuilder(serverGetMail_).mergeFrom(value).buildPartial();
          } else {
            serverGetMail_ = value;
          }
          onChanged();
        } else {
          serverGetMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public Builder clearServerGetMail() {
        if (serverGetMailBuilder_ == null) {
          serverGetMail_ = null;
          onChanged();
        } else {
          serverGetMail_ = null;
          serverGetMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMail.Builder getServerGetMailBuilder() {
        
        onChanged();
        return getServerGetMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder getServerGetMailOrBuilder() {
        if (serverGetMailBuilder_ != null) {
          return serverGetMailBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMail_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetMail.getDefaultInstance() : serverGetMail_;
        }
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMail, com.kys.util.netty.proto.HallProto.ServerGetMail.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder> 
          getServerGetMailFieldBuilder() {
        if (serverGetMailBuilder_ == null) {
          serverGetMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetMail, com.kys.util.netty.proto.HallProto.ServerGetMail.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder>(
                  getServerGetMail(),
                  getParentForChildren(),
                  isClean());
          serverGetMail_ = null;
        }
        return serverGetMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetMailReward serverGetMailReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMailReward, com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder> serverGetMailRewardBuilder_;
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public boolean hasServerGetMailReward() {
        return serverGetMailRewardBuilder_ != null || serverGetMailReward_ != null;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMailReward getServerGetMailReward() {
        if (serverGetMailRewardBuilder_ == null) {
          return serverGetMailReward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMailReward.getDefaultInstance() : serverGetMailReward_;
        } else {
          return serverGetMailRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public Builder setServerGetMailReward(com.kys.util.netty.proto.HallProto.ServerGetMailReward value) {
        if (serverGetMailRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMailReward_ = value;
          onChanged();
        } else {
          serverGetMailRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public Builder setServerGetMailReward(
          com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder builderForValue) {
        if (serverGetMailRewardBuilder_ == null) {
          serverGetMailReward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMailRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public Builder mergeServerGetMailReward(com.kys.util.netty.proto.HallProto.ServerGetMailReward value) {
        if (serverGetMailRewardBuilder_ == null) {
          if (serverGetMailReward_ != null) {
            serverGetMailReward_ =
              com.kys.util.netty.proto.HallProto.ServerGetMailReward.newBuilder(serverGetMailReward_).mergeFrom(value).buildPartial();
          } else {
            serverGetMailReward_ = value;
          }
          onChanged();
        } else {
          serverGetMailRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public Builder clearServerGetMailReward() {
        if (serverGetMailRewardBuilder_ == null) {
          serverGetMailReward_ = null;
          onChanged();
        } else {
          serverGetMailReward_ = null;
          serverGetMailRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder getServerGetMailRewardBuilder() {
        
        onChanged();
        return getServerGetMailRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder getServerGetMailRewardOrBuilder() {
        if (serverGetMailRewardBuilder_ != null) {
          return serverGetMailRewardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMailReward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetMailReward.getDefaultInstance() : serverGetMailReward_;
        }
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMailReward, com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder> 
          getServerGetMailRewardFieldBuilder() {
        if (serverGetMailRewardBuilder_ == null) {
          serverGetMailRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetMailReward, com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder>(
                  getServerGetMailReward(),
                  getParentForChildren(),
                  isClean());
          serverGetMailReward_ = null;
        }
        return serverGetMailRewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerDelMail serverDelMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDelMail, com.kys.util.netty.proto.HallProto.ServerDelMail.Builder, com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder> serverDelMailBuilder_;
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public boolean hasServerDelMail() {
        return serverDelMailBuilder_ != null || serverDelMail_ != null;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDelMail getServerDelMail() {
        if (serverDelMailBuilder_ == null) {
          return serverDelMail_ == null ? com.kys.util.netty.proto.HallProto.ServerDelMail.getDefaultInstance() : serverDelMail_;
        } else {
          return serverDelMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public Builder setServerDelMail(com.kys.util.netty.proto.HallProto.ServerDelMail value) {
        if (serverDelMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDelMail_ = value;
          onChanged();
        } else {
          serverDelMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public Builder setServerDelMail(
          com.kys.util.netty.proto.HallProto.ServerDelMail.Builder builderForValue) {
        if (serverDelMailBuilder_ == null) {
          serverDelMail_ = builderForValue.build();
          onChanged();
        } else {
          serverDelMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public Builder mergeServerDelMail(com.kys.util.netty.proto.HallProto.ServerDelMail value) {
        if (serverDelMailBuilder_ == null) {
          if (serverDelMail_ != null) {
            serverDelMail_ =
              com.kys.util.netty.proto.HallProto.ServerDelMail.newBuilder(serverDelMail_).mergeFrom(value).buildPartial();
          } else {
            serverDelMail_ = value;
          }
          onChanged();
        } else {
          serverDelMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public Builder clearServerDelMail() {
        if (serverDelMailBuilder_ == null) {
          serverDelMail_ = null;
          onChanged();
        } else {
          serverDelMail_ = null;
          serverDelMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDelMail.Builder getServerDelMailBuilder() {
        
        onChanged();
        return getServerDelMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder getServerDelMailOrBuilder() {
        if (serverDelMailBuilder_ != null) {
          return serverDelMailBuilder_.getMessageOrBuilder();
        } else {
          return serverDelMail_ == null ?
              com.kys.util.netty.proto.HallProto.ServerDelMail.getDefaultInstance() : serverDelMail_;
        }
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDelMail, com.kys.util.netty.proto.HallProto.ServerDelMail.Builder, com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder> 
          getServerDelMailFieldBuilder() {
        if (serverDelMailBuilder_ == null) {
          serverDelMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerDelMail, com.kys.util.netty.proto.HallProto.ServerDelMail.Builder, com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder>(
                  getServerDelMail(),
                  getParentForChildren(),
                  isClean());
          serverDelMail_ = null;
        }
        return serverDelMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerReadMail serverReadMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerReadMail, com.kys.util.netty.proto.HallProto.ServerReadMail.Builder, com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder> serverReadMailBuilder_;
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public boolean hasServerReadMail() {
        return serverReadMailBuilder_ != null || serverReadMail_ != null;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerReadMail getServerReadMail() {
        if (serverReadMailBuilder_ == null) {
          return serverReadMail_ == null ? com.kys.util.netty.proto.HallProto.ServerReadMail.getDefaultInstance() : serverReadMail_;
        } else {
          return serverReadMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public Builder setServerReadMail(com.kys.util.netty.proto.HallProto.ServerReadMail value) {
        if (serverReadMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverReadMail_ = value;
          onChanged();
        } else {
          serverReadMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public Builder setServerReadMail(
          com.kys.util.netty.proto.HallProto.ServerReadMail.Builder builderForValue) {
        if (serverReadMailBuilder_ == null) {
          serverReadMail_ = builderForValue.build();
          onChanged();
        } else {
          serverReadMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public Builder mergeServerReadMail(com.kys.util.netty.proto.HallProto.ServerReadMail value) {
        if (serverReadMailBuilder_ == null) {
          if (serverReadMail_ != null) {
            serverReadMail_ =
              com.kys.util.netty.proto.HallProto.ServerReadMail.newBuilder(serverReadMail_).mergeFrom(value).buildPartial();
          } else {
            serverReadMail_ = value;
          }
          onChanged();
        } else {
          serverReadMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public Builder clearServerReadMail() {
        if (serverReadMailBuilder_ == null) {
          serverReadMail_ = null;
          onChanged();
        } else {
          serverReadMail_ = null;
          serverReadMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerReadMail.Builder getServerReadMailBuilder() {
        
        onChanged();
        return getServerReadMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder getServerReadMailOrBuilder() {
        if (serverReadMailBuilder_ != null) {
          return serverReadMailBuilder_.getMessageOrBuilder();
        } else {
          return serverReadMail_ == null ?
              com.kys.util.netty.proto.HallProto.ServerReadMail.getDefaultInstance() : serverReadMail_;
        }
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerReadMail, com.kys.util.netty.proto.HallProto.ServerReadMail.Builder, com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder> 
          getServerReadMailFieldBuilder() {
        if (serverReadMailBuilder_ == null) {
          serverReadMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerReadMail, com.kys.util.netty.proto.HallProto.ServerReadMail.Builder, com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder>(
                  getServerReadMail(),
                  getParentForChildren(),
                  isClean());
          serverReadMail_ = null;
        }
        return serverReadMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerDel2R serverDel2R_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDel2R, com.kys.util.netty.proto.HallProto.ServerDel2R.Builder, com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder> serverDel2RBuilder_;
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public boolean hasServerDel2R() {
        return serverDel2RBuilder_ != null || serverDel2R_ != null;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDel2R getServerDel2R() {
        if (serverDel2RBuilder_ == null) {
          return serverDel2R_ == null ? com.kys.util.netty.proto.HallProto.ServerDel2R.getDefaultInstance() : serverDel2R_;
        } else {
          return serverDel2RBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public Builder setServerDel2R(com.kys.util.netty.proto.HallProto.ServerDel2R value) {
        if (serverDel2RBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDel2R_ = value;
          onChanged();
        } else {
          serverDel2RBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public Builder setServerDel2R(
          com.kys.util.netty.proto.HallProto.ServerDel2R.Builder builderForValue) {
        if (serverDel2RBuilder_ == null) {
          serverDel2R_ = builderForValue.build();
          onChanged();
        } else {
          serverDel2RBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public Builder mergeServerDel2R(com.kys.util.netty.proto.HallProto.ServerDel2R value) {
        if (serverDel2RBuilder_ == null) {
          if (serverDel2R_ != null) {
            serverDel2R_ =
              com.kys.util.netty.proto.HallProto.ServerDel2R.newBuilder(serverDel2R_).mergeFrom(value).buildPartial();
          } else {
            serverDel2R_ = value;
          }
          onChanged();
        } else {
          serverDel2RBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public Builder clearServerDel2R() {
        if (serverDel2RBuilder_ == null) {
          serverDel2R_ = null;
          onChanged();
        } else {
          serverDel2R_ = null;
          serverDel2RBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDel2R.Builder getServerDel2RBuilder() {
        
        onChanged();
        return getServerDel2RFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder getServerDel2ROrBuilder() {
        if (serverDel2RBuilder_ != null) {
          return serverDel2RBuilder_.getMessageOrBuilder();
        } else {
          return serverDel2R_ == null ?
              com.kys.util.netty.proto.HallProto.ServerDel2R.getDefaultInstance() : serverDel2R_;
        }
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDel2R, com.kys.util.netty.proto.HallProto.ServerDel2R.Builder, com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder> 
          getServerDel2RFieldBuilder() {
        if (serverDel2RBuilder_ == null) {
          serverDel2RBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerDel2R, com.kys.util.netty.proto.HallProto.ServerDel2R.Builder, com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder>(
                  getServerDel2R(),
                  getParentForChildren(),
                  isClean());
          serverDel2R_ = null;
        }
        return serverDel2RBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerQueryDailyTask serverQueryDailyTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryDailyTask, com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder> serverQueryDailyTaskBuilder_;
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public boolean hasServerQueryDailyTask() {
        return serverQueryDailyTaskBuilder_ != null || serverQueryDailyTask_ != null;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryDailyTask getServerQueryDailyTask() {
        if (serverQueryDailyTaskBuilder_ == null) {
          return serverQueryDailyTask_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.getDefaultInstance() : serverQueryDailyTask_;
        } else {
          return serverQueryDailyTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public Builder setServerQueryDailyTask(com.kys.util.netty.proto.HallProto.ServerQueryDailyTask value) {
        if (serverQueryDailyTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryDailyTask_ = value;
          onChanged();
        } else {
          serverQueryDailyTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public Builder setServerQueryDailyTask(
          com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder builderForValue) {
        if (serverQueryDailyTaskBuilder_ == null) {
          serverQueryDailyTask_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryDailyTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public Builder mergeServerQueryDailyTask(com.kys.util.netty.proto.HallProto.ServerQueryDailyTask value) {
        if (serverQueryDailyTaskBuilder_ == null) {
          if (serverQueryDailyTask_ != null) {
            serverQueryDailyTask_ =
              com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.newBuilder(serverQueryDailyTask_).mergeFrom(value).buildPartial();
          } else {
            serverQueryDailyTask_ = value;
          }
          onChanged();
        } else {
          serverQueryDailyTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public Builder clearServerQueryDailyTask() {
        if (serverQueryDailyTaskBuilder_ == null) {
          serverQueryDailyTask_ = null;
          onChanged();
        } else {
          serverQueryDailyTask_ = null;
          serverQueryDailyTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder getServerQueryDailyTaskBuilder() {
        
        onChanged();
        return getServerQueryDailyTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder getServerQueryDailyTaskOrBuilder() {
        if (serverQueryDailyTaskBuilder_ != null) {
          return serverQueryDailyTaskBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryDailyTask_ == null ?
              com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.getDefaultInstance() : serverQueryDailyTask_;
        }
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryDailyTask, com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder> 
          getServerQueryDailyTaskFieldBuilder() {
        if (serverQueryDailyTaskBuilder_ == null) {
          serverQueryDailyTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerQueryDailyTask, com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder>(
                  getServerQueryDailyTask(),
                  getParentForChildren(),
                  isClean());
          serverQueryDailyTask_ = null;
        }
        return serverQueryDailyTaskBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetNoviceReward serverGetNoviceReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetNoviceReward, com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder> serverGetNoviceRewardBuilder_;
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public boolean hasServerGetNoviceReward() {
        return serverGetNoviceRewardBuilder_ != null || serverGetNoviceReward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNoviceReward getServerGetNoviceReward() {
        if (serverGetNoviceRewardBuilder_ == null) {
          return serverGetNoviceReward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.getDefaultInstance() : serverGetNoviceReward_;
        } else {
          return serverGetNoviceRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public Builder setServerGetNoviceReward(com.kys.util.netty.proto.HallProto.ServerGetNoviceReward value) {
        if (serverGetNoviceRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetNoviceReward_ = value;
          onChanged();
        } else {
          serverGetNoviceRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public Builder setServerGetNoviceReward(
          com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder builderForValue) {
        if (serverGetNoviceRewardBuilder_ == null) {
          serverGetNoviceReward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetNoviceRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public Builder mergeServerGetNoviceReward(com.kys.util.netty.proto.HallProto.ServerGetNoviceReward value) {
        if (serverGetNoviceRewardBuilder_ == null) {
          if (serverGetNoviceReward_ != null) {
            serverGetNoviceReward_ =
              com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.newBuilder(serverGetNoviceReward_).mergeFrom(value).buildPartial();
          } else {
            serverGetNoviceReward_ = value;
          }
          onChanged();
        } else {
          serverGetNoviceRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public Builder clearServerGetNoviceReward() {
        if (serverGetNoviceRewardBuilder_ == null) {
          serverGetNoviceReward_ = null;
          onChanged();
        } else {
          serverGetNoviceReward_ = null;
          serverGetNoviceRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder getServerGetNoviceRewardBuilder() {
        
        onChanged();
        return getServerGetNoviceRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder getServerGetNoviceRewardOrBuilder() {
        if (serverGetNoviceRewardBuilder_ != null) {
          return serverGetNoviceRewardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetNoviceReward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.getDefaultInstance() : serverGetNoviceReward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetNoviceReward, com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder> 
          getServerGetNoviceRewardFieldBuilder() {
        if (serverGetNoviceRewardBuilder_ == null) {
          serverGetNoviceRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetNoviceReward, com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder>(
                  getServerGetNoviceReward(),
                  getParentForChildren(),
                  isClean());
          serverGetNoviceReward_ = null;
        }
        return serverGetNoviceRewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask serverQueryNoviceTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder> serverQueryNoviceTaskBuilder_;
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public boolean hasServerQueryNoviceTask() {
        return serverQueryNoviceTaskBuilder_ != null || serverQueryNoviceTask_ != null;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask getServerQueryNoviceTask() {
        if (serverQueryNoviceTaskBuilder_ == null) {
          return serverQueryNoviceTask_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.getDefaultInstance() : serverQueryNoviceTask_;
        } else {
          return serverQueryNoviceTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public Builder setServerQueryNoviceTask(com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask value) {
        if (serverQueryNoviceTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryNoviceTask_ = value;
          onChanged();
        } else {
          serverQueryNoviceTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public Builder setServerQueryNoviceTask(
          com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder builderForValue) {
        if (serverQueryNoviceTaskBuilder_ == null) {
          serverQueryNoviceTask_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryNoviceTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public Builder mergeServerQueryNoviceTask(com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask value) {
        if (serverQueryNoviceTaskBuilder_ == null) {
          if (serverQueryNoviceTask_ != null) {
            serverQueryNoviceTask_ =
              com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.newBuilder(serverQueryNoviceTask_).mergeFrom(value).buildPartial();
          } else {
            serverQueryNoviceTask_ = value;
          }
          onChanged();
        } else {
          serverQueryNoviceTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public Builder clearServerQueryNoviceTask() {
        if (serverQueryNoviceTaskBuilder_ == null) {
          serverQueryNoviceTask_ = null;
          onChanged();
        } else {
          serverQueryNoviceTask_ = null;
          serverQueryNoviceTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder getServerQueryNoviceTaskBuilder() {
        
        onChanged();
        return getServerQueryNoviceTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder getServerQueryNoviceTaskOrBuilder() {
        if (serverQueryNoviceTaskBuilder_ != null) {
          return serverQueryNoviceTaskBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryNoviceTask_ == null ?
              com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.getDefaultInstance() : serverQueryNoviceTask_;
        }
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder> 
          getServerQueryNoviceTaskFieldBuilder() {
        if (serverQueryNoviceTaskBuilder_ == null) {
          serverQueryNoviceTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder>(
                  getServerQueryNoviceTask(),
                  getParentForChildren(),
                  isClean());
          serverQueryNoviceTask_ = null;
        }
        return serverQueryNoviceTaskBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetDTAward serverGetDTAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetDTAward, com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder> serverGetDTAwardBuilder_;
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public boolean hasServerGetDTAward() {
        return serverGetDTAwardBuilder_ != null || serverGetDTAward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDTAward getServerGetDTAward() {
        if (serverGetDTAwardBuilder_ == null) {
          return serverGetDTAward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetDTAward.getDefaultInstance() : serverGetDTAward_;
        } else {
          return serverGetDTAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public Builder setServerGetDTAward(com.kys.util.netty.proto.HallProto.ServerGetDTAward value) {
        if (serverGetDTAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetDTAward_ = value;
          onChanged();
        } else {
          serverGetDTAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public Builder setServerGetDTAward(
          com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder builderForValue) {
        if (serverGetDTAwardBuilder_ == null) {
          serverGetDTAward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetDTAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public Builder mergeServerGetDTAward(com.kys.util.netty.proto.HallProto.ServerGetDTAward value) {
        if (serverGetDTAwardBuilder_ == null) {
          if (serverGetDTAward_ != null) {
            serverGetDTAward_ =
              com.kys.util.netty.proto.HallProto.ServerGetDTAward.newBuilder(serverGetDTAward_).mergeFrom(value).buildPartial();
          } else {
            serverGetDTAward_ = value;
          }
          onChanged();
        } else {
          serverGetDTAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public Builder clearServerGetDTAward() {
        if (serverGetDTAwardBuilder_ == null) {
          serverGetDTAward_ = null;
          onChanged();
        } else {
          serverGetDTAward_ = null;
          serverGetDTAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder getServerGetDTAwardBuilder() {
        
        onChanged();
        return getServerGetDTAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder getServerGetDTAwardOrBuilder() {
        if (serverGetDTAwardBuilder_ != null) {
          return serverGetDTAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetDTAward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetDTAward.getDefaultInstance() : serverGetDTAward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetDTAward, com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder> 
          getServerGetDTAwardFieldBuilder() {
        if (serverGetDTAwardBuilder_ == null) {
          serverGetDTAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetDTAward, com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder>(
                  getServerGetDTAward(),
                  getParentForChildren(),
                  isClean());
          serverGetDTAward_ = null;
        }
        return serverGetDTAwardBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr serverGetReceiveAddr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder> serverGetReceiveAddrBuilder_;
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public boolean hasServerGetReceiveAddr() {
        return serverGetReceiveAddrBuilder_ != null || serverGetReceiveAddr_ != null;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr getServerGetReceiveAddr() {
        if (serverGetReceiveAddrBuilder_ == null) {
          return serverGetReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.getDefaultInstance() : serverGetReceiveAddr_;
        } else {
          return serverGetReceiveAddrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public Builder setServerGetReceiveAddr(com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr value) {
        if (serverGetReceiveAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetReceiveAddr_ = value;
          onChanged();
        } else {
          serverGetReceiveAddrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public Builder setServerGetReceiveAddr(
          com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder builderForValue) {
        if (serverGetReceiveAddrBuilder_ == null) {
          serverGetReceiveAddr_ = builderForValue.build();
          onChanged();
        } else {
          serverGetReceiveAddrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public Builder mergeServerGetReceiveAddr(com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr value) {
        if (serverGetReceiveAddrBuilder_ == null) {
          if (serverGetReceiveAddr_ != null) {
            serverGetReceiveAddr_ =
              com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.newBuilder(serverGetReceiveAddr_).mergeFrom(value).buildPartial();
          } else {
            serverGetReceiveAddr_ = value;
          }
          onChanged();
        } else {
          serverGetReceiveAddrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public Builder clearServerGetReceiveAddr() {
        if (serverGetReceiveAddrBuilder_ == null) {
          serverGetReceiveAddr_ = null;
          onChanged();
        } else {
          serverGetReceiveAddr_ = null;
          serverGetReceiveAddrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder getServerGetReceiveAddrBuilder() {
        
        onChanged();
        return getServerGetReceiveAddrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder getServerGetReceiveAddrOrBuilder() {
        if (serverGetReceiveAddrBuilder_ != null) {
          return serverGetReceiveAddrBuilder_.getMessageOrBuilder();
        } else {
          return serverGetReceiveAddr_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.getDefaultInstance() : serverGetReceiveAddr_;
        }
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder> 
          getServerGetReceiveAddrFieldBuilder() {
        if (serverGetReceiveAddrBuilder_ == null) {
          serverGetReceiveAddrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder>(
                  getServerGetReceiveAddr(),
                  getParentForChildren(),
                  isClean());
          serverGetReceiveAddr_ = null;
        }
        return serverGetReceiveAddrBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr serverAlterReceiveAddr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder> serverAlterReceiveAddrBuilder_;
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public boolean hasServerAlterReceiveAddr() {
        return serverAlterReceiveAddrBuilder_ != null || serverAlterReceiveAddr_ != null;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr getServerAlterReceiveAddr() {
        if (serverAlterReceiveAddrBuilder_ == null) {
          return serverAlterReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.getDefaultInstance() : serverAlterReceiveAddr_;
        } else {
          return serverAlterReceiveAddrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public Builder setServerAlterReceiveAddr(com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr value) {
        if (serverAlterReceiveAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverAlterReceiveAddr_ = value;
          onChanged();
        } else {
          serverAlterReceiveAddrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public Builder setServerAlterReceiveAddr(
          com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder builderForValue) {
        if (serverAlterReceiveAddrBuilder_ == null) {
          serverAlterReceiveAddr_ = builderForValue.build();
          onChanged();
        } else {
          serverAlterReceiveAddrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public Builder mergeServerAlterReceiveAddr(com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr value) {
        if (serverAlterReceiveAddrBuilder_ == null) {
          if (serverAlterReceiveAddr_ != null) {
            serverAlterReceiveAddr_ =
              com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.newBuilder(serverAlterReceiveAddr_).mergeFrom(value).buildPartial();
          } else {
            serverAlterReceiveAddr_ = value;
          }
          onChanged();
        } else {
          serverAlterReceiveAddrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public Builder clearServerAlterReceiveAddr() {
        if (serverAlterReceiveAddrBuilder_ == null) {
          serverAlterReceiveAddr_ = null;
          onChanged();
        } else {
          serverAlterReceiveAddr_ = null;
          serverAlterReceiveAddrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder getServerAlterReceiveAddrBuilder() {
        
        onChanged();
        return getServerAlterReceiveAddrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder getServerAlterReceiveAddrOrBuilder() {
        if (serverAlterReceiveAddrBuilder_ != null) {
          return serverAlterReceiveAddrBuilder_.getMessageOrBuilder();
        } else {
          return serverAlterReceiveAddr_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.getDefaultInstance() : serverAlterReceiveAddr_;
        }
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder> 
          getServerAlterReceiveAddrFieldBuilder() {
        if (serverAlterReceiveAddrBuilder_ == null) {
          serverAlterReceiveAddrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder>(
                  getServerAlterReceiveAddr(),
                  getParentForChildren(),
                  isClean());
          serverAlterReceiveAddr_ = null;
        }
        return serverAlterReceiveAddrBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchList serverSnatchList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchList, com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder> serverSnatchListBuilder_;
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public boolean hasServerSnatchList() {
        return serverSnatchListBuilder_ != null || serverSnatchList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchList getServerSnatchList() {
        if (serverSnatchListBuilder_ == null) {
          return serverSnatchList_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchList.getDefaultInstance() : serverSnatchList_;
        } else {
          return serverSnatchListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public Builder setServerSnatchList(com.kys.util.netty.proto.SnatchProto.ServerSnatchList value) {
        if (serverSnatchListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchList_ = value;
          onChanged();
        } else {
          serverSnatchListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public Builder setServerSnatchList(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder builderForValue) {
        if (serverSnatchListBuilder_ == null) {
          serverSnatchList_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public Builder mergeServerSnatchList(com.kys.util.netty.proto.SnatchProto.ServerSnatchList value) {
        if (serverSnatchListBuilder_ == null) {
          if (serverSnatchList_ != null) {
            serverSnatchList_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchList.newBuilder(serverSnatchList_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchList_ = value;
          }
          onChanged();
        } else {
          serverSnatchListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public Builder clearServerSnatchList() {
        if (serverSnatchListBuilder_ == null) {
          serverSnatchList_ = null;
          onChanged();
        } else {
          serverSnatchList_ = null;
          serverSnatchListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder getServerSnatchListBuilder() {
        
        onChanged();
        return getServerSnatchListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder getServerSnatchListOrBuilder() {
        if (serverSnatchListBuilder_ != null) {
          return serverSnatchListBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchList_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchList.getDefaultInstance() : serverSnatchList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchList, com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder> 
          getServerSnatchListFieldBuilder() {
        if (serverSnatchListBuilder_ == null) {
          serverSnatchListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchList, com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder>(
                  getServerSnatchList(),
                  getParentForChildren(),
                  isClean());
          serverSnatchList_ = null;
        }
        return serverSnatchListBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail serverSnatchItemDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder> serverSnatchItemDetailBuilder_;
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public boolean hasServerSnatchItemDetail() {
        return serverSnatchItemDetailBuilder_ != null || serverSnatchItemDetail_ != null;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail getServerSnatchItemDetail() {
        if (serverSnatchItemDetailBuilder_ == null) {
          return serverSnatchItemDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.getDefaultInstance() : serverSnatchItemDetail_;
        } else {
          return serverSnatchItemDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public Builder setServerSnatchItemDetail(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail value) {
        if (serverSnatchItemDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchItemDetail_ = value;
          onChanged();
        } else {
          serverSnatchItemDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public Builder setServerSnatchItemDetail(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder builderForValue) {
        if (serverSnatchItemDetailBuilder_ == null) {
          serverSnatchItemDetail_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchItemDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public Builder mergeServerSnatchItemDetail(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail value) {
        if (serverSnatchItemDetailBuilder_ == null) {
          if (serverSnatchItemDetail_ != null) {
            serverSnatchItemDetail_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.newBuilder(serverSnatchItemDetail_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchItemDetail_ = value;
          }
          onChanged();
        } else {
          serverSnatchItemDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public Builder clearServerSnatchItemDetail() {
        if (serverSnatchItemDetailBuilder_ == null) {
          serverSnatchItemDetail_ = null;
          onChanged();
        } else {
          serverSnatchItemDetail_ = null;
          serverSnatchItemDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder getServerSnatchItemDetailBuilder() {
        
        onChanged();
        return getServerSnatchItemDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder getServerSnatchItemDetailOrBuilder() {
        if (serverSnatchItemDetailBuilder_ != null) {
          return serverSnatchItemDetailBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchItemDetail_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.getDefaultInstance() : serverSnatchItemDetail_;
        }
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder> 
          getServerSnatchItemDetailFieldBuilder() {
        if (serverSnatchItemDetailBuilder_ == null) {
          serverSnatchItemDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder>(
                  getServerSnatchItemDetail(),
                  getParentForChildren(),
                  isClean());
          serverSnatchItemDetail_ = null;
        }
        return serverSnatchItemDetailBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchBet serverSnatchBet_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchBet, com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder> serverSnatchBetBuilder_;
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public boolean hasServerSnatchBet() {
        return serverSnatchBetBuilder_ != null || serverSnatchBet_ != null;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchBet getServerSnatchBet() {
        if (serverSnatchBetBuilder_ == null) {
          return serverSnatchBet_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.getDefaultInstance() : serverSnatchBet_;
        } else {
          return serverSnatchBetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public Builder setServerSnatchBet(com.kys.util.netty.proto.SnatchProto.ServerSnatchBet value) {
        if (serverSnatchBetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchBet_ = value;
          onChanged();
        } else {
          serverSnatchBetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public Builder setServerSnatchBet(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder builderForValue) {
        if (serverSnatchBetBuilder_ == null) {
          serverSnatchBet_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchBetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public Builder mergeServerSnatchBet(com.kys.util.netty.proto.SnatchProto.ServerSnatchBet value) {
        if (serverSnatchBetBuilder_ == null) {
          if (serverSnatchBet_ != null) {
            serverSnatchBet_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.newBuilder(serverSnatchBet_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchBet_ = value;
          }
          onChanged();
        } else {
          serverSnatchBetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public Builder clearServerSnatchBet() {
        if (serverSnatchBetBuilder_ == null) {
          serverSnatchBet_ = null;
          onChanged();
        } else {
          serverSnatchBet_ = null;
          serverSnatchBetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder getServerSnatchBetBuilder() {
        
        onChanged();
        return getServerSnatchBetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder getServerSnatchBetOrBuilder() {
        if (serverSnatchBetBuilder_ != null) {
          return serverSnatchBetBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchBet_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.getDefaultInstance() : serverSnatchBet_;
        }
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchBet, com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder> 
          getServerSnatchBetFieldBuilder() {
        if (serverSnatchBetBuilder_ == null) {
          serverSnatchBetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchBet, com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder>(
                  getServerSnatchBet(),
                  getParentForChildren(),
                  isClean());
          serverSnatchBet_ = null;
        }
        return serverSnatchBetBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList serverSnatchAwardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder> serverSnatchAwardListBuilder_;
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public boolean hasServerSnatchAwardList() {
        return serverSnatchAwardListBuilder_ != null || serverSnatchAwardList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList getServerSnatchAwardList() {
        if (serverSnatchAwardListBuilder_ == null) {
          return serverSnatchAwardList_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.getDefaultInstance() : serverSnatchAwardList_;
        } else {
          return serverSnatchAwardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public Builder setServerSnatchAwardList(com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList value) {
        if (serverSnatchAwardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchAwardList_ = value;
          onChanged();
        } else {
          serverSnatchAwardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public Builder setServerSnatchAwardList(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder builderForValue) {
        if (serverSnatchAwardListBuilder_ == null) {
          serverSnatchAwardList_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchAwardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public Builder mergeServerSnatchAwardList(com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList value) {
        if (serverSnatchAwardListBuilder_ == null) {
          if (serverSnatchAwardList_ != null) {
            serverSnatchAwardList_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.newBuilder(serverSnatchAwardList_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchAwardList_ = value;
          }
          onChanged();
        } else {
          serverSnatchAwardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public Builder clearServerSnatchAwardList() {
        if (serverSnatchAwardListBuilder_ == null) {
          serverSnatchAwardList_ = null;
          onChanged();
        } else {
          serverSnatchAwardList_ = null;
          serverSnatchAwardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder getServerSnatchAwardListBuilder() {
        
        onChanged();
        return getServerSnatchAwardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder getServerSnatchAwardListOrBuilder() {
        if (serverSnatchAwardListBuilder_ != null) {
          return serverSnatchAwardListBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchAwardList_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.getDefaultInstance() : serverSnatchAwardList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder> 
          getServerSnatchAwardListFieldBuilder() {
        if (serverSnatchAwardListBuilder_ == null) {
          serverSnatchAwardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder>(
                  getServerSnatchAwardList(),
                  getParentForChildren(),
                  isClean());
          serverSnatchAwardList_ = null;
        }
        return serverSnatchAwardListBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord serverOwnSnatchRecord_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder> serverOwnSnatchRecordBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public boolean hasServerOwnSnatchRecord() {
        return serverOwnSnatchRecordBuilder_ != null || serverOwnSnatchRecord_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord getServerOwnSnatchRecord() {
        if (serverOwnSnatchRecordBuilder_ == null) {
          return serverOwnSnatchRecord_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.getDefaultInstance() : serverOwnSnatchRecord_;
        } else {
          return serverOwnSnatchRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public Builder setServerOwnSnatchRecord(com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord value) {
        if (serverOwnSnatchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverOwnSnatchRecord_ = value;
          onChanged();
        } else {
          serverOwnSnatchRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public Builder setServerOwnSnatchRecord(
          com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder builderForValue) {
        if (serverOwnSnatchRecordBuilder_ == null) {
          serverOwnSnatchRecord_ = builderForValue.build();
          onChanged();
        } else {
          serverOwnSnatchRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public Builder mergeServerOwnSnatchRecord(com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord value) {
        if (serverOwnSnatchRecordBuilder_ == null) {
          if (serverOwnSnatchRecord_ != null) {
            serverOwnSnatchRecord_ =
              com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.newBuilder(serverOwnSnatchRecord_).mergeFrom(value).buildPartial();
          } else {
            serverOwnSnatchRecord_ = value;
          }
          onChanged();
        } else {
          serverOwnSnatchRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public Builder clearServerOwnSnatchRecord() {
        if (serverOwnSnatchRecordBuilder_ == null) {
          serverOwnSnatchRecord_ = null;
          onChanged();
        } else {
          serverOwnSnatchRecord_ = null;
          serverOwnSnatchRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder getServerOwnSnatchRecordBuilder() {
        
        onChanged();
        return getServerOwnSnatchRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder getServerOwnSnatchRecordOrBuilder() {
        if (serverOwnSnatchRecordBuilder_ != null) {
          return serverOwnSnatchRecordBuilder_.getMessageOrBuilder();
        } else {
          return serverOwnSnatchRecord_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.getDefaultInstance() : serverOwnSnatchRecord_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder> 
          getServerOwnSnatchRecordFieldBuilder() {
        if (serverOwnSnatchRecordBuilder_ == null) {
          serverOwnSnatchRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder>(
                  getServerOwnSnatchRecord(),
                  getParentForChildren(),
                  isClean());
          serverOwnSnatchRecord_ = null;
        }
        return serverOwnSnatchRecordBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory serverSnatchItemHistory_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder> serverSnatchItemHistoryBuilder_;
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public boolean hasServerSnatchItemHistory() {
        return serverSnatchItemHistoryBuilder_ != null || serverSnatchItemHistory_ != null;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory getServerSnatchItemHistory() {
        if (serverSnatchItemHistoryBuilder_ == null) {
          return serverSnatchItemHistory_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.getDefaultInstance() : serverSnatchItemHistory_;
        } else {
          return serverSnatchItemHistoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public Builder setServerSnatchItemHistory(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory value) {
        if (serverSnatchItemHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchItemHistory_ = value;
          onChanged();
        } else {
          serverSnatchItemHistoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public Builder setServerSnatchItemHistory(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder builderForValue) {
        if (serverSnatchItemHistoryBuilder_ == null) {
          serverSnatchItemHistory_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchItemHistoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public Builder mergeServerSnatchItemHistory(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory value) {
        if (serverSnatchItemHistoryBuilder_ == null) {
          if (serverSnatchItemHistory_ != null) {
            serverSnatchItemHistory_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.newBuilder(serverSnatchItemHistory_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchItemHistory_ = value;
          }
          onChanged();
        } else {
          serverSnatchItemHistoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public Builder clearServerSnatchItemHistory() {
        if (serverSnatchItemHistoryBuilder_ == null) {
          serverSnatchItemHistory_ = null;
          onChanged();
        } else {
          serverSnatchItemHistory_ = null;
          serverSnatchItemHistoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder getServerSnatchItemHistoryBuilder() {
        
        onChanged();
        return getServerSnatchItemHistoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder getServerSnatchItemHistoryOrBuilder() {
        if (serverSnatchItemHistoryBuilder_ != null) {
          return serverSnatchItemHistoryBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchItemHistory_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.getDefaultInstance() : serverSnatchItemHistory_;
        }
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder> 
          getServerSnatchItemHistoryFieldBuilder() {
        if (serverSnatchItemHistoryBuilder_ == null) {
          serverSnatchItemHistoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder>(
                  getServerSnatchItemHistory(),
                  getParentForChildren(),
                  isClean());
          serverSnatchItemHistory_ = null;
        }
        return serverSnatchItemHistoryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail serverSnatchHistoryDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder> serverSnatchHistoryDetailBuilder_;
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public boolean hasServerSnatchHistoryDetail() {
        return serverSnatchHistoryDetailBuilder_ != null || serverSnatchHistoryDetail_ != null;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail getServerSnatchHistoryDetail() {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          return serverSnatchHistoryDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.getDefaultInstance() : serverSnatchHistoryDetail_;
        } else {
          return serverSnatchHistoryDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public Builder setServerSnatchHistoryDetail(com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail value) {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchHistoryDetail_ = value;
          onChanged();
        } else {
          serverSnatchHistoryDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public Builder setServerSnatchHistoryDetail(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder builderForValue) {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          serverSnatchHistoryDetail_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchHistoryDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public Builder mergeServerSnatchHistoryDetail(com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail value) {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          if (serverSnatchHistoryDetail_ != null) {
            serverSnatchHistoryDetail_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.newBuilder(serverSnatchHistoryDetail_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchHistoryDetail_ = value;
          }
          onChanged();
        } else {
          serverSnatchHistoryDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public Builder clearServerSnatchHistoryDetail() {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          serverSnatchHistoryDetail_ = null;
          onChanged();
        } else {
          serverSnatchHistoryDetail_ = null;
          serverSnatchHistoryDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder getServerSnatchHistoryDetailBuilder() {
        
        onChanged();
        return getServerSnatchHistoryDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder getServerSnatchHistoryDetailOrBuilder() {
        if (serverSnatchHistoryDetailBuilder_ != null) {
          return serverSnatchHistoryDetailBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchHistoryDetail_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.getDefaultInstance() : serverSnatchHistoryDetail_;
        }
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder> 
          getServerSnatchHistoryDetailFieldBuilder() {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          serverSnatchHistoryDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder>(
                  getServerSnatchHistoryDetail(),
                  getParentForChildren(),
                  isClean());
          serverSnatchHistoryDetail_ = null;
        }
        return serverSnatchHistoryDetailBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward serverSnatchGetAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder> serverSnatchGetAwardBuilder_;
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public boolean hasServerSnatchGetAward() {
        return serverSnatchGetAwardBuilder_ != null || serverSnatchGetAward_ != null;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward getServerSnatchGetAward() {
        if (serverSnatchGetAwardBuilder_ == null) {
          return serverSnatchGetAward_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.getDefaultInstance() : serverSnatchGetAward_;
        } else {
          return serverSnatchGetAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public Builder setServerSnatchGetAward(com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward value) {
        if (serverSnatchGetAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchGetAward_ = value;
          onChanged();
        } else {
          serverSnatchGetAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public Builder setServerSnatchGetAward(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder builderForValue) {
        if (serverSnatchGetAwardBuilder_ == null) {
          serverSnatchGetAward_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchGetAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public Builder mergeServerSnatchGetAward(com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward value) {
        if (serverSnatchGetAwardBuilder_ == null) {
          if (serverSnatchGetAward_ != null) {
            serverSnatchGetAward_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.newBuilder(serverSnatchGetAward_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchGetAward_ = value;
          }
          onChanged();
        } else {
          serverSnatchGetAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public Builder clearServerSnatchGetAward() {
        if (serverSnatchGetAwardBuilder_ == null) {
          serverSnatchGetAward_ = null;
          onChanged();
        } else {
          serverSnatchGetAward_ = null;
          serverSnatchGetAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder getServerSnatchGetAwardBuilder() {
        
        onChanged();
        return getServerSnatchGetAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder getServerSnatchGetAwardOrBuilder() {
        if (serverSnatchGetAwardBuilder_ != null) {
          return serverSnatchGetAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchGetAward_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.getDefaultInstance() : serverSnatchGetAward_;
        }
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder> 
          getServerSnatchGetAwardFieldBuilder() {
        if (serverSnatchGetAwardBuilder_ == null) {
          serverSnatchGetAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder>(
                  getServerSnatchGetAward(),
                  getParentForChildren(),
                  isClean());
          serverSnatchGetAward_ = null;
        }
        return serverSnatchGetAwardBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerEnterDG serverEnterDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerEnterDG, com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder> serverEnterDGBuilder_;
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public boolean hasServerEnterDG() {
        return serverEnterDGBuilder_ != null || serverEnterDG_ != null;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerEnterDG getServerEnterDG() {
        if (serverEnterDGBuilder_ == null) {
          return serverEnterDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerEnterDG.getDefaultInstance() : serverEnterDG_;
        } else {
          return serverEnterDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public Builder setServerEnterDG(com.kys.util.netty.proto.SnatchProto.ServerEnterDG value) {
        if (serverEnterDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverEnterDG_ = value;
          onChanged();
        } else {
          serverEnterDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public Builder setServerEnterDG(
          com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder builderForValue) {
        if (serverEnterDGBuilder_ == null) {
          serverEnterDG_ = builderForValue.build();
          onChanged();
        } else {
          serverEnterDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public Builder mergeServerEnterDG(com.kys.util.netty.proto.SnatchProto.ServerEnterDG value) {
        if (serverEnterDGBuilder_ == null) {
          if (serverEnterDG_ != null) {
            serverEnterDG_ =
              com.kys.util.netty.proto.SnatchProto.ServerEnterDG.newBuilder(serverEnterDG_).mergeFrom(value).buildPartial();
          } else {
            serverEnterDG_ = value;
          }
          onChanged();
        } else {
          serverEnterDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public Builder clearServerEnterDG() {
        if (serverEnterDGBuilder_ == null) {
          serverEnterDG_ = null;
          onChanged();
        } else {
          serverEnterDG_ = null;
          serverEnterDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder getServerEnterDGBuilder() {
        
        onChanged();
        return getServerEnterDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder getServerEnterDGOrBuilder() {
        if (serverEnterDGBuilder_ != null) {
          return serverEnterDGBuilder_.getMessageOrBuilder();
        } else {
          return serverEnterDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerEnterDG.getDefaultInstance() : serverEnterDG_;
        }
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerEnterDG, com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder> 
          getServerEnterDGFieldBuilder() {
        if (serverEnterDGBuilder_ == null) {
          serverEnterDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerEnterDG, com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder>(
                  getServerEnterDG(),
                  getParentForChildren(),
                  isClean());
          serverEnterDG_ = null;
        }
        return serverEnterDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerDGLottery serverDGLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerDGLottery, com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder> serverDGLotteryBuilder_;
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public boolean hasServerDGLottery() {
        return serverDGLotteryBuilder_ != null || serverDGLottery_ != null;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDGLottery getServerDGLottery() {
        if (serverDGLotteryBuilder_ == null) {
          return serverDGLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerDGLottery.getDefaultInstance() : serverDGLottery_;
        } else {
          return serverDGLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public Builder setServerDGLottery(com.kys.util.netty.proto.SnatchProto.ServerDGLottery value) {
        if (serverDGLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDGLottery_ = value;
          onChanged();
        } else {
          serverDGLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public Builder setServerDGLottery(
          com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder builderForValue) {
        if (serverDGLotteryBuilder_ == null) {
          serverDGLottery_ = builderForValue.build();
          onChanged();
        } else {
          serverDGLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public Builder mergeServerDGLottery(com.kys.util.netty.proto.SnatchProto.ServerDGLottery value) {
        if (serverDGLotteryBuilder_ == null) {
          if (serverDGLottery_ != null) {
            serverDGLottery_ =
              com.kys.util.netty.proto.SnatchProto.ServerDGLottery.newBuilder(serverDGLottery_).mergeFrom(value).buildPartial();
          } else {
            serverDGLottery_ = value;
          }
          onChanged();
        } else {
          serverDGLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public Builder clearServerDGLottery() {
        if (serverDGLotteryBuilder_ == null) {
          serverDGLottery_ = null;
          onChanged();
        } else {
          serverDGLottery_ = null;
          serverDGLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder getServerDGLotteryBuilder() {
        
        onChanged();
        return getServerDGLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder getServerDGLotteryOrBuilder() {
        if (serverDGLotteryBuilder_ != null) {
          return serverDGLotteryBuilder_.getMessageOrBuilder();
        } else {
          return serverDGLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerDGLottery.getDefaultInstance() : serverDGLottery_;
        }
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerDGLottery, com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder> 
          getServerDGLotteryFieldBuilder() {
        if (serverDGLotteryBuilder_ == null) {
          serverDGLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerDGLottery, com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder>(
                  getServerDGLottery(),
                  getParentForChildren(),
                  isClean());
          serverDGLottery_ = null;
        }
        return serverDGLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerResetLottery serverResetLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerResetLottery, com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder> serverResetLotteryBuilder_;
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public boolean hasServerResetLottery() {
        return serverResetLotteryBuilder_ != null || serverResetLottery_ != null;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerResetLottery getServerResetLottery() {
        if (serverResetLotteryBuilder_ == null) {
          return serverResetLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerResetLottery.getDefaultInstance() : serverResetLottery_;
        } else {
          return serverResetLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public Builder setServerResetLottery(com.kys.util.netty.proto.SnatchProto.ServerResetLottery value) {
        if (serverResetLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverResetLottery_ = value;
          onChanged();
        } else {
          serverResetLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public Builder setServerResetLottery(
          com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder builderForValue) {
        if (serverResetLotteryBuilder_ == null) {
          serverResetLottery_ = builderForValue.build();
          onChanged();
        } else {
          serverResetLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public Builder mergeServerResetLottery(com.kys.util.netty.proto.SnatchProto.ServerResetLottery value) {
        if (serverResetLotteryBuilder_ == null) {
          if (serverResetLottery_ != null) {
            serverResetLottery_ =
              com.kys.util.netty.proto.SnatchProto.ServerResetLottery.newBuilder(serverResetLottery_).mergeFrom(value).buildPartial();
          } else {
            serverResetLottery_ = value;
          }
          onChanged();
        } else {
          serverResetLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public Builder clearServerResetLottery() {
        if (serverResetLotteryBuilder_ == null) {
          serverResetLottery_ = null;
          onChanged();
        } else {
          serverResetLottery_ = null;
          serverResetLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder getServerResetLotteryBuilder() {
        
        onChanged();
        return getServerResetLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder getServerResetLotteryOrBuilder() {
        if (serverResetLotteryBuilder_ != null) {
          return serverResetLotteryBuilder_.getMessageOrBuilder();
        } else {
          return serverResetLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerResetLottery.getDefaultInstance() : serverResetLottery_;
        }
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerResetLottery, com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder> 
          getServerResetLotteryFieldBuilder() {
        if (serverResetLotteryBuilder_ == null) {
          serverResetLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerResetLottery, com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder>(
                  getServerResetLottery(),
                  getParentForChildren(),
                  isClean());
          serverResetLottery_ = null;
        }
        return serverResetLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerExitDG serverExitDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerExitDG, com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder> serverExitDGBuilder_;
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public boolean hasServerExitDG() {
        return serverExitDGBuilder_ != null || serverExitDG_ != null;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDG getServerExitDG() {
        if (serverExitDGBuilder_ == null) {
          return serverExitDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerExitDG.getDefaultInstance() : serverExitDG_;
        } else {
          return serverExitDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public Builder setServerExitDG(com.kys.util.netty.proto.SnatchProto.ServerExitDG value) {
        if (serverExitDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverExitDG_ = value;
          onChanged();
        } else {
          serverExitDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public Builder setServerExitDG(
          com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder builderForValue) {
        if (serverExitDGBuilder_ == null) {
          serverExitDG_ = builderForValue.build();
          onChanged();
        } else {
          serverExitDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public Builder mergeServerExitDG(com.kys.util.netty.proto.SnatchProto.ServerExitDG value) {
        if (serverExitDGBuilder_ == null) {
          if (serverExitDG_ != null) {
            serverExitDG_ =
              com.kys.util.netty.proto.SnatchProto.ServerExitDG.newBuilder(serverExitDG_).mergeFrom(value).buildPartial();
          } else {
            serverExitDG_ = value;
          }
          onChanged();
        } else {
          serverExitDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public Builder clearServerExitDG() {
        if (serverExitDGBuilder_ == null) {
          serverExitDG_ = null;
          onChanged();
        } else {
          serverExitDG_ = null;
          serverExitDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder getServerExitDGBuilder() {
        
        onChanged();
        return getServerExitDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder getServerExitDGOrBuilder() {
        if (serverExitDGBuilder_ != null) {
          return serverExitDGBuilder_.getMessageOrBuilder();
        } else {
          return serverExitDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerExitDG.getDefaultInstance() : serverExitDG_;
        }
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerExitDG, com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder> 
          getServerExitDGFieldBuilder() {
        if (serverExitDGBuilder_ == null) {
          serverExitDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerExitDG, com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder>(
                  getServerExitDG(),
                  getParentForChildren(),
                  isClean());
          serverExitDG_ = null;
        }
        return serverExitDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerOpenDG serverOpenDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOpenDG, com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder> serverOpenDGBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public boolean hasServerOpenDG() {
        return serverOpenDGBuilder_ != null || serverOpenDG_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDG getServerOpenDG() {
        if (serverOpenDGBuilder_ == null) {
          return serverOpenDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOpenDG.getDefaultInstance() : serverOpenDG_;
        } else {
          return serverOpenDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public Builder setServerOpenDG(com.kys.util.netty.proto.SnatchProto.ServerOpenDG value) {
        if (serverOpenDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverOpenDG_ = value;
          onChanged();
        } else {
          serverOpenDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public Builder setServerOpenDG(
          com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder builderForValue) {
        if (serverOpenDGBuilder_ == null) {
          serverOpenDG_ = builderForValue.build();
          onChanged();
        } else {
          serverOpenDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public Builder mergeServerOpenDG(com.kys.util.netty.proto.SnatchProto.ServerOpenDG value) {
        if (serverOpenDGBuilder_ == null) {
          if (serverOpenDG_ != null) {
            serverOpenDG_ =
              com.kys.util.netty.proto.SnatchProto.ServerOpenDG.newBuilder(serverOpenDG_).mergeFrom(value).buildPartial();
          } else {
            serverOpenDG_ = value;
          }
          onChanged();
        } else {
          serverOpenDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public Builder clearServerOpenDG() {
        if (serverOpenDGBuilder_ == null) {
          serverOpenDG_ = null;
          onChanged();
        } else {
          serverOpenDG_ = null;
          serverOpenDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder getServerOpenDGBuilder() {
        
        onChanged();
        return getServerOpenDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder getServerOpenDGOrBuilder() {
        if (serverOpenDGBuilder_ != null) {
          return serverOpenDGBuilder_.getMessageOrBuilder();
        } else {
          return serverOpenDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerOpenDG.getDefaultInstance() : serverOpenDG_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOpenDG, com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder> 
          getServerOpenDGFieldBuilder() {
        if (serverOpenDGBuilder_ == null) {
          serverOpenDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerOpenDG, com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder>(
                  getServerOpenDG(),
                  getParentForChildren(),
                  isClean());
          serverOpenDG_ = null;
        }
        return serverOpenDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerOpenDD serverOpenDD_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOpenDD, com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder> serverOpenDDBuilder_;
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public boolean hasServerOpenDD() {
        return serverOpenDDBuilder_ != null || serverOpenDD_ != null;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDD getServerOpenDD() {
        if (serverOpenDDBuilder_ == null) {
          return serverOpenDD_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOpenDD.getDefaultInstance() : serverOpenDD_;
        } else {
          return serverOpenDDBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public Builder setServerOpenDD(com.kys.util.netty.proto.SnatchProto.ServerOpenDD value) {
        if (serverOpenDDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverOpenDD_ = value;
          onChanged();
        } else {
          serverOpenDDBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public Builder setServerOpenDD(
          com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder builderForValue) {
        if (serverOpenDDBuilder_ == null) {
          serverOpenDD_ = builderForValue.build();
          onChanged();
        } else {
          serverOpenDDBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public Builder mergeServerOpenDD(com.kys.util.netty.proto.SnatchProto.ServerOpenDD value) {
        if (serverOpenDDBuilder_ == null) {
          if (serverOpenDD_ != null) {
            serverOpenDD_ =
              com.kys.util.netty.proto.SnatchProto.ServerOpenDD.newBuilder(serverOpenDD_).mergeFrom(value).buildPartial();
          } else {
            serverOpenDD_ = value;
          }
          onChanged();
        } else {
          serverOpenDDBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public Builder clearServerOpenDD() {
        if (serverOpenDDBuilder_ == null) {
          serverOpenDD_ = null;
          onChanged();
        } else {
          serverOpenDD_ = null;
          serverOpenDDBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder getServerOpenDDBuilder() {
        
        onChanged();
        return getServerOpenDDFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder getServerOpenDDOrBuilder() {
        if (serverOpenDDBuilder_ != null) {
          return serverOpenDDBuilder_.getMessageOrBuilder();
        } else {
          return serverOpenDD_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerOpenDD.getDefaultInstance() : serverOpenDD_;
        }
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOpenDD, com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder> 
          getServerOpenDDFieldBuilder() {
        if (serverOpenDDBuilder_ == null) {
          serverOpenDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerOpenDD, com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder>(
                  getServerOpenDD(),
                  getParentForChildren(),
                  isClean());
          serverOpenDD_ = null;
        }
        return serverOpenDDBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerDDLottery serverDDLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerDDLottery, com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder> serverDDLotteryBuilder_;
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public boolean hasServerDDLottery() {
        return serverDDLotteryBuilder_ != null || serverDDLottery_ != null;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDDLottery getServerDDLottery() {
        if (serverDDLotteryBuilder_ == null) {
          return serverDDLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerDDLottery.getDefaultInstance() : serverDDLottery_;
        } else {
          return serverDDLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public Builder setServerDDLottery(com.kys.util.netty.proto.SnatchProto.ServerDDLottery value) {
        if (serverDDLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDDLottery_ = value;
          onChanged();
        } else {
          serverDDLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public Builder setServerDDLottery(
          com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder builderForValue) {
        if (serverDDLotteryBuilder_ == null) {
          serverDDLottery_ = builderForValue.build();
          onChanged();
        } else {
          serverDDLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public Builder mergeServerDDLottery(com.kys.util.netty.proto.SnatchProto.ServerDDLottery value) {
        if (serverDDLotteryBuilder_ == null) {
          if (serverDDLottery_ != null) {
            serverDDLottery_ =
              com.kys.util.netty.proto.SnatchProto.ServerDDLottery.newBuilder(serverDDLottery_).mergeFrom(value).buildPartial();
          } else {
            serverDDLottery_ = value;
          }
          onChanged();
        } else {
          serverDDLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public Builder clearServerDDLottery() {
        if (serverDDLotteryBuilder_ == null) {
          serverDDLottery_ = null;
          onChanged();
        } else {
          serverDDLottery_ = null;
          serverDDLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder getServerDDLotteryBuilder() {
        
        onChanged();
        return getServerDDLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder getServerDDLotteryOrBuilder() {
        if (serverDDLotteryBuilder_ != null) {
          return serverDDLotteryBuilder_.getMessageOrBuilder();
        } else {
          return serverDDLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerDDLottery.getDefaultInstance() : serverDDLottery_;
        }
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerDDLottery, com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder> 
          getServerDDLotteryFieldBuilder() {
        if (serverDDLotteryBuilder_ == null) {
          serverDDLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerDDLottery, com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder>(
                  getServerDDLottery(),
                  getParentForChildren(),
                  isClean());
          serverDDLottery_ = null;
        }
        return serverDDLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerExitDD serverExitDD_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerExitDD, com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder> serverExitDDBuilder_;
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public boolean hasServerExitDD() {
        return serverExitDDBuilder_ != null || serverExitDD_ != null;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDD getServerExitDD() {
        if (serverExitDDBuilder_ == null) {
          return serverExitDD_ == null ? com.kys.util.netty.proto.SnatchProto.ServerExitDD.getDefaultInstance() : serverExitDD_;
        } else {
          return serverExitDDBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public Builder setServerExitDD(com.kys.util.netty.proto.SnatchProto.ServerExitDD value) {
        if (serverExitDDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverExitDD_ = value;
          onChanged();
        } else {
          serverExitDDBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public Builder setServerExitDD(
          com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder builderForValue) {
        if (serverExitDDBuilder_ == null) {
          serverExitDD_ = builderForValue.build();
          onChanged();
        } else {
          serverExitDDBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public Builder mergeServerExitDD(com.kys.util.netty.proto.SnatchProto.ServerExitDD value) {
        if (serverExitDDBuilder_ == null) {
          if (serverExitDD_ != null) {
            serverExitDD_ =
              com.kys.util.netty.proto.SnatchProto.ServerExitDD.newBuilder(serverExitDD_).mergeFrom(value).buildPartial();
          } else {
            serverExitDD_ = value;
          }
          onChanged();
        } else {
          serverExitDDBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public Builder clearServerExitDD() {
        if (serverExitDDBuilder_ == null) {
          serverExitDD_ = null;
          onChanged();
        } else {
          serverExitDD_ = null;
          serverExitDDBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder getServerExitDDBuilder() {
        
        onChanged();
        return getServerExitDDFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder getServerExitDDOrBuilder() {
        if (serverExitDDBuilder_ != null) {
          return serverExitDDBuilder_.getMessageOrBuilder();
        } else {
          return serverExitDD_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerExitDD.getDefaultInstance() : serverExitDD_;
        }
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerExitDD, com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder> 
          getServerExitDDFieldBuilder() {
        if (serverExitDDBuilder_ == null) {
          serverExitDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerExitDD, com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder>(
                  getServerExitDD(),
                  getParentForChildren(),
                  isClean());
          serverExitDD_ = null;
        }
        return serverExitDDBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ServerQueryProp serverQueryProp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerQueryProp, com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder> serverQueryPropBuilder_;
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public boolean hasServerQueryProp() {
        return serverQueryPropBuilder_ != null || serverQueryProp_ != null;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryProp getServerQueryProp() {
        if (serverQueryPropBuilder_ == null) {
          return serverQueryProp_ == null ? com.kys.util.netty.proto.PropProto.ServerQueryProp.getDefaultInstance() : serverQueryProp_;
        } else {
          return serverQueryPropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public Builder setServerQueryProp(com.kys.util.netty.proto.PropProto.ServerQueryProp value) {
        if (serverQueryPropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryProp_ = value;
          onChanged();
        } else {
          serverQueryPropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public Builder setServerQueryProp(
          com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder builderForValue) {
        if (serverQueryPropBuilder_ == null) {
          serverQueryProp_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryPropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public Builder mergeServerQueryProp(com.kys.util.netty.proto.PropProto.ServerQueryProp value) {
        if (serverQueryPropBuilder_ == null) {
          if (serverQueryProp_ != null) {
            serverQueryProp_ =
              com.kys.util.netty.proto.PropProto.ServerQueryProp.newBuilder(serverQueryProp_).mergeFrom(value).buildPartial();
          } else {
            serverQueryProp_ = value;
          }
          onChanged();
        } else {
          serverQueryPropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public Builder clearServerQueryProp() {
        if (serverQueryPropBuilder_ == null) {
          serverQueryProp_ = null;
          onChanged();
        } else {
          serverQueryProp_ = null;
          serverQueryPropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder getServerQueryPropBuilder() {
        
        onChanged();
        return getServerQueryPropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder getServerQueryPropOrBuilder() {
        if (serverQueryPropBuilder_ != null) {
          return serverQueryPropBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryProp_ == null ?
              com.kys.util.netty.proto.PropProto.ServerQueryProp.getDefaultInstance() : serverQueryProp_;
        }
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerQueryProp, com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder> 
          getServerQueryPropFieldBuilder() {
        if (serverQueryPropBuilder_ == null) {
          serverQueryPropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ServerQueryProp, com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder>(
                  getServerQueryProp(),
                  getParentForChildren(),
                  isClean());
          serverQueryProp_ = null;
        }
        return serverQueryPropBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ServerUseProp serverUseProp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerUseProp, com.kys.util.netty.proto.PropProto.ServerUseProp.Builder, com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder> serverUsePropBuilder_;
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public boolean hasServerUseProp() {
        return serverUsePropBuilder_ != null || serverUseProp_ != null;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerUseProp getServerUseProp() {
        if (serverUsePropBuilder_ == null) {
          return serverUseProp_ == null ? com.kys.util.netty.proto.PropProto.ServerUseProp.getDefaultInstance() : serverUseProp_;
        } else {
          return serverUsePropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public Builder setServerUseProp(com.kys.util.netty.proto.PropProto.ServerUseProp value) {
        if (serverUsePropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverUseProp_ = value;
          onChanged();
        } else {
          serverUsePropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public Builder setServerUseProp(
          com.kys.util.netty.proto.PropProto.ServerUseProp.Builder builderForValue) {
        if (serverUsePropBuilder_ == null) {
          serverUseProp_ = builderForValue.build();
          onChanged();
        } else {
          serverUsePropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public Builder mergeServerUseProp(com.kys.util.netty.proto.PropProto.ServerUseProp value) {
        if (serverUsePropBuilder_ == null) {
          if (serverUseProp_ != null) {
            serverUseProp_ =
              com.kys.util.netty.proto.PropProto.ServerUseProp.newBuilder(serverUseProp_).mergeFrom(value).buildPartial();
          } else {
            serverUseProp_ = value;
          }
          onChanged();
        } else {
          serverUsePropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public Builder clearServerUseProp() {
        if (serverUsePropBuilder_ == null) {
          serverUseProp_ = null;
          onChanged();
        } else {
          serverUseProp_ = null;
          serverUsePropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerUseProp.Builder getServerUsePropBuilder() {
        
        onChanged();
        return getServerUsePropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder getServerUsePropOrBuilder() {
        if (serverUsePropBuilder_ != null) {
          return serverUsePropBuilder_.getMessageOrBuilder();
        } else {
          return serverUseProp_ == null ?
              com.kys.util.netty.proto.PropProto.ServerUseProp.getDefaultInstance() : serverUseProp_;
        }
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerUseProp, com.kys.util.netty.proto.PropProto.ServerUseProp.Builder, com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder> 
          getServerUsePropFieldBuilder() {
        if (serverUsePropBuilder_ == null) {
          serverUsePropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ServerUseProp, com.kys.util.netty.proto.PropProto.ServerUseProp.Builder, com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder>(
                  getServerUseProp(),
                  getParentForChildren(),
                  isClean());
          serverUseProp_ = null;
        }
        return serverUsePropBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ServerQueryPropCount serverQueryPropCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerQueryPropCount, com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder> serverQueryPropCountBuilder_;
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public boolean hasServerQueryPropCount() {
        return serverQueryPropCountBuilder_ != null || serverQueryPropCount_ != null;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryPropCount getServerQueryPropCount() {
        if (serverQueryPropCountBuilder_ == null) {
          return serverQueryPropCount_ == null ? com.kys.util.netty.proto.PropProto.ServerQueryPropCount.getDefaultInstance() : serverQueryPropCount_;
        } else {
          return serverQueryPropCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public Builder setServerQueryPropCount(com.kys.util.netty.proto.PropProto.ServerQueryPropCount value) {
        if (serverQueryPropCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryPropCount_ = value;
          onChanged();
        } else {
          serverQueryPropCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public Builder setServerQueryPropCount(
          com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder builderForValue) {
        if (serverQueryPropCountBuilder_ == null) {
          serverQueryPropCount_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryPropCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public Builder mergeServerQueryPropCount(com.kys.util.netty.proto.PropProto.ServerQueryPropCount value) {
        if (serverQueryPropCountBuilder_ == null) {
          if (serverQueryPropCount_ != null) {
            serverQueryPropCount_ =
              com.kys.util.netty.proto.PropProto.ServerQueryPropCount.newBuilder(serverQueryPropCount_).mergeFrom(value).buildPartial();
          } else {
            serverQueryPropCount_ = value;
          }
          onChanged();
        } else {
          serverQueryPropCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public Builder clearServerQueryPropCount() {
        if (serverQueryPropCountBuilder_ == null) {
          serverQueryPropCount_ = null;
          onChanged();
        } else {
          serverQueryPropCount_ = null;
          serverQueryPropCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder getServerQueryPropCountBuilder() {
        
        onChanged();
        return getServerQueryPropCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder getServerQueryPropCountOrBuilder() {
        if (serverQueryPropCountBuilder_ != null) {
          return serverQueryPropCountBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryPropCount_ == null ?
              com.kys.util.netty.proto.PropProto.ServerQueryPropCount.getDefaultInstance() : serverQueryPropCount_;
        }
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerQueryPropCount, com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder> 
          getServerQueryPropCountFieldBuilder() {
        if (serverQueryPropCountBuilder_ == null) {
          serverQueryPropCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ServerQueryPropCount, com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder>(
                  getServerQueryPropCount(),
                  getParentForChildren(),
                  isClean());
          serverQueryPropCount_ = null;
        }
        return serverQueryPropCountBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerSignInfo serverSignInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerSignInfo, com.kys.util.netty.proto.SignProto.ServerSignInfo.Builder, com.kys.util.netty.proto.SignProto.ServerSignInfoOrBuilder> serverSignInfoBuilder_;
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      public boolean hasServerSignInfo() {
        return serverSignInfoBuilder_ != null || serverSignInfo_ != null;
      }
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignInfo getServerSignInfo() {
        if (serverSignInfoBuilder_ == null) {
          return serverSignInfo_ == null ? com.kys.util.netty.proto.SignProto.ServerSignInfo.getDefaultInstance() : serverSignInfo_;
        } else {
          return serverSignInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      public Builder setServerSignInfo(com.kys.util.netty.proto.SignProto.ServerSignInfo value) {
        if (serverSignInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSignInfo_ = value;
          onChanged();
        } else {
          serverSignInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      public Builder setServerSignInfo(
          com.kys.util.netty.proto.SignProto.ServerSignInfo.Builder builderForValue) {
        if (serverSignInfoBuilder_ == null) {
          serverSignInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverSignInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      public Builder mergeServerSignInfo(com.kys.util.netty.proto.SignProto.ServerSignInfo value) {
        if (serverSignInfoBuilder_ == null) {
          if (serverSignInfo_ != null) {
            serverSignInfo_ =
              com.kys.util.netty.proto.SignProto.ServerSignInfo.newBuilder(serverSignInfo_).mergeFrom(value).buildPartial();
          } else {
            serverSignInfo_ = value;
          }
          onChanged();
        } else {
          serverSignInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      public Builder clearServerSignInfo() {
        if (serverSignInfoBuilder_ == null) {
          serverSignInfo_ = null;
          onChanged();
        } else {
          serverSignInfo_ = null;
          serverSignInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignInfo.Builder getServerSignInfoBuilder() {
        
        onChanged();
        return getServerSignInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignInfoOrBuilder getServerSignInfoOrBuilder() {
        if (serverSignInfoBuilder_ != null) {
          return serverSignInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverSignInfo_ == null ?
              com.kys.util.netty.proto.SignProto.ServerSignInfo.getDefaultInstance() : serverSignInfo_;
        }
      }
      /**
       * <pre>
       ** 服务端返回签到信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignInfo serverSignInfo = 1101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerSignInfo, com.kys.util.netty.proto.SignProto.ServerSignInfo.Builder, com.kys.util.netty.proto.SignProto.ServerSignInfoOrBuilder> 
          getServerSignInfoFieldBuilder() {
        if (serverSignInfoBuilder_ == null) {
          serverSignInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerSignInfo, com.kys.util.netty.proto.SignProto.ServerSignInfo.Builder, com.kys.util.netty.proto.SignProto.ServerSignInfoOrBuilder>(
                  getServerSignInfo(),
                  getParentForChildren(),
                  isClean());
          serverSignInfo_ = null;
        }
        return serverSignInfoBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerSignAward serverSignAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerSignAward, com.kys.util.netty.proto.SignProto.ServerSignAward.Builder, com.kys.util.netty.proto.SignProto.ServerSignAwardOrBuilder> serverSignAwardBuilder_;
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      public boolean hasServerSignAward() {
        return serverSignAwardBuilder_ != null || serverSignAward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignAward getServerSignAward() {
        if (serverSignAwardBuilder_ == null) {
          return serverSignAward_ == null ? com.kys.util.netty.proto.SignProto.ServerSignAward.getDefaultInstance() : serverSignAward_;
        } else {
          return serverSignAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      public Builder setServerSignAward(com.kys.util.netty.proto.SignProto.ServerSignAward value) {
        if (serverSignAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSignAward_ = value;
          onChanged();
        } else {
          serverSignAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      public Builder setServerSignAward(
          com.kys.util.netty.proto.SignProto.ServerSignAward.Builder builderForValue) {
        if (serverSignAwardBuilder_ == null) {
          serverSignAward_ = builderForValue.build();
          onChanged();
        } else {
          serverSignAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      public Builder mergeServerSignAward(com.kys.util.netty.proto.SignProto.ServerSignAward value) {
        if (serverSignAwardBuilder_ == null) {
          if (serverSignAward_ != null) {
            serverSignAward_ =
              com.kys.util.netty.proto.SignProto.ServerSignAward.newBuilder(serverSignAward_).mergeFrom(value).buildPartial();
          } else {
            serverSignAward_ = value;
          }
          onChanged();
        } else {
          serverSignAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      public Builder clearServerSignAward() {
        if (serverSignAwardBuilder_ == null) {
          serverSignAward_ = null;
          onChanged();
        } else {
          serverSignAward_ = null;
          serverSignAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignAward.Builder getServerSignAwardBuilder() {
        
        onChanged();
        return getServerSignAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignAwardOrBuilder getServerSignAwardOrBuilder() {
        if (serverSignAwardBuilder_ != null) {
          return serverSignAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverSignAward_ == null ?
              com.kys.util.netty.proto.SignProto.ServerSignAward.getDefaultInstance() : serverSignAward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignAward serverSignAward = 1102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerSignAward, com.kys.util.netty.proto.SignProto.ServerSignAward.Builder, com.kys.util.netty.proto.SignProto.ServerSignAwardOrBuilder> 
          getServerSignAwardFieldBuilder() {
        if (serverSignAwardBuilder_ == null) {
          serverSignAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerSignAward, com.kys.util.netty.proto.SignProto.ServerSignAward.Builder, com.kys.util.netty.proto.SignProto.ServerSignAwardOrBuilder>(
                  getServerSignAward(),
                  getParentForChildren(),
                  isClean());
          serverSignAward_ = null;
        }
        return serverSignAwardBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerSignState serverSignState_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerSignState, com.kys.util.netty.proto.SignProto.ServerSignState.Builder, com.kys.util.netty.proto.SignProto.ServerSignStateOrBuilder> serverSignStateBuilder_;
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      public boolean hasServerSignState() {
        return serverSignStateBuilder_ != null || serverSignState_ != null;
      }
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignState getServerSignState() {
        if (serverSignStateBuilder_ == null) {
          return serverSignState_ == null ? com.kys.util.netty.proto.SignProto.ServerSignState.getDefaultInstance() : serverSignState_;
        } else {
          return serverSignStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      public Builder setServerSignState(com.kys.util.netty.proto.SignProto.ServerSignState value) {
        if (serverSignStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSignState_ = value;
          onChanged();
        } else {
          serverSignStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      public Builder setServerSignState(
          com.kys.util.netty.proto.SignProto.ServerSignState.Builder builderForValue) {
        if (serverSignStateBuilder_ == null) {
          serverSignState_ = builderForValue.build();
          onChanged();
        } else {
          serverSignStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      public Builder mergeServerSignState(com.kys.util.netty.proto.SignProto.ServerSignState value) {
        if (serverSignStateBuilder_ == null) {
          if (serverSignState_ != null) {
            serverSignState_ =
              com.kys.util.netty.proto.SignProto.ServerSignState.newBuilder(serverSignState_).mergeFrom(value).buildPartial();
          } else {
            serverSignState_ = value;
          }
          onChanged();
        } else {
          serverSignStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      public Builder clearServerSignState() {
        if (serverSignStateBuilder_ == null) {
          serverSignState_ = null;
          onChanged();
        } else {
          serverSignState_ = null;
          serverSignStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignState.Builder getServerSignStateBuilder() {
        
        onChanged();
        return getServerSignStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerSignStateOrBuilder getServerSignStateOrBuilder() {
        if (serverSignStateBuilder_ != null) {
          return serverSignStateBuilder_.getMessageOrBuilder();
        } else {
          return serverSignState_ == null ?
              com.kys.util.netty.proto.SignProto.ServerSignState.getDefaultInstance() : serverSignState_;
        }
      }
      /**
       * <pre>
       ** 服务端返回签到状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignState serverSignState = 1103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerSignState, com.kys.util.netty.proto.SignProto.ServerSignState.Builder, com.kys.util.netty.proto.SignProto.ServerSignStateOrBuilder> 
          getServerSignStateFieldBuilder() {
        if (serverSignStateBuilder_ == null) {
          serverSignStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerSignState, com.kys.util.netty.proto.SignProto.ServerSignState.Builder, com.kys.util.netty.proto.SignProto.ServerSignStateOrBuilder>(
                  getServerSignState(),
                  getParentForChildren(),
                  isClean());
          serverSignState_ = null;
        }
        return serverSignStateBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerLTLottery serverLTLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerLTLottery, com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder, com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder> serverLTLotteryBuilder_;
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public boolean hasServerLTLottery() {
        return serverLTLotteryBuilder_ != null || serverLTLottery_ != null;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerLTLottery getServerLTLottery() {
        if (serverLTLotteryBuilder_ == null) {
          return serverLTLottery_ == null ? com.kys.util.netty.proto.SignProto.ServerLTLottery.getDefaultInstance() : serverLTLottery_;
        } else {
          return serverLTLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public Builder setServerLTLottery(com.kys.util.netty.proto.SignProto.ServerLTLottery value) {
        if (serverLTLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverLTLottery_ = value;
          onChanged();
        } else {
          serverLTLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public Builder setServerLTLottery(
          com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder builderForValue) {
        if (serverLTLotteryBuilder_ == null) {
          serverLTLottery_ = builderForValue.build();
          onChanged();
        } else {
          serverLTLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public Builder mergeServerLTLottery(com.kys.util.netty.proto.SignProto.ServerLTLottery value) {
        if (serverLTLotteryBuilder_ == null) {
          if (serverLTLottery_ != null) {
            serverLTLottery_ =
              com.kys.util.netty.proto.SignProto.ServerLTLottery.newBuilder(serverLTLottery_).mergeFrom(value).buildPartial();
          } else {
            serverLTLottery_ = value;
          }
          onChanged();
        } else {
          serverLTLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public Builder clearServerLTLottery() {
        if (serverLTLotteryBuilder_ == null) {
          serverLTLottery_ = null;
          onChanged();
        } else {
          serverLTLottery_ = null;
          serverLTLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder getServerLTLotteryBuilder() {
        
        onChanged();
        return getServerLTLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder getServerLTLotteryOrBuilder() {
        if (serverLTLotteryBuilder_ != null) {
          return serverLTLotteryBuilder_.getMessageOrBuilder();
        } else {
          return serverLTLottery_ == null ?
              com.kys.util.netty.proto.SignProto.ServerLTLottery.getDefaultInstance() : serverLTLottery_;
        }
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerLTLottery, com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder, com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder> 
          getServerLTLotteryFieldBuilder() {
        if (serverLTLotteryBuilder_ == null) {
          serverLTLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerLTLottery, com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder, com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder>(
                  getServerLTLottery(),
                  getParentForChildren(),
                  isClean());
          serverLTLottery_ = null;
        }
        return serverLTLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerGetTSReward serverGetTSReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetTSReward, com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder> serverGetTSRewardBuilder_;
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public boolean hasServerGetTSReward() {
        return serverGetTSRewardBuilder_ != null || serverGetTSReward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetTSReward getServerGetTSReward() {
        if (serverGetTSRewardBuilder_ == null) {
          return serverGetTSReward_ == null ? com.kys.util.netty.proto.SignProto.ServerGetTSReward.getDefaultInstance() : serverGetTSReward_;
        } else {
          return serverGetTSRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public Builder setServerGetTSReward(com.kys.util.netty.proto.SignProto.ServerGetTSReward value) {
        if (serverGetTSRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetTSReward_ = value;
          onChanged();
        } else {
          serverGetTSRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public Builder setServerGetTSReward(
          com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder builderForValue) {
        if (serverGetTSRewardBuilder_ == null) {
          serverGetTSReward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetTSRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public Builder mergeServerGetTSReward(com.kys.util.netty.proto.SignProto.ServerGetTSReward value) {
        if (serverGetTSRewardBuilder_ == null) {
          if (serverGetTSReward_ != null) {
            serverGetTSReward_ =
              com.kys.util.netty.proto.SignProto.ServerGetTSReward.newBuilder(serverGetTSReward_).mergeFrom(value).buildPartial();
          } else {
            serverGetTSReward_ = value;
          }
          onChanged();
        } else {
          serverGetTSRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public Builder clearServerGetTSReward() {
        if (serverGetTSRewardBuilder_ == null) {
          serverGetTSReward_ = null;
          onChanged();
        } else {
          serverGetTSReward_ = null;
          serverGetTSRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder getServerGetTSRewardBuilder() {
        
        onChanged();
        return getServerGetTSRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder getServerGetTSRewardOrBuilder() {
        if (serverGetTSRewardBuilder_ != null) {
          return serverGetTSRewardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetTSReward_ == null ?
              com.kys.util.netty.proto.SignProto.ServerGetTSReward.getDefaultInstance() : serverGetTSReward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetTSReward, com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder> 
          getServerGetTSRewardFieldBuilder() {
        if (serverGetTSRewardBuilder_ == null) {
          serverGetTSRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerGetTSReward, com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder>(
                  getServerGetTSReward(),
                  getParentForChildren(),
                  isClean());
          serverGetTSReward_ = null;
        }
        return serverGetTSRewardBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerGetLuckInfo serverGetLuckInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetLuckInfo, com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder> serverGetLuckInfoBuilder_;
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public boolean hasServerGetLuckInfo() {
        return serverGetLuckInfoBuilder_ != null || serverGetLuckInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetLuckInfo getServerGetLuckInfo() {
        if (serverGetLuckInfoBuilder_ == null) {
          return serverGetLuckInfo_ == null ? com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.getDefaultInstance() : serverGetLuckInfo_;
        } else {
          return serverGetLuckInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public Builder setServerGetLuckInfo(com.kys.util.netty.proto.SignProto.ServerGetLuckInfo value) {
        if (serverGetLuckInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetLuckInfo_ = value;
          onChanged();
        } else {
          serverGetLuckInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public Builder setServerGetLuckInfo(
          com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder builderForValue) {
        if (serverGetLuckInfoBuilder_ == null) {
          serverGetLuckInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetLuckInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public Builder mergeServerGetLuckInfo(com.kys.util.netty.proto.SignProto.ServerGetLuckInfo value) {
        if (serverGetLuckInfoBuilder_ == null) {
          if (serverGetLuckInfo_ != null) {
            serverGetLuckInfo_ =
              com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.newBuilder(serverGetLuckInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetLuckInfo_ = value;
          }
          onChanged();
        } else {
          serverGetLuckInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public Builder clearServerGetLuckInfo() {
        if (serverGetLuckInfoBuilder_ == null) {
          serverGetLuckInfo_ = null;
          onChanged();
        } else {
          serverGetLuckInfo_ = null;
          serverGetLuckInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder getServerGetLuckInfoBuilder() {
        
        onChanged();
        return getServerGetLuckInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder getServerGetLuckInfoOrBuilder() {
        if (serverGetLuckInfoBuilder_ != null) {
          return serverGetLuckInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetLuckInfo_ == null ?
              com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.getDefaultInstance() : serverGetLuckInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetLuckInfo, com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder> 
          getServerGetLuckInfoFieldBuilder() {
        if (serverGetLuckInfoBuilder_ == null) {
          serverGetLuckInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerGetLuckInfo, com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder>(
                  getServerGetLuckInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetLuckInfo_ = null;
        }
        return serverGetLuckInfoBuilder_;
      }

      private com.kys.util.netty.proto.VipProto.ServerGetVip serverGetVip_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ServerGetVip, com.kys.util.netty.proto.VipProto.ServerGetVip.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipOrBuilder> serverGetVipBuilder_;
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      public boolean hasServerGetVip() {
        return serverGetVipBuilder_ != null || serverGetVip_ != null;
      }
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVip getServerGetVip() {
        if (serverGetVipBuilder_ == null) {
          return serverGetVip_ == null ? com.kys.util.netty.proto.VipProto.ServerGetVip.getDefaultInstance() : serverGetVip_;
        } else {
          return serverGetVipBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      public Builder setServerGetVip(com.kys.util.netty.proto.VipProto.ServerGetVip value) {
        if (serverGetVipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetVip_ = value;
          onChanged();
        } else {
          serverGetVipBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      public Builder setServerGetVip(
          com.kys.util.netty.proto.VipProto.ServerGetVip.Builder builderForValue) {
        if (serverGetVipBuilder_ == null) {
          serverGetVip_ = builderForValue.build();
          onChanged();
        } else {
          serverGetVipBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      public Builder mergeServerGetVip(com.kys.util.netty.proto.VipProto.ServerGetVip value) {
        if (serverGetVipBuilder_ == null) {
          if (serverGetVip_ != null) {
            serverGetVip_ =
              com.kys.util.netty.proto.VipProto.ServerGetVip.newBuilder(serverGetVip_).mergeFrom(value).buildPartial();
          } else {
            serverGetVip_ = value;
          }
          onChanged();
        } else {
          serverGetVipBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      public Builder clearServerGetVip() {
        if (serverGetVipBuilder_ == null) {
          serverGetVip_ = null;
          onChanged();
        } else {
          serverGetVip_ = null;
          serverGetVipBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVip.Builder getServerGetVipBuilder() {
        
        onChanged();
        return getServerGetVipFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVipOrBuilder getServerGetVipOrBuilder() {
        if (serverGetVipBuilder_ != null) {
          return serverGetVipBuilder_.getMessageOrBuilder();
        } else {
          return serverGetVip_ == null ?
              com.kys.util.netty.proto.VipProto.ServerGetVip.getDefaultInstance() : serverGetVip_;
        }
      }
      /**
       * <pre>
       ** 服务器返回VIP信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVip serverGetVip = 1203;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ServerGetVip, com.kys.util.netty.proto.VipProto.ServerGetVip.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipOrBuilder> 
          getServerGetVipFieldBuilder() {
        if (serverGetVipBuilder_ == null) {
          serverGetVipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.VipProto.ServerGetVip, com.kys.util.netty.proto.VipProto.ServerGetVip.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipOrBuilder>(
                  getServerGetVip(),
                  getParentForChildren(),
                  isClean());
          serverGetVip_ = null;
        }
        return serverGetVipBuilder_;
      }

      private com.kys.util.netty.proto.VipProto.ServerGetDayGift serverGetDayGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ServerGetDayGift, com.kys.util.netty.proto.VipProto.ServerGetDayGift.Builder, com.kys.util.netty.proto.VipProto.ServerGetDayGiftOrBuilder> serverGetDayGiftBuilder_;
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      public boolean hasServerGetDayGift() {
        return serverGetDayGiftBuilder_ != null || serverGetDayGift_ != null;
      }
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetDayGift getServerGetDayGift() {
        if (serverGetDayGiftBuilder_ == null) {
          return serverGetDayGift_ == null ? com.kys.util.netty.proto.VipProto.ServerGetDayGift.getDefaultInstance() : serverGetDayGift_;
        } else {
          return serverGetDayGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      public Builder setServerGetDayGift(com.kys.util.netty.proto.VipProto.ServerGetDayGift value) {
        if (serverGetDayGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetDayGift_ = value;
          onChanged();
        } else {
          serverGetDayGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      public Builder setServerGetDayGift(
          com.kys.util.netty.proto.VipProto.ServerGetDayGift.Builder builderForValue) {
        if (serverGetDayGiftBuilder_ == null) {
          serverGetDayGift_ = builderForValue.build();
          onChanged();
        } else {
          serverGetDayGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      public Builder mergeServerGetDayGift(com.kys.util.netty.proto.VipProto.ServerGetDayGift value) {
        if (serverGetDayGiftBuilder_ == null) {
          if (serverGetDayGift_ != null) {
            serverGetDayGift_ =
              com.kys.util.netty.proto.VipProto.ServerGetDayGift.newBuilder(serverGetDayGift_).mergeFrom(value).buildPartial();
          } else {
            serverGetDayGift_ = value;
          }
          onChanged();
        } else {
          serverGetDayGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      public Builder clearServerGetDayGift() {
        if (serverGetDayGiftBuilder_ == null) {
          serverGetDayGift_ = null;
          onChanged();
        } else {
          serverGetDayGift_ = null;
          serverGetDayGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetDayGift.Builder getServerGetDayGiftBuilder() {
        
        onChanged();
        return getServerGetDayGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetDayGiftOrBuilder getServerGetDayGiftOrBuilder() {
        if (serverGetDayGiftBuilder_ != null) {
          return serverGetDayGiftBuilder_.getMessageOrBuilder();
        } else {
          return serverGetDayGift_ == null ?
              com.kys.util.netty.proto.VipProto.ServerGetDayGift.getDefaultInstance() : serverGetDayGift_;
        }
      }
      /**
       * <pre>
       ** 服务器返回领取VIP每日礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDayGift serverGetDayGift = 1204;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ServerGetDayGift, com.kys.util.netty.proto.VipProto.ServerGetDayGift.Builder, com.kys.util.netty.proto.VipProto.ServerGetDayGiftOrBuilder> 
          getServerGetDayGiftFieldBuilder() {
        if (serverGetDayGiftBuilder_ == null) {
          serverGetDayGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.VipProto.ServerGetDayGift, com.kys.util.netty.proto.VipProto.ServerGetDayGift.Builder, com.kys.util.netty.proto.VipProto.ServerGetDayGiftOrBuilder>(
                  getServerGetDayGift(),
                  getParentForChildren(),
                  isClean());
          serverGetDayGift_ = null;
        }
        return serverGetDayGiftBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ServerEnterSleeve serverEnterSleeve_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerEnterSleeve, com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerEnterSleeveOrBuilder> serverEnterSleeveBuilder_;
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      public boolean hasServerEnterSleeve() {
        return serverEnterSleeveBuilder_ != null || serverEnterSleeve_ != null;
      }
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerEnterSleeve getServerEnterSleeve() {
        if (serverEnterSleeveBuilder_ == null) {
          return serverEnterSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.getDefaultInstance() : serverEnterSleeve_;
        } else {
          return serverEnterSleeveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      public Builder setServerEnterSleeve(com.kys.util.netty.proto.LittleProto.ServerEnterSleeve value) {
        if (serverEnterSleeveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverEnterSleeve_ = value;
          onChanged();
        } else {
          serverEnterSleeveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      public Builder setServerEnterSleeve(
          com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.Builder builderForValue) {
        if (serverEnterSleeveBuilder_ == null) {
          serverEnterSleeve_ = builderForValue.build();
          onChanged();
        } else {
          serverEnterSleeveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      public Builder mergeServerEnterSleeve(com.kys.util.netty.proto.LittleProto.ServerEnterSleeve value) {
        if (serverEnterSleeveBuilder_ == null) {
          if (serverEnterSleeve_ != null) {
            serverEnterSleeve_ =
              com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.newBuilder(serverEnterSleeve_).mergeFrom(value).buildPartial();
          } else {
            serverEnterSleeve_ = value;
          }
          onChanged();
        } else {
          serverEnterSleeveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      public Builder clearServerEnterSleeve() {
        if (serverEnterSleeveBuilder_ == null) {
          serverEnterSleeve_ = null;
          onChanged();
        } else {
          serverEnterSleeve_ = null;
          serverEnterSleeveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.Builder getServerEnterSleeveBuilder() {
        
        onChanged();
        return getServerEnterSleeveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerEnterSleeveOrBuilder getServerEnterSleeveOrBuilder() {
        if (serverEnterSleeveBuilder_ != null) {
          return serverEnterSleeveBuilder_.getMessageOrBuilder();
        } else {
          return serverEnterSleeve_ == null ?
              com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.getDefaultInstance() : serverEnterSleeve_;
        }
      }
      /**
       * <pre>
       ** 服务端返回进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterSleeve serverEnterSleeve = 1300;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerEnterSleeve, com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerEnterSleeveOrBuilder> 
          getServerEnterSleeveFieldBuilder() {
        if (serverEnterSleeveBuilder_ == null) {
          serverEnterSleeveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ServerEnterSleeve, com.kys.util.netty.proto.LittleProto.ServerEnterSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerEnterSleeveOrBuilder>(
                  getServerEnterSleeve(),
                  getParentForChildren(),
                  isClean());
          serverEnterSleeve_ = null;
        }
        return serverEnterSleeveBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ServerSleeveSheep serverSleeveSheep_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerSleeveSheep, com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ServerSleeveSheepOrBuilder> serverSleeveSheepBuilder_;
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      public boolean hasServerSleeveSheep() {
        return serverSleeveSheepBuilder_ != null || serverSleeveSheep_ != null;
      }
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerSleeveSheep getServerSleeveSheep() {
        if (serverSleeveSheepBuilder_ == null) {
          return serverSleeveSheep_ == null ? com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.getDefaultInstance() : serverSleeveSheep_;
        } else {
          return serverSleeveSheepBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      public Builder setServerSleeveSheep(com.kys.util.netty.proto.LittleProto.ServerSleeveSheep value) {
        if (serverSleeveSheepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSleeveSheep_ = value;
          onChanged();
        } else {
          serverSleeveSheepBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      public Builder setServerSleeveSheep(
          com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.Builder builderForValue) {
        if (serverSleeveSheepBuilder_ == null) {
          serverSleeveSheep_ = builderForValue.build();
          onChanged();
        } else {
          serverSleeveSheepBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      public Builder mergeServerSleeveSheep(com.kys.util.netty.proto.LittleProto.ServerSleeveSheep value) {
        if (serverSleeveSheepBuilder_ == null) {
          if (serverSleeveSheep_ != null) {
            serverSleeveSheep_ =
              com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.newBuilder(serverSleeveSheep_).mergeFrom(value).buildPartial();
          } else {
            serverSleeveSheep_ = value;
          }
          onChanged();
        } else {
          serverSleeveSheepBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      public Builder clearServerSleeveSheep() {
        if (serverSleeveSheepBuilder_ == null) {
          serverSleeveSheep_ = null;
          onChanged();
        } else {
          serverSleeveSheep_ = null;
          serverSleeveSheepBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.Builder getServerSleeveSheepBuilder() {
        
        onChanged();
        return getServerSleeveSheepFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerSleeveSheepOrBuilder getServerSleeveSheepOrBuilder() {
        if (serverSleeveSheepBuilder_ != null) {
          return serverSleeveSheepBuilder_.getMessageOrBuilder();
        } else {
          return serverSleeveSheep_ == null ?
              com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.getDefaultInstance() : serverSleeveSheep_;
        }
      }
      /**
       * <pre>
       ** 服务端返回套羊动作 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSleeveSheep serverSleeveSheep = 1301;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerSleeveSheep, com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ServerSleeveSheepOrBuilder> 
          getServerSleeveSheepFieldBuilder() {
        if (serverSleeveSheepBuilder_ == null) {
          serverSleeveSheepBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ServerSleeveSheep, com.kys.util.netty.proto.LittleProto.ServerSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ServerSleeveSheepOrBuilder>(
                  getServerSleeveSheep(),
                  getParentForChildren(),
                  isClean());
          serverSleeveSheep_ = null;
        }
        return serverSleeveSheepBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin serverQueryPlayerCoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin, com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.Builder, com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoinOrBuilder> serverQueryPlayerCoinBuilder_;
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      public boolean hasServerQueryPlayerCoin() {
        return serverQueryPlayerCoinBuilder_ != null || serverQueryPlayerCoin_ != null;
      }
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin getServerQueryPlayerCoin() {
        if (serverQueryPlayerCoinBuilder_ == null) {
          return serverQueryPlayerCoin_ == null ? com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.getDefaultInstance() : serverQueryPlayerCoin_;
        } else {
          return serverQueryPlayerCoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      public Builder setServerQueryPlayerCoin(com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin value) {
        if (serverQueryPlayerCoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryPlayerCoin_ = value;
          onChanged();
        } else {
          serverQueryPlayerCoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      public Builder setServerQueryPlayerCoin(
          com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.Builder builderForValue) {
        if (serverQueryPlayerCoinBuilder_ == null) {
          serverQueryPlayerCoin_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryPlayerCoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      public Builder mergeServerQueryPlayerCoin(com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin value) {
        if (serverQueryPlayerCoinBuilder_ == null) {
          if (serverQueryPlayerCoin_ != null) {
            serverQueryPlayerCoin_ =
              com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.newBuilder(serverQueryPlayerCoin_).mergeFrom(value).buildPartial();
          } else {
            serverQueryPlayerCoin_ = value;
          }
          onChanged();
        } else {
          serverQueryPlayerCoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      public Builder clearServerQueryPlayerCoin() {
        if (serverQueryPlayerCoinBuilder_ == null) {
          serverQueryPlayerCoin_ = null;
          onChanged();
        } else {
          serverQueryPlayerCoin_ = null;
          serverQueryPlayerCoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.Builder getServerQueryPlayerCoinBuilder() {
        
        onChanged();
        return getServerQueryPlayerCoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoinOrBuilder getServerQueryPlayerCoinOrBuilder() {
        if (serverQueryPlayerCoinBuilder_ != null) {
          return serverQueryPlayerCoinBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryPlayerCoin_ == null ?
              com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.getDefaultInstance() : serverQueryPlayerCoin_;
        }
      }
      /**
       * <pre>
       ** 服务器返回查询玩家货币 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPlayerCoin serverQueryPlayerCoin = 1302;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin, com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.Builder, com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoinOrBuilder> 
          getServerQueryPlayerCoinFieldBuilder() {
        if (serverQueryPlayerCoinBuilder_ == null) {
          serverQueryPlayerCoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin, com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoin.Builder, com.kys.util.netty.proto.LittleProto.ServerQueryPlayerCoinOrBuilder>(
                  getServerQueryPlayerCoin(),
                  getParentForChildren(),
                  isClean());
          serverQueryPlayerCoin_ = null;
        }
        return serverQueryPlayerCoinBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ServerExitSleeve serverExitSleeve_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerExitSleeve, com.kys.util.netty.proto.LittleProto.ServerExitSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerExitSleeveOrBuilder> serverExitSleeveBuilder_;
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      public boolean hasServerExitSleeve() {
        return serverExitSleeveBuilder_ != null || serverExitSleeve_ != null;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerExitSleeve getServerExitSleeve() {
        if (serverExitSleeveBuilder_ == null) {
          return serverExitSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ServerExitSleeve.getDefaultInstance() : serverExitSleeve_;
        } else {
          return serverExitSleeveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      public Builder setServerExitSleeve(com.kys.util.netty.proto.LittleProto.ServerExitSleeve value) {
        if (serverExitSleeveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverExitSleeve_ = value;
          onChanged();
        } else {
          serverExitSleeveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      public Builder setServerExitSleeve(
          com.kys.util.netty.proto.LittleProto.ServerExitSleeve.Builder builderForValue) {
        if (serverExitSleeveBuilder_ == null) {
          serverExitSleeve_ = builderForValue.build();
          onChanged();
        } else {
          serverExitSleeveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      public Builder mergeServerExitSleeve(com.kys.util.netty.proto.LittleProto.ServerExitSleeve value) {
        if (serverExitSleeveBuilder_ == null) {
          if (serverExitSleeve_ != null) {
            serverExitSleeve_ =
              com.kys.util.netty.proto.LittleProto.ServerExitSleeve.newBuilder(serverExitSleeve_).mergeFrom(value).buildPartial();
          } else {
            serverExitSleeve_ = value;
          }
          onChanged();
        } else {
          serverExitSleeveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      public Builder clearServerExitSleeve() {
        if (serverExitSleeveBuilder_ == null) {
          serverExitSleeve_ = null;
          onChanged();
        } else {
          serverExitSleeve_ = null;
          serverExitSleeveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerExitSleeve.Builder getServerExitSleeveBuilder() {
        
        onChanged();
        return getServerExitSleeveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerExitSleeveOrBuilder getServerExitSleeveOrBuilder() {
        if (serverExitSleeveBuilder_ != null) {
          return serverExitSleeveBuilder_.getMessageOrBuilder();
        } else {
          return serverExitSleeve_ == null ?
              com.kys.util.netty.proto.LittleProto.ServerExitSleeve.getDefaultInstance() : serverExitSleeve_;
        }
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitSleeve serverExitSleeve = 1303;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerExitSleeve, com.kys.util.netty.proto.LittleProto.ServerExitSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerExitSleeveOrBuilder> 
          getServerExitSleeveFieldBuilder() {
        if (serverExitSleeveBuilder_ == null) {
          serverExitSleeveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ServerExitSleeve, com.kys.util.netty.proto.LittleProto.ServerExitSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerExitSleeveOrBuilder>(
                  getServerExitSleeve(),
                  getParentForChildren(),
                  isClean());
          serverExitSleeve_ = null;
        }
        return serverExitSleeveBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve serverEnterNewSleeve_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve, com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeveOrBuilder> serverEnterNewSleeveBuilder_;
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      public boolean hasServerEnterNewSleeve() {
        return serverEnterNewSleeveBuilder_ != null || serverEnterNewSleeve_ != null;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve getServerEnterNewSleeve() {
        if (serverEnterNewSleeveBuilder_ == null) {
          return serverEnterNewSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.getDefaultInstance() : serverEnterNewSleeve_;
        } else {
          return serverEnterNewSleeveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      public Builder setServerEnterNewSleeve(com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve value) {
        if (serverEnterNewSleeveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverEnterNewSleeve_ = value;
          onChanged();
        } else {
          serverEnterNewSleeveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      public Builder setServerEnterNewSleeve(
          com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.Builder builderForValue) {
        if (serverEnterNewSleeveBuilder_ == null) {
          serverEnterNewSleeve_ = builderForValue.build();
          onChanged();
        } else {
          serverEnterNewSleeveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      public Builder mergeServerEnterNewSleeve(com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve value) {
        if (serverEnterNewSleeveBuilder_ == null) {
          if (serverEnterNewSleeve_ != null) {
            serverEnterNewSleeve_ =
              com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.newBuilder(serverEnterNewSleeve_).mergeFrom(value).buildPartial();
          } else {
            serverEnterNewSleeve_ = value;
          }
          onChanged();
        } else {
          serverEnterNewSleeveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      public Builder clearServerEnterNewSleeve() {
        if (serverEnterNewSleeveBuilder_ == null) {
          serverEnterNewSleeve_ = null;
          onChanged();
        } else {
          serverEnterNewSleeve_ = null;
          serverEnterNewSleeveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.Builder getServerEnterNewSleeveBuilder() {
        
        onChanged();
        return getServerEnterNewSleeveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeveOrBuilder getServerEnterNewSleeveOrBuilder() {
        if (serverEnterNewSleeveBuilder_ != null) {
          return serverEnterNewSleeveBuilder_.getMessageOrBuilder();
        } else {
          return serverEnterNewSleeve_ == null ?
              com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.getDefaultInstance() : serverEnterNewSleeve_;
        }
      }
      /**
       * <pre>
       ** 客户端进入套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterNewSleeve serverEnterNewSleeve = 1304;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve, com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeveOrBuilder> 
          getServerEnterNewSleeveFieldBuilder() {
        if (serverEnterNewSleeveBuilder_ == null) {
          serverEnterNewSleeveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve, com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerEnterNewSleeveOrBuilder>(
                  getServerEnterNewSleeve(),
                  getParentForChildren(),
                  isClean());
          serverEnterNewSleeve_ = null;
        }
        return serverEnterNewSleeveBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep serverNewSleeveSheep_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep, com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheepOrBuilder> serverNewSleeveSheepBuilder_;
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      public boolean hasServerNewSleeveSheep() {
        return serverNewSleeveSheepBuilder_ != null || serverNewSleeveSheep_ != null;
      }
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep getServerNewSleeveSheep() {
        if (serverNewSleeveSheepBuilder_ == null) {
          return serverNewSleeveSheep_ == null ? com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.getDefaultInstance() : serverNewSleeveSheep_;
        } else {
          return serverNewSleeveSheepBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      public Builder setServerNewSleeveSheep(com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep value) {
        if (serverNewSleeveSheepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverNewSleeveSheep_ = value;
          onChanged();
        } else {
          serverNewSleeveSheepBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      public Builder setServerNewSleeveSheep(
          com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.Builder builderForValue) {
        if (serverNewSleeveSheepBuilder_ == null) {
          serverNewSleeveSheep_ = builderForValue.build();
          onChanged();
        } else {
          serverNewSleeveSheepBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      public Builder mergeServerNewSleeveSheep(com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep value) {
        if (serverNewSleeveSheepBuilder_ == null) {
          if (serverNewSleeveSheep_ != null) {
            serverNewSleeveSheep_ =
              com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.newBuilder(serverNewSleeveSheep_).mergeFrom(value).buildPartial();
          } else {
            serverNewSleeveSheep_ = value;
          }
          onChanged();
        } else {
          serverNewSleeveSheepBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      public Builder clearServerNewSleeveSheep() {
        if (serverNewSleeveSheepBuilder_ == null) {
          serverNewSleeveSheep_ = null;
          onChanged();
        } else {
          serverNewSleeveSheep_ = null;
          serverNewSleeveSheepBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.Builder getServerNewSleeveSheepBuilder() {
        
        onChanged();
        return getServerNewSleeveSheepFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheepOrBuilder getServerNewSleeveSheepOrBuilder() {
        if (serverNewSleeveSheepBuilder_ != null) {
          return serverNewSleeveSheepBuilder_.getMessageOrBuilder();
        } else {
          return serverNewSleeveSheep_ == null ?
              com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.getDefaultInstance() : serverNewSleeveSheep_;
        }
      }
      /**
       * <pre>
       ** 服务器返回开始套羊信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveSheep serverNewSleeveSheep = 1305;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep, com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheepOrBuilder> 
          getServerNewSleeveSheepFieldBuilder() {
        if (serverNewSleeveSheepBuilder_ == null) {
          serverNewSleeveSheepBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep, com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheep.Builder, com.kys.util.netty.proto.LittleProto.ServerNewSleeveSheepOrBuilder>(
                  getServerNewSleeveSheep(),
                  getParentForChildren(),
                  isClean());
          serverNewSleeveSheep_ = null;
        }
        return serverNewSleeveSheepBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult serverNewSleeveResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult, com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.Builder, com.kys.util.netty.proto.LittleProto.ServerNewSleeveResultOrBuilder> serverNewSleeveResultBuilder_;
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      public boolean hasServerNewSleeveResult() {
        return serverNewSleeveResultBuilder_ != null || serverNewSleeveResult_ != null;
      }
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult getServerNewSleeveResult() {
        if (serverNewSleeveResultBuilder_ == null) {
          return serverNewSleeveResult_ == null ? com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.getDefaultInstance() : serverNewSleeveResult_;
        } else {
          return serverNewSleeveResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      public Builder setServerNewSleeveResult(com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult value) {
        if (serverNewSleeveResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverNewSleeveResult_ = value;
          onChanged();
        } else {
          serverNewSleeveResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      public Builder setServerNewSleeveResult(
          com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.Builder builderForValue) {
        if (serverNewSleeveResultBuilder_ == null) {
          serverNewSleeveResult_ = builderForValue.build();
          onChanged();
        } else {
          serverNewSleeveResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      public Builder mergeServerNewSleeveResult(com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult value) {
        if (serverNewSleeveResultBuilder_ == null) {
          if (serverNewSleeveResult_ != null) {
            serverNewSleeveResult_ =
              com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.newBuilder(serverNewSleeveResult_).mergeFrom(value).buildPartial();
          } else {
            serverNewSleeveResult_ = value;
          }
          onChanged();
        } else {
          serverNewSleeveResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      public Builder clearServerNewSleeveResult() {
        if (serverNewSleeveResultBuilder_ == null) {
          serverNewSleeveResult_ = null;
          onChanged();
        } else {
          serverNewSleeveResult_ = null;
          serverNewSleeveResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.Builder getServerNewSleeveResultBuilder() {
        
        onChanged();
        return getServerNewSleeveResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerNewSleeveResultOrBuilder getServerNewSleeveResultOrBuilder() {
        if (serverNewSleeveResultBuilder_ != null) {
          return serverNewSleeveResultBuilder_.getMessageOrBuilder();
        } else {
          return serverNewSleeveResult_ == null ?
              com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.getDefaultInstance() : serverNewSleeveResult_;
        }
      }
      /**
       * <pre>
       ** 服务器返回套羊结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewSleeveResult serverNewSleeveResult = 1306;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult, com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.Builder, com.kys.util.netty.proto.LittleProto.ServerNewSleeveResultOrBuilder> 
          getServerNewSleeveResultFieldBuilder() {
        if (serverNewSleeveResultBuilder_ == null) {
          serverNewSleeveResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult, com.kys.util.netty.proto.LittleProto.ServerNewSleeveResult.Builder, com.kys.util.netty.proto.LittleProto.ServerNewSleeveResultOrBuilder>(
                  getServerNewSleeveResult(),
                  getParentForChildren(),
                  isClean());
          serverNewSleeveResult_ = null;
        }
        return serverNewSleeveResultBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve serverExitNewSleeve_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve, com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerExitNewSleeveOrBuilder> serverExitNewSleeveBuilder_;
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      public boolean hasServerExitNewSleeve() {
        return serverExitNewSleeveBuilder_ != null || serverExitNewSleeve_ != null;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve getServerExitNewSleeve() {
        if (serverExitNewSleeveBuilder_ == null) {
          return serverExitNewSleeve_ == null ? com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.getDefaultInstance() : serverExitNewSleeve_;
        } else {
          return serverExitNewSleeveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      public Builder setServerExitNewSleeve(com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve value) {
        if (serverExitNewSleeveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverExitNewSleeve_ = value;
          onChanged();
        } else {
          serverExitNewSleeveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      public Builder setServerExitNewSleeve(
          com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.Builder builderForValue) {
        if (serverExitNewSleeveBuilder_ == null) {
          serverExitNewSleeve_ = builderForValue.build();
          onChanged();
        } else {
          serverExitNewSleeveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      public Builder mergeServerExitNewSleeve(com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve value) {
        if (serverExitNewSleeveBuilder_ == null) {
          if (serverExitNewSleeve_ != null) {
            serverExitNewSleeve_ =
              com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.newBuilder(serverExitNewSleeve_).mergeFrom(value).buildPartial();
          } else {
            serverExitNewSleeve_ = value;
          }
          onChanged();
        } else {
          serverExitNewSleeveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      public Builder clearServerExitNewSleeve() {
        if (serverExitNewSleeveBuilder_ == null) {
          serverExitNewSleeve_ = null;
          onChanged();
        } else {
          serverExitNewSleeve_ = null;
          serverExitNewSleeveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.Builder getServerExitNewSleeveBuilder() {
        
        onChanged();
        return getServerExitNewSleeveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      public com.kys.util.netty.proto.LittleProto.ServerExitNewSleeveOrBuilder getServerExitNewSleeveOrBuilder() {
        if (serverExitNewSleeveBuilder_ != null) {
          return serverExitNewSleeveBuilder_.getMessageOrBuilder();
        } else {
          return serverExitNewSleeve_ == null ?
              com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.getDefaultInstance() : serverExitNewSleeve_;
        }
      }
      /**
       * <pre>
       ** 服务器返回退出套羊 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitNewSleeve serverExitNewSleeve = 1307;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve, com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerExitNewSleeveOrBuilder> 
          getServerExitNewSleeveFieldBuilder() {
        if (serverExitNewSleeveBuilder_ == null) {
          serverExitNewSleeveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve, com.kys.util.netty.proto.LittleProto.ServerExitNewSleeve.Builder, com.kys.util.netty.proto.LittleProto.ServerExitNewSleeveOrBuilder>(
                  getServerExitNewSleeve(),
                  getParentForChildren(),
                  isClean());
          serverExitNewSleeve_ = null;
        }
        return serverExitNewSleeveBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch server2DoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch, com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_DoCatchOrBuilder> server2DoCatchBuilder_;
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      public boolean hasServer2DoCatch() {
        return server2DoCatchBuilder_ != null || server2DoCatch_ != null;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch getServer2DoCatch() {
        if (server2DoCatchBuilder_ == null) {
          return server2DoCatch_ == null ? com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.getDefaultInstance() : server2DoCatch_;
        } else {
          return server2DoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      public Builder setServer2DoCatch(com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch value) {
        if (server2DoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          server2DoCatch_ = value;
          onChanged();
        } else {
          server2DoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      public Builder setServer2DoCatch(
          com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.Builder builderForValue) {
        if (server2DoCatchBuilder_ == null) {
          server2DoCatch_ = builderForValue.build();
          onChanged();
        } else {
          server2DoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      public Builder mergeServer2DoCatch(com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch value) {
        if (server2DoCatchBuilder_ == null) {
          if (server2DoCatch_ != null) {
            server2DoCatch_ =
              com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.newBuilder(server2DoCatch_).mergeFrom(value).buildPartial();
          } else {
            server2DoCatch_ = value;
          }
          onChanged();
        } else {
          server2DoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      public Builder clearServer2DoCatch() {
        if (server2DoCatchBuilder_ == null) {
          server2DoCatch_ = null;
          onChanged();
        } else {
          server2DoCatch_ = null;
          server2DoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.Builder getServer2DoCatchBuilder() {
        
        onChanged();
        return getServer2DoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_DoCatchOrBuilder getServer2DoCatchOrBuilder() {
        if (server2DoCatchBuilder_ != null) {
          return server2DoCatchBuilder_.getMessageOrBuilder();
        } else {
          return server2DoCatch_ == null ?
              com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.getDefaultInstance() : server2DoCatch_;
        }
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_DoCatch server_2_DoCatch = 1401;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch, com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_DoCatchOrBuilder> 
          getServer2DoCatchFieldBuilder() {
        if (server2DoCatchBuilder_ == null) {
          server2DoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch, com.kys.util.netty.proto.Game2Proto.Server_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_DoCatchOrBuilder>(
                  getServer2DoCatch(),
                  getParentForChildren(),
                  isClean());
          server2DoCatch_ = null;
        }
        return server2DoCatchBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards server2PlayCards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards, com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_PlayCardsOrBuilder> server2PlayCardsBuilder_;
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      public boolean hasServer2PlayCards() {
        return server2PlayCardsBuilder_ != null || server2PlayCards_ != null;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards getServer2PlayCards() {
        if (server2PlayCardsBuilder_ == null) {
          return server2PlayCards_ == null ? com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.getDefaultInstance() : server2PlayCards_;
        } else {
          return server2PlayCardsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      public Builder setServer2PlayCards(com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards value) {
        if (server2PlayCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          server2PlayCards_ = value;
          onChanged();
        } else {
          server2PlayCardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      public Builder setServer2PlayCards(
          com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.Builder builderForValue) {
        if (server2PlayCardsBuilder_ == null) {
          server2PlayCards_ = builderForValue.build();
          onChanged();
        } else {
          server2PlayCardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      public Builder mergeServer2PlayCards(com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards value) {
        if (server2PlayCardsBuilder_ == null) {
          if (server2PlayCards_ != null) {
            server2PlayCards_ =
              com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.newBuilder(server2PlayCards_).mergeFrom(value).buildPartial();
          } else {
            server2PlayCards_ = value;
          }
          onChanged();
        } else {
          server2PlayCardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      public Builder clearServer2PlayCards() {
        if (server2PlayCardsBuilder_ == null) {
          server2PlayCards_ = null;
          onChanged();
        } else {
          server2PlayCards_ = null;
          server2PlayCardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.Builder getServer2PlayCardsBuilder() {
        
        onChanged();
        return getServer2PlayCardsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_PlayCardsOrBuilder getServer2PlayCardsOrBuilder() {
        if (server2PlayCardsBuilder_ != null) {
          return server2PlayCardsBuilder_.getMessageOrBuilder();
        } else {
          return server2PlayCards_ == null ?
              com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.getDefaultInstance() : server2PlayCards_;
        }
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_PlayCards server_2_PlayCards = 1402;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards, com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_PlayCardsOrBuilder> 
          getServer2PlayCardsFieldBuilder() {
        if (server2PlayCardsBuilder_ == null) {
          server2PlayCardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards, com.kys.util.netty.proto.Game2Proto.Server_2_PlayCards.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_PlayCardsOrBuilder>(
                  getServer2PlayCards(),
                  getParentForChildren(),
                  isClean());
          server2PlayCards_ = null;
        }
        return server2PlayCardsBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame server2RecoverGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame, com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGameOrBuilder> server2RecoverGameBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      public boolean hasServer2RecoverGame() {
        return server2RecoverGameBuilder_ != null || server2RecoverGame_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame getServer2RecoverGame() {
        if (server2RecoverGameBuilder_ == null) {
          return server2RecoverGame_ == null ? com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.getDefaultInstance() : server2RecoverGame_;
        } else {
          return server2RecoverGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      public Builder setServer2RecoverGame(com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame value) {
        if (server2RecoverGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          server2RecoverGame_ = value;
          onChanged();
        } else {
          server2RecoverGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      public Builder setServer2RecoverGame(
          com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.Builder builderForValue) {
        if (server2RecoverGameBuilder_ == null) {
          server2RecoverGame_ = builderForValue.build();
          onChanged();
        } else {
          server2RecoverGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      public Builder mergeServer2RecoverGame(com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame value) {
        if (server2RecoverGameBuilder_ == null) {
          if (server2RecoverGame_ != null) {
            server2RecoverGame_ =
              com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.newBuilder(server2RecoverGame_).mergeFrom(value).buildPartial();
          } else {
            server2RecoverGame_ = value;
          }
          onChanged();
        } else {
          server2RecoverGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      public Builder clearServer2RecoverGame() {
        if (server2RecoverGameBuilder_ == null) {
          server2RecoverGame_ = null;
          onChanged();
        } else {
          server2RecoverGame_ = null;
          server2RecoverGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.Builder getServer2RecoverGameBuilder() {
        
        onChanged();
        return getServer2RecoverGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGameOrBuilder getServer2RecoverGameOrBuilder() {
        if (server2RecoverGameBuilder_ != null) {
          return server2RecoverGameBuilder_.getMessageOrBuilder();
        } else {
          return server2RecoverGame_ == null ?
              com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.getDefaultInstance() : server2RecoverGame_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_RecoverGame server_2_RecoverGame = 1403;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame, com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGameOrBuilder> 
          getServer2RecoverGameFieldBuilder() {
        if (server2RecoverGameBuilder_ == null) {
          server2RecoverGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame, com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGame.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_RecoverGameOrBuilder>(
                  getServer2RecoverGame(),
                  getParentForChildren(),
                  isClean());
          server2RecoverGame_ = null;
        }
        return server2RecoverGameBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom server2LeaveRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom, com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoomOrBuilder> server2LeaveRoomBuilder_;
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      public boolean hasServer2LeaveRoom() {
        return server2LeaveRoomBuilder_ != null || server2LeaveRoom_ != null;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom getServer2LeaveRoom() {
        if (server2LeaveRoomBuilder_ == null) {
          return server2LeaveRoom_ == null ? com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.getDefaultInstance() : server2LeaveRoom_;
        } else {
          return server2LeaveRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      public Builder setServer2LeaveRoom(com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom value) {
        if (server2LeaveRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          server2LeaveRoom_ = value;
          onChanged();
        } else {
          server2LeaveRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      public Builder setServer2LeaveRoom(
          com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.Builder builderForValue) {
        if (server2LeaveRoomBuilder_ == null) {
          server2LeaveRoom_ = builderForValue.build();
          onChanged();
        } else {
          server2LeaveRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      public Builder mergeServer2LeaveRoom(com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom value) {
        if (server2LeaveRoomBuilder_ == null) {
          if (server2LeaveRoom_ != null) {
            server2LeaveRoom_ =
              com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.newBuilder(server2LeaveRoom_).mergeFrom(value).buildPartial();
          } else {
            server2LeaveRoom_ = value;
          }
          onChanged();
        } else {
          server2LeaveRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      public Builder clearServer2LeaveRoom() {
        if (server2LeaveRoomBuilder_ == null) {
          server2LeaveRoom_ = null;
          onChanged();
        } else {
          server2LeaveRoom_ = null;
          server2LeaveRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.Builder getServer2LeaveRoomBuilder() {
        
        onChanged();
        return getServer2LeaveRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoomOrBuilder getServer2LeaveRoomOrBuilder() {
        if (server2LeaveRoomBuilder_ != null) {
          return server2LeaveRoomBuilder_.getMessageOrBuilder();
        } else {
          return server2LeaveRoom_ == null ?
              com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.getDefaultInstance() : server2LeaveRoom_;
        }
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.Server_2_LeaveRoom server_2_LeaveRoom = 1404;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom, com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoomOrBuilder> 
          getServer2LeaveRoomFieldBuilder() {
        if (server2LeaveRoomBuilder_ == null) {
          server2LeaveRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom, com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoom.Builder, com.kys.util.netty.proto.Game2Proto.Server_2_LeaveRoomOrBuilder>(
                  getServer2LeaveRoom(),
                  getParentForChildren(),
                  isClean());
          server2LeaveRoom_ = null;
        }
        return server2LeaveRoomBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ServerMineShare serverMineShare_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerMineShare, com.kys.util.netty.proto.ShareProto.ServerMineShare.Builder, com.kys.util.netty.proto.ShareProto.ServerMineShareOrBuilder> serverMineShareBuilder_;
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      public boolean hasServerMineShare() {
        return serverMineShareBuilder_ != null || serverMineShare_ != null;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerMineShare getServerMineShare() {
        if (serverMineShareBuilder_ == null) {
          return serverMineShare_ == null ? com.kys.util.netty.proto.ShareProto.ServerMineShare.getDefaultInstance() : serverMineShare_;
        } else {
          return serverMineShareBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      public Builder setServerMineShare(com.kys.util.netty.proto.ShareProto.ServerMineShare value) {
        if (serverMineShareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMineShare_ = value;
          onChanged();
        } else {
          serverMineShareBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      public Builder setServerMineShare(
          com.kys.util.netty.proto.ShareProto.ServerMineShare.Builder builderForValue) {
        if (serverMineShareBuilder_ == null) {
          serverMineShare_ = builderForValue.build();
          onChanged();
        } else {
          serverMineShareBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      public Builder mergeServerMineShare(com.kys.util.netty.proto.ShareProto.ServerMineShare value) {
        if (serverMineShareBuilder_ == null) {
          if (serverMineShare_ != null) {
            serverMineShare_ =
              com.kys.util.netty.proto.ShareProto.ServerMineShare.newBuilder(serverMineShare_).mergeFrom(value).buildPartial();
          } else {
            serverMineShare_ = value;
          }
          onChanged();
        } else {
          serverMineShareBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      public Builder clearServerMineShare() {
        if (serverMineShareBuilder_ == null) {
          serverMineShare_ = null;
          onChanged();
        } else {
          serverMineShare_ = null;
          serverMineShareBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerMineShare.Builder getServerMineShareBuilder() {
        
        onChanged();
        return getServerMineShareFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerMineShareOrBuilder getServerMineShareOrBuilder() {
        if (serverMineShareBuilder_ != null) {
          return serverMineShareBuilder_.getMessageOrBuilder();
        } else {
          return serverMineShare_ == null ?
              com.kys.util.netty.proto.ShareProto.ServerMineShare.getDefaultInstance() : serverMineShare_;
        }
      }
      /**
       * <pre>
       ** 玩家获取自己的分享的奖励领取次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMineShare serverMineShare = 1501;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerMineShare, com.kys.util.netty.proto.ShareProto.ServerMineShare.Builder, com.kys.util.netty.proto.ShareProto.ServerMineShareOrBuilder> 
          getServerMineShareFieldBuilder() {
        if (serverMineShareBuilder_ == null) {
          serverMineShareBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ServerMineShare, com.kys.util.netty.proto.ShareProto.ServerMineShare.Builder, com.kys.util.netty.proto.ShareProto.ServerMineShareOrBuilder>(
                  getServerMineShare(),
                  getParentForChildren(),
                  isClean());
          serverMineShare_ = null;
        }
        return serverMineShareBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ServerGetMSAward serverGetMSAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerGetMSAward, com.kys.util.netty.proto.ShareProto.ServerGetMSAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetMSAwardOrBuilder> serverGetMSAwardBuilder_;
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      public boolean hasServerGetMSAward() {
        return serverGetMSAwardBuilder_ != null || serverGetMSAward_ != null;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetMSAward getServerGetMSAward() {
        if (serverGetMSAwardBuilder_ == null) {
          return serverGetMSAward_ == null ? com.kys.util.netty.proto.ShareProto.ServerGetMSAward.getDefaultInstance() : serverGetMSAward_;
        } else {
          return serverGetMSAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      public Builder setServerGetMSAward(com.kys.util.netty.proto.ShareProto.ServerGetMSAward value) {
        if (serverGetMSAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMSAward_ = value;
          onChanged();
        } else {
          serverGetMSAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      public Builder setServerGetMSAward(
          com.kys.util.netty.proto.ShareProto.ServerGetMSAward.Builder builderForValue) {
        if (serverGetMSAwardBuilder_ == null) {
          serverGetMSAward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMSAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      public Builder mergeServerGetMSAward(com.kys.util.netty.proto.ShareProto.ServerGetMSAward value) {
        if (serverGetMSAwardBuilder_ == null) {
          if (serverGetMSAward_ != null) {
            serverGetMSAward_ =
              com.kys.util.netty.proto.ShareProto.ServerGetMSAward.newBuilder(serverGetMSAward_).mergeFrom(value).buildPartial();
          } else {
            serverGetMSAward_ = value;
          }
          onChanged();
        } else {
          serverGetMSAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      public Builder clearServerGetMSAward() {
        if (serverGetMSAwardBuilder_ == null) {
          serverGetMSAward_ = null;
          onChanged();
        } else {
          serverGetMSAward_ = null;
          serverGetMSAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetMSAward.Builder getServerGetMSAwardBuilder() {
        
        onChanged();
        return getServerGetMSAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetMSAwardOrBuilder getServerGetMSAwardOrBuilder() {
        if (serverGetMSAwardBuilder_ != null) {
          return serverGetMSAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMSAward_ == null ?
              com.kys.util.netty.proto.ShareProto.ServerGetMSAward.getDefaultInstance() : serverGetMSAward_;
        }
      }
      /**
       * <pre>
       ** 玩家获取自己的分享奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMSAward serverGetMSAward = 1502;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerGetMSAward, com.kys.util.netty.proto.ShareProto.ServerGetMSAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetMSAwardOrBuilder> 
          getServerGetMSAwardFieldBuilder() {
        if (serverGetMSAwardBuilder_ == null) {
          serverGetMSAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ServerGetMSAward, com.kys.util.netty.proto.ShareProto.ServerGetMSAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetMSAwardOrBuilder>(
                  getServerGetMSAward(),
                  getParentForChildren(),
                  isClean());
          serverGetMSAward_ = null;
        }
        return serverGetMSAwardBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ServerFriendShare serverFriendShare_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerFriendShare, com.kys.util.netty.proto.ShareProto.ServerFriendShare.Builder, com.kys.util.netty.proto.ShareProto.ServerFriendShareOrBuilder> serverFriendShareBuilder_;
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      public boolean hasServerFriendShare() {
        return serverFriendShareBuilder_ != null || serverFriendShare_ != null;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerFriendShare getServerFriendShare() {
        if (serverFriendShareBuilder_ == null) {
          return serverFriendShare_ == null ? com.kys.util.netty.proto.ShareProto.ServerFriendShare.getDefaultInstance() : serverFriendShare_;
        } else {
          return serverFriendShareBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      public Builder setServerFriendShare(com.kys.util.netty.proto.ShareProto.ServerFriendShare value) {
        if (serverFriendShareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverFriendShare_ = value;
          onChanged();
        } else {
          serverFriendShareBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      public Builder setServerFriendShare(
          com.kys.util.netty.proto.ShareProto.ServerFriendShare.Builder builderForValue) {
        if (serverFriendShareBuilder_ == null) {
          serverFriendShare_ = builderForValue.build();
          onChanged();
        } else {
          serverFriendShareBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      public Builder mergeServerFriendShare(com.kys.util.netty.proto.ShareProto.ServerFriendShare value) {
        if (serverFriendShareBuilder_ == null) {
          if (serverFriendShare_ != null) {
            serverFriendShare_ =
              com.kys.util.netty.proto.ShareProto.ServerFriendShare.newBuilder(serverFriendShare_).mergeFrom(value).buildPartial();
          } else {
            serverFriendShare_ = value;
          }
          onChanged();
        } else {
          serverFriendShareBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      public Builder clearServerFriendShare() {
        if (serverFriendShareBuilder_ == null) {
          serverFriendShare_ = null;
          onChanged();
        } else {
          serverFriendShare_ = null;
          serverFriendShareBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerFriendShare.Builder getServerFriendShareBuilder() {
        
        onChanged();
        return getServerFriendShareFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerFriendShareOrBuilder getServerFriendShareOrBuilder() {
        if (serverFriendShareBuilder_ != null) {
          return serverFriendShareBuilder_.getMessageOrBuilder();
        } else {
          return serverFriendShare_ == null ?
              com.kys.util.netty.proto.ShareProto.ServerFriendShare.getDefaultInstance() : serverFriendShare_;
        }
      }
      /**
       * <pre>
       ** 玩家获取好友的分享福利是否可领 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerFriendShare serverFriendShare = 1503;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerFriendShare, com.kys.util.netty.proto.ShareProto.ServerFriendShare.Builder, com.kys.util.netty.proto.ShareProto.ServerFriendShareOrBuilder> 
          getServerFriendShareFieldBuilder() {
        if (serverFriendShareBuilder_ == null) {
          serverFriendShareBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ServerFriendShare, com.kys.util.netty.proto.ShareProto.ServerFriendShare.Builder, com.kys.util.netty.proto.ShareProto.ServerFriendShareOrBuilder>(
                  getServerFriendShare(),
                  getParentForChildren(),
                  isClean());
          serverFriendShare_ = null;
        }
        return serverFriendShareBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ServerGetFSAward serverGetFSAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerGetFSAward, com.kys.util.netty.proto.ShareProto.ServerGetFSAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetFSAwardOrBuilder> serverGetFSAwardBuilder_;
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      public boolean hasServerGetFSAward() {
        return serverGetFSAwardBuilder_ != null || serverGetFSAward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetFSAward getServerGetFSAward() {
        if (serverGetFSAwardBuilder_ == null) {
          return serverGetFSAward_ == null ? com.kys.util.netty.proto.ShareProto.ServerGetFSAward.getDefaultInstance() : serverGetFSAward_;
        } else {
          return serverGetFSAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      public Builder setServerGetFSAward(com.kys.util.netty.proto.ShareProto.ServerGetFSAward value) {
        if (serverGetFSAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetFSAward_ = value;
          onChanged();
        } else {
          serverGetFSAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      public Builder setServerGetFSAward(
          com.kys.util.netty.proto.ShareProto.ServerGetFSAward.Builder builderForValue) {
        if (serverGetFSAwardBuilder_ == null) {
          serverGetFSAward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetFSAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      public Builder mergeServerGetFSAward(com.kys.util.netty.proto.ShareProto.ServerGetFSAward value) {
        if (serverGetFSAwardBuilder_ == null) {
          if (serverGetFSAward_ != null) {
            serverGetFSAward_ =
              com.kys.util.netty.proto.ShareProto.ServerGetFSAward.newBuilder(serverGetFSAward_).mergeFrom(value).buildPartial();
          } else {
            serverGetFSAward_ = value;
          }
          onChanged();
        } else {
          serverGetFSAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      public Builder clearServerGetFSAward() {
        if (serverGetFSAwardBuilder_ == null) {
          serverGetFSAward_ = null;
          onChanged();
        } else {
          serverGetFSAward_ = null;
          serverGetFSAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetFSAward.Builder getServerGetFSAwardBuilder() {
        
        onChanged();
        return getServerGetFSAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetFSAwardOrBuilder getServerGetFSAwardOrBuilder() {
        if (serverGetFSAwardBuilder_ != null) {
          return serverGetFSAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetFSAward_ == null ?
              com.kys.util.netty.proto.ShareProto.ServerGetFSAward.getDefaultInstance() : serverGetFSAward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回好友福利 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFSAward serverGetFSAward = 1504;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerGetFSAward, com.kys.util.netty.proto.ShareProto.ServerGetFSAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetFSAwardOrBuilder> 
          getServerGetFSAwardFieldBuilder() {
        if (serverGetFSAwardBuilder_ == null) {
          serverGetFSAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ServerGetFSAward, com.kys.util.netty.proto.ShareProto.ServerGetFSAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetFSAwardOrBuilder>(
                  getServerGetFSAward(),
                  getParentForChildren(),
                  isClean());
          serverGetFSAward_ = null;
        }
        return serverGetFSAwardBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ServerGetShareTask serverGetShareTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerGetShareTask, com.kys.util.netty.proto.ShareProto.ServerGetShareTask.Builder, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskOrBuilder> serverGetShareTaskBuilder_;
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      public boolean hasServerGetShareTask() {
        return serverGetShareTaskBuilder_ != null || serverGetShareTask_ != null;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetShareTask getServerGetShareTask() {
        if (serverGetShareTaskBuilder_ == null) {
          return serverGetShareTask_ == null ? com.kys.util.netty.proto.ShareProto.ServerGetShareTask.getDefaultInstance() : serverGetShareTask_;
        } else {
          return serverGetShareTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      public Builder setServerGetShareTask(com.kys.util.netty.proto.ShareProto.ServerGetShareTask value) {
        if (serverGetShareTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetShareTask_ = value;
          onChanged();
        } else {
          serverGetShareTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      public Builder setServerGetShareTask(
          com.kys.util.netty.proto.ShareProto.ServerGetShareTask.Builder builderForValue) {
        if (serverGetShareTaskBuilder_ == null) {
          serverGetShareTask_ = builderForValue.build();
          onChanged();
        } else {
          serverGetShareTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      public Builder mergeServerGetShareTask(com.kys.util.netty.proto.ShareProto.ServerGetShareTask value) {
        if (serverGetShareTaskBuilder_ == null) {
          if (serverGetShareTask_ != null) {
            serverGetShareTask_ =
              com.kys.util.netty.proto.ShareProto.ServerGetShareTask.newBuilder(serverGetShareTask_).mergeFrom(value).buildPartial();
          } else {
            serverGetShareTask_ = value;
          }
          onChanged();
        } else {
          serverGetShareTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      public Builder clearServerGetShareTask() {
        if (serverGetShareTaskBuilder_ == null) {
          serverGetShareTask_ = null;
          onChanged();
        } else {
          serverGetShareTask_ = null;
          serverGetShareTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetShareTask.Builder getServerGetShareTaskBuilder() {
        
        onChanged();
        return getServerGetShareTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetShareTaskOrBuilder getServerGetShareTaskOrBuilder() {
        if (serverGetShareTaskBuilder_ != null) {
          return serverGetShareTaskBuilder_.getMessageOrBuilder();
        } else {
          return serverGetShareTask_ == null ?
              com.kys.util.netty.proto.ShareProto.ServerGetShareTask.getDefaultInstance() : serverGetShareTask_;
        }
      }
      /**
       * <pre>
       ** 服务器返回邀请任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTask serverGetShareTask = 1505;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerGetShareTask, com.kys.util.netty.proto.ShareProto.ServerGetShareTask.Builder, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskOrBuilder> 
          getServerGetShareTaskFieldBuilder() {
        if (serverGetShareTaskBuilder_ == null) {
          serverGetShareTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ServerGetShareTask, com.kys.util.netty.proto.ShareProto.ServerGetShareTask.Builder, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskOrBuilder>(
                  getServerGetShareTask(),
                  getParentForChildren(),
                  isClean());
          serverGetShareTask_ = null;
        }
        return serverGetShareTaskBuilder_;
      }

      private com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward serverGetShareTaskAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAwardOrBuilder> serverGetShareTaskAwardBuilder_;
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      public boolean hasServerGetShareTaskAward() {
        return serverGetShareTaskAwardBuilder_ != null || serverGetShareTaskAward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward getServerGetShareTaskAward() {
        if (serverGetShareTaskAwardBuilder_ == null) {
          return serverGetShareTaskAward_ == null ? com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.getDefaultInstance() : serverGetShareTaskAward_;
        } else {
          return serverGetShareTaskAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      public Builder setServerGetShareTaskAward(com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward value) {
        if (serverGetShareTaskAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetShareTaskAward_ = value;
          onChanged();
        } else {
          serverGetShareTaskAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      public Builder setServerGetShareTaskAward(
          com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.Builder builderForValue) {
        if (serverGetShareTaskAwardBuilder_ == null) {
          serverGetShareTaskAward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetShareTaskAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      public Builder mergeServerGetShareTaskAward(com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward value) {
        if (serverGetShareTaskAwardBuilder_ == null) {
          if (serverGetShareTaskAward_ != null) {
            serverGetShareTaskAward_ =
              com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.newBuilder(serverGetShareTaskAward_).mergeFrom(value).buildPartial();
          } else {
            serverGetShareTaskAward_ = value;
          }
          onChanged();
        } else {
          serverGetShareTaskAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      public Builder clearServerGetShareTaskAward() {
        if (serverGetShareTaskAwardBuilder_ == null) {
          serverGetShareTaskAward_ = null;
          onChanged();
        } else {
          serverGetShareTaskAward_ = null;
          serverGetShareTaskAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.Builder getServerGetShareTaskAwardBuilder() {
        
        onChanged();
        return getServerGetShareTaskAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      public com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAwardOrBuilder getServerGetShareTaskAwardOrBuilder() {
        if (serverGetShareTaskAwardBuilder_ != null) {
          return serverGetShareTaskAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetShareTaskAward_ == null ?
              com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.getDefaultInstance() : serverGetShareTaskAward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回邀请任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetShareTaskAward serverGetShareTaskAward = 1506;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAwardOrBuilder> 
          getServerGetShareTaskAwardFieldBuilder() {
        if (serverGetShareTaskAwardBuilder_ == null) {
          serverGetShareTaskAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAward.Builder, com.kys.util.netty.proto.ShareProto.ServerGetShareTaskAwardOrBuilder>(
                  getServerGetShareTaskAward(),
                  getParentForChildren(),
                  isClean());
          serverGetShareTaskAward_ = null;
        }
        return serverGetShareTaskAwardBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo serverQueryReviveInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo, com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfoOrBuilder> serverQueryReviveInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      public boolean hasServerQueryReviveInfo() {
        return serverQueryReviveInfoBuilder_ != null || serverQueryReviveInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo getServerQueryReviveInfo() {
        if (serverQueryReviveInfoBuilder_ == null) {
          return serverQueryReviveInfo_ == null ? com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.getDefaultInstance() : serverQueryReviveInfo_;
        } else {
          return serverQueryReviveInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      public Builder setServerQueryReviveInfo(com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo value) {
        if (serverQueryReviveInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryReviveInfo_ = value;
          onChanged();
        } else {
          serverQueryReviveInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      public Builder setServerQueryReviveInfo(
          com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.Builder builderForValue) {
        if (serverQueryReviveInfoBuilder_ == null) {
          serverQueryReviveInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryReviveInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      public Builder mergeServerQueryReviveInfo(com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo value) {
        if (serverQueryReviveInfoBuilder_ == null) {
          if (serverQueryReviveInfo_ != null) {
            serverQueryReviveInfo_ =
              com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.newBuilder(serverQueryReviveInfo_).mergeFrom(value).buildPartial();
          } else {
            serverQueryReviveInfo_ = value;
          }
          onChanged();
        } else {
          serverQueryReviveInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      public Builder clearServerQueryReviveInfo() {
        if (serverQueryReviveInfoBuilder_ == null) {
          serverQueryReviveInfo_ = null;
          onChanged();
        } else {
          serverQueryReviveInfo_ = null;
          serverQueryReviveInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.Builder getServerQueryReviveInfoBuilder() {
        
        onChanged();
        return getServerQueryReviveInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfoOrBuilder getServerQueryReviveInfoOrBuilder() {
        if (serverQueryReviveInfoBuilder_ != null) {
          return serverQueryReviveInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryReviveInfo_ == null ?
              com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.getDefaultInstance() : serverQueryReviveInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回复活界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryReviveInfo serverQueryReviveInfo = 1601;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo, com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfoOrBuilder> 
          getServerQueryReviveInfoFieldBuilder() {
        if (serverQueryReviveInfoBuilder_ == null) {
          serverQueryReviveInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo, com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.ServerQueryReviveInfoOrBuilder>(
                  getServerQueryReviveInfo(),
                  getParentForChildren(),
                  isClean());
          serverQueryReviveInfo_ = null;
        }
        return serverQueryReviveInfoBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.ServerUseRevive serverUseRevive_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ServerUseRevive, com.kys.util.netty.proto.ReviveProto.ServerUseRevive.Builder, com.kys.util.netty.proto.ReviveProto.ServerUseReviveOrBuilder> serverUseReviveBuilder_;
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      public boolean hasServerUseRevive() {
        return serverUseReviveBuilder_ != null || serverUseRevive_ != null;
      }
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerUseRevive getServerUseRevive() {
        if (serverUseReviveBuilder_ == null) {
          return serverUseRevive_ == null ? com.kys.util.netty.proto.ReviveProto.ServerUseRevive.getDefaultInstance() : serverUseRevive_;
        } else {
          return serverUseReviveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      public Builder setServerUseRevive(com.kys.util.netty.proto.ReviveProto.ServerUseRevive value) {
        if (serverUseReviveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverUseRevive_ = value;
          onChanged();
        } else {
          serverUseReviveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      public Builder setServerUseRevive(
          com.kys.util.netty.proto.ReviveProto.ServerUseRevive.Builder builderForValue) {
        if (serverUseReviveBuilder_ == null) {
          serverUseRevive_ = builderForValue.build();
          onChanged();
        } else {
          serverUseReviveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      public Builder mergeServerUseRevive(com.kys.util.netty.proto.ReviveProto.ServerUseRevive value) {
        if (serverUseReviveBuilder_ == null) {
          if (serverUseRevive_ != null) {
            serverUseRevive_ =
              com.kys.util.netty.proto.ReviveProto.ServerUseRevive.newBuilder(serverUseRevive_).mergeFrom(value).buildPartial();
          } else {
            serverUseRevive_ = value;
          }
          onChanged();
        } else {
          serverUseReviveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      public Builder clearServerUseRevive() {
        if (serverUseReviveBuilder_ == null) {
          serverUseRevive_ = null;
          onChanged();
        } else {
          serverUseRevive_ = null;
          serverUseReviveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerUseRevive.Builder getServerUseReviveBuilder() {
        
        onChanged();
        return getServerUseReviveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerUseReviveOrBuilder getServerUseReviveOrBuilder() {
        if (serverUseReviveBuilder_ != null) {
          return serverUseReviveBuilder_.getMessageOrBuilder();
        } else {
          return serverUseRevive_ == null ?
              com.kys.util.netty.proto.ReviveProto.ServerUseRevive.getDefaultInstance() : serverUseRevive_;
        }
      }
      /**
       * <pre>
       ** 服务器返回使用复活结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseRevive serverUseRevive = 1602;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ServerUseRevive, com.kys.util.netty.proto.ReviveProto.ServerUseRevive.Builder, com.kys.util.netty.proto.ReviveProto.ServerUseReviveOrBuilder> 
          getServerUseReviveFieldBuilder() {
        if (serverUseReviveBuilder_ == null) {
          serverUseReviveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.ServerUseRevive, com.kys.util.netty.proto.ReviveProto.ServerUseRevive.Builder, com.kys.util.netty.proto.ReviveProto.ServerUseReviveOrBuilder>(
                  getServerUseRevive(),
                  getParentForChildren(),
                  isClean());
          serverUseRevive_ = null;
        }
        return serverUseReviveBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge serverReviveFirstCharge_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge, com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.Builder, com.kys.util.netty.proto.ReviveProto.ServerReviveFirstChargeOrBuilder> serverReviveFirstChargeBuilder_;
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      public boolean hasServerReviveFirstCharge() {
        return serverReviveFirstChargeBuilder_ != null || serverReviveFirstCharge_ != null;
      }
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge getServerReviveFirstCharge() {
        if (serverReviveFirstChargeBuilder_ == null) {
          return serverReviveFirstCharge_ == null ? com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.getDefaultInstance() : serverReviveFirstCharge_;
        } else {
          return serverReviveFirstChargeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      public Builder setServerReviveFirstCharge(com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge value) {
        if (serverReviveFirstChargeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverReviveFirstCharge_ = value;
          onChanged();
        } else {
          serverReviveFirstChargeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      public Builder setServerReviveFirstCharge(
          com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.Builder builderForValue) {
        if (serverReviveFirstChargeBuilder_ == null) {
          serverReviveFirstCharge_ = builderForValue.build();
          onChanged();
        } else {
          serverReviveFirstChargeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      public Builder mergeServerReviveFirstCharge(com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge value) {
        if (serverReviveFirstChargeBuilder_ == null) {
          if (serverReviveFirstCharge_ != null) {
            serverReviveFirstCharge_ =
              com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.newBuilder(serverReviveFirstCharge_).mergeFrom(value).buildPartial();
          } else {
            serverReviveFirstCharge_ = value;
          }
          onChanged();
        } else {
          serverReviveFirstChargeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      public Builder clearServerReviveFirstCharge() {
        if (serverReviveFirstChargeBuilder_ == null) {
          serverReviveFirstCharge_ = null;
          onChanged();
        } else {
          serverReviveFirstCharge_ = null;
          serverReviveFirstChargeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.Builder getServerReviveFirstChargeBuilder() {
        
        onChanged();
        return getServerReviveFirstChargeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerReviveFirstChargeOrBuilder getServerReviveFirstChargeOrBuilder() {
        if (serverReviveFirstChargeBuilder_ != null) {
          return serverReviveFirstChargeBuilder_.getMessageOrBuilder();
        } else {
          return serverReviveFirstCharge_ == null ?
              com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.getDefaultInstance() : serverReviveFirstCharge_;
        }
      }
      /**
       * <pre>
       ** 服务器返回新手启航礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveFirstCharge serverReviveFirstCharge = 1603;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge, com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.Builder, com.kys.util.netty.proto.ReviveProto.ServerReviveFirstChargeOrBuilder> 
          getServerReviveFirstChargeFieldBuilder() {
        if (serverReviveFirstChargeBuilder_ == null) {
          serverReviveFirstChargeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge, com.kys.util.netty.proto.ReviveProto.ServerReviveFirstCharge.Builder, com.kys.util.netty.proto.ReviveProto.ServerReviveFirstChargeOrBuilder>(
                  getServerReviveFirstCharge(),
                  getParentForChildren(),
                  isClean());
          serverReviveFirstCharge_ = null;
        }
        return serverReviveFirstChargeBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift serverReviveDayGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift, com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.Builder, com.kys.util.netty.proto.ReviveProto.ServerReviveDayGiftOrBuilder> serverReviveDayGiftBuilder_;
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      public boolean hasServerReviveDayGift() {
        return serverReviveDayGiftBuilder_ != null || serverReviveDayGift_ != null;
      }
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift getServerReviveDayGift() {
        if (serverReviveDayGiftBuilder_ == null) {
          return serverReviveDayGift_ == null ? com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.getDefaultInstance() : serverReviveDayGift_;
        } else {
          return serverReviveDayGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      public Builder setServerReviveDayGift(com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift value) {
        if (serverReviveDayGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverReviveDayGift_ = value;
          onChanged();
        } else {
          serverReviveDayGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      public Builder setServerReviveDayGift(
          com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.Builder builderForValue) {
        if (serverReviveDayGiftBuilder_ == null) {
          serverReviveDayGift_ = builderForValue.build();
          onChanged();
        } else {
          serverReviveDayGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      public Builder mergeServerReviveDayGift(com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift value) {
        if (serverReviveDayGiftBuilder_ == null) {
          if (serverReviveDayGift_ != null) {
            serverReviveDayGift_ =
              com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.newBuilder(serverReviveDayGift_).mergeFrom(value).buildPartial();
          } else {
            serverReviveDayGift_ = value;
          }
          onChanged();
        } else {
          serverReviveDayGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      public Builder clearServerReviveDayGift() {
        if (serverReviveDayGiftBuilder_ == null) {
          serverReviveDayGift_ = null;
          onChanged();
        } else {
          serverReviveDayGift_ = null;
          serverReviveDayGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.Builder getServerReviveDayGiftBuilder() {
        
        onChanged();
        return getServerReviveDayGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.ServerReviveDayGiftOrBuilder getServerReviveDayGiftOrBuilder() {
        if (serverReviveDayGiftBuilder_ != null) {
          return serverReviveDayGiftBuilder_.getMessageOrBuilder();
        } else {
          return serverReviveDayGift_ == null ?
              com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.getDefaultInstance() : serverReviveDayGift_;
        }
      }
      /**
       * <pre>
       ** 服务器返回每日复活礼包信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReviveDayGift serverReviveDayGift = 1604;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift, com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.Builder, com.kys.util.netty.proto.ReviveProto.ServerReviveDayGiftOrBuilder> 
          getServerReviveDayGiftFieldBuilder() {
        if (serverReviveDayGiftBuilder_ == null) {
          serverReviveDayGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift, com.kys.util.netty.proto.ReviveProto.ServerReviveDayGift.Builder, com.kys.util.netty.proto.ReviveProto.ServerReviveDayGiftOrBuilder>(
                  getServerReviveDayGift(),
                  getParentForChildren(),
                  isClean());
          serverReviveDayGift_ = null;
        }
        return serverReviveDayGiftBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetRedTip serverGetRedTip_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRedTip, com.kys.util.netty.proto.HallProto.ServerGetRedTip.Builder, com.kys.util.netty.proto.HallProto.ServerGetRedTipOrBuilder> serverGetRedTipBuilder_;
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      public boolean hasServerGetRedTip() {
        return serverGetRedTipBuilder_ != null || serverGetRedTip_ != null;
      }
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRedTip getServerGetRedTip() {
        if (serverGetRedTipBuilder_ == null) {
          return serverGetRedTip_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRedTip.getDefaultInstance() : serverGetRedTip_;
        } else {
          return serverGetRedTipBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      public Builder setServerGetRedTip(com.kys.util.netty.proto.HallProto.ServerGetRedTip value) {
        if (serverGetRedTipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetRedTip_ = value;
          onChanged();
        } else {
          serverGetRedTipBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      public Builder setServerGetRedTip(
          com.kys.util.netty.proto.HallProto.ServerGetRedTip.Builder builderForValue) {
        if (serverGetRedTipBuilder_ == null) {
          serverGetRedTip_ = builderForValue.build();
          onChanged();
        } else {
          serverGetRedTipBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      public Builder mergeServerGetRedTip(com.kys.util.netty.proto.HallProto.ServerGetRedTip value) {
        if (serverGetRedTipBuilder_ == null) {
          if (serverGetRedTip_ != null) {
            serverGetRedTip_ =
              com.kys.util.netty.proto.HallProto.ServerGetRedTip.newBuilder(serverGetRedTip_).mergeFrom(value).buildPartial();
          } else {
            serverGetRedTip_ = value;
          }
          onChanged();
        } else {
          serverGetRedTipBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      public Builder clearServerGetRedTip() {
        if (serverGetRedTipBuilder_ == null) {
          serverGetRedTip_ = null;
          onChanged();
        } else {
          serverGetRedTip_ = null;
          serverGetRedTipBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRedTip.Builder getServerGetRedTipBuilder() {
        
        onChanged();
        return getServerGetRedTipFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRedTipOrBuilder getServerGetRedTipOrBuilder() {
        if (serverGetRedTipBuilder_ != null) {
          return serverGetRedTipBuilder_.getMessageOrBuilder();
        } else {
          return serverGetRedTip_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetRedTip.getDefaultInstance() : serverGetRedTip_;
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅红点 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRedTip serverGetRedTip = 1701;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRedTip, com.kys.util.netty.proto.HallProto.ServerGetRedTip.Builder, com.kys.util.netty.proto.HallProto.ServerGetRedTipOrBuilder> 
          getServerGetRedTipFieldBuilder() {
        if (serverGetRedTipBuilder_ == null) {
          serverGetRedTipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetRedTip, com.kys.util.netty.proto.HallProto.ServerGetRedTip.Builder, com.kys.util.netty.proto.HallProto.ServerGetRedTipOrBuilder>(
                  getServerGetRedTip(),
                  getParentForChildren(),
                  isClean());
          serverGetRedTip_ = null;
        }
        return serverGetRedTipBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo serverGetMatchInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo, com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchInfoOrBuilder> serverGetMatchInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      public boolean hasServerGetMatchInfo() {
        return serverGetMatchInfoBuilder_ != null || serverGetMatchInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo getServerGetMatchInfo() {
        if (serverGetMatchInfoBuilder_ == null) {
          return serverGetMatchInfo_ == null ? com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.getDefaultInstance() : serverGetMatchInfo_;
        } else {
          return serverGetMatchInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      public Builder setServerGetMatchInfo(com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo value) {
        if (serverGetMatchInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMatchInfo_ = value;
          onChanged();
        } else {
          serverGetMatchInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      public Builder setServerGetMatchInfo(
          com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.Builder builderForValue) {
        if (serverGetMatchInfoBuilder_ == null) {
          serverGetMatchInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMatchInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      public Builder mergeServerGetMatchInfo(com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo value) {
        if (serverGetMatchInfoBuilder_ == null) {
          if (serverGetMatchInfo_ != null) {
            serverGetMatchInfo_ =
              com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.newBuilder(serverGetMatchInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetMatchInfo_ = value;
          }
          onChanged();
        } else {
          serverGetMatchInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      public Builder clearServerGetMatchInfo() {
        if (serverGetMatchInfoBuilder_ == null) {
          serverGetMatchInfo_ = null;
          onChanged();
        } else {
          serverGetMatchInfo_ = null;
          serverGetMatchInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.Builder getServerGetMatchInfoBuilder() {
        
        onChanged();
        return getServerGetMatchInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchInfoOrBuilder getServerGetMatchInfoOrBuilder() {
        if (serverGetMatchInfoBuilder_ != null) {
          return serverGetMatchInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMatchInfo_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.getDefaultInstance() : serverGetMatchInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchInfo serverGetMatchInfo = 1801;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo, com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchInfoOrBuilder> 
          getServerGetMatchInfoFieldBuilder() {
        if (serverGetMatchInfoBuilder_ == null) {
          serverGetMatchInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo, com.kys.util.netty.proto.MatchProto.ServerGetMatchInfo.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchInfoOrBuilder>(
                  getServerGetMatchInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetMatchInfo_ = null;
        }
        return serverGetMatchInfoBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail serverGetMatchDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail, com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchDetailOrBuilder> serverGetMatchDetailBuilder_;
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      public boolean hasServerGetMatchDetail() {
        return serverGetMatchDetailBuilder_ != null || serverGetMatchDetail_ != null;
      }
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail getServerGetMatchDetail() {
        if (serverGetMatchDetailBuilder_ == null) {
          return serverGetMatchDetail_ == null ? com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.getDefaultInstance() : serverGetMatchDetail_;
        } else {
          return serverGetMatchDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      public Builder setServerGetMatchDetail(com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail value) {
        if (serverGetMatchDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMatchDetail_ = value;
          onChanged();
        } else {
          serverGetMatchDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      public Builder setServerGetMatchDetail(
          com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.Builder builderForValue) {
        if (serverGetMatchDetailBuilder_ == null) {
          serverGetMatchDetail_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMatchDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      public Builder mergeServerGetMatchDetail(com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail value) {
        if (serverGetMatchDetailBuilder_ == null) {
          if (serverGetMatchDetail_ != null) {
            serverGetMatchDetail_ =
              com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.newBuilder(serverGetMatchDetail_).mergeFrom(value).buildPartial();
          } else {
            serverGetMatchDetail_ = value;
          }
          onChanged();
        } else {
          serverGetMatchDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      public Builder clearServerGetMatchDetail() {
        if (serverGetMatchDetailBuilder_ == null) {
          serverGetMatchDetail_ = null;
          onChanged();
        } else {
          serverGetMatchDetail_ = null;
          serverGetMatchDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.Builder getServerGetMatchDetailBuilder() {
        
        onChanged();
        return getServerGetMatchDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchDetailOrBuilder getServerGetMatchDetailOrBuilder() {
        if (serverGetMatchDetailBuilder_ != null) {
          return serverGetMatchDetailBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMatchDetail_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.getDefaultInstance() : serverGetMatchDetail_;
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchDetail serverGetMatchDetail = 1802;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail, com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchDetailOrBuilder> 
          getServerGetMatchDetailFieldBuilder() {
        if (serverGetMatchDetailBuilder_ == null) {
          serverGetMatchDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail, com.kys.util.netty.proto.MatchProto.ServerGetMatchDetail.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchDetailOrBuilder>(
                  getServerGetMatchDetail(),
                  getParentForChildren(),
                  isClean());
          serverGetMatchDetail_ = null;
        }
        return serverGetMatchDetailBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord serverGetMatchRecord_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord, com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchRecordOrBuilder> serverGetMatchRecordBuilder_;
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      public boolean hasServerGetMatchRecord() {
        return serverGetMatchRecordBuilder_ != null || serverGetMatchRecord_ != null;
      }
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord getServerGetMatchRecord() {
        if (serverGetMatchRecordBuilder_ == null) {
          return serverGetMatchRecord_ == null ? com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.getDefaultInstance() : serverGetMatchRecord_;
        } else {
          return serverGetMatchRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      public Builder setServerGetMatchRecord(com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord value) {
        if (serverGetMatchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMatchRecord_ = value;
          onChanged();
        } else {
          serverGetMatchRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      public Builder setServerGetMatchRecord(
          com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.Builder builderForValue) {
        if (serverGetMatchRecordBuilder_ == null) {
          serverGetMatchRecord_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMatchRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      public Builder mergeServerGetMatchRecord(com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord value) {
        if (serverGetMatchRecordBuilder_ == null) {
          if (serverGetMatchRecord_ != null) {
            serverGetMatchRecord_ =
              com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.newBuilder(serverGetMatchRecord_).mergeFrom(value).buildPartial();
          } else {
            serverGetMatchRecord_ = value;
          }
          onChanged();
        } else {
          serverGetMatchRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      public Builder clearServerGetMatchRecord() {
        if (serverGetMatchRecordBuilder_ == null) {
          serverGetMatchRecord_ = null;
          onChanged();
        } else {
          serverGetMatchRecord_ = null;
          serverGetMatchRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.Builder getServerGetMatchRecordBuilder() {
        
        onChanged();
        return getServerGetMatchRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerGetMatchRecordOrBuilder getServerGetMatchRecordOrBuilder() {
        if (serverGetMatchRecordBuilder_ != null) {
          return serverGetMatchRecordBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMatchRecord_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.getDefaultInstance() : serverGetMatchRecord_;
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事记录信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMatchRecord serverGetMatchRecord = 1803;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord, com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchRecordOrBuilder> 
          getServerGetMatchRecordFieldBuilder() {
        if (serverGetMatchRecordBuilder_ == null) {
          serverGetMatchRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord, com.kys.util.netty.proto.MatchProto.ServerGetMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ServerGetMatchRecordOrBuilder>(
                  getServerGetMatchRecord(),
                  getParentForChildren(),
                  isClean());
          serverGetMatchRecord_ = null;
        }
        return serverGetMatchRecordBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerMatchApply serverMatchApply_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerMatchApply, com.kys.util.netty.proto.MatchProto.ServerMatchApply.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchApplyOrBuilder> serverMatchApplyBuilder_;
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      public boolean hasServerMatchApply() {
        return serverMatchApplyBuilder_ != null || serverMatchApply_ != null;
      }
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchApply getServerMatchApply() {
        if (serverMatchApplyBuilder_ == null) {
          return serverMatchApply_ == null ? com.kys.util.netty.proto.MatchProto.ServerMatchApply.getDefaultInstance() : serverMatchApply_;
        } else {
          return serverMatchApplyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      public Builder setServerMatchApply(com.kys.util.netty.proto.MatchProto.ServerMatchApply value) {
        if (serverMatchApplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMatchApply_ = value;
          onChanged();
        } else {
          serverMatchApplyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      public Builder setServerMatchApply(
          com.kys.util.netty.proto.MatchProto.ServerMatchApply.Builder builderForValue) {
        if (serverMatchApplyBuilder_ == null) {
          serverMatchApply_ = builderForValue.build();
          onChanged();
        } else {
          serverMatchApplyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      public Builder mergeServerMatchApply(com.kys.util.netty.proto.MatchProto.ServerMatchApply value) {
        if (serverMatchApplyBuilder_ == null) {
          if (serverMatchApply_ != null) {
            serverMatchApply_ =
              com.kys.util.netty.proto.MatchProto.ServerMatchApply.newBuilder(serverMatchApply_).mergeFrom(value).buildPartial();
          } else {
            serverMatchApply_ = value;
          }
          onChanged();
        } else {
          serverMatchApplyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      public Builder clearServerMatchApply() {
        if (serverMatchApplyBuilder_ == null) {
          serverMatchApply_ = null;
          onChanged();
        } else {
          serverMatchApply_ = null;
          serverMatchApplyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchApply.Builder getServerMatchApplyBuilder() {
        
        onChanged();
        return getServerMatchApplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchApplyOrBuilder getServerMatchApplyOrBuilder() {
        if (serverMatchApplyBuilder_ != null) {
          return serverMatchApplyBuilder_.getMessageOrBuilder();
        } else {
          return serverMatchApply_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerMatchApply.getDefaultInstance() : serverMatchApply_;
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事报名结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchApply serverMatchApply = 1804;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerMatchApply, com.kys.util.netty.proto.MatchProto.ServerMatchApply.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchApplyOrBuilder> 
          getServerMatchApplyFieldBuilder() {
        if (serverMatchApplyBuilder_ == null) {
          serverMatchApplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerMatchApply, com.kys.util.netty.proto.MatchProto.ServerMatchApply.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchApplyOrBuilder>(
                  getServerMatchApply(),
                  getParentForChildren(),
                  isClean());
          serverMatchApply_ = null;
        }
        return serverMatchApplyBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerMatchCancel serverMatchCancel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerMatchCancel, com.kys.util.netty.proto.MatchProto.ServerMatchCancel.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchCancelOrBuilder> serverMatchCancelBuilder_;
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      public boolean hasServerMatchCancel() {
        return serverMatchCancelBuilder_ != null || serverMatchCancel_ != null;
      }
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchCancel getServerMatchCancel() {
        if (serverMatchCancelBuilder_ == null) {
          return serverMatchCancel_ == null ? com.kys.util.netty.proto.MatchProto.ServerMatchCancel.getDefaultInstance() : serverMatchCancel_;
        } else {
          return serverMatchCancelBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      public Builder setServerMatchCancel(com.kys.util.netty.proto.MatchProto.ServerMatchCancel value) {
        if (serverMatchCancelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMatchCancel_ = value;
          onChanged();
        } else {
          serverMatchCancelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      public Builder setServerMatchCancel(
          com.kys.util.netty.proto.MatchProto.ServerMatchCancel.Builder builderForValue) {
        if (serverMatchCancelBuilder_ == null) {
          serverMatchCancel_ = builderForValue.build();
          onChanged();
        } else {
          serverMatchCancelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      public Builder mergeServerMatchCancel(com.kys.util.netty.proto.MatchProto.ServerMatchCancel value) {
        if (serverMatchCancelBuilder_ == null) {
          if (serverMatchCancel_ != null) {
            serverMatchCancel_ =
              com.kys.util.netty.proto.MatchProto.ServerMatchCancel.newBuilder(serverMatchCancel_).mergeFrom(value).buildPartial();
          } else {
            serverMatchCancel_ = value;
          }
          onChanged();
        } else {
          serverMatchCancelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      public Builder clearServerMatchCancel() {
        if (serverMatchCancelBuilder_ == null) {
          serverMatchCancel_ = null;
          onChanged();
        } else {
          serverMatchCancel_ = null;
          serverMatchCancelBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchCancel.Builder getServerMatchCancelBuilder() {
        
        onChanged();
        return getServerMatchCancelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchCancelOrBuilder getServerMatchCancelOrBuilder() {
        if (serverMatchCancelBuilder_ != null) {
          return serverMatchCancelBuilder_.getMessageOrBuilder();
        } else {
          return serverMatchCancel_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerMatchCancel.getDefaultInstance() : serverMatchCancel_;
        }
      }
      /**
       * <pre>
       ** 服务器返回取消赛事 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchCancel serverMatchCancel = 1805;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerMatchCancel, com.kys.util.netty.proto.MatchProto.ServerMatchCancel.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchCancelOrBuilder> 
          getServerMatchCancelFieldBuilder() {
        if (serverMatchCancelBuilder_ == null) {
          serverMatchCancelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerMatchCancel, com.kys.util.netty.proto.MatchProto.ServerMatchCancel.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchCancelOrBuilder>(
                  getServerMatchCancel(),
                  getParentForChildren(),
                  isClean());
          serverMatchCancel_ = null;
        }
        return serverMatchCancelBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord serverOwnMatchRecord_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord, com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecordOrBuilder> serverOwnMatchRecordBuilder_;
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      public boolean hasServerOwnMatchRecord() {
        return serverOwnMatchRecordBuilder_ != null || serverOwnMatchRecord_ != null;
      }
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord getServerOwnMatchRecord() {
        if (serverOwnMatchRecordBuilder_ == null) {
          return serverOwnMatchRecord_ == null ? com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.getDefaultInstance() : serverOwnMatchRecord_;
        } else {
          return serverOwnMatchRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      public Builder setServerOwnMatchRecord(com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord value) {
        if (serverOwnMatchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverOwnMatchRecord_ = value;
          onChanged();
        } else {
          serverOwnMatchRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      public Builder setServerOwnMatchRecord(
          com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.Builder builderForValue) {
        if (serverOwnMatchRecordBuilder_ == null) {
          serverOwnMatchRecord_ = builderForValue.build();
          onChanged();
        } else {
          serverOwnMatchRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      public Builder mergeServerOwnMatchRecord(com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord value) {
        if (serverOwnMatchRecordBuilder_ == null) {
          if (serverOwnMatchRecord_ != null) {
            serverOwnMatchRecord_ =
              com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.newBuilder(serverOwnMatchRecord_).mergeFrom(value).buildPartial();
          } else {
            serverOwnMatchRecord_ = value;
          }
          onChanged();
        } else {
          serverOwnMatchRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      public Builder clearServerOwnMatchRecord() {
        if (serverOwnMatchRecordBuilder_ == null) {
          serverOwnMatchRecord_ = null;
          onChanged();
        } else {
          serverOwnMatchRecord_ = null;
          serverOwnMatchRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.Builder getServerOwnMatchRecordBuilder() {
        
        onChanged();
        return getServerOwnMatchRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecordOrBuilder getServerOwnMatchRecordOrBuilder() {
        if (serverOwnMatchRecordBuilder_ != null) {
          return serverOwnMatchRecordBuilder_.getMessageOrBuilder();
        } else {
          return serverOwnMatchRecord_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.getDefaultInstance() : serverOwnMatchRecord_;
        }
      }
      /**
       * <pre>
       ** 服务器返回自己历史记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnMatchRecord serverOwnMatchRecord = 1806;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord, com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecordOrBuilder> 
          getServerOwnMatchRecordFieldBuilder() {
        if (serverOwnMatchRecordBuilder_ == null) {
          serverOwnMatchRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord, com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecord.Builder, com.kys.util.netty.proto.MatchProto.ServerOwnMatchRecordOrBuilder>(
                  getServerOwnMatchRecord(),
                  getParentForChildren(),
                  isClean());
          serverOwnMatchRecord_ = null;
        }
        return serverOwnMatchRecordBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerApplyListChange serverApplyListChange_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerApplyListChange, com.kys.util.netty.proto.MatchProto.ServerApplyListChange.Builder, com.kys.util.netty.proto.MatchProto.ServerApplyListChangeOrBuilder> serverApplyListChangeBuilder_;
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      public boolean hasServerApplyListChange() {
        return serverApplyListChangeBuilder_ != null || serverApplyListChange_ != null;
      }
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerApplyListChange getServerApplyListChange() {
        if (serverApplyListChangeBuilder_ == null) {
          return serverApplyListChange_ == null ? com.kys.util.netty.proto.MatchProto.ServerApplyListChange.getDefaultInstance() : serverApplyListChange_;
        } else {
          return serverApplyListChangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      public Builder setServerApplyListChange(com.kys.util.netty.proto.MatchProto.ServerApplyListChange value) {
        if (serverApplyListChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverApplyListChange_ = value;
          onChanged();
        } else {
          serverApplyListChangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      public Builder setServerApplyListChange(
          com.kys.util.netty.proto.MatchProto.ServerApplyListChange.Builder builderForValue) {
        if (serverApplyListChangeBuilder_ == null) {
          serverApplyListChange_ = builderForValue.build();
          onChanged();
        } else {
          serverApplyListChangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      public Builder mergeServerApplyListChange(com.kys.util.netty.proto.MatchProto.ServerApplyListChange value) {
        if (serverApplyListChangeBuilder_ == null) {
          if (serverApplyListChange_ != null) {
            serverApplyListChange_ =
              com.kys.util.netty.proto.MatchProto.ServerApplyListChange.newBuilder(serverApplyListChange_).mergeFrom(value).buildPartial();
          } else {
            serverApplyListChange_ = value;
          }
          onChanged();
        } else {
          serverApplyListChangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      public Builder clearServerApplyListChange() {
        if (serverApplyListChangeBuilder_ == null) {
          serverApplyListChange_ = null;
          onChanged();
        } else {
          serverApplyListChange_ = null;
          serverApplyListChangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerApplyListChange.Builder getServerApplyListChangeBuilder() {
        
        onChanged();
        return getServerApplyListChangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerApplyListChangeOrBuilder getServerApplyListChangeOrBuilder() {
        if (serverApplyListChangeBuilder_ != null) {
          return serverApplyListChangeBuilder_.getMessageOrBuilder();
        } else {
          return serverApplyListChange_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerApplyListChange.getDefaultInstance() : serverApplyListChange_;
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事列表参赛人数变化推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerApplyListChange serverApplyListChange = 1807;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerApplyListChange, com.kys.util.netty.proto.MatchProto.ServerApplyListChange.Builder, com.kys.util.netty.proto.MatchProto.ServerApplyListChangeOrBuilder> 
          getServerApplyListChangeFieldBuilder() {
        if (serverApplyListChangeBuilder_ == null) {
          serverApplyListChangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerApplyListChange, com.kys.util.netty.proto.MatchProto.ServerApplyListChange.Builder, com.kys.util.netty.proto.MatchProto.ServerApplyListChangeOrBuilder>(
                  getServerApplyListChange(),
                  getParentForChildren(),
                  isClean());
          serverApplyListChange_ = null;
        }
        return serverApplyListChangeBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerMatchScore serverMatchScore_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerMatchScore, com.kys.util.netty.proto.MatchProto.ServerMatchScore.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchScoreOrBuilder> serverMatchScoreBuilder_;
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      public boolean hasServerMatchScore() {
        return serverMatchScoreBuilder_ != null || serverMatchScore_ != null;
      }
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchScore getServerMatchScore() {
        if (serverMatchScoreBuilder_ == null) {
          return serverMatchScore_ == null ? com.kys.util.netty.proto.MatchProto.ServerMatchScore.getDefaultInstance() : serverMatchScore_;
        } else {
          return serverMatchScoreBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      public Builder setServerMatchScore(com.kys.util.netty.proto.MatchProto.ServerMatchScore value) {
        if (serverMatchScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMatchScore_ = value;
          onChanged();
        } else {
          serverMatchScoreBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      public Builder setServerMatchScore(
          com.kys.util.netty.proto.MatchProto.ServerMatchScore.Builder builderForValue) {
        if (serverMatchScoreBuilder_ == null) {
          serverMatchScore_ = builderForValue.build();
          onChanged();
        } else {
          serverMatchScoreBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      public Builder mergeServerMatchScore(com.kys.util.netty.proto.MatchProto.ServerMatchScore value) {
        if (serverMatchScoreBuilder_ == null) {
          if (serverMatchScore_ != null) {
            serverMatchScore_ =
              com.kys.util.netty.proto.MatchProto.ServerMatchScore.newBuilder(serverMatchScore_).mergeFrom(value).buildPartial();
          } else {
            serverMatchScore_ = value;
          }
          onChanged();
        } else {
          serverMatchScoreBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      public Builder clearServerMatchScore() {
        if (serverMatchScoreBuilder_ == null) {
          serverMatchScore_ = null;
          onChanged();
        } else {
          serverMatchScore_ = null;
          serverMatchScoreBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchScore.Builder getServerMatchScoreBuilder() {
        
        onChanged();
        return getServerMatchScoreFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchScoreOrBuilder getServerMatchScoreOrBuilder() {
        if (serverMatchScoreBuilder_ != null) {
          return serverMatchScoreBuilder_.getMessageOrBuilder();
        } else {
          return serverMatchScore_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerMatchScore.getDefaultInstance() : serverMatchScore_;
        }
      }
      /**
       * <pre>
       ** 服务器返回获取比赛中玩家积分头像等信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchScore serverMatchScore = 1808;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerMatchScore, com.kys.util.netty.proto.MatchProto.ServerMatchScore.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchScoreOrBuilder> 
          getServerMatchScoreFieldBuilder() {
        if (serverMatchScoreBuilder_ == null) {
          serverMatchScoreBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerMatchScore, com.kys.util.netty.proto.MatchProto.ServerMatchScore.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchScoreOrBuilder>(
                  getServerMatchScore(),
                  getParentForChildren(),
                  isClean());
          serverMatchScore_ = null;
        }
        return serverMatchScoreBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.ServerMatchConfig serverMatchConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerMatchConfig, com.kys.util.netty.proto.MatchProto.ServerMatchConfig.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchConfigOrBuilder> serverMatchConfigBuilder_;
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      public boolean hasServerMatchConfig() {
        return serverMatchConfigBuilder_ != null || serverMatchConfig_ != null;
      }
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchConfig getServerMatchConfig() {
        if (serverMatchConfigBuilder_ == null) {
          return serverMatchConfig_ == null ? com.kys.util.netty.proto.MatchProto.ServerMatchConfig.getDefaultInstance() : serverMatchConfig_;
        } else {
          return serverMatchConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      public Builder setServerMatchConfig(com.kys.util.netty.proto.MatchProto.ServerMatchConfig value) {
        if (serverMatchConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMatchConfig_ = value;
          onChanged();
        } else {
          serverMatchConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      public Builder setServerMatchConfig(
          com.kys.util.netty.proto.MatchProto.ServerMatchConfig.Builder builderForValue) {
        if (serverMatchConfigBuilder_ == null) {
          serverMatchConfig_ = builderForValue.build();
          onChanged();
        } else {
          serverMatchConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      public Builder mergeServerMatchConfig(com.kys.util.netty.proto.MatchProto.ServerMatchConfig value) {
        if (serverMatchConfigBuilder_ == null) {
          if (serverMatchConfig_ != null) {
            serverMatchConfig_ =
              com.kys.util.netty.proto.MatchProto.ServerMatchConfig.newBuilder(serverMatchConfig_).mergeFrom(value).buildPartial();
          } else {
            serverMatchConfig_ = value;
          }
          onChanged();
        } else {
          serverMatchConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      public Builder clearServerMatchConfig() {
        if (serverMatchConfigBuilder_ == null) {
          serverMatchConfig_ = null;
          onChanged();
        } else {
          serverMatchConfig_ = null;
          serverMatchConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchConfig.Builder getServerMatchConfigBuilder() {
        
        onChanged();
        return getServerMatchConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      public com.kys.util.netty.proto.MatchProto.ServerMatchConfigOrBuilder getServerMatchConfigOrBuilder() {
        if (serverMatchConfigBuilder_ != null) {
          return serverMatchConfigBuilder_.getMessageOrBuilder();
        } else {
          return serverMatchConfig_ == null ?
              com.kys.util.netty.proto.MatchProto.ServerMatchConfig.getDefaultInstance() : serverMatchConfig_;
        }
      }
      /**
       * <pre>
       ** 服务器返回赛事配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMatchConfig serverMatchConfig = 1809;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.ServerMatchConfig, com.kys.util.netty.proto.MatchProto.ServerMatchConfig.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchConfigOrBuilder> 
          getServerMatchConfigFieldBuilder() {
        if (serverMatchConfigBuilder_ == null) {
          serverMatchConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.ServerMatchConfig, com.kys.util.netty.proto.MatchProto.ServerMatchConfig.Builder, com.kys.util.netty.proto.MatchProto.ServerMatchConfigOrBuilder>(
                  getServerMatchConfig(),
                  getParentForChildren(),
                  isClean());
          serverMatchConfig_ = null;
        }
        return serverMatchConfigBuilder_;
      }

      private com.kys.util.netty.proto.Triplekill.ServerGetKillCell serverGetKillCell_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ServerGetKillCell, com.kys.util.netty.proto.Triplekill.ServerGetKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerGetKillCellOrBuilder> serverGetKillCellBuilder_;
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      public boolean hasServerGetKillCell() {
        return serverGetKillCellBuilder_ != null || serverGetKillCell_ != null;
      }
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerGetKillCell getServerGetKillCell() {
        if (serverGetKillCellBuilder_ == null) {
          return serverGetKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ServerGetKillCell.getDefaultInstance() : serverGetKillCell_;
        } else {
          return serverGetKillCellBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      public Builder setServerGetKillCell(com.kys.util.netty.proto.Triplekill.ServerGetKillCell value) {
        if (serverGetKillCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetKillCell_ = value;
          onChanged();
        } else {
          serverGetKillCellBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      public Builder setServerGetKillCell(
          com.kys.util.netty.proto.Triplekill.ServerGetKillCell.Builder builderForValue) {
        if (serverGetKillCellBuilder_ == null) {
          serverGetKillCell_ = builderForValue.build();
          onChanged();
        } else {
          serverGetKillCellBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      public Builder mergeServerGetKillCell(com.kys.util.netty.proto.Triplekill.ServerGetKillCell value) {
        if (serverGetKillCellBuilder_ == null) {
          if (serverGetKillCell_ != null) {
            serverGetKillCell_ =
              com.kys.util.netty.proto.Triplekill.ServerGetKillCell.newBuilder(serverGetKillCell_).mergeFrom(value).buildPartial();
          } else {
            serverGetKillCell_ = value;
          }
          onChanged();
        } else {
          serverGetKillCellBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      public Builder clearServerGetKillCell() {
        if (serverGetKillCellBuilder_ == null) {
          serverGetKillCell_ = null;
          onChanged();
        } else {
          serverGetKillCell_ = null;
          serverGetKillCellBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerGetKillCell.Builder getServerGetKillCellBuilder() {
        
        onChanged();
        return getServerGetKillCellFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerGetKillCellOrBuilder getServerGetKillCellOrBuilder() {
        if (serverGetKillCellBuilder_ != null) {
          return serverGetKillCellBuilder_.getMessageOrBuilder();
        } else {
          return serverGetKillCell_ == null ?
              com.kys.util.netty.proto.Triplekill.ServerGetKillCell.getDefaultInstance() : serverGetKillCell_;
        }
      }
      /**
       * <pre>
       ** 服务器返回消除元素信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetKillCell serverGetKillCell = 1901;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ServerGetKillCell, com.kys.util.netty.proto.Triplekill.ServerGetKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerGetKillCellOrBuilder> 
          getServerGetKillCellFieldBuilder() {
        if (serverGetKillCellBuilder_ == null) {
          serverGetKillCellBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Triplekill.ServerGetKillCell, com.kys.util.netty.proto.Triplekill.ServerGetKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerGetKillCellOrBuilder>(
                  getServerGetKillCell(),
                  getParentForChildren(),
                  isClean());
          serverGetKillCell_ = null;
        }
        return serverGetKillCellBuilder_;
      }

      private com.kys.util.netty.proto.Triplekill.ServerEnterKillCell serverEnterKillCell_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ServerEnterKillCell, com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerEnterKillCellOrBuilder> serverEnterKillCellBuilder_;
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      public boolean hasServerEnterKillCell() {
        return serverEnterKillCellBuilder_ != null || serverEnterKillCell_ != null;
      }
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerEnterKillCell getServerEnterKillCell() {
        if (serverEnterKillCellBuilder_ == null) {
          return serverEnterKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.getDefaultInstance() : serverEnterKillCell_;
        } else {
          return serverEnterKillCellBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      public Builder setServerEnterKillCell(com.kys.util.netty.proto.Triplekill.ServerEnterKillCell value) {
        if (serverEnterKillCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverEnterKillCell_ = value;
          onChanged();
        } else {
          serverEnterKillCellBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      public Builder setServerEnterKillCell(
          com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.Builder builderForValue) {
        if (serverEnterKillCellBuilder_ == null) {
          serverEnterKillCell_ = builderForValue.build();
          onChanged();
        } else {
          serverEnterKillCellBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      public Builder mergeServerEnterKillCell(com.kys.util.netty.proto.Triplekill.ServerEnterKillCell value) {
        if (serverEnterKillCellBuilder_ == null) {
          if (serverEnterKillCell_ != null) {
            serverEnterKillCell_ =
              com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.newBuilder(serverEnterKillCell_).mergeFrom(value).buildPartial();
          } else {
            serverEnterKillCell_ = value;
          }
          onChanged();
        } else {
          serverEnterKillCellBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      public Builder clearServerEnterKillCell() {
        if (serverEnterKillCellBuilder_ == null) {
          serverEnterKillCell_ = null;
          onChanged();
        } else {
          serverEnterKillCell_ = null;
          serverEnterKillCellBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.Builder getServerEnterKillCellBuilder() {
        
        onChanged();
        return getServerEnterKillCellFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerEnterKillCellOrBuilder getServerEnterKillCellOrBuilder() {
        if (serverEnterKillCellBuilder_ != null) {
          return serverEnterKillCellBuilder_.getMessageOrBuilder();
        } else {
          return serverEnterKillCell_ == null ?
              com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.getDefaultInstance() : serverEnterKillCell_;
        }
      }
      /**
       * <pre>
       ** 服务器返回进入消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterKillCell serverEnterKillCell = 1902;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ServerEnterKillCell, com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerEnterKillCellOrBuilder> 
          getServerEnterKillCellFieldBuilder() {
        if (serverEnterKillCellBuilder_ == null) {
          serverEnterKillCellBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Triplekill.ServerEnterKillCell, com.kys.util.netty.proto.Triplekill.ServerEnterKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerEnterKillCellOrBuilder>(
                  getServerEnterKillCell(),
                  getParentForChildren(),
                  isClean());
          serverEnterKillCell_ = null;
        }
        return serverEnterKillCellBuilder_;
      }

      private com.kys.util.netty.proto.Triplekill.ServerQuitKillCell serverQuitKillCell_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ServerQuitKillCell, com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerQuitKillCellOrBuilder> serverQuitKillCellBuilder_;
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      public boolean hasServerQuitKillCell() {
        return serverQuitKillCellBuilder_ != null || serverQuitKillCell_ != null;
      }
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerQuitKillCell getServerQuitKillCell() {
        if (serverQuitKillCellBuilder_ == null) {
          return serverQuitKillCell_ == null ? com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.getDefaultInstance() : serverQuitKillCell_;
        } else {
          return serverQuitKillCellBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      public Builder setServerQuitKillCell(com.kys.util.netty.proto.Triplekill.ServerQuitKillCell value) {
        if (serverQuitKillCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQuitKillCell_ = value;
          onChanged();
        } else {
          serverQuitKillCellBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      public Builder setServerQuitKillCell(
          com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.Builder builderForValue) {
        if (serverQuitKillCellBuilder_ == null) {
          serverQuitKillCell_ = builderForValue.build();
          onChanged();
        } else {
          serverQuitKillCellBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      public Builder mergeServerQuitKillCell(com.kys.util.netty.proto.Triplekill.ServerQuitKillCell value) {
        if (serverQuitKillCellBuilder_ == null) {
          if (serverQuitKillCell_ != null) {
            serverQuitKillCell_ =
              com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.newBuilder(serverQuitKillCell_).mergeFrom(value).buildPartial();
          } else {
            serverQuitKillCell_ = value;
          }
          onChanged();
        } else {
          serverQuitKillCellBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      public Builder clearServerQuitKillCell() {
        if (serverQuitKillCellBuilder_ == null) {
          serverQuitKillCell_ = null;
          onChanged();
        } else {
          serverQuitKillCell_ = null;
          serverQuitKillCellBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.Builder getServerQuitKillCellBuilder() {
        
        onChanged();
        return getServerQuitKillCellFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      public com.kys.util.netty.proto.Triplekill.ServerQuitKillCellOrBuilder getServerQuitKillCellOrBuilder() {
        if (serverQuitKillCellBuilder_ != null) {
          return serverQuitKillCellBuilder_.getMessageOrBuilder();
        } else {
          return serverQuitKillCell_ == null ?
              com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.getDefaultInstance() : serverQuitKillCell_;
        }
      }
      /**
       * <pre>
       ** 服务器返回退出消除游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuitKillCell serverQuitKillCell = 1903;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Triplekill.ServerQuitKillCell, com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerQuitKillCellOrBuilder> 
          getServerQuitKillCellFieldBuilder() {
        if (serverQuitKillCellBuilder_ == null) {
          serverQuitKillCellBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Triplekill.ServerQuitKillCell, com.kys.util.netty.proto.Triplekill.ServerQuitKillCell.Builder, com.kys.util.netty.proto.Triplekill.ServerQuitKillCellOrBuilder>(
                  getServerQuitKillCell(),
                  getParentForChildren(),
                  isClean());
          serverQuitKillCell_ = null;
        }
        return serverQuitKillCellBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_GameStart bGameStart_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_GameStart, com.kys.util.netty.proto.GameProto.B_GameStart.Builder, com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder> bGameStartBuilder_;
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public boolean hasBGameStart() {
        return bGameStartBuilder_ != null || bGameStart_ != null;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameStart getBGameStart() {
        if (bGameStartBuilder_ == null) {
          return bGameStart_ == null ? com.kys.util.netty.proto.GameProto.B_GameStart.getDefaultInstance() : bGameStart_;
        } else {
          return bGameStartBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public Builder setBGameStart(com.kys.util.netty.proto.GameProto.B_GameStart value) {
        if (bGameStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bGameStart_ = value;
          onChanged();
        } else {
          bGameStartBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public Builder setBGameStart(
          com.kys.util.netty.proto.GameProto.B_GameStart.Builder builderForValue) {
        if (bGameStartBuilder_ == null) {
          bGameStart_ = builderForValue.build();
          onChanged();
        } else {
          bGameStartBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public Builder mergeBGameStart(com.kys.util.netty.proto.GameProto.B_GameStart value) {
        if (bGameStartBuilder_ == null) {
          if (bGameStart_ != null) {
            bGameStart_ =
              com.kys.util.netty.proto.GameProto.B_GameStart.newBuilder(bGameStart_).mergeFrom(value).buildPartial();
          } else {
            bGameStart_ = value;
          }
          onChanged();
        } else {
          bGameStartBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public Builder clearBGameStart() {
        if (bGameStartBuilder_ == null) {
          bGameStart_ = null;
          onChanged();
        } else {
          bGameStart_ = null;
          bGameStartBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameStart.Builder getBGameStartBuilder() {
        
        onChanged();
        return getBGameStartFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder getBGameStartOrBuilder() {
        if (bGameStartBuilder_ != null) {
          return bGameStartBuilder_.getMessageOrBuilder();
        } else {
          return bGameStart_ == null ?
              com.kys.util.netty.proto.GameProto.B_GameStart.getDefaultInstance() : bGameStart_;
        }
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_GameStart, com.kys.util.netty.proto.GameProto.B_GameStart.Builder, com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder> 
          getBGameStartFieldBuilder() {
        if (bGameStartBuilder_ == null) {
          bGameStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_GameStart, com.kys.util.netty.proto.GameProto.B_GameStart.Builder, com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder>(
                  getBGameStart(),
                  getParentForChildren(),
                  isClean());
          bGameStart_ = null;
        }
        return bGameStartBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_DoCatch bDoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_DoCatch, com.kys.util.netty.proto.GameProto.B_DoCatch.Builder, com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder> bDoCatchBuilder_;
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public boolean hasBDoCatch() {
        return bDoCatchBuilder_ != null || bDoCatch_ != null;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_DoCatch getBDoCatch() {
        if (bDoCatchBuilder_ == null) {
          return bDoCatch_ == null ? com.kys.util.netty.proto.GameProto.B_DoCatch.getDefaultInstance() : bDoCatch_;
        } else {
          return bDoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public Builder setBDoCatch(com.kys.util.netty.proto.GameProto.B_DoCatch value) {
        if (bDoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDoCatch_ = value;
          onChanged();
        } else {
          bDoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public Builder setBDoCatch(
          com.kys.util.netty.proto.GameProto.B_DoCatch.Builder builderForValue) {
        if (bDoCatchBuilder_ == null) {
          bDoCatch_ = builderForValue.build();
          onChanged();
        } else {
          bDoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public Builder mergeBDoCatch(com.kys.util.netty.proto.GameProto.B_DoCatch value) {
        if (bDoCatchBuilder_ == null) {
          if (bDoCatch_ != null) {
            bDoCatch_ =
              com.kys.util.netty.proto.GameProto.B_DoCatch.newBuilder(bDoCatch_).mergeFrom(value).buildPartial();
          } else {
            bDoCatch_ = value;
          }
          onChanged();
        } else {
          bDoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public Builder clearBDoCatch() {
        if (bDoCatchBuilder_ == null) {
          bDoCatch_ = null;
          onChanged();
        } else {
          bDoCatch_ = null;
          bDoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_DoCatch.Builder getBDoCatchBuilder() {
        
        onChanged();
        return getBDoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder getBDoCatchOrBuilder() {
        if (bDoCatchBuilder_ != null) {
          return bDoCatchBuilder_.getMessageOrBuilder();
        } else {
          return bDoCatch_ == null ?
              com.kys.util.netty.proto.GameProto.B_DoCatch.getDefaultInstance() : bDoCatch_;
        }
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_DoCatch, com.kys.util.netty.proto.GameProto.B_DoCatch.Builder, com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder> 
          getBDoCatchFieldBuilder() {
        if (bDoCatchBuilder_ == null) {
          bDoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_DoCatch, com.kys.util.netty.proto.GameProto.B_DoCatch.Builder, com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder>(
                  getBDoCatch(),
                  getParentForChildren(),
                  isClean());
          bDoCatch_ = null;
        }
        return bDoCatchBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_CatchResult bCatchResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_CatchResult, com.kys.util.netty.proto.GameProto.B_CatchResult.Builder, com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder> bCatchResultBuilder_;
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public boolean hasBCatchResult() {
        return bCatchResultBuilder_ != null || bCatchResult_ != null;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_CatchResult getBCatchResult() {
        if (bCatchResultBuilder_ == null) {
          return bCatchResult_ == null ? com.kys.util.netty.proto.GameProto.B_CatchResult.getDefaultInstance() : bCatchResult_;
        } else {
          return bCatchResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public Builder setBCatchResult(com.kys.util.netty.proto.GameProto.B_CatchResult value) {
        if (bCatchResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bCatchResult_ = value;
          onChanged();
        } else {
          bCatchResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public Builder setBCatchResult(
          com.kys.util.netty.proto.GameProto.B_CatchResult.Builder builderForValue) {
        if (bCatchResultBuilder_ == null) {
          bCatchResult_ = builderForValue.build();
          onChanged();
        } else {
          bCatchResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public Builder mergeBCatchResult(com.kys.util.netty.proto.GameProto.B_CatchResult value) {
        if (bCatchResultBuilder_ == null) {
          if (bCatchResult_ != null) {
            bCatchResult_ =
              com.kys.util.netty.proto.GameProto.B_CatchResult.newBuilder(bCatchResult_).mergeFrom(value).buildPartial();
          } else {
            bCatchResult_ = value;
          }
          onChanged();
        } else {
          bCatchResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public Builder clearBCatchResult() {
        if (bCatchResultBuilder_ == null) {
          bCatchResult_ = null;
          onChanged();
        } else {
          bCatchResult_ = null;
          bCatchResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_CatchResult.Builder getBCatchResultBuilder() {
        
        onChanged();
        return getBCatchResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder getBCatchResultOrBuilder() {
        if (bCatchResultBuilder_ != null) {
          return bCatchResultBuilder_.getMessageOrBuilder();
        } else {
          return bCatchResult_ == null ?
              com.kys.util.netty.proto.GameProto.B_CatchResult.getDefaultInstance() : bCatchResult_;
        }
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_CatchResult, com.kys.util.netty.proto.GameProto.B_CatchResult.Builder, com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder> 
          getBCatchResultFieldBuilder() {
        if (bCatchResultBuilder_ == null) {
          bCatchResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_CatchResult, com.kys.util.netty.proto.GameProto.B_CatchResult.Builder, com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder>(
                  getBCatchResult(),
                  getParentForChildren(),
                  isClean());
          bCatchResult_ = null;
        }
        return bCatchResultBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_PlayCards bPlayCards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_PlayCards, com.kys.util.netty.proto.GameProto.B_PlayCards.Builder, com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder> bPlayCardsBuilder_;
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public boolean hasBPlayCards() {
        return bPlayCardsBuilder_ != null || bPlayCards_ != null;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_PlayCards getBPlayCards() {
        if (bPlayCardsBuilder_ == null) {
          return bPlayCards_ == null ? com.kys.util.netty.proto.GameProto.B_PlayCards.getDefaultInstance() : bPlayCards_;
        } else {
          return bPlayCardsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public Builder setBPlayCards(com.kys.util.netty.proto.GameProto.B_PlayCards value) {
        if (bPlayCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bPlayCards_ = value;
          onChanged();
        } else {
          bPlayCardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public Builder setBPlayCards(
          com.kys.util.netty.proto.GameProto.B_PlayCards.Builder builderForValue) {
        if (bPlayCardsBuilder_ == null) {
          bPlayCards_ = builderForValue.build();
          onChanged();
        } else {
          bPlayCardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public Builder mergeBPlayCards(com.kys.util.netty.proto.GameProto.B_PlayCards value) {
        if (bPlayCardsBuilder_ == null) {
          if (bPlayCards_ != null) {
            bPlayCards_ =
              com.kys.util.netty.proto.GameProto.B_PlayCards.newBuilder(bPlayCards_).mergeFrom(value).buildPartial();
          } else {
            bPlayCards_ = value;
          }
          onChanged();
        } else {
          bPlayCardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public Builder clearBPlayCards() {
        if (bPlayCardsBuilder_ == null) {
          bPlayCards_ = null;
          onChanged();
        } else {
          bPlayCards_ = null;
          bPlayCardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_PlayCards.Builder getBPlayCardsBuilder() {
        
        onChanged();
        return getBPlayCardsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder getBPlayCardsOrBuilder() {
        if (bPlayCardsBuilder_ != null) {
          return bPlayCardsBuilder_.getMessageOrBuilder();
        } else {
          return bPlayCards_ == null ?
              com.kys.util.netty.proto.GameProto.B_PlayCards.getDefaultInstance() : bPlayCards_;
        }
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_PlayCards, com.kys.util.netty.proto.GameProto.B_PlayCards.Builder, com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder> 
          getBPlayCardsFieldBuilder() {
        if (bPlayCardsBuilder_ == null) {
          bPlayCardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_PlayCards, com.kys.util.netty.proto.GameProto.B_PlayCards.Builder, com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder>(
                  getBPlayCards(),
                  getParentForChildren(),
                  isClean());
          bPlayCards_ = null;
        }
        return bPlayCardsBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_SendDiZhuCard bSendDiZhuCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_SendDiZhuCard, com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder, com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder> bSendDiZhuCardBuilder_;
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public boolean hasBSendDiZhuCard() {
        return bSendDiZhuCardBuilder_ != null || bSendDiZhuCard_ != null;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_SendDiZhuCard getBSendDiZhuCard() {
        if (bSendDiZhuCardBuilder_ == null) {
          return bSendDiZhuCard_ == null ? com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.getDefaultInstance() : bSendDiZhuCard_;
        } else {
          return bSendDiZhuCardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public Builder setBSendDiZhuCard(com.kys.util.netty.proto.GameProto.B_SendDiZhuCard value) {
        if (bSendDiZhuCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bSendDiZhuCard_ = value;
          onChanged();
        } else {
          bSendDiZhuCardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public Builder setBSendDiZhuCard(
          com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder builderForValue) {
        if (bSendDiZhuCardBuilder_ == null) {
          bSendDiZhuCard_ = builderForValue.build();
          onChanged();
        } else {
          bSendDiZhuCardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public Builder mergeBSendDiZhuCard(com.kys.util.netty.proto.GameProto.B_SendDiZhuCard value) {
        if (bSendDiZhuCardBuilder_ == null) {
          if (bSendDiZhuCard_ != null) {
            bSendDiZhuCard_ =
              com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.newBuilder(bSendDiZhuCard_).mergeFrom(value).buildPartial();
          } else {
            bSendDiZhuCard_ = value;
          }
          onChanged();
        } else {
          bSendDiZhuCardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public Builder clearBSendDiZhuCard() {
        if (bSendDiZhuCardBuilder_ == null) {
          bSendDiZhuCard_ = null;
          onChanged();
        } else {
          bSendDiZhuCard_ = null;
          bSendDiZhuCardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder getBSendDiZhuCardBuilder() {
        
        onChanged();
        return getBSendDiZhuCardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder getBSendDiZhuCardOrBuilder() {
        if (bSendDiZhuCardBuilder_ != null) {
          return bSendDiZhuCardBuilder_.getMessageOrBuilder();
        } else {
          return bSendDiZhuCard_ == null ?
              com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.getDefaultInstance() : bSendDiZhuCard_;
        }
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_SendDiZhuCard, com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder, com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder> 
          getBSendDiZhuCardFieldBuilder() {
        if (bSendDiZhuCardBuilder_ == null) {
          bSendDiZhuCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_SendDiZhuCard, com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder, com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder>(
                  getBSendDiZhuCard(),
                  getParentForChildren(),
                  isClean());
          bSendDiZhuCard_ = null;
        }
        return bSendDiZhuCardBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_NextPlayer bNextPlayer_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_NextPlayer, com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder, com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder> bNextPlayerBuilder_;
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public boolean hasBNextPlayer() {
        return bNextPlayerBuilder_ != null || bNextPlayer_ != null;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_NextPlayer getBNextPlayer() {
        if (bNextPlayerBuilder_ == null) {
          return bNextPlayer_ == null ? com.kys.util.netty.proto.GameProto.B_NextPlayer.getDefaultInstance() : bNextPlayer_;
        } else {
          return bNextPlayerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public Builder setBNextPlayer(com.kys.util.netty.proto.GameProto.B_NextPlayer value) {
        if (bNextPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bNextPlayer_ = value;
          onChanged();
        } else {
          bNextPlayerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public Builder setBNextPlayer(
          com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder builderForValue) {
        if (bNextPlayerBuilder_ == null) {
          bNextPlayer_ = builderForValue.build();
          onChanged();
        } else {
          bNextPlayerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public Builder mergeBNextPlayer(com.kys.util.netty.proto.GameProto.B_NextPlayer value) {
        if (bNextPlayerBuilder_ == null) {
          if (bNextPlayer_ != null) {
            bNextPlayer_ =
              com.kys.util.netty.proto.GameProto.B_NextPlayer.newBuilder(bNextPlayer_).mergeFrom(value).buildPartial();
          } else {
            bNextPlayer_ = value;
          }
          onChanged();
        } else {
          bNextPlayerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public Builder clearBNextPlayer() {
        if (bNextPlayerBuilder_ == null) {
          bNextPlayer_ = null;
          onChanged();
        } else {
          bNextPlayer_ = null;
          bNextPlayerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder getBNextPlayerBuilder() {
        
        onChanged();
        return getBNextPlayerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder getBNextPlayerOrBuilder() {
        if (bNextPlayerBuilder_ != null) {
          return bNextPlayerBuilder_.getMessageOrBuilder();
        } else {
          return bNextPlayer_ == null ?
              com.kys.util.netty.proto.GameProto.B_NextPlayer.getDefaultInstance() : bNextPlayer_;
        }
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_NextPlayer, com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder, com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder> 
          getBNextPlayerFieldBuilder() {
        if (bNextPlayerBuilder_ == null) {
          bNextPlayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_NextPlayer, com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder, com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder>(
                  getBNextPlayer(),
                  getParentForChildren(),
                  isClean());
          bNextPlayer_ = null;
        }
        return bNextPlayerBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_GameSettle bGameSettle_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_GameSettle, com.kys.util.netty.proto.GameProto.B_GameSettle.Builder, com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder> bGameSettleBuilder_;
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public boolean hasBGameSettle() {
        return bGameSettleBuilder_ != null || bGameSettle_ != null;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameSettle getBGameSettle() {
        if (bGameSettleBuilder_ == null) {
          return bGameSettle_ == null ? com.kys.util.netty.proto.GameProto.B_GameSettle.getDefaultInstance() : bGameSettle_;
        } else {
          return bGameSettleBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public Builder setBGameSettle(com.kys.util.netty.proto.GameProto.B_GameSettle value) {
        if (bGameSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bGameSettle_ = value;
          onChanged();
        } else {
          bGameSettleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public Builder setBGameSettle(
          com.kys.util.netty.proto.GameProto.B_GameSettle.Builder builderForValue) {
        if (bGameSettleBuilder_ == null) {
          bGameSettle_ = builderForValue.build();
          onChanged();
        } else {
          bGameSettleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public Builder mergeBGameSettle(com.kys.util.netty.proto.GameProto.B_GameSettle value) {
        if (bGameSettleBuilder_ == null) {
          if (bGameSettle_ != null) {
            bGameSettle_ =
              com.kys.util.netty.proto.GameProto.B_GameSettle.newBuilder(bGameSettle_).mergeFrom(value).buildPartial();
          } else {
            bGameSettle_ = value;
          }
          onChanged();
        } else {
          bGameSettleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public Builder clearBGameSettle() {
        if (bGameSettleBuilder_ == null) {
          bGameSettle_ = null;
          onChanged();
        } else {
          bGameSettle_ = null;
          bGameSettleBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameSettle.Builder getBGameSettleBuilder() {
        
        onChanged();
        return getBGameSettleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder getBGameSettleOrBuilder() {
        if (bGameSettleBuilder_ != null) {
          return bGameSettleBuilder_.getMessageOrBuilder();
        } else {
          return bGameSettle_ == null ?
              com.kys.util.netty.proto.GameProto.B_GameSettle.getDefaultInstance() : bGameSettle_;
        }
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_GameSettle, com.kys.util.netty.proto.GameProto.B_GameSettle.Builder, com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder> 
          getBGameSettleFieldBuilder() {
        if (bGameSettleBuilder_ == null) {
          bGameSettleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_GameSettle, com.kys.util.netty.proto.GameProto.B_GameSettle.Builder, com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder>(
                  getBGameSettle(),
                  getParentForChildren(),
                  isClean());
          bGameSettle_ = null;
        }
        return bGameSettleBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.B_RewardMessage bRewardMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_RewardMessage, com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder, com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder> bRewardMessageBuilder_;
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public boolean hasBRewardMessage() {
        return bRewardMessageBuilder_ != null || bRewardMessage_ != null;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RewardMessage getBRewardMessage() {
        if (bRewardMessageBuilder_ == null) {
          return bRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.B_RewardMessage.getDefaultInstance() : bRewardMessage_;
        } else {
          return bRewardMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public Builder setBRewardMessage(com.kys.util.netty.proto.HallProto.B_RewardMessage value) {
        if (bRewardMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bRewardMessage_ = value;
          onChanged();
        } else {
          bRewardMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public Builder setBRewardMessage(
          com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder builderForValue) {
        if (bRewardMessageBuilder_ == null) {
          bRewardMessage_ = builderForValue.build();
          onChanged();
        } else {
          bRewardMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public Builder mergeBRewardMessage(com.kys.util.netty.proto.HallProto.B_RewardMessage value) {
        if (bRewardMessageBuilder_ == null) {
          if (bRewardMessage_ != null) {
            bRewardMessage_ =
              com.kys.util.netty.proto.HallProto.B_RewardMessage.newBuilder(bRewardMessage_).mergeFrom(value).buildPartial();
          } else {
            bRewardMessage_ = value;
          }
          onChanged();
        } else {
          bRewardMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public Builder clearBRewardMessage() {
        if (bRewardMessageBuilder_ == null) {
          bRewardMessage_ = null;
          onChanged();
        } else {
          bRewardMessage_ = null;
          bRewardMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder getBRewardMessageBuilder() {
        
        onChanged();
        return getBRewardMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder getBRewardMessageOrBuilder() {
        if (bRewardMessageBuilder_ != null) {
          return bRewardMessageBuilder_.getMessageOrBuilder();
        } else {
          return bRewardMessage_ == null ?
              com.kys.util.netty.proto.HallProto.B_RewardMessage.getDefaultInstance() : bRewardMessage_;
        }
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_RewardMessage, com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder, com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder> 
          getBRewardMessageFieldBuilder() {
        if (bRewardMessageBuilder_ == null) {
          bRewardMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.B_RewardMessage, com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder, com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder>(
                  getBRewardMessage(),
                  getParentForChildren(),
                  isClean());
          bRewardMessage_ = null;
        }
        return bRewardMessageBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_AutoPlay bAutoPlay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_AutoPlay, com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder, com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder> bAutoPlayBuilder_;
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public boolean hasBAutoPlay() {
        return bAutoPlayBuilder_ != null || bAutoPlay_ != null;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_AutoPlay getBAutoPlay() {
        if (bAutoPlayBuilder_ == null) {
          return bAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.B_AutoPlay.getDefaultInstance() : bAutoPlay_;
        } else {
          return bAutoPlayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public Builder setBAutoPlay(com.kys.util.netty.proto.GameProto.B_AutoPlay value) {
        if (bAutoPlayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bAutoPlay_ = value;
          onChanged();
        } else {
          bAutoPlayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public Builder setBAutoPlay(
          com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder builderForValue) {
        if (bAutoPlayBuilder_ == null) {
          bAutoPlay_ = builderForValue.build();
          onChanged();
        } else {
          bAutoPlayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public Builder mergeBAutoPlay(com.kys.util.netty.proto.GameProto.B_AutoPlay value) {
        if (bAutoPlayBuilder_ == null) {
          if (bAutoPlay_ != null) {
            bAutoPlay_ =
              com.kys.util.netty.proto.GameProto.B_AutoPlay.newBuilder(bAutoPlay_).mergeFrom(value).buildPartial();
          } else {
            bAutoPlay_ = value;
          }
          onChanged();
        } else {
          bAutoPlayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public Builder clearBAutoPlay() {
        if (bAutoPlayBuilder_ == null) {
          bAutoPlay_ = null;
          onChanged();
        } else {
          bAutoPlay_ = null;
          bAutoPlayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder getBAutoPlayBuilder() {
        
        onChanged();
        return getBAutoPlayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder getBAutoPlayOrBuilder() {
        if (bAutoPlayBuilder_ != null) {
          return bAutoPlayBuilder_.getMessageOrBuilder();
        } else {
          return bAutoPlay_ == null ?
              com.kys.util.netty.proto.GameProto.B_AutoPlay.getDefaultInstance() : bAutoPlay_;
        }
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_AutoPlay, com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder, com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder> 
          getBAutoPlayFieldBuilder() {
        if (bAutoPlayBuilder_ == null) {
          bAutoPlayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_AutoPlay, com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder, com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder>(
                  getBAutoPlay(),
                  getParentForChildren(),
                  isClean());
          bAutoPlay_ = null;
        }
        return bAutoPlayBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_RoomIdUrl bRoomIdUrl_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_RoomIdUrl, com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder, com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder> bRoomIdUrlBuilder_;
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public boolean hasBRoomIdUrl() {
        return bRoomIdUrlBuilder_ != null || bRoomIdUrl_ != null;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_RoomIdUrl getBRoomIdUrl() {
        if (bRoomIdUrlBuilder_ == null) {
          return bRoomIdUrl_ == null ? com.kys.util.netty.proto.GameProto.B_RoomIdUrl.getDefaultInstance() : bRoomIdUrl_;
        } else {
          return bRoomIdUrlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public Builder setBRoomIdUrl(com.kys.util.netty.proto.GameProto.B_RoomIdUrl value) {
        if (bRoomIdUrlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bRoomIdUrl_ = value;
          onChanged();
        } else {
          bRoomIdUrlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public Builder setBRoomIdUrl(
          com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder builderForValue) {
        if (bRoomIdUrlBuilder_ == null) {
          bRoomIdUrl_ = builderForValue.build();
          onChanged();
        } else {
          bRoomIdUrlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public Builder mergeBRoomIdUrl(com.kys.util.netty.proto.GameProto.B_RoomIdUrl value) {
        if (bRoomIdUrlBuilder_ == null) {
          if (bRoomIdUrl_ != null) {
            bRoomIdUrl_ =
              com.kys.util.netty.proto.GameProto.B_RoomIdUrl.newBuilder(bRoomIdUrl_).mergeFrom(value).buildPartial();
          } else {
            bRoomIdUrl_ = value;
          }
          onChanged();
        } else {
          bRoomIdUrlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public Builder clearBRoomIdUrl() {
        if (bRoomIdUrlBuilder_ == null) {
          bRoomIdUrl_ = null;
          onChanged();
        } else {
          bRoomIdUrl_ = null;
          bRoomIdUrlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder getBRoomIdUrlBuilder() {
        
        onChanged();
        return getBRoomIdUrlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder getBRoomIdUrlOrBuilder() {
        if (bRoomIdUrlBuilder_ != null) {
          return bRoomIdUrlBuilder_.getMessageOrBuilder();
        } else {
          return bRoomIdUrl_ == null ?
              com.kys.util.netty.proto.GameProto.B_RoomIdUrl.getDefaultInstance() : bRoomIdUrl_;
        }
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_RoomIdUrl, com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder, com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder> 
          getBRoomIdUrlFieldBuilder() {
        if (bRoomIdUrlBuilder_ == null) {
          bRoomIdUrlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_RoomIdUrl, com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder, com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder>(
                  getBRoomIdUrl(),
                  getParentForChildren(),
                  isClean());
          bRoomIdUrl_ = null;
        }
        return bRoomIdUrlBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.B_AwardDialog bAwardDialog_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_AwardDialog, com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder, com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder> bAwardDialogBuilder_;
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public boolean hasBAwardDialog() {
        return bAwardDialogBuilder_ != null || bAwardDialog_ != null;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_AwardDialog getBAwardDialog() {
        if (bAwardDialogBuilder_ == null) {
          return bAwardDialog_ == null ? com.kys.util.netty.proto.HallProto.B_AwardDialog.getDefaultInstance() : bAwardDialog_;
        } else {
          return bAwardDialogBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public Builder setBAwardDialog(com.kys.util.netty.proto.HallProto.B_AwardDialog value) {
        if (bAwardDialogBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bAwardDialog_ = value;
          onChanged();
        } else {
          bAwardDialogBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public Builder setBAwardDialog(
          com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder builderForValue) {
        if (bAwardDialogBuilder_ == null) {
          bAwardDialog_ = builderForValue.build();
          onChanged();
        } else {
          bAwardDialogBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public Builder mergeBAwardDialog(com.kys.util.netty.proto.HallProto.B_AwardDialog value) {
        if (bAwardDialogBuilder_ == null) {
          if (bAwardDialog_ != null) {
            bAwardDialog_ =
              com.kys.util.netty.proto.HallProto.B_AwardDialog.newBuilder(bAwardDialog_).mergeFrom(value).buildPartial();
          } else {
            bAwardDialog_ = value;
          }
          onChanged();
        } else {
          bAwardDialogBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public Builder clearBAwardDialog() {
        if (bAwardDialogBuilder_ == null) {
          bAwardDialog_ = null;
          onChanged();
        } else {
          bAwardDialog_ = null;
          bAwardDialogBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder getBAwardDialogBuilder() {
        
        onChanged();
        return getBAwardDialogFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder getBAwardDialogOrBuilder() {
        if (bAwardDialogBuilder_ != null) {
          return bAwardDialogBuilder_.getMessageOrBuilder();
        } else {
          return bAwardDialog_ == null ?
              com.kys.util.netty.proto.HallProto.B_AwardDialog.getDefaultInstance() : bAwardDialog_;
        }
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_AwardDialog, com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder, com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder> 
          getBAwardDialogFieldBuilder() {
        if (bAwardDialogBuilder_ == null) {
          bAwardDialogBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.B_AwardDialog, com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder, com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder>(
                  getBAwardDialog(),
                  getParentForChildren(),
                  isClean());
          bAwardDialog_ = null;
        }
        return bAwardDialogBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.B_BuySuccess bBuySuccess_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.B_BuySuccess, com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder, com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder> bBuySuccessBuilder_;
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public boolean hasBBuySuccess() {
        return bBuySuccessBuilder_ != null || bBuySuccess_ != null;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public com.kys.util.netty.proto.StoreProto.B_BuySuccess getBBuySuccess() {
        if (bBuySuccessBuilder_ == null) {
          return bBuySuccess_ == null ? com.kys.util.netty.proto.StoreProto.B_BuySuccess.getDefaultInstance() : bBuySuccess_;
        } else {
          return bBuySuccessBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public Builder setBBuySuccess(com.kys.util.netty.proto.StoreProto.B_BuySuccess value) {
        if (bBuySuccessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bBuySuccess_ = value;
          onChanged();
        } else {
          bBuySuccessBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public Builder setBBuySuccess(
          com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder builderForValue) {
        if (bBuySuccessBuilder_ == null) {
          bBuySuccess_ = builderForValue.build();
          onChanged();
        } else {
          bBuySuccessBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public Builder mergeBBuySuccess(com.kys.util.netty.proto.StoreProto.B_BuySuccess value) {
        if (bBuySuccessBuilder_ == null) {
          if (bBuySuccess_ != null) {
            bBuySuccess_ =
              com.kys.util.netty.proto.StoreProto.B_BuySuccess.newBuilder(bBuySuccess_).mergeFrom(value).buildPartial();
          } else {
            bBuySuccess_ = value;
          }
          onChanged();
        } else {
          bBuySuccessBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public Builder clearBBuySuccess() {
        if (bBuySuccessBuilder_ == null) {
          bBuySuccess_ = null;
          onChanged();
        } else {
          bBuySuccess_ = null;
          bBuySuccessBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder getBBuySuccessBuilder() {
        
        onChanged();
        return getBBuySuccessFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder getBBuySuccessOrBuilder() {
        if (bBuySuccessBuilder_ != null) {
          return bBuySuccessBuilder_.getMessageOrBuilder();
        } else {
          return bBuySuccess_ == null ?
              com.kys.util.netty.proto.StoreProto.B_BuySuccess.getDefaultInstance() : bBuySuccess_;
        }
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.B_BuySuccess, com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder, com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder> 
          getBBuySuccessFieldBuilder() {
        if (bBuySuccessBuilder_ == null) {
          bBuySuccessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.B_BuySuccess, com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder, com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder>(
                  getBBuySuccess(),
                  getParentForChildren(),
                  isClean());
          bBuySuccess_ = null;
        }
        return bBuySuccessBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.B_RedDotPush bRedDotPush_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_RedDotPush, com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder, com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder> bRedDotPushBuilder_;
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public boolean hasBRedDotPush() {
        return bRedDotPushBuilder_ != null || bRedDotPush_ != null;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RedDotPush getBRedDotPush() {
        if (bRedDotPushBuilder_ == null) {
          return bRedDotPush_ == null ? com.kys.util.netty.proto.HallProto.B_RedDotPush.getDefaultInstance() : bRedDotPush_;
        } else {
          return bRedDotPushBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public Builder setBRedDotPush(com.kys.util.netty.proto.HallProto.B_RedDotPush value) {
        if (bRedDotPushBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bRedDotPush_ = value;
          onChanged();
        } else {
          bRedDotPushBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public Builder setBRedDotPush(
          com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder builderForValue) {
        if (bRedDotPushBuilder_ == null) {
          bRedDotPush_ = builderForValue.build();
          onChanged();
        } else {
          bRedDotPushBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public Builder mergeBRedDotPush(com.kys.util.netty.proto.HallProto.B_RedDotPush value) {
        if (bRedDotPushBuilder_ == null) {
          if (bRedDotPush_ != null) {
            bRedDotPush_ =
              com.kys.util.netty.proto.HallProto.B_RedDotPush.newBuilder(bRedDotPush_).mergeFrom(value).buildPartial();
          } else {
            bRedDotPush_ = value;
          }
          onChanged();
        } else {
          bRedDotPushBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public Builder clearBRedDotPush() {
        if (bRedDotPushBuilder_ == null) {
          bRedDotPush_ = null;
          onChanged();
        } else {
          bRedDotPush_ = null;
          bRedDotPushBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder getBRedDotPushBuilder() {
        
        onChanged();
        return getBRedDotPushFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder getBRedDotPushOrBuilder() {
        if (bRedDotPushBuilder_ != null) {
          return bRedDotPushBuilder_.getMessageOrBuilder();
        } else {
          return bRedDotPush_ == null ?
              com.kys.util.netty.proto.HallProto.B_RedDotPush.getDefaultInstance() : bRedDotPush_;
        }
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_RedDotPush, com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder, com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder> 
          getBRedDotPushFieldBuilder() {
        if (bRedDotPushBuilder_ == null) {
          bRedDotPushBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.B_RedDotPush, com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder, com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder>(
                  getBRedDotPush(),
                  getParentForChildren(),
                  isClean());
          bRedDotPush_ = null;
        }
        return bRedDotPushBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.B_ForceAnnounce bForceAnnounce_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_ForceAnnounce, com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder, com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder> bForceAnnounceBuilder_;
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public boolean hasBForceAnnounce() {
        return bForceAnnounceBuilder_ != null || bForceAnnounce_ != null;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_ForceAnnounce getBForceAnnounce() {
        if (bForceAnnounceBuilder_ == null) {
          return bForceAnnounce_ == null ? com.kys.util.netty.proto.HallProto.B_ForceAnnounce.getDefaultInstance() : bForceAnnounce_;
        } else {
          return bForceAnnounceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public Builder setBForceAnnounce(com.kys.util.netty.proto.HallProto.B_ForceAnnounce value) {
        if (bForceAnnounceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bForceAnnounce_ = value;
          onChanged();
        } else {
          bForceAnnounceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public Builder setBForceAnnounce(
          com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder builderForValue) {
        if (bForceAnnounceBuilder_ == null) {
          bForceAnnounce_ = builderForValue.build();
          onChanged();
        } else {
          bForceAnnounceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public Builder mergeBForceAnnounce(com.kys.util.netty.proto.HallProto.B_ForceAnnounce value) {
        if (bForceAnnounceBuilder_ == null) {
          if (bForceAnnounce_ != null) {
            bForceAnnounce_ =
              com.kys.util.netty.proto.HallProto.B_ForceAnnounce.newBuilder(bForceAnnounce_).mergeFrom(value).buildPartial();
          } else {
            bForceAnnounce_ = value;
          }
          onChanged();
        } else {
          bForceAnnounceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public Builder clearBForceAnnounce() {
        if (bForceAnnounceBuilder_ == null) {
          bForceAnnounce_ = null;
          onChanged();
        } else {
          bForceAnnounce_ = null;
          bForceAnnounceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder getBForceAnnounceBuilder() {
        
        onChanged();
        return getBForceAnnounceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder getBForceAnnounceOrBuilder() {
        if (bForceAnnounceBuilder_ != null) {
          return bForceAnnounceBuilder_.getMessageOrBuilder();
        } else {
          return bForceAnnounce_ == null ?
              com.kys.util.netty.proto.HallProto.B_ForceAnnounce.getDefaultInstance() : bForceAnnounce_;
        }
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_ForceAnnounce, com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder, com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder> 
          getBForceAnnounceFieldBuilder() {
        if (bForceAnnounceBuilder_ == null) {
          bForceAnnounceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.B_ForceAnnounce, com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder, com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder>(
                  getBForceAnnounce(),
                  getParentForChildren(),
                  isClean());
          bForceAnnounce_ = null;
        }
        return bForceAnnounceBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.B_DGameMessage bDGameMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DGameMessage, com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder, com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder> bDGameMessageBuilder_;
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public boolean hasBDGameMessage() {
        return bDGameMessageBuilder_ != null || bDGameMessage_ != null;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGameMessage getBDGameMessage() {
        if (bDGameMessageBuilder_ == null) {
          return bDGameMessage_ == null ? com.kys.util.netty.proto.SnatchProto.B_DGameMessage.getDefaultInstance() : bDGameMessage_;
        } else {
          return bDGameMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public Builder setBDGameMessage(com.kys.util.netty.proto.SnatchProto.B_DGameMessage value) {
        if (bDGameMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDGameMessage_ = value;
          onChanged();
        } else {
          bDGameMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public Builder setBDGameMessage(
          com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder builderForValue) {
        if (bDGameMessageBuilder_ == null) {
          bDGameMessage_ = builderForValue.build();
          onChanged();
        } else {
          bDGameMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public Builder mergeBDGameMessage(com.kys.util.netty.proto.SnatchProto.B_DGameMessage value) {
        if (bDGameMessageBuilder_ == null) {
          if (bDGameMessage_ != null) {
            bDGameMessage_ =
              com.kys.util.netty.proto.SnatchProto.B_DGameMessage.newBuilder(bDGameMessage_).mergeFrom(value).buildPartial();
          } else {
            bDGameMessage_ = value;
          }
          onChanged();
        } else {
          bDGameMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public Builder clearBDGameMessage() {
        if (bDGameMessageBuilder_ == null) {
          bDGameMessage_ = null;
          onChanged();
        } else {
          bDGameMessage_ = null;
          bDGameMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder getBDGameMessageBuilder() {
        
        onChanged();
        return getBDGameMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder getBDGameMessageOrBuilder() {
        if (bDGameMessageBuilder_ != null) {
          return bDGameMessageBuilder_.getMessageOrBuilder();
        } else {
          return bDGameMessage_ == null ?
              com.kys.util.netty.proto.SnatchProto.B_DGameMessage.getDefaultInstance() : bDGameMessage_;
        }
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DGameMessage, com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder, com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder> 
          getBDGameMessageFieldBuilder() {
        if (bDGameMessageBuilder_ == null) {
          bDGameMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.B_DGameMessage, com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder, com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder>(
                  getBDGameMessage(),
                  getParentForChildren(),
                  isClean());
          bDGameMessage_ = null;
        }
        return bDGameMessageBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.B_DGOver bDGOver_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DGOver, com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder> bDGOverBuilder_;
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public boolean hasBDGOver() {
        return bDGOverBuilder_ != null || bDGOver_ != null;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGOver getBDGOver() {
        if (bDGOverBuilder_ == null) {
          return bDGOver_ == null ? com.kys.util.netty.proto.SnatchProto.B_DGOver.getDefaultInstance() : bDGOver_;
        } else {
          return bDGOverBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public Builder setBDGOver(com.kys.util.netty.proto.SnatchProto.B_DGOver value) {
        if (bDGOverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDGOver_ = value;
          onChanged();
        } else {
          bDGOverBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public Builder setBDGOver(
          com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder builderForValue) {
        if (bDGOverBuilder_ == null) {
          bDGOver_ = builderForValue.build();
          onChanged();
        } else {
          bDGOverBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public Builder mergeBDGOver(com.kys.util.netty.proto.SnatchProto.B_DGOver value) {
        if (bDGOverBuilder_ == null) {
          if (bDGOver_ != null) {
            bDGOver_ =
              com.kys.util.netty.proto.SnatchProto.B_DGOver.newBuilder(bDGOver_).mergeFrom(value).buildPartial();
          } else {
            bDGOver_ = value;
          }
          onChanged();
        } else {
          bDGOverBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public Builder clearBDGOver() {
        if (bDGOverBuilder_ == null) {
          bDGOver_ = null;
          onChanged();
        } else {
          bDGOver_ = null;
          bDGOverBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder getBDGOverBuilder() {
        
        onChanged();
        return getBDGOverFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder getBDGOverOrBuilder() {
        if (bDGOverBuilder_ != null) {
          return bDGOverBuilder_.getMessageOrBuilder();
        } else {
          return bDGOver_ == null ?
              com.kys.util.netty.proto.SnatchProto.B_DGOver.getDefaultInstance() : bDGOver_;
        }
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DGOver, com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder> 
          getBDGOverFieldBuilder() {
        if (bDGOverBuilder_ == null) {
          bDGOverBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.B_DGOver, com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder>(
                  getBDGOver(),
                  getParentForChildren(),
                  isClean());
          bDGOver_ = null;
        }
        return bDGOverBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.B_DDOver bDDOver_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DDOver, com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder> bDDOverBuilder_;
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public boolean hasBDDOver() {
        return bDDOverBuilder_ != null || bDDOver_ != null;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDOver getBDDOver() {
        if (bDDOverBuilder_ == null) {
          return bDDOver_ == null ? com.kys.util.netty.proto.SnatchProto.B_DDOver.getDefaultInstance() : bDDOver_;
        } else {
          return bDDOverBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public Builder setBDDOver(com.kys.util.netty.proto.SnatchProto.B_DDOver value) {
        if (bDDOverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDDOver_ = value;
          onChanged();
        } else {
          bDDOverBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public Builder setBDDOver(
          com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder builderForValue) {
        if (bDDOverBuilder_ == null) {
          bDDOver_ = builderForValue.build();
          onChanged();
        } else {
          bDDOverBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public Builder mergeBDDOver(com.kys.util.netty.proto.SnatchProto.B_DDOver value) {
        if (bDDOverBuilder_ == null) {
          if (bDDOver_ != null) {
            bDDOver_ =
              com.kys.util.netty.proto.SnatchProto.B_DDOver.newBuilder(bDDOver_).mergeFrom(value).buildPartial();
          } else {
            bDDOver_ = value;
          }
          onChanged();
        } else {
          bDDOverBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public Builder clearBDDOver() {
        if (bDDOverBuilder_ == null) {
          bDDOver_ = null;
          onChanged();
        } else {
          bDDOver_ = null;
          bDDOverBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder getBDDOverBuilder() {
        
        onChanged();
        return getBDDOverFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder getBDDOverOrBuilder() {
        if (bDDOverBuilder_ != null) {
          return bDDOverBuilder_.getMessageOrBuilder();
        } else {
          return bDDOver_ == null ?
              com.kys.util.netty.proto.SnatchProto.B_DDOver.getDefaultInstance() : bDDOver_;
        }
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DDOver, com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder> 
          getBDDOverFieldBuilder() {
        if (bDDOverBuilder_ == null) {
          bDDOverBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.B_DDOver, com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder>(
                  getBDDOver(),
                  getParentForChildren(),
                  isClean());
          bDDOver_ = null;
        }
        return bDDOverBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.B_DDInfo bDDInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DDInfo, com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder, com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder> bDDInfoBuilder_;
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public boolean hasBDDInfo() {
        return bDDInfoBuilder_ != null || bDDInfo_ != null;
      }
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDInfo getBDDInfo() {
        if (bDDInfoBuilder_ == null) {
          return bDDInfo_ == null ? com.kys.util.netty.proto.SnatchProto.B_DDInfo.getDefaultInstance() : bDDInfo_;
        } else {
          return bDDInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public Builder setBDDInfo(com.kys.util.netty.proto.SnatchProto.B_DDInfo value) {
        if (bDDInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDDInfo_ = value;
          onChanged();
        } else {
          bDDInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public Builder setBDDInfo(
          com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder builderForValue) {
        if (bDDInfoBuilder_ == null) {
          bDDInfo_ = builderForValue.build();
          onChanged();
        } else {
          bDDInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public Builder mergeBDDInfo(com.kys.util.netty.proto.SnatchProto.B_DDInfo value) {
        if (bDDInfoBuilder_ == null) {
          if (bDDInfo_ != null) {
            bDDInfo_ =
              com.kys.util.netty.proto.SnatchProto.B_DDInfo.newBuilder(bDDInfo_).mergeFrom(value).buildPartial();
          } else {
            bDDInfo_ = value;
          }
          onChanged();
        } else {
          bDDInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public Builder clearBDDInfo() {
        if (bDDInfoBuilder_ == null) {
          bDDInfo_ = null;
          onChanged();
        } else {
          bDDInfo_ = null;
          bDDInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder getBDDInfoBuilder() {
        
        onChanged();
        return getBDDInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder getBDDInfoOrBuilder() {
        if (bDDInfoBuilder_ != null) {
          return bDDInfoBuilder_.getMessageOrBuilder();
        } else {
          return bDDInfo_ == null ?
              com.kys.util.netty.proto.SnatchProto.B_DDInfo.getDefaultInstance() : bDDInfo_;
        }
      }
      /**
       * <pre>
       ** 广播钻石抽奖[跑马灯] 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DDInfo, com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder, com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder> 
          getBDDInfoFieldBuilder() {
        if (bDDInfoBuilder_ == null) {
          bDDInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.B_DDInfo, com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder, com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder>(
                  getBDDInfo(),
                  getParentForChildren(),
                  isClean());
          bDDInfo_ = null;
        }
        return bDDInfoBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.B_SSInfo bSSInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.B_SSInfo, com.kys.util.netty.proto.LittleProto.B_SSInfo.Builder, com.kys.util.netty.proto.LittleProto.B_SSInfoOrBuilder> bSSInfoBuilder_;
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      public boolean hasBSSInfo() {
        return bSSInfoBuilder_ != null || bSSInfo_ != null;
      }
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_SSInfo getBSSInfo() {
        if (bSSInfoBuilder_ == null) {
          return bSSInfo_ == null ? com.kys.util.netty.proto.LittleProto.B_SSInfo.getDefaultInstance() : bSSInfo_;
        } else {
          return bSSInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      public Builder setBSSInfo(com.kys.util.netty.proto.LittleProto.B_SSInfo value) {
        if (bSSInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bSSInfo_ = value;
          onChanged();
        } else {
          bSSInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      public Builder setBSSInfo(
          com.kys.util.netty.proto.LittleProto.B_SSInfo.Builder builderForValue) {
        if (bSSInfoBuilder_ == null) {
          bSSInfo_ = builderForValue.build();
          onChanged();
        } else {
          bSSInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      public Builder mergeBSSInfo(com.kys.util.netty.proto.LittleProto.B_SSInfo value) {
        if (bSSInfoBuilder_ == null) {
          if (bSSInfo_ != null) {
            bSSInfo_ =
              com.kys.util.netty.proto.LittleProto.B_SSInfo.newBuilder(bSSInfo_).mergeFrom(value).buildPartial();
          } else {
            bSSInfo_ = value;
          }
          onChanged();
        } else {
          bSSInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      public Builder clearBSSInfo() {
        if (bSSInfoBuilder_ == null) {
          bSSInfo_ = null;
          onChanged();
        } else {
          bSSInfo_ = null;
          bSSInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_SSInfo.Builder getBSSInfoBuilder() {
        
        onChanged();
        return getBSSInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_SSInfoOrBuilder getBSSInfoOrBuilder() {
        if (bSSInfoBuilder_ != null) {
          return bSSInfoBuilder_.getMessageOrBuilder();
        } else {
          return bSSInfo_ == null ?
              com.kys.util.netty.proto.LittleProto.B_SSInfo.getDefaultInstance() : bSSInfo_;
        }
      }
      /**
       * <pre>
       ** 广播套羊跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SSInfo b_SSInfo = 421;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.B_SSInfo, com.kys.util.netty.proto.LittleProto.B_SSInfo.Builder, com.kys.util.netty.proto.LittleProto.B_SSInfoOrBuilder> 
          getBSSInfoFieldBuilder() {
        if (bSSInfoBuilder_ == null) {
          bSSInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.B_SSInfo, com.kys.util.netty.proto.LittleProto.B_SSInfo.Builder, com.kys.util.netty.proto.LittleProto.B_SSInfoOrBuilder>(
                  getBSSInfo(),
                  getParentForChildren(),
                  isClean());
          bSSInfo_ = null;
        }
        return bSSInfoBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo bNewSleeveSheepInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo, com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.Builder, com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfoOrBuilder> bNewSleeveSheepInfoBuilder_;
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      public boolean hasBNewSleeveSheepInfo() {
        return bNewSleeveSheepInfoBuilder_ != null || bNewSleeveSheepInfo_ != null;
      }
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo getBNewSleeveSheepInfo() {
        if (bNewSleeveSheepInfoBuilder_ == null) {
          return bNewSleeveSheepInfo_ == null ? com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.getDefaultInstance() : bNewSleeveSheepInfo_;
        } else {
          return bNewSleeveSheepInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      public Builder setBNewSleeveSheepInfo(com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo value) {
        if (bNewSleeveSheepInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bNewSleeveSheepInfo_ = value;
          onChanged();
        } else {
          bNewSleeveSheepInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      public Builder setBNewSleeveSheepInfo(
          com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.Builder builderForValue) {
        if (bNewSleeveSheepInfoBuilder_ == null) {
          bNewSleeveSheepInfo_ = builderForValue.build();
          onChanged();
        } else {
          bNewSleeveSheepInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      public Builder mergeBNewSleeveSheepInfo(com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo value) {
        if (bNewSleeveSheepInfoBuilder_ == null) {
          if (bNewSleeveSheepInfo_ != null) {
            bNewSleeveSheepInfo_ =
              com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.newBuilder(bNewSleeveSheepInfo_).mergeFrom(value).buildPartial();
          } else {
            bNewSleeveSheepInfo_ = value;
          }
          onChanged();
        } else {
          bNewSleeveSheepInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      public Builder clearBNewSleeveSheepInfo() {
        if (bNewSleeveSheepInfoBuilder_ == null) {
          bNewSleeveSheepInfo_ = null;
          onChanged();
        } else {
          bNewSleeveSheepInfo_ = null;
          bNewSleeveSheepInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.Builder getBNewSleeveSheepInfoBuilder() {
        
        onChanged();
        return getBNewSleeveSheepInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfoOrBuilder getBNewSleeveSheepInfoOrBuilder() {
        if (bNewSleeveSheepInfoBuilder_ != null) {
          return bNewSleeveSheepInfoBuilder_.getMessageOrBuilder();
        } else {
          return bNewSleeveSheepInfo_ == null ?
              com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.getDefaultInstance() : bNewSleeveSheepInfo_;
        }
      }
      /**
       * <pre>
       ** 套羊跑马灯信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeveSheepInfo b_NewSleeveSheepInfo = 422;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo, com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.Builder, com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfoOrBuilder> 
          getBNewSleeveSheepInfoFieldBuilder() {
        if (bNewSleeveSheepInfoBuilder_ == null) {
          bNewSleeveSheepInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo, com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfo.Builder, com.kys.util.netty.proto.LittleProto.B_NewSleeveSheepInfoOrBuilder>(
                  getBNewSleeveSheepInfo(),
                  getParentForChildren(),
                  isClean());
          bNewSleeveSheepInfo_ = null;
        }
        return bNewSleeveSheepInfoBuilder_;
      }

      private com.kys.util.netty.proto.LittleProto.B_NewSleeverOver bNewSleeverOver_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.B_NewSleeverOver, com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.Builder, com.kys.util.netty.proto.LittleProto.B_NewSleeverOverOrBuilder> bNewSleeverOverBuilder_;
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      public boolean hasBNewSleeverOver() {
        return bNewSleeverOverBuilder_ != null || bNewSleeverOver_ != null;
      }
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_NewSleeverOver getBNewSleeverOver() {
        if (bNewSleeverOverBuilder_ == null) {
          return bNewSleeverOver_ == null ? com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.getDefaultInstance() : bNewSleeverOver_;
        } else {
          return bNewSleeverOverBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      public Builder setBNewSleeverOver(com.kys.util.netty.proto.LittleProto.B_NewSleeverOver value) {
        if (bNewSleeverOverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bNewSleeverOver_ = value;
          onChanged();
        } else {
          bNewSleeverOverBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      public Builder setBNewSleeverOver(
          com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.Builder builderForValue) {
        if (bNewSleeverOverBuilder_ == null) {
          bNewSleeverOver_ = builderForValue.build();
          onChanged();
        } else {
          bNewSleeverOverBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      public Builder mergeBNewSleeverOver(com.kys.util.netty.proto.LittleProto.B_NewSleeverOver value) {
        if (bNewSleeverOverBuilder_ == null) {
          if (bNewSleeverOver_ != null) {
            bNewSleeverOver_ =
              com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.newBuilder(bNewSleeverOver_).mergeFrom(value).buildPartial();
          } else {
            bNewSleeverOver_ = value;
          }
          onChanged();
        } else {
          bNewSleeverOverBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      public Builder clearBNewSleeverOver() {
        if (bNewSleeverOverBuilder_ == null) {
          bNewSleeverOver_ = null;
          onChanged();
        } else {
          bNewSleeverOver_ = null;
          bNewSleeverOverBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.Builder getBNewSleeverOverBuilder() {
        
        onChanged();
        return getBNewSleeverOverFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      public com.kys.util.netty.proto.LittleProto.B_NewSleeverOverOrBuilder getBNewSleeverOverOrBuilder() {
        if (bNewSleeverOverBuilder_ != null) {
          return bNewSleeverOverBuilder_.getMessageOrBuilder();
        } else {
          return bNewSleeverOver_ == null ?
              com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.getDefaultInstance() : bNewSleeverOver_;
        }
      }
      /**
       * <pre>
       ** 广播新套羊活动结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NewSleeverOver b_NewSleeverOver = 423;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LittleProto.B_NewSleeverOver, com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.Builder, com.kys.util.netty.proto.LittleProto.B_NewSleeverOverOrBuilder> 
          getBNewSleeverOverFieldBuilder() {
        if (bNewSleeverOverBuilder_ == null) {
          bNewSleeverOverBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LittleProto.B_NewSleeverOver, com.kys.util.netty.proto.LittleProto.B_NewSleeverOver.Builder, com.kys.util.netty.proto.LittleProto.B_NewSleeverOverOrBuilder>(
                  getBNewSleeverOver(),
                  getParentForChildren(),
                  isClean());
          bNewSleeverOver_ = null;
        }
        return bNewSleeverOverBuilder_;
      }

      private com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo bDiamondReviveInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo, com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfoOrBuilder> bDiamondReviveInfoBuilder_;
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      public boolean hasBDiamondReviveInfo() {
        return bDiamondReviveInfoBuilder_ != null || bDiamondReviveInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo getBDiamondReviveInfo() {
        if (bDiamondReviveInfoBuilder_ == null) {
          return bDiamondReviveInfo_ == null ? com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.getDefaultInstance() : bDiamondReviveInfo_;
        } else {
          return bDiamondReviveInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      public Builder setBDiamondReviveInfo(com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo value) {
        if (bDiamondReviveInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDiamondReviveInfo_ = value;
          onChanged();
        } else {
          bDiamondReviveInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      public Builder setBDiamondReviveInfo(
          com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.Builder builderForValue) {
        if (bDiamondReviveInfoBuilder_ == null) {
          bDiamondReviveInfo_ = builderForValue.build();
          onChanged();
        } else {
          bDiamondReviveInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      public Builder mergeBDiamondReviveInfo(com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo value) {
        if (bDiamondReviveInfoBuilder_ == null) {
          if (bDiamondReviveInfo_ != null) {
            bDiamondReviveInfo_ =
              com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.newBuilder(bDiamondReviveInfo_).mergeFrom(value).buildPartial();
          } else {
            bDiamondReviveInfo_ = value;
          }
          onChanged();
        } else {
          bDiamondReviveInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      public Builder clearBDiamondReviveInfo() {
        if (bDiamondReviveInfoBuilder_ == null) {
          bDiamondReviveInfo_ = null;
          onChanged();
        } else {
          bDiamondReviveInfo_ = null;
          bDiamondReviveInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.Builder getBDiamondReviveInfoBuilder() {
        
        onChanged();
        return getBDiamondReviveInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      public com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfoOrBuilder getBDiamondReviveInfoOrBuilder() {
        if (bDiamondReviveInfoBuilder_ != null) {
          return bDiamondReviveInfoBuilder_.getMessageOrBuilder();
        } else {
          return bDiamondReviveInfo_ == null ?
              com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.getDefaultInstance() : bDiamondReviveInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器推送钻石复活次数变化 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DiamondReviveInfo b_DiamondReviveInfo = 424;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo, com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfoOrBuilder> 
          getBDiamondReviveInfoFieldBuilder() {
        if (bDiamondReviveInfoBuilder_ == null) {
          bDiamondReviveInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo, com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfo.Builder, com.kys.util.netty.proto.ReviveProto.B_DiamondReviveInfoOrBuilder>(
                  getBDiamondReviveInfo(),
                  getParentForChildren(),
                  isClean());
          bDiamondReviveInfo_ = null;
        }
        return bDiamondReviveInfoBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay b2AutoPlay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay, com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.Builder, com.kys.util.netty.proto.Game2Proto.B_2_AutoPlayOrBuilder> b2AutoPlayBuilder_;
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      public boolean hasB2AutoPlay() {
        return b2AutoPlayBuilder_ != null || b2AutoPlay_ != null;
      }
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay getB2AutoPlay() {
        if (b2AutoPlayBuilder_ == null) {
          return b2AutoPlay_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.getDefaultInstance() : b2AutoPlay_;
        } else {
          return b2AutoPlayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      public Builder setB2AutoPlay(com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay value) {
        if (b2AutoPlayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          b2AutoPlay_ = value;
          onChanged();
        } else {
          b2AutoPlayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      public Builder setB2AutoPlay(
          com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.Builder builderForValue) {
        if (b2AutoPlayBuilder_ == null) {
          b2AutoPlay_ = builderForValue.build();
          onChanged();
        } else {
          b2AutoPlayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      public Builder mergeB2AutoPlay(com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay value) {
        if (b2AutoPlayBuilder_ == null) {
          if (b2AutoPlay_ != null) {
            b2AutoPlay_ =
              com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.newBuilder(b2AutoPlay_).mergeFrom(value).buildPartial();
          } else {
            b2AutoPlay_ = value;
          }
          onChanged();
        } else {
          b2AutoPlayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      public Builder clearB2AutoPlay() {
        if (b2AutoPlayBuilder_ == null) {
          b2AutoPlay_ = null;
          onChanged();
        } else {
          b2AutoPlay_ = null;
          b2AutoPlayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.Builder getB2AutoPlayBuilder() {
        
        onChanged();
        return getB2AutoPlayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_AutoPlayOrBuilder getB2AutoPlayOrBuilder() {
        if (b2AutoPlayBuilder_ != null) {
          return b2AutoPlayBuilder_.getMessageOrBuilder();
        } else {
          return b2AutoPlay_ == null ?
              com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.getDefaultInstance() : b2AutoPlay_;
        }
      }
      /**
       * <pre>
       ** 二人场-广播有玩家进行托管了 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_AutoPlay b_2_AutoPlay = 425;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay, com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.Builder, com.kys.util.netty.proto.Game2Proto.B_2_AutoPlayOrBuilder> 
          getB2AutoPlayFieldBuilder() {
        if (b2AutoPlayBuilder_ == null) {
          b2AutoPlayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay, com.kys.util.netty.proto.Game2Proto.B_2_AutoPlay.Builder, com.kys.util.netty.proto.Game2Proto.B_2_AutoPlayOrBuilder>(
                  getB2AutoPlay(),
                  getParentForChildren(),
                  isClean());
          b2AutoPlay_ = null;
        }
        return b2AutoPlayBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.B_2_GameStart b2GameStart_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_GameStart, com.kys.util.netty.proto.Game2Proto.B_2_GameStart.Builder, com.kys.util.netty.proto.Game2Proto.B_2_GameStartOrBuilder> b2GameStartBuilder_;
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      public boolean hasB2GameStart() {
        return b2GameStartBuilder_ != null || b2GameStart_ != null;
      }
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_GameStart getB2GameStart() {
        if (b2GameStartBuilder_ == null) {
          return b2GameStart_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_GameStart.getDefaultInstance() : b2GameStart_;
        } else {
          return b2GameStartBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      public Builder setB2GameStart(com.kys.util.netty.proto.Game2Proto.B_2_GameStart value) {
        if (b2GameStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          b2GameStart_ = value;
          onChanged();
        } else {
          b2GameStartBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      public Builder setB2GameStart(
          com.kys.util.netty.proto.Game2Proto.B_2_GameStart.Builder builderForValue) {
        if (b2GameStartBuilder_ == null) {
          b2GameStart_ = builderForValue.build();
          onChanged();
        } else {
          b2GameStartBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      public Builder mergeB2GameStart(com.kys.util.netty.proto.Game2Proto.B_2_GameStart value) {
        if (b2GameStartBuilder_ == null) {
          if (b2GameStart_ != null) {
            b2GameStart_ =
              com.kys.util.netty.proto.Game2Proto.B_2_GameStart.newBuilder(b2GameStart_).mergeFrom(value).buildPartial();
          } else {
            b2GameStart_ = value;
          }
          onChanged();
        } else {
          b2GameStartBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      public Builder clearB2GameStart() {
        if (b2GameStartBuilder_ == null) {
          b2GameStart_ = null;
          onChanged();
        } else {
          b2GameStart_ = null;
          b2GameStartBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_GameStart.Builder getB2GameStartBuilder() {
        
        onChanged();
        return getB2GameStartFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_GameStartOrBuilder getB2GameStartOrBuilder() {
        if (b2GameStartBuilder_ != null) {
          return b2GameStartBuilder_.getMessageOrBuilder();
        } else {
          return b2GameStart_ == null ?
              com.kys.util.netty.proto.Game2Proto.B_2_GameStart.getDefaultInstance() : b2GameStart_;
        }
      }
      /**
       * <pre>
       ** 二人场-游戏开始，发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameStart b_2_GameStart = 426;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_GameStart, com.kys.util.netty.proto.Game2Proto.B_2_GameStart.Builder, com.kys.util.netty.proto.Game2Proto.B_2_GameStartOrBuilder> 
          getB2GameStartFieldBuilder() {
        if (b2GameStartBuilder_ == null) {
          b2GameStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.B_2_GameStart, com.kys.util.netty.proto.Game2Proto.B_2_GameStart.Builder, com.kys.util.netty.proto.Game2Proto.B_2_GameStartOrBuilder>(
                  getB2GameStart(),
                  getParentForChildren(),
                  isClean());
          b2GameStart_ = null;
        }
        return b2GameStartBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.B_2_DoCatch b2DoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_DoCatch, com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.B_2_DoCatchOrBuilder> b2DoCatchBuilder_;
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      public boolean hasB2DoCatch() {
        return b2DoCatchBuilder_ != null || b2DoCatch_ != null;
      }
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_DoCatch getB2DoCatch() {
        if (b2DoCatchBuilder_ == null) {
          return b2DoCatch_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.getDefaultInstance() : b2DoCatch_;
        } else {
          return b2DoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      public Builder setB2DoCatch(com.kys.util.netty.proto.Game2Proto.B_2_DoCatch value) {
        if (b2DoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          b2DoCatch_ = value;
          onChanged();
        } else {
          b2DoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      public Builder setB2DoCatch(
          com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.Builder builderForValue) {
        if (b2DoCatchBuilder_ == null) {
          b2DoCatch_ = builderForValue.build();
          onChanged();
        } else {
          b2DoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      public Builder mergeB2DoCatch(com.kys.util.netty.proto.Game2Proto.B_2_DoCatch value) {
        if (b2DoCatchBuilder_ == null) {
          if (b2DoCatch_ != null) {
            b2DoCatch_ =
              com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.newBuilder(b2DoCatch_).mergeFrom(value).buildPartial();
          } else {
            b2DoCatch_ = value;
          }
          onChanged();
        } else {
          b2DoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      public Builder clearB2DoCatch() {
        if (b2DoCatchBuilder_ == null) {
          b2DoCatch_ = null;
          onChanged();
        } else {
          b2DoCatch_ = null;
          b2DoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.Builder getB2DoCatchBuilder() {
        
        onChanged();
        return getB2DoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_DoCatchOrBuilder getB2DoCatchOrBuilder() {
        if (b2DoCatchBuilder_ != null) {
          return b2DoCatchBuilder_.getMessageOrBuilder();
        } else {
          return b2DoCatch_ == null ?
              com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.getDefaultInstance() : b2DoCatch_;
        }
      }
      /**
       * <pre>
       ** 二人场-通知叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_DoCatch b_2_DoCatch = 427;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_DoCatch, com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.B_2_DoCatchOrBuilder> 
          getB2DoCatchFieldBuilder() {
        if (b2DoCatchBuilder_ == null) {
          b2DoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.B_2_DoCatch, com.kys.util.netty.proto.Game2Proto.B_2_DoCatch.Builder, com.kys.util.netty.proto.Game2Proto.B_2_DoCatchOrBuilder>(
                  getB2DoCatch(),
                  getParentForChildren(),
                  isClean());
          b2DoCatch_ = null;
        }
        return b2DoCatchBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.B_2_CatchResult b2CatchResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_CatchResult, com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.Builder, com.kys.util.netty.proto.Game2Proto.B_2_CatchResultOrBuilder> b2CatchResultBuilder_;
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      public boolean hasB2CatchResult() {
        return b2CatchResultBuilder_ != null || b2CatchResult_ != null;
      }
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_CatchResult getB2CatchResult() {
        if (b2CatchResultBuilder_ == null) {
          return b2CatchResult_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.getDefaultInstance() : b2CatchResult_;
        } else {
          return b2CatchResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      public Builder setB2CatchResult(com.kys.util.netty.proto.Game2Proto.B_2_CatchResult value) {
        if (b2CatchResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          b2CatchResult_ = value;
          onChanged();
        } else {
          b2CatchResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      public Builder setB2CatchResult(
          com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.Builder builderForValue) {
        if (b2CatchResultBuilder_ == null) {
          b2CatchResult_ = builderForValue.build();
          onChanged();
        } else {
          b2CatchResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      public Builder mergeB2CatchResult(com.kys.util.netty.proto.Game2Proto.B_2_CatchResult value) {
        if (b2CatchResultBuilder_ == null) {
          if (b2CatchResult_ != null) {
            b2CatchResult_ =
              com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.newBuilder(b2CatchResult_).mergeFrom(value).buildPartial();
          } else {
            b2CatchResult_ = value;
          }
          onChanged();
        } else {
          b2CatchResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      public Builder clearB2CatchResult() {
        if (b2CatchResultBuilder_ == null) {
          b2CatchResult_ = null;
          onChanged();
        } else {
          b2CatchResult_ = null;
          b2CatchResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.Builder getB2CatchResultBuilder() {
        
        onChanged();
        return getB2CatchResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_CatchResultOrBuilder getB2CatchResultOrBuilder() {
        if (b2CatchResultBuilder_ != null) {
          return b2CatchResultBuilder_.getMessageOrBuilder();
        } else {
          return b2CatchResult_ == null ?
              com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.getDefaultInstance() : b2CatchResult_;
        }
      }
      /**
       * <pre>
       ** 二人场-广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_CatchResult b_2_CatchResult = 428;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_CatchResult, com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.Builder, com.kys.util.netty.proto.Game2Proto.B_2_CatchResultOrBuilder> 
          getB2CatchResultFieldBuilder() {
        if (b2CatchResultBuilder_ == null) {
          b2CatchResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.B_2_CatchResult, com.kys.util.netty.proto.Game2Proto.B_2_CatchResult.Builder, com.kys.util.netty.proto.Game2Proto.B_2_CatchResultOrBuilder>(
                  getB2CatchResult(),
                  getParentForChildren(),
                  isClean());
          b2CatchResult_ = null;
        }
        return b2CatchResultBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard b2SendDiZhuCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard, com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.Builder, com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCardOrBuilder> b2SendDiZhuCardBuilder_;
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      public boolean hasB2SendDiZhuCard() {
        return b2SendDiZhuCardBuilder_ != null || b2SendDiZhuCard_ != null;
      }
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard getB2SendDiZhuCard() {
        if (b2SendDiZhuCardBuilder_ == null) {
          return b2SendDiZhuCard_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.getDefaultInstance() : b2SendDiZhuCard_;
        } else {
          return b2SendDiZhuCardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      public Builder setB2SendDiZhuCard(com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard value) {
        if (b2SendDiZhuCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          b2SendDiZhuCard_ = value;
          onChanged();
        } else {
          b2SendDiZhuCardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      public Builder setB2SendDiZhuCard(
          com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.Builder builderForValue) {
        if (b2SendDiZhuCardBuilder_ == null) {
          b2SendDiZhuCard_ = builderForValue.build();
          onChanged();
        } else {
          b2SendDiZhuCardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      public Builder mergeB2SendDiZhuCard(com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard value) {
        if (b2SendDiZhuCardBuilder_ == null) {
          if (b2SendDiZhuCard_ != null) {
            b2SendDiZhuCard_ =
              com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.newBuilder(b2SendDiZhuCard_).mergeFrom(value).buildPartial();
          } else {
            b2SendDiZhuCard_ = value;
          }
          onChanged();
        } else {
          b2SendDiZhuCardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      public Builder clearB2SendDiZhuCard() {
        if (b2SendDiZhuCardBuilder_ == null) {
          b2SendDiZhuCard_ = null;
          onChanged();
        } else {
          b2SendDiZhuCard_ = null;
          b2SendDiZhuCardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.Builder getB2SendDiZhuCardBuilder() {
        
        onChanged();
        return getB2SendDiZhuCardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCardOrBuilder getB2SendDiZhuCardOrBuilder() {
        if (b2SendDiZhuCardBuilder_ != null) {
          return b2SendDiZhuCardBuilder_.getMessageOrBuilder();
        } else {
          return b2SendDiZhuCard_ == null ?
              com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.getDefaultInstance() : b2SendDiZhuCard_;
        }
      }
      /**
       * <pre>
       ** 二人场-广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_SendDiZhuCard b_2_SendDiZhuCard = 429;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard, com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.Builder, com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCardOrBuilder> 
          getB2SendDiZhuCardFieldBuilder() {
        if (b2SendDiZhuCardBuilder_ == null) {
          b2SendDiZhuCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard, com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCard.Builder, com.kys.util.netty.proto.Game2Proto.B_2_SendDiZhuCardOrBuilder>(
                  getB2SendDiZhuCard(),
                  getParentForChildren(),
                  isClean());
          b2SendDiZhuCard_ = null;
        }
        return b2SendDiZhuCardBuilder_;
      }

      private com.kys.util.netty.proto.Game2Proto.B_2_GameSettle b2GameSettle_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_GameSettle, com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.Builder, com.kys.util.netty.proto.Game2Proto.B_2_GameSettleOrBuilder> b2GameSettleBuilder_;
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      public boolean hasB2GameSettle() {
        return b2GameSettleBuilder_ != null || b2GameSettle_ != null;
      }
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_GameSettle getB2GameSettle() {
        if (b2GameSettleBuilder_ == null) {
          return b2GameSettle_ == null ? com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.getDefaultInstance() : b2GameSettle_;
        } else {
          return b2GameSettleBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      public Builder setB2GameSettle(com.kys.util.netty.proto.Game2Proto.B_2_GameSettle value) {
        if (b2GameSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          b2GameSettle_ = value;
          onChanged();
        } else {
          b2GameSettleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      public Builder setB2GameSettle(
          com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.Builder builderForValue) {
        if (b2GameSettleBuilder_ == null) {
          b2GameSettle_ = builderForValue.build();
          onChanged();
        } else {
          b2GameSettleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      public Builder mergeB2GameSettle(com.kys.util.netty.proto.Game2Proto.B_2_GameSettle value) {
        if (b2GameSettleBuilder_ == null) {
          if (b2GameSettle_ != null) {
            b2GameSettle_ =
              com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.newBuilder(b2GameSettle_).mergeFrom(value).buildPartial();
          } else {
            b2GameSettle_ = value;
          }
          onChanged();
        } else {
          b2GameSettleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      public Builder clearB2GameSettle() {
        if (b2GameSettleBuilder_ == null) {
          b2GameSettle_ = null;
          onChanged();
        } else {
          b2GameSettle_ = null;
          b2GameSettleBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.Builder getB2GameSettleBuilder() {
        
        onChanged();
        return getB2GameSettleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      public com.kys.util.netty.proto.Game2Proto.B_2_GameSettleOrBuilder getB2GameSettleOrBuilder() {
        if (b2GameSettleBuilder_ != null) {
          return b2GameSettleBuilder_.getMessageOrBuilder();
        } else {
          return b2GameSettle_ == null ?
              com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.getDefaultInstance() : b2GameSettle_;
        }
      }
      /**
       * <pre>
       ** 二人场-服务器推送游戏结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_2_GameSettle b_2_GameSettle = 432;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.Game2Proto.B_2_GameSettle, com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.Builder, com.kys.util.netty.proto.Game2Proto.B_2_GameSettleOrBuilder> 
          getB2GameSettleFieldBuilder() {
        if (b2GameSettleBuilder_ == null) {
          b2GameSettleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.Game2Proto.B_2_GameSettle, com.kys.util.netty.proto.Game2Proto.B_2_GameSettle.Builder, com.kys.util.netty.proto.Game2Proto.B_2_GameSettleOrBuilder>(
                  getB2GameSettle(),
                  getParentForChildren(),
                  isClean());
          b2GameSettle_ = null;
        }
        return b2GameSettleBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.B_MatchStart bMatchStart_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.B_MatchStart, com.kys.util.netty.proto.MatchProto.B_MatchStart.Builder, com.kys.util.netty.proto.MatchProto.B_MatchStartOrBuilder> bMatchStartBuilder_;
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      public boolean hasBMatchStart() {
        return bMatchStartBuilder_ != null || bMatchStart_ != null;
      }
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchStart getBMatchStart() {
        if (bMatchStartBuilder_ == null) {
          return bMatchStart_ == null ? com.kys.util.netty.proto.MatchProto.B_MatchStart.getDefaultInstance() : bMatchStart_;
        } else {
          return bMatchStartBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      public Builder setBMatchStart(com.kys.util.netty.proto.MatchProto.B_MatchStart value) {
        if (bMatchStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bMatchStart_ = value;
          onChanged();
        } else {
          bMatchStartBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      public Builder setBMatchStart(
          com.kys.util.netty.proto.MatchProto.B_MatchStart.Builder builderForValue) {
        if (bMatchStartBuilder_ == null) {
          bMatchStart_ = builderForValue.build();
          onChanged();
        } else {
          bMatchStartBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      public Builder mergeBMatchStart(com.kys.util.netty.proto.MatchProto.B_MatchStart value) {
        if (bMatchStartBuilder_ == null) {
          if (bMatchStart_ != null) {
            bMatchStart_ =
              com.kys.util.netty.proto.MatchProto.B_MatchStart.newBuilder(bMatchStart_).mergeFrom(value).buildPartial();
          } else {
            bMatchStart_ = value;
          }
          onChanged();
        } else {
          bMatchStartBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      public Builder clearBMatchStart() {
        if (bMatchStartBuilder_ == null) {
          bMatchStart_ = null;
          onChanged();
        } else {
          bMatchStart_ = null;
          bMatchStartBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchStart.Builder getBMatchStartBuilder() {
        
        onChanged();
        return getBMatchStartFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchStartOrBuilder getBMatchStartOrBuilder() {
        if (bMatchStartBuilder_ != null) {
          return bMatchStartBuilder_.getMessageOrBuilder();
        } else {
          return bMatchStart_ == null ?
              com.kys.util.netty.proto.MatchProto.B_MatchStart.getDefaultInstance() : bMatchStart_;
        }
      }
      /**
       * <pre>
       ** 赛事准备开始的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchStart b_MatchStart = 434;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.B_MatchStart, com.kys.util.netty.proto.MatchProto.B_MatchStart.Builder, com.kys.util.netty.proto.MatchProto.B_MatchStartOrBuilder> 
          getBMatchStartFieldBuilder() {
        if (bMatchStartBuilder_ == null) {
          bMatchStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.B_MatchStart, com.kys.util.netty.proto.MatchProto.B_MatchStart.Builder, com.kys.util.netty.proto.MatchProto.B_MatchStartOrBuilder>(
                  getBMatchStart(),
                  getParentForChildren(),
                  isClean());
          bMatchStart_ = null;
        }
        return bMatchStartBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.B_MatchEnd bMatchEnd_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.B_MatchEnd, com.kys.util.netty.proto.MatchProto.B_MatchEnd.Builder, com.kys.util.netty.proto.MatchProto.B_MatchEndOrBuilder> bMatchEndBuilder_;
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      public boolean hasBMatchEnd() {
        return bMatchEndBuilder_ != null || bMatchEnd_ != null;
      }
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchEnd getBMatchEnd() {
        if (bMatchEndBuilder_ == null) {
          return bMatchEnd_ == null ? com.kys.util.netty.proto.MatchProto.B_MatchEnd.getDefaultInstance() : bMatchEnd_;
        } else {
          return bMatchEndBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      public Builder setBMatchEnd(com.kys.util.netty.proto.MatchProto.B_MatchEnd value) {
        if (bMatchEndBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bMatchEnd_ = value;
          onChanged();
        } else {
          bMatchEndBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      public Builder setBMatchEnd(
          com.kys.util.netty.proto.MatchProto.B_MatchEnd.Builder builderForValue) {
        if (bMatchEndBuilder_ == null) {
          bMatchEnd_ = builderForValue.build();
          onChanged();
        } else {
          bMatchEndBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      public Builder mergeBMatchEnd(com.kys.util.netty.proto.MatchProto.B_MatchEnd value) {
        if (bMatchEndBuilder_ == null) {
          if (bMatchEnd_ != null) {
            bMatchEnd_ =
              com.kys.util.netty.proto.MatchProto.B_MatchEnd.newBuilder(bMatchEnd_).mergeFrom(value).buildPartial();
          } else {
            bMatchEnd_ = value;
          }
          onChanged();
        } else {
          bMatchEndBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      public Builder clearBMatchEnd() {
        if (bMatchEndBuilder_ == null) {
          bMatchEnd_ = null;
          onChanged();
        } else {
          bMatchEnd_ = null;
          bMatchEndBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchEnd.Builder getBMatchEndBuilder() {
        
        onChanged();
        return getBMatchEndFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchEndOrBuilder getBMatchEndOrBuilder() {
        if (bMatchEndBuilder_ != null) {
          return bMatchEndBuilder_.getMessageOrBuilder();
        } else {
          return bMatchEnd_ == null ?
              com.kys.util.netty.proto.MatchProto.B_MatchEnd.getDefaultInstance() : bMatchEnd_;
        }
      }
      /**
       * <pre>
       ** 赛事结束等待的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchEnd b_MatchEnd = 435;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.B_MatchEnd, com.kys.util.netty.proto.MatchProto.B_MatchEnd.Builder, com.kys.util.netty.proto.MatchProto.B_MatchEndOrBuilder> 
          getBMatchEndFieldBuilder() {
        if (bMatchEndBuilder_ == null) {
          bMatchEndBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.B_MatchEnd, com.kys.util.netty.proto.MatchProto.B_MatchEnd.Builder, com.kys.util.netty.proto.MatchProto.B_MatchEndOrBuilder>(
                  getBMatchEnd(),
                  getParentForChildren(),
                  isClean());
          bMatchEnd_ = null;
        }
        return bMatchEndBuilder_;
      }

      private com.kys.util.netty.proto.MatchProto.B_MatchResult bMatchResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.B_MatchResult, com.kys.util.netty.proto.MatchProto.B_MatchResult.Builder, com.kys.util.netty.proto.MatchProto.B_MatchResultOrBuilder> bMatchResultBuilder_;
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      public boolean hasBMatchResult() {
        return bMatchResultBuilder_ != null || bMatchResult_ != null;
      }
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchResult getBMatchResult() {
        if (bMatchResultBuilder_ == null) {
          return bMatchResult_ == null ? com.kys.util.netty.proto.MatchProto.B_MatchResult.getDefaultInstance() : bMatchResult_;
        } else {
          return bMatchResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      public Builder setBMatchResult(com.kys.util.netty.proto.MatchProto.B_MatchResult value) {
        if (bMatchResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bMatchResult_ = value;
          onChanged();
        } else {
          bMatchResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      public Builder setBMatchResult(
          com.kys.util.netty.proto.MatchProto.B_MatchResult.Builder builderForValue) {
        if (bMatchResultBuilder_ == null) {
          bMatchResult_ = builderForValue.build();
          onChanged();
        } else {
          bMatchResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      public Builder mergeBMatchResult(com.kys.util.netty.proto.MatchProto.B_MatchResult value) {
        if (bMatchResultBuilder_ == null) {
          if (bMatchResult_ != null) {
            bMatchResult_ =
              com.kys.util.netty.proto.MatchProto.B_MatchResult.newBuilder(bMatchResult_).mergeFrom(value).buildPartial();
          } else {
            bMatchResult_ = value;
          }
          onChanged();
        } else {
          bMatchResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      public Builder clearBMatchResult() {
        if (bMatchResultBuilder_ == null) {
          bMatchResult_ = null;
          onChanged();
        } else {
          bMatchResult_ = null;
          bMatchResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchResult.Builder getBMatchResultBuilder() {
        
        onChanged();
        return getBMatchResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      public com.kys.util.netty.proto.MatchProto.B_MatchResultOrBuilder getBMatchResultOrBuilder() {
        if (bMatchResultBuilder_ != null) {
          return bMatchResultBuilder_.getMessageOrBuilder();
        } else {
          return bMatchResult_ == null ?
              com.kys.util.netty.proto.MatchProto.B_MatchResult.getDefaultInstance() : bMatchResult_;
        }
      }
      /**
       * <pre>
       ** 赛事结算的推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_MatchResult b_MatchResult = 436;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.MatchProto.B_MatchResult, com.kys.util.netty.proto.MatchProto.B_MatchResult.Builder, com.kys.util.netty.proto.MatchProto.B_MatchResultOrBuilder> 
          getBMatchResultFieldBuilder() {
        if (bMatchResultBuilder_ == null) {
          bMatchResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.MatchProto.B_MatchResult, com.kys.util.netty.proto.MatchProto.B_MatchResult.Builder, com.kys.util.netty.proto.MatchProto.B_MatchResultOrBuilder>(
                  getBMatchResult(),
                  getParentForChildren(),
                  isClean());
          bMatchResult_ = null;
        }
        return bMatchResultBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.kys.util.netty.proto.ServerResponse)
    }

    // @@protoc_insertion_point(class_scope:com.kys.util.netty.proto.ServerResponse)
    private static final com.kys.util.netty.proto.ProtoMsg.ServerResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.kys.util.netty.proto.ProtoMsg.ServerResponse();
    }

    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerResponse>
        PARSER = new com.google.protobuf.AbstractParser<ServerResponse>() {
      public ServerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ServerResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ServerResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerResponse> getParserForType() {
      return PARSER;
    }

    public com.kys.util.netty.proto.ProtoMsg.ServerResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kys_util_netty_proto_ClientRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_kys_util_netty_proto_ClientRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kys_util_netty_proto_ServerResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_kys_util_netty_proto_ServerResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016protoMsg.proto\022\030com.kys.util.netty.pro" +
      "to\032\020loginProto.proto\032\017userProto.proto\032\017g" +
      "ameProto.proto\032\020storeProto.proto\032\017hallPr" +
      "oto.proto\032\021snatchProto.proto\032\017propProto." +
      "proto\032\017signProto.proto\032\016vipProto.proto\032\021" +
      "littleProto.proto\032\020game2Proto.proto\032\020sha" +
      "reProto.proto\032\021reviveProto.proto\032\020matchP" +
      "roto.proto\032\020triplekill.proto\"\235I\n\rClientR" +
      "equest\022\016\n\006userId\030\001 \001(\005\022\020\n\010methodId\030\002 \001(\005" +
      "\022E\n\020clientPlayerInfo\030\004 \001(\0132+.com.kys.uti",
      "l.netty.proto.ClientGetUserInfo\022V\n\031clien" +
      "tReturnHallHeartBeat\030\005 \001(\01323.com.kys.uti" +
      "l.netty.proto.ClientReturnHallHeartBeat\022" +
      "V\n\031clientReturnGameHeartBeat\030\006 \001(\01323.com" +
      ".kys.util.netty.proto.ClientReturnGameHe" +
      "artBeat\022F\n\021clientGetUserInfo\030\007 \001(\0132+.com" +
      ".kys.util.netty.proto.ClientGetUserInfo\022" +
      "@\n\016clientNewLogin\030\010 \001(\0132(.com.kys.util.n" +
      "etty.proto.ClientNewLogin\022B\n\017clientQuick" +
      "Join\030d \001(\0132).com.kys.util.netty.proto.Cl",
      "ientQuickJoin\022B\n\017clientEnterRoom\030e \001(\0132)" +
      ".com.kys.util.netty.proto.ClientEnterRoo" +
      "m\022>\n\rclientDoCatch\030f \001(\0132\'.com.kys.util." +
      "netty.proto.ClientDoCatch\022B\n\017clientPlayC" +
      "ards\030g \001(\0132).com.kys.util.netty.proto.Cl" +
      "ientPlayCards\022F\n\021clientRecoverGame\030h \001(\013" +
      "2+.com.kys.util.netty.proto.ClientRecove" +
      "rGame\022@\n\016clientAutoPlay\030i \001(\0132(.com.kys." +
      "util.netty.proto.ClientAutoPlay\022B\n\017clien" +
      "tLeaveRoom\030j \001(\0132).com.kys.util.netty.pr",
      "oto.ClientLeaveRoom\022D\n\020clientCancleJoin\030" +
      "k \001(\0132*.com.kys.util.netty.proto.ClientC" +
      "ancleJoin\022D\n\020clientQueryIndex\030l \001(\0132*.co" +
      "m.kys.util.netty.proto.ClientQueryIndex\022" +
      "N\n\025clientRetryReturnGame\030m \001(\0132/.com.kys" +
      ".util.netty.proto.ClientRetryReturnGame\022" +
      "G\n\021clientGetRankList\030\310\001 \001(\0132+.com.kys.ut" +
      "il.netty.proto.ClientGetRankList\022K\n\023clie" +
      "ntGetRoomConfig\030\315\001 \001(\0132-.com.kys.util.ne" +
      "tty.proto.ClientGetRoomConfig\022K\n\023clientR",
      "ewardMessage\030\316\001 \001(\0132-.com.kys.util.netty" +
      ".proto.ClientRewardMessage\022W\n\031clientGetM" +
      "onthCardDiamond\030\321\001 \001(\01323.com.kys.util.ne" +
      "tty.proto.ClientGetMonthCardDiamond\022O\n\025c" +
      "lientGetLotteryCount\030\322\001 \001(\0132/.com.kys.ut" +
      "il.netty.proto.ClientGetLotteryCount\022G\n\021" +
      "clientGetRoomInfo\030\323\001 \001(\0132+.com.kys.util." +
      "netty.proto.ClientGetRoomInfo\022G\n\021clientS" +
      "endTelCode\030\324\001 \001(\0132+.com.kys.util.netty.p" +
      "roto.ClientSendTelCode\022K\n\023clientVerifyTe",
      "lCode\030\325\001 \001(\0132-.com.kys.util.netty.proto." +
      "ClientVerifyTelCode\022I\n\022clientSharePackag" +
      "e\030\331\001 \001(\0132,.com.kys.util.netty.proto.Clie" +
      "ntSharePackage\022I\n\022clientGetAwardList\030\332\001 " +
      "\001(\0132,.com.kys.util.netty.proto.ClientGet" +
      "AwardList\022I\n\022clientPlayerLogout\030\333\001 \001(\0132," +
      ".com.kys.util.netty.proto.ClientPlayerLo" +
      "gout\022I\n\022clientCheckConnect\030\334\001 \001(\0132,.com." +
      "kys.util.netty.proto.ClientCheckConnect\022" +
      "C\n\017clientGetPFList\030\335\001 \001(\0132).com.kys.util",
      ".netty.proto.ClientGetPFList\022A\n\016clientCh" +
      "oosePF\030\336\001 \001(\0132(.com.kys.util.netty.proto" +
      ".ClientChoosePF\022M\n\024clientGetHistoryRank\030" +
      "\337\001 \001(\0132..com.kys.util.netty.proto.Client" +
      "GetHistoryRank\022A\n\016clientH5Reward\030\340\001 \001(\0132" +
      "(.com.kys.util.netty.proto.ClientH5Rewar" +
      "d\022K\n\023clientNewDrawWinCup\030\341\001 \001(\0132-.com.ky" +
      "s.util.netty.proto.ClientNewDrawWinCup\022M" +
      "\n\024clientGetNewHallInfo\030\342\001 \001(\0132..com.kys." +
      "util.netty.proto.ClientGetNewHallInfo\022A\n",
      "\016clientLuckWall\030\345\001 \001(\0132(.com.kys.util.ne" +
      "tty.proto.ClientLuckWall\022E\n\020clientCdkeyA" +
      "ward\030\346\001 \001(\0132*.com.kys.util.netty.proto.C" +
      "lientCdkeyAward\022I\n\022clientGetStoreInfo\030\254\002" +
      " \001(\0132,.com.kys.util.netty.proto.ClientGe" +
      "tStoreInfo\022I\n\022clientConvertGoods\030\255\002 \001(\0132" +
      ",.com.kys.util.netty.proto.ClientConvert" +
      "Goods\022Q\n\026clientWXPayResultQuery\030\256\002 \001(\01320" +
      ".com.kys.util.netty.proto.ClientWXPayRes" +
      "ultQuery\022K\n\023clientBuyOrderGoods\030\257\002 \001(\0132-",
      ".com.kys.util.netty.proto.ClientBuyOrder" +
      "Goods\022M\n\024clientGetFirstCharge\030\260\002 \001(\0132..c" +
      "om.kys.util.netty.proto.ClientGetFirstCh" +
      "arge\022I\n\022clientGetDailyGift\030\261\002 \001(\0132,.com." +
      "kys.util.netty.proto.ClientGetDailyGift\022" +
      "I\n\022clientGetMonthCard\030\262\002 \001(\0132,.com.kys.u" +
      "til.netty.proto.ClientGetMonthCard\022S\n\027cl" +
      "ientGetResurgenceGift\030\263\002 \001(\01321.com.kys.u" +
      "til.netty.proto.ClientGetResurgenceGift\022" +
      "S\n\027clientGetConvertMessage\030\264\002 \001(\01321.com.",
      "kys.util.netty.proto.ClientGetConvertMes" +
      "sage\022G\n\021clientNewBuyOrder\030\265\002 \001(\0132+.com.k" +
      "ys.util.netty.proto.ClientNewBuyOrder\022E\n" +
      "\020clientNewConvert\030\266\002 \001(\0132*.com.kys.util." +
      "netty.proto.ClientNewConvert\022K\n\023clientAl" +
      "ipayAccount\030\267\002 \001(\0132-.com.kys.util.netty." +
      "proto.ClientAlipayAccount\022E\n\020clientPayOp" +
      "tions\030\270\002 \001(\0132*.com.kys.util.netty.proto." +
      "ClientPayOptions\022A\n\016clientIdVerify\030\271\002 \001(" +
      "\0132(.com.kys.util.netty.proto.ClientIdVer",
      "ify\022G\n\021clientVerifyAward\030\272\002 \001(\0132+.com.ky" +
      "s.util.netty.proto.ClientVerifyAward\022E\n\020" +
      "clientMiniAppPay\030\273\002 \001(\0132*.com.kys.util.n" +
      "etty.proto.ClientMiniAppPay\022I\n\022clientUni" +
      "onAccount\030\274\002 \001(\0132,.com.kys.util.netty.pr" +
      "oto.ClientUnionAccount\022G\n\021clientGetAnnou" +
      "nce\030\364\003 \001(\0132+.com.kys.util.netty.proto.Cl" +
      "ientGetAnnounce\022?\n\rclientGetMail\030\330\004 \001(\0132" +
      "\'.com.kys.util.netty.proto.ClientGetMail" +
      "\022K\n\023clientGetMailReward\030\331\004 \001(\0132-.com.kys",
      ".util.netty.proto.ClientGetMailReward\022?\n" +
      "\rclientDelMail\030\332\004 \001(\0132\'.com.kys.util.net" +
      "ty.proto.ClientDelMail\022A\n\016clientReadMail" +
      "\030\333\004 \001(\0132(.com.kys.util.netty.proto.Clien" +
      "tReadMail\022;\n\013clientDel2R\030\334\004 \001(\0132%.com.ky" +
      "s.util.netty.proto.ClientDel2R\022M\n\024client" +
      "QueryDailyTask\030\274\005 \001(\0132..com.kys.util.net" +
      "ty.proto.ClientQueryDailyTask\022O\n\025clientG" +
      "etNoviceReward\030\276\005 \001(\0132/.com.kys.util.net" +
      "ty.proto.ClientGetNoviceReward\022O\n\025client",
      "QueryNoviceTask\030\277\005 \001(\0132/.com.kys.util.ne" +
      "tty.proto.ClientQueryNoviceTask\022E\n\020clien" +
      "tGetDTAward\030\300\005 \001(\0132*.com.kys.util.netty." +
      "proto.ClientGetDTAward\022M\n\024clientGetRecei" +
      "veAddr\030\240\006 \001(\0132..com.kys.util.netty.proto" +
      ".ClientGetReceiveAddr\022Q\n\026clientAlterRece" +
      "iveAddr\030\241\006 \001(\01320.com.kys.util.netty.prot" +
      "o.ClientAlterReceiveAddr\022E\n\020clientSnatch" +
      "List\030\242\006 \001(\0132*.com.kys.util.netty.proto.C" +
      "lientSnatchList\022Q\n\026clientSnatchItemDetai",
      "l\030\243\006 \001(\01320.com.kys.util.netty.proto.Clie" +
      "ntSnatchItemDetail\022C\n\017clientSnatchBet\030\244\006" +
      " \001(\0132).com.kys.util.netty.proto.ClientSn" +
      "atchBet\022O\n\025clientSnatchAwardList\030\245\006 \001(\0132" +
      "/.com.kys.util.netty.proto.ClientSnatchA" +
      "wardList\022O\n\025clientOwnSnatchRecord\030\246\006 \001(\013" +
      "2/.com.kys.util.netty.proto.ClientOwnSna" +
      "tchRecord\022S\n\027clientSnatchItemHistory\030\247\006 " +
      "\001(\01321.com.kys.util.netty.proto.ClientSna" +
      "tchItemHistory\022W\n\031clientSnatchHistoryDet",
      "ail\030\250\006 \001(\01323.com.kys.util.netty.proto.Cl" +
      "ientSnatchHistoryDetail\022M\n\024clientSnatchG" +
      "etAward\030\251\006 \001(\0132..com.kys.util.netty.prot" +
      "o.ClientSnatchGetAward\022?\n\rclientEnterDG\030" +
      "\204\007 \001(\0132\'.com.kys.util.netty.proto.Client" +
      "EnterDG\022C\n\017clientDGLottery\030\205\007 \001(\0132).com." +
      "kys.util.netty.proto.ClientDGLottery\022I\n\022" +
      "clientResetLottery\030\206\007 \001(\0132,.com.kys.util" +
      ".netty.proto.ClientResetLottery\022=\n\014clien" +
      "tExitDG\030\207\007 \001(\0132&.com.kys.util.netty.prot",
      "o.ClientExitDG\022=\n\014clientOpenDG\030\210\007 \001(\0132&." +
      "com.kys.util.netty.proto.ClientOpenDG\022=\n" +
      "\014clientOpenDD\030\211\007 \001(\0132&.com.kys.util.nett" +
      "y.proto.ClientOpenDD\022C\n\017clientDDLottery\030" +
      "\212\007 \001(\0132).com.kys.util.netty.proto.Client" +
      "DDLottery\022=\n\014clientExitDD\030\213\007 \001(\0132&.com.k" +
      "ys.util.netty.proto.ClientExitDD\022C\n\017clie" +
      "ntQueryProp\030\351\007 \001(\0132).com.kys.util.netty." +
      "proto.ClientQueryProp\022?\n\rclientUseProp\030\352" +
      "\007 \001(\0132\'.com.kys.util.netty.proto.ClientU",
      "seProp\022M\n\024clientQueryPropCount\030\353\007 \001(\0132.." +
      "com.kys.util.netty.proto.ClientQueryProp" +
      "Count\022A\n\016clientSignInfo\030\315\010 \001(\0132(.com.kys" +
      ".util.netty.proto.ClientSignInfo\022C\n\017clie" +
      "ntSignAward\030\316\010 \001(\0132).com.kys.util.netty." +
      "proto.ClientSignAward\022C\n\017clientSignState" +
      "\030\317\010 \001(\0132).com.kys.util.netty.proto.Clien" +
      "tSignState\022C\n\017clientLTLottery\030\320\010 \001(\0132).c" +
      "om.kys.util.netty.proto.ClientLTLottery\022" +
      "G\n\021clientGetTSReward\030\321\010 \001(\0132+.com.kys.ut",
      "il.netty.proto.ClientGetTSReward\022G\n\021clie" +
      "ntGetLuckInfo\030\322\010 \001(\0132+.com.kys.util.nett" +
      "y.proto.ClientGetLuckInfo\022=\n\014clientGetVi" +
      "p\030\263\t \001(\0132&.com.kys.util.netty.proto.Clie" +
      "ntGetVip\022E\n\020clientGetDayGift\030\264\t \001(\0132*.co" +
      "m.kys.util.netty.proto.ClientGetDayGift\022" +
      "G\n\021clientEnterSleeve\030\224\n \001(\0132+.com.kys.ut" +
      "il.netty.proto.ClientEnterSleeve\022G\n\021clie" +
      "ntSleeveSheep\030\225\n \001(\0132+.com.kys.util.nett" +
      "y.proto.ClientSleeveSheep\022O\n\025clientQuery",
      "PlayerCoin\030\226\n \001(\0132/.com.kys.util.netty.p" +
      "roto.ClientQueryPlayerCoin\022E\n\020clientExit" +
      "Sleeve\030\227\n \001(\0132*.com.kys.util.netty.proto" +
      ".ClientExitSleeve\022M\n\024clientEnterNewSleev" +
      "e\030\230\n \001(\0132..com.kys.util.netty.proto.Clie" +
      "ntEnterNewSleeve\022M\n\024clientNewSleeveSheep" +
      "\030\231\n \001(\0132..com.kys.util.netty.proto.Clien" +
      "tNewSleeveSheep\022O\n\025clientNewSleeveResult" +
      "\030\232\n \001(\0132/.com.kys.util.netty.proto.Clien" +
      "tNewSleeveResult\022K\n\023clientExitNewSleeve\030",
      "\233\n \001(\0132-.com.kys.util.netty.proto.Client" +
      "ExitNewSleeve\022E\n\020client_2_DoCatch\030\371\n \001(\013" +
      "2*.com.kys.util.netty.proto.Client_2_DoC" +
      "atch\022I\n\022client_2_PlayCards\030\372\n \001(\0132,.com." +
      "kys.util.netty.proto.Client_2_PlayCards\022" +
      "M\n\024client_2_RecoverGame\030\373\n \001(\0132..com.kys" +
      ".util.netty.proto.Client_2_RecoverGame\022I" +
      "\n\022client_2_LeaveRoom\030\374\n \001(\0132,.com.kys.ut" +
      "il.netty.proto.Client_2_LeaveRoom\022C\n\017cli" +
      "entMineShare\030\335\013 \001(\0132).com.kys.util.netty",
      ".proto.ClientMineShare\022E\n\020clientGetMSAwa" +
      "rd\030\336\013 \001(\0132*.com.kys.util.netty.proto.Cli" +
      "entGetMSAward\022G\n\021clientFriendShare\030\337\013 \001(" +
      "\0132+.com.kys.util.netty.proto.ClientFrien" +
      "dShare\022E\n\020clientGetFSAward\030\340\013 \001(\0132*.com." +
      "kys.util.netty.proto.ClientGetFSAward\022I\n" +
      "\022clientGetShareTask\030\341\013 \001(\0132,.com.kys.uti" +
      "l.netty.proto.ClientGetShareTask\022S\n\027clie" +
      "ntGetShareTaskAward\030\342\013 \001(\01321.com.kys.uti" +
      "l.netty.proto.ClientGetShareTaskAward\022O\n",
      "\025clientQueryReviveInfo\030\301\014 \001(\0132/.com.kys." +
      "util.netty.proto.ClientQueryReviveInfo\022C" +
      "\n\017clientUseRevive\030\302\014 \001(\0132).com.kys.util." +
      "netty.proto.ClientUseRevive\022S\n\027clientRev" +
      "iveFirstCharge\030\303\014 \001(\01321.com.kys.util.net" +
      "ty.proto.ClientReviveFirstCharge\022K\n\023clie" +
      "ntReviveDayGift\030\304\014 \001(\0132-.com.kys.util.ne" +
      "tty.proto.ClientReviveDayGift\022C\n\017clientG" +
      "etRedTip\030\245\r \001(\0132).com.kys.util.netty.pro" +
      "to.ClientGetRedTip\022I\n\022clientGetMatchInfo",
      "\030\211\016 \001(\0132,.com.kys.util.netty.proto.Clien" +
      "tGetMatchInfo\022M\n\024clientGetMatchDetail\030\212\016" +
      " \001(\0132..com.kys.util.netty.proto.ClientGe" +
      "tMatchDetail\022M\n\024clientGetMatchRecord\030\213\016 " +
      "\001(\0132..com.kys.util.netty.proto.ClientGet" +
      "MatchRecord\022E\n\020clientMatchApply\030\214\016 \001(\0132*" +
      ".com.kys.util.netty.proto.ClientMatchApp" +
      "ly\022G\n\021clientMatchCancel\030\215\016 \001(\0132+.com.kys" +
      ".util.netty.proto.ClientMatchCancel\022M\n\024c" +
      "lientOwnMatchRecord\030\216\016 \001(\0132..com.kys.uti",
      "l.netty.proto.ClientOwnMatchRecord\022O\n\025cl" +
      "ientApplyListChange\030\217\016 \001(\0132/.com.kys.uti" +
      "l.netty.proto.ClientApplyListChange\022E\n\020c" +
      "lientMatchScore\030\220\016 \001(\0132*.com.kys.util.ne" +
      "tty.proto.ClientMatchScore\022G\n\021clientMatc" +
      "hConfig\030\221\016 \001(\0132+.com.kys.util.netty.prot" +
      "o.ClientMatchConfig\022G\n\021clientGetKillCell" +
      "\030\355\016 \001(\0132+.com.kys.util.netty.proto.Clien" +
      "tGetKillCell\022K\n\023clientEnterKillCell\030\356\016 \001" +
      "(\0132-.com.kys.util.netty.proto.ClientEnte",
      "rKillCell\022I\n\022clientQuitKillCell\030\357\016 \001(\0132," +
      ".com.kys.util.netty.proto.ClientQuitKill" +
      "Cell\"\264X\n\016ServerResponse\022\020\n\010methodId\030\001 \001(" +
      "\005\0224\n\006result\030\002 \001(\0162$.com.kys.util.netty.p" +
      "roto.ResultCode\022\016\n\006errStr\030c \001(\t\022:\n\013serve" +
      "rLogin\030\003 \001(\0132%.com.kys.util.netty.proto." +
      "ServerLogin\022E\n\020serverPlayerInfo\030\004 \001(\0132+." +
      "com.kys.util.netty.proto.ServerGetUserIn" +
      "fo\022R\n\027serverSendHallHeartBeat\030\005 \001(\01321.co" +
      "m.kys.util.netty.proto.ServerSendHallHea",
      "rtBeat\022R\n\027serverSendGameHeartBeat\030\006 \001(\0132" +
      "1.com.kys.util.netty.proto.ServerSendGam" +
      "eHeartBeat\022F\n\021serverGetUserInfo\030\007 \001(\0132+." +
      "com.kys.util.netty.proto.ServerGetUserIn" +
      "fo\022B\n\017serverQuickJoin\030d \001(\0132).com.kys.ut" +
      "il.netty.proto.ServerQuickJoin\022B\n\017server" +
      "EnterRoom\030e \001(\0132).com.kys.util.netty.pro" +
      "to.ServerEnterRoom\022F\n\021serverRecoverGame\030" +
      "f \001(\0132+.com.kys.util.netty.proto.ServerR" +
      "ecoverGame\022>\n\rserverDoCatch\030g \001(\0132\'.com.",
      "kys.util.netty.proto.ServerDoCatch\022B\n\017se" +
      "rverPlayCards\030h \001(\0132).com.kys.util.netty" +
      ".proto.ServerPlayCards\022@\n\016serverAutoPlay" +
      "\030i \001(\0132(.com.kys.util.netty.proto.Server" +
      "AutoPlay\022B\n\017serverLeaveRoom\030j \001(\0132).com." +
      "kys.util.netty.proto.ServerLeaveRoom\022D\n\020" +
      "serverCancleJoin\030k \001(\0132*.com.kys.util.ne" +
      "tty.proto.ServerCancleJoin\022D\n\020serverQuer" +
      "yIndex\030l \001(\0132*.com.kys.util.netty.proto." +
      "ServerQueryIndex\022N\n\025serverRetryReturnGam",
      "e\030m \001(\0132/.com.kys.util.netty.proto.Serve" +
      "rRetryReturnGame\022G\n\021serverGetRankList\030\310\001" +
      " \001(\0132+.com.kys.util.netty.proto.ServerGe" +
      "tRankList\022K\n\023serverRewardMessage\030\314\001 \001(\0132" +
      "-.com.kys.util.netty.proto.ServerRewardM" +
      "essage\022K\n\023serverGetRoomConfig\030\316\001 \001(\0132-.c" +
      "om.kys.util.netty.proto.ServerGetRoomCon" +
      "fig\022W\n\031serverGetMonthCardDiamond\030\321\001 \001(\0132" +
      "3.com.kys.util.netty.proto.ServerGetMont" +
      "hCardDiamond\022O\n\025serverGetLotteryCount\030\322\001",
      " \001(\0132/.com.kys.util.netty.proto.ServerGe" +
      "tLotteryCount\022G\n\021serverGetRoomInfo\030\323\001 \001(" +
      "\0132+.com.kys.util.netty.proto.ServerGetRo" +
      "omInfo\022G\n\021serverSendTelCode\030\324\001 \001(\0132+.com" +
      ".kys.util.netty.proto.ServerSendTelCode\022" +
      "K\n\023serverVerifyTelCode\030\325\001 \001(\0132-.com.kys." +
      "util.netty.proto.ServerVerifyTelCode\022I\n\022" +
      "serverSharePackage\030\331\001 \001(\0132,.com.kys.util" +
      ".netty.proto.ServerSharePackage\022I\n\022serve" +
      "rGetAwardList\030\332\001 \001(\0132,.com.kys.util.nett",
      "y.proto.ServerGetAwardList\022I\n\022serverChec" +
      "kConnect\030\333\001 \001(\0132,.com.kys.util.netty.pro" +
      "to.ServerCheckConnect\022C\n\017serverGetPFList" +
      "\030\334\001 \001(\0132).com.kys.util.netty.proto.Serve" +
      "rGetPFList\022A\n\016serverChoosePF\030\335\001 \001(\0132(.co" +
      "m.kys.util.netty.proto.ServerChoosePF\022M\n" +
      "\024serverGetHistoryRank\030\336\001 \001(\0132..com.kys.u" +
      "til.netty.proto.ServerGetHistoryRank\022A\n\016" +
      "serverH5Reward\030\337\001 \001(\0132(.com.kys.util.net" +
      "ty.proto.ServerH5Reward\022K\n\023serverNewDraw",
      "WinCup\030\340\001 \001(\0132-.com.kys.util.netty.proto" +
      ".ServerNewDrawWinCup\022M\n\024serverGetNewHall" +
      "Info\030\341\001 \001(\0132..com.kys.util.netty.proto.S" +
      "erverGetNewHallInfo\022A\n\016serverLuckWall\030\344\001" +
      " \001(\0132(.com.kys.util.netty.proto.ServerLu" +
      "ckWall\022E\n\020serverCdkeyAward\030\345\001 \001(\0132*.com." +
      "kys.util.netty.proto.ServerCdkeyAward\022I\n" +
      "\022serverGetStoreInfo\030\254\002 \001(\0132,.com.kys.uti" +
      "l.netty.proto.ServerGetStoreInfo\022I\n\022serv" +
      "erConvertGoods\030\255\002 \001(\0132,.com.kys.util.net",
      "ty.proto.ServerConvertGoods\022G\n\021serverWXP" +
      "ayResult\030\257\002 \001(\0132+.com.kys.util.netty.pro" +
      "to.ServerWXPayResult\022K\n\023serverBuyOrderGo" +
      "ods\030\260\002 \001(\0132-.com.kys.util.netty.proto.Se" +
      "rverBuyOrderGoods\022M\n\024serverGetFirstCharg" +
      "e\030\261\002 \001(\0132..com.kys.util.netty.proto.Serv" +
      "erGetFirstCharge\022I\n\022serverGetDailyGift\030\262" +
      "\002 \001(\0132,.com.kys.util.netty.proto.ServerG" +
      "etDailyGift\022I\n\022serverGetMonthCard\030\263\002 \001(\013" +
      "2,.com.kys.util.netty.proto.ServerGetMon",
      "thCard\022S\n\027serverGetResurgenceGift\030\264\002 \001(\013" +
      "21.com.kys.util.netty.proto.ServerGetRes" +
      "urgenceGift\022S\n\027serverGetConvertMessage\030\265" +
      "\002 \001(\01321.com.kys.util.netty.proto.ServerG" +
      "etConvertMessage\022G\n\021serverNewBuyOrder\030\266\002" +
      " \001(\0132+.com.kys.util.netty.proto.ServerNe" +
      "wBuyOrder\022E\n\020serverNewConvert\030\267\002 \001(\0132*.c" +
      "om.kys.util.netty.proto.ServerNewConvert" +
      "\022K\n\023serverAlipayAccount\030\270\002 \001(\0132-.com.kys" +
      ".util.netty.proto.ServerAlipayAccount\022E\n",
      "\020serverPayOptions\030\271\002 \001(\0132*.com.kys.util." +
      "netty.proto.ServerPayOptions\022A\n\016serverId" +
      "Verify\030\272\002 \001(\0132(.com.kys.util.netty.proto" +
      ".ServerIdVerify\022G\n\021serverVerifyAward\030\273\002 " +
      "\001(\0132+.com.kys.util.netty.proto.ServerVer" +
      "ifyAward\022E\n\020serverMiniAppPay\030\274\002 \001(\0132*.co" +
      "m.kys.util.netty.proto.ServerMiniAppPay\022" +
      "I\n\022serverUnionAccount\030\275\002 \001(\0132,.com.kys.u" +
      "til.netty.proto.ServerUnionAccount\022G\n\021se" +
      "rverGetAnnounce\030\364\003 \001(\0132+.com.kys.util.ne",
      "tty.proto.ServerGetAnnounce\022?\n\rserverGet" +
      "Mail\030\330\004 \001(\0132\'.com.kys.util.netty.proto.S" +
      "erverGetMail\022K\n\023serverGetMailReward\030\331\004 \001" +
      "(\0132-.com.kys.util.netty.proto.ServerGetM" +
      "ailReward\022?\n\rserverDelMail\030\332\004 \001(\0132\'.com." +
      "kys.util.netty.proto.ServerDelMail\022A\n\016se" +
      "rverReadMail\030\333\004 \001(\0132(.com.kys.util.netty" +
      ".proto.ServerReadMail\022;\n\013serverDel2R\030\334\004 " +
      "\001(\0132%.com.kys.util.netty.proto.ServerDel" +
      "2R\022M\n\024serverQueryDailyTask\030\274\005 \001(\0132..com.",
      "kys.util.netty.proto.ServerQueryDailyTas" +
      "k\022O\n\025serverGetNoviceReward\030\276\005 \001(\0132/.com." +
      "kys.util.netty.proto.ServerGetNoviceRewa" +
      "rd\022O\n\025serverQueryNoviceTask\030\277\005 \001(\0132/.com" +
      ".kys.util.netty.proto.ServerQueryNoviceT" +
      "ask\022E\n\020serverGetDTAward\030\300\005 \001(\0132*.com.kys" +
      ".util.netty.proto.ServerGetDTAward\022M\n\024se" +
      "rverGetReceiveAddr\030\240\006 \001(\0132..com.kys.util" +
      ".netty.proto.ServerGetReceiveAddr\022Q\n\026ser" +
      "verAlterReceiveAddr\030\241\006 \001(\01320.com.kys.uti",
      "l.netty.proto.ServerAlterReceiveAddr\022E\n\020" +
      "serverSnatchList\030\242\006 \001(\0132*.com.kys.util.n" +
      "etty.proto.ServerSnatchList\022Q\n\026serverSna" +
      "tchItemDetail\030\243\006 \001(\01320.com.kys.util.nett" +
      "y.proto.ServerSnatchItemDetail\022C\n\017server" +
      "SnatchBet\030\244\006 \001(\0132).com.kys.util.netty.pr" +
      "oto.ServerSnatchBet\022O\n\025serverSnatchAward" +
      "List\030\245\006 \001(\0132/.com.kys.util.netty.proto.S" +
      "erverSnatchAwardList\022O\n\025serverOwnSnatchR" +
      "ecord\030\246\006 \001(\0132/.com.kys.util.netty.proto.",
      "ServerOwnSnatchRecord\022S\n\027serverSnatchIte" +
      "mHistory\030\247\006 \001(\01321.com.kys.util.netty.pro" +
      "to.ServerSnatchItemHistory\022W\n\031serverSnat" +
      "chHistoryDetail\030\250\006 \001(\01323.com.kys.util.ne" +
      "tty.proto.ServerSnatchHistoryDetail\022M\n\024s" +
      "erverSnatchGetAward\030\251\006 \001(\0132..com.kys.uti" +
      "l.netty.proto.ServerSnatchGetAward\022?\n\rse" +
      "rverEnterDG\030\204\007 \001(\0132\'.com.kys.util.netty." +
      "proto.ServerEnterDG\022C\n\017serverDGLottery\030\205" +
      "\007 \001(\0132).com.kys.util.netty.proto.ServerD",
      "GLottery\022I\n\022serverResetLottery\030\206\007 \001(\0132,." +
      "com.kys.util.netty.proto.ServerResetLott" +
      "ery\022=\n\014serverExitDG\030\207\007 \001(\0132&.com.kys.uti" +
      "l.netty.proto.ServerExitDG\022=\n\014serverOpen" +
      "DG\030\210\007 \001(\0132&.com.kys.util.netty.proto.Ser" +
      "verOpenDG\022=\n\014serverOpenDD\030\211\007 \001(\0132&.com.k" +
      "ys.util.netty.proto.ServerOpenDD\022C\n\017serv" +
      "erDDLottery\030\212\007 \001(\0132).com.kys.util.netty." +
      "proto.ServerDDLottery\022=\n\014serverExitDD\030\213\007" +
      " \001(\0132&.com.kys.util.netty.proto.ServerEx",
      "itDD\022C\n\017serverQueryProp\030\351\007 \001(\0132).com.kys" +
      ".util.netty.proto.ServerQueryProp\022?\n\rser" +
      "verUseProp\030\352\007 \001(\0132\'.com.kys.util.netty.p" +
      "roto.ServerUseProp\022M\n\024serverQueryPropCou" +
      "nt\030\353\007 \001(\0132..com.kys.util.netty.proto.Ser" +
      "verQueryPropCount\022A\n\016serverSignInfo\030\315\010 \001" +
      "(\0132(.com.kys.util.netty.proto.ServerSign" +
      "Info\022C\n\017serverSignAward\030\316\010 \001(\0132).com.kys" +
      ".util.netty.proto.ServerSignAward\022C\n\017ser" +
      "verSignState\030\317\010 \001(\0132).com.kys.util.netty",
      ".proto.ServerSignState\022C\n\017serverLTLotter" +
      "y\030\320\010 \001(\0132).com.kys.util.netty.proto.Serv" +
      "erLTLottery\022G\n\021serverGetTSReward\030\321\010 \001(\0132" +
      "+.com.kys.util.netty.proto.ServerGetTSRe" +
      "ward\022G\n\021serverGetLuckInfo\030\322\010 \001(\0132+.com.k" +
      "ys.util.netty.proto.ServerGetLuckInfo\022=\n" +
      "\014serverGetVip\030\263\t \001(\0132&.com.kys.util.nett" +
      "y.proto.ServerGetVip\022E\n\020serverGetDayGift" +
      "\030\264\t \001(\0132*.com.kys.util.netty.proto.Serve" +
      "rGetDayGift\022G\n\021serverEnterSleeve\030\224\n \001(\0132",
      "+.com.kys.util.netty.proto.ServerEnterSl" +
      "eeve\022G\n\021serverSleeveSheep\030\225\n \001(\0132+.com.k" +
      "ys.util.netty.proto.ServerSleeveSheep\022O\n" +
      "\025serverQueryPlayerCoin\030\226\n \001(\0132/.com.kys." +
      "util.netty.proto.ServerQueryPlayerCoin\022E" +
      "\n\020serverExitSleeve\030\227\n \001(\0132*.com.kys.util" +
      ".netty.proto.ServerExitSleeve\022M\n\024serverE" +
      "nterNewSleeve\030\230\n \001(\0132..com.kys.util.nett" +
      "y.proto.ServerEnterNewSleeve\022M\n\024serverNe" +
      "wSleeveSheep\030\231\n \001(\0132..com.kys.util.netty",
      ".proto.ServerNewSleeveSheep\022O\n\025serverNew" +
      "SleeveResult\030\232\n \001(\0132/.com.kys.util.netty" +
      ".proto.ServerNewSleeveResult\022K\n\023serverEx" +
      "itNewSleeve\030\233\n \001(\0132-.com.kys.util.netty." +
      "proto.ServerExitNewSleeve\022E\n\020server_2_Do" +
      "Catch\030\371\n \001(\0132*.com.kys.util.netty.proto." +
      "Server_2_DoCatch\022I\n\022server_2_PlayCards\030\372" +
      "\n \001(\0132,.com.kys.util.netty.proto.Server_" +
      "2_PlayCards\022M\n\024server_2_RecoverGame\030\373\n \001" +
      "(\0132..com.kys.util.netty.proto.Server_2_R",
      "ecoverGame\022I\n\022server_2_LeaveRoom\030\374\n \001(\0132" +
      ",.com.kys.util.netty.proto.Server_2_Leav" +
      "eRoom\022C\n\017serverMineShare\030\335\013 \001(\0132).com.ky" +
      "s.util.netty.proto.ServerMineShare\022E\n\020se" +
      "rverGetMSAward\030\336\013 \001(\0132*.com.kys.util.net" +
      "ty.proto.ServerGetMSAward\022G\n\021serverFrien" +
      "dShare\030\337\013 \001(\0132+.com.kys.util.netty.proto" +
      ".ServerFriendShare\022E\n\020serverGetFSAward\030\340" +
      "\013 \001(\0132*.com.kys.util.netty.proto.ServerG" +
      "etFSAward\022I\n\022serverGetShareTask\030\341\013 \001(\0132,",
      ".com.kys.util.netty.proto.ServerGetShare" +
      "Task\022S\n\027serverGetShareTaskAward\030\342\013 \001(\01321" +
      ".com.kys.util.netty.proto.ServerGetShare" +
      "TaskAward\022O\n\025serverQueryReviveInfo\030\301\014 \001(" +
      "\0132/.com.kys.util.netty.proto.ServerQuery" +
      "ReviveInfo\022C\n\017serverUseRevive\030\302\014 \001(\0132).c" +
      "om.kys.util.netty.proto.ServerUseRevive\022" +
      "S\n\027serverReviveFirstCharge\030\303\014 \001(\01321.com." +
      "kys.util.netty.proto.ServerReviveFirstCh" +
      "arge\022K\n\023serverReviveDayGift\030\304\014 \001(\0132-.com",
      ".kys.util.netty.proto.ServerReviveDayGif" +
      "t\022C\n\017serverGetRedTip\030\245\r \001(\0132).com.kys.ut" +
      "il.netty.proto.ServerGetRedTip\022I\n\022server" +
      "GetMatchInfo\030\211\016 \001(\0132,.com.kys.util.netty" +
      ".proto.ServerGetMatchInfo\022M\n\024serverGetMa" +
      "tchDetail\030\212\016 \001(\0132..com.kys.util.netty.pr" +
      "oto.ServerGetMatchDetail\022M\n\024serverGetMat" +
      "chRecord\030\213\016 \001(\0132..com.kys.util.netty.pro" +
      "to.ServerGetMatchRecord\022E\n\020serverMatchAp" +
      "ply\030\214\016 \001(\0132*.com.kys.util.netty.proto.Se",
      "rverMatchApply\022G\n\021serverMatchCancel\030\215\016 \001" +
      "(\0132+.com.kys.util.netty.proto.ServerMatc" +
      "hCancel\022M\n\024serverOwnMatchRecord\030\216\016 \001(\0132." +
      ".com.kys.util.netty.proto.ServerOwnMatch" +
      "Record\022O\n\025serverApplyListChange\030\217\016 \001(\0132/" +
      ".com.kys.util.netty.proto.ServerApplyLis" +
      "tChange\022E\n\020serverMatchScore\030\220\016 \001(\0132*.com" +
      ".kys.util.netty.proto.ServerMatchScore\022G" +
      "\n\021serverMatchConfig\030\221\016 \001(\0132+.com.kys.uti" +
      "l.netty.proto.ServerMatchConfig\022G\n\021serve",
      "rGetKillCell\030\355\016 \001(\0132+.com.kys.util.netty" +
      ".proto.ServerGetKillCell\022K\n\023serverEnterK" +
      "illCell\030\356\016 \001(\0132-.com.kys.util.netty.prot" +
      "o.ServerEnterKillCell\022I\n\022serverQuitKillC" +
      "ell\030\357\016 \001(\0132,.com.kys.util.netty.proto.Se" +
      "rverQuitKillCell\022;\n\013b_GameStart\030\222\003 \001(\0132%" +
      ".com.kys.util.netty.proto.B_GameStart\0227\n" +
      "\tb_DoCatch\030\223\003 \001(\0132#.com.kys.util.netty.p" +
      "roto.B_DoCatch\022?\n\rb_CatchResult\030\224\003 \001(\0132\'" +
      ".com.kys.util.netty.proto.B_CatchResult\022",
      ";\n\013b_PlayCards\030\225\003 \001(\0132%.com.kys.util.net" +
      "ty.proto.B_PlayCards\022C\n\017b_SendDiZhuCard\030" +
      "\227\003 \001(\0132).com.kys.util.netty.proto.B_Send" +
      "DiZhuCard\022=\n\014b_NextPlayer\030\230\003 \001(\0132&.com.k" +
      "ys.util.netty.proto.B_NextPlayer\022=\n\014b_Ga" +
      "meSettle\030\231\003 \001(\0132&.com.kys.util.netty.pro" +
      "to.B_GameSettle\022C\n\017b_RewardMessage\030\232\003 \001(" +
      "\0132).com.kys.util.netty.proto.B_RewardMes" +
      "sage\0229\n\nb_AutoPlay\030\233\003 \001(\0132$.com.kys.util" +
      ".netty.proto.B_AutoPlay\022;\n\013b_RoomIdUrl\030\234",
      "\003 \001(\0132%.com.kys.util.netty.proto.B_RoomI" +
      "dUrl\022?\n\rb_AwardDialog\030\235\003 \001(\0132\'.com.kys.u" +
      "til.netty.proto.B_AwardDialog\022=\n\014b_BuySu" +
      "ccess\030\236\003 \001(\0132&.com.kys.util.netty.proto." +
      "B_BuySuccess\022=\n\014b_RedDotPush\030\237\003 \001(\0132&.co" +
      "m.kys.util.netty.proto.B_RedDotPush\022C\n\017b" +
      "_ForceAnnounce\030\240\003 \001(\0132).com.kys.util.net" +
      "ty.proto.B_ForceAnnounce\022A\n\016b_DGameMessa" +
      "ge\030\241\003 \001(\0132(.com.kys.util.netty.proto.B_D" +
      "GameMessage\0225\n\010b_DGOver\030\242\003 \001(\0132\".com.kys",
      ".util.netty.proto.B_DGOver\0225\n\010b_DDOver\030\243" +
      "\003 \001(\0132\".com.kys.util.netty.proto.B_DDOve" +
      "r\0225\n\010b_DDInfo\030\244\003 \001(\0132\".com.kys.util.nett" +
      "y.proto.B_DDInfo\0225\n\010b_SSInfo\030\245\003 \001(\0132\".co" +
      "m.kys.util.netty.proto.B_SSInfo\022M\n\024b_New" +
      "SleeveSheepInfo\030\246\003 \001(\0132..com.kys.util.ne" +
      "tty.proto.B_NewSleeveSheepInfo\022E\n\020b_NewS" +
      "leeverOver\030\247\003 \001(\0132*.com.kys.util.netty.p" +
      "roto.B_NewSleeverOver\022K\n\023b_DiamondRevive" +
      "Info\030\250\003 \001(\0132-.com.kys.util.netty.proto.B",
      "_DiamondReviveInfo\022=\n\014b_2_AutoPlay\030\251\003 \001(" +
      "\0132&.com.kys.util.netty.proto.B_2_AutoPla" +
      "y\022?\n\rb_2_GameStart\030\252\003 \001(\0132\'.com.kys.util" +
      ".netty.proto.B_2_GameStart\022;\n\013b_2_DoCatc" +
      "h\030\253\003 \001(\0132%.com.kys.util.netty.proto.B_2_" +
      "DoCatch\022C\n\017b_2_CatchResult\030\254\003 \001(\0132).com." +
      "kys.util.netty.proto.B_2_CatchResult\022G\n\021" +
      "b_2_SendDiZhuCard\030\255\003 \001(\0132+.com.kys.util." +
      "netty.proto.B_2_SendDiZhuCard\022A\n\016b_2_Gam" +
      "eSettle\030\260\003 \001(\0132(.com.kys.util.netty.prot",
      "o.B_2_GameSettle\022=\n\014b_MatchStart\030\262\003 \001(\0132" +
      "&.com.kys.util.netty.proto.B_MatchStart\022" +
      "9\n\nb_MatchEnd\030\263\003 \001(\0132$.com.kys.util.nett" +
      "y.proto.B_MatchEnd\022?\n\rb_MatchResult\030\264\003 \001" +
      "(\0132\'.com.kys.util.netty.proto.B_MatchRes" +
      "ult*\271\003\n\013ModelIdEnum\022\013\n\007Unknown\020\000\022\014\n\010LOGI" +
      "N_ID\020\n\022\013\n\007GAME_ID\020\013\022\013\n\007ROOM_ID\020\014\022\013\n\007HALL" +
      "_ID\020\r\022\014\n\010STORE_ID\020\016\022\r\n\tPLAYER_ID\020\017\022\013\n\007CH" +
      "AT_ID\020\020\022\r\n\tFRIEND_ID\020\021\022\013\n\007RANK_ID\020\022\022\013\n\007T" +
      "ASK_ID\020\023\022\013\n\007MAIL_ID\020\024\022\r\n\tSIGNUP_ID\020\025\022\020\n\014",
      "BROADCAST_ID\020\026\022\016\n\nGAME_HEART\020\027\022\r\n\tMARKET" +
      "_ID\020\030\022\017\n\013ANNOUNCE_ID\020\031\022\r\n\tSNATCH_ID\020\032\022\026\n" +
      "\022DIAMOND_LOTTERY_ID\020\033\022\013\n\007PROP_ID\020\034\022\n\n\006VI" +
      "P_ID\020\035\022\r\n\tLITTLE_ID\020\036\022\026\n\022TWO_PLAYER_GAME" +
      "_ID\020\037\022\014\n\010SHARE_ID\020 \022\r\n\tREVIVE_ID\020!\022\023\n\017US" +
      "ER_SERVICE_ID\020\"\022\014\n\010MATCH_ID\020#\022\020\n\014ELIMINA" +
      "TE_ID\020$*\3446\n\017MessageTypeEnum\022\t\n\005Error\020\000\022\026" +
      "\n\021clientGetUserInfo\020\365N\022\036\n\031clientReturnHa" +
      "llHeartBeat\020\366N\022\023\n\016clientNewLogin\020\367N\022\037\n\031c" +
      "lientReturnGameHeartBeat\020\277\264\001\022\022\n\rclientDo",
      "Catch\020\216W\022\024\n\017clientPlayCards\020\217W\022\024\n\017client" +
      "EnterRoom\020\220W\022\024\n\017clientLeaveRoom\020\222W\022\026\n\021cl" +
      "ientRecoverGame\020\223W\022\023\n\016clientAutoPlay\020\224W\022" +
      "\025\n\020clientQueryIndex\020\225W\022\024\n\017clientQuickJoi" +
      "n\020\250_\022\025\n\020clientCancleJoin\020\251_\022\032\n\025clientRet" +
      "ryReturnGame\020\252_\022\026\n\021clientGetRankList\020\302g\022" +
      "\030\n\023clientGetRoomConfig\020\306g\022\030\n\023clientRewar" +
      "dMessage\020\310g\022\036\n\031clientGetMonthCardDiamond" +
      "\020\313g\022\032\n\025clientGetLotteryCount\020\314g\022\026\n\021clien" +
      "tGetRoomInfo\020\315g\022\027\n\022clientPlayerLogout\020\316g",
      "\022\027\n\022clientCheckConnect\020\317g\022\024\n\017clientGetPF" +
      "List\020\320g\022\023\n\016clientChoosePF\020\321g\022\031\n\024clientGe" +
      "tHistoryRank\020\322g\022\023\n\016clientH5Reward\020\323g\022\030\n\023" +
      "clientNewDrawWinCup\020\324g\022\031\n\024clientGetNewHa" +
      "llInfo\020\325g\022\023\n\016clientLuckWall\020\330g\022\025\n\020client" +
      "CdkeyAward\020\331g\022\027\n\022clientGetStoreInfo\020\334o\022\027" +
      "\n\022clientConvertGoods\020\335o\022\033\n\026clientWXPayRe" +
      "sultQuery\020\336o\022\030\n\023clientBuyOrderGoods\020\337o\022\031" +
      "\n\024clientGetFirstCharge\020\340o\022\027\n\022clientGetDa" +
      "ilyGift\020\341o\022\027\n\022clientGetMonthCard\020\342o\022\034\n\027c",
      "lientGetResurgenceGift\020\343o\022\034\n\027clientGetCo" +
      "nvertMessage\020\344o\022\026\n\021clientNewBuyOrder\020\345o\022" +
      "\025\n\020clientNewConvert\020\346o\022\030\n\023clientAlipayAc" +
      "count\020\347o\022\025\n\020clientPayOptions\020\350o\022\023\n\016clien" +
      "tIdVerify\020\351o\022\026\n\021clientVerifyAward\020\352o\022\025\n\020" +
      "clientMiniAppPay\020\353o\022\027\n\022clientUnionAccoun" +
      "t\020\354o\022\032\n\024clientQueryDailyTask\020\300\226\001\022\033\n\025clie" +
      "ntGetNoviceReward\020\302\226\001\022\033\n\025clientQueryNovi" +
      "ceTask\020\303\226\001\022\026\n\020clientGetDTAward\020\304\226\001\022\027\n\021cl" +
      "ientGetAnnounce\020\267\305\001\022\027\n\021serverGetAnnounce",
      "\020\311\311\001\022\023\n\rclientGetMail\020\370\240\001\022\031\n\023clientGetMa" +
      "ilReward\020\371\240\001\022\023\n\rclientDelMail\020\372\240\001\022\024\n\016cli" +
      "entReadMail\020\373\240\001\022\021\n\013clientDel2R\020\374\240\001\022\022\n\014cl" +
      "ientGetVip\020\315\342\001\022\026\n\020clientGetDayGift\020\316\342\001\022\022" +
      "\n\014serverGetVip\020\317\342\001\022\026\n\020serverGetDayGift\020\320" +
      "\342\001\022\020\n\013serverLogin\020\204R\022\026\n\021serverGetUserInf" +
      "o\020\205R\022\034\n\027serverSendHallHeartBeat\020\206R\022\035\n\027se" +
      "rverSendGameHeartBeat\020\317\267\001\022\024\n\017serverEnter" +
      "Room\020\236Z\022\022\n\rserverDoCatch\020\237Z\022\024\n\017serverPla" +
      "yCards\020\240Z\022\026\n\021serverRecoverGame\020\241Z\022\023\n\016ser",
      "verAutoPlay\020\242Z\022\024\n\017serverLeaveRoom\020\243Z\022\025\n\020" +
      "serverQueryIndex\020\244Z\022\032\n\025serverRetryReturn" +
      "Game\020\245Z\022\024\n\017serverQuickJoin\020\270b\022\025\n\020serverC" +
      "ancleJoin\020\271b\022\026\n\021serverGetRankList\020\322j\022\030\n\023" +
      "serverRewardMessage\020\326j\022\030\n\023serverGetRoomC" +
      "onfig\020\330j\022\036\n\031serverGetMonthCardDiamond\020\333j" +
      "\022\032\n\025serverGetLotteryCount\020\334j\022\026\n\021serverGe" +
      "tRoomInfo\020\335j\022\027\n\022serverCheckConnect\020\336j\022\024\n" +
      "\017serverGetPFList\020\337j\022\023\n\016serverChoosePF\020\340j" +
      "\022\031\n\024serverGetHistoryRank\020\341j\022\023\n\016serverH5R",
      "eward\020\342j\022\030\n\023serverNewDrawWinCup\020\343j\022\031\n\024se" +
      "rverGetNewHallInfo\020\344j\022\023\n\016serverLuckWall\020" +
      "\347j\022\025\n\020serverCdkeyAward\020\350j\022\027\n\022serverGetSt" +
      "oreInfo\020\354r\022\027\n\022serverConvertGoods\020\355r\022\026\n\021s" +
      "erverWXPayResult\020\356r\022\030\n\023serverBuyOrderGoo" +
      "ds\020\357r\022\031\n\024serverGetFirstCharge\020\360r\022\027\n\022serv" +
      "erGetDailyGift\020\361r\022\027\n\022serverGetMonthCard\020" +
      "\362r\022\034\n\027serverGetResurgenceGift\020\363r\022\034\n\027serv" +
      "erGetConvertMessage\020\364r\022\026\n\021serverNewBuyOr" +
      "der\020\365r\022\025\n\020serverNewConvert\020\366r\022\030\n\023serverA",
      "lipayAccount\020\367r\022\025\n\020serverPayOptions\020\370r\022\023" +
      "\n\016serverIdVerify\020\371r\022\026\n\021serverVerifyAward" +
      "\020\372r\022\025\n\020serverMiniAppPay\020\373r\022\027\n\022serverUnio" +
      "nAccount\020\374r\022\032\n\024serverQueryDailyTask\020\317\231\001\022" +
      "\033\n\025serverGetNoviceReward\020\321\231\001\022\033\n\025serverQu" +
      "eryNoviceTask\020\322\231\001\022\026\n\020serverGetDTAward\020\323\231" +
      "\001\022\027\n\021clientSendTelCode\020\306\275\001\022\031\n\023clientVeri" +
      "fyTelCode\020\307\275\001\022\030\n\022clientSharePackage\020\313\275\001\022" +
      "\030\n\022clientGetAwardList\020\314\275\001\022\027\n\021serverSendT" +
      "elCode\020\326\300\001\022\031\n\023serverVerifyTelCode\020\327\300\001\022\030\n",
      "\022serverSharePackage\020\333\300\001\022\030\n\022serverGetAwar" +
      "dList\020\334\300\001\022\023\n\rserverGetMail\020\252\241\001\022\031\n\023server" +
      "GetMailReward\020\253\241\001\022\023\n\rserverDelMail\020\254\241\001\022\024" +
      "\n\016serverReadMail\020\255\241\001\022\021\n\013serverDel2R\020\256\241\001\022" +
      "\032\n\024clientGetReceiveAddr\020\221\313\001\022\034\n\026clientAlt" +
      "erReceiveAddr\020\222\313\001\022\026\n\020clientSnatchList\020\223\313" +
      "\001\022\034\n\026clientSnatchItemDetail\020\224\313\001\022\025\n\017clien" +
      "tSnatchBet\020\225\313\001\022\033\n\025clientSnatchAwardList\020" +
      "\226\313\001\022\033\n\025clientOwnSnatchRecord\020\227\313\001\022\035\n\027clie" +
      "ntSnatchItemHistory\020\230\313\001\022\037\n\031clientSnatchH",
      "istoryDetail\020\231\313\001\022\032\n\024clientSnatchGetAward" +
      "\020\232\313\001\022\032\n\024serverGetReceiveAddr\020\205\317\001\022\034\n\026serv" +
      "erAlterReceiveAddr\020\206\317\001\022\026\n\020serverSnatchLi" +
      "st\020\207\317\001\022\034\n\026serverSnatchItemDetail\020\210\317\001\022\025\n\017" +
      "serverSnatchBet\020\211\317\001\022\033\n\025serverSnatchAward" +
      "List\020\212\317\001\022\033\n\025serverOwnSnatchRecord\020\213\317\001\022\035\n" +
      "\027serverSnatchItemHistory\020\214\317\001\022\037\n\031serverSn" +
      "atchHistoryDetail\020\215\317\001\022\032\n\024serverSnatchGet" +
      "Award\020\216\317\001\022\023\n\rclientEnterDG\020\371\322\001\022\025\n\017client" +
      "DGLottery\020\372\322\001\022\030\n\022clientResetLottery\020\373\322\001\022",
      "\022\n\014clientExitDG\020\374\322\001\022\022\n\014clientOpenDG\020\375\322\001\022" +
      "\022\n\014clientOpenDD\020\376\322\001\022\025\n\017clientDDLottery\020\377" +
      "\322\001\022\022\n\014clientExitDD\020\200\323\001\022\023\n\rserverEnterDG\020" +
      "\355\326\001\022\025\n\017serverDGLottery\020\356\326\001\022\030\n\022serverRese" +
      "tLottery\020\357\326\001\022\022\n\014serverExitDG\020\360\326\001\022\022\n\014serv" +
      "erOpenDG\020\361\326\001\022\022\n\014serverOpenDD\020\362\326\001\022\025\n\017serv" +
      "erDDLottery\020\363\326\001\022\022\n\014serverExitDD\020\364\326\001\022\025\n\017c" +
      "lientQueryProp\020\341\332\001\022\023\n\rclientUseProp\020\342\332\001\022" +
      "\032\n\024clientQueryPropCount\020\343\332\001\022\036\n\030clientQue" +
      "ryDiamondRevive\020\344\332\001\022\025\n\017serverQueryProp\020\325",
      "\336\001\022\023\n\rserverUseProp\020\326\336\001\022\032\n\024serverQueryPr" +
      "opCount\020\327\336\001\022\037\n\031serverReturnDiamondRevive" +
      "\020\330\336\001\022\024\n\016clientSignInfo\020\211\244\001\022\025\n\017clientSign" +
      "Award\020\212\244\001\022\025\n\017clientSignState\020\213\244\001\022\025\n\017clie" +
      "ntLTLottery\020\214\244\001\022\027\n\021clientGetTSReward\020\215\244\001" +
      "\022\027\n\021clientGetLuckInfo\020\216\244\001\022\024\n\016serverSignI" +
      "nfo\020\375\247\001\022\025\n\017serverSignAward\020\376\247\001\022\025\n\017server" +
      "SignState\020\377\247\001\022\025\n\017serverLTLottery\020\200\250\001\022\027\n\021" +
      "serverGetTSReward\020\201\250\001\022\027\n\021serverGetLuckIn" +
      "fo\020\202\250\001\022\027\n\021clientEnterSleeve\020\261\352\001\022\027\n\021clien",
      "tSleeveSheep\020\262\352\001\022\033\n\025clientQueryPlayerCoi" +
      "n\020\263\352\001\022\026\n\020clientExitSleeve\020\264\352\001\022\032\n\024clientE" +
      "nterNewSleeve\020\265\352\001\022\032\n\024clientNewSleeveShee" +
      "p\020\266\352\001\022\033\n\025clientNewSleeveResult\020\267\352\001\022\031\n\023cl" +
      "ientExitNewSleeve\020\270\352\001\022\027\n\021serverEnterSlee" +
      "ve\020\371\353\001\022\027\n\021serverSleeveSheep\020\372\353\001\022\033\n\025serve" +
      "rQueryPlayerCoin\020\373\353\001\022\026\n\020serverExitSleeve" +
      "\020\374\353\001\022\032\n\024serverEnterNewSleeve\020\375\353\001\022\032\n\024serv" +
      "erNewSleeveSheep\020\376\353\001\022\033\n\025serverNewSleeveR" +
      "esult\020\377\353\001\022\031\n\023serverExitNewSleeve\020\200\354\001\022\026\n\020",
      "client_2_DoCatch\020\231\362\001\022\030\n\022client_2_PlayCar" +
      "ds\020\232\362\001\022\032\n\024client_2_RecoverGame\020\233\362\001\022\030\n\022cl" +
      "ient_2_LeaveRoom\020\234\362\001\022\026\n\020server_2_DoCatch" +
      "\020\215\366\001\022\030\n\022server_2_PlayCards\020\216\366\001\022\032\n\024server" +
      "_2_RecoverGame\020\217\366\001\022\030\n\022server_2_LeaveRoom" +
      "\020\220\366\001\022\025\n\017clientMineShare\020\201\372\001\022\027\n\021clientFri" +
      "endShare\020\202\372\001\022\026\n\020clientGetMSAward\020\203\372\001\022\026\n\020" +
      "clientGetFSAward\020\204\372\001\022\030\n\022clientGetShareTa" +
      "sk\020\205\372\001\022\035\n\027clientGetShareTaskAward\020\206\372\001\022\025\n" +
      "\017serverMineShare\020\365\375\001\022\027\n\021serverFriendShar",
      "e\020\366\375\001\022\026\n\020serverGetMSAward\020\367\375\001\022\026\n\020serverG" +
      "etFSAward\020\370\375\001\022\030\n\022serverGetShareTask\020\371\375\001\022" +
      "\035\n\027serverGetShareTaskAward\020\372\375\001\022\033\n\025client" +
      "QueryReviveInfo\020\351\201\002\022\025\n\017clientUseRevive\020\352" +
      "\201\002\022\035\n\027clientReviveFirstCharge\020\353\201\002\022\031\n\023cli" +
      "entReviveDayGift\020\354\201\002\022\033\n\025serverQueryReviv" +
      "eInfo\020\335\205\002\022\025\n\017serverUseRevive\020\336\205\002\022\035\n\027serv" +
      "erReviveFirstCharge\020\337\205\002\022\031\n\023serverReviveD" +
      "ayGift\020\340\205\002\022\025\n\017clientGetRedTip\020\321\211\002\022\025\n\017ser" +
      "verGetRedTip\020\305\215\002\022\030\n\022clientGetMatchInfo\020\271",
      "\221\002\022\032\n\024clientGetMatchDetail\020\272\221\002\022\032\n\024client" +
      "GetMatchRecord\020\273\221\002\022\026\n\020clientMatchApply\020\274" +
      "\221\002\022\027\n\021clientMatchCancel\020\275\221\002\022\032\n\024clientOwn" +
      "MatchRecord\020\276\221\002\022\033\n\025clientApplyListChange" +
      "\020\277\221\002\022\026\n\020clientMatchScore\020\300\221\002\022\027\n\021clientMa" +
      "tchConfig\020\301\221\002\022\027\n\021clientGetKillCell\020\241\231\002\022\031" +
      "\n\023clientEnterKillCell\020\242\231\002\022\030\n\022clientQuitK" +
      "illCell\020\243\231\002\022\030\n\022serverGetMatchInfo\020\255\225\002\022\032\n" +
      "\024serverGetMatchDetail\020\256\225\002\022\032\n\024serverGetMa" +
      "tchRecord\020\257\225\002\022\026\n\020serverMatchApply\020\260\225\002\022\027\n",
      "\021serverMatchCancel\020\261\225\002\022\032\n\024serverOwnMatch" +
      "Record\020\262\225\002\022\033\n\025serverApplyListChange\020\263\225\002\022" +
      "\026\n\020serverMatchScore\020\264\225\002\022\027\n\021serverMatchCo" +
      "nfig\020\265\225\002\022\027\n\021serverGetKillCell\020\225\235\002\022\031\n\023ser" +
      "verEnterKillCell\020\226\235\002\022\030\n\022serverQuitKillCe" +
      "ll\020\227\235\002\022\021\n\013b_EnterRoom\020\361\253\001\022\021\n\013b_GameStart" +
      "\020\362\253\001\022\017\n\tb_DoCatch\020\363\253\001\022\023\n\rb_CatchResult\020\364" +
      "\253\001\022\021\n\013b_PlayCards\020\365\253\001\022\025\n\017b_SendDiZhuCard" +
      "\020\367\253\001\022\022\n\014b_NextPlayer\020\370\253\001\022\022\n\014b_GameSettle" +
      "\020\371\253\001\022\025\n\017b_RewardMessage\020\372\253\001\022\020\n\nb_AutoPla",
      "y\020\373\253\001\022\021\n\013b_RoomIdUrl\020\374\253\001\022\023\n\rb_AwardDialo" +
      "g\020\375\253\001\022\022\n\014b_BuySuccess\020\376\253\001\022\022\n\014b_RedDotPus" +
      "h\020\377\253\001\022\025\n\017b_ForceAnnounce\020\200\254\001\022\024\n\016b_DGameM" +
      "essage\020\201\254\001\022\016\n\010b_DGOver\020\202\254\001\022\016\n\010b_DDOver\020\203" +
      "\254\001\022\016\n\010b_DDInfo\020\204\254\001\022\016\n\010b_SSInfo\020\205\254\001\022\032\n\024b_" +
      "NewSleeveSheepInfo\020\206\254\001\022\026\n\020b_NewSleeverOv" +
      "er\020\207\254\001\022\031\n\023b_DiamondReviveInfo\020\210\254\001\022\022\n\014b_2" +
      "_AutoPlay\020\211\254\001\022\023\n\rb_2_GameStart\020\212\254\001\022\021\n\013b_" +
      "2_DoCatch\020\213\254\001\022\025\n\017b_2_CatchResult\020\214\254\001\022\027\n\021" +
      "b_2_SendDiZhuCard\020\215\254\001\022\024\n\016b_2_GameSettle\020",
      "\220\254\001\022\022\n\014b_MatchStart\020\222\254\001\022\020\n\nb_MatchEnd\020\223\254" +
      "\001\022\023\n\rb_MatchResult\020\224\254\001*\350\023\n\nResultCode\022\013\n" +
      "\007success\020\000\022\007\n\003err\020\001\022\017\n\013errNoMethod\020\002\022\r\n\t" +
      "errNulMsg\020\003\022\023\n\017errLoginInvalid\020\004\022\021\n\rerrN" +
      "etConnect\020\005\022\022\n\016errGameNotOver\020\006\022\014\n\010errLo" +
      "gin\020d\022\030\n\024errLoginTokenInvalid\020e\022\017\n\013errLo" +
      "ginBan\020f\022\025\n\021errLoginReconnect\020g\022\014\n\007errRa" +
      "nk\020\254\002\022\021\n\014errRankEmpty\020\255\002\022\017\n\nerrLottery\020\220" +
      "\003\022\030\n\023errLotteryNotEnough\020\221\003\022\014\n\007errShop\020\364" +
      "\003\022\030\n\023errShopItemNotExist\020\365\003\022\031\n\024errShopCh",
      "ipNotEnough\020\366\003\022\027\n\022errDailyGiftNoLeft\020\367\003\022" +
      "\035\n\030errGoldcoinResGiftNoLeft\020\370\003\022\034\n\027errDia" +
      "mondResGiftNoLeft\020\371\003\022\031\n\024errUnmatchBuyRes" +
      "Gift\020\372\003\022\032\n\025errNotFollowWxAccount\020\373\003\022\025\n\020e" +
      "rrConvertFailed\020\374\003\022\022\n\rerrNotBindTel\020\375\003\022\024" +
      "\n\017errEnPayNoMoney\020\376\003\022\024\n\017errWxRedNoMoney\020" +
      "\377\003\022\022\n\rerrChargeOver\020\200\004\022\025\n\020errWxSystemErr" +
      "or\020\201\004\022\027\n\022errLotteryWaitTime\020\202\004\022\027\n\022errExc" +
      "hangeExhaust\020\203\004\022\014\n\007errRoom\020\330\004\022\031\n\024errRoom" +
      "ChipNotEnough\020\331\004\022\034\n\027errRoomDiamondNotEno",
      "ugh\020\332\004\022\024\n\017errRoomNotExist\020\333\004\022\021\n\014errRoomN" +
      "otIn\020\334\004\022\026\n\021errRoomChipToMuch\020\335\004\022\031\n\024errRo" +
      "omDiamondToMuch\020\336\004\022\022\n\rerrUserIsNull\020\275\005\022\014" +
      "\n\007errGame\020\240\006\022\030\n\023errGameRoomNotExist\020\241\006\022\024" +
      "\n\017errGameAutoPlay\020\242\006\022\027\n\022errGameInvaildOp" +
      "er\020\243\006\022\035\n\030errGameInvaildCatchPoint\020\244\006\022\031\n\024" +
      "errGameEnterRoomFail\020\245\006\022\027\n\022errGamePlayer" +
      "NotIn\020\246\006\022\027\n\022errGameCardInvaild\020\247\006\022\n\n\005err" +
      "Pm\020\204\007\022\027\n\022errPmTelNumInvaild\020\205\007\022\030\n\023errPmV" +
      "erifyCodeFail\020\206\007\022\033\n\026errPmGetAwardNotFini",
      "sh\020\207\007\022\034\n\027errPmGetAwardNotBindTel\020\210\007\022\025\n\020e" +
      "rrPmAlreadyBind\020\211\007\022!\n\034errPmRequestInterv" +
      "alTooShort\020\212\007\022\032\n\025errPmSharePackageFail\020\213" +
      "\007\022\021\n\014errPmNoSlave\020\214\007\022\031\n\024errPmNotRelation" +
      "ship\020\215\007\022\030\n\023errPmTelAlreadyUsed\020\216\007\022\025\n\020err" +
      "AwardMsgIsNul\020\350\007\022\026\n\021errGetDailyFailed\020\314\010" +
      "\022\031\n\024errNoviceTaskexpired\020\260\t\022\027\n\022errGetNov" +
      "iceFailed\020\261\t\022\022\n\rerrDeleteMail\020\224\n\022\016\n\terrS" +
      "natch\020\370\n\022\025\n\020errSnatchGetList\020\371\n\022\030\n\023errSn" +
      "atchInvaildBet\020\372\n\022\035\n\030errSnatchWincupNotE",
      "nough\020\373\n\022\035\n\030errSnatchInvaildGetAward\020\374\n\022" +
      "\035\n\030errSnatchNoMoreHistories\020\375\n\022\037\n\032errSna" +
      "tchRequireAddrDetail\020\376\n\022\n\n\005errDG\020\334\013\022\021\n\014e" +
      "rrDGExpired\020\335\013\022\021\n\014errBoxIsOver\020\336\013\022\r\n\010err" +
      "Reset\020\337\013\022\016\n\terrOpenDg\020\340\013\022\022\n\rerrNoLeftCon" +
      "t\020\341\013\022\020\n\013errNoChance\020\342\013\022\014\n\007errProp\020\300\014\022\033\n\026" +
      "errPropNotHaveThisProp\020\301\014\022\034\n\027errNotMatch" +
      "UseCondition\020\302\014\022\014\n\007errSign\020\244\r\022\023\n\016errSign" +
      "Repeate\020\245\r\022\030\n\023errSignRSCNotEnough\020\246\r\022\030\n\023" +
      "errSignRSDNotEnough\020\247\r\022\020\n\013errSignTime\020\250\r",
      "\022\016\n\terrSignLT\020\251\r\022\023\n\016errSignVipLack\020\252\r\022\030\n" +
      "\023errSignRewardHasGet\020\253\r\022\030\n\023errSignDayNot" +
      "Enough\020\254\r\022\026\n\021errVipLvNotEnough\020\211\016\022\036\n\031err" +
      "VipWeekAwardAlreadyGet\020\212\016\022\034\n\027errVipAlrea" +
      "dyGetDayGift\020\213\016\022\025\n\020errVipNotLottery\020\214\016\022\n" +
      "\n\005errDD\020\354\016\022\022\n\rerrDNotEnough\020\355\016\022\017\n\nerrDDC" +
      "lose\020\356\016\022\027\n\022errDTimesNotEnough\020\357\016\022\031\n\024errR" +
      "eviveExceedLimit\020\321\017\022\027\n\022errReviveNotEnoug" +
      "h\020\322\017\022\027\n\022errReviveGoldLimit\020\323\017\022\026\n\021errMatc" +
      "hApplyOver\020\265\020\022\037\n\032errMatchApplyCardNotEno",
      "ugh\020\266\020\022\027\n\022errMatchCancelFail\020\267\020\022\020\n\013errId" +
      "Verify\020\231\021\022\026\n\021errIdVerifyFormat\020\232\021\022\025\n\020err" +
      "GoldNotEnough\020\375\021\022\022\n\rerrCdkeyFaild\020\341\022\022\020\n\013" +
      "errCdkeyErr\020\342\022\022\024\n\017errCdkeyExpired\020\343\022\022\025\n\020" +
      "errCdkeyReceived\020\344\022\022\024\n\017errCdkeyGetOver\020\345" +
      "\022b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kys.util.netty.proto.LoginProto.getDescriptor(),
          com.kys.util.netty.proto.UserProto.getDescriptor(),
          com.kys.util.netty.proto.GameProto.getDescriptor(),
          com.kys.util.netty.proto.StoreProto.getDescriptor(),
          com.kys.util.netty.proto.HallProto.getDescriptor(),
          com.kys.util.netty.proto.SnatchProto.getDescriptor(),
          com.kys.util.netty.proto.PropProto.getDescriptor(),
          com.kys.util.netty.proto.SignProto.getDescriptor(),
          com.kys.util.netty.proto.VipProto.getDescriptor(),
          com.kys.util.netty.proto.LittleProto.getDescriptor(),
          com.kys.util.netty.proto.Game2Proto.getDescriptor(),
          com.kys.util.netty.proto.ShareProto.getDescriptor(),
          com.kys.util.netty.proto.ReviveProto.getDescriptor(),
          com.kys.util.netty.proto.MatchProto.getDescriptor(),
          com.kys.util.netty.proto.Triplekill.getDescriptor(),
        }, assigner);
    internal_static_com_kys_util_netty_proto_ClientRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_kys_util_netty_proto_ClientRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_kys_util_netty_proto_ClientRequest_descriptor,
        new java.lang.String[] { "UserId", "MethodId", "ClientPlayerInfo", "ClientReturnHallHeartBeat", "ClientReturnGameHeartBeat", "ClientGetUserInfo", "ClientNewLogin", "ClientQuickJoin", "ClientEnterRoom", "ClientDoCatch", "ClientPlayCards", "ClientRecoverGame", "ClientAutoPlay", "ClientLeaveRoom", "ClientCancleJoin", "ClientQueryIndex", "ClientRetryReturnGame", "ClientGetRankList", "ClientGetRoomConfig", "ClientRewardMessage", "ClientGetMonthCardDiamond", "ClientGetLotteryCount", "ClientGetRoomInfo", "ClientSendTelCode", "ClientVerifyTelCode", "ClientSharePackage", "ClientGetAwardList", "ClientPlayerLogout", "ClientCheckConnect", "ClientGetPFList", "ClientChoosePF", "ClientGetHistoryRank", "ClientH5Reward", "ClientNewDrawWinCup", "ClientGetNewHallInfo", "ClientLuckWall", "ClientCdkeyAward", "ClientGetStoreInfo", "ClientConvertGoods", "ClientWXPayResultQuery", "ClientBuyOrderGoods", "ClientGetFirstCharge", "ClientGetDailyGift", "ClientGetMonthCard", "ClientGetResurgenceGift", "ClientGetConvertMessage", "ClientNewBuyOrder", "ClientNewConvert", "ClientAlipayAccount", "ClientPayOptions", "ClientIdVerify", "ClientVerifyAward", "ClientMiniAppPay", "ClientUnionAccount", "ClientGetAnnounce", "ClientGetMail", "ClientGetMailReward", "ClientDelMail", "ClientReadMail", "ClientDel2R", "ClientQueryDailyTask", "ClientGetNoviceReward", "ClientQueryNoviceTask", "ClientGetDTAward", "ClientGetReceiveAddr", "ClientAlterReceiveAddr", "ClientSnatchList", "ClientSnatchItemDetail", "ClientSnatchBet", "ClientSnatchAwardList", "ClientOwnSnatchRecord", "ClientSnatchItemHistory", "ClientSnatchHistoryDetail", "ClientSnatchGetAward", "ClientEnterDG", "ClientDGLottery", "ClientResetLottery", "ClientExitDG", "ClientOpenDG", "ClientOpenDD", "ClientDDLottery", "ClientExitDD", "ClientQueryProp", "ClientUseProp", "ClientQueryPropCount", "ClientSignInfo", "ClientSignAward", "ClientSignState", "ClientLTLottery", "ClientGetTSReward", "ClientGetLuckInfo", "ClientGetVip", "ClientGetDayGift", "ClientEnterSleeve", "ClientSleeveSheep", "ClientQueryPlayerCoin", "ClientExitSleeve", "ClientEnterNewSleeve", "ClientNewSleeveSheep", "ClientNewSleeveResult", "ClientExitNewSleeve", "Client2DoCatch", "Client2PlayCards", "Client2RecoverGame", "Client2LeaveRoom", "ClientMineShare", "ClientGetMSAward", "ClientFriendShare", "ClientGetFSAward", "ClientGetShareTask", "ClientGetShareTaskAward", "ClientQueryReviveInfo", "ClientUseRevive", "ClientReviveFirstCharge", "ClientReviveDayGift", "ClientGetRedTip", "ClientGetMatchInfo", "ClientGetMatchDetail", "ClientGetMatchRecord", "ClientMatchApply", "ClientMatchCancel", "ClientOwnMatchRecord", "ClientApplyListChange", "ClientMatchScore", "ClientMatchConfig", "ClientGetKillCell", "ClientEnterKillCell", "ClientQuitKillCell", });
    internal_static_com_kys_util_netty_proto_ServerResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_kys_util_netty_proto_ServerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_kys_util_netty_proto_ServerResponse_descriptor,
        new java.lang.String[] { "MethodId", "Result", "ErrStr", "ServerLogin", "ServerPlayerInfo", "ServerSendHallHeartBeat", "ServerSendGameHeartBeat", "ServerGetUserInfo", "ServerQuickJoin", "ServerEnterRoom", "ServerRecoverGame", "ServerDoCatch", "ServerPlayCards", "ServerAutoPlay", "ServerLeaveRoom", "ServerCancleJoin", "ServerQueryIndex", "ServerRetryReturnGame", "ServerGetRankList", "ServerRewardMessage", "ServerGetRoomConfig", "ServerGetMonthCardDiamond", "ServerGetLotteryCount", "ServerGetRoomInfo", "ServerSendTelCode", "ServerVerifyTelCode", "ServerSharePackage", "ServerGetAwardList", "ServerCheckConnect", "ServerGetPFList", "ServerChoosePF", "ServerGetHistoryRank", "ServerH5Reward", "ServerNewDrawWinCup", "ServerGetNewHallInfo", "ServerLuckWall", "ServerCdkeyAward", "ServerGetStoreInfo", "ServerConvertGoods", "ServerWXPayResult", "ServerBuyOrderGoods", "ServerGetFirstCharge", "ServerGetDailyGift", "ServerGetMonthCard", "ServerGetResurgenceGift", "ServerGetConvertMessage", "ServerNewBuyOrder", "ServerNewConvert", "ServerAlipayAccount", "ServerPayOptions", "ServerIdVerify", "ServerVerifyAward", "ServerMiniAppPay", "ServerUnionAccount", "ServerGetAnnounce", "ServerGetMail", "ServerGetMailReward", "ServerDelMail", "ServerReadMail", "ServerDel2R", "ServerQueryDailyTask", "ServerGetNoviceReward", "ServerQueryNoviceTask", "ServerGetDTAward", "ServerGetReceiveAddr", "ServerAlterReceiveAddr", "ServerSnatchList", "ServerSnatchItemDetail", "ServerSnatchBet", "ServerSnatchAwardList", "ServerOwnSnatchRecord", "ServerSnatchItemHistory", "ServerSnatchHistoryDetail", "ServerSnatchGetAward", "ServerEnterDG", "ServerDGLottery", "ServerResetLottery", "ServerExitDG", "ServerOpenDG", "ServerOpenDD", "ServerDDLottery", "ServerExitDD", "ServerQueryProp", "ServerUseProp", "ServerQueryPropCount", "ServerSignInfo", "ServerSignAward", "ServerSignState", "ServerLTLottery", "ServerGetTSReward", "ServerGetLuckInfo", "ServerGetVip", "ServerGetDayGift", "ServerEnterSleeve", "ServerSleeveSheep", "ServerQueryPlayerCoin", "ServerExitSleeve", "ServerEnterNewSleeve", "ServerNewSleeveSheep", "ServerNewSleeveResult", "ServerExitNewSleeve", "Server2DoCatch", "Server2PlayCards", "Server2RecoverGame", "Server2LeaveRoom", "ServerMineShare", "ServerGetMSAward", "ServerFriendShare", "ServerGetFSAward", "ServerGetShareTask", "ServerGetShareTaskAward", "ServerQueryReviveInfo", "ServerUseRevive", "ServerReviveFirstCharge", "ServerReviveDayGift", "ServerGetRedTip", "ServerGetMatchInfo", "ServerGetMatchDetail", "ServerGetMatchRecord", "ServerMatchApply", "ServerMatchCancel", "ServerOwnMatchRecord", "ServerApplyListChange", "ServerMatchScore", "ServerMatchConfig", "ServerGetKillCell", "ServerEnterKillCell", "ServerQuitKillCell", "BGameStart", "BDoCatch", "BCatchResult", "BPlayCards", "BSendDiZhuCard", "BNextPlayer", "BGameSettle", "BRewardMessage", "BAutoPlay", "BRoomIdUrl", "BAwardDialog", "BBuySuccess", "BRedDotPush", "BForceAnnounce", "BDGameMessage", "BDGOver", "BDDOver", "BDDInfo", "BSSInfo", "BNewSleeveSheepInfo", "BNewSleeverOver", "BDiamondReviveInfo", "B2AutoPlay", "B2GameStart", "B2DoCatch", "B2CatchResult", "B2SendDiZhuCard", "B2GameSettle", "BMatchStart", "BMatchEnd", "BMatchResult", });
    com.kys.util.netty.proto.LoginProto.getDescriptor();
    com.kys.util.netty.proto.UserProto.getDescriptor();
    com.kys.util.netty.proto.GameProto.getDescriptor();
    com.kys.util.netty.proto.StoreProto.getDescriptor();
    com.kys.util.netty.proto.HallProto.getDescriptor();
    com.kys.util.netty.proto.SnatchProto.getDescriptor();
    com.kys.util.netty.proto.PropProto.getDescriptor();
    com.kys.util.netty.proto.SignProto.getDescriptor();
    com.kys.util.netty.proto.VipProto.getDescriptor();
    com.kys.util.netty.proto.LittleProto.getDescriptor();
    com.kys.util.netty.proto.Game2Proto.getDescriptor();
    com.kys.util.netty.proto.ShareProto.getDescriptor();
    com.kys.util.netty.proto.ReviveProto.getDescriptor();
    com.kys.util.netty.proto.MatchProto.getDescriptor();
    com.kys.util.netty.proto.Triplekill.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
