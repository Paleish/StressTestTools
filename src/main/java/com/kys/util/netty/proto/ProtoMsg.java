// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoMsg.proto

package com.kys.util.netty.proto;

public final class ProtoMsg {
  private ProtoMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.kys.util.netty.proto.ModelIdEnum}
   */
  public enum ModelIdEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Unknown = 0;</code>
     */
    Unknown(0),
    /**
     * <pre>
     ** MODEL ID 
     * </pre>
     *
     * <code>LOGIN_ID = 10;</code>
     */
    LOGIN_ID(10),
    /**
     * <code>GAME_ID = 11;</code>
     */
    GAME_ID(11),
    /**
     * <code>ROOM_ID = 12;</code>
     */
    ROOM_ID(12),
    /**
     * <code>HALL_ID = 13;</code>
     */
    HALL_ID(13),
    /**
     * <code>STORE_ID = 14;</code>
     */
    STORE_ID(14),
    /**
     * <code>PLAYER_ID = 15;</code>
     */
    PLAYER_ID(15),
    /**
     * <code>CHAT_ID = 16;</code>
     */
    CHAT_ID(16),
    /**
     * <code>FRIEND_ID = 17;</code>
     */
    FRIEND_ID(17),
    /**
     * <code>RANK_ID = 18;</code>
     */
    RANK_ID(18),
    /**
     * <code>TASK_ID = 19;</code>
     */
    TASK_ID(19),
    /**
     * <code>MAIL_ID = 20;</code>
     */
    MAIL_ID(20),
    /**
     * <code>SIGNUP_ID = 21;</code>
     */
    SIGNUP_ID(21),
    /**
     * <code>BROADCAST_ID = 22;</code>
     */
    BROADCAST_ID(22),
    /**
     * <code>GAME_HEART = 23;</code>
     */
    GAME_HEART(23),
    /**
     * <code>MARKET_ID = 24;</code>
     */
    MARKET_ID(24),
    /**
     * <pre>
     * 公告
     * </pre>
     *
     * <code>ANNOUNCE_ID = 25;</code>
     */
    ANNOUNCE_ID(25),
    /**
     * <pre>
     * 夺宝商城
     * </pre>
     *
     * <code>SNATCH_ID = 26;</code>
     */
    SNATCH_ID(26),
    /**
     * <pre>
     * 钻石相关活动
     * </pre>
     *
     * <code>DIAMOND_LOTTERY_ID = 27;</code>
     */
    DIAMOND_LOTTERY_ID(27),
    /**
     * <pre>
     * 道具背包
     * </pre>
     *
     * <code>PROP_ID = 28;</code>
     */
    PROP_ID(28),
    /**
     * <pre>
     * VIP
     * </pre>
     *
     * <code>VIP_ID = 29;</code>
     */
    VIP_ID(29),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Unknown = 0;</code>
     */
    public static final int Unknown_VALUE = 0;
    /**
     * <pre>
     ** MODEL ID 
     * </pre>
     *
     * <code>LOGIN_ID = 10;</code>
     */
    public static final int LOGIN_ID_VALUE = 10;
    /**
     * <code>GAME_ID = 11;</code>
     */
    public static final int GAME_ID_VALUE = 11;
    /**
     * <code>ROOM_ID = 12;</code>
     */
    public static final int ROOM_ID_VALUE = 12;
    /**
     * <code>HALL_ID = 13;</code>
     */
    public static final int HALL_ID_VALUE = 13;
    /**
     * <code>STORE_ID = 14;</code>
     */
    public static final int STORE_ID_VALUE = 14;
    /**
     * <code>PLAYER_ID = 15;</code>
     */
    public static final int PLAYER_ID_VALUE = 15;
    /**
     * <code>CHAT_ID = 16;</code>
     */
    public static final int CHAT_ID_VALUE = 16;
    /**
     * <code>FRIEND_ID = 17;</code>
     */
    public static final int FRIEND_ID_VALUE = 17;
    /**
     * <code>RANK_ID = 18;</code>
     */
    public static final int RANK_ID_VALUE = 18;
    /**
     * <code>TASK_ID = 19;</code>
     */
    public static final int TASK_ID_VALUE = 19;
    /**
     * <code>MAIL_ID = 20;</code>
     */
    public static final int MAIL_ID_VALUE = 20;
    /**
     * <code>SIGNUP_ID = 21;</code>
     */
    public static final int SIGNUP_ID_VALUE = 21;
    /**
     * <code>BROADCAST_ID = 22;</code>
     */
    public static final int BROADCAST_ID_VALUE = 22;
    /**
     * <code>GAME_HEART = 23;</code>
     */
    public static final int GAME_HEART_VALUE = 23;
    /**
     * <code>MARKET_ID = 24;</code>
     */
    public static final int MARKET_ID_VALUE = 24;
    /**
     * <pre>
     * 公告
     * </pre>
     *
     * <code>ANNOUNCE_ID = 25;</code>
     */
    public static final int ANNOUNCE_ID_VALUE = 25;
    /**
     * <pre>
     * 夺宝商城
     * </pre>
     *
     * <code>SNATCH_ID = 26;</code>
     */
    public static final int SNATCH_ID_VALUE = 26;
    /**
     * <pre>
     * 钻石相关活动
     * </pre>
     *
     * <code>DIAMOND_LOTTERY_ID = 27;</code>
     */
    public static final int DIAMOND_LOTTERY_ID_VALUE = 27;
    /**
     * <pre>
     * 道具背包
     * </pre>
     *
     * <code>PROP_ID = 28;</code>
     */
    public static final int PROP_ID_VALUE = 28;
    /**
     * <pre>
     * VIP
     * </pre>
     *
     * <code>VIP_ID = 29;</code>
     */
    public static final int VIP_ID_VALUE = 29;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ModelIdEnum valueOf(int value) {
      return forNumber(value);
    }

    public static ModelIdEnum forNumber(int value) {
      switch (value) {
        case 0: return Unknown;
        case 10: return LOGIN_ID;
        case 11: return GAME_ID;
        case 12: return ROOM_ID;
        case 13: return HALL_ID;
        case 14: return STORE_ID;
        case 15: return PLAYER_ID;
        case 16: return CHAT_ID;
        case 17: return FRIEND_ID;
        case 18: return RANK_ID;
        case 19: return TASK_ID;
        case 20: return MAIL_ID;
        case 21: return SIGNUP_ID;
        case 22: return BROADCAST_ID;
        case 23: return GAME_HEART;
        case 24: return MARKET_ID;
        case 25: return ANNOUNCE_ID;
        case 26: return SNATCH_ID;
        case 27: return DIAMOND_LOTTERY_ID;
        case 28: return PROP_ID;
        case 29: return VIP_ID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ModelIdEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ModelIdEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ModelIdEnum>() {
            public ModelIdEnum findValueByNumber(int number) {
              return ModelIdEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.getDescriptor().getEnumTypes().get(0);
    }

    private static final ModelIdEnum[] VALUES = values();

    public static ModelIdEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ModelIdEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kys.util.netty.proto.ModelIdEnum)
  }

  /**
   * Protobuf enum {@code com.kys.util.netty.proto.MessageTypeEnum}
   */
  public enum MessageTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Error = 0;</code>
     */
    Error(0),
    /**
     * <pre>
     ** 账号登录方法 
     * </pre>
     *
     * <code>clientLogin = 10100;</code>
     */
    clientLogin(10100),
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>clientGetUserInfo = 10101;</code>
     */
    clientGetUserInfo(10101),
    /**
     * <pre>
     ** 客户端返回大厅服务器心跳 
     * </pre>
     *
     * <code>clientReturnHallHeartBeat = 10102;</code>
     */
    clientReturnHallHeartBeat(10102),
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>clientNewLogin = 10103;</code>
     */
    clientNewLogin(10103),
    /**
     * <pre>
     ** 客户端返回游戏服务器心跳 
     * </pre>
     *
     * <code>clientReturnGameHeartBeat = 23103;</code>
     */
    clientReturnGameHeartBeat(23103),
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>clientDoCatch = 11150;</code>
     */
    clientDoCatch(11150),
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>clientPlayCards = 11151;</code>
     */
    clientPlayCards(11151),
    /**
     * <pre>
     ** 进入房间 
     * </pre>
     *
     * <code>clientEnterRoom = 11152;</code>
     */
    clientEnterRoom(11152),
    /**
     * <pre>
     ** 离开房间 
     * </pre>
     *
     * <code>clientLeaveRoom = 11154;</code>
     */
    clientLeaveRoom(11154),
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>clientRecoverGame = 11155;</code>
     */
    clientRecoverGame(11155),
    /**
     * <pre>
     ** 客户端申请托管 
     * </pre>
     *
     * <code>clientAutoPlay = 11156;</code>
     */
    clientAutoPlay(11156),
    /**
     * <pre>
     ** 客户端请求序号 
     * </pre>
     *
     * <code>clientQueryIndex = 11157;</code>
     */
    clientQueryIndex(11157),
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>clientQuickJoin = 12200;</code>
     */
    clientQuickJoin(12200),
    /**
     * <pre>
     ** 取消匹配 
     * </pre>
     *
     * <code>clientCancleJoin = 12201;</code>
     */
    clientCancleJoin(12201),
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>clientRetryReturnGame = 12202;</code>
     */
    clientRetryReturnGame(12202),
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>clientGetRankList = 13250;</code>
     */
    clientGetRankList(13250),
    /**
     * <pre>
     ** 签到请求 
     * </pre>
     *
     * <code>clientSignup = 13251;</code>
     */
    clientSignup(13251),
    /**
     * <pre>
     ** 请求大厅信息 
     * </pre>
     *
     * <code>clientGetSignupRewardList = 13252;</code>
     */
    clientGetSignupRewardList(13252),
    /**
     * <pre>
     ** 客户端请求抽奖杯 
     * </pre>
     *
     * <code>clientDrawWinCup = 13253;</code>
     */
    clientDrawWinCup(13253),
    /**
     * <pre>
     ** 获取游戏场次信息 
     * </pre>
     *
     * <code>clientGetRoomConfig = 13254;</code>
     */
    clientGetRoomConfig(13254),
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>clientGetHallInfo = 13255;</code>
     */
    clientGetHallInfo(13255),
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>clientRewardMessage = 13256;</code>
     */
    clientRewardMessage(13256),
    /**
     * <pre>
     ** 客户端请求房卡模式配置 
     * </pre>
     *
     * <code>clientGetRoomCardConfig = 13257;</code>
     */
    clientGetRoomCardConfig(13257),
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>clientCreateRoom = 13258;</code>
     */
    clientCreateRoom(13258),
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>clientGetMonthCardDiamond = 13259;</code>
     */
    clientGetMonthCardDiamond(13259),
    /**
     * <pre>
     ** 客户端获取玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>clientGetLotteryCount = 13260;</code>
     */
    clientGetLotteryCount(13260),
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>clientGetRoomInfo = 13261;</code>
     */
    clientGetRoomInfo(13261),
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>clientPlayerLogout = 13262;</code>
     */
    clientPlayerLogout(13262),
    /**
     * <pre>
     ** 玩家查看与大厅连接 
     * </pre>
     *
     * <code>clientCheckConnect = 13263;</code>
     */
    clientCheckConnect(13263),
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>clientGetPFList = 13264;</code>
     */
    clientGetPFList(13264),
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>clientChoosePF = 13265;</code>
     */
    clientChoosePF(13265),
    /**
     * <pre>
     ** 客户端获取历史排名 
     * </pre>
     *
     * <code>clientGetHistoryRank = 13266;</code>
     */
    clientGetHistoryRank(13266),
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>clientH5Reward = 13267;</code>
     */
    clientH5Reward(13267),
    /**
     * <pre>
     ** 客户端新抽取奖杯 
     * </pre>
     *
     * <code>clientNewDrawWinCup = 13268;</code>
     */
    clientNewDrawWinCup(13268),
    /**
     * <pre>
     ** 获取玩家(新)大厅信息 
     * </pre>
     *
     * <code>clientGetNewHallInfo = 13269;</code>
     */
    clientGetNewHallInfo(13269),
    /**
     * <pre>
     ** 获取玩家皮肤界面信息 
     * </pre>
     *
     * <code>clientGetSkinInfo = 13270;</code>
     */
    clientGetSkinInfo(13270),
    /**
     * <pre>
     ** 玩家修改当前皮肤 
     * </pre>
     *
     * <code>clientEquipSkin = 13271;</code>
     */
    clientEquipSkin(13271),
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>clientGetStoreData = 14300;</code>
     */
    clientGetStoreData(14300),
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>clientConvertGoods = 14301;</code>
     */
    clientConvertGoods(14301),
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>clientWXPayResultQuery = 14302;</code>
     */
    clientWXPayResultQuery(14302),
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>clientBuyOrderGoods = 14303;</code>
     */
    clientBuyOrderGoods(14303),
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>clientGetFirstCharge = 14304;</code>
     */
    clientGetFirstCharge(14304),
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>clientGetDailyGift = 14305;</code>
     */
    clientGetDailyGift(14305),
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>clientGetMonthCard = 14306;</code>
     */
    clientGetMonthCard(14306),
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>clientGetResurgenceGift = 14307;</code>
     */
    clientGetResurgenceGift(14307),
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>clientQueryDailyTask = 19264;</code>
     */
    clientQueryDailyTask(19264),
    /**
     * <pre>
     ** 客户端领取每日任务奖励 
     * </pre>
     *
     * <code>clientGetDailyTaskAward = 19265;</code>
     */
    clientGetDailyTaskAward(19265),
    /**
     * <pre>
     ** 客户端请求获取新手任务奖励 
     * </pre>
     *
     * <code>clientGetNoviceReward = 19266;</code>
     */
    clientGetNoviceReward(19266),
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>clientQueryNoviceTask = 19267;</code>
     */
    clientQueryNoviceTask(19267),
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>clientGetDTAward = 19268;</code>
     */
    clientGetDTAward(19268),
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>clientGetAnnounce = 25271;</code>
     */
    clientGetAnnounce(25271),
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>serverGetAnnounce = 25801;</code>
     */
    serverGetAnnounce(25801),
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>clientGetMail = 20600;</code>
     */
    clientGetMail(20600),
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>clientGetMailReward = 20601;</code>
     */
    clientGetMailReward(20601),
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>clientDelMail = 20602;</code>
     */
    clientDelMail(20602),
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>clientReadMail = 20603;</code>
     */
    clientReadMail(20603),
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>clientDel2R = 20604;</code>
     */
    clientDel2R(20604),
    /**
     * <pre>
     ** 客户端请求VIP信息 
     * </pre>
     *
     * <code>clientGetVipInfo = 29001;</code>
     */
    clientGetVipInfo(29001),
    /**
     * <pre>
     ** 客户端请求领取每周vip礼包 
     * </pre>
     *
     * <code>clientGetVipWeek = 29002;</code>
     */
    clientGetVipWeek(29002),
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>serverGetVipInfo = 29003;</code>
     */
    serverGetVipInfo(29003),
    /**
     * <pre>
     ** 服务器返回领取每周vip礼包 
     * </pre>
     *
     * <code>serverGetVipWeek = 29004;</code>
     */
    serverGetVipWeek(29004),
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>serverLogin = 10500;</code>
     */
    serverLogin(10500),
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>serverGetUserInfo = 10501;</code>
     */
    serverGetUserInfo(10501),
    /**
     * <pre>
     ** 服务器发送大厅服务器心跳 
     * </pre>
     *
     * <code>serverSendHallHeartBeat = 10502;</code>
     */
    serverSendHallHeartBeat(10502),
    /**
     * <pre>
     ** 服务器发送游戏服务器心跳 
     * </pre>
     *
     * <code>serverSendGameHeartBeat = 23503;</code>
     */
    serverSendGameHeartBeat(23503),
    /**
     * <pre>
     ** 加入房间 
     * </pre>
     *
     * <code>serverEnterRoom = 11550;</code>
     */
    serverEnterRoom(11550),
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>serverDoCatch = 11551;</code>
     */
    serverDoCatch(11551),
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>serverPlayCards = 11552;</code>
     */
    serverPlayCards(11552),
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>serverRecoverGame = 11553;</code>
     */
    serverRecoverGame(11553),
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>serverAutoPlay = 11554;</code>
     */
    serverAutoPlay(11554),
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>serverLeaveRoom = 11555;</code>
     */
    serverLeaveRoom(11555),
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>serverQueryIndex = 11556;</code>
     */
    serverQueryIndex(11556),
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>serverRetryReturnGame = 11557;</code>
     */
    serverRetryReturnGame(11557),
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>serverQuickJoin = 12600;</code>
     */
    serverQuickJoin(12600),
    /**
     * <pre>
     ** 服务器取消加入 
     * </pre>
     *
     * <code>serverCancleJoin = 12601;</code>
     */
    serverCancleJoin(12601),
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>serverGetRankList = 13650;</code>
     */
    serverGetRankList(13650),
    /**
     * <pre>
     ** 服务器返回签到奖励列表 
     * </pre>
     *
     * <code>serverGetSignupRewardList = 13651;</code>
     */
    serverGetSignupRewardList(13651),
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>serverGetHallInfo = 13652;</code>
     */
    serverGetHallInfo(13652),
    /**
     * <pre>
     ** 服务器响应签到请求 
     * </pre>
     *
     * <code>serverSignup = 13653;</code>
     */
    serverSignup(13653),
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>serverRewardMessage = 13654;</code>
     */
    serverRewardMessage(13654),
    /**
     * <pre>
     ** 服务器返回抽奖杯 
     * </pre>
     *
     * <code>serverDrawWinCup = 13655;</code>
     */
    serverDrawWinCup(13655),
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>serverGetRoomConfig = 13656;</code>
     */
    serverGetRoomConfig(13656),
    /**
     * <pre>
     ** 服务器返回房卡模式配置 
     * </pre>
     *
     * <code>serverGetRoomCardConfig = 13657;</code>
     */
    serverGetRoomCardConfig(13657),
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>serverCreateRoom = 13658;</code>
     */
    serverCreateRoom(13658),
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>serverGetMonthCardDiamond = 13659;</code>
     */
    serverGetMonthCardDiamond(13659),
    /**
     * <pre>
     ** 服务器返回抽取奖杯比赛数 
     * </pre>
     *
     * <code>serverGetLotteryCount = 13660;</code>
     */
    serverGetLotteryCount(13660),
    /**
     * <pre>
     ** 服务器返回单一房间配置信息 
     * </pre>
     *
     * <code>serverGetRoomInfo = 13661;</code>
     */
    serverGetRoomInfo(13661),
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>serverCheckConnect = 13662;</code>
     */
    serverCheckConnect(13662),
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>serverGetPFList = 13663;</code>
     */
    serverGetPFList(13663),
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>serverChoosePF = 13664;</code>
     */
    serverChoosePF(13664),
    /**
     * <pre>
     ** 服务器获取历史排名 
     * </pre>
     *
     * <code>serverGetHistoryRank = 13665;</code>
     */
    serverGetHistoryRank(13665),
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>serverH5Reward = 13666;</code>
     */
    serverH5Reward(13666),
    /**
     * <pre>
     ** 服务器返回新抽取奖杯 
     * </pre>
     *
     * <code>serverNewDrawWinCup = 13667;</code>
     */
    serverNewDrawWinCup(13667),
    /**
     * <pre>
     ** 服务器返回新(新)大厅信息 
     * </pre>
     *
     * <code>serverGetNewHallInfo = 13668;</code>
     */
    serverGetNewHallInfo(13668),
    /**
     * <pre>
     ** 服务器返回玩家皮肤界面信息 
     * </pre>
     *
     * <code>serverGetSkinInfo = 13669;</code>
     */
    serverGetSkinInfo(13669),
    /**
     * <pre>
     ** 服务器返回玩家修改皮肤信息 
     * </pre>
     *
     * <code>serverEquipSkin = 13670;</code>
     */
    serverEquipSkin(13670),
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>serverGetStoreData = 14700;</code>
     */
    serverGetStoreData(14700),
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>serverConvertGoods = 14701;</code>
     */
    serverConvertGoods(14701),
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>serverWXPayResult = 14702;</code>
     */
    serverWXPayResult(14702),
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>serverBuyOrderGoods = 14703;</code>
     */
    serverBuyOrderGoods(14703),
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>serverGetFirstCharge = 14704;</code>
     */
    serverGetFirstCharge(14704),
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>serverGetDailyGift = 14705;</code>
     */
    serverGetDailyGift(14705),
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>serverGetMonthCard = 14706;</code>
     */
    serverGetMonthCard(14706),
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>serverGetResurgenceGift = 14707;</code>
     */
    serverGetResurgenceGift(14707),
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>serverQueryDailyTask = 19663;</code>
     */
    serverQueryDailyTask(19663),
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>serverGetDailyTaskAward = 19664;</code>
     */
    serverGetDailyTaskAward(19664),
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>serverGetNoviceReward = 19665;</code>
     */
    serverGetNoviceReward(19665),
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>serverQueryNoviceTask = 19666;</code>
     */
    serverQueryNoviceTask(19666),
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>serverGetDTAward = 19667;</code>
     */
    serverGetDTAward(19667),
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>clientSendTelCode = 24262;</code>
     */
    clientSendTelCode(24262),
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>clientVerifyTelCode = 24263;</code>
     */
    clientVerifyTelCode(24263),
    /**
     * <pre>
     ** 客户端领取任务奖励 
     * </pre>
     *
     * <code>clientGetTaskAward = 24264;</code>
     */
    clientGetTaskAward(24264),
    /**
     * <pre>
     ** 客户端查询推广列表详细信息 
     * </pre>
     *
     * <code>clientQueryShareDetail = 24265;</code>
     */
    clientQueryShareDetail(24265),
    /**
     * <pre>
     ** 客户端请求分享列表 
     * </pre>
     *
     * <code>clientQueryShareList = 24266;</code>
     */
    clientQueryShareList(24266),
    /**
     * <pre>
     ** 客户端请求分包 
     * </pre>
     *
     * <code>clientSharePackage = 24267;</code>
     */
    clientSharePackage(24267),
    /**
     * <pre>
     ** 客户端请求大厅活动奖励 
     * </pre>
     *
     * <code>clientGetAwardList = 24268;</code>
     */
    clientGetAwardList(24268),
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>serverSendTelCode = 24662;</code>
     */
    serverSendTelCode(24662),
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息 
     * </pre>
     *
     * <code>serverVerifyTelCode = 24663;</code>
     */
    serverVerifyTelCode(24663),
    /**
     * <pre>
     ** 服务器返回领取任务奖励 
     * </pre>
     *
     * <code>serverGetTaskAward = 24664;</code>
     */
    serverGetTaskAward(24664),
    /**
     * <pre>
     ** 服务器返回详细信息 
     * </pre>
     *
     * <code>serverQueryShareDetail = 24665;</code>
     */
    serverQueryShareDetail(24665),
    /**
     * <pre>
     ** 服务器返回分享列表 
     * </pre>
     *
     * <code>serverQueryShareList = 24666;</code>
     */
    serverQueryShareList(24666),
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>serverSharePackage = 24667;</code>
     */
    serverSharePackage(24667),
    /**
     * <pre>
     ** 服务器返回大厅活动奖励 
     * </pre>
     *
     * <code>serverGetAwardList = 24668;</code>
     */
    serverGetAwardList(24668),
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>serverGetMail = 20650;</code>
     */
    serverGetMail(20650),
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>serverGetMailReward = 20651;</code>
     */
    serverGetMailReward(20651),
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>serverDelMail = 20652;</code>
     */
    serverDelMail(20652),
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>serverReadMail = 20653;</code>
     */
    serverReadMail(20653),
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>serverDel2R = 20654;</code>
     */
    serverDel2R(20654),
    /**
     * <pre>
     ** 客户端获取用户收货地址 
     * </pre>
     *
     * <code>clientGetReceiveAddr = 26001;</code>
     */
    clientGetReceiveAddr(26001),
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>clientAlterReceiveAddr = 26002;</code>
     */
    clientAlterReceiveAddr(26002),
    /**
     * <pre>
     ** 夺宝主界面，当前商品列表信息接口 
     * </pre>
     *
     * <code>clientSnatchList = 26003;</code>
     */
    clientSnatchList(26003),
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>clientSnatchItemDetail = 26004;</code>
     */
    clientSnatchItemDetail(26004),
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>clientSnatchBet = 26005;</code>
     */
    clientSnatchBet(26005),
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>clientSnatchAwardList = 26006;</code>
     */
    clientSnatchAwardList(26006),
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>clientOwnSnatchRecord = 26007;</code>
     */
    clientOwnSnatchRecord(26007),
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>clientSnatchItemHistory = 26008;</code>
     */
    clientSnatchItemHistory(26008),
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>clientSnatchHistoryDetail = 26009;</code>
     */
    clientSnatchHistoryDetail(26009),
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>clientSnatchGetAward = 26010;</code>
     */
    clientSnatchGetAward(26010),
    /**
     * <pre>
     ** 服务器返回用户收货地址
     * </pre>
     *
     * <code>serverGetReceiveAddr = 26501;</code>
     */
    serverGetReceiveAddr(26501),
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>serverAlterReceiveAddr = 26502;</code>
     */
    serverAlterReceiveAddr(26502),
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>serverSnatchList = 26503;</code>
     */
    serverSnatchList(26503),
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>serverSnatchItemDetail = 26504;</code>
     */
    serverSnatchItemDetail(26504),
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>serverSnatchBet = 26505;</code>
     */
    serverSnatchBet(26505),
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>serverSnatchAwardList = 26506;</code>
     */
    serverSnatchAwardList(26506),
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>serverOwnSnatchRecord = 26507;</code>
     */
    serverOwnSnatchRecord(26507),
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>serverSnatchItemHistory = 26508;</code>
     */
    serverSnatchItemHistory(26508),
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>serverSnatchHistoryDetail = 26509;</code>
     */
    serverSnatchHistoryDetail(26509),
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>serverSnatchGetAward = 26510;</code>
     */
    serverSnatchGetAward(26510),
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>clientEnterDG = 27001;</code>
     */
    clientEnterDG(27001),
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>clientDGLottery = 27002;</code>
     */
    clientDGLottery(27002),
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>clientResetLottery = 27003;</code>
     */
    clientResetLottery(27003),
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>clientExitDG = 27004;</code>
     */
    clientExitDG(27004),
    /**
     * <pre>
     ** 客户端请求开启抽奖活动 
     * </pre>
     *
     * <code>clientOpenDG = 27005;</code>
     */
    clientOpenDG(27005),
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>clientOpenDD = 27006;</code>
     */
    clientOpenDD(27006),
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>clientDDLottery = 27007;</code>
     */
    clientDDLottery(27007),
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>clientExitDD = 27008;</code>
     */
    clientExitDD(27008),
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>serverEnterDG = 27501;</code>
     */
    serverEnterDG(27501),
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>serverDGLottery = 27502;</code>
     */
    serverDGLottery(27502),
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>serverResetLottery = 27503;</code>
     */
    serverResetLottery(27503),
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>serverExitDG = 27504;</code>
     */
    serverExitDG(27504),
    /**
     * <pre>
     ** 服务器返回用户开启抽奖 
     * </pre>
     *
     * <code>serverOpenDG = 27505;</code>
     */
    serverOpenDG(27505),
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>serverOpenDD = 27506;</code>
     */
    serverOpenDD(27506),
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>serverDDLottery = 27507;</code>
     */
    serverDDLottery(27507),
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>serverExitDD = 27508;</code>
     */
    serverExitDD(27508),
    /**
     * <pre>
     ** 客户端请求所有道具信息 
     * </pre>
     *
     * <code>clientQueryProp = 28001;</code>
     */
    clientQueryProp(28001),
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>clientUseProp = 28002;</code>
     */
    clientUseProp(28002),
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>clientQueryPropCount = 28003;</code>
     */
    clientQueryPropCount(28003),
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>serverQueryProp = 28501;</code>
     */
    serverQueryProp(28501),
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>serverUseProp = 28502;</code>
     */
    serverUseProp(28502),
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>serverQueryPropCount = 28503;</code>
     */
    serverQueryPropCount(28503),
    /**
     * <pre>
     ** 客户端请求月签信息666666 
     * </pre>
     *
     * <code>clientMonthSignInfo = 21001;</code>
     */
    clientMonthSignInfo(21001),
    /**
     * <pre>
     ** 客户端请求(新)签到 
     * </pre>
     *
     * <code>clientMonthSign = 21002;</code>
     */
    clientMonthSign(21002),
    /**
     * <pre>
     ** 客户端获取暴击奖励 
     * </pre>
     *
     * <code>clientGetCritReward = 21003;</code>
     */
    clientGetCritReward(21003),
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>clientLTLottery = 21004;</code>
     */
    clientLTLottery(21004),
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>clientGetTSReward = 21005;</code>
     */
    clientGetTSReward(21005),
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>clientGetLuckInfo = 21006;</code>
     */
    clientGetLuckInfo(21006),
    /**
     * <pre>
     ** 服务端返回月签信息 
     * </pre>
     *
     * <code>serverMonthSignInfo = 21501;</code>
     */
    serverMonthSignInfo(21501),
    /**
     * <pre>
     ** 服务器返回(新)月签到 
     * </pre>
     *
     * <code>serverMonthSign = 21502;</code>
     */
    serverMonthSign(21502),
    /**
     * <pre>
     ** 服务器返回获取暴击奖励 
     * </pre>
     *
     * <code>serverGetCritReward = 21503;</code>
     */
    serverGetCritReward(21503),
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>serverLTLottery = 21504;</code>
     */
    serverLTLottery(21504),
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>serverGetTSReward = 21505;</code>
     */
    serverGetTSReward(21505),
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>serverGetLuckInfo = 21506;</code>
     */
    serverGetLuckInfo(21506),
    /**
     * <pre>
     ** 服务器广播玩家加入房间消息 
     * </pre>
     *
     * <code>b_EnterRoom = 22001;</code>
     */
    b_EnterRoom(22001),
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>b_GameStart = 22002;</code>
     */
    b_GameStart(22002),
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>b_DoCatch = 22003;</code>
     */
    b_DoCatch(22003),
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>b_CatchResult = 22004;</code>
     */
    b_CatchResult(22004),
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>b_PlayCards = 22005;</code>
     */
    b_PlayCards(22005),
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>b_SendDiZhuCard = 22007;</code>
     */
    b_SendDiZhuCard(22007),
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>b_NextPlayer = 22008;</code>
     */
    b_NextPlayer(22008),
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>b_GameSettle = 22009;</code>
     */
    b_GameSettle(22009),
    /**
     * <pre>
     ** 广播公告消息 
     * </pre>
     *
     * <code>b_RewardMessage = 22010;</code>
     */
    b_RewardMessage(22010),
    /**
     * <pre>
     ** 广播玩家托管消息
     * </pre>
     *
     * <code>b_AutoPlay = 22011;</code>
     */
    b_AutoPlay(22011),
    /**
     * <pre>
     ** 推送玩家应该加入的房间号和url 
     * </pre>
     *
     * <code>b_RoomIdUrl = 22012;</code>
     */
    b_RoomIdUrl(22012),
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>b_AwardDialog = 22013;</code>
     */
    b_AwardDialog(22013),
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>b_BuySuccess = 22014;</code>
     */
    b_BuySuccess(22014),
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>b_RedDotPush = 22015;</code>
     */
    b_RedDotPush(22015),
    /**
     * <pre>
     ** 游戏内强制公告推送 
     * </pre>
     *
     * <code>b_ForceAnnounce = 22016;</code>
     */
    b_ForceAnnounce(22016),
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>b_DGameMessage = 22017;</code>
     */
    b_DGameMessage(22017),
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>b_DGOver = 22018;</code>
     */
    b_DGOver(22018),
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>b_DDOver = 22019;</code>
     */
    b_DDOver(22019),
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>b_DDInfo = 22020;</code>
     */
    b_DDInfo(22020),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Error = 0;</code>
     */
    public static final int Error_VALUE = 0;
    /**
     * <pre>
     ** 账号登录方法 
     * </pre>
     *
     * <code>clientLogin = 10100;</code>
     */
    public static final int clientLogin_VALUE = 10100;
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>clientGetUserInfo = 10101;</code>
     */
    public static final int clientGetUserInfo_VALUE = 10101;
    /**
     * <pre>
     ** 客户端返回大厅服务器心跳 
     * </pre>
     *
     * <code>clientReturnHallHeartBeat = 10102;</code>
     */
    public static final int clientReturnHallHeartBeat_VALUE = 10102;
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>clientNewLogin = 10103;</code>
     */
    public static final int clientNewLogin_VALUE = 10103;
    /**
     * <pre>
     ** 客户端返回游戏服务器心跳 
     * </pre>
     *
     * <code>clientReturnGameHeartBeat = 23103;</code>
     */
    public static final int clientReturnGameHeartBeat_VALUE = 23103;
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>clientDoCatch = 11150;</code>
     */
    public static final int clientDoCatch_VALUE = 11150;
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>clientPlayCards = 11151;</code>
     */
    public static final int clientPlayCards_VALUE = 11151;
    /**
     * <pre>
     ** 进入房间 
     * </pre>
     *
     * <code>clientEnterRoom = 11152;</code>
     */
    public static final int clientEnterRoom_VALUE = 11152;
    /**
     * <pre>
     ** 离开房间 
     * </pre>
     *
     * <code>clientLeaveRoom = 11154;</code>
     */
    public static final int clientLeaveRoom_VALUE = 11154;
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>clientRecoverGame = 11155;</code>
     */
    public static final int clientRecoverGame_VALUE = 11155;
    /**
     * <pre>
     ** 客户端申请托管 
     * </pre>
     *
     * <code>clientAutoPlay = 11156;</code>
     */
    public static final int clientAutoPlay_VALUE = 11156;
    /**
     * <pre>
     ** 客户端请求序号 
     * </pre>
     *
     * <code>clientQueryIndex = 11157;</code>
     */
    public static final int clientQueryIndex_VALUE = 11157;
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>clientQuickJoin = 12200;</code>
     */
    public static final int clientQuickJoin_VALUE = 12200;
    /**
     * <pre>
     ** 取消匹配 
     * </pre>
     *
     * <code>clientCancleJoin = 12201;</code>
     */
    public static final int clientCancleJoin_VALUE = 12201;
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>clientRetryReturnGame = 12202;</code>
     */
    public static final int clientRetryReturnGame_VALUE = 12202;
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>clientGetRankList = 13250;</code>
     */
    public static final int clientGetRankList_VALUE = 13250;
    /**
     * <pre>
     ** 签到请求 
     * </pre>
     *
     * <code>clientSignup = 13251;</code>
     */
    public static final int clientSignup_VALUE = 13251;
    /**
     * <pre>
     ** 请求大厅信息 
     * </pre>
     *
     * <code>clientGetSignupRewardList = 13252;</code>
     */
    public static final int clientGetSignupRewardList_VALUE = 13252;
    /**
     * <pre>
     ** 客户端请求抽奖杯 
     * </pre>
     *
     * <code>clientDrawWinCup = 13253;</code>
     */
    public static final int clientDrawWinCup_VALUE = 13253;
    /**
     * <pre>
     ** 获取游戏场次信息 
     * </pre>
     *
     * <code>clientGetRoomConfig = 13254;</code>
     */
    public static final int clientGetRoomConfig_VALUE = 13254;
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>clientGetHallInfo = 13255;</code>
     */
    public static final int clientGetHallInfo_VALUE = 13255;
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>clientRewardMessage = 13256;</code>
     */
    public static final int clientRewardMessage_VALUE = 13256;
    /**
     * <pre>
     ** 客户端请求房卡模式配置 
     * </pre>
     *
     * <code>clientGetRoomCardConfig = 13257;</code>
     */
    public static final int clientGetRoomCardConfig_VALUE = 13257;
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>clientCreateRoom = 13258;</code>
     */
    public static final int clientCreateRoom_VALUE = 13258;
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>clientGetMonthCardDiamond = 13259;</code>
     */
    public static final int clientGetMonthCardDiamond_VALUE = 13259;
    /**
     * <pre>
     ** 客户端获取玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>clientGetLotteryCount = 13260;</code>
     */
    public static final int clientGetLotteryCount_VALUE = 13260;
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>clientGetRoomInfo = 13261;</code>
     */
    public static final int clientGetRoomInfo_VALUE = 13261;
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>clientPlayerLogout = 13262;</code>
     */
    public static final int clientPlayerLogout_VALUE = 13262;
    /**
     * <pre>
     ** 玩家查看与大厅连接 
     * </pre>
     *
     * <code>clientCheckConnect = 13263;</code>
     */
    public static final int clientCheckConnect_VALUE = 13263;
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>clientGetPFList = 13264;</code>
     */
    public static final int clientGetPFList_VALUE = 13264;
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>clientChoosePF = 13265;</code>
     */
    public static final int clientChoosePF_VALUE = 13265;
    /**
     * <pre>
     ** 客户端获取历史排名 
     * </pre>
     *
     * <code>clientGetHistoryRank = 13266;</code>
     */
    public static final int clientGetHistoryRank_VALUE = 13266;
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>clientH5Reward = 13267;</code>
     */
    public static final int clientH5Reward_VALUE = 13267;
    /**
     * <pre>
     ** 客户端新抽取奖杯 
     * </pre>
     *
     * <code>clientNewDrawWinCup = 13268;</code>
     */
    public static final int clientNewDrawWinCup_VALUE = 13268;
    /**
     * <pre>
     ** 获取玩家(新)大厅信息 
     * </pre>
     *
     * <code>clientGetNewHallInfo = 13269;</code>
     */
    public static final int clientGetNewHallInfo_VALUE = 13269;
    /**
     * <pre>
     ** 获取玩家皮肤界面信息 
     * </pre>
     *
     * <code>clientGetSkinInfo = 13270;</code>
     */
    public static final int clientGetSkinInfo_VALUE = 13270;
    /**
     * <pre>
     ** 玩家修改当前皮肤 
     * </pre>
     *
     * <code>clientEquipSkin = 13271;</code>
     */
    public static final int clientEquipSkin_VALUE = 13271;
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>clientGetStoreData = 14300;</code>
     */
    public static final int clientGetStoreData_VALUE = 14300;
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>clientConvertGoods = 14301;</code>
     */
    public static final int clientConvertGoods_VALUE = 14301;
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>clientWXPayResultQuery = 14302;</code>
     */
    public static final int clientWXPayResultQuery_VALUE = 14302;
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>clientBuyOrderGoods = 14303;</code>
     */
    public static final int clientBuyOrderGoods_VALUE = 14303;
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>clientGetFirstCharge = 14304;</code>
     */
    public static final int clientGetFirstCharge_VALUE = 14304;
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>clientGetDailyGift = 14305;</code>
     */
    public static final int clientGetDailyGift_VALUE = 14305;
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>clientGetMonthCard = 14306;</code>
     */
    public static final int clientGetMonthCard_VALUE = 14306;
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>clientGetResurgenceGift = 14307;</code>
     */
    public static final int clientGetResurgenceGift_VALUE = 14307;
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>clientQueryDailyTask = 19264;</code>
     */
    public static final int clientQueryDailyTask_VALUE = 19264;
    /**
     * <pre>
     ** 客户端领取每日任务奖励 
     * </pre>
     *
     * <code>clientGetDailyTaskAward = 19265;</code>
     */
    public static final int clientGetDailyTaskAward_VALUE = 19265;
    /**
     * <pre>
     ** 客户端请求获取新手任务奖励 
     * </pre>
     *
     * <code>clientGetNoviceReward = 19266;</code>
     */
    public static final int clientGetNoviceReward_VALUE = 19266;
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>clientQueryNoviceTask = 19267;</code>
     */
    public static final int clientQueryNoviceTask_VALUE = 19267;
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>clientGetDTAward = 19268;</code>
     */
    public static final int clientGetDTAward_VALUE = 19268;
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>clientGetAnnounce = 25271;</code>
     */
    public static final int clientGetAnnounce_VALUE = 25271;
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>serverGetAnnounce = 25801;</code>
     */
    public static final int serverGetAnnounce_VALUE = 25801;
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>clientGetMail = 20600;</code>
     */
    public static final int clientGetMail_VALUE = 20600;
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>clientGetMailReward = 20601;</code>
     */
    public static final int clientGetMailReward_VALUE = 20601;
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>clientDelMail = 20602;</code>
     */
    public static final int clientDelMail_VALUE = 20602;
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>clientReadMail = 20603;</code>
     */
    public static final int clientReadMail_VALUE = 20603;
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>clientDel2R = 20604;</code>
     */
    public static final int clientDel2R_VALUE = 20604;
    /**
     * <pre>
     ** 客户端请求VIP信息 
     * </pre>
     *
     * <code>clientGetVipInfo = 29001;</code>
     */
    public static final int clientGetVipInfo_VALUE = 29001;
    /**
     * <pre>
     ** 客户端请求领取每周vip礼包 
     * </pre>
     *
     * <code>clientGetVipWeek = 29002;</code>
     */
    public static final int clientGetVipWeek_VALUE = 29002;
    /**
     * <pre>
     ** 服务器返回VIP信息 
     * </pre>
     *
     * <code>serverGetVipInfo = 29003;</code>
     */
    public static final int serverGetVipInfo_VALUE = 29003;
    /**
     * <pre>
     ** 服务器返回领取每周vip礼包 
     * </pre>
     *
     * <code>serverGetVipWeek = 29004;</code>
     */
    public static final int serverGetVipWeek_VALUE = 29004;
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>serverLogin = 10500;</code>
     */
    public static final int serverLogin_VALUE = 10500;
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>serverGetUserInfo = 10501;</code>
     */
    public static final int serverGetUserInfo_VALUE = 10501;
    /**
     * <pre>
     ** 服务器发送大厅服务器心跳 
     * </pre>
     *
     * <code>serverSendHallHeartBeat = 10502;</code>
     */
    public static final int serverSendHallHeartBeat_VALUE = 10502;
    /**
     * <pre>
     ** 服务器发送游戏服务器心跳 
     * </pre>
     *
     * <code>serverSendGameHeartBeat = 23503;</code>
     */
    public static final int serverSendGameHeartBeat_VALUE = 23503;
    /**
     * <pre>
     ** 加入房间 
     * </pre>
     *
     * <code>serverEnterRoom = 11550;</code>
     */
    public static final int serverEnterRoom_VALUE = 11550;
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>serverDoCatch = 11551;</code>
     */
    public static final int serverDoCatch_VALUE = 11551;
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>serverPlayCards = 11552;</code>
     */
    public static final int serverPlayCards_VALUE = 11552;
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>serverRecoverGame = 11553;</code>
     */
    public static final int serverRecoverGame_VALUE = 11553;
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>serverAutoPlay = 11554;</code>
     */
    public static final int serverAutoPlay_VALUE = 11554;
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>serverLeaveRoom = 11555;</code>
     */
    public static final int serverLeaveRoom_VALUE = 11555;
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>serverQueryIndex = 11556;</code>
     */
    public static final int serverQueryIndex_VALUE = 11556;
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>serverRetryReturnGame = 11557;</code>
     */
    public static final int serverRetryReturnGame_VALUE = 11557;
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>serverQuickJoin = 12600;</code>
     */
    public static final int serverQuickJoin_VALUE = 12600;
    /**
     * <pre>
     ** 服务器取消加入 
     * </pre>
     *
     * <code>serverCancleJoin = 12601;</code>
     */
    public static final int serverCancleJoin_VALUE = 12601;
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>serverGetRankList = 13650;</code>
     */
    public static final int serverGetRankList_VALUE = 13650;
    /**
     * <pre>
     ** 服务器返回签到奖励列表 
     * </pre>
     *
     * <code>serverGetSignupRewardList = 13651;</code>
     */
    public static final int serverGetSignupRewardList_VALUE = 13651;
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>serverGetHallInfo = 13652;</code>
     */
    public static final int serverGetHallInfo_VALUE = 13652;
    /**
     * <pre>
     ** 服务器响应签到请求 
     * </pre>
     *
     * <code>serverSignup = 13653;</code>
     */
    public static final int serverSignup_VALUE = 13653;
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>serverRewardMessage = 13654;</code>
     */
    public static final int serverRewardMessage_VALUE = 13654;
    /**
     * <pre>
     ** 服务器返回抽奖杯 
     * </pre>
     *
     * <code>serverDrawWinCup = 13655;</code>
     */
    public static final int serverDrawWinCup_VALUE = 13655;
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>serverGetRoomConfig = 13656;</code>
     */
    public static final int serverGetRoomConfig_VALUE = 13656;
    /**
     * <pre>
     ** 服务器返回房卡模式配置 
     * </pre>
     *
     * <code>serverGetRoomCardConfig = 13657;</code>
     */
    public static final int serverGetRoomCardConfig_VALUE = 13657;
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>serverCreateRoom = 13658;</code>
     */
    public static final int serverCreateRoom_VALUE = 13658;
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>serverGetMonthCardDiamond = 13659;</code>
     */
    public static final int serverGetMonthCardDiamond_VALUE = 13659;
    /**
     * <pre>
     ** 服务器返回抽取奖杯比赛数 
     * </pre>
     *
     * <code>serverGetLotteryCount = 13660;</code>
     */
    public static final int serverGetLotteryCount_VALUE = 13660;
    /**
     * <pre>
     ** 服务器返回单一房间配置信息 
     * </pre>
     *
     * <code>serverGetRoomInfo = 13661;</code>
     */
    public static final int serverGetRoomInfo_VALUE = 13661;
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>serverCheckConnect = 13662;</code>
     */
    public static final int serverCheckConnect_VALUE = 13662;
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>serverGetPFList = 13663;</code>
     */
    public static final int serverGetPFList_VALUE = 13663;
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>serverChoosePF = 13664;</code>
     */
    public static final int serverChoosePF_VALUE = 13664;
    /**
     * <pre>
     ** 服务器获取历史排名 
     * </pre>
     *
     * <code>serverGetHistoryRank = 13665;</code>
     */
    public static final int serverGetHistoryRank_VALUE = 13665;
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>serverH5Reward = 13666;</code>
     */
    public static final int serverH5Reward_VALUE = 13666;
    /**
     * <pre>
     ** 服务器返回新抽取奖杯 
     * </pre>
     *
     * <code>serverNewDrawWinCup = 13667;</code>
     */
    public static final int serverNewDrawWinCup_VALUE = 13667;
    /**
     * <pre>
     ** 服务器返回新(新)大厅信息 
     * </pre>
     *
     * <code>serverGetNewHallInfo = 13668;</code>
     */
    public static final int serverGetNewHallInfo_VALUE = 13668;
    /**
     * <pre>
     ** 服务器返回玩家皮肤界面信息 
     * </pre>
     *
     * <code>serverGetSkinInfo = 13669;</code>
     */
    public static final int serverGetSkinInfo_VALUE = 13669;
    /**
     * <pre>
     ** 服务器返回玩家修改皮肤信息 
     * </pre>
     *
     * <code>serverEquipSkin = 13670;</code>
     */
    public static final int serverEquipSkin_VALUE = 13670;
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>serverGetStoreData = 14700;</code>
     */
    public static final int serverGetStoreData_VALUE = 14700;
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>serverConvertGoods = 14701;</code>
     */
    public static final int serverConvertGoods_VALUE = 14701;
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>serverWXPayResult = 14702;</code>
     */
    public static final int serverWXPayResult_VALUE = 14702;
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>serverBuyOrderGoods = 14703;</code>
     */
    public static final int serverBuyOrderGoods_VALUE = 14703;
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>serverGetFirstCharge = 14704;</code>
     */
    public static final int serverGetFirstCharge_VALUE = 14704;
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>serverGetDailyGift = 14705;</code>
     */
    public static final int serverGetDailyGift_VALUE = 14705;
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>serverGetMonthCard = 14706;</code>
     */
    public static final int serverGetMonthCard_VALUE = 14706;
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>serverGetResurgenceGift = 14707;</code>
     */
    public static final int serverGetResurgenceGift_VALUE = 14707;
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>serverQueryDailyTask = 19663;</code>
     */
    public static final int serverQueryDailyTask_VALUE = 19663;
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>serverGetDailyTaskAward = 19664;</code>
     */
    public static final int serverGetDailyTaskAward_VALUE = 19664;
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>serverGetNoviceReward = 19665;</code>
     */
    public static final int serverGetNoviceReward_VALUE = 19665;
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>serverQueryNoviceTask = 19666;</code>
     */
    public static final int serverQueryNoviceTask_VALUE = 19666;
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>serverGetDTAward = 19667;</code>
     */
    public static final int serverGetDTAward_VALUE = 19667;
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>clientSendTelCode = 24262;</code>
     */
    public static final int clientSendTelCode_VALUE = 24262;
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>clientVerifyTelCode = 24263;</code>
     */
    public static final int clientVerifyTelCode_VALUE = 24263;
    /**
     * <pre>
     ** 客户端领取任务奖励 
     * </pre>
     *
     * <code>clientGetTaskAward = 24264;</code>
     */
    public static final int clientGetTaskAward_VALUE = 24264;
    /**
     * <pre>
     ** 客户端查询推广列表详细信息 
     * </pre>
     *
     * <code>clientQueryShareDetail = 24265;</code>
     */
    public static final int clientQueryShareDetail_VALUE = 24265;
    /**
     * <pre>
     ** 客户端请求分享列表 
     * </pre>
     *
     * <code>clientQueryShareList = 24266;</code>
     */
    public static final int clientQueryShareList_VALUE = 24266;
    /**
     * <pre>
     ** 客户端请求分包 
     * </pre>
     *
     * <code>clientSharePackage = 24267;</code>
     */
    public static final int clientSharePackage_VALUE = 24267;
    /**
     * <pre>
     ** 客户端请求大厅活动奖励 
     * </pre>
     *
     * <code>clientGetAwardList = 24268;</code>
     */
    public static final int clientGetAwardList_VALUE = 24268;
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>serverSendTelCode = 24662;</code>
     */
    public static final int serverSendTelCode_VALUE = 24662;
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息 
     * </pre>
     *
     * <code>serverVerifyTelCode = 24663;</code>
     */
    public static final int serverVerifyTelCode_VALUE = 24663;
    /**
     * <pre>
     ** 服务器返回领取任务奖励 
     * </pre>
     *
     * <code>serverGetTaskAward = 24664;</code>
     */
    public static final int serverGetTaskAward_VALUE = 24664;
    /**
     * <pre>
     ** 服务器返回详细信息 
     * </pre>
     *
     * <code>serverQueryShareDetail = 24665;</code>
     */
    public static final int serverQueryShareDetail_VALUE = 24665;
    /**
     * <pre>
     ** 服务器返回分享列表 
     * </pre>
     *
     * <code>serverQueryShareList = 24666;</code>
     */
    public static final int serverQueryShareList_VALUE = 24666;
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>serverSharePackage = 24667;</code>
     */
    public static final int serverSharePackage_VALUE = 24667;
    /**
     * <pre>
     ** 服务器返回大厅活动奖励 
     * </pre>
     *
     * <code>serverGetAwardList = 24668;</code>
     */
    public static final int serverGetAwardList_VALUE = 24668;
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>serverGetMail = 20650;</code>
     */
    public static final int serverGetMail_VALUE = 20650;
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>serverGetMailReward = 20651;</code>
     */
    public static final int serverGetMailReward_VALUE = 20651;
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>serverDelMail = 20652;</code>
     */
    public static final int serverDelMail_VALUE = 20652;
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>serverReadMail = 20653;</code>
     */
    public static final int serverReadMail_VALUE = 20653;
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>serverDel2R = 20654;</code>
     */
    public static final int serverDel2R_VALUE = 20654;
    /**
     * <pre>
     ** 客户端获取用户收货地址 
     * </pre>
     *
     * <code>clientGetReceiveAddr = 26001;</code>
     */
    public static final int clientGetReceiveAddr_VALUE = 26001;
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>clientAlterReceiveAddr = 26002;</code>
     */
    public static final int clientAlterReceiveAddr_VALUE = 26002;
    /**
     * <pre>
     ** 夺宝主界面，当前商品列表信息接口 
     * </pre>
     *
     * <code>clientSnatchList = 26003;</code>
     */
    public static final int clientSnatchList_VALUE = 26003;
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>clientSnatchItemDetail = 26004;</code>
     */
    public static final int clientSnatchItemDetail_VALUE = 26004;
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>clientSnatchBet = 26005;</code>
     */
    public static final int clientSnatchBet_VALUE = 26005;
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>clientSnatchAwardList = 26006;</code>
     */
    public static final int clientSnatchAwardList_VALUE = 26006;
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>clientOwnSnatchRecord = 26007;</code>
     */
    public static final int clientOwnSnatchRecord_VALUE = 26007;
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>clientSnatchItemHistory = 26008;</code>
     */
    public static final int clientSnatchItemHistory_VALUE = 26008;
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>clientSnatchHistoryDetail = 26009;</code>
     */
    public static final int clientSnatchHistoryDetail_VALUE = 26009;
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>clientSnatchGetAward = 26010;</code>
     */
    public static final int clientSnatchGetAward_VALUE = 26010;
    /**
     * <pre>
     ** 服务器返回用户收货地址
     * </pre>
     *
     * <code>serverGetReceiveAddr = 26501;</code>
     */
    public static final int serverGetReceiveAddr_VALUE = 26501;
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>serverAlterReceiveAddr = 26502;</code>
     */
    public static final int serverAlterReceiveAddr_VALUE = 26502;
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>serverSnatchList = 26503;</code>
     */
    public static final int serverSnatchList_VALUE = 26503;
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>serverSnatchItemDetail = 26504;</code>
     */
    public static final int serverSnatchItemDetail_VALUE = 26504;
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>serverSnatchBet = 26505;</code>
     */
    public static final int serverSnatchBet_VALUE = 26505;
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>serverSnatchAwardList = 26506;</code>
     */
    public static final int serverSnatchAwardList_VALUE = 26506;
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>serverOwnSnatchRecord = 26507;</code>
     */
    public static final int serverOwnSnatchRecord_VALUE = 26507;
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>serverSnatchItemHistory = 26508;</code>
     */
    public static final int serverSnatchItemHistory_VALUE = 26508;
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>serverSnatchHistoryDetail = 26509;</code>
     */
    public static final int serverSnatchHistoryDetail_VALUE = 26509;
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>serverSnatchGetAward = 26510;</code>
     */
    public static final int serverSnatchGetAward_VALUE = 26510;
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>clientEnterDG = 27001;</code>
     */
    public static final int clientEnterDG_VALUE = 27001;
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>clientDGLottery = 27002;</code>
     */
    public static final int clientDGLottery_VALUE = 27002;
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>clientResetLottery = 27003;</code>
     */
    public static final int clientResetLottery_VALUE = 27003;
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>clientExitDG = 27004;</code>
     */
    public static final int clientExitDG_VALUE = 27004;
    /**
     * <pre>
     ** 客户端请求开启抽奖活动 
     * </pre>
     *
     * <code>clientOpenDG = 27005;</code>
     */
    public static final int clientOpenDG_VALUE = 27005;
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>clientOpenDD = 27006;</code>
     */
    public static final int clientOpenDD_VALUE = 27006;
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>clientDDLottery = 27007;</code>
     */
    public static final int clientDDLottery_VALUE = 27007;
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>clientExitDD = 27008;</code>
     */
    public static final int clientExitDD_VALUE = 27008;
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>serverEnterDG = 27501;</code>
     */
    public static final int serverEnterDG_VALUE = 27501;
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>serverDGLottery = 27502;</code>
     */
    public static final int serverDGLottery_VALUE = 27502;
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>serverResetLottery = 27503;</code>
     */
    public static final int serverResetLottery_VALUE = 27503;
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>serverExitDG = 27504;</code>
     */
    public static final int serverExitDG_VALUE = 27504;
    /**
     * <pre>
     ** 服务器返回用户开启抽奖 
     * </pre>
     *
     * <code>serverOpenDG = 27505;</code>
     */
    public static final int serverOpenDG_VALUE = 27505;
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>serverOpenDD = 27506;</code>
     */
    public static final int serverOpenDD_VALUE = 27506;
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>serverDDLottery = 27507;</code>
     */
    public static final int serverDDLottery_VALUE = 27507;
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>serverExitDD = 27508;</code>
     */
    public static final int serverExitDD_VALUE = 27508;
    /**
     * <pre>
     ** 客户端请求所有道具信息 
     * </pre>
     *
     * <code>clientQueryProp = 28001;</code>
     */
    public static final int clientQueryProp_VALUE = 28001;
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>clientUseProp = 28002;</code>
     */
    public static final int clientUseProp_VALUE = 28002;
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>clientQueryPropCount = 28003;</code>
     */
    public static final int clientQueryPropCount_VALUE = 28003;
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>serverQueryProp = 28501;</code>
     */
    public static final int serverQueryProp_VALUE = 28501;
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>serverUseProp = 28502;</code>
     */
    public static final int serverUseProp_VALUE = 28502;
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>serverQueryPropCount = 28503;</code>
     */
    public static final int serverQueryPropCount_VALUE = 28503;
    /**
     * <pre>
     ** 客户端请求月签信息666666 
     * </pre>
     *
     * <code>clientMonthSignInfo = 21001;</code>
     */
    public static final int clientMonthSignInfo_VALUE = 21001;
    /**
     * <pre>
     ** 客户端请求(新)签到 
     * </pre>
     *
     * <code>clientMonthSign = 21002;</code>
     */
    public static final int clientMonthSign_VALUE = 21002;
    /**
     * <pre>
     ** 客户端获取暴击奖励 
     * </pre>
     *
     * <code>clientGetCritReward = 21003;</code>
     */
    public static final int clientGetCritReward_VALUE = 21003;
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>clientLTLottery = 21004;</code>
     */
    public static final int clientLTLottery_VALUE = 21004;
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>clientGetTSReward = 21005;</code>
     */
    public static final int clientGetTSReward_VALUE = 21005;
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>clientGetLuckInfo = 21006;</code>
     */
    public static final int clientGetLuckInfo_VALUE = 21006;
    /**
     * <pre>
     ** 服务端返回月签信息 
     * </pre>
     *
     * <code>serverMonthSignInfo = 21501;</code>
     */
    public static final int serverMonthSignInfo_VALUE = 21501;
    /**
     * <pre>
     ** 服务器返回(新)月签到 
     * </pre>
     *
     * <code>serverMonthSign = 21502;</code>
     */
    public static final int serverMonthSign_VALUE = 21502;
    /**
     * <pre>
     ** 服务器返回获取暴击奖励 
     * </pre>
     *
     * <code>serverGetCritReward = 21503;</code>
     */
    public static final int serverGetCritReward_VALUE = 21503;
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>serverLTLottery = 21504;</code>
     */
    public static final int serverLTLottery_VALUE = 21504;
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>serverGetTSReward = 21505;</code>
     */
    public static final int serverGetTSReward_VALUE = 21505;
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>serverGetLuckInfo = 21506;</code>
     */
    public static final int serverGetLuckInfo_VALUE = 21506;
    /**
     * <pre>
     ** 服务器广播玩家加入房间消息 
     * </pre>
     *
     * <code>b_EnterRoom = 22001;</code>
     */
    public static final int b_EnterRoom_VALUE = 22001;
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>b_GameStart = 22002;</code>
     */
    public static final int b_GameStart_VALUE = 22002;
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>b_DoCatch = 22003;</code>
     */
    public static final int b_DoCatch_VALUE = 22003;
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>b_CatchResult = 22004;</code>
     */
    public static final int b_CatchResult_VALUE = 22004;
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>b_PlayCards = 22005;</code>
     */
    public static final int b_PlayCards_VALUE = 22005;
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>b_SendDiZhuCard = 22007;</code>
     */
    public static final int b_SendDiZhuCard_VALUE = 22007;
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>b_NextPlayer = 22008;</code>
     */
    public static final int b_NextPlayer_VALUE = 22008;
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>b_GameSettle = 22009;</code>
     */
    public static final int b_GameSettle_VALUE = 22009;
    /**
     * <pre>
     ** 广播公告消息 
     * </pre>
     *
     * <code>b_RewardMessage = 22010;</code>
     */
    public static final int b_RewardMessage_VALUE = 22010;
    /**
     * <pre>
     ** 广播玩家托管消息
     * </pre>
     *
     * <code>b_AutoPlay = 22011;</code>
     */
    public static final int b_AutoPlay_VALUE = 22011;
    /**
     * <pre>
     ** 推送玩家应该加入的房间号和url 
     * </pre>
     *
     * <code>b_RoomIdUrl = 22012;</code>
     */
    public static final int b_RoomIdUrl_VALUE = 22012;
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>b_AwardDialog = 22013;</code>
     */
    public static final int b_AwardDialog_VALUE = 22013;
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>b_BuySuccess = 22014;</code>
     */
    public static final int b_BuySuccess_VALUE = 22014;
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>b_RedDotPush = 22015;</code>
     */
    public static final int b_RedDotPush_VALUE = 22015;
    /**
     * <pre>
     ** 游戏内强制公告推送 
     * </pre>
     *
     * <code>b_ForceAnnounce = 22016;</code>
     */
    public static final int b_ForceAnnounce_VALUE = 22016;
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>b_DGameMessage = 22017;</code>
     */
    public static final int b_DGameMessage_VALUE = 22017;
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>b_DGOver = 22018;</code>
     */
    public static final int b_DGOver_VALUE = 22018;
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>b_DDOver = 22019;</code>
     */
    public static final int b_DDOver_VALUE = 22019;
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>b_DDInfo = 22020;</code>
     */
    public static final int b_DDInfo_VALUE = 22020;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static MessageTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return Error;
        case 10100: return clientLogin;
        case 10101: return clientGetUserInfo;
        case 10102: return clientReturnHallHeartBeat;
        case 10103: return clientNewLogin;
        case 23103: return clientReturnGameHeartBeat;
        case 11150: return clientDoCatch;
        case 11151: return clientPlayCards;
        case 11152: return clientEnterRoom;
        case 11154: return clientLeaveRoom;
        case 11155: return clientRecoverGame;
        case 11156: return clientAutoPlay;
        case 11157: return clientQueryIndex;
        case 12200: return clientQuickJoin;
        case 12201: return clientCancleJoin;
        case 12202: return clientRetryReturnGame;
        case 13250: return clientGetRankList;
        case 13251: return clientSignup;
        case 13252: return clientGetSignupRewardList;
        case 13253: return clientDrawWinCup;
        case 13254: return clientGetRoomConfig;
        case 13255: return clientGetHallInfo;
        case 13256: return clientRewardMessage;
        case 13257: return clientGetRoomCardConfig;
        case 13258: return clientCreateRoom;
        case 13259: return clientGetMonthCardDiamond;
        case 13260: return clientGetLotteryCount;
        case 13261: return clientGetRoomInfo;
        case 13262: return clientPlayerLogout;
        case 13263: return clientCheckConnect;
        case 13264: return clientGetPFList;
        case 13265: return clientChoosePF;
        case 13266: return clientGetHistoryRank;
        case 13267: return clientH5Reward;
        case 13268: return clientNewDrawWinCup;
        case 13269: return clientGetNewHallInfo;
        case 13270: return clientGetSkinInfo;
        case 13271: return clientEquipSkin;
        case 14300: return clientGetStoreData;
        case 14301: return clientConvertGoods;
        case 14302: return clientWXPayResultQuery;
        case 14303: return clientBuyOrderGoods;
        case 14304: return clientGetFirstCharge;
        case 14305: return clientGetDailyGift;
        case 14306: return clientGetMonthCard;
        case 14307: return clientGetResurgenceGift;
        case 19264: return clientQueryDailyTask;
        case 19265: return clientGetDailyTaskAward;
        case 19266: return clientGetNoviceReward;
        case 19267: return clientQueryNoviceTask;
        case 19268: return clientGetDTAward;
        case 25271: return clientGetAnnounce;
        case 25801: return serverGetAnnounce;
        case 20600: return clientGetMail;
        case 20601: return clientGetMailReward;
        case 20602: return clientDelMail;
        case 20603: return clientReadMail;
        case 20604: return clientDel2R;
        case 29001: return clientGetVipInfo;
        case 29002: return clientGetVipWeek;
        case 29003: return serverGetVipInfo;
        case 29004: return serverGetVipWeek;
        case 10500: return serverLogin;
        case 10501: return serverGetUserInfo;
        case 10502: return serverSendHallHeartBeat;
        case 23503: return serverSendGameHeartBeat;
        case 11550: return serverEnterRoom;
        case 11551: return serverDoCatch;
        case 11552: return serverPlayCards;
        case 11553: return serverRecoverGame;
        case 11554: return serverAutoPlay;
        case 11555: return serverLeaveRoom;
        case 11556: return serverQueryIndex;
        case 11557: return serverRetryReturnGame;
        case 12600: return serverQuickJoin;
        case 12601: return serverCancleJoin;
        case 13650: return serverGetRankList;
        case 13651: return serverGetSignupRewardList;
        case 13652: return serverGetHallInfo;
        case 13653: return serverSignup;
        case 13654: return serverRewardMessage;
        case 13655: return serverDrawWinCup;
        case 13656: return serverGetRoomConfig;
        case 13657: return serverGetRoomCardConfig;
        case 13658: return serverCreateRoom;
        case 13659: return serverGetMonthCardDiamond;
        case 13660: return serverGetLotteryCount;
        case 13661: return serverGetRoomInfo;
        case 13662: return serverCheckConnect;
        case 13663: return serverGetPFList;
        case 13664: return serverChoosePF;
        case 13665: return serverGetHistoryRank;
        case 13666: return serverH5Reward;
        case 13667: return serverNewDrawWinCup;
        case 13668: return serverGetNewHallInfo;
        case 13669: return serverGetSkinInfo;
        case 13670: return serverEquipSkin;
        case 14700: return serverGetStoreData;
        case 14701: return serverConvertGoods;
        case 14702: return serverWXPayResult;
        case 14703: return serverBuyOrderGoods;
        case 14704: return serverGetFirstCharge;
        case 14705: return serverGetDailyGift;
        case 14706: return serverGetMonthCard;
        case 14707: return serverGetResurgenceGift;
        case 19663: return serverQueryDailyTask;
        case 19664: return serverGetDailyTaskAward;
        case 19665: return serverGetNoviceReward;
        case 19666: return serverQueryNoviceTask;
        case 19667: return serverGetDTAward;
        case 24262: return clientSendTelCode;
        case 24263: return clientVerifyTelCode;
        case 24264: return clientGetTaskAward;
        case 24265: return clientQueryShareDetail;
        case 24266: return clientQueryShareList;
        case 24267: return clientSharePackage;
        case 24268: return clientGetAwardList;
        case 24662: return serverSendTelCode;
        case 24663: return serverVerifyTelCode;
        case 24664: return serverGetTaskAward;
        case 24665: return serverQueryShareDetail;
        case 24666: return serverQueryShareList;
        case 24667: return serverSharePackage;
        case 24668: return serverGetAwardList;
        case 20650: return serverGetMail;
        case 20651: return serverGetMailReward;
        case 20652: return serverDelMail;
        case 20653: return serverReadMail;
        case 20654: return serverDel2R;
        case 26001: return clientGetReceiveAddr;
        case 26002: return clientAlterReceiveAddr;
        case 26003: return clientSnatchList;
        case 26004: return clientSnatchItemDetail;
        case 26005: return clientSnatchBet;
        case 26006: return clientSnatchAwardList;
        case 26007: return clientOwnSnatchRecord;
        case 26008: return clientSnatchItemHistory;
        case 26009: return clientSnatchHistoryDetail;
        case 26010: return clientSnatchGetAward;
        case 26501: return serverGetReceiveAddr;
        case 26502: return serverAlterReceiveAddr;
        case 26503: return serverSnatchList;
        case 26504: return serverSnatchItemDetail;
        case 26505: return serverSnatchBet;
        case 26506: return serverSnatchAwardList;
        case 26507: return serverOwnSnatchRecord;
        case 26508: return serverSnatchItemHistory;
        case 26509: return serverSnatchHistoryDetail;
        case 26510: return serverSnatchGetAward;
        case 27001: return clientEnterDG;
        case 27002: return clientDGLottery;
        case 27003: return clientResetLottery;
        case 27004: return clientExitDG;
        case 27005: return clientOpenDG;
        case 27006: return clientOpenDD;
        case 27007: return clientDDLottery;
        case 27008: return clientExitDD;
        case 27501: return serverEnterDG;
        case 27502: return serverDGLottery;
        case 27503: return serverResetLottery;
        case 27504: return serverExitDG;
        case 27505: return serverOpenDG;
        case 27506: return serverOpenDD;
        case 27507: return serverDDLottery;
        case 27508: return serverExitDD;
        case 28001: return clientQueryProp;
        case 28002: return clientUseProp;
        case 28003: return clientQueryPropCount;
        case 28501: return serverQueryProp;
        case 28502: return serverUseProp;
        case 28503: return serverQueryPropCount;
        case 21001: return clientMonthSignInfo;
        case 21002: return clientMonthSign;
        case 21003: return clientGetCritReward;
        case 21004: return clientLTLottery;
        case 21005: return clientGetTSReward;
        case 21006: return clientGetLuckInfo;
        case 21501: return serverMonthSignInfo;
        case 21502: return serverMonthSign;
        case 21503: return serverGetCritReward;
        case 21504: return serverLTLottery;
        case 21505: return serverGetTSReward;
        case 21506: return serverGetLuckInfo;
        case 22001: return b_EnterRoom;
        case 22002: return b_GameStart;
        case 22003: return b_DoCatch;
        case 22004: return b_CatchResult;
        case 22005: return b_PlayCards;
        case 22007: return b_SendDiZhuCard;
        case 22008: return b_NextPlayer;
        case 22009: return b_GameSettle;
        case 22010: return b_RewardMessage;
        case 22011: return b_AutoPlay;
        case 22012: return b_RoomIdUrl;
        case 22013: return b_AwardDialog;
        case 22014: return b_BuySuccess;
        case 22015: return b_RedDotPush;
        case 22016: return b_ForceAnnounce;
        case 22017: return b_DGameMessage;
        case 22018: return b_DGOver;
        case 22019: return b_DDOver;
        case 22020: return b_DDInfo;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageTypeEnum>() {
            public MessageTypeEnum findValueByNumber(int number) {
              return MessageTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.getDescriptor().getEnumTypes().get(1);
    }

    private static final MessageTypeEnum[] VALUES = values();

    public static MessageTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kys.util.netty.proto.MessageTypeEnum)
  }

  /**
   * Protobuf enum {@code com.kys.util.netty.proto.ResultCode}
   */
  public enum ResultCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** 成功 
     * </pre>
     *
     * <code>success = 0;</code>
     */
    success(0),
    /**
     * <pre>
     ** 任意失败 
     * </pre>
     *
     * <code>err = 1;</code>
     */
    err(1),
    /**
     * <pre>
     ** 没有该方法错误 
     * </pre>
     *
     * <code>errNoMethod = 2;</code>
     */
    errNoMethod(2),
    /**
     * <pre>
     ** 消息为空 
     * </pre>
     *
     * <code>errNulMsg = 3;</code>
     */
    errNulMsg(3),
    /**
     * <pre>
     ** 登录过期 
     * </pre>
     *
     * <code>errLoginInvalid = 4;</code>
     */
    errLoginInvalid(4),
    /**
     * <pre>
     ** 网络连接错误 
     * </pre>
     *
     * <code>errNetConnect = 5;</code>
     */
    errNetConnect(5),
    /**
     * <pre>
     ** 请先完成游戏 
     * </pre>
     *
     * <code>errGameNotOver = 6;</code>
     */
    errGameNotOver(6),
    /**
     * <pre>
     ** 登陆错误 
     * </pre>
     *
     * <code>errLogin = 100;</code>
     */
    errLogin(100),
    /**
     * <pre>
     ** token失效 
     * </pre>
     *
     * <code>errLoginTokenInvalid = 101;</code>
     */
    errLoginTokenInvalid(101),
    /**
     * <pre>
     ** 账号违规，无法登录 
     * </pre>
     *
     * <code>errLoginBan = 102;</code>
     */
    errLoginBan(102),
    /**
     * <pre>
     ** 重连时间过期 
     * </pre>
     *
     * <code>errLoginReconnect = 103;</code>
     */
    errLoginReconnect(103),
    /**
     * <pre>
     ** 排行榜错误 
     * </pre>
     *
     * <code>errRank = 300;</code>
     */
    errRank(300),
    /**
     * <pre>
     ** 排行榜为空 
     * </pre>
     *
     * <code>errRankEmpty = 301;</code>
     */
    errRankEmpty(301),
    /**
     * <pre>
     ** 抽奖失败，未知错误 
     * </pre>
     *
     * <code>errLottery = 400;</code>
     */
    errLottery(400),
    /**
     * <pre>
     ** 抽奖失败，剩余次数不足 
     * </pre>
     *
     * <code>errLotteryNotEnough = 401;</code>
     */
    errLotteryNotEnough(401),
    /**
     * <pre>
     ** 商城错误 
     * </pre>
     *
     * <code>errShop = 500;</code>
     */
    errShop(500),
    /**
     * <pre>
     ** 物品不存在 
     * </pre>
     *
     * <code>errShopItemNotExist = 501;</code>
     */
    errShopItemNotExist(501),
    /**
     * <pre>
     ** 购买货币不足 
     * </pre>
     *
     * <code>errShopChipNotEnough = 502;</code>
     */
    errShopChipNotEnough(502),
    /**
     * <pre>
     ** 每日礼包今天已经购买完：今天已经购买完了,请明天再来 
     * </pre>
     *
     * <code>errDailyGiftNoLeft = 503;</code>
     */
    errDailyGiftNoLeft(503),
    /**
     * <pre>
     ** 金豆复活礼包已经买完 
     * </pre>
     *
     * <code>errGoldcoinResGiftNoLeft = 504;</code>
     */
    errGoldcoinResGiftNoLeft(504),
    /**
     * <pre>
     ** 钻石复活礼包已经买完 
     * </pre>
     *
     * <code>errDiamondResGiftNoLeft = 505;</code>
     */
    errDiamondResGiftNoLeft(505),
    /**
     * <pre>
     ** 当天购买次数已用尽 
     * </pre>
     *
     * <code>errUnmatchBuyResGift = 506;</code>
     */
    errUnmatchBuyResGift(506),
    /**
     * <pre>
     ** 未关注公众号 
     * </pre>
     *
     * <code>errNotFollowWxAccount = 507;</code>
     */
    errNotFollowWxAccount(507),
    /**
     * <pre>
     ** 兑换失败 
     * </pre>
     *
     * <code>errConvertFailed = 508;</code>
     */
    errConvertFailed(508),
    /**
     * <pre>
     ** 未绑定手机号 
     * </pre>
     *
     * <code>errNotBindTel = 509;</code>
     */
    errNotBindTel(509),
    /**
     * <pre>
     ** 企业付款到限额:今日红包已发完，请明日尽早领取 
     * </pre>
     *
     * <code>errEnPayNoMoney = 510;</code>
     */
    errEnPayNoMoney(510),
    /**
     * <pre>
     ** 微信红包没有钱了,兑换失败，请联系客服 
     * </pre>
     *
     * <code>errWxRedNoMoney = 511;</code>
     */
    errWxRedNoMoney(511),
    /**
     * <pre>
     ** 今日充值超限 
     * </pre>
     *
     * <code>errChargeOver = 512;</code>
     */
    errChargeOver(512),
    /**
     * <pre>
     ** 微信系统繁忙 
     * </pre>
     *
     * <code>errWxSystemError = 513;</code>
     */
    errWxSystemError(513),
    /**
     * <pre>
     ** 抽奖等待时间未到 
     * </pre>
     *
     * <code>errLotteryWaitTime = 514;</code>
     */
    errLotteryWaitTime(514),
    /**
     * <pre>
     ** 本周兑换次数已经用尽 
     * </pre>
     *
     * <code>errExchangeExhaust = 515;</code>
     */
    errExchangeExhaust(515),
    /**
     * <pre>
     ** 加入房间错误码 
     * </pre>
     *
     * <code>errRoom = 600;</code>
     */
    errRoom(600),
    /**
     * <pre>
     ** 筹码不足加入房间 
     * </pre>
     *
     * <code>errRoomChipNotEnough = 601;</code>
     */
    errRoomChipNotEnough(601),
    /**
     * <pre>
     ** 钻石不足加入房间 
     * </pre>
     *
     * <code>errRoomDiamondNotEnough = 602;</code>
     */
    errRoomDiamondNotEnough(602),
    /**
     * <pre>
     ** 重新加入房间错误，房间不存在
     * </pre>
     *
     * <code>errRoomNotExist = 603;</code>
     */
    errRoomNotExist(603),
    /**
     * <pre>
     ** 玩家不在房间中 
     * </pre>
     *
     * <code>errRoomNotIn = 604;</code>
     */
    errRoomNotIn(604),
    /**
     * <pre>
     ** 筹码大于加入房间最大值 
     * </pre>
     *
     * <code>errRoomChipToMuch = 605;</code>
     */
    errRoomChipToMuch(605),
    /**
     * <pre>
     ** 钻石大于加入房间最大值 
     * </pre>
     *
     * <code>errRoomDiamondToMuch = 606;</code>
     */
    errRoomDiamondToMuch(606),
    /**
     * <pre>
     ** 用户信息接口 
     * </pre>
     *
     * <code>errUserIsNull = 701;</code>
     */
    errUserIsNull(701),
    /**
     * <pre>
     ** 玩家没有该皮肤 
     * </pre>
     *
     * <code>errNotOwnThisSkin = 702;</code>
     */
    errNotOwnThisSkin(702),
    /**
     * <pre>
     ** 游戏接口 
     * </pre>
     *
     * <code>errGame = 800;</code>
     */
    errGame(800),
    /**
     * <pre>
     ** 房间不存在 
     * </pre>
     *
     * <code>errGameRoomNotExist = 801;</code>
     */
    errGameRoomNotExist(801),
    /**
     * <pre>
     ** 当前房间不在游戏中，不能托管 
     * </pre>
     *
     * <code>errGameAutoPlay = 802;</code>
     */
    errGameAutoPlay(802),
    /**
     * <pre>
     ** 当前不应该该玩家操作 
     * </pre>
     *
     * <code>errGameInvaildOper = 803;</code>
     */
    errGameInvaildOper(803),
    /**
     * <pre>
     ** 叫地主分值非法 
     * </pre>
     *
     * <code>errGameInvaildCatchPoint = 804;</code>
     */
    errGameInvaildCatchPoint(804),
    /**
     * <pre>
     ** 进入房间失败 
     * </pre>
     *
     * <code>errGameEnterRoomFail = 805;</code>
     */
    errGameEnterRoomFail(805),
    /**
     * <pre>
     ** 玩家不在房间中 
     * </pre>
     *
     * <code>errGamePlayerNotIn = 806;</code>
     */
    errGamePlayerNotIn(806),
    /**
     * <pre>
     ** 玩家牌型错误 
     * </pre>
     *
     * <code>errGameCardInvaild = 807;</code>
     */
    errGameCardInvaild(807),
    /**
     * <pre>
     ** 分享接口
     * </pre>
     *
     * <code>errPm = 900;</code>
     */
    errPm(900),
    /**
     * <pre>
     ** 分享接口-发送短信校验码-手机号码非法
     * </pre>
     *
     * <code>errPmTelNumInvaild = 901;</code>
     */
    errPmTelNumInvaild(901),
    /**
     * <pre>
     ** 发送短信校验码-验证码校验失败
     * </pre>
     *
     * <code>errPmVerifyCodeFail = 902;</code>
     */
    errPmVerifyCodeFail(902),
    /**
     * <pre>
     ** 领取分享奖励失败-未完成 
     * </pre>
     *
     * <code>errPmGetAwardNotFinish = 903;</code>
     */
    errPmGetAwardNotFinish(903),
    /**
     * <pre>
     ** 领取分享奖励失败-未绑定手机号
     * </pre>
     *
     * <code>errPmGetAwardNotBindTel = 904;</code>
     */
    errPmGetAwardNotBindTel(904),
    /**
     * <pre>
     ** 已经绑定过手机号了 
     * </pre>
     *
     * <code>errPmAlreadyBind = 905;</code>
     */
    errPmAlreadyBind(905),
    /**
     * <pre>
     ** 重发验证码时间过短
     * </pre>
     *
     * <code>errPmRequestIntervalTooShort = 906;</code>
     */
    errPmRequestIntervalTooShort(906),
    /**
     * <pre>
     ** 分包失败 
     * </pre>
     *
     * <code>errPmSharePackageFail = 907;</code>
     */
    errPmSharePackageFail(907),
    /**
     * <pre>
     ** 还没有任何小伙伴接受邀请 
     * </pre>
     *
     * <code>errPmNoSlave = 908;</code>
     */
    errPmNoSlave(908),
    /**
     * <pre>
     ** 你和请求玩家不是小伙伴
     * </pre>
     *
     * <code>errPmNotRelationship = 909;</code>
     */
    errPmNotRelationship(909),
    /**
     * <pre>
     ** 手机号已经被绑定了 
     * </pre>
     *
     * <code>errPmTelAlreadyUsed = 910;</code>
     */
    errPmTelAlreadyUsed(910),
    /**
     * <pre>
     ** 推送奖励公告为空 
     * </pre>
     *
     * <code>errAwardMsgIsNul = 1000;</code>
     */
    errAwardMsgIsNul(1000),
    /**
     * <pre>
     ** 领取失败 
     * </pre>
     *
     * <code>errGetDailyFailed = 1100;</code>
     */
    errGetDailyFailed(1100),
    /**
     * <pre>
     ** 新手任务已过期 
     * </pre>
     *
     * <code>errNoviceTaskexpired = 1200;</code>
     */
    errNoviceTaskexpired(1200),
    /**
     * <pre>
     ** 领取失败 
     * </pre>
     *
     * <code>errGetNoviceFailed = 1201;</code>
     */
    errGetNoviceFailed(1201),
    /**
     * <pre>
     ** 删除失败，请先领取 
     * </pre>
     *
     * <code>errDeleteMail = 1300;</code>
     */
    errDeleteMail(1300),
    /**
     * <pre>
     ** 夺宝商城接口错误 
     * </pre>
     *
     * <code>errSnatch = 1400;</code>
     */
    errSnatch(1400),
    /**
     * <pre>
     ** 获取夺宝商城主界面报错 
     * </pre>
     *
     * <code>errSnatchGetList = 1401;</code>
     */
    errSnatchGetList(1401),
    /**
     * <pre>
     ** 夺宝-下注值超过能下注值 
     * </pre>
     *
     * <code>errSnatchInvaildBet = 1402;</code>
     */
    errSnatchInvaildBet(1402),
    /**
     * <pre>
     ** 夺宝-奖杯不足下注 
     * </pre>
     *
     * <code>errSnatchWincupNotEnough = 1403;</code>
     */
    errSnatchWincupNotEnough(1403),
    /**
     * <pre>
     ** 夺宝-不能领取奖励 
     * </pre>
     *
     * <code>errSnatchInvaildGetAward = 1404;</code>
     */
    errSnatchInvaildGetAward(1404),
    /**
     * <pre>
     ** 夺宝-已经没有更多的历史记录了
     * </pre>
     *
     * <code>errSnatchNoMoreHistories = 1405;</code>
     */
    errSnatchNoMoreHistories(1405),
    /**
     * <pre>
     ** 夺宝-没有填写详细的地址信息，不能领取实物奖励 
     * </pre>
     *
     * <code>errSnatchRequireAddrDetail = 1406;</code>
     */
    errSnatchRequireAddrDetail(1406),
    /**
     * <pre>
     ** 钻石宝箱接口错误 
     * </pre>
     *
     * <code>errDG = 1500;</code>
     */
    errDG(1500),
    /**
     * <pre>
     **钻石宝箱已经过期 
     * </pre>
     *
     * <code>errDGExpired = 1501;</code>
     */
    errDGExpired(1501),
    /**
     * <pre>
     ** 宝箱已经抽取完了,请重置 
     * </pre>
     *
     * <code>errBoxIsOver = 1502;</code>
     */
    errBoxIsOver(1502),
    /**
     * <pre>
     ** 重置失败 
     * </pre>
     *
     * <code>errReset = 1503;</code>
     */
    errReset(1503),
    /**
     * <pre>
     ** 游戏开启失败 
     * </pre>
     *
     * <code>errOpenDg = 1504;</code>
     */
    errOpenDg(1504),
    /**
     * <pre>
     ** 可重置没有重置机会 
     * </pre>
     *
     * <code>errNoLeftCont = 1505;</code>
     */
    errNoLeftCont(1505),
    /**
     * <pre>
     ** 重置机会用完了 
     * </pre>
     *
     * <code>errNoChance = 1506;</code>
     */
    errNoChance(1506),
    /**
     * <pre>
     ** 道具背包接口报错
     * </pre>
     *
     * <code>errProp = 1600;</code>
     */
    errProp(1600),
    /**
     * <pre>
     ** 没有这个道具报错
     * </pre>
     *
     * <code>errPropNotHaveThisProp = 1601;</code>
     */
    errPropNotHaveThisProp(1601),
    /**
     * <pre>
     ** 签到接口错误 
     * </pre>
     *
     * <code>errSign = 1700;</code>
     */
    errSign(1700),
    /**
     * <pre>
     ** 重复签到 
     * </pre>
     *
     * <code>errSignRepeate = 1701;</code>
     */
    errSignRepeate(1701),
    /**
     * <pre>
     ** 补签卡不足 
     * </pre>
     *
     * <code>errSignRSCNotEnough = 1702;</code>
     */
    errSignRSCNotEnough(1702),
    /**
     * <pre>
     ** 钻石不足 
     * </pre>
     *
     * <code>errSignRSDNotEnough = 1703;</code>
     */
    errSignRSDNotEnough(1703),
    /**
     * <pre>
     ** 签到时间错误 
     * </pre>
     *
     * <code>errSignTime = 1704;</code>
     */
    errSignTime(1704),
    /**
     * <pre>
     ** 幸运时钟抽奖失败 
     * </pre>
     *
     * <code>errSignLT = 1705;</code>
     */
    errSignLT(1705),
    /**
     * <pre>
     ** vip等级不足 
     * </pre>
     *
     * <code>errSignVipLack = 1706;</code>
     */
    errSignVipLack(1706),
    /**
     * <pre>
     ** 奖励已领取 
     * </pre>
     *
     * <code>errSignRewardHasGet = 1707;</code>
     */
    errSignRewardHasGet(1707),
    /**
     * <pre>
     ** 签到时间不足 
     * </pre>
     *
     * <code>errSignDayNotEnough = 1708;</code>
     */
    errSignDayNotEnough(1708),
    /**
     * <pre>
     ** VIP接口错误 
     * </pre>
     *
     * <code>errVipLvNotEnough = 1801;</code>
     */
    errVipLvNotEnough(1801),
    /**
     * <pre>
     ** 本周已经领过每周奖励了 
     * </pre>
     *
     * <code>errVipWeekAwardAlreadyGet = 1802;</code>
     */
    errVipWeekAwardAlreadyGet(1802),
    /**
     * <pre>
     ** 钻石滚动抽奖接口错误 
     * </pre>
     *
     * <code>errDD = 1900;</code>
     */
    errDD(1900),
    /**
     * <pre>
     ** 钻石不足 
     * </pre>
     *
     * <code>errDNotEnough = 1901;</code>
     */
    errDNotEnough(1901),
    /**
     * <pre>
     ** 该活动已关闭 
     * </pre>
     *
     * <code>errDDClose = 1902;</code>
     */
    errDDClose(1902),
    /**
     * <pre>
     ** 剩余次数不足 
     * </pre>
     *
     * <code>errDTimesNotEnough = 1903;</code>
     */
    errDTimesNotEnough(1903),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** 成功 
     * </pre>
     *
     * <code>success = 0;</code>
     */
    public static final int success_VALUE = 0;
    /**
     * <pre>
     ** 任意失败 
     * </pre>
     *
     * <code>err = 1;</code>
     */
    public static final int err_VALUE = 1;
    /**
     * <pre>
     ** 没有该方法错误 
     * </pre>
     *
     * <code>errNoMethod = 2;</code>
     */
    public static final int errNoMethod_VALUE = 2;
    /**
     * <pre>
     ** 消息为空 
     * </pre>
     *
     * <code>errNulMsg = 3;</code>
     */
    public static final int errNulMsg_VALUE = 3;
    /**
     * <pre>
     ** 登录过期 
     * </pre>
     *
     * <code>errLoginInvalid = 4;</code>
     */
    public static final int errLoginInvalid_VALUE = 4;
    /**
     * <pre>
     ** 网络连接错误 
     * </pre>
     *
     * <code>errNetConnect = 5;</code>
     */
    public static final int errNetConnect_VALUE = 5;
    /**
     * <pre>
     ** 请先完成游戏 
     * </pre>
     *
     * <code>errGameNotOver = 6;</code>
     */
    public static final int errGameNotOver_VALUE = 6;
    /**
     * <pre>
     ** 登陆错误 
     * </pre>
     *
     * <code>errLogin = 100;</code>
     */
    public static final int errLogin_VALUE = 100;
    /**
     * <pre>
     ** token失效 
     * </pre>
     *
     * <code>errLoginTokenInvalid = 101;</code>
     */
    public static final int errLoginTokenInvalid_VALUE = 101;
    /**
     * <pre>
     ** 账号违规，无法登录 
     * </pre>
     *
     * <code>errLoginBan = 102;</code>
     */
    public static final int errLoginBan_VALUE = 102;
    /**
     * <pre>
     ** 重连时间过期 
     * </pre>
     *
     * <code>errLoginReconnect = 103;</code>
     */
    public static final int errLoginReconnect_VALUE = 103;
    /**
     * <pre>
     ** 排行榜错误 
     * </pre>
     *
     * <code>errRank = 300;</code>
     */
    public static final int errRank_VALUE = 300;
    /**
     * <pre>
     ** 排行榜为空 
     * </pre>
     *
     * <code>errRankEmpty = 301;</code>
     */
    public static final int errRankEmpty_VALUE = 301;
    /**
     * <pre>
     ** 抽奖失败，未知错误 
     * </pre>
     *
     * <code>errLottery = 400;</code>
     */
    public static final int errLottery_VALUE = 400;
    /**
     * <pre>
     ** 抽奖失败，剩余次数不足 
     * </pre>
     *
     * <code>errLotteryNotEnough = 401;</code>
     */
    public static final int errLotteryNotEnough_VALUE = 401;
    /**
     * <pre>
     ** 商城错误 
     * </pre>
     *
     * <code>errShop = 500;</code>
     */
    public static final int errShop_VALUE = 500;
    /**
     * <pre>
     ** 物品不存在 
     * </pre>
     *
     * <code>errShopItemNotExist = 501;</code>
     */
    public static final int errShopItemNotExist_VALUE = 501;
    /**
     * <pre>
     ** 购买货币不足 
     * </pre>
     *
     * <code>errShopChipNotEnough = 502;</code>
     */
    public static final int errShopChipNotEnough_VALUE = 502;
    /**
     * <pre>
     ** 每日礼包今天已经购买完：今天已经购买完了,请明天再来 
     * </pre>
     *
     * <code>errDailyGiftNoLeft = 503;</code>
     */
    public static final int errDailyGiftNoLeft_VALUE = 503;
    /**
     * <pre>
     ** 金豆复活礼包已经买完 
     * </pre>
     *
     * <code>errGoldcoinResGiftNoLeft = 504;</code>
     */
    public static final int errGoldcoinResGiftNoLeft_VALUE = 504;
    /**
     * <pre>
     ** 钻石复活礼包已经买完 
     * </pre>
     *
     * <code>errDiamondResGiftNoLeft = 505;</code>
     */
    public static final int errDiamondResGiftNoLeft_VALUE = 505;
    /**
     * <pre>
     ** 当天购买次数已用尽 
     * </pre>
     *
     * <code>errUnmatchBuyResGift = 506;</code>
     */
    public static final int errUnmatchBuyResGift_VALUE = 506;
    /**
     * <pre>
     ** 未关注公众号 
     * </pre>
     *
     * <code>errNotFollowWxAccount = 507;</code>
     */
    public static final int errNotFollowWxAccount_VALUE = 507;
    /**
     * <pre>
     ** 兑换失败 
     * </pre>
     *
     * <code>errConvertFailed = 508;</code>
     */
    public static final int errConvertFailed_VALUE = 508;
    /**
     * <pre>
     ** 未绑定手机号 
     * </pre>
     *
     * <code>errNotBindTel = 509;</code>
     */
    public static final int errNotBindTel_VALUE = 509;
    /**
     * <pre>
     ** 企业付款到限额:今日红包已发完，请明日尽早领取 
     * </pre>
     *
     * <code>errEnPayNoMoney = 510;</code>
     */
    public static final int errEnPayNoMoney_VALUE = 510;
    /**
     * <pre>
     ** 微信红包没有钱了,兑换失败，请联系客服 
     * </pre>
     *
     * <code>errWxRedNoMoney = 511;</code>
     */
    public static final int errWxRedNoMoney_VALUE = 511;
    /**
     * <pre>
     ** 今日充值超限 
     * </pre>
     *
     * <code>errChargeOver = 512;</code>
     */
    public static final int errChargeOver_VALUE = 512;
    /**
     * <pre>
     ** 微信系统繁忙 
     * </pre>
     *
     * <code>errWxSystemError = 513;</code>
     */
    public static final int errWxSystemError_VALUE = 513;
    /**
     * <pre>
     ** 抽奖等待时间未到 
     * </pre>
     *
     * <code>errLotteryWaitTime = 514;</code>
     */
    public static final int errLotteryWaitTime_VALUE = 514;
    /**
     * <pre>
     ** 本周兑换次数已经用尽 
     * </pre>
     *
     * <code>errExchangeExhaust = 515;</code>
     */
    public static final int errExchangeExhaust_VALUE = 515;
    /**
     * <pre>
     ** 加入房间错误码 
     * </pre>
     *
     * <code>errRoom = 600;</code>
     */
    public static final int errRoom_VALUE = 600;
    /**
     * <pre>
     ** 筹码不足加入房间 
     * </pre>
     *
     * <code>errRoomChipNotEnough = 601;</code>
     */
    public static final int errRoomChipNotEnough_VALUE = 601;
    /**
     * <pre>
     ** 钻石不足加入房间 
     * </pre>
     *
     * <code>errRoomDiamondNotEnough = 602;</code>
     */
    public static final int errRoomDiamondNotEnough_VALUE = 602;
    /**
     * <pre>
     ** 重新加入房间错误，房间不存在
     * </pre>
     *
     * <code>errRoomNotExist = 603;</code>
     */
    public static final int errRoomNotExist_VALUE = 603;
    /**
     * <pre>
     ** 玩家不在房间中 
     * </pre>
     *
     * <code>errRoomNotIn = 604;</code>
     */
    public static final int errRoomNotIn_VALUE = 604;
    /**
     * <pre>
     ** 筹码大于加入房间最大值 
     * </pre>
     *
     * <code>errRoomChipToMuch = 605;</code>
     */
    public static final int errRoomChipToMuch_VALUE = 605;
    /**
     * <pre>
     ** 钻石大于加入房间最大值 
     * </pre>
     *
     * <code>errRoomDiamondToMuch = 606;</code>
     */
    public static final int errRoomDiamondToMuch_VALUE = 606;
    /**
     * <pre>
     ** 用户信息接口 
     * </pre>
     *
     * <code>errUserIsNull = 701;</code>
     */
    public static final int errUserIsNull_VALUE = 701;
    /**
     * <pre>
     ** 玩家没有该皮肤 
     * </pre>
     *
     * <code>errNotOwnThisSkin = 702;</code>
     */
    public static final int errNotOwnThisSkin_VALUE = 702;
    /**
     * <pre>
     ** 游戏接口 
     * </pre>
     *
     * <code>errGame = 800;</code>
     */
    public static final int errGame_VALUE = 800;
    /**
     * <pre>
     ** 房间不存在 
     * </pre>
     *
     * <code>errGameRoomNotExist = 801;</code>
     */
    public static final int errGameRoomNotExist_VALUE = 801;
    /**
     * <pre>
     ** 当前房间不在游戏中，不能托管 
     * </pre>
     *
     * <code>errGameAutoPlay = 802;</code>
     */
    public static final int errGameAutoPlay_VALUE = 802;
    /**
     * <pre>
     ** 当前不应该该玩家操作 
     * </pre>
     *
     * <code>errGameInvaildOper = 803;</code>
     */
    public static final int errGameInvaildOper_VALUE = 803;
    /**
     * <pre>
     ** 叫地主分值非法 
     * </pre>
     *
     * <code>errGameInvaildCatchPoint = 804;</code>
     */
    public static final int errGameInvaildCatchPoint_VALUE = 804;
    /**
     * <pre>
     ** 进入房间失败 
     * </pre>
     *
     * <code>errGameEnterRoomFail = 805;</code>
     */
    public static final int errGameEnterRoomFail_VALUE = 805;
    /**
     * <pre>
     ** 玩家不在房间中 
     * </pre>
     *
     * <code>errGamePlayerNotIn = 806;</code>
     */
    public static final int errGamePlayerNotIn_VALUE = 806;
    /**
     * <pre>
     ** 玩家牌型错误 
     * </pre>
     *
     * <code>errGameCardInvaild = 807;</code>
     */
    public static final int errGameCardInvaild_VALUE = 807;
    /**
     * <pre>
     ** 分享接口
     * </pre>
     *
     * <code>errPm = 900;</code>
     */
    public static final int errPm_VALUE = 900;
    /**
     * <pre>
     ** 分享接口-发送短信校验码-手机号码非法
     * </pre>
     *
     * <code>errPmTelNumInvaild = 901;</code>
     */
    public static final int errPmTelNumInvaild_VALUE = 901;
    /**
     * <pre>
     ** 发送短信校验码-验证码校验失败
     * </pre>
     *
     * <code>errPmVerifyCodeFail = 902;</code>
     */
    public static final int errPmVerifyCodeFail_VALUE = 902;
    /**
     * <pre>
     ** 领取分享奖励失败-未完成 
     * </pre>
     *
     * <code>errPmGetAwardNotFinish = 903;</code>
     */
    public static final int errPmGetAwardNotFinish_VALUE = 903;
    /**
     * <pre>
     ** 领取分享奖励失败-未绑定手机号
     * </pre>
     *
     * <code>errPmGetAwardNotBindTel = 904;</code>
     */
    public static final int errPmGetAwardNotBindTel_VALUE = 904;
    /**
     * <pre>
     ** 已经绑定过手机号了 
     * </pre>
     *
     * <code>errPmAlreadyBind = 905;</code>
     */
    public static final int errPmAlreadyBind_VALUE = 905;
    /**
     * <pre>
     ** 重发验证码时间过短
     * </pre>
     *
     * <code>errPmRequestIntervalTooShort = 906;</code>
     */
    public static final int errPmRequestIntervalTooShort_VALUE = 906;
    /**
     * <pre>
     ** 分包失败 
     * </pre>
     *
     * <code>errPmSharePackageFail = 907;</code>
     */
    public static final int errPmSharePackageFail_VALUE = 907;
    /**
     * <pre>
     ** 还没有任何小伙伴接受邀请 
     * </pre>
     *
     * <code>errPmNoSlave = 908;</code>
     */
    public static final int errPmNoSlave_VALUE = 908;
    /**
     * <pre>
     ** 你和请求玩家不是小伙伴
     * </pre>
     *
     * <code>errPmNotRelationship = 909;</code>
     */
    public static final int errPmNotRelationship_VALUE = 909;
    /**
     * <pre>
     ** 手机号已经被绑定了 
     * </pre>
     *
     * <code>errPmTelAlreadyUsed = 910;</code>
     */
    public static final int errPmTelAlreadyUsed_VALUE = 910;
    /**
     * <pre>
     ** 推送奖励公告为空 
     * </pre>
     *
     * <code>errAwardMsgIsNul = 1000;</code>
     */
    public static final int errAwardMsgIsNul_VALUE = 1000;
    /**
     * <pre>
     ** 领取失败 
     * </pre>
     *
     * <code>errGetDailyFailed = 1100;</code>
     */
    public static final int errGetDailyFailed_VALUE = 1100;
    /**
     * <pre>
     ** 新手任务已过期 
     * </pre>
     *
     * <code>errNoviceTaskexpired = 1200;</code>
     */
    public static final int errNoviceTaskexpired_VALUE = 1200;
    /**
     * <pre>
     ** 领取失败 
     * </pre>
     *
     * <code>errGetNoviceFailed = 1201;</code>
     */
    public static final int errGetNoviceFailed_VALUE = 1201;
    /**
     * <pre>
     ** 删除失败，请先领取 
     * </pre>
     *
     * <code>errDeleteMail = 1300;</code>
     */
    public static final int errDeleteMail_VALUE = 1300;
    /**
     * <pre>
     ** 夺宝商城接口错误 
     * </pre>
     *
     * <code>errSnatch = 1400;</code>
     */
    public static final int errSnatch_VALUE = 1400;
    /**
     * <pre>
     ** 获取夺宝商城主界面报错 
     * </pre>
     *
     * <code>errSnatchGetList = 1401;</code>
     */
    public static final int errSnatchGetList_VALUE = 1401;
    /**
     * <pre>
     ** 夺宝-下注值超过能下注值 
     * </pre>
     *
     * <code>errSnatchInvaildBet = 1402;</code>
     */
    public static final int errSnatchInvaildBet_VALUE = 1402;
    /**
     * <pre>
     ** 夺宝-奖杯不足下注 
     * </pre>
     *
     * <code>errSnatchWincupNotEnough = 1403;</code>
     */
    public static final int errSnatchWincupNotEnough_VALUE = 1403;
    /**
     * <pre>
     ** 夺宝-不能领取奖励 
     * </pre>
     *
     * <code>errSnatchInvaildGetAward = 1404;</code>
     */
    public static final int errSnatchInvaildGetAward_VALUE = 1404;
    /**
     * <pre>
     ** 夺宝-已经没有更多的历史记录了
     * </pre>
     *
     * <code>errSnatchNoMoreHistories = 1405;</code>
     */
    public static final int errSnatchNoMoreHistories_VALUE = 1405;
    /**
     * <pre>
     ** 夺宝-没有填写详细的地址信息，不能领取实物奖励 
     * </pre>
     *
     * <code>errSnatchRequireAddrDetail = 1406;</code>
     */
    public static final int errSnatchRequireAddrDetail_VALUE = 1406;
    /**
     * <pre>
     ** 钻石宝箱接口错误 
     * </pre>
     *
     * <code>errDG = 1500;</code>
     */
    public static final int errDG_VALUE = 1500;
    /**
     * <pre>
     **钻石宝箱已经过期 
     * </pre>
     *
     * <code>errDGExpired = 1501;</code>
     */
    public static final int errDGExpired_VALUE = 1501;
    /**
     * <pre>
     ** 宝箱已经抽取完了,请重置 
     * </pre>
     *
     * <code>errBoxIsOver = 1502;</code>
     */
    public static final int errBoxIsOver_VALUE = 1502;
    /**
     * <pre>
     ** 重置失败 
     * </pre>
     *
     * <code>errReset = 1503;</code>
     */
    public static final int errReset_VALUE = 1503;
    /**
     * <pre>
     ** 游戏开启失败 
     * </pre>
     *
     * <code>errOpenDg = 1504;</code>
     */
    public static final int errOpenDg_VALUE = 1504;
    /**
     * <pre>
     ** 可重置没有重置机会 
     * </pre>
     *
     * <code>errNoLeftCont = 1505;</code>
     */
    public static final int errNoLeftCont_VALUE = 1505;
    /**
     * <pre>
     ** 重置机会用完了 
     * </pre>
     *
     * <code>errNoChance = 1506;</code>
     */
    public static final int errNoChance_VALUE = 1506;
    /**
     * <pre>
     ** 道具背包接口报错
     * </pre>
     *
     * <code>errProp = 1600;</code>
     */
    public static final int errProp_VALUE = 1600;
    /**
     * <pre>
     ** 没有这个道具报错
     * </pre>
     *
     * <code>errPropNotHaveThisProp = 1601;</code>
     */
    public static final int errPropNotHaveThisProp_VALUE = 1601;
    /**
     * <pre>
     ** 签到接口错误 
     * </pre>
     *
     * <code>errSign = 1700;</code>
     */
    public static final int errSign_VALUE = 1700;
    /**
     * <pre>
     ** 重复签到 
     * </pre>
     *
     * <code>errSignRepeate = 1701;</code>
     */
    public static final int errSignRepeate_VALUE = 1701;
    /**
     * <pre>
     ** 补签卡不足 
     * </pre>
     *
     * <code>errSignRSCNotEnough = 1702;</code>
     */
    public static final int errSignRSCNotEnough_VALUE = 1702;
    /**
     * <pre>
     ** 钻石不足 
     * </pre>
     *
     * <code>errSignRSDNotEnough = 1703;</code>
     */
    public static final int errSignRSDNotEnough_VALUE = 1703;
    /**
     * <pre>
     ** 签到时间错误 
     * </pre>
     *
     * <code>errSignTime = 1704;</code>
     */
    public static final int errSignTime_VALUE = 1704;
    /**
     * <pre>
     ** 幸运时钟抽奖失败 
     * </pre>
     *
     * <code>errSignLT = 1705;</code>
     */
    public static final int errSignLT_VALUE = 1705;
    /**
     * <pre>
     ** vip等级不足 
     * </pre>
     *
     * <code>errSignVipLack = 1706;</code>
     */
    public static final int errSignVipLack_VALUE = 1706;
    /**
     * <pre>
     ** 奖励已领取 
     * </pre>
     *
     * <code>errSignRewardHasGet = 1707;</code>
     */
    public static final int errSignRewardHasGet_VALUE = 1707;
    /**
     * <pre>
     ** 签到时间不足 
     * </pre>
     *
     * <code>errSignDayNotEnough = 1708;</code>
     */
    public static final int errSignDayNotEnough_VALUE = 1708;
    /**
     * <pre>
     ** VIP接口错误 
     * </pre>
     *
     * <code>errVipLvNotEnough = 1801;</code>
     */
    public static final int errVipLvNotEnough_VALUE = 1801;
    /**
     * <pre>
     ** 本周已经领过每周奖励了 
     * </pre>
     *
     * <code>errVipWeekAwardAlreadyGet = 1802;</code>
     */
    public static final int errVipWeekAwardAlreadyGet_VALUE = 1802;
    /**
     * <pre>
     ** 钻石滚动抽奖接口错误 
     * </pre>
     *
     * <code>errDD = 1900;</code>
     */
    public static final int errDD_VALUE = 1900;
    /**
     * <pre>
     ** 钻石不足 
     * </pre>
     *
     * <code>errDNotEnough = 1901;</code>
     */
    public static final int errDNotEnough_VALUE = 1901;
    /**
     * <pre>
     ** 该活动已关闭 
     * </pre>
     *
     * <code>errDDClose = 1902;</code>
     */
    public static final int errDDClose_VALUE = 1902;
    /**
     * <pre>
     ** 剩余次数不足 
     * </pre>
     *
     * <code>errDTimesNotEnough = 1903;</code>
     */
    public static final int errDTimesNotEnough_VALUE = 1903;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResultCode valueOf(int value) {
      return forNumber(value);
    }

    public static ResultCode forNumber(int value) {
      switch (value) {
        case 0: return success;
        case 1: return err;
        case 2: return errNoMethod;
        case 3: return errNulMsg;
        case 4: return errLoginInvalid;
        case 5: return errNetConnect;
        case 6: return errGameNotOver;
        case 100: return errLogin;
        case 101: return errLoginTokenInvalid;
        case 102: return errLoginBan;
        case 103: return errLoginReconnect;
        case 300: return errRank;
        case 301: return errRankEmpty;
        case 400: return errLottery;
        case 401: return errLotteryNotEnough;
        case 500: return errShop;
        case 501: return errShopItemNotExist;
        case 502: return errShopChipNotEnough;
        case 503: return errDailyGiftNoLeft;
        case 504: return errGoldcoinResGiftNoLeft;
        case 505: return errDiamondResGiftNoLeft;
        case 506: return errUnmatchBuyResGift;
        case 507: return errNotFollowWxAccount;
        case 508: return errConvertFailed;
        case 509: return errNotBindTel;
        case 510: return errEnPayNoMoney;
        case 511: return errWxRedNoMoney;
        case 512: return errChargeOver;
        case 513: return errWxSystemError;
        case 514: return errLotteryWaitTime;
        case 515: return errExchangeExhaust;
        case 600: return errRoom;
        case 601: return errRoomChipNotEnough;
        case 602: return errRoomDiamondNotEnough;
        case 603: return errRoomNotExist;
        case 604: return errRoomNotIn;
        case 605: return errRoomChipToMuch;
        case 606: return errRoomDiamondToMuch;
        case 701: return errUserIsNull;
        case 702: return errNotOwnThisSkin;
        case 800: return errGame;
        case 801: return errGameRoomNotExist;
        case 802: return errGameAutoPlay;
        case 803: return errGameInvaildOper;
        case 804: return errGameInvaildCatchPoint;
        case 805: return errGameEnterRoomFail;
        case 806: return errGamePlayerNotIn;
        case 807: return errGameCardInvaild;
        case 900: return errPm;
        case 901: return errPmTelNumInvaild;
        case 902: return errPmVerifyCodeFail;
        case 903: return errPmGetAwardNotFinish;
        case 904: return errPmGetAwardNotBindTel;
        case 905: return errPmAlreadyBind;
        case 906: return errPmRequestIntervalTooShort;
        case 907: return errPmSharePackageFail;
        case 908: return errPmNoSlave;
        case 909: return errPmNotRelationship;
        case 910: return errPmTelAlreadyUsed;
        case 1000: return errAwardMsgIsNul;
        case 1100: return errGetDailyFailed;
        case 1200: return errNoviceTaskexpired;
        case 1201: return errGetNoviceFailed;
        case 1300: return errDeleteMail;
        case 1400: return errSnatch;
        case 1401: return errSnatchGetList;
        case 1402: return errSnatchInvaildBet;
        case 1403: return errSnatchWincupNotEnough;
        case 1404: return errSnatchInvaildGetAward;
        case 1405: return errSnatchNoMoreHistories;
        case 1406: return errSnatchRequireAddrDetail;
        case 1500: return errDG;
        case 1501: return errDGExpired;
        case 1502: return errBoxIsOver;
        case 1503: return errReset;
        case 1504: return errOpenDg;
        case 1505: return errNoLeftCont;
        case 1506: return errNoChance;
        case 1600: return errProp;
        case 1601: return errPropNotHaveThisProp;
        case 1700: return errSign;
        case 1701: return errSignRepeate;
        case 1702: return errSignRSCNotEnough;
        case 1703: return errSignRSDNotEnough;
        case 1704: return errSignTime;
        case 1705: return errSignLT;
        case 1706: return errSignVipLack;
        case 1707: return errSignRewardHasGet;
        case 1708: return errSignDayNotEnough;
        case 1801: return errVipLvNotEnough;
        case 1802: return errVipWeekAwardAlreadyGet;
        case 1900: return errDD;
        case 1901: return errDNotEnough;
        case 1902: return errDDClose;
        case 1903: return errDTimesNotEnough;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResultCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResultCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResultCode>() {
            public ResultCode findValueByNumber(int number) {
              return ResultCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.getDescriptor().getEnumTypes().get(2);
    }

    private static final ResultCode[] VALUES = values();

    public static ResultCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResultCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kys.util.netty.proto.ResultCode)
  }

  public interface ClientRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.kys.util.netty.proto.ClientRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 用户名 
     * </pre>
     *
     * <code>int32 userId = 1;</code>
     */
    int getUserId();

    /**
     * <pre>
     ** 请求方法名 
     * </pre>
     *
     * <code>int32 methodId = 2;</code>
     */
    int getMethodId();

    /**
     * <pre>
     ** 账号登录方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
     */
    boolean hasClientLogin();
    /**
     * <pre>
     ** 账号登录方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientLogin getClientLogin();
    /**
     * <pre>
     ** 账号登录方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientLoginOrBuilder getClientLoginOrBuilder();

    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    boolean hasClientPlayerInfo();
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientPlayerInfo();
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientPlayerInfoOrBuilder();

    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    boolean hasClientReturnHallHeartBeat();
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat getClientReturnHallHeartBeat();
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder getClientReturnHallHeartBeatOrBuilder();

    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    boolean hasClientReturnGameHeartBeat();
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat getClientReturnGameHeartBeat();
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder getClientReturnGameHeartBeatOrBuilder();

    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    boolean hasClientGetUserInfo();
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientGetUserInfo();
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientGetUserInfoOrBuilder();

    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    boolean hasClientNewLogin();
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientNewLogin getClientNewLogin();
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder getClientNewLoginOrBuilder();

    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    boolean hasClientQuickJoin();
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientQuickJoin getClientQuickJoin();
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder getClientQuickJoinOrBuilder();

    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    boolean hasClientEnterRoom();
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientEnterRoom getClientEnterRoom();
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder getClientEnterRoomOrBuilder();

    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    boolean hasClientDoCatch();
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientDoCatch getClientDoCatch();
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder getClientDoCatchOrBuilder();

    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    boolean hasClientPlayCards();
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientPlayCards getClientPlayCards();
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder getClientPlayCardsOrBuilder();

    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    boolean hasClientRecoverGame();
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientRecoverGame getClientRecoverGame();
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder getClientRecoverGameOrBuilder();

    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    boolean hasClientAutoPlay();
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientAutoPlay getClientAutoPlay();
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder getClientAutoPlayOrBuilder();

    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    boolean hasClientLeaveRoom();
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientLeaveRoom getClientLeaveRoom();
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder getClientLeaveRoomOrBuilder();

    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    boolean hasClientCancleJoin();
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientCancleJoin getClientCancleJoin();
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder getClientCancleJoinOrBuilder();

    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    boolean hasClientQueryIndex();
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientQueryIndex getClientQueryIndex();
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder getClientQueryIndexOrBuilder();

    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    boolean hasClientRetryReturnGame();
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientRetryReturnGame getClientRetryReturnGame();
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder getClientRetryReturnGameOrBuilder();

    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    boolean hasClientGetRankList();
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRankList getClientGetRankList();
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder getClientGetRankListOrBuilder();

    /**
     * <pre>
     ** Client获取签到奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
     */
    boolean hasClientGetSignupRewardList();
    /**
     * <pre>
     ** Client获取签到奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList getClientGetSignupRewardList();
    /**
     * <pre>
     ** Client获取签到奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetSignupRewardListOrBuilder getClientGetSignupRewardListOrBuilder();

    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
     */
    boolean hasClientGetHallInfo();
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetHallInfo getClientGetHallInfo();
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetHallInfoOrBuilder getClientGetHallInfoOrBuilder();

    /**
     * <pre>
     ** 签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
     */
    boolean hasClientSignup();
    /**
     * <pre>
     ** 签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSignup getClientSignup();
    /**
     * <pre>
     ** 签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSignupOrBuilder getClientSignupOrBuilder();

    /**
     * <pre>
     ** 客户端请求抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
     */
    boolean hasClientDrawWinCup();
    /**
     * <pre>
     ** 客户端请求抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDrawWinCup getClientDrawWinCup();
    /**
     * <pre>
     ** 客户端请求抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDrawWinCupOrBuilder getClientDrawWinCupOrBuilder();

    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    boolean hasClientGetRoomConfig();
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomConfig getClientGetRoomConfig();
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder getClientGetRoomConfigOrBuilder();

    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    boolean hasClientRewardMessage();
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientRewardMessage getClientRewardMessage();
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder getClientRewardMessageOrBuilder();

    /**
     * <pre>
     ** 客户端请求房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
     */
    boolean hasClientGetRoomCardConfig();
    /**
     * <pre>
     ** 客户端请求房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig getClientGetRoomCardConfig();
    /**
     * <pre>
     ** 客户端请求房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfigOrBuilder getClientGetRoomCardConfigOrBuilder();

    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
     */
    boolean hasClientCreateRoom();
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientCreateRoom getClientCreateRoom();
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientCreateRoomOrBuilder getClientCreateRoomOrBuilder();

    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    boolean hasClientGetMonthCardDiamond();
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond getClientGetMonthCardDiamond();
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder getClientGetMonthCardDiamondOrBuilder();

    /**
     * <pre>
     ** 客户端获取玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    boolean hasClientGetLotteryCount();
    /**
     * <pre>
     ** 客户端获取玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetLotteryCount getClientGetLotteryCount();
    /**
     * <pre>
     ** 客户端获取玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder getClientGetLotteryCountOrBuilder();

    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    boolean hasClientGetRoomInfo();
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomInfo getClientGetRoomInfo();
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder getClientGetRoomInfoOrBuilder();

    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    boolean hasClientSendTelCode();
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSendTelCode getClientSendTelCode();
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder getClientSendTelCodeOrBuilder();

    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    boolean hasClientVerifyTelCode();
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientVerifyTelCode getClientVerifyTelCode();
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder getClientVerifyTelCodeOrBuilder();

    /**
     * <pre>
     ** 客户端请求分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
     */
    boolean hasClientQueryShareList();
    /**
     * <pre>
     ** 客户端请求分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryShareList getClientQueryShareList();
    /**
     * <pre>
     ** 客户端请求分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryShareListOrBuilder getClientQueryShareListOrBuilder();

    /**
     * <pre>
     ** 客户端查询推广列表详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
     */
    boolean hasClientQueryShareDetail();
    /**
     * <pre>
     ** 客户端查询推广列表详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryShareDetail getClientQueryShareDetail();
    /**
     * <pre>
     ** 客户端查询推广列表详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryShareDetailOrBuilder getClientQueryShareDetailOrBuilder();

    /**
     * <pre>
     ** 客户端领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
     */
    boolean hasClientGetTaskAward();
    /**
     * <pre>
     ** 客户端领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetTaskAward getClientGetTaskAward();
    /**
     * <pre>
     ** 客户端领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetTaskAwardOrBuilder getClientGetTaskAwardOrBuilder();

    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    boolean hasClientSharePackage();
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSharePackage getClientSharePackage();
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder getClientSharePackageOrBuilder();

    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    boolean hasClientGetAwardList();
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetAwardList getClientGetAwardList();
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder getClientGetAwardListOrBuilder();

    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    boolean hasClientPlayerLogout();
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientPlayerLogout getClientPlayerLogout();
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder getClientPlayerLogoutOrBuilder();

    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    boolean hasClientCheckConnect();
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientCheckConnect getClientCheckConnect();
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder getClientCheckConnectOrBuilder();

    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    boolean hasClientGetPFList();
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetPFList getClientGetPFList();
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder getClientGetPFListOrBuilder();

    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    boolean hasClientChoosePF();
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientChoosePF getClientChoosePF();
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder getClientChoosePFOrBuilder();

    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    boolean hasClientGetHistoryRank();
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetHistoryRank getClientGetHistoryRank();
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder getClientGetHistoryRankOrBuilder();

    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    boolean hasClientH5Reward();
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientH5Reward getClientH5Reward();
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder getClientH5RewardOrBuilder();

    /**
     * <pre>
     ** 客户端新抽奖杯请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    boolean hasClientNewDrawWinCup();
    /**
     * <pre>
     ** 客户端新抽奖杯请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup getClientNewDrawWinCup();
    /**
     * <pre>
     ** 客户端新抽奖杯请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder getClientNewDrawWinCupOrBuilder();

    /**
     * <pre>
     ** 获取玩家(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    boolean hasClientGetNewHallInfo();
    /**
     * <pre>
     ** 获取玩家(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo getClientGetNewHallInfo();
    /**
     * <pre>
     ** 获取玩家(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder getClientGetNewHallInfoOrBuilder();

    /**
     * <pre>
     ** 获取玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
     */
    boolean hasClientGetSkinInfo();
    /**
     * <pre>
     ** 获取玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetSkinInfo getClientGetSkinInfo();
    /**
     * <pre>
     ** 获取玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientGetSkinInfoOrBuilder getClientGetSkinInfoOrBuilder();

    /**
     * <pre>
     ** 玩家修改当前皮肤 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
     */
    boolean hasClientEquipSkin();
    /**
     * <pre>
     ** 玩家修改当前皮肤 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientEquipSkin getClientEquipSkin();
    /**
     * <pre>
     ** 玩家修改当前皮肤 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
     */
    com.kys.util.netty.proto.UserProto.ClientEquipSkinOrBuilder getClientEquipSkinOrBuilder();

    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
     */
    boolean hasClientGetStoreData();
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetStoreData getClientGetStoreData();
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetStoreDataOrBuilder getClientGetStoreDataOrBuilder();

    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    boolean hasClientConvertGoods();
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientConvertGoods getClientConvertGoods();
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder getClientConvertGoodsOrBuilder();

    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    boolean hasClientWXPayResultQuery();
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery getClientWXPayResultQuery();
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder getClientWXPayResultQueryOrBuilder();

    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    boolean hasClientBuyOrderGoods();
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods getClientBuyOrderGoods();
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder getClientBuyOrderGoodsOrBuilder();

    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    boolean hasClientGetFirstCharge();
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge getClientGetFirstCharge();
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder getClientGetFirstChargeOrBuilder();

    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    boolean hasClientGetDailyGift();
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetDailyGift getClientGetDailyGift();
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder getClientGetDailyGiftOrBuilder();

    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    boolean hasClientGetMonthCard();
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetMonthCard getClientGetMonthCard();
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder getClientGetMonthCardOrBuilder();

    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    boolean hasClientGetResurgenceGift();
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift getClientGetResurgenceGift();
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder getClientGetResurgenceGiftOrBuilder();

    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    boolean hasClientGetAnnounce();
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetAnnounce getClientGetAnnounce();
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder getClientGetAnnounceOrBuilder();

    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    boolean hasClientGetMail();
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMail getClientGetMail();
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder getClientGetMailOrBuilder();

    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    boolean hasClientGetMailReward();
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMailReward getClientGetMailReward();
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder getClientGetMailRewardOrBuilder();

    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    boolean hasClientDelMail();
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDelMail getClientDelMail();
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder getClientDelMailOrBuilder();

    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    boolean hasClientReadMail();
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientReadMail getClientReadMail();
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder getClientReadMailOrBuilder();

    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    boolean hasClientDel2R();
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDel2R getClientDel2R();
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder getClientDel2ROrBuilder();

    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    boolean hasClientQueryDailyTask();
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryDailyTask getClientQueryDailyTask();
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder getClientQueryDailyTaskOrBuilder();

    /**
     * <pre>
     ** 客户端领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
     */
    boolean hasClientGetDailyTaskAward();
    /**
     * <pre>
     ** 客户端领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward getClientGetDailyTaskAward();
    /**
     * <pre>
     ** 客户端领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAwardOrBuilder getClientGetDailyTaskAwardOrBuilder();

    /**
     * <pre>
     ** 客户端请求抽取新手引导奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    boolean hasClientGetNoviceReward();
    /**
     * <pre>
     ** 客户端请求抽取新手引导奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetNoviceReward getClientGetNoviceReward();
    /**
     * <pre>
     ** 客户端请求抽取新手引导奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder getClientGetNoviceRewardOrBuilder();

    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    boolean hasClientQueryNoviceTask();
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask getClientQueryNoviceTask();
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder getClientQueryNoviceTaskOrBuilder();

    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    boolean hasClientGetDTAward();
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetDTAward getClientGetDTAward();
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder getClientGetDTAwardOrBuilder();

    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    boolean hasClientGetReceiveAddr();
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr getClientGetReceiveAddr();
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder getClientGetReceiveAddrOrBuilder();

    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    boolean hasClientAlterReceiveAddr();
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr getClientAlterReceiveAddr();
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder getClientAlterReceiveAddrOrBuilder();

    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    boolean hasClientSnatchList();
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchList getClientSnatchList();
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder getClientSnatchListOrBuilder();

    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    boolean hasClientSnatchItemDetail();
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail getClientSnatchItemDetail();
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder getClientSnatchItemDetailOrBuilder();

    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    boolean hasClientSnatchBet();
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchBet getClientSnatchBet();
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder getClientSnatchBetOrBuilder();

    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    boolean hasClientSnatchAwardList();
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList getClientSnatchAwardList();
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder getClientSnatchAwardListOrBuilder();

    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    boolean hasClientOwnSnatchRecord();
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord getClientOwnSnatchRecord();
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder getClientOwnSnatchRecordOrBuilder();

    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    boolean hasClientSnatchItemHistory();
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory getClientSnatchItemHistory();
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder getClientSnatchItemHistoryOrBuilder();

    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    boolean hasClientSnatchHistoryDetail();
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail getClientSnatchHistoryDetail();
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder getClientSnatchHistoryDetailOrBuilder();

    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    boolean hasClientSnatchGetAward();
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward getClientSnatchGetAward();
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder getClientSnatchGetAwardOrBuilder();

    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    boolean hasClientEnterDG();
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientEnterDG getClientEnterDG();
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder getClientEnterDGOrBuilder();

    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    boolean hasClientDGLottery();
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientDGLottery getClientDGLottery();
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder getClientDGLotteryOrBuilder();

    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    boolean hasClientResetLottery();
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientResetLottery getClientResetLottery();
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder getClientResetLotteryOrBuilder();

    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    boolean hasClientExitDG();
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientExitDG getClientExitDG();
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder getClientExitDGOrBuilder();

    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    boolean hasClientOpenDG();
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOpenDG getClientOpenDG();
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder getClientOpenDGOrBuilder();

    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    boolean hasClientOpenDD();
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOpenDD getClientOpenDD();
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder getClientOpenDDOrBuilder();

    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    boolean hasClientDDLottery();
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientDDLottery getClientDDLottery();
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder getClientDDLotteryOrBuilder();

    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    boolean hasClientExitDD();
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientExitDD getClientExitDD();
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder getClientExitDDOrBuilder();

    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    boolean hasClientQueryProp();
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientQueryProp getClientQueryProp();
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder getClientQueryPropOrBuilder();

    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    boolean hasClientUseProp();
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientUseProp getClientUseProp();
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder getClientUsePropOrBuilder();

    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    boolean hasClientQueryPropCount();
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientQueryPropCount getClientQueryPropCount();
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder getClientQueryPropCountOrBuilder();

    /**
     * <pre>
     ** 客户端请求月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
     */
    boolean hasClientMonthSignInfo();
    /**
     * <pre>
     ** 客户端请求月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientMonthSignInfo getClientMonthSignInfo();
    /**
     * <pre>
     ** 客户端请求月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientMonthSignInfoOrBuilder getClientMonthSignInfoOrBuilder();

    /**
     * <pre>
     ** 客户端请求(新)签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
     */
    boolean hasClientMonthSign();
    /**
     * <pre>
     ** 客户端请求(新)签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientMonthSign getClientMonthSign();
    /**
     * <pre>
     ** 客户端请求(新)签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientMonthSignOrBuilder getClientMonthSignOrBuilder();

    /**
     * <pre>
     ** 客户端获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
     */
    boolean hasClientGetCritReward();
    /**
     * <pre>
     ** 客户端获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetCritReward getClientGetCritReward();
    /**
     * <pre>
     ** 客户端获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetCritRewardOrBuilder getClientGetCritRewardOrBuilder();

    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    boolean hasClientLTLottery();
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientLTLottery getClientLTLottery();
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder getClientLTLotteryOrBuilder();

    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    boolean hasClientGetTSReward();
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetTSReward getClientGetTSReward();
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder getClientGetTSRewardOrBuilder();

    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    boolean hasClientGetLuckInfo();
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetLuckInfo getClientGetLuckInfo();
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder getClientGetLuckInfoOrBuilder();

    /**
     * <pre>
     ** 请求获取vip界面展示的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
     */
    boolean hasClientGetVipInfo();
    /**
     * <pre>
     ** 请求获取vip界面展示的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
     */
    com.kys.util.netty.proto.VipProto.ClientGetVipInfo getClientGetVipInfo();
    /**
     * <pre>
     ** 请求获取vip界面展示的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
     */
    com.kys.util.netty.proto.VipProto.ClientGetVipInfoOrBuilder getClientGetVipInfoOrBuilder();

    /**
     * <pre>
     ** 获取每周VIP礼包奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
     */
    boolean hasClientGetVipWeek();
    /**
     * <pre>
     ** 获取每周VIP礼包奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
     */
    com.kys.util.netty.proto.VipProto.ClientGetVipWeek getClientGetVipWeek();
    /**
     * <pre>
     ** 获取每周VIP礼包奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
     */
    com.kys.util.netty.proto.VipProto.ClientGetVipWeekOrBuilder getClientGetVipWeekOrBuilder();
  }
  /**
   * <pre>
   ** 所有上行请求都是clientRequest，服务器根据methodId读取具体的message内容,当 
   * </pre>
   *
   * Protobuf type {@code com.kys.util.netty.proto.ClientRequest}
   */
  public  static final class ClientRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.kys.util.netty.proto.ClientRequest)
      ClientRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClientRequest.newBuilder() to construct.
    private ClientRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClientRequest() {
      userId_ = 0;
      methodId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClientRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              userId_ = input.readInt32();
              break;
            }
            case 16: {

              methodId_ = input.readInt32();
              break;
            }
            case 26: {
              com.kys.util.netty.proto.LoginProto.ClientLogin.Builder subBuilder = null;
              if (clientLogin_ != null) {
                subBuilder = clientLogin_.toBuilder();
              }
              clientLogin_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ClientLogin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientLogin_);
                clientLogin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder subBuilder = null;
              if (clientPlayerInfo_ != null) {
                subBuilder = clientPlayerInfo_.toBuilder();
              }
              clientPlayerInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ClientGetUserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientPlayerInfo_);
                clientPlayerInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder subBuilder = null;
              if (clientReturnHallHeartBeat_ != null) {
                subBuilder = clientReturnHallHeartBeat_.toBuilder();
              }
              clientReturnHallHeartBeat_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientReturnHallHeartBeat_);
                clientReturnHallHeartBeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder subBuilder = null;
              if (clientReturnGameHeartBeat_ != null) {
                subBuilder = clientReturnGameHeartBeat_.toBuilder();
              }
              clientReturnGameHeartBeat_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientReturnGameHeartBeat_);
                clientReturnGameHeartBeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder subBuilder = null;
              if (clientGetUserInfo_ != null) {
                subBuilder = clientGetUserInfo_.toBuilder();
              }
              clientGetUserInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ClientGetUserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetUserInfo_);
                clientGetUserInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder subBuilder = null;
              if (clientNewLogin_ != null) {
                subBuilder = clientNewLogin_.toBuilder();
              }
              clientNewLogin_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ClientNewLogin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientNewLogin_);
                clientNewLogin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 802: {
              com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder subBuilder = null;
              if (clientQuickJoin_ != null) {
                subBuilder = clientQuickJoin_.toBuilder();
              }
              clientQuickJoin_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientQuickJoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQuickJoin_);
                clientQuickJoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 810: {
              com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder subBuilder = null;
              if (clientEnterRoom_ != null) {
                subBuilder = clientEnterRoom_.toBuilder();
              }
              clientEnterRoom_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientEnterRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientEnterRoom_);
                clientEnterRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 818: {
              com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder subBuilder = null;
              if (clientDoCatch_ != null) {
                subBuilder = clientDoCatch_.toBuilder();
              }
              clientDoCatch_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientDoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDoCatch_);
                clientDoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 826: {
              com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder subBuilder = null;
              if (clientPlayCards_ != null) {
                subBuilder = clientPlayCards_.toBuilder();
              }
              clientPlayCards_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientPlayCards.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientPlayCards_);
                clientPlayCards_ = subBuilder.buildPartial();
              }

              break;
            }
            case 834: {
              com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder subBuilder = null;
              if (clientRecoverGame_ != null) {
                subBuilder = clientRecoverGame_.toBuilder();
              }
              clientRecoverGame_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientRecoverGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientRecoverGame_);
                clientRecoverGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 842: {
              com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder subBuilder = null;
              if (clientAutoPlay_ != null) {
                subBuilder = clientAutoPlay_.toBuilder();
              }
              clientAutoPlay_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientAutoPlay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientAutoPlay_);
                clientAutoPlay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 850: {
              com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder subBuilder = null;
              if (clientLeaveRoom_ != null) {
                subBuilder = clientLeaveRoom_.toBuilder();
              }
              clientLeaveRoom_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientLeaveRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientLeaveRoom_);
                clientLeaveRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 858: {
              com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder subBuilder = null;
              if (clientCancleJoin_ != null) {
                subBuilder = clientCancleJoin_.toBuilder();
              }
              clientCancleJoin_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientCancleJoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientCancleJoin_);
                clientCancleJoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 866: {
              com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder subBuilder = null;
              if (clientQueryIndex_ != null) {
                subBuilder = clientQueryIndex_.toBuilder();
              }
              clientQueryIndex_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientQueryIndex.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryIndex_);
                clientQueryIndex_ = subBuilder.buildPartial();
              }

              break;
            }
            case 874: {
              com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder subBuilder = null;
              if (clientRetryReturnGame_ != null) {
                subBuilder = clientRetryReturnGame_.toBuilder();
              }
              clientRetryReturnGame_ = input.readMessage(com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientRetryReturnGame_);
                clientRetryReturnGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1602: {
              com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder subBuilder = null;
              if (clientGetRankList_ != null) {
                subBuilder = clientGetRankList_.toBuilder();
              }
              clientGetRankList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetRankList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetRankList_);
                clientGetRankList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1610: {
              com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.Builder subBuilder = null;
              if (clientGetSignupRewardList_ != null) {
                subBuilder = clientGetSignupRewardList_.toBuilder();
              }
              clientGetSignupRewardList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetSignupRewardList_);
                clientGetSignupRewardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1618: {
              com.kys.util.netty.proto.HallProto.ClientGetHallInfo.Builder subBuilder = null;
              if (clientGetHallInfo_ != null) {
                subBuilder = clientGetHallInfo_.toBuilder();
              }
              clientGetHallInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetHallInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetHallInfo_);
                clientGetHallInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1626: {
              com.kys.util.netty.proto.HallProto.ClientSignup.Builder subBuilder = null;
              if (clientSignup_ != null) {
                subBuilder = clientSignup_.toBuilder();
              }
              clientSignup_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientSignup.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSignup_);
                clientSignup_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1634: {
              com.kys.util.netty.proto.HallProto.ClientDrawWinCup.Builder subBuilder = null;
              if (clientDrawWinCup_ != null) {
                subBuilder = clientDrawWinCup_.toBuilder();
              }
              clientDrawWinCup_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientDrawWinCup.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDrawWinCup_);
                clientDrawWinCup_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1642: {
              com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder subBuilder = null;
              if (clientGetRoomConfig_ != null) {
                subBuilder = clientGetRoomConfig_.toBuilder();
              }
              clientGetRoomConfig_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetRoomConfig_);
                clientGetRoomConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1650: {
              com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder subBuilder = null;
              if (clientRewardMessage_ != null) {
                subBuilder = clientRewardMessage_.toBuilder();
              }
              clientRewardMessage_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientRewardMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientRewardMessage_);
                clientRewardMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1658: {
              com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.Builder subBuilder = null;
              if (clientGetRoomCardConfig_ != null) {
                subBuilder = clientGetRoomCardConfig_.toBuilder();
              }
              clientGetRoomCardConfig_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetRoomCardConfig_);
                clientGetRoomCardConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1666: {
              com.kys.util.netty.proto.HallProto.ClientCreateRoom.Builder subBuilder = null;
              if (clientCreateRoom_ != null) {
                subBuilder = clientCreateRoom_.toBuilder();
              }
              clientCreateRoom_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientCreateRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientCreateRoom_);
                clientCreateRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1674: {
              com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder subBuilder = null;
              if (clientGetMonthCardDiamond_ != null) {
                subBuilder = clientGetMonthCardDiamond_.toBuilder();
              }
              clientGetMonthCardDiamond_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMonthCardDiamond_);
                clientGetMonthCardDiamond_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1682: {
              com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder subBuilder = null;
              if (clientGetLotteryCount_ != null) {
                subBuilder = clientGetLotteryCount_.toBuilder();
              }
              clientGetLotteryCount_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetLotteryCount_);
                clientGetLotteryCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1690: {
              com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder subBuilder = null;
              if (clientGetRoomInfo_ != null) {
                subBuilder = clientGetRoomInfo_.toBuilder();
              }
              clientGetRoomInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetRoomInfo_);
                clientGetRoomInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1698: {
              com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder subBuilder = null;
              if (clientSendTelCode_ != null) {
                subBuilder = clientSendTelCode_.toBuilder();
              }
              clientSendTelCode_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientSendTelCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSendTelCode_);
                clientSendTelCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1706: {
              com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder subBuilder = null;
              if (clientVerifyTelCode_ != null) {
                subBuilder = clientVerifyTelCode_.toBuilder();
              }
              clientVerifyTelCode_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientVerifyTelCode_);
                clientVerifyTelCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1714: {
              com.kys.util.netty.proto.HallProto.ClientQueryShareList.Builder subBuilder = null;
              if (clientQueryShareList_ != null) {
                subBuilder = clientQueryShareList_.toBuilder();
              }
              clientQueryShareList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientQueryShareList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryShareList_);
                clientQueryShareList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1722: {
              com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.Builder subBuilder = null;
              if (clientQueryShareDetail_ != null) {
                subBuilder = clientQueryShareDetail_.toBuilder();
              }
              clientQueryShareDetail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryShareDetail_);
                clientQueryShareDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1730: {
              com.kys.util.netty.proto.HallProto.ClientGetTaskAward.Builder subBuilder = null;
              if (clientGetTaskAward_ != null) {
                subBuilder = clientGetTaskAward_.toBuilder();
              }
              clientGetTaskAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetTaskAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetTaskAward_);
                clientGetTaskAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1738: {
              com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder subBuilder = null;
              if (clientSharePackage_ != null) {
                subBuilder = clientSharePackage_.toBuilder();
              }
              clientSharePackage_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientSharePackage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSharePackage_);
                clientSharePackage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1746: {
              com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder subBuilder = null;
              if (clientGetAwardList_ != null) {
                subBuilder = clientGetAwardList_.toBuilder();
              }
              clientGetAwardList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetAwardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetAwardList_);
                clientGetAwardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1754: {
              com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder subBuilder = null;
              if (clientPlayerLogout_ != null) {
                subBuilder = clientPlayerLogout_.toBuilder();
              }
              clientPlayerLogout_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientPlayerLogout.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientPlayerLogout_);
                clientPlayerLogout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1762: {
              com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder subBuilder = null;
              if (clientCheckConnect_ != null) {
                subBuilder = clientCheckConnect_.toBuilder();
              }
              clientCheckConnect_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientCheckConnect.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientCheckConnect_);
                clientCheckConnect_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1770: {
              com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder subBuilder = null;
              if (clientGetPFList_ != null) {
                subBuilder = clientGetPFList_.toBuilder();
              }
              clientGetPFList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetPFList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetPFList_);
                clientGetPFList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1778: {
              com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder subBuilder = null;
              if (clientChoosePF_ != null) {
                subBuilder = clientChoosePF_.toBuilder();
              }
              clientChoosePF_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientChoosePF.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientChoosePF_);
                clientChoosePF_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1786: {
              com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder subBuilder = null;
              if (clientGetHistoryRank_ != null) {
                subBuilder = clientGetHistoryRank_.toBuilder();
              }
              clientGetHistoryRank_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetHistoryRank_);
                clientGetHistoryRank_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1794: {
              com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder subBuilder = null;
              if (clientH5Reward_ != null) {
                subBuilder = clientH5Reward_.toBuilder();
              }
              clientH5Reward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientH5Reward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientH5Reward_);
                clientH5Reward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1802: {
              com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder subBuilder = null;
              if (clientNewDrawWinCup_ != null) {
                subBuilder = clientNewDrawWinCup_.toBuilder();
              }
              clientNewDrawWinCup_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientNewDrawWinCup_);
                clientNewDrawWinCup_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1810: {
              com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder subBuilder = null;
              if (clientGetNewHallInfo_ != null) {
                subBuilder = clientGetNewHallInfo_.toBuilder();
              }
              clientGetNewHallInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetNewHallInfo_);
                clientGetNewHallInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1818: {
              com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.Builder subBuilder = null;
              if (clientGetSkinInfo_ != null) {
                subBuilder = clientGetSkinInfo_.toBuilder();
              }
              clientGetSkinInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetSkinInfo_);
                clientGetSkinInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1826: {
              com.kys.util.netty.proto.UserProto.ClientEquipSkin.Builder subBuilder = null;
              if (clientEquipSkin_ != null) {
                subBuilder = clientEquipSkin_.toBuilder();
              }
              clientEquipSkin_ = input.readMessage(com.kys.util.netty.proto.UserProto.ClientEquipSkin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientEquipSkin_);
                clientEquipSkin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2402: {
              com.kys.util.netty.proto.StoreProto.ClientGetStoreData.Builder subBuilder = null;
              if (clientGetStoreData_ != null) {
                subBuilder = clientGetStoreData_.toBuilder();
              }
              clientGetStoreData_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetStoreData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetStoreData_);
                clientGetStoreData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2410: {
              com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder subBuilder = null;
              if (clientConvertGoods_ != null) {
                subBuilder = clientConvertGoods_.toBuilder();
              }
              clientConvertGoods_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientConvertGoods.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientConvertGoods_);
                clientConvertGoods_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2418: {
              com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder subBuilder = null;
              if (clientWXPayResultQuery_ != null) {
                subBuilder = clientWXPayResultQuery_.toBuilder();
              }
              clientWXPayResultQuery_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientWXPayResultQuery_);
                clientWXPayResultQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2426: {
              com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder subBuilder = null;
              if (clientBuyOrderGoods_ != null) {
                subBuilder = clientBuyOrderGoods_.toBuilder();
              }
              clientBuyOrderGoods_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientBuyOrderGoods_);
                clientBuyOrderGoods_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2434: {
              com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder subBuilder = null;
              if (clientGetFirstCharge_ != null) {
                subBuilder = clientGetFirstCharge_.toBuilder();
              }
              clientGetFirstCharge_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetFirstCharge_);
                clientGetFirstCharge_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2442: {
              com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder subBuilder = null;
              if (clientGetDailyGift_ != null) {
                subBuilder = clientGetDailyGift_.toBuilder();
              }
              clientGetDailyGift_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetDailyGift_);
                clientGetDailyGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2450: {
              com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder subBuilder = null;
              if (clientGetMonthCard_ != null) {
                subBuilder = clientGetMonthCard_.toBuilder();
              }
              clientGetMonthCard_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMonthCard_);
                clientGetMonthCard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2458: {
              com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder subBuilder = null;
              if (clientGetResurgenceGift_ != null) {
                subBuilder = clientGetResurgenceGift_.toBuilder();
              }
              clientGetResurgenceGift_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetResurgenceGift_);
                clientGetResurgenceGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4002: {
              com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder subBuilder = null;
              if (clientGetAnnounce_ != null) {
                subBuilder = clientGetAnnounce_.toBuilder();
              }
              clientGetAnnounce_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetAnnounce.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetAnnounce_);
                clientGetAnnounce_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4802: {
              com.kys.util.netty.proto.HallProto.ClientGetMail.Builder subBuilder = null;
              if (clientGetMail_ != null) {
                subBuilder = clientGetMail_.toBuilder();
              }
              clientGetMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMail_);
                clientGetMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4810: {
              com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder subBuilder = null;
              if (clientGetMailReward_ != null) {
                subBuilder = clientGetMailReward_.toBuilder();
              }
              clientGetMailReward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetMailReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetMailReward_);
                clientGetMailReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4818: {
              com.kys.util.netty.proto.HallProto.ClientDelMail.Builder subBuilder = null;
              if (clientDelMail_ != null) {
                subBuilder = clientDelMail_.toBuilder();
              }
              clientDelMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientDelMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDelMail_);
                clientDelMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4826: {
              com.kys.util.netty.proto.HallProto.ClientReadMail.Builder subBuilder = null;
              if (clientReadMail_ != null) {
                subBuilder = clientReadMail_.toBuilder();
              }
              clientReadMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientReadMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientReadMail_);
                clientReadMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4834: {
              com.kys.util.netty.proto.HallProto.ClientDel2R.Builder subBuilder = null;
              if (clientDel2R_ != null) {
                subBuilder = clientDel2R_.toBuilder();
              }
              clientDel2R_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientDel2R.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDel2R_);
                clientDel2R_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5602: {
              com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder subBuilder = null;
              if (clientQueryDailyTask_ != null) {
                subBuilder = clientQueryDailyTask_.toBuilder();
              }
              clientQueryDailyTask_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryDailyTask_);
                clientQueryDailyTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5610: {
              com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.Builder subBuilder = null;
              if (clientGetDailyTaskAward_ != null) {
                subBuilder = clientGetDailyTaskAward_.toBuilder();
              }
              clientGetDailyTaskAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetDailyTaskAward_);
                clientGetDailyTaskAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5618: {
              com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder subBuilder = null;
              if (clientGetNoviceReward_ != null) {
                subBuilder = clientGetNoviceReward_.toBuilder();
              }
              clientGetNoviceReward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetNoviceReward_);
                clientGetNoviceReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5626: {
              com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder subBuilder = null;
              if (clientQueryNoviceTask_ != null) {
                subBuilder = clientQueryNoviceTask_.toBuilder();
              }
              clientQueryNoviceTask_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryNoviceTask_);
                clientQueryNoviceTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5634: {
              com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder subBuilder = null;
              if (clientGetDTAward_ != null) {
                subBuilder = clientGetDTAward_.toBuilder();
              }
              clientGetDTAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ClientGetDTAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetDTAward_);
                clientGetDTAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6402: {
              com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder subBuilder = null;
              if (clientGetReceiveAddr_ != null) {
                subBuilder = clientGetReceiveAddr_.toBuilder();
              }
              clientGetReceiveAddr_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetReceiveAddr_);
                clientGetReceiveAddr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6410: {
              com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder subBuilder = null;
              if (clientAlterReceiveAddr_ != null) {
                subBuilder = clientAlterReceiveAddr_.toBuilder();
              }
              clientAlterReceiveAddr_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientAlterReceiveAddr_);
                clientAlterReceiveAddr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6418: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder subBuilder = null;
              if (clientSnatchList_ != null) {
                subBuilder = clientSnatchList_.toBuilder();
              }
              clientSnatchList_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchList_);
                clientSnatchList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6426: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder subBuilder = null;
              if (clientSnatchItemDetail_ != null) {
                subBuilder = clientSnatchItemDetail_.toBuilder();
              }
              clientSnatchItemDetail_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchItemDetail_);
                clientSnatchItemDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6434: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder subBuilder = null;
              if (clientSnatchBet_ != null) {
                subBuilder = clientSnatchBet_.toBuilder();
              }
              clientSnatchBet_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchBet_);
                clientSnatchBet_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6442: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder subBuilder = null;
              if (clientSnatchAwardList_ != null) {
                subBuilder = clientSnatchAwardList_.toBuilder();
              }
              clientSnatchAwardList_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchAwardList_);
                clientSnatchAwardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6450: {
              com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder subBuilder = null;
              if (clientOwnSnatchRecord_ != null) {
                subBuilder = clientOwnSnatchRecord_.toBuilder();
              }
              clientOwnSnatchRecord_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientOwnSnatchRecord_);
                clientOwnSnatchRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6458: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder subBuilder = null;
              if (clientSnatchItemHistory_ != null) {
                subBuilder = clientSnatchItemHistory_.toBuilder();
              }
              clientSnatchItemHistory_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchItemHistory_);
                clientSnatchItemHistory_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6466: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder subBuilder = null;
              if (clientSnatchHistoryDetail_ != null) {
                subBuilder = clientSnatchHistoryDetail_.toBuilder();
              }
              clientSnatchHistoryDetail_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchHistoryDetail_);
                clientSnatchHistoryDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6474: {
              com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder subBuilder = null;
              if (clientSnatchGetAward_ != null) {
                subBuilder = clientSnatchGetAward_.toBuilder();
              }
              clientSnatchGetAward_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientSnatchGetAward_);
                clientSnatchGetAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7202: {
              com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder subBuilder = null;
              if (clientEnterDG_ != null) {
                subBuilder = clientEnterDG_.toBuilder();
              }
              clientEnterDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientEnterDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientEnterDG_);
                clientEnterDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7210: {
              com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder subBuilder = null;
              if (clientDGLottery_ != null) {
                subBuilder = clientDGLottery_.toBuilder();
              }
              clientDGLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientDGLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDGLottery_);
                clientDGLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7218: {
              com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder subBuilder = null;
              if (clientResetLottery_ != null) {
                subBuilder = clientResetLottery_.toBuilder();
              }
              clientResetLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientResetLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientResetLottery_);
                clientResetLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7226: {
              com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder subBuilder = null;
              if (clientExitDG_ != null) {
                subBuilder = clientExitDG_.toBuilder();
              }
              clientExitDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientExitDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientExitDG_);
                clientExitDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7234: {
              com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder subBuilder = null;
              if (clientOpenDG_ != null) {
                subBuilder = clientOpenDG_.toBuilder();
              }
              clientOpenDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientOpenDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientOpenDG_);
                clientOpenDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7242: {
              com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder subBuilder = null;
              if (clientOpenDD_ != null) {
                subBuilder = clientOpenDD_.toBuilder();
              }
              clientOpenDD_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientOpenDD.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientOpenDD_);
                clientOpenDD_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7250: {
              com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder subBuilder = null;
              if (clientDDLottery_ != null) {
                subBuilder = clientDDLottery_.toBuilder();
              }
              clientDDLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientDDLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientDDLottery_);
                clientDDLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7258: {
              com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder subBuilder = null;
              if (clientExitDD_ != null) {
                subBuilder = clientExitDD_.toBuilder();
              }
              clientExitDD_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ClientExitDD.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientExitDD_);
                clientExitDD_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8010: {
              com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder subBuilder = null;
              if (clientQueryProp_ != null) {
                subBuilder = clientQueryProp_.toBuilder();
              }
              clientQueryProp_ = input.readMessage(com.kys.util.netty.proto.PropProto.ClientQueryProp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryProp_);
                clientQueryProp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8018: {
              com.kys.util.netty.proto.PropProto.ClientUseProp.Builder subBuilder = null;
              if (clientUseProp_ != null) {
                subBuilder = clientUseProp_.toBuilder();
              }
              clientUseProp_ = input.readMessage(com.kys.util.netty.proto.PropProto.ClientUseProp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientUseProp_);
                clientUseProp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8026: {
              com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder subBuilder = null;
              if (clientQueryPropCount_ != null) {
                subBuilder = clientQueryPropCount_.toBuilder();
              }
              clientQueryPropCount_ = input.readMessage(com.kys.util.netty.proto.PropProto.ClientQueryPropCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientQueryPropCount_);
                clientQueryPropCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8810: {
              com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.Builder subBuilder = null;
              if (clientMonthSignInfo_ != null) {
                subBuilder = clientMonthSignInfo_.toBuilder();
              }
              clientMonthSignInfo_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientMonthSignInfo_);
                clientMonthSignInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8818: {
              com.kys.util.netty.proto.SignProto.ClientMonthSign.Builder subBuilder = null;
              if (clientMonthSign_ != null) {
                subBuilder = clientMonthSign_.toBuilder();
              }
              clientMonthSign_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientMonthSign.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientMonthSign_);
                clientMonthSign_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8826: {
              com.kys.util.netty.proto.SignProto.ClientGetCritReward.Builder subBuilder = null;
              if (clientGetCritReward_ != null) {
                subBuilder = clientGetCritReward_.toBuilder();
              }
              clientGetCritReward_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientGetCritReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetCritReward_);
                clientGetCritReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8834: {
              com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder subBuilder = null;
              if (clientLTLottery_ != null) {
                subBuilder = clientLTLottery_.toBuilder();
              }
              clientLTLottery_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientLTLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientLTLottery_);
                clientLTLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8842: {
              com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder subBuilder = null;
              if (clientGetTSReward_ != null) {
                subBuilder = clientGetTSReward_.toBuilder();
              }
              clientGetTSReward_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientGetTSReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetTSReward_);
                clientGetTSReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8850: {
              com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder subBuilder = null;
              if (clientGetLuckInfo_ != null) {
                subBuilder = clientGetLuckInfo_.toBuilder();
              }
              clientGetLuckInfo_ = input.readMessage(com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetLuckInfo_);
                clientGetLuckInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 9610: {
              com.kys.util.netty.proto.VipProto.ClientGetVipInfo.Builder subBuilder = null;
              if (clientGetVipInfo_ != null) {
                subBuilder = clientGetVipInfo_.toBuilder();
              }
              clientGetVipInfo_ = input.readMessage(com.kys.util.netty.proto.VipProto.ClientGetVipInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetVipInfo_);
                clientGetVipInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 9618: {
              com.kys.util.netty.proto.VipProto.ClientGetVipWeek.Builder subBuilder = null;
              if (clientGetVipWeek_ != null) {
                subBuilder = clientGetVipWeek_.toBuilder();
              }
              clientGetVipWeek_ = input.readMessage(com.kys.util.netty.proto.VipProto.ClientGetVipWeek.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientGetVipWeek_);
                clientGetVipWeek_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kys.util.netty.proto.ProtoMsg.ClientRequest.class, com.kys.util.netty.proto.ProtoMsg.ClientRequest.Builder.class);
    }

    public static final int USERID_FIELD_NUMBER = 1;
    private int userId_;
    /**
     * <pre>
     ** 用户名 
     * </pre>
     *
     * <code>int32 userId = 1;</code>
     */
    public int getUserId() {
      return userId_;
    }

    public static final int METHODID_FIELD_NUMBER = 2;
    private int methodId_;
    /**
     * <pre>
     ** 请求方法名 
     * </pre>
     *
     * <code>int32 methodId = 2;</code>
     */
    public int getMethodId() {
      return methodId_;
    }

    public static final int CLIENTLOGIN_FIELD_NUMBER = 3;
    private com.kys.util.netty.proto.LoginProto.ClientLogin clientLogin_;
    /**
     * <pre>
     ** 账号登录方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
     */
    public boolean hasClientLogin() {
      return clientLogin_ != null;
    }
    /**
     * <pre>
     ** 账号登录方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientLogin getClientLogin() {
      return clientLogin_ == null ? com.kys.util.netty.proto.LoginProto.ClientLogin.getDefaultInstance() : clientLogin_;
    }
    /**
     * <pre>
     ** 账号登录方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientLoginOrBuilder getClientLoginOrBuilder() {
      return getClientLogin();
    }

    public static final int CLIENTPLAYERINFO_FIELD_NUMBER = 4;
    private com.kys.util.netty.proto.UserProto.ClientGetUserInfo clientPlayerInfo_;
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    public boolean hasClientPlayerInfo() {
      return clientPlayerInfo_ != null;
    }
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientPlayerInfo() {
      return clientPlayerInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientPlayerInfo_;
    }
    /**
     * <pre>
     ** 获取用户信息方法 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientPlayerInfoOrBuilder() {
      return getClientPlayerInfo();
    }

    public static final int CLIENTRETURNHALLHEARTBEAT_FIELD_NUMBER = 5;
    private com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat clientReturnHallHeartBeat_;
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    public boolean hasClientReturnHallHeartBeat() {
      return clientReturnHallHeartBeat_ != null;
    }
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat getClientReturnHallHeartBeat() {
      return clientReturnHallHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.getDefaultInstance() : clientReturnHallHeartBeat_;
    }
    /**
     * <pre>
     ** 客户端返回大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder getClientReturnHallHeartBeatOrBuilder() {
      return getClientReturnHallHeartBeat();
    }

    public static final int CLIENTRETURNGAMEHEARTBEAT_FIELD_NUMBER = 6;
    private com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat clientReturnGameHeartBeat_;
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    public boolean hasClientReturnGameHeartBeat() {
      return clientReturnGameHeartBeat_ != null;
    }
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat getClientReturnGameHeartBeat() {
      return clientReturnGameHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.getDefaultInstance() : clientReturnGameHeartBeat_;
    }
    /**
     * <pre>
     ** 客户端返回游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder getClientReturnGameHeartBeatOrBuilder() {
      return getClientReturnGameHeartBeat();
    }

    public static final int CLIENTGETUSERINFO_FIELD_NUMBER = 7;
    private com.kys.util.netty.proto.UserProto.ClientGetUserInfo clientGetUserInfo_;
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    public boolean hasClientGetUserInfo() {
      return clientGetUserInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientGetUserInfo() {
      return clientGetUserInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientGetUserInfo_;
    }
    /**
     * <pre>
     ** 客户端获取用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientGetUserInfoOrBuilder() {
      return getClientGetUserInfo();
    }

    public static final int CLIENTNEWLOGIN_FIELD_NUMBER = 8;
    private com.kys.util.netty.proto.LoginProto.ClientNewLogin clientNewLogin_;
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    public boolean hasClientNewLogin() {
      return clientNewLogin_ != null;
    }
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientNewLogin getClientNewLogin() {
      return clientNewLogin_ == null ? com.kys.util.netty.proto.LoginProto.ClientNewLogin.getDefaultInstance() : clientNewLogin_;
    }
    /**
     * <pre>
     ** 新Client登录消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder getClientNewLoginOrBuilder() {
      return getClientNewLogin();
    }

    public static final int CLIENTQUICKJOIN_FIELD_NUMBER = 100;
    private com.kys.util.netty.proto.GameProto.ClientQuickJoin clientQuickJoin_;
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    public boolean hasClientQuickJoin() {
      return clientQuickJoin_ != null;
    }
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientQuickJoin getClientQuickJoin() {
      return clientQuickJoin_ == null ? com.kys.util.netty.proto.GameProto.ClientQuickJoin.getDefaultInstance() : clientQuickJoin_;
    }
    /**
     * <pre>
     ** 加入快速匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder getClientQuickJoinOrBuilder() {
      return getClientQuickJoin();
    }

    public static final int CLIENTENTERROOM_FIELD_NUMBER = 101;
    private com.kys.util.netty.proto.GameProto.ClientEnterRoom clientEnterRoom_;
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    public boolean hasClientEnterRoom() {
      return clientEnterRoom_ != null;
    }
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientEnterRoom getClientEnterRoom() {
      return clientEnterRoom_ == null ? com.kys.util.netty.proto.GameProto.ClientEnterRoom.getDefaultInstance() : clientEnterRoom_;
    }
    /**
     * <pre>
     ** 连接上游戏服后，进入房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder getClientEnterRoomOrBuilder() {
      return getClientEnterRoom();
    }

    public static final int CLIENTDOCATCH_FIELD_NUMBER = 102;
    private com.kys.util.netty.proto.GameProto.ClientDoCatch clientDoCatch_;
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    public boolean hasClientDoCatch() {
      return clientDoCatch_ != null;
    }
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientDoCatch getClientDoCatch() {
      return clientDoCatch_ == null ? com.kys.util.netty.proto.GameProto.ClientDoCatch.getDefaultInstance() : clientDoCatch_;
    }
    /**
     * <pre>
     ** 叫分 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder getClientDoCatchOrBuilder() {
      return getClientDoCatch();
    }

    public static final int CLIENTPLAYCARDS_FIELD_NUMBER = 103;
    private com.kys.util.netty.proto.GameProto.ClientPlayCards clientPlayCards_;
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    public boolean hasClientPlayCards() {
      return clientPlayCards_ != null;
    }
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientPlayCards getClientPlayCards() {
      return clientPlayCards_ == null ? com.kys.util.netty.proto.GameProto.ClientPlayCards.getDefaultInstance() : clientPlayCards_;
    }
    /**
     * <pre>
     ** 出牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder getClientPlayCardsOrBuilder() {
      return getClientPlayCards();
    }

    public static final int CLIENTRECOVERGAME_FIELD_NUMBER = 104;
    private com.kys.util.netty.proto.GameProto.ClientRecoverGame clientRecoverGame_;
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    public boolean hasClientRecoverGame() {
      return clientRecoverGame_ != null;
    }
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientRecoverGame getClientRecoverGame() {
      return clientRecoverGame_ == null ? com.kys.util.netty.proto.GameProto.ClientRecoverGame.getDefaultInstance() : clientRecoverGame_;
    }
    /**
     * <pre>
     ** 客户端掉线后，恢复游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder getClientRecoverGameOrBuilder() {
      return getClientRecoverGame();
    }

    public static final int CLIENTAUTOPLAY_FIELD_NUMBER = 105;
    private com.kys.util.netty.proto.GameProto.ClientAutoPlay clientAutoPlay_;
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    public boolean hasClientAutoPlay() {
      return clientAutoPlay_ != null;
    }
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientAutoPlay getClientAutoPlay() {
      return clientAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.ClientAutoPlay.getDefaultInstance() : clientAutoPlay_;
    }
    /**
     * <pre>
     ** 客户端托管 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder getClientAutoPlayOrBuilder() {
      return getClientAutoPlay();
    }

    public static final int CLIENTLEAVEROOM_FIELD_NUMBER = 106;
    private com.kys.util.netty.proto.GameProto.ClientLeaveRoom clientLeaveRoom_;
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    public boolean hasClientLeaveRoom() {
      return clientLeaveRoom_ != null;
    }
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientLeaveRoom getClientLeaveRoom() {
      return clientLeaveRoom_ == null ? com.kys.util.netty.proto.GameProto.ClientLeaveRoom.getDefaultInstance() : clientLeaveRoom_;
    }
    /**
     * <pre>
     ** 客户端离开房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder getClientLeaveRoomOrBuilder() {
      return getClientLeaveRoom();
    }

    public static final int CLIENTCANCLEJOIN_FIELD_NUMBER = 107;
    private com.kys.util.netty.proto.GameProto.ClientCancleJoin clientCancleJoin_;
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    public boolean hasClientCancleJoin() {
      return clientCancleJoin_ != null;
    }
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientCancleJoin getClientCancleJoin() {
      return clientCancleJoin_ == null ? com.kys.util.netty.proto.GameProto.ClientCancleJoin.getDefaultInstance() : clientCancleJoin_;
    }
    /**
     * <pre>
     ** 客户端取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder getClientCancleJoinOrBuilder() {
      return getClientCancleJoin();
    }

    public static final int CLIENTQUERYINDEX_FIELD_NUMBER = 108;
    private com.kys.util.netty.proto.GameProto.ClientQueryIndex clientQueryIndex_;
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    public boolean hasClientQueryIndex() {
      return clientQueryIndex_ != null;
    }
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientQueryIndex getClientQueryIndex() {
      return clientQueryIndex_ == null ? com.kys.util.netty.proto.GameProto.ClientQueryIndex.getDefaultInstance() : clientQueryIndex_;
    }
    /**
     * <pre>
     ** 客户端查询序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder getClientQueryIndexOrBuilder() {
      return getClientQueryIndex();
    }

    public static final int CLIENTRETRYRETURNGAME_FIELD_NUMBER = 109;
    private com.kys.util.netty.proto.GameProto.ClientRetryReturnGame clientRetryReturnGame_;
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    public boolean hasClientRetryReturnGame() {
      return clientRetryReturnGame_ != null;
    }
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientRetryReturnGame getClientRetryReturnGame() {
      return clientRetryReturnGame_ == null ? com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.getDefaultInstance() : clientRetryReturnGame_;
    }
    /**
     * <pre>
     ** 客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
     */
    public com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder getClientRetryReturnGameOrBuilder() {
      return getClientRetryReturnGame();
    }

    public static final int CLIENTGETRANKLIST_FIELD_NUMBER = 200;
    private com.kys.util.netty.proto.HallProto.ClientGetRankList clientGetRankList_;
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    public boolean hasClientGetRankList() {
      return clientGetRankList_ != null;
    }
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRankList getClientGetRankList() {
      return clientGetRankList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRankList.getDefaultInstance() : clientGetRankList_;
    }
    /**
     * <pre>
     ** 获取排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder getClientGetRankListOrBuilder() {
      return getClientGetRankList();
    }

    public static final int CLIENTGETSIGNUPREWARDLIST_FIELD_NUMBER = 201;
    private com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList clientGetSignupRewardList_;
    /**
     * <pre>
     ** Client获取签到奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
     */
    public boolean hasClientGetSignupRewardList() {
      return clientGetSignupRewardList_ != null;
    }
    /**
     * <pre>
     ** Client获取签到奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList getClientGetSignupRewardList() {
      return clientGetSignupRewardList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.getDefaultInstance() : clientGetSignupRewardList_;
    }
    /**
     * <pre>
     ** Client获取签到奖励信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetSignupRewardListOrBuilder getClientGetSignupRewardListOrBuilder() {
      return getClientGetSignupRewardList();
    }

    public static final int CLIENTGETHALLINFO_FIELD_NUMBER = 202;
    private com.kys.util.netty.proto.HallProto.ClientGetHallInfo clientGetHallInfo_;
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
     */
    public boolean hasClientGetHallInfo() {
      return clientGetHallInfo_ != null;
    }
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetHallInfo getClientGetHallInfo() {
      return clientGetHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetHallInfo.getDefaultInstance() : clientGetHallInfo_;
    }
    /**
     * <pre>
     ** 获取玩家大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetHallInfoOrBuilder getClientGetHallInfoOrBuilder() {
      return getClientGetHallInfo();
    }

    public static final int CLIENTSIGNUP_FIELD_NUMBER = 203;
    private com.kys.util.netty.proto.HallProto.ClientSignup clientSignup_;
    /**
     * <pre>
     ** 签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
     */
    public boolean hasClientSignup() {
      return clientSignup_ != null;
    }
    /**
     * <pre>
     ** 签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSignup getClientSignup() {
      return clientSignup_ == null ? com.kys.util.netty.proto.HallProto.ClientSignup.getDefaultInstance() : clientSignup_;
    }
    /**
     * <pre>
     ** 签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSignupOrBuilder getClientSignupOrBuilder() {
      return getClientSignup();
    }

    public static final int CLIENTDRAWWINCUP_FIELD_NUMBER = 204;
    private com.kys.util.netty.proto.HallProto.ClientDrawWinCup clientDrawWinCup_;
    /**
     * <pre>
     ** 客户端请求抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
     */
    public boolean hasClientDrawWinCup() {
      return clientDrawWinCup_ != null;
    }
    /**
     * <pre>
     ** 客户端请求抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDrawWinCup getClientDrawWinCup() {
      return clientDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ClientDrawWinCup.getDefaultInstance() : clientDrawWinCup_;
    }
    /**
     * <pre>
     ** 客户端请求抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDrawWinCupOrBuilder getClientDrawWinCupOrBuilder() {
      return getClientDrawWinCup();
    }

    public static final int CLIENTGETROOMCONFIG_FIELD_NUMBER = 205;
    private com.kys.util.netty.proto.HallProto.ClientGetRoomConfig clientGetRoomConfig_;
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    public boolean hasClientGetRoomConfig() {
      return clientGetRoomConfig_ != null;
    }
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomConfig getClientGetRoomConfig() {
      return clientGetRoomConfig_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.getDefaultInstance() : clientGetRoomConfig_;
    }
    /**
     * <pre>
     ** 客户端请求游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder getClientGetRoomConfigOrBuilder() {
      return getClientGetRoomConfig();
    }

    public static final int CLIENTREWARDMESSAGE_FIELD_NUMBER = 206;
    private com.kys.util.netty.proto.HallProto.ClientRewardMessage clientRewardMessage_;
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    public boolean hasClientRewardMessage() {
      return clientRewardMessage_ != null;
    }
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientRewardMessage getClientRewardMessage() {
      return clientRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.ClientRewardMessage.getDefaultInstance() : clientRewardMessage_;
    }
    /**
     * <pre>
     ** 客户端请求奖励公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder getClientRewardMessageOrBuilder() {
      return getClientRewardMessage();
    }

    public static final int CLIENTGETROOMCARDCONFIG_FIELD_NUMBER = 207;
    private com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig clientGetRoomCardConfig_;
    /**
     * <pre>
     ** 客户端请求房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
     */
    public boolean hasClientGetRoomCardConfig() {
      return clientGetRoomCardConfig_ != null;
    }
    /**
     * <pre>
     ** 客户端请求房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig getClientGetRoomCardConfig() {
      return clientGetRoomCardConfig_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.getDefaultInstance() : clientGetRoomCardConfig_;
    }
    /**
     * <pre>
     ** 客户端请求房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfigOrBuilder getClientGetRoomCardConfigOrBuilder() {
      return getClientGetRoomCardConfig();
    }

    public static final int CLIENTCREATEROOM_FIELD_NUMBER = 208;
    private com.kys.util.netty.proto.HallProto.ClientCreateRoom clientCreateRoom_;
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
     */
    public boolean hasClientCreateRoom() {
      return clientCreateRoom_ != null;
    }
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientCreateRoom getClientCreateRoom() {
      return clientCreateRoom_ == null ? com.kys.util.netty.proto.HallProto.ClientCreateRoom.getDefaultInstance() : clientCreateRoom_;
    }
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientCreateRoomOrBuilder getClientCreateRoomOrBuilder() {
      return getClientCreateRoom();
    }

    public static final int CLIENTGETMONTHCARDDIAMOND_FIELD_NUMBER = 209;
    private com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond clientGetMonthCardDiamond_;
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    public boolean hasClientGetMonthCardDiamond() {
      return clientGetMonthCardDiamond_ != null;
    }
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond getClientGetMonthCardDiamond() {
      return clientGetMonthCardDiamond_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.getDefaultInstance() : clientGetMonthCardDiamond_;
    }
    /**
     * <pre>
     ** 客户端领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder getClientGetMonthCardDiamondOrBuilder() {
      return getClientGetMonthCardDiamond();
    }

    public static final int CLIENTGETLOTTERYCOUNT_FIELD_NUMBER = 210;
    private com.kys.util.netty.proto.HallProto.ClientGetLotteryCount clientGetLotteryCount_;
    /**
     * <pre>
     ** 客户端获取玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    public boolean hasClientGetLotteryCount() {
      return clientGetLotteryCount_ != null;
    }
    /**
     * <pre>
     ** 客户端获取玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetLotteryCount getClientGetLotteryCount() {
      return clientGetLotteryCount_ == null ? com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.getDefaultInstance() : clientGetLotteryCount_;
    }
    /**
     * <pre>
     ** 客户端获取玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder getClientGetLotteryCountOrBuilder() {
      return getClientGetLotteryCount();
    }

    public static final int CLIENTGETROOMINFO_FIELD_NUMBER = 211;
    private com.kys.util.netty.proto.HallProto.ClientGetRoomInfo clientGetRoomInfo_;
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    public boolean hasClientGetRoomInfo() {
      return clientGetRoomInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomInfo getClientGetRoomInfo() {
      return clientGetRoomInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.getDefaultInstance() : clientGetRoomInfo_;
    }
    /**
     * <pre>
     ** 客户端请求单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder getClientGetRoomInfoOrBuilder() {
      return getClientGetRoomInfo();
    }

    public static final int CLIENTSENDTELCODE_FIELD_NUMBER = 212;
    private com.kys.util.netty.proto.HallProto.ClientSendTelCode clientSendTelCode_;
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    public boolean hasClientSendTelCode() {
      return clientSendTelCode_ != null;
    }
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSendTelCode getClientSendTelCode() {
      return clientSendTelCode_ == null ? com.kys.util.netty.proto.HallProto.ClientSendTelCode.getDefaultInstance() : clientSendTelCode_;
    }
    /**
     * <pre>
     ** 客户端请求发送验证短信 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder getClientSendTelCodeOrBuilder() {
      return getClientSendTelCode();
    }

    public static final int CLIENTVERIFYTELCODE_FIELD_NUMBER = 213;
    private com.kys.util.netty.proto.HallProto.ClientVerifyTelCode clientVerifyTelCode_;
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    public boolean hasClientVerifyTelCode() {
      return clientVerifyTelCode_ != null;
    }
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientVerifyTelCode getClientVerifyTelCode() {
      return clientVerifyTelCode_ == null ? com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.getDefaultInstance() : clientVerifyTelCode_;
    }
    /**
     * <pre>
     ** 客户端校验短信验证码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder getClientVerifyTelCodeOrBuilder() {
      return getClientVerifyTelCode();
    }

    public static final int CLIENTQUERYSHARELIST_FIELD_NUMBER = 214;
    private com.kys.util.netty.proto.HallProto.ClientQueryShareList clientQueryShareList_;
    /**
     * <pre>
     ** 客户端请求分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
     */
    public boolean hasClientQueryShareList() {
      return clientQueryShareList_ != null;
    }
    /**
     * <pre>
     ** 客户端请求分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryShareList getClientQueryShareList() {
      return clientQueryShareList_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryShareList.getDefaultInstance() : clientQueryShareList_;
    }
    /**
     * <pre>
     ** 客户端请求分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryShareListOrBuilder getClientQueryShareListOrBuilder() {
      return getClientQueryShareList();
    }

    public static final int CLIENTQUERYSHAREDETAIL_FIELD_NUMBER = 215;
    private com.kys.util.netty.proto.HallProto.ClientQueryShareDetail clientQueryShareDetail_;
    /**
     * <pre>
     ** 客户端查询推广列表详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
     */
    public boolean hasClientQueryShareDetail() {
      return clientQueryShareDetail_ != null;
    }
    /**
     * <pre>
     ** 客户端查询推广列表详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryShareDetail getClientQueryShareDetail() {
      return clientQueryShareDetail_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.getDefaultInstance() : clientQueryShareDetail_;
    }
    /**
     * <pre>
     ** 客户端查询推广列表详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryShareDetailOrBuilder getClientQueryShareDetailOrBuilder() {
      return getClientQueryShareDetail();
    }

    public static final int CLIENTGETTASKAWARD_FIELD_NUMBER = 216;
    private com.kys.util.netty.proto.HallProto.ClientGetTaskAward clientGetTaskAward_;
    /**
     * <pre>
     ** 客户端领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
     */
    public boolean hasClientGetTaskAward() {
      return clientGetTaskAward_ != null;
    }
    /**
     * <pre>
     ** 客户端领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetTaskAward getClientGetTaskAward() {
      return clientGetTaskAward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetTaskAward.getDefaultInstance() : clientGetTaskAward_;
    }
    /**
     * <pre>
     ** 客户端领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetTaskAwardOrBuilder getClientGetTaskAwardOrBuilder() {
      return getClientGetTaskAward();
    }

    public static final int CLIENTSHAREPACKAGE_FIELD_NUMBER = 217;
    private com.kys.util.netty.proto.HallProto.ClientSharePackage clientSharePackage_;
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    public boolean hasClientSharePackage() {
      return clientSharePackage_ != null;
    }
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSharePackage getClientSharePackage() {
      return clientSharePackage_ == null ? com.kys.util.netty.proto.HallProto.ClientSharePackage.getDefaultInstance() : clientSharePackage_;
    }
    /**
     * <pre>
     ** 客户端分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder getClientSharePackageOrBuilder() {
      return getClientSharePackage();
    }

    public static final int CLIENTGETAWARDLIST_FIELD_NUMBER = 218;
    private com.kys.util.netty.proto.HallProto.ClientGetAwardList clientGetAwardList_;
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    public boolean hasClientGetAwardList() {
      return clientGetAwardList_ != null;
    }
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetAwardList getClientGetAwardList() {
      return clientGetAwardList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetAwardList.getDefaultInstance() : clientGetAwardList_;
    }
    /**
     * <pre>
     ** 客户端获取大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder getClientGetAwardListOrBuilder() {
      return getClientGetAwardList();
    }

    public static final int CLIENTPLAYERLOGOUT_FIELD_NUMBER = 219;
    private com.kys.util.netty.proto.HallProto.ClientPlayerLogout clientPlayerLogout_;
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    public boolean hasClientPlayerLogout() {
      return clientPlayerLogout_ != null;
    }
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientPlayerLogout getClientPlayerLogout() {
      return clientPlayerLogout_ == null ? com.kys.util.netty.proto.HallProto.ClientPlayerLogout.getDefaultInstance() : clientPlayerLogout_;
    }
    /**
     * <pre>
     ** 玩家登出 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder getClientPlayerLogoutOrBuilder() {
      return getClientPlayerLogout();
    }

    public static final int CLIENTCHECKCONNECT_FIELD_NUMBER = 220;
    private com.kys.util.netty.proto.HallProto.ClientCheckConnect clientCheckConnect_;
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    public boolean hasClientCheckConnect() {
      return clientCheckConnect_ != null;
    }
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientCheckConnect getClientCheckConnect() {
      return clientCheckConnect_ == null ? com.kys.util.netty.proto.HallProto.ClientCheckConnect.getDefaultInstance() : clientCheckConnect_;
    }
    /**
     * <pre>
     ** 玩家检测与大厅的连接 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder getClientCheckConnectOrBuilder() {
      return getClientCheckConnect();
    }

    public static final int CLIENTGETPFLIST_FIELD_NUMBER = 221;
    private com.kys.util.netty.proto.HallProto.ClientGetPFList clientGetPFList_;
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    public boolean hasClientGetPFList() {
      return clientGetPFList_ != null;
    }
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetPFList getClientGetPFList() {
      return clientGetPFList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetPFList.getDefaultInstance() : clientGetPFList_;
    }
    /**
     * <pre>
     ** 客户端请求获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder getClientGetPFListOrBuilder() {
      return getClientGetPFList();
    }

    public static final int CLIENTCHOOSEPF_FIELD_NUMBER = 222;
    private com.kys.util.netty.proto.HallProto.ClientChoosePF clientChoosePF_;
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    public boolean hasClientChoosePF() {
      return clientChoosePF_ != null;
    }
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientChoosePF getClientChoosePF() {
      return clientChoosePF_ == null ? com.kys.util.netty.proto.HallProto.ClientChoosePF.getDefaultInstance() : clientChoosePF_;
    }
    /**
     * <pre>
     ** 客户端选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder getClientChoosePFOrBuilder() {
      return getClientChoosePF();
    }

    public static final int CLIENTGETHISTORYRANK_FIELD_NUMBER = 223;
    private com.kys.util.netty.proto.HallProto.ClientGetHistoryRank clientGetHistoryRank_;
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    public boolean hasClientGetHistoryRank() {
      return clientGetHistoryRank_ != null;
    }
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetHistoryRank getClientGetHistoryRank() {
      return clientGetHistoryRank_ == null ? com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.getDefaultInstance() : clientGetHistoryRank_;
    }
    /**
     * <pre>
     ** 客户端获取上周历史排行榜
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder getClientGetHistoryRankOrBuilder() {
      return getClientGetHistoryRank();
    }

    public static final int CLIENTH5REWARD_FIELD_NUMBER = 224;
    private com.kys.util.netty.proto.HallProto.ClientH5Reward clientH5Reward_;
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    public boolean hasClientH5Reward() {
      return clientH5Reward_ != null;
    }
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientH5Reward getClientH5Reward() {
      return clientH5Reward_ == null ? com.kys.util.netty.proto.HallProto.ClientH5Reward.getDefaultInstance() : clientH5Reward_;
    }
    /**
     * <pre>
     ** 客户端请求H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder getClientH5RewardOrBuilder() {
      return getClientH5Reward();
    }

    public static final int CLIENTNEWDRAWWINCUP_FIELD_NUMBER = 225;
    private com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup clientNewDrawWinCup_;
    /**
     * <pre>
     ** 客户端新抽奖杯请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    public boolean hasClientNewDrawWinCup() {
      return clientNewDrawWinCup_ != null;
    }
    /**
     * <pre>
     ** 客户端新抽奖杯请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup getClientNewDrawWinCup() {
      return clientNewDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.getDefaultInstance() : clientNewDrawWinCup_;
    }
    /**
     * <pre>
     ** 客户端新抽奖杯请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder getClientNewDrawWinCupOrBuilder() {
      return getClientNewDrawWinCup();
    }

    public static final int CLIENTGETNEWHALLINFO_FIELD_NUMBER = 226;
    private com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo clientGetNewHallInfo_;
    /**
     * <pre>
     ** 获取玩家(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    public boolean hasClientGetNewHallInfo() {
      return clientGetNewHallInfo_ != null;
    }
    /**
     * <pre>
     ** 获取玩家(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo getClientGetNewHallInfo() {
      return clientGetNewHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.getDefaultInstance() : clientGetNewHallInfo_;
    }
    /**
     * <pre>
     ** 获取玩家(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder getClientGetNewHallInfoOrBuilder() {
      return getClientGetNewHallInfo();
    }

    public static final int CLIENTGETSKININFO_FIELD_NUMBER = 227;
    private com.kys.util.netty.proto.UserProto.ClientGetSkinInfo clientGetSkinInfo_;
    /**
     * <pre>
     ** 获取玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
     */
    public boolean hasClientGetSkinInfo() {
      return clientGetSkinInfo_ != null;
    }
    /**
     * <pre>
     ** 获取玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetSkinInfo getClientGetSkinInfo() {
      return clientGetSkinInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.getDefaultInstance() : clientGetSkinInfo_;
    }
    /**
     * <pre>
     ** 获取玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientGetSkinInfoOrBuilder getClientGetSkinInfoOrBuilder() {
      return getClientGetSkinInfo();
    }

    public static final int CLIENTEQUIPSKIN_FIELD_NUMBER = 228;
    private com.kys.util.netty.proto.UserProto.ClientEquipSkin clientEquipSkin_;
    /**
     * <pre>
     ** 玩家修改当前皮肤 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
     */
    public boolean hasClientEquipSkin() {
      return clientEquipSkin_ != null;
    }
    /**
     * <pre>
     ** 玩家修改当前皮肤 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientEquipSkin getClientEquipSkin() {
      return clientEquipSkin_ == null ? com.kys.util.netty.proto.UserProto.ClientEquipSkin.getDefaultInstance() : clientEquipSkin_;
    }
    /**
     * <pre>
     ** 玩家修改当前皮肤 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
     */
    public com.kys.util.netty.proto.UserProto.ClientEquipSkinOrBuilder getClientEquipSkinOrBuilder() {
      return getClientEquipSkin();
    }

    public static final int CLIENTGETSTOREDATA_FIELD_NUMBER = 300;
    private com.kys.util.netty.proto.StoreProto.ClientGetStoreData clientGetStoreData_;
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
     */
    public boolean hasClientGetStoreData() {
      return clientGetStoreData_ != null;
    }
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetStoreData getClientGetStoreData() {
      return clientGetStoreData_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetStoreData.getDefaultInstance() : clientGetStoreData_;
    }
    /**
     * <pre>
     ** 获去商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetStoreDataOrBuilder getClientGetStoreDataOrBuilder() {
      return getClientGetStoreData();
    }

    public static final int CLIENTCONVERTGOODS_FIELD_NUMBER = 301;
    private com.kys.util.netty.proto.StoreProto.ClientConvertGoods clientConvertGoods_;
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    public boolean hasClientConvertGoods() {
      return clientConvertGoods_ != null;
    }
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientConvertGoods getClientConvertGoods() {
      return clientConvertGoods_ == null ? com.kys.util.netty.proto.StoreProto.ClientConvertGoods.getDefaultInstance() : clientConvertGoods_;
    }
    /**
     * <pre>
     ** 玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder getClientConvertGoodsOrBuilder() {
      return getClientConvertGoods();
    }

    public static final int CLIENTWXPAYRESULTQUERY_FIELD_NUMBER = 302;
    private com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery clientWXPayResultQuery_;
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    public boolean hasClientWXPayResultQuery() {
      return clientWXPayResultQuery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery getClientWXPayResultQuery() {
      return clientWXPayResultQuery_ == null ? com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.getDefaultInstance() : clientWXPayResultQuery_;
    }
    /**
     * <pre>
     ** 客户端请求查询支付结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder getClientWXPayResultQueryOrBuilder() {
      return getClientWXPayResultQuery();
    }

    public static final int CLIENTBUYORDERGOODS_FIELD_NUMBER = 303;
    private com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods clientBuyOrderGoods_;
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    public boolean hasClientBuyOrderGoods() {
      return clientBuyOrderGoods_ != null;
    }
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods getClientBuyOrderGoods() {
      return clientBuyOrderGoods_ == null ? com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.getDefaultInstance() : clientBuyOrderGoods_;
    }
    /**
     * <pre>
     ** Client请求商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder getClientBuyOrderGoodsOrBuilder() {
      return getClientBuyOrderGoods();
    }

    public static final int CLIENTGETFIRSTCHARGE_FIELD_NUMBER = 304;
    private com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge clientGetFirstCharge_;
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    public boolean hasClientGetFirstCharge() {
      return clientGetFirstCharge_ != null;
    }
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge getClientGetFirstCharge() {
      return clientGetFirstCharge_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.getDefaultInstance() : clientGetFirstCharge_;
    }
    /**
     * <pre>
     ** 客户端请求首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder getClientGetFirstChargeOrBuilder() {
      return getClientGetFirstCharge();
    }

    public static final int CLIENTGETDAILYGIFT_FIELD_NUMBER = 305;
    private com.kys.util.netty.proto.StoreProto.ClientGetDailyGift clientGetDailyGift_;
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    public boolean hasClientGetDailyGift() {
      return clientGetDailyGift_ != null;
    }
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetDailyGift getClientGetDailyGift() {
      return clientGetDailyGift_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.getDefaultInstance() : clientGetDailyGift_;
    }
    /**
     * <pre>
     ** 客户端请求每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder getClientGetDailyGiftOrBuilder() {
      return getClientGetDailyGift();
    }

    public static final int CLIENTGETMONTHCARD_FIELD_NUMBER = 306;
    private com.kys.util.netty.proto.StoreProto.ClientGetMonthCard clientGetMonthCard_;
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    public boolean hasClientGetMonthCard() {
      return clientGetMonthCard_ != null;
    }
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetMonthCard getClientGetMonthCard() {
      return clientGetMonthCard_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.getDefaultInstance() : clientGetMonthCard_;
    }
    /**
     * <pre>
     ** 客户端请求钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder getClientGetMonthCardOrBuilder() {
      return getClientGetMonthCard();
    }

    public static final int CLIENTGETRESURGENCEGIFT_FIELD_NUMBER = 307;
    private com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift clientGetResurgenceGift_;
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    public boolean hasClientGetResurgenceGift() {
      return clientGetResurgenceGift_ != null;
    }
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift getClientGetResurgenceGift() {
      return clientGetResurgenceGift_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.getDefaultInstance() : clientGetResurgenceGift_;
    }
    /**
     * <pre>
     ** 客户端请求复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder getClientGetResurgenceGiftOrBuilder() {
      return getClientGetResurgenceGift();
    }

    public static final int CLIENTGETANNOUNCE_FIELD_NUMBER = 500;
    private com.kys.util.netty.proto.HallProto.ClientGetAnnounce clientGetAnnounce_;
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    public boolean hasClientGetAnnounce() {
      return clientGetAnnounce_ != null;
    }
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetAnnounce getClientGetAnnounce() {
      return clientGetAnnounce_ == null ? com.kys.util.netty.proto.HallProto.ClientGetAnnounce.getDefaultInstance() : clientGetAnnounce_;
    }
    /**
     * <pre>
     ** 客户端请求公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder getClientGetAnnounceOrBuilder() {
      return getClientGetAnnounce();
    }

    public static final int CLIENTGETMAIL_FIELD_NUMBER = 600;
    private com.kys.util.netty.proto.HallProto.ClientGetMail clientGetMail_;
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    public boolean hasClientGetMail() {
      return clientGetMail_ != null;
    }
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMail getClientGetMail() {
      return clientGetMail_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMail.getDefaultInstance() : clientGetMail_;
    }
    /**
     * <pre>
     ** 客户端获取邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder getClientGetMailOrBuilder() {
      return getClientGetMail();
    }

    public static final int CLIENTGETMAILREWARD_FIELD_NUMBER = 601;
    private com.kys.util.netty.proto.HallProto.ClientGetMailReward clientGetMailReward_;
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    public boolean hasClientGetMailReward() {
      return clientGetMailReward_ != null;
    }
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMailReward getClientGetMailReward() {
      return clientGetMailReward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMailReward.getDefaultInstance() : clientGetMailReward_;
    }
    /**
     * <pre>
     ** 客户端获取邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder getClientGetMailRewardOrBuilder() {
      return getClientGetMailReward();
    }

    public static final int CLIENTDELMAIL_FIELD_NUMBER = 602;
    private com.kys.util.netty.proto.HallProto.ClientDelMail clientDelMail_;
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    public boolean hasClientDelMail() {
      return clientDelMail_ != null;
    }
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDelMail getClientDelMail() {
      return clientDelMail_ == null ? com.kys.util.netty.proto.HallProto.ClientDelMail.getDefaultInstance() : clientDelMail_;
    }
    /**
     * <pre>
     ** 客户端请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder getClientDelMailOrBuilder() {
      return getClientDelMail();
    }

    public static final int CLIENTREADMAIL_FIELD_NUMBER = 603;
    private com.kys.util.netty.proto.HallProto.ClientReadMail clientReadMail_;
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    public boolean hasClientReadMail() {
      return clientReadMail_ != null;
    }
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientReadMail getClientReadMail() {
      return clientReadMail_ == null ? com.kys.util.netty.proto.HallProto.ClientReadMail.getDefaultInstance() : clientReadMail_;
    }
    /**
     * <pre>
     ** 客户端已经读取了邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder getClientReadMailOrBuilder() {
      return getClientReadMail();
    }

    public static final int CLIENTDEL2R_FIELD_NUMBER = 604;
    private com.kys.util.netty.proto.HallProto.ClientDel2R clientDel2R_;
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    public boolean hasClientDel2R() {
      return clientDel2R_ != null;
    }
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDel2R getClientDel2R() {
      return clientDel2R_ == null ? com.kys.util.netty.proto.HallProto.ClientDel2R.getDefaultInstance() : clientDel2R_;
    }
    /**
     * <pre>
     ** 客户端请求删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder getClientDel2ROrBuilder() {
      return getClientDel2R();
    }

    public static final int CLIENTQUERYDAILYTASK_FIELD_NUMBER = 700;
    private com.kys.util.netty.proto.HallProto.ClientQueryDailyTask clientQueryDailyTask_;
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    public boolean hasClientQueryDailyTask() {
      return clientQueryDailyTask_ != null;
    }
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryDailyTask getClientQueryDailyTask() {
      return clientQueryDailyTask_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.getDefaultInstance() : clientQueryDailyTask_;
    }
    /**
     * <pre>
     ** 客户端请求每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder getClientQueryDailyTaskOrBuilder() {
      return getClientQueryDailyTask();
    }

    public static final int CLIENTGETDAILYTASKAWARD_FIELD_NUMBER = 701;
    private com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward clientGetDailyTaskAward_;
    /**
     * <pre>
     ** 客户端领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
     */
    public boolean hasClientGetDailyTaskAward() {
      return clientGetDailyTaskAward_ != null;
    }
    /**
     * <pre>
     ** 客户端领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward getClientGetDailyTaskAward() {
      return clientGetDailyTaskAward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.getDefaultInstance() : clientGetDailyTaskAward_;
    }
    /**
     * <pre>
     ** 客户端领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAwardOrBuilder getClientGetDailyTaskAwardOrBuilder() {
      return getClientGetDailyTaskAward();
    }

    public static final int CLIENTGETNOVICEREWARD_FIELD_NUMBER = 702;
    private com.kys.util.netty.proto.HallProto.ClientGetNoviceReward clientGetNoviceReward_;
    /**
     * <pre>
     ** 客户端请求抽取新手引导奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    public boolean hasClientGetNoviceReward() {
      return clientGetNoviceReward_ != null;
    }
    /**
     * <pre>
     ** 客户端请求抽取新手引导奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetNoviceReward getClientGetNoviceReward() {
      return clientGetNoviceReward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.getDefaultInstance() : clientGetNoviceReward_;
    }
    /**
     * <pre>
     ** 客户端请求抽取新手引导奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder getClientGetNoviceRewardOrBuilder() {
      return getClientGetNoviceReward();
    }

    public static final int CLIENTQUERYNOVICETASK_FIELD_NUMBER = 703;
    private com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask clientQueryNoviceTask_;
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    public boolean hasClientQueryNoviceTask() {
      return clientQueryNoviceTask_ != null;
    }
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask getClientQueryNoviceTask() {
      return clientQueryNoviceTask_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.getDefaultInstance() : clientQueryNoviceTask_;
    }
    /**
     * <pre>
     ** 客户端请求新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder getClientQueryNoviceTaskOrBuilder() {
      return getClientQueryNoviceTask();
    }

    public static final int CLIENTGETDTAWARD_FIELD_NUMBER = 704;
    private com.kys.util.netty.proto.HallProto.ClientGetDTAward clientGetDTAward_;
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    public boolean hasClientGetDTAward() {
      return clientGetDTAward_ != null;
    }
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetDTAward getClientGetDTAward() {
      return clientGetDTAward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetDTAward.getDefaultInstance() : clientGetDTAward_;
    }
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
     */
    public com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder getClientGetDTAwardOrBuilder() {
      return getClientGetDTAward();
    }

    public static final int CLIENTGETRECEIVEADDR_FIELD_NUMBER = 800;
    private com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr clientGetReceiveAddr_;
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    public boolean hasClientGetReceiveAddr() {
      return clientGetReceiveAddr_ != null;
    }
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr getClientGetReceiveAddr() {
      return clientGetReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.getDefaultInstance() : clientGetReceiveAddr_;
    }
    /**
     * <pre>
     ** 获取用户地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder getClientGetReceiveAddrOrBuilder() {
      return getClientGetReceiveAddr();
    }

    public static final int CLIENTALTERRECEIVEADDR_FIELD_NUMBER = 801;
    private com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr clientAlterReceiveAddr_;
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    public boolean hasClientAlterReceiveAddr() {
      return clientAlterReceiveAddr_ != null;
    }
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr getClientAlterReceiveAddr() {
      return clientAlterReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.getDefaultInstance() : clientAlterReceiveAddr_;
    }
    /**
     * <pre>
     ** 客户端修改玩家收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder getClientAlterReceiveAddrOrBuilder() {
      return getClientAlterReceiveAddr();
    }

    public static final int CLIENTSNATCHLIST_FIELD_NUMBER = 802;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchList clientSnatchList_;
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    public boolean hasClientSnatchList() {
      return clientSnatchList_ != null;
    }
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchList getClientSnatchList() {
      return clientSnatchList_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchList.getDefaultInstance() : clientSnatchList_;
    }
    /**
     * <pre>
     ** 夺宝主界面，请求当前商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder getClientSnatchListOrBuilder() {
      return getClientSnatchList();
    }

    public static final int CLIENTSNATCHITEMDETAIL_FIELD_NUMBER = 803;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail clientSnatchItemDetail_;
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    public boolean hasClientSnatchItemDetail() {
      return clientSnatchItemDetail_ != null;
    }
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail getClientSnatchItemDetail() {
      return clientSnatchItemDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.getDefaultInstance() : clientSnatchItemDetail_;
    }
    /**
     * <pre>
     ** 获取单个奖品下注详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder getClientSnatchItemDetailOrBuilder() {
      return getClientSnatchItemDetail();
    }

    public static final int CLIENTSNATCHBET_FIELD_NUMBER = 804;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchBet clientSnatchBet_;
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    public boolean hasClientSnatchBet() {
      return clientSnatchBet_ != null;
    }
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchBet getClientSnatchBet() {
      return clientSnatchBet_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.getDefaultInstance() : clientSnatchBet_;
    }
    /**
     * <pre>
     ** 下注 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder getClientSnatchBetOrBuilder() {
      return getClientSnatchBet();
    }

    public static final int CLIENTSNATCHAWARDLIST_FIELD_NUMBER = 805;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList clientSnatchAwardList_;
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    public boolean hasClientSnatchAwardList() {
      return clientSnatchAwardList_ != null;
    }
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList getClientSnatchAwardList() {
      return clientSnatchAwardList_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.getDefaultInstance() : clientSnatchAwardList_;
    }
    /**
     * <pre>
     ** 客户端请求近期开奖列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder getClientSnatchAwardListOrBuilder() {
      return getClientSnatchAwardList();
    }

    public static final int CLIENTOWNSNATCHRECORD_FIELD_NUMBER = 806;
    private com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord clientOwnSnatchRecord_;
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    public boolean hasClientOwnSnatchRecord() {
      return clientOwnSnatchRecord_ != null;
    }
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord getClientOwnSnatchRecord() {
      return clientOwnSnatchRecord_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.getDefaultInstance() : clientOwnSnatchRecord_;
    }
    /**
     * <pre>
     ** 客户端获取自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder getClientOwnSnatchRecordOrBuilder() {
      return getClientOwnSnatchRecord();
    }

    public static final int CLIENTSNATCHITEMHISTORY_FIELD_NUMBER = 807;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory clientSnatchItemHistory_;
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    public boolean hasClientSnatchItemHistory() {
      return clientSnatchItemHistory_ != null;
    }
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory getClientSnatchItemHistory() {
      return clientSnatchItemHistory_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.getDefaultInstance() : clientSnatchItemHistory_;
    }
    /**
     * <pre>
     ** 查看某个商品的历史详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder getClientSnatchItemHistoryOrBuilder() {
      return getClientSnatchItemHistory();
    }

    public static final int CLIENTSNATCHHISTORYDETAIL_FIELD_NUMBER = 808;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail clientSnatchHistoryDetail_;
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    public boolean hasClientSnatchHistoryDetail() {
      return clientSnatchHistoryDetail_ != null;
    }
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail getClientSnatchHistoryDetail() {
      return clientSnatchHistoryDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.getDefaultInstance() : clientSnatchHistoryDetail_;
    }
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder getClientSnatchHistoryDetailOrBuilder() {
      return getClientSnatchHistoryDetail();
    }

    public static final int CLIENTSNATCHGETAWARD_FIELD_NUMBER = 809;
    private com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward clientSnatchGetAward_;
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    public boolean hasClientSnatchGetAward() {
      return clientSnatchGetAward_ != null;
    }
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward getClientSnatchGetAward() {
      return clientSnatchGetAward_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.getDefaultInstance() : clientSnatchGetAward_;
    }
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder getClientSnatchGetAwardOrBuilder() {
      return getClientSnatchGetAward();
    }

    public static final int CLIENTENTERDG_FIELD_NUMBER = 900;
    private com.kys.util.netty.proto.SnatchProto.ClientEnterDG clientEnterDG_;
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    public boolean hasClientEnterDG() {
      return clientEnterDG_ != null;
    }
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientEnterDG getClientEnterDG() {
      return clientEnterDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientEnterDG.getDefaultInstance() : clientEnterDG_;
    }
    /**
     * <pre>
     ** 客户端请求进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder getClientEnterDGOrBuilder() {
      return getClientEnterDG();
    }

    public static final int CLIENTDGLOTTERY_FIELD_NUMBER = 901;
    private com.kys.util.netty.proto.SnatchProto.ClientDGLottery clientDGLottery_;
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    public boolean hasClientDGLottery() {
      return clientDGLottery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientDGLottery getClientDGLottery() {
      return clientDGLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientDGLottery.getDefaultInstance() : clientDGLottery_;
    }
    /**
     * <pre>
     ** 客户端请求抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder getClientDGLotteryOrBuilder() {
      return getClientDGLottery();
    }

    public static final int CLIENTRESETLOTTERY_FIELD_NUMBER = 902;
    private com.kys.util.netty.proto.SnatchProto.ClientResetLottery clientResetLottery_;
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    public boolean hasClientResetLottery() {
      return clientResetLottery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientResetLottery getClientResetLottery() {
      return clientResetLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientResetLottery.getDefaultInstance() : clientResetLottery_;
    }
    /**
     * <pre>
     ** 客户端请求重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder getClientResetLotteryOrBuilder() {
      return getClientResetLottery();
    }

    public static final int CLIENTEXITDG_FIELD_NUMBER = 903;
    private com.kys.util.netty.proto.SnatchProto.ClientExitDG clientExitDG_;
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    public boolean hasClientExitDG() {
      return clientExitDG_ != null;
    }
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientExitDG getClientExitDG() {
      return clientExitDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientExitDG.getDefaultInstance() : clientExitDG_;
    }
    /**
     * <pre>
     ** 客户端退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder getClientExitDGOrBuilder() {
      return getClientExitDG();
    }

    public static final int CLIENTOPENDG_FIELD_NUMBER = 904;
    private com.kys.util.netty.proto.SnatchProto.ClientOpenDG clientOpenDG_;
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    public boolean hasClientOpenDG() {
      return clientOpenDG_ != null;
    }
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOpenDG getClientOpenDG() {
      return clientOpenDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOpenDG.getDefaultInstance() : clientOpenDG_;
    }
    /**
     * <pre>
     ** 客户端请求开启活动 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder getClientOpenDGOrBuilder() {
      return getClientOpenDG();
    }

    public static final int CLIENTOPENDD_FIELD_NUMBER = 905;
    private com.kys.util.netty.proto.SnatchProto.ClientOpenDD clientOpenDD_;
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    public boolean hasClientOpenDD() {
      return clientOpenDD_ != null;
    }
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOpenDD getClientOpenDD() {
      return clientOpenDD_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOpenDD.getDefaultInstance() : clientOpenDD_;
    }
    /**
     * <pre>
     ** 客户端请求开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder getClientOpenDDOrBuilder() {
      return getClientOpenDD();
    }

    public static final int CLIENTDDLOTTERY_FIELD_NUMBER = 906;
    private com.kys.util.netty.proto.SnatchProto.ClientDDLottery clientDDLottery_;
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    public boolean hasClientDDLottery() {
      return clientDDLottery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientDDLottery getClientDDLottery() {
      return clientDDLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientDDLottery.getDefaultInstance() : clientDDLottery_;
    }
    /**
     * <pre>
     ** 客户端请求钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder getClientDDLotteryOrBuilder() {
      return getClientDDLottery();
    }

    public static final int CLIENTEXITDD_FIELD_NUMBER = 907;
    private com.kys.util.netty.proto.SnatchProto.ClientExitDD clientExitDD_;
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    public boolean hasClientExitDD() {
      return clientExitDD_ != null;
    }
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientExitDD getClientExitDD() {
      return clientExitDD_ == null ? com.kys.util.netty.proto.SnatchProto.ClientExitDD.getDefaultInstance() : clientExitDD_;
    }
    /**
     * <pre>
     ** 客户端请求退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder getClientExitDDOrBuilder() {
      return getClientExitDD();
    }

    public static final int CLIENTQUERYPROP_FIELD_NUMBER = 1001;
    private com.kys.util.netty.proto.PropProto.ClientQueryProp clientQueryProp_;
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    public boolean hasClientQueryProp() {
      return clientQueryProp_ != null;
    }
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientQueryProp getClientQueryProp() {
      return clientQueryProp_ == null ? com.kys.util.netty.proto.PropProto.ClientQueryProp.getDefaultInstance() : clientQueryProp_;
    }
    /**
     * <pre>
     ** 客户端查看自己的道具接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder getClientQueryPropOrBuilder() {
      return getClientQueryProp();
    }

    public static final int CLIENTUSEPROP_FIELD_NUMBER = 1002;
    private com.kys.util.netty.proto.PropProto.ClientUseProp clientUseProp_;
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    public boolean hasClientUseProp() {
      return clientUseProp_ != null;
    }
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientUseProp getClientUseProp() {
      return clientUseProp_ == null ? com.kys.util.netty.proto.PropProto.ClientUseProp.getDefaultInstance() : clientUseProp_;
    }
    /**
     * <pre>
     ** 客户端请求使用道具 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder getClientUsePropOrBuilder() {
      return getClientUseProp();
    }

    public static final int CLIENTQUERYPROPCOUNT_FIELD_NUMBER = 1003;
    private com.kys.util.netty.proto.PropProto.ClientQueryPropCount clientQueryPropCount_;
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    public boolean hasClientQueryPropCount() {
      return clientQueryPropCount_ != null;
    }
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientQueryPropCount getClientQueryPropCount() {
      return clientQueryPropCount_ == null ? com.kys.util.netty.proto.PropProto.ClientQueryPropCount.getDefaultInstance() : clientQueryPropCount_;
    }
    /**
     * <pre>
     ** 客户端根据道具类型查询该种道具的数量 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
     */
    public com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder getClientQueryPropCountOrBuilder() {
      return getClientQueryPropCount();
    }

    public static final int CLIENTMONTHSIGNINFO_FIELD_NUMBER = 1101;
    private com.kys.util.netty.proto.SignProto.ClientMonthSignInfo clientMonthSignInfo_;
    /**
     * <pre>
     ** 客户端请求月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
     */
    public boolean hasClientMonthSignInfo() {
      return clientMonthSignInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端请求月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientMonthSignInfo getClientMonthSignInfo() {
      return clientMonthSignInfo_ == null ? com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.getDefaultInstance() : clientMonthSignInfo_;
    }
    /**
     * <pre>
     ** 客户端请求月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientMonthSignInfoOrBuilder getClientMonthSignInfoOrBuilder() {
      return getClientMonthSignInfo();
    }

    public static final int CLIENTMONTHSIGN_FIELD_NUMBER = 1102;
    private com.kys.util.netty.proto.SignProto.ClientMonthSign clientMonthSign_;
    /**
     * <pre>
     ** 客户端请求(新)签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
     */
    public boolean hasClientMonthSign() {
      return clientMonthSign_ != null;
    }
    /**
     * <pre>
     ** 客户端请求(新)签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientMonthSign getClientMonthSign() {
      return clientMonthSign_ == null ? com.kys.util.netty.proto.SignProto.ClientMonthSign.getDefaultInstance() : clientMonthSign_;
    }
    /**
     * <pre>
     ** 客户端请求(新)签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientMonthSignOrBuilder getClientMonthSignOrBuilder() {
      return getClientMonthSign();
    }

    public static final int CLIENTGETCRITREWARD_FIELD_NUMBER = 1103;
    private com.kys.util.netty.proto.SignProto.ClientGetCritReward clientGetCritReward_;
    /**
     * <pre>
     ** 客户端获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
     */
    public boolean hasClientGetCritReward() {
      return clientGetCritReward_ != null;
    }
    /**
     * <pre>
     ** 客户端获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetCritReward getClientGetCritReward() {
      return clientGetCritReward_ == null ? com.kys.util.netty.proto.SignProto.ClientGetCritReward.getDefaultInstance() : clientGetCritReward_;
    }
    /**
     * <pre>
     ** 客户端获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetCritRewardOrBuilder getClientGetCritRewardOrBuilder() {
      return getClientGetCritReward();
    }

    public static final int CLIENTLTLOTTERY_FIELD_NUMBER = 1104;
    private com.kys.util.netty.proto.SignProto.ClientLTLottery clientLTLottery_;
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    public boolean hasClientLTLottery() {
      return clientLTLottery_ != null;
    }
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientLTLottery getClientLTLottery() {
      return clientLTLottery_ == null ? com.kys.util.netty.proto.SignProto.ClientLTLottery.getDefaultInstance() : clientLTLottery_;
    }
    /**
     * <pre>
     ** 客户端请求幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder getClientLTLotteryOrBuilder() {
      return getClientLTLottery();
    }

    public static final int CLIENTGETTSREWARD_FIELD_NUMBER = 1105;
    private com.kys.util.netty.proto.SignProto.ClientGetTSReward clientGetTSReward_;
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    public boolean hasClientGetTSReward() {
      return clientGetTSReward_ != null;
    }
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetTSReward getClientGetTSReward() {
      return clientGetTSReward_ == null ? com.kys.util.netty.proto.SignProto.ClientGetTSReward.getDefaultInstance() : clientGetTSReward_;
    }
    /**
     * <pre>
     ** 客户端获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder getClientGetTSRewardOrBuilder() {
      return getClientGetTSReward();
    }

    public static final int CLIENTGETLUCKINFO_FIELD_NUMBER = 1106;
    private com.kys.util.netty.proto.SignProto.ClientGetLuckInfo clientGetLuckInfo_;
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    public boolean hasClientGetLuckInfo() {
      return clientGetLuckInfo_ != null;
    }
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetLuckInfo getClientGetLuckInfo() {
      return clientGetLuckInfo_ == null ? com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.getDefaultInstance() : clientGetLuckInfo_;
    }
    /**
     * <pre>
     ** 客户端获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
     */
    public com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder getClientGetLuckInfoOrBuilder() {
      return getClientGetLuckInfo();
    }

    public static final int CLIENTGETVIPINFO_FIELD_NUMBER = 1201;
    private com.kys.util.netty.proto.VipProto.ClientGetVipInfo clientGetVipInfo_;
    /**
     * <pre>
     ** 请求获取vip界面展示的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
     */
    public boolean hasClientGetVipInfo() {
      return clientGetVipInfo_ != null;
    }
    /**
     * <pre>
     ** 请求获取vip界面展示的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
     */
    public com.kys.util.netty.proto.VipProto.ClientGetVipInfo getClientGetVipInfo() {
      return clientGetVipInfo_ == null ? com.kys.util.netty.proto.VipProto.ClientGetVipInfo.getDefaultInstance() : clientGetVipInfo_;
    }
    /**
     * <pre>
     ** 请求获取vip界面展示的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
     */
    public com.kys.util.netty.proto.VipProto.ClientGetVipInfoOrBuilder getClientGetVipInfoOrBuilder() {
      return getClientGetVipInfo();
    }

    public static final int CLIENTGETVIPWEEK_FIELD_NUMBER = 1202;
    private com.kys.util.netty.proto.VipProto.ClientGetVipWeek clientGetVipWeek_;
    /**
     * <pre>
     ** 获取每周VIP礼包奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
     */
    public boolean hasClientGetVipWeek() {
      return clientGetVipWeek_ != null;
    }
    /**
     * <pre>
     ** 获取每周VIP礼包奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
     */
    public com.kys.util.netty.proto.VipProto.ClientGetVipWeek getClientGetVipWeek() {
      return clientGetVipWeek_ == null ? com.kys.util.netty.proto.VipProto.ClientGetVipWeek.getDefaultInstance() : clientGetVipWeek_;
    }
    /**
     * <pre>
     ** 获取每周VIP礼包奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
     */
    public com.kys.util.netty.proto.VipProto.ClientGetVipWeekOrBuilder getClientGetVipWeekOrBuilder() {
      return getClientGetVipWeek();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (userId_ != 0) {
        output.writeInt32(1, userId_);
      }
      if (methodId_ != 0) {
        output.writeInt32(2, methodId_);
      }
      if (clientLogin_ != null) {
        output.writeMessage(3, getClientLogin());
      }
      if (clientPlayerInfo_ != null) {
        output.writeMessage(4, getClientPlayerInfo());
      }
      if (clientReturnHallHeartBeat_ != null) {
        output.writeMessage(5, getClientReturnHallHeartBeat());
      }
      if (clientReturnGameHeartBeat_ != null) {
        output.writeMessage(6, getClientReturnGameHeartBeat());
      }
      if (clientGetUserInfo_ != null) {
        output.writeMessage(7, getClientGetUserInfo());
      }
      if (clientNewLogin_ != null) {
        output.writeMessage(8, getClientNewLogin());
      }
      if (clientQuickJoin_ != null) {
        output.writeMessage(100, getClientQuickJoin());
      }
      if (clientEnterRoom_ != null) {
        output.writeMessage(101, getClientEnterRoom());
      }
      if (clientDoCatch_ != null) {
        output.writeMessage(102, getClientDoCatch());
      }
      if (clientPlayCards_ != null) {
        output.writeMessage(103, getClientPlayCards());
      }
      if (clientRecoverGame_ != null) {
        output.writeMessage(104, getClientRecoverGame());
      }
      if (clientAutoPlay_ != null) {
        output.writeMessage(105, getClientAutoPlay());
      }
      if (clientLeaveRoom_ != null) {
        output.writeMessage(106, getClientLeaveRoom());
      }
      if (clientCancleJoin_ != null) {
        output.writeMessage(107, getClientCancleJoin());
      }
      if (clientQueryIndex_ != null) {
        output.writeMessage(108, getClientQueryIndex());
      }
      if (clientRetryReturnGame_ != null) {
        output.writeMessage(109, getClientRetryReturnGame());
      }
      if (clientGetRankList_ != null) {
        output.writeMessage(200, getClientGetRankList());
      }
      if (clientGetSignupRewardList_ != null) {
        output.writeMessage(201, getClientGetSignupRewardList());
      }
      if (clientGetHallInfo_ != null) {
        output.writeMessage(202, getClientGetHallInfo());
      }
      if (clientSignup_ != null) {
        output.writeMessage(203, getClientSignup());
      }
      if (clientDrawWinCup_ != null) {
        output.writeMessage(204, getClientDrawWinCup());
      }
      if (clientGetRoomConfig_ != null) {
        output.writeMessage(205, getClientGetRoomConfig());
      }
      if (clientRewardMessage_ != null) {
        output.writeMessage(206, getClientRewardMessage());
      }
      if (clientGetRoomCardConfig_ != null) {
        output.writeMessage(207, getClientGetRoomCardConfig());
      }
      if (clientCreateRoom_ != null) {
        output.writeMessage(208, getClientCreateRoom());
      }
      if (clientGetMonthCardDiamond_ != null) {
        output.writeMessage(209, getClientGetMonthCardDiamond());
      }
      if (clientGetLotteryCount_ != null) {
        output.writeMessage(210, getClientGetLotteryCount());
      }
      if (clientGetRoomInfo_ != null) {
        output.writeMessage(211, getClientGetRoomInfo());
      }
      if (clientSendTelCode_ != null) {
        output.writeMessage(212, getClientSendTelCode());
      }
      if (clientVerifyTelCode_ != null) {
        output.writeMessage(213, getClientVerifyTelCode());
      }
      if (clientQueryShareList_ != null) {
        output.writeMessage(214, getClientQueryShareList());
      }
      if (clientQueryShareDetail_ != null) {
        output.writeMessage(215, getClientQueryShareDetail());
      }
      if (clientGetTaskAward_ != null) {
        output.writeMessage(216, getClientGetTaskAward());
      }
      if (clientSharePackage_ != null) {
        output.writeMessage(217, getClientSharePackage());
      }
      if (clientGetAwardList_ != null) {
        output.writeMessage(218, getClientGetAwardList());
      }
      if (clientPlayerLogout_ != null) {
        output.writeMessage(219, getClientPlayerLogout());
      }
      if (clientCheckConnect_ != null) {
        output.writeMessage(220, getClientCheckConnect());
      }
      if (clientGetPFList_ != null) {
        output.writeMessage(221, getClientGetPFList());
      }
      if (clientChoosePF_ != null) {
        output.writeMessage(222, getClientChoosePF());
      }
      if (clientGetHistoryRank_ != null) {
        output.writeMessage(223, getClientGetHistoryRank());
      }
      if (clientH5Reward_ != null) {
        output.writeMessage(224, getClientH5Reward());
      }
      if (clientNewDrawWinCup_ != null) {
        output.writeMessage(225, getClientNewDrawWinCup());
      }
      if (clientGetNewHallInfo_ != null) {
        output.writeMessage(226, getClientGetNewHallInfo());
      }
      if (clientGetSkinInfo_ != null) {
        output.writeMessage(227, getClientGetSkinInfo());
      }
      if (clientEquipSkin_ != null) {
        output.writeMessage(228, getClientEquipSkin());
      }
      if (clientGetStoreData_ != null) {
        output.writeMessage(300, getClientGetStoreData());
      }
      if (clientConvertGoods_ != null) {
        output.writeMessage(301, getClientConvertGoods());
      }
      if (clientWXPayResultQuery_ != null) {
        output.writeMessage(302, getClientWXPayResultQuery());
      }
      if (clientBuyOrderGoods_ != null) {
        output.writeMessage(303, getClientBuyOrderGoods());
      }
      if (clientGetFirstCharge_ != null) {
        output.writeMessage(304, getClientGetFirstCharge());
      }
      if (clientGetDailyGift_ != null) {
        output.writeMessage(305, getClientGetDailyGift());
      }
      if (clientGetMonthCard_ != null) {
        output.writeMessage(306, getClientGetMonthCard());
      }
      if (clientGetResurgenceGift_ != null) {
        output.writeMessage(307, getClientGetResurgenceGift());
      }
      if (clientGetAnnounce_ != null) {
        output.writeMessage(500, getClientGetAnnounce());
      }
      if (clientGetMail_ != null) {
        output.writeMessage(600, getClientGetMail());
      }
      if (clientGetMailReward_ != null) {
        output.writeMessage(601, getClientGetMailReward());
      }
      if (clientDelMail_ != null) {
        output.writeMessage(602, getClientDelMail());
      }
      if (clientReadMail_ != null) {
        output.writeMessage(603, getClientReadMail());
      }
      if (clientDel2R_ != null) {
        output.writeMessage(604, getClientDel2R());
      }
      if (clientQueryDailyTask_ != null) {
        output.writeMessage(700, getClientQueryDailyTask());
      }
      if (clientGetDailyTaskAward_ != null) {
        output.writeMessage(701, getClientGetDailyTaskAward());
      }
      if (clientGetNoviceReward_ != null) {
        output.writeMessage(702, getClientGetNoviceReward());
      }
      if (clientQueryNoviceTask_ != null) {
        output.writeMessage(703, getClientQueryNoviceTask());
      }
      if (clientGetDTAward_ != null) {
        output.writeMessage(704, getClientGetDTAward());
      }
      if (clientGetReceiveAddr_ != null) {
        output.writeMessage(800, getClientGetReceiveAddr());
      }
      if (clientAlterReceiveAddr_ != null) {
        output.writeMessage(801, getClientAlterReceiveAddr());
      }
      if (clientSnatchList_ != null) {
        output.writeMessage(802, getClientSnatchList());
      }
      if (clientSnatchItemDetail_ != null) {
        output.writeMessage(803, getClientSnatchItemDetail());
      }
      if (clientSnatchBet_ != null) {
        output.writeMessage(804, getClientSnatchBet());
      }
      if (clientSnatchAwardList_ != null) {
        output.writeMessage(805, getClientSnatchAwardList());
      }
      if (clientOwnSnatchRecord_ != null) {
        output.writeMessage(806, getClientOwnSnatchRecord());
      }
      if (clientSnatchItemHistory_ != null) {
        output.writeMessage(807, getClientSnatchItemHistory());
      }
      if (clientSnatchHistoryDetail_ != null) {
        output.writeMessage(808, getClientSnatchHistoryDetail());
      }
      if (clientSnatchGetAward_ != null) {
        output.writeMessage(809, getClientSnatchGetAward());
      }
      if (clientEnterDG_ != null) {
        output.writeMessage(900, getClientEnterDG());
      }
      if (clientDGLottery_ != null) {
        output.writeMessage(901, getClientDGLottery());
      }
      if (clientResetLottery_ != null) {
        output.writeMessage(902, getClientResetLottery());
      }
      if (clientExitDG_ != null) {
        output.writeMessage(903, getClientExitDG());
      }
      if (clientOpenDG_ != null) {
        output.writeMessage(904, getClientOpenDG());
      }
      if (clientOpenDD_ != null) {
        output.writeMessage(905, getClientOpenDD());
      }
      if (clientDDLottery_ != null) {
        output.writeMessage(906, getClientDDLottery());
      }
      if (clientExitDD_ != null) {
        output.writeMessage(907, getClientExitDD());
      }
      if (clientQueryProp_ != null) {
        output.writeMessage(1001, getClientQueryProp());
      }
      if (clientUseProp_ != null) {
        output.writeMessage(1002, getClientUseProp());
      }
      if (clientQueryPropCount_ != null) {
        output.writeMessage(1003, getClientQueryPropCount());
      }
      if (clientMonthSignInfo_ != null) {
        output.writeMessage(1101, getClientMonthSignInfo());
      }
      if (clientMonthSign_ != null) {
        output.writeMessage(1102, getClientMonthSign());
      }
      if (clientGetCritReward_ != null) {
        output.writeMessage(1103, getClientGetCritReward());
      }
      if (clientLTLottery_ != null) {
        output.writeMessage(1104, getClientLTLottery());
      }
      if (clientGetTSReward_ != null) {
        output.writeMessage(1105, getClientGetTSReward());
      }
      if (clientGetLuckInfo_ != null) {
        output.writeMessage(1106, getClientGetLuckInfo());
      }
      if (clientGetVipInfo_ != null) {
        output.writeMessage(1201, getClientGetVipInfo());
      }
      if (clientGetVipWeek_ != null) {
        output.writeMessage(1202, getClientGetVipWeek());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (userId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, userId_);
      }
      if (methodId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, methodId_);
      }
      if (clientLogin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getClientLogin());
      }
      if (clientPlayerInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getClientPlayerInfo());
      }
      if (clientReturnHallHeartBeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getClientReturnHallHeartBeat());
      }
      if (clientReturnGameHeartBeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getClientReturnGameHeartBeat());
      }
      if (clientGetUserInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getClientGetUserInfo());
      }
      if (clientNewLogin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getClientNewLogin());
      }
      if (clientQuickJoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getClientQuickJoin());
      }
      if (clientEnterRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, getClientEnterRoom());
      }
      if (clientDoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, getClientDoCatch());
      }
      if (clientPlayCards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, getClientPlayCards());
      }
      if (clientRecoverGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, getClientRecoverGame());
      }
      if (clientAutoPlay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, getClientAutoPlay());
      }
      if (clientLeaveRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, getClientLeaveRoom());
      }
      if (clientCancleJoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(107, getClientCancleJoin());
      }
      if (clientQueryIndex_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(108, getClientQueryIndex());
      }
      if (clientRetryReturnGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(109, getClientRetryReturnGame());
      }
      if (clientGetRankList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(200, getClientGetRankList());
      }
      if (clientGetSignupRewardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(201, getClientGetSignupRewardList());
      }
      if (clientGetHallInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(202, getClientGetHallInfo());
      }
      if (clientSignup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(203, getClientSignup());
      }
      if (clientDrawWinCup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(204, getClientDrawWinCup());
      }
      if (clientGetRoomConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(205, getClientGetRoomConfig());
      }
      if (clientRewardMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(206, getClientRewardMessage());
      }
      if (clientGetRoomCardConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(207, getClientGetRoomCardConfig());
      }
      if (clientCreateRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(208, getClientCreateRoom());
      }
      if (clientGetMonthCardDiamond_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(209, getClientGetMonthCardDiamond());
      }
      if (clientGetLotteryCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(210, getClientGetLotteryCount());
      }
      if (clientGetRoomInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(211, getClientGetRoomInfo());
      }
      if (clientSendTelCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(212, getClientSendTelCode());
      }
      if (clientVerifyTelCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(213, getClientVerifyTelCode());
      }
      if (clientQueryShareList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(214, getClientQueryShareList());
      }
      if (clientQueryShareDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(215, getClientQueryShareDetail());
      }
      if (clientGetTaskAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(216, getClientGetTaskAward());
      }
      if (clientSharePackage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(217, getClientSharePackage());
      }
      if (clientGetAwardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(218, getClientGetAwardList());
      }
      if (clientPlayerLogout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(219, getClientPlayerLogout());
      }
      if (clientCheckConnect_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(220, getClientCheckConnect());
      }
      if (clientGetPFList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(221, getClientGetPFList());
      }
      if (clientChoosePF_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(222, getClientChoosePF());
      }
      if (clientGetHistoryRank_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(223, getClientGetHistoryRank());
      }
      if (clientH5Reward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(224, getClientH5Reward());
      }
      if (clientNewDrawWinCup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(225, getClientNewDrawWinCup());
      }
      if (clientGetNewHallInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(226, getClientGetNewHallInfo());
      }
      if (clientGetSkinInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(227, getClientGetSkinInfo());
      }
      if (clientEquipSkin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(228, getClientEquipSkin());
      }
      if (clientGetStoreData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(300, getClientGetStoreData());
      }
      if (clientConvertGoods_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(301, getClientConvertGoods());
      }
      if (clientWXPayResultQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(302, getClientWXPayResultQuery());
      }
      if (clientBuyOrderGoods_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(303, getClientBuyOrderGoods());
      }
      if (clientGetFirstCharge_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(304, getClientGetFirstCharge());
      }
      if (clientGetDailyGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(305, getClientGetDailyGift());
      }
      if (clientGetMonthCard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(306, getClientGetMonthCard());
      }
      if (clientGetResurgenceGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(307, getClientGetResurgenceGift());
      }
      if (clientGetAnnounce_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(500, getClientGetAnnounce());
      }
      if (clientGetMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(600, getClientGetMail());
      }
      if (clientGetMailReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(601, getClientGetMailReward());
      }
      if (clientDelMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(602, getClientDelMail());
      }
      if (clientReadMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(603, getClientReadMail());
      }
      if (clientDel2R_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(604, getClientDel2R());
      }
      if (clientQueryDailyTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(700, getClientQueryDailyTask());
      }
      if (clientGetDailyTaskAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(701, getClientGetDailyTaskAward());
      }
      if (clientGetNoviceReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(702, getClientGetNoviceReward());
      }
      if (clientQueryNoviceTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(703, getClientQueryNoviceTask());
      }
      if (clientGetDTAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(704, getClientGetDTAward());
      }
      if (clientGetReceiveAddr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(800, getClientGetReceiveAddr());
      }
      if (clientAlterReceiveAddr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(801, getClientAlterReceiveAddr());
      }
      if (clientSnatchList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(802, getClientSnatchList());
      }
      if (clientSnatchItemDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(803, getClientSnatchItemDetail());
      }
      if (clientSnatchBet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(804, getClientSnatchBet());
      }
      if (clientSnatchAwardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(805, getClientSnatchAwardList());
      }
      if (clientOwnSnatchRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(806, getClientOwnSnatchRecord());
      }
      if (clientSnatchItemHistory_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(807, getClientSnatchItemHistory());
      }
      if (clientSnatchHistoryDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(808, getClientSnatchHistoryDetail());
      }
      if (clientSnatchGetAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(809, getClientSnatchGetAward());
      }
      if (clientEnterDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(900, getClientEnterDG());
      }
      if (clientDGLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(901, getClientDGLottery());
      }
      if (clientResetLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(902, getClientResetLottery());
      }
      if (clientExitDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(903, getClientExitDG());
      }
      if (clientOpenDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(904, getClientOpenDG());
      }
      if (clientOpenDD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(905, getClientOpenDD());
      }
      if (clientDDLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(906, getClientDDLottery());
      }
      if (clientExitDD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(907, getClientExitDD());
      }
      if (clientQueryProp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1001, getClientQueryProp());
      }
      if (clientUseProp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1002, getClientUseProp());
      }
      if (clientQueryPropCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1003, getClientQueryPropCount());
      }
      if (clientMonthSignInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1101, getClientMonthSignInfo());
      }
      if (clientMonthSign_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1102, getClientMonthSign());
      }
      if (clientGetCritReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1103, getClientGetCritReward());
      }
      if (clientLTLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1104, getClientLTLottery());
      }
      if (clientGetTSReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1105, getClientGetTSReward());
      }
      if (clientGetLuckInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1106, getClientGetLuckInfo());
      }
      if (clientGetVipInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1201, getClientGetVipInfo());
      }
      if (clientGetVipWeek_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1202, getClientGetVipWeek());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.kys.util.netty.proto.ProtoMsg.ClientRequest)) {
        return super.equals(obj);
      }
      com.kys.util.netty.proto.ProtoMsg.ClientRequest other = (com.kys.util.netty.proto.ProtoMsg.ClientRequest) obj;

      boolean result = true;
      result = result && (getUserId()
          == other.getUserId());
      result = result && (getMethodId()
          == other.getMethodId());
      result = result && (hasClientLogin() == other.hasClientLogin());
      if (hasClientLogin()) {
        result = result && getClientLogin()
            .equals(other.getClientLogin());
      }
      result = result && (hasClientPlayerInfo() == other.hasClientPlayerInfo());
      if (hasClientPlayerInfo()) {
        result = result && getClientPlayerInfo()
            .equals(other.getClientPlayerInfo());
      }
      result = result && (hasClientReturnHallHeartBeat() == other.hasClientReturnHallHeartBeat());
      if (hasClientReturnHallHeartBeat()) {
        result = result && getClientReturnHallHeartBeat()
            .equals(other.getClientReturnHallHeartBeat());
      }
      result = result && (hasClientReturnGameHeartBeat() == other.hasClientReturnGameHeartBeat());
      if (hasClientReturnGameHeartBeat()) {
        result = result && getClientReturnGameHeartBeat()
            .equals(other.getClientReturnGameHeartBeat());
      }
      result = result && (hasClientGetUserInfo() == other.hasClientGetUserInfo());
      if (hasClientGetUserInfo()) {
        result = result && getClientGetUserInfo()
            .equals(other.getClientGetUserInfo());
      }
      result = result && (hasClientNewLogin() == other.hasClientNewLogin());
      if (hasClientNewLogin()) {
        result = result && getClientNewLogin()
            .equals(other.getClientNewLogin());
      }
      result = result && (hasClientQuickJoin() == other.hasClientQuickJoin());
      if (hasClientQuickJoin()) {
        result = result && getClientQuickJoin()
            .equals(other.getClientQuickJoin());
      }
      result = result && (hasClientEnterRoom() == other.hasClientEnterRoom());
      if (hasClientEnterRoom()) {
        result = result && getClientEnterRoom()
            .equals(other.getClientEnterRoom());
      }
      result = result && (hasClientDoCatch() == other.hasClientDoCatch());
      if (hasClientDoCatch()) {
        result = result && getClientDoCatch()
            .equals(other.getClientDoCatch());
      }
      result = result && (hasClientPlayCards() == other.hasClientPlayCards());
      if (hasClientPlayCards()) {
        result = result && getClientPlayCards()
            .equals(other.getClientPlayCards());
      }
      result = result && (hasClientRecoverGame() == other.hasClientRecoverGame());
      if (hasClientRecoverGame()) {
        result = result && getClientRecoverGame()
            .equals(other.getClientRecoverGame());
      }
      result = result && (hasClientAutoPlay() == other.hasClientAutoPlay());
      if (hasClientAutoPlay()) {
        result = result && getClientAutoPlay()
            .equals(other.getClientAutoPlay());
      }
      result = result && (hasClientLeaveRoom() == other.hasClientLeaveRoom());
      if (hasClientLeaveRoom()) {
        result = result && getClientLeaveRoom()
            .equals(other.getClientLeaveRoom());
      }
      result = result && (hasClientCancleJoin() == other.hasClientCancleJoin());
      if (hasClientCancleJoin()) {
        result = result && getClientCancleJoin()
            .equals(other.getClientCancleJoin());
      }
      result = result && (hasClientQueryIndex() == other.hasClientQueryIndex());
      if (hasClientQueryIndex()) {
        result = result && getClientQueryIndex()
            .equals(other.getClientQueryIndex());
      }
      result = result && (hasClientRetryReturnGame() == other.hasClientRetryReturnGame());
      if (hasClientRetryReturnGame()) {
        result = result && getClientRetryReturnGame()
            .equals(other.getClientRetryReturnGame());
      }
      result = result && (hasClientGetRankList() == other.hasClientGetRankList());
      if (hasClientGetRankList()) {
        result = result && getClientGetRankList()
            .equals(other.getClientGetRankList());
      }
      result = result && (hasClientGetSignupRewardList() == other.hasClientGetSignupRewardList());
      if (hasClientGetSignupRewardList()) {
        result = result && getClientGetSignupRewardList()
            .equals(other.getClientGetSignupRewardList());
      }
      result = result && (hasClientGetHallInfo() == other.hasClientGetHallInfo());
      if (hasClientGetHallInfo()) {
        result = result && getClientGetHallInfo()
            .equals(other.getClientGetHallInfo());
      }
      result = result && (hasClientSignup() == other.hasClientSignup());
      if (hasClientSignup()) {
        result = result && getClientSignup()
            .equals(other.getClientSignup());
      }
      result = result && (hasClientDrawWinCup() == other.hasClientDrawWinCup());
      if (hasClientDrawWinCup()) {
        result = result && getClientDrawWinCup()
            .equals(other.getClientDrawWinCup());
      }
      result = result && (hasClientGetRoomConfig() == other.hasClientGetRoomConfig());
      if (hasClientGetRoomConfig()) {
        result = result && getClientGetRoomConfig()
            .equals(other.getClientGetRoomConfig());
      }
      result = result && (hasClientRewardMessage() == other.hasClientRewardMessage());
      if (hasClientRewardMessage()) {
        result = result && getClientRewardMessage()
            .equals(other.getClientRewardMessage());
      }
      result = result && (hasClientGetRoomCardConfig() == other.hasClientGetRoomCardConfig());
      if (hasClientGetRoomCardConfig()) {
        result = result && getClientGetRoomCardConfig()
            .equals(other.getClientGetRoomCardConfig());
      }
      result = result && (hasClientCreateRoom() == other.hasClientCreateRoom());
      if (hasClientCreateRoom()) {
        result = result && getClientCreateRoom()
            .equals(other.getClientCreateRoom());
      }
      result = result && (hasClientGetMonthCardDiamond() == other.hasClientGetMonthCardDiamond());
      if (hasClientGetMonthCardDiamond()) {
        result = result && getClientGetMonthCardDiamond()
            .equals(other.getClientGetMonthCardDiamond());
      }
      result = result && (hasClientGetLotteryCount() == other.hasClientGetLotteryCount());
      if (hasClientGetLotteryCount()) {
        result = result && getClientGetLotteryCount()
            .equals(other.getClientGetLotteryCount());
      }
      result = result && (hasClientGetRoomInfo() == other.hasClientGetRoomInfo());
      if (hasClientGetRoomInfo()) {
        result = result && getClientGetRoomInfo()
            .equals(other.getClientGetRoomInfo());
      }
      result = result && (hasClientSendTelCode() == other.hasClientSendTelCode());
      if (hasClientSendTelCode()) {
        result = result && getClientSendTelCode()
            .equals(other.getClientSendTelCode());
      }
      result = result && (hasClientVerifyTelCode() == other.hasClientVerifyTelCode());
      if (hasClientVerifyTelCode()) {
        result = result && getClientVerifyTelCode()
            .equals(other.getClientVerifyTelCode());
      }
      result = result && (hasClientQueryShareList() == other.hasClientQueryShareList());
      if (hasClientQueryShareList()) {
        result = result && getClientQueryShareList()
            .equals(other.getClientQueryShareList());
      }
      result = result && (hasClientQueryShareDetail() == other.hasClientQueryShareDetail());
      if (hasClientQueryShareDetail()) {
        result = result && getClientQueryShareDetail()
            .equals(other.getClientQueryShareDetail());
      }
      result = result && (hasClientGetTaskAward() == other.hasClientGetTaskAward());
      if (hasClientGetTaskAward()) {
        result = result && getClientGetTaskAward()
            .equals(other.getClientGetTaskAward());
      }
      result = result && (hasClientSharePackage() == other.hasClientSharePackage());
      if (hasClientSharePackage()) {
        result = result && getClientSharePackage()
            .equals(other.getClientSharePackage());
      }
      result = result && (hasClientGetAwardList() == other.hasClientGetAwardList());
      if (hasClientGetAwardList()) {
        result = result && getClientGetAwardList()
            .equals(other.getClientGetAwardList());
      }
      result = result && (hasClientPlayerLogout() == other.hasClientPlayerLogout());
      if (hasClientPlayerLogout()) {
        result = result && getClientPlayerLogout()
            .equals(other.getClientPlayerLogout());
      }
      result = result && (hasClientCheckConnect() == other.hasClientCheckConnect());
      if (hasClientCheckConnect()) {
        result = result && getClientCheckConnect()
            .equals(other.getClientCheckConnect());
      }
      result = result && (hasClientGetPFList() == other.hasClientGetPFList());
      if (hasClientGetPFList()) {
        result = result && getClientGetPFList()
            .equals(other.getClientGetPFList());
      }
      result = result && (hasClientChoosePF() == other.hasClientChoosePF());
      if (hasClientChoosePF()) {
        result = result && getClientChoosePF()
            .equals(other.getClientChoosePF());
      }
      result = result && (hasClientGetHistoryRank() == other.hasClientGetHistoryRank());
      if (hasClientGetHistoryRank()) {
        result = result && getClientGetHistoryRank()
            .equals(other.getClientGetHistoryRank());
      }
      result = result && (hasClientH5Reward() == other.hasClientH5Reward());
      if (hasClientH5Reward()) {
        result = result && getClientH5Reward()
            .equals(other.getClientH5Reward());
      }
      result = result && (hasClientNewDrawWinCup() == other.hasClientNewDrawWinCup());
      if (hasClientNewDrawWinCup()) {
        result = result && getClientNewDrawWinCup()
            .equals(other.getClientNewDrawWinCup());
      }
      result = result && (hasClientGetNewHallInfo() == other.hasClientGetNewHallInfo());
      if (hasClientGetNewHallInfo()) {
        result = result && getClientGetNewHallInfo()
            .equals(other.getClientGetNewHallInfo());
      }
      result = result && (hasClientGetSkinInfo() == other.hasClientGetSkinInfo());
      if (hasClientGetSkinInfo()) {
        result = result && getClientGetSkinInfo()
            .equals(other.getClientGetSkinInfo());
      }
      result = result && (hasClientEquipSkin() == other.hasClientEquipSkin());
      if (hasClientEquipSkin()) {
        result = result && getClientEquipSkin()
            .equals(other.getClientEquipSkin());
      }
      result = result && (hasClientGetStoreData() == other.hasClientGetStoreData());
      if (hasClientGetStoreData()) {
        result = result && getClientGetStoreData()
            .equals(other.getClientGetStoreData());
      }
      result = result && (hasClientConvertGoods() == other.hasClientConvertGoods());
      if (hasClientConvertGoods()) {
        result = result && getClientConvertGoods()
            .equals(other.getClientConvertGoods());
      }
      result = result && (hasClientWXPayResultQuery() == other.hasClientWXPayResultQuery());
      if (hasClientWXPayResultQuery()) {
        result = result && getClientWXPayResultQuery()
            .equals(other.getClientWXPayResultQuery());
      }
      result = result && (hasClientBuyOrderGoods() == other.hasClientBuyOrderGoods());
      if (hasClientBuyOrderGoods()) {
        result = result && getClientBuyOrderGoods()
            .equals(other.getClientBuyOrderGoods());
      }
      result = result && (hasClientGetFirstCharge() == other.hasClientGetFirstCharge());
      if (hasClientGetFirstCharge()) {
        result = result && getClientGetFirstCharge()
            .equals(other.getClientGetFirstCharge());
      }
      result = result && (hasClientGetDailyGift() == other.hasClientGetDailyGift());
      if (hasClientGetDailyGift()) {
        result = result && getClientGetDailyGift()
            .equals(other.getClientGetDailyGift());
      }
      result = result && (hasClientGetMonthCard() == other.hasClientGetMonthCard());
      if (hasClientGetMonthCard()) {
        result = result && getClientGetMonthCard()
            .equals(other.getClientGetMonthCard());
      }
      result = result && (hasClientGetResurgenceGift() == other.hasClientGetResurgenceGift());
      if (hasClientGetResurgenceGift()) {
        result = result && getClientGetResurgenceGift()
            .equals(other.getClientGetResurgenceGift());
      }
      result = result && (hasClientGetAnnounce() == other.hasClientGetAnnounce());
      if (hasClientGetAnnounce()) {
        result = result && getClientGetAnnounce()
            .equals(other.getClientGetAnnounce());
      }
      result = result && (hasClientGetMail() == other.hasClientGetMail());
      if (hasClientGetMail()) {
        result = result && getClientGetMail()
            .equals(other.getClientGetMail());
      }
      result = result && (hasClientGetMailReward() == other.hasClientGetMailReward());
      if (hasClientGetMailReward()) {
        result = result && getClientGetMailReward()
            .equals(other.getClientGetMailReward());
      }
      result = result && (hasClientDelMail() == other.hasClientDelMail());
      if (hasClientDelMail()) {
        result = result && getClientDelMail()
            .equals(other.getClientDelMail());
      }
      result = result && (hasClientReadMail() == other.hasClientReadMail());
      if (hasClientReadMail()) {
        result = result && getClientReadMail()
            .equals(other.getClientReadMail());
      }
      result = result && (hasClientDel2R() == other.hasClientDel2R());
      if (hasClientDel2R()) {
        result = result && getClientDel2R()
            .equals(other.getClientDel2R());
      }
      result = result && (hasClientQueryDailyTask() == other.hasClientQueryDailyTask());
      if (hasClientQueryDailyTask()) {
        result = result && getClientQueryDailyTask()
            .equals(other.getClientQueryDailyTask());
      }
      result = result && (hasClientGetDailyTaskAward() == other.hasClientGetDailyTaskAward());
      if (hasClientGetDailyTaskAward()) {
        result = result && getClientGetDailyTaskAward()
            .equals(other.getClientGetDailyTaskAward());
      }
      result = result && (hasClientGetNoviceReward() == other.hasClientGetNoviceReward());
      if (hasClientGetNoviceReward()) {
        result = result && getClientGetNoviceReward()
            .equals(other.getClientGetNoviceReward());
      }
      result = result && (hasClientQueryNoviceTask() == other.hasClientQueryNoviceTask());
      if (hasClientQueryNoviceTask()) {
        result = result && getClientQueryNoviceTask()
            .equals(other.getClientQueryNoviceTask());
      }
      result = result && (hasClientGetDTAward() == other.hasClientGetDTAward());
      if (hasClientGetDTAward()) {
        result = result && getClientGetDTAward()
            .equals(other.getClientGetDTAward());
      }
      result = result && (hasClientGetReceiveAddr() == other.hasClientGetReceiveAddr());
      if (hasClientGetReceiveAddr()) {
        result = result && getClientGetReceiveAddr()
            .equals(other.getClientGetReceiveAddr());
      }
      result = result && (hasClientAlterReceiveAddr() == other.hasClientAlterReceiveAddr());
      if (hasClientAlterReceiveAddr()) {
        result = result && getClientAlterReceiveAddr()
            .equals(other.getClientAlterReceiveAddr());
      }
      result = result && (hasClientSnatchList() == other.hasClientSnatchList());
      if (hasClientSnatchList()) {
        result = result && getClientSnatchList()
            .equals(other.getClientSnatchList());
      }
      result = result && (hasClientSnatchItemDetail() == other.hasClientSnatchItemDetail());
      if (hasClientSnatchItemDetail()) {
        result = result && getClientSnatchItemDetail()
            .equals(other.getClientSnatchItemDetail());
      }
      result = result && (hasClientSnatchBet() == other.hasClientSnatchBet());
      if (hasClientSnatchBet()) {
        result = result && getClientSnatchBet()
            .equals(other.getClientSnatchBet());
      }
      result = result && (hasClientSnatchAwardList() == other.hasClientSnatchAwardList());
      if (hasClientSnatchAwardList()) {
        result = result && getClientSnatchAwardList()
            .equals(other.getClientSnatchAwardList());
      }
      result = result && (hasClientOwnSnatchRecord() == other.hasClientOwnSnatchRecord());
      if (hasClientOwnSnatchRecord()) {
        result = result && getClientOwnSnatchRecord()
            .equals(other.getClientOwnSnatchRecord());
      }
      result = result && (hasClientSnatchItemHistory() == other.hasClientSnatchItemHistory());
      if (hasClientSnatchItemHistory()) {
        result = result && getClientSnatchItemHistory()
            .equals(other.getClientSnatchItemHistory());
      }
      result = result && (hasClientSnatchHistoryDetail() == other.hasClientSnatchHistoryDetail());
      if (hasClientSnatchHistoryDetail()) {
        result = result && getClientSnatchHistoryDetail()
            .equals(other.getClientSnatchHistoryDetail());
      }
      result = result && (hasClientSnatchGetAward() == other.hasClientSnatchGetAward());
      if (hasClientSnatchGetAward()) {
        result = result && getClientSnatchGetAward()
            .equals(other.getClientSnatchGetAward());
      }
      result = result && (hasClientEnterDG() == other.hasClientEnterDG());
      if (hasClientEnterDG()) {
        result = result && getClientEnterDG()
            .equals(other.getClientEnterDG());
      }
      result = result && (hasClientDGLottery() == other.hasClientDGLottery());
      if (hasClientDGLottery()) {
        result = result && getClientDGLottery()
            .equals(other.getClientDGLottery());
      }
      result = result && (hasClientResetLottery() == other.hasClientResetLottery());
      if (hasClientResetLottery()) {
        result = result && getClientResetLottery()
            .equals(other.getClientResetLottery());
      }
      result = result && (hasClientExitDG() == other.hasClientExitDG());
      if (hasClientExitDG()) {
        result = result && getClientExitDG()
            .equals(other.getClientExitDG());
      }
      result = result && (hasClientOpenDG() == other.hasClientOpenDG());
      if (hasClientOpenDG()) {
        result = result && getClientOpenDG()
            .equals(other.getClientOpenDG());
      }
      result = result && (hasClientOpenDD() == other.hasClientOpenDD());
      if (hasClientOpenDD()) {
        result = result && getClientOpenDD()
            .equals(other.getClientOpenDD());
      }
      result = result && (hasClientDDLottery() == other.hasClientDDLottery());
      if (hasClientDDLottery()) {
        result = result && getClientDDLottery()
            .equals(other.getClientDDLottery());
      }
      result = result && (hasClientExitDD() == other.hasClientExitDD());
      if (hasClientExitDD()) {
        result = result && getClientExitDD()
            .equals(other.getClientExitDD());
      }
      result = result && (hasClientQueryProp() == other.hasClientQueryProp());
      if (hasClientQueryProp()) {
        result = result && getClientQueryProp()
            .equals(other.getClientQueryProp());
      }
      result = result && (hasClientUseProp() == other.hasClientUseProp());
      if (hasClientUseProp()) {
        result = result && getClientUseProp()
            .equals(other.getClientUseProp());
      }
      result = result && (hasClientQueryPropCount() == other.hasClientQueryPropCount());
      if (hasClientQueryPropCount()) {
        result = result && getClientQueryPropCount()
            .equals(other.getClientQueryPropCount());
      }
      result = result && (hasClientMonthSignInfo() == other.hasClientMonthSignInfo());
      if (hasClientMonthSignInfo()) {
        result = result && getClientMonthSignInfo()
            .equals(other.getClientMonthSignInfo());
      }
      result = result && (hasClientMonthSign() == other.hasClientMonthSign());
      if (hasClientMonthSign()) {
        result = result && getClientMonthSign()
            .equals(other.getClientMonthSign());
      }
      result = result && (hasClientGetCritReward() == other.hasClientGetCritReward());
      if (hasClientGetCritReward()) {
        result = result && getClientGetCritReward()
            .equals(other.getClientGetCritReward());
      }
      result = result && (hasClientLTLottery() == other.hasClientLTLottery());
      if (hasClientLTLottery()) {
        result = result && getClientLTLottery()
            .equals(other.getClientLTLottery());
      }
      result = result && (hasClientGetTSReward() == other.hasClientGetTSReward());
      if (hasClientGetTSReward()) {
        result = result && getClientGetTSReward()
            .equals(other.getClientGetTSReward());
      }
      result = result && (hasClientGetLuckInfo() == other.hasClientGetLuckInfo());
      if (hasClientGetLuckInfo()) {
        result = result && getClientGetLuckInfo()
            .equals(other.getClientGetLuckInfo());
      }
      result = result && (hasClientGetVipInfo() == other.hasClientGetVipInfo());
      if (hasClientGetVipInfo()) {
        result = result && getClientGetVipInfo()
            .equals(other.getClientGetVipInfo());
      }
      result = result && (hasClientGetVipWeek() == other.hasClientGetVipWeek());
      if (hasClientGetVipWeek()) {
        result = result && getClientGetVipWeek()
            .equals(other.getClientGetVipWeek());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId();
      hash = (37 * hash) + METHODID_FIELD_NUMBER;
      hash = (53 * hash) + getMethodId();
      if (hasClientLogin()) {
        hash = (37 * hash) + CLIENTLOGIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientLogin().hashCode();
      }
      if (hasClientPlayerInfo()) {
        hash = (37 * hash) + CLIENTPLAYERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientPlayerInfo().hashCode();
      }
      if (hasClientReturnHallHeartBeat()) {
        hash = (37 * hash) + CLIENTRETURNHALLHEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getClientReturnHallHeartBeat().hashCode();
      }
      if (hasClientReturnGameHeartBeat()) {
        hash = (37 * hash) + CLIENTRETURNGAMEHEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getClientReturnGameHeartBeat().hashCode();
      }
      if (hasClientGetUserInfo()) {
        hash = (37 * hash) + CLIENTGETUSERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetUserInfo().hashCode();
      }
      if (hasClientNewLogin()) {
        hash = (37 * hash) + CLIENTNEWLOGIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientNewLogin().hashCode();
      }
      if (hasClientQuickJoin()) {
        hash = (37 * hash) + CLIENTQUICKJOIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientQuickJoin().hashCode();
      }
      if (hasClientEnterRoom()) {
        hash = (37 * hash) + CLIENTENTERROOM_FIELD_NUMBER;
        hash = (53 * hash) + getClientEnterRoom().hashCode();
      }
      if (hasClientDoCatch()) {
        hash = (37 * hash) + CLIENTDOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getClientDoCatch().hashCode();
      }
      if (hasClientPlayCards()) {
        hash = (37 * hash) + CLIENTPLAYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getClientPlayCards().hashCode();
      }
      if (hasClientRecoverGame()) {
        hash = (37 * hash) + CLIENTRECOVERGAME_FIELD_NUMBER;
        hash = (53 * hash) + getClientRecoverGame().hashCode();
      }
      if (hasClientAutoPlay()) {
        hash = (37 * hash) + CLIENTAUTOPLAY_FIELD_NUMBER;
        hash = (53 * hash) + getClientAutoPlay().hashCode();
      }
      if (hasClientLeaveRoom()) {
        hash = (37 * hash) + CLIENTLEAVEROOM_FIELD_NUMBER;
        hash = (53 * hash) + getClientLeaveRoom().hashCode();
      }
      if (hasClientCancleJoin()) {
        hash = (37 * hash) + CLIENTCANCLEJOIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientCancleJoin().hashCode();
      }
      if (hasClientQueryIndex()) {
        hash = (37 * hash) + CLIENTQUERYINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryIndex().hashCode();
      }
      if (hasClientRetryReturnGame()) {
        hash = (37 * hash) + CLIENTRETRYRETURNGAME_FIELD_NUMBER;
        hash = (53 * hash) + getClientRetryReturnGame().hashCode();
      }
      if (hasClientGetRankList()) {
        hash = (37 * hash) + CLIENTGETRANKLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetRankList().hashCode();
      }
      if (hasClientGetSignupRewardList()) {
        hash = (37 * hash) + CLIENTGETSIGNUPREWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetSignupRewardList().hashCode();
      }
      if (hasClientGetHallInfo()) {
        hash = (37 * hash) + CLIENTGETHALLINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetHallInfo().hashCode();
      }
      if (hasClientSignup()) {
        hash = (37 * hash) + CLIENTSIGNUP_FIELD_NUMBER;
        hash = (53 * hash) + getClientSignup().hashCode();
      }
      if (hasClientDrawWinCup()) {
        hash = (37 * hash) + CLIENTDRAWWINCUP_FIELD_NUMBER;
        hash = (53 * hash) + getClientDrawWinCup().hashCode();
      }
      if (hasClientGetRoomConfig()) {
        hash = (37 * hash) + CLIENTGETROOMCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetRoomConfig().hashCode();
      }
      if (hasClientRewardMessage()) {
        hash = (37 * hash) + CLIENTREWARDMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientRewardMessage().hashCode();
      }
      if (hasClientGetRoomCardConfig()) {
        hash = (37 * hash) + CLIENTGETROOMCARDCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetRoomCardConfig().hashCode();
      }
      if (hasClientCreateRoom()) {
        hash = (37 * hash) + CLIENTCREATEROOM_FIELD_NUMBER;
        hash = (53 * hash) + getClientCreateRoom().hashCode();
      }
      if (hasClientGetMonthCardDiamond()) {
        hash = (37 * hash) + CLIENTGETMONTHCARDDIAMOND_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMonthCardDiamond().hashCode();
      }
      if (hasClientGetLotteryCount()) {
        hash = (37 * hash) + CLIENTGETLOTTERYCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetLotteryCount().hashCode();
      }
      if (hasClientGetRoomInfo()) {
        hash = (37 * hash) + CLIENTGETROOMINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetRoomInfo().hashCode();
      }
      if (hasClientSendTelCode()) {
        hash = (37 * hash) + CLIENTSENDTELCODE_FIELD_NUMBER;
        hash = (53 * hash) + getClientSendTelCode().hashCode();
      }
      if (hasClientVerifyTelCode()) {
        hash = (37 * hash) + CLIENTVERIFYTELCODE_FIELD_NUMBER;
        hash = (53 * hash) + getClientVerifyTelCode().hashCode();
      }
      if (hasClientQueryShareList()) {
        hash = (37 * hash) + CLIENTQUERYSHARELIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryShareList().hashCode();
      }
      if (hasClientQueryShareDetail()) {
        hash = (37 * hash) + CLIENTQUERYSHAREDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryShareDetail().hashCode();
      }
      if (hasClientGetTaskAward()) {
        hash = (37 * hash) + CLIENTGETTASKAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetTaskAward().hashCode();
      }
      if (hasClientSharePackage()) {
        hash = (37 * hash) + CLIENTSHAREPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientSharePackage().hashCode();
      }
      if (hasClientGetAwardList()) {
        hash = (37 * hash) + CLIENTGETAWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetAwardList().hashCode();
      }
      if (hasClientPlayerLogout()) {
        hash = (37 * hash) + CLIENTPLAYERLOGOUT_FIELD_NUMBER;
        hash = (53 * hash) + getClientPlayerLogout().hashCode();
      }
      if (hasClientCheckConnect()) {
        hash = (37 * hash) + CLIENTCHECKCONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getClientCheckConnect().hashCode();
      }
      if (hasClientGetPFList()) {
        hash = (37 * hash) + CLIENTGETPFLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetPFList().hashCode();
      }
      if (hasClientChoosePF()) {
        hash = (37 * hash) + CLIENTCHOOSEPF_FIELD_NUMBER;
        hash = (53 * hash) + getClientChoosePF().hashCode();
      }
      if (hasClientGetHistoryRank()) {
        hash = (37 * hash) + CLIENTGETHISTORYRANK_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetHistoryRank().hashCode();
      }
      if (hasClientH5Reward()) {
        hash = (37 * hash) + CLIENTH5REWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientH5Reward().hashCode();
      }
      if (hasClientNewDrawWinCup()) {
        hash = (37 * hash) + CLIENTNEWDRAWWINCUP_FIELD_NUMBER;
        hash = (53 * hash) + getClientNewDrawWinCup().hashCode();
      }
      if (hasClientGetNewHallInfo()) {
        hash = (37 * hash) + CLIENTGETNEWHALLINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetNewHallInfo().hashCode();
      }
      if (hasClientGetSkinInfo()) {
        hash = (37 * hash) + CLIENTGETSKININFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetSkinInfo().hashCode();
      }
      if (hasClientEquipSkin()) {
        hash = (37 * hash) + CLIENTEQUIPSKIN_FIELD_NUMBER;
        hash = (53 * hash) + getClientEquipSkin().hashCode();
      }
      if (hasClientGetStoreData()) {
        hash = (37 * hash) + CLIENTGETSTOREDATA_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetStoreData().hashCode();
      }
      if (hasClientConvertGoods()) {
        hash = (37 * hash) + CLIENTCONVERTGOODS_FIELD_NUMBER;
        hash = (53 * hash) + getClientConvertGoods().hashCode();
      }
      if (hasClientWXPayResultQuery()) {
        hash = (37 * hash) + CLIENTWXPAYRESULTQUERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientWXPayResultQuery().hashCode();
      }
      if (hasClientBuyOrderGoods()) {
        hash = (37 * hash) + CLIENTBUYORDERGOODS_FIELD_NUMBER;
        hash = (53 * hash) + getClientBuyOrderGoods().hashCode();
      }
      if (hasClientGetFirstCharge()) {
        hash = (37 * hash) + CLIENTGETFIRSTCHARGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetFirstCharge().hashCode();
      }
      if (hasClientGetDailyGift()) {
        hash = (37 * hash) + CLIENTGETDAILYGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetDailyGift().hashCode();
      }
      if (hasClientGetMonthCard()) {
        hash = (37 * hash) + CLIENTGETMONTHCARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMonthCard().hashCode();
      }
      if (hasClientGetResurgenceGift()) {
        hash = (37 * hash) + CLIENTGETRESURGENCEGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetResurgenceGift().hashCode();
      }
      if (hasClientGetAnnounce()) {
        hash = (37 * hash) + CLIENTGETANNOUNCE_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetAnnounce().hashCode();
      }
      if (hasClientGetMail()) {
        hash = (37 * hash) + CLIENTGETMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMail().hashCode();
      }
      if (hasClientGetMailReward()) {
        hash = (37 * hash) + CLIENTGETMAILREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetMailReward().hashCode();
      }
      if (hasClientDelMail()) {
        hash = (37 * hash) + CLIENTDELMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientDelMail().hashCode();
      }
      if (hasClientReadMail()) {
        hash = (37 * hash) + CLIENTREADMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientReadMail().hashCode();
      }
      if (hasClientDel2R()) {
        hash = (37 * hash) + CLIENTDEL2R_FIELD_NUMBER;
        hash = (53 * hash) + getClientDel2R().hashCode();
      }
      if (hasClientQueryDailyTask()) {
        hash = (37 * hash) + CLIENTQUERYDAILYTASK_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryDailyTask().hashCode();
      }
      if (hasClientGetDailyTaskAward()) {
        hash = (37 * hash) + CLIENTGETDAILYTASKAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetDailyTaskAward().hashCode();
      }
      if (hasClientGetNoviceReward()) {
        hash = (37 * hash) + CLIENTGETNOVICEREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetNoviceReward().hashCode();
      }
      if (hasClientQueryNoviceTask()) {
        hash = (37 * hash) + CLIENTQUERYNOVICETASK_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryNoviceTask().hashCode();
      }
      if (hasClientGetDTAward()) {
        hash = (37 * hash) + CLIENTGETDTAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetDTAward().hashCode();
      }
      if (hasClientGetReceiveAddr()) {
        hash = (37 * hash) + CLIENTGETRECEIVEADDR_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetReceiveAddr().hashCode();
      }
      if (hasClientAlterReceiveAddr()) {
        hash = (37 * hash) + CLIENTALTERRECEIVEADDR_FIELD_NUMBER;
        hash = (53 * hash) + getClientAlterReceiveAddr().hashCode();
      }
      if (hasClientSnatchList()) {
        hash = (37 * hash) + CLIENTSNATCHLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchList().hashCode();
      }
      if (hasClientSnatchItemDetail()) {
        hash = (37 * hash) + CLIENTSNATCHITEMDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchItemDetail().hashCode();
      }
      if (hasClientSnatchBet()) {
        hash = (37 * hash) + CLIENTSNATCHBET_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchBet().hashCode();
      }
      if (hasClientSnatchAwardList()) {
        hash = (37 * hash) + CLIENTSNATCHAWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchAwardList().hashCode();
      }
      if (hasClientOwnSnatchRecord()) {
        hash = (37 * hash) + CLIENTOWNSNATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getClientOwnSnatchRecord().hashCode();
      }
      if (hasClientSnatchItemHistory()) {
        hash = (37 * hash) + CLIENTSNATCHITEMHISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchItemHistory().hashCode();
      }
      if (hasClientSnatchHistoryDetail()) {
        hash = (37 * hash) + CLIENTSNATCHHISTORYDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchHistoryDetail().hashCode();
      }
      if (hasClientSnatchGetAward()) {
        hash = (37 * hash) + CLIENTSNATCHGETAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientSnatchGetAward().hashCode();
      }
      if (hasClientEnterDG()) {
        hash = (37 * hash) + CLIENTENTERDG_FIELD_NUMBER;
        hash = (53 * hash) + getClientEnterDG().hashCode();
      }
      if (hasClientDGLottery()) {
        hash = (37 * hash) + CLIENTDGLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientDGLottery().hashCode();
      }
      if (hasClientResetLottery()) {
        hash = (37 * hash) + CLIENTRESETLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientResetLottery().hashCode();
      }
      if (hasClientExitDG()) {
        hash = (37 * hash) + CLIENTEXITDG_FIELD_NUMBER;
        hash = (53 * hash) + getClientExitDG().hashCode();
      }
      if (hasClientOpenDG()) {
        hash = (37 * hash) + CLIENTOPENDG_FIELD_NUMBER;
        hash = (53 * hash) + getClientOpenDG().hashCode();
      }
      if (hasClientOpenDD()) {
        hash = (37 * hash) + CLIENTOPENDD_FIELD_NUMBER;
        hash = (53 * hash) + getClientOpenDD().hashCode();
      }
      if (hasClientDDLottery()) {
        hash = (37 * hash) + CLIENTDDLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientDDLottery().hashCode();
      }
      if (hasClientExitDD()) {
        hash = (37 * hash) + CLIENTEXITDD_FIELD_NUMBER;
        hash = (53 * hash) + getClientExitDD().hashCode();
      }
      if (hasClientQueryProp()) {
        hash = (37 * hash) + CLIENTQUERYPROP_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryProp().hashCode();
      }
      if (hasClientUseProp()) {
        hash = (37 * hash) + CLIENTUSEPROP_FIELD_NUMBER;
        hash = (53 * hash) + getClientUseProp().hashCode();
      }
      if (hasClientQueryPropCount()) {
        hash = (37 * hash) + CLIENTQUERYPROPCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getClientQueryPropCount().hashCode();
      }
      if (hasClientMonthSignInfo()) {
        hash = (37 * hash) + CLIENTMONTHSIGNINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientMonthSignInfo().hashCode();
      }
      if (hasClientMonthSign()) {
        hash = (37 * hash) + CLIENTMONTHSIGN_FIELD_NUMBER;
        hash = (53 * hash) + getClientMonthSign().hashCode();
      }
      if (hasClientGetCritReward()) {
        hash = (37 * hash) + CLIENTGETCRITREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetCritReward().hashCode();
      }
      if (hasClientLTLottery()) {
        hash = (37 * hash) + CLIENTLTLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getClientLTLottery().hashCode();
      }
      if (hasClientGetTSReward()) {
        hash = (37 * hash) + CLIENTGETTSREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetTSReward().hashCode();
      }
      if (hasClientGetLuckInfo()) {
        hash = (37 * hash) + CLIENTGETLUCKINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetLuckInfo().hashCode();
      }
      if (hasClientGetVipInfo()) {
        hash = (37 * hash) + CLIENTGETVIPINFO_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetVipInfo().hashCode();
      }
      if (hasClientGetVipWeek()) {
        hash = (37 * hash) + CLIENTGETVIPWEEK_FIELD_NUMBER;
        hash = (53 * hash) + getClientGetVipWeek().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.kys.util.netty.proto.ProtoMsg.ClientRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 所有上行请求都是clientRequest，服务器根据methodId读取具体的message内容,当 
     * </pre>
     *
     * Protobuf type {@code com.kys.util.netty.proto.ClientRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.kys.util.netty.proto.ClientRequest)
        com.kys.util.netty.proto.ProtoMsg.ClientRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kys.util.netty.proto.ProtoMsg.ClientRequest.class, com.kys.util.netty.proto.ProtoMsg.ClientRequest.Builder.class);
      }

      // Construct using com.kys.util.netty.proto.ProtoMsg.ClientRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        userId_ = 0;

        methodId_ = 0;

        if (clientLoginBuilder_ == null) {
          clientLogin_ = null;
        } else {
          clientLogin_ = null;
          clientLoginBuilder_ = null;
        }
        if (clientPlayerInfoBuilder_ == null) {
          clientPlayerInfo_ = null;
        } else {
          clientPlayerInfo_ = null;
          clientPlayerInfoBuilder_ = null;
        }
        if (clientReturnHallHeartBeatBuilder_ == null) {
          clientReturnHallHeartBeat_ = null;
        } else {
          clientReturnHallHeartBeat_ = null;
          clientReturnHallHeartBeatBuilder_ = null;
        }
        if (clientReturnGameHeartBeatBuilder_ == null) {
          clientReturnGameHeartBeat_ = null;
        } else {
          clientReturnGameHeartBeat_ = null;
          clientReturnGameHeartBeatBuilder_ = null;
        }
        if (clientGetUserInfoBuilder_ == null) {
          clientGetUserInfo_ = null;
        } else {
          clientGetUserInfo_ = null;
          clientGetUserInfoBuilder_ = null;
        }
        if (clientNewLoginBuilder_ == null) {
          clientNewLogin_ = null;
        } else {
          clientNewLogin_ = null;
          clientNewLoginBuilder_ = null;
        }
        if (clientQuickJoinBuilder_ == null) {
          clientQuickJoin_ = null;
        } else {
          clientQuickJoin_ = null;
          clientQuickJoinBuilder_ = null;
        }
        if (clientEnterRoomBuilder_ == null) {
          clientEnterRoom_ = null;
        } else {
          clientEnterRoom_ = null;
          clientEnterRoomBuilder_ = null;
        }
        if (clientDoCatchBuilder_ == null) {
          clientDoCatch_ = null;
        } else {
          clientDoCatch_ = null;
          clientDoCatchBuilder_ = null;
        }
        if (clientPlayCardsBuilder_ == null) {
          clientPlayCards_ = null;
        } else {
          clientPlayCards_ = null;
          clientPlayCardsBuilder_ = null;
        }
        if (clientRecoverGameBuilder_ == null) {
          clientRecoverGame_ = null;
        } else {
          clientRecoverGame_ = null;
          clientRecoverGameBuilder_ = null;
        }
        if (clientAutoPlayBuilder_ == null) {
          clientAutoPlay_ = null;
        } else {
          clientAutoPlay_ = null;
          clientAutoPlayBuilder_ = null;
        }
        if (clientLeaveRoomBuilder_ == null) {
          clientLeaveRoom_ = null;
        } else {
          clientLeaveRoom_ = null;
          clientLeaveRoomBuilder_ = null;
        }
        if (clientCancleJoinBuilder_ == null) {
          clientCancleJoin_ = null;
        } else {
          clientCancleJoin_ = null;
          clientCancleJoinBuilder_ = null;
        }
        if (clientQueryIndexBuilder_ == null) {
          clientQueryIndex_ = null;
        } else {
          clientQueryIndex_ = null;
          clientQueryIndexBuilder_ = null;
        }
        if (clientRetryReturnGameBuilder_ == null) {
          clientRetryReturnGame_ = null;
        } else {
          clientRetryReturnGame_ = null;
          clientRetryReturnGameBuilder_ = null;
        }
        if (clientGetRankListBuilder_ == null) {
          clientGetRankList_ = null;
        } else {
          clientGetRankList_ = null;
          clientGetRankListBuilder_ = null;
        }
        if (clientGetSignupRewardListBuilder_ == null) {
          clientGetSignupRewardList_ = null;
        } else {
          clientGetSignupRewardList_ = null;
          clientGetSignupRewardListBuilder_ = null;
        }
        if (clientGetHallInfoBuilder_ == null) {
          clientGetHallInfo_ = null;
        } else {
          clientGetHallInfo_ = null;
          clientGetHallInfoBuilder_ = null;
        }
        if (clientSignupBuilder_ == null) {
          clientSignup_ = null;
        } else {
          clientSignup_ = null;
          clientSignupBuilder_ = null;
        }
        if (clientDrawWinCupBuilder_ == null) {
          clientDrawWinCup_ = null;
        } else {
          clientDrawWinCup_ = null;
          clientDrawWinCupBuilder_ = null;
        }
        if (clientGetRoomConfigBuilder_ == null) {
          clientGetRoomConfig_ = null;
        } else {
          clientGetRoomConfig_ = null;
          clientGetRoomConfigBuilder_ = null;
        }
        if (clientRewardMessageBuilder_ == null) {
          clientRewardMessage_ = null;
        } else {
          clientRewardMessage_ = null;
          clientRewardMessageBuilder_ = null;
        }
        if (clientGetRoomCardConfigBuilder_ == null) {
          clientGetRoomCardConfig_ = null;
        } else {
          clientGetRoomCardConfig_ = null;
          clientGetRoomCardConfigBuilder_ = null;
        }
        if (clientCreateRoomBuilder_ == null) {
          clientCreateRoom_ = null;
        } else {
          clientCreateRoom_ = null;
          clientCreateRoomBuilder_ = null;
        }
        if (clientGetMonthCardDiamondBuilder_ == null) {
          clientGetMonthCardDiamond_ = null;
        } else {
          clientGetMonthCardDiamond_ = null;
          clientGetMonthCardDiamondBuilder_ = null;
        }
        if (clientGetLotteryCountBuilder_ == null) {
          clientGetLotteryCount_ = null;
        } else {
          clientGetLotteryCount_ = null;
          clientGetLotteryCountBuilder_ = null;
        }
        if (clientGetRoomInfoBuilder_ == null) {
          clientGetRoomInfo_ = null;
        } else {
          clientGetRoomInfo_ = null;
          clientGetRoomInfoBuilder_ = null;
        }
        if (clientSendTelCodeBuilder_ == null) {
          clientSendTelCode_ = null;
        } else {
          clientSendTelCode_ = null;
          clientSendTelCodeBuilder_ = null;
        }
        if (clientVerifyTelCodeBuilder_ == null) {
          clientVerifyTelCode_ = null;
        } else {
          clientVerifyTelCode_ = null;
          clientVerifyTelCodeBuilder_ = null;
        }
        if (clientQueryShareListBuilder_ == null) {
          clientQueryShareList_ = null;
        } else {
          clientQueryShareList_ = null;
          clientQueryShareListBuilder_ = null;
        }
        if (clientQueryShareDetailBuilder_ == null) {
          clientQueryShareDetail_ = null;
        } else {
          clientQueryShareDetail_ = null;
          clientQueryShareDetailBuilder_ = null;
        }
        if (clientGetTaskAwardBuilder_ == null) {
          clientGetTaskAward_ = null;
        } else {
          clientGetTaskAward_ = null;
          clientGetTaskAwardBuilder_ = null;
        }
        if (clientSharePackageBuilder_ == null) {
          clientSharePackage_ = null;
        } else {
          clientSharePackage_ = null;
          clientSharePackageBuilder_ = null;
        }
        if (clientGetAwardListBuilder_ == null) {
          clientGetAwardList_ = null;
        } else {
          clientGetAwardList_ = null;
          clientGetAwardListBuilder_ = null;
        }
        if (clientPlayerLogoutBuilder_ == null) {
          clientPlayerLogout_ = null;
        } else {
          clientPlayerLogout_ = null;
          clientPlayerLogoutBuilder_ = null;
        }
        if (clientCheckConnectBuilder_ == null) {
          clientCheckConnect_ = null;
        } else {
          clientCheckConnect_ = null;
          clientCheckConnectBuilder_ = null;
        }
        if (clientGetPFListBuilder_ == null) {
          clientGetPFList_ = null;
        } else {
          clientGetPFList_ = null;
          clientGetPFListBuilder_ = null;
        }
        if (clientChoosePFBuilder_ == null) {
          clientChoosePF_ = null;
        } else {
          clientChoosePF_ = null;
          clientChoosePFBuilder_ = null;
        }
        if (clientGetHistoryRankBuilder_ == null) {
          clientGetHistoryRank_ = null;
        } else {
          clientGetHistoryRank_ = null;
          clientGetHistoryRankBuilder_ = null;
        }
        if (clientH5RewardBuilder_ == null) {
          clientH5Reward_ = null;
        } else {
          clientH5Reward_ = null;
          clientH5RewardBuilder_ = null;
        }
        if (clientNewDrawWinCupBuilder_ == null) {
          clientNewDrawWinCup_ = null;
        } else {
          clientNewDrawWinCup_ = null;
          clientNewDrawWinCupBuilder_ = null;
        }
        if (clientGetNewHallInfoBuilder_ == null) {
          clientGetNewHallInfo_ = null;
        } else {
          clientGetNewHallInfo_ = null;
          clientGetNewHallInfoBuilder_ = null;
        }
        if (clientGetSkinInfoBuilder_ == null) {
          clientGetSkinInfo_ = null;
        } else {
          clientGetSkinInfo_ = null;
          clientGetSkinInfoBuilder_ = null;
        }
        if (clientEquipSkinBuilder_ == null) {
          clientEquipSkin_ = null;
        } else {
          clientEquipSkin_ = null;
          clientEquipSkinBuilder_ = null;
        }
        if (clientGetStoreDataBuilder_ == null) {
          clientGetStoreData_ = null;
        } else {
          clientGetStoreData_ = null;
          clientGetStoreDataBuilder_ = null;
        }
        if (clientConvertGoodsBuilder_ == null) {
          clientConvertGoods_ = null;
        } else {
          clientConvertGoods_ = null;
          clientConvertGoodsBuilder_ = null;
        }
        if (clientWXPayResultQueryBuilder_ == null) {
          clientWXPayResultQuery_ = null;
        } else {
          clientWXPayResultQuery_ = null;
          clientWXPayResultQueryBuilder_ = null;
        }
        if (clientBuyOrderGoodsBuilder_ == null) {
          clientBuyOrderGoods_ = null;
        } else {
          clientBuyOrderGoods_ = null;
          clientBuyOrderGoodsBuilder_ = null;
        }
        if (clientGetFirstChargeBuilder_ == null) {
          clientGetFirstCharge_ = null;
        } else {
          clientGetFirstCharge_ = null;
          clientGetFirstChargeBuilder_ = null;
        }
        if (clientGetDailyGiftBuilder_ == null) {
          clientGetDailyGift_ = null;
        } else {
          clientGetDailyGift_ = null;
          clientGetDailyGiftBuilder_ = null;
        }
        if (clientGetMonthCardBuilder_ == null) {
          clientGetMonthCard_ = null;
        } else {
          clientGetMonthCard_ = null;
          clientGetMonthCardBuilder_ = null;
        }
        if (clientGetResurgenceGiftBuilder_ == null) {
          clientGetResurgenceGift_ = null;
        } else {
          clientGetResurgenceGift_ = null;
          clientGetResurgenceGiftBuilder_ = null;
        }
        if (clientGetAnnounceBuilder_ == null) {
          clientGetAnnounce_ = null;
        } else {
          clientGetAnnounce_ = null;
          clientGetAnnounceBuilder_ = null;
        }
        if (clientGetMailBuilder_ == null) {
          clientGetMail_ = null;
        } else {
          clientGetMail_ = null;
          clientGetMailBuilder_ = null;
        }
        if (clientGetMailRewardBuilder_ == null) {
          clientGetMailReward_ = null;
        } else {
          clientGetMailReward_ = null;
          clientGetMailRewardBuilder_ = null;
        }
        if (clientDelMailBuilder_ == null) {
          clientDelMail_ = null;
        } else {
          clientDelMail_ = null;
          clientDelMailBuilder_ = null;
        }
        if (clientReadMailBuilder_ == null) {
          clientReadMail_ = null;
        } else {
          clientReadMail_ = null;
          clientReadMailBuilder_ = null;
        }
        if (clientDel2RBuilder_ == null) {
          clientDel2R_ = null;
        } else {
          clientDel2R_ = null;
          clientDel2RBuilder_ = null;
        }
        if (clientQueryDailyTaskBuilder_ == null) {
          clientQueryDailyTask_ = null;
        } else {
          clientQueryDailyTask_ = null;
          clientQueryDailyTaskBuilder_ = null;
        }
        if (clientGetDailyTaskAwardBuilder_ == null) {
          clientGetDailyTaskAward_ = null;
        } else {
          clientGetDailyTaskAward_ = null;
          clientGetDailyTaskAwardBuilder_ = null;
        }
        if (clientGetNoviceRewardBuilder_ == null) {
          clientGetNoviceReward_ = null;
        } else {
          clientGetNoviceReward_ = null;
          clientGetNoviceRewardBuilder_ = null;
        }
        if (clientQueryNoviceTaskBuilder_ == null) {
          clientQueryNoviceTask_ = null;
        } else {
          clientQueryNoviceTask_ = null;
          clientQueryNoviceTaskBuilder_ = null;
        }
        if (clientGetDTAwardBuilder_ == null) {
          clientGetDTAward_ = null;
        } else {
          clientGetDTAward_ = null;
          clientGetDTAwardBuilder_ = null;
        }
        if (clientGetReceiveAddrBuilder_ == null) {
          clientGetReceiveAddr_ = null;
        } else {
          clientGetReceiveAddr_ = null;
          clientGetReceiveAddrBuilder_ = null;
        }
        if (clientAlterReceiveAddrBuilder_ == null) {
          clientAlterReceiveAddr_ = null;
        } else {
          clientAlterReceiveAddr_ = null;
          clientAlterReceiveAddrBuilder_ = null;
        }
        if (clientSnatchListBuilder_ == null) {
          clientSnatchList_ = null;
        } else {
          clientSnatchList_ = null;
          clientSnatchListBuilder_ = null;
        }
        if (clientSnatchItemDetailBuilder_ == null) {
          clientSnatchItemDetail_ = null;
        } else {
          clientSnatchItemDetail_ = null;
          clientSnatchItemDetailBuilder_ = null;
        }
        if (clientSnatchBetBuilder_ == null) {
          clientSnatchBet_ = null;
        } else {
          clientSnatchBet_ = null;
          clientSnatchBetBuilder_ = null;
        }
        if (clientSnatchAwardListBuilder_ == null) {
          clientSnatchAwardList_ = null;
        } else {
          clientSnatchAwardList_ = null;
          clientSnatchAwardListBuilder_ = null;
        }
        if (clientOwnSnatchRecordBuilder_ == null) {
          clientOwnSnatchRecord_ = null;
        } else {
          clientOwnSnatchRecord_ = null;
          clientOwnSnatchRecordBuilder_ = null;
        }
        if (clientSnatchItemHistoryBuilder_ == null) {
          clientSnatchItemHistory_ = null;
        } else {
          clientSnatchItemHistory_ = null;
          clientSnatchItemHistoryBuilder_ = null;
        }
        if (clientSnatchHistoryDetailBuilder_ == null) {
          clientSnatchHistoryDetail_ = null;
        } else {
          clientSnatchHistoryDetail_ = null;
          clientSnatchHistoryDetailBuilder_ = null;
        }
        if (clientSnatchGetAwardBuilder_ == null) {
          clientSnatchGetAward_ = null;
        } else {
          clientSnatchGetAward_ = null;
          clientSnatchGetAwardBuilder_ = null;
        }
        if (clientEnterDGBuilder_ == null) {
          clientEnterDG_ = null;
        } else {
          clientEnterDG_ = null;
          clientEnterDGBuilder_ = null;
        }
        if (clientDGLotteryBuilder_ == null) {
          clientDGLottery_ = null;
        } else {
          clientDGLottery_ = null;
          clientDGLotteryBuilder_ = null;
        }
        if (clientResetLotteryBuilder_ == null) {
          clientResetLottery_ = null;
        } else {
          clientResetLottery_ = null;
          clientResetLotteryBuilder_ = null;
        }
        if (clientExitDGBuilder_ == null) {
          clientExitDG_ = null;
        } else {
          clientExitDG_ = null;
          clientExitDGBuilder_ = null;
        }
        if (clientOpenDGBuilder_ == null) {
          clientOpenDG_ = null;
        } else {
          clientOpenDG_ = null;
          clientOpenDGBuilder_ = null;
        }
        if (clientOpenDDBuilder_ == null) {
          clientOpenDD_ = null;
        } else {
          clientOpenDD_ = null;
          clientOpenDDBuilder_ = null;
        }
        if (clientDDLotteryBuilder_ == null) {
          clientDDLottery_ = null;
        } else {
          clientDDLottery_ = null;
          clientDDLotteryBuilder_ = null;
        }
        if (clientExitDDBuilder_ == null) {
          clientExitDD_ = null;
        } else {
          clientExitDD_ = null;
          clientExitDDBuilder_ = null;
        }
        if (clientQueryPropBuilder_ == null) {
          clientQueryProp_ = null;
        } else {
          clientQueryProp_ = null;
          clientQueryPropBuilder_ = null;
        }
        if (clientUsePropBuilder_ == null) {
          clientUseProp_ = null;
        } else {
          clientUseProp_ = null;
          clientUsePropBuilder_ = null;
        }
        if (clientQueryPropCountBuilder_ == null) {
          clientQueryPropCount_ = null;
        } else {
          clientQueryPropCount_ = null;
          clientQueryPropCountBuilder_ = null;
        }
        if (clientMonthSignInfoBuilder_ == null) {
          clientMonthSignInfo_ = null;
        } else {
          clientMonthSignInfo_ = null;
          clientMonthSignInfoBuilder_ = null;
        }
        if (clientMonthSignBuilder_ == null) {
          clientMonthSign_ = null;
        } else {
          clientMonthSign_ = null;
          clientMonthSignBuilder_ = null;
        }
        if (clientGetCritRewardBuilder_ == null) {
          clientGetCritReward_ = null;
        } else {
          clientGetCritReward_ = null;
          clientGetCritRewardBuilder_ = null;
        }
        if (clientLTLotteryBuilder_ == null) {
          clientLTLottery_ = null;
        } else {
          clientLTLottery_ = null;
          clientLTLotteryBuilder_ = null;
        }
        if (clientGetTSRewardBuilder_ == null) {
          clientGetTSReward_ = null;
        } else {
          clientGetTSReward_ = null;
          clientGetTSRewardBuilder_ = null;
        }
        if (clientGetLuckInfoBuilder_ == null) {
          clientGetLuckInfo_ = null;
        } else {
          clientGetLuckInfo_ = null;
          clientGetLuckInfoBuilder_ = null;
        }
        if (clientGetVipInfoBuilder_ == null) {
          clientGetVipInfo_ = null;
        } else {
          clientGetVipInfo_ = null;
          clientGetVipInfoBuilder_ = null;
        }
        if (clientGetVipWeekBuilder_ == null) {
          clientGetVipWeek_ = null;
        } else {
          clientGetVipWeek_ = null;
          clientGetVipWeekBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ClientRequest_descriptor;
      }

      public com.kys.util.netty.proto.ProtoMsg.ClientRequest getDefaultInstanceForType() {
        return com.kys.util.netty.proto.ProtoMsg.ClientRequest.getDefaultInstance();
      }

      public com.kys.util.netty.proto.ProtoMsg.ClientRequest build() {
        com.kys.util.netty.proto.ProtoMsg.ClientRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kys.util.netty.proto.ProtoMsg.ClientRequest buildPartial() {
        com.kys.util.netty.proto.ProtoMsg.ClientRequest result = new com.kys.util.netty.proto.ProtoMsg.ClientRequest(this);
        result.userId_ = userId_;
        result.methodId_ = methodId_;
        if (clientLoginBuilder_ == null) {
          result.clientLogin_ = clientLogin_;
        } else {
          result.clientLogin_ = clientLoginBuilder_.build();
        }
        if (clientPlayerInfoBuilder_ == null) {
          result.clientPlayerInfo_ = clientPlayerInfo_;
        } else {
          result.clientPlayerInfo_ = clientPlayerInfoBuilder_.build();
        }
        if (clientReturnHallHeartBeatBuilder_ == null) {
          result.clientReturnHallHeartBeat_ = clientReturnHallHeartBeat_;
        } else {
          result.clientReturnHallHeartBeat_ = clientReturnHallHeartBeatBuilder_.build();
        }
        if (clientReturnGameHeartBeatBuilder_ == null) {
          result.clientReturnGameHeartBeat_ = clientReturnGameHeartBeat_;
        } else {
          result.clientReturnGameHeartBeat_ = clientReturnGameHeartBeatBuilder_.build();
        }
        if (clientGetUserInfoBuilder_ == null) {
          result.clientGetUserInfo_ = clientGetUserInfo_;
        } else {
          result.clientGetUserInfo_ = clientGetUserInfoBuilder_.build();
        }
        if (clientNewLoginBuilder_ == null) {
          result.clientNewLogin_ = clientNewLogin_;
        } else {
          result.clientNewLogin_ = clientNewLoginBuilder_.build();
        }
        if (clientQuickJoinBuilder_ == null) {
          result.clientQuickJoin_ = clientQuickJoin_;
        } else {
          result.clientQuickJoin_ = clientQuickJoinBuilder_.build();
        }
        if (clientEnterRoomBuilder_ == null) {
          result.clientEnterRoom_ = clientEnterRoom_;
        } else {
          result.clientEnterRoom_ = clientEnterRoomBuilder_.build();
        }
        if (clientDoCatchBuilder_ == null) {
          result.clientDoCatch_ = clientDoCatch_;
        } else {
          result.clientDoCatch_ = clientDoCatchBuilder_.build();
        }
        if (clientPlayCardsBuilder_ == null) {
          result.clientPlayCards_ = clientPlayCards_;
        } else {
          result.clientPlayCards_ = clientPlayCardsBuilder_.build();
        }
        if (clientRecoverGameBuilder_ == null) {
          result.clientRecoverGame_ = clientRecoverGame_;
        } else {
          result.clientRecoverGame_ = clientRecoverGameBuilder_.build();
        }
        if (clientAutoPlayBuilder_ == null) {
          result.clientAutoPlay_ = clientAutoPlay_;
        } else {
          result.clientAutoPlay_ = clientAutoPlayBuilder_.build();
        }
        if (clientLeaveRoomBuilder_ == null) {
          result.clientLeaveRoom_ = clientLeaveRoom_;
        } else {
          result.clientLeaveRoom_ = clientLeaveRoomBuilder_.build();
        }
        if (clientCancleJoinBuilder_ == null) {
          result.clientCancleJoin_ = clientCancleJoin_;
        } else {
          result.clientCancleJoin_ = clientCancleJoinBuilder_.build();
        }
        if (clientQueryIndexBuilder_ == null) {
          result.clientQueryIndex_ = clientQueryIndex_;
        } else {
          result.clientQueryIndex_ = clientQueryIndexBuilder_.build();
        }
        if (clientRetryReturnGameBuilder_ == null) {
          result.clientRetryReturnGame_ = clientRetryReturnGame_;
        } else {
          result.clientRetryReturnGame_ = clientRetryReturnGameBuilder_.build();
        }
        if (clientGetRankListBuilder_ == null) {
          result.clientGetRankList_ = clientGetRankList_;
        } else {
          result.clientGetRankList_ = clientGetRankListBuilder_.build();
        }
        if (clientGetSignupRewardListBuilder_ == null) {
          result.clientGetSignupRewardList_ = clientGetSignupRewardList_;
        } else {
          result.clientGetSignupRewardList_ = clientGetSignupRewardListBuilder_.build();
        }
        if (clientGetHallInfoBuilder_ == null) {
          result.clientGetHallInfo_ = clientGetHallInfo_;
        } else {
          result.clientGetHallInfo_ = clientGetHallInfoBuilder_.build();
        }
        if (clientSignupBuilder_ == null) {
          result.clientSignup_ = clientSignup_;
        } else {
          result.clientSignup_ = clientSignupBuilder_.build();
        }
        if (clientDrawWinCupBuilder_ == null) {
          result.clientDrawWinCup_ = clientDrawWinCup_;
        } else {
          result.clientDrawWinCup_ = clientDrawWinCupBuilder_.build();
        }
        if (clientGetRoomConfigBuilder_ == null) {
          result.clientGetRoomConfig_ = clientGetRoomConfig_;
        } else {
          result.clientGetRoomConfig_ = clientGetRoomConfigBuilder_.build();
        }
        if (clientRewardMessageBuilder_ == null) {
          result.clientRewardMessage_ = clientRewardMessage_;
        } else {
          result.clientRewardMessage_ = clientRewardMessageBuilder_.build();
        }
        if (clientGetRoomCardConfigBuilder_ == null) {
          result.clientGetRoomCardConfig_ = clientGetRoomCardConfig_;
        } else {
          result.clientGetRoomCardConfig_ = clientGetRoomCardConfigBuilder_.build();
        }
        if (clientCreateRoomBuilder_ == null) {
          result.clientCreateRoom_ = clientCreateRoom_;
        } else {
          result.clientCreateRoom_ = clientCreateRoomBuilder_.build();
        }
        if (clientGetMonthCardDiamondBuilder_ == null) {
          result.clientGetMonthCardDiamond_ = clientGetMonthCardDiamond_;
        } else {
          result.clientGetMonthCardDiamond_ = clientGetMonthCardDiamondBuilder_.build();
        }
        if (clientGetLotteryCountBuilder_ == null) {
          result.clientGetLotteryCount_ = clientGetLotteryCount_;
        } else {
          result.clientGetLotteryCount_ = clientGetLotteryCountBuilder_.build();
        }
        if (clientGetRoomInfoBuilder_ == null) {
          result.clientGetRoomInfo_ = clientGetRoomInfo_;
        } else {
          result.clientGetRoomInfo_ = clientGetRoomInfoBuilder_.build();
        }
        if (clientSendTelCodeBuilder_ == null) {
          result.clientSendTelCode_ = clientSendTelCode_;
        } else {
          result.clientSendTelCode_ = clientSendTelCodeBuilder_.build();
        }
        if (clientVerifyTelCodeBuilder_ == null) {
          result.clientVerifyTelCode_ = clientVerifyTelCode_;
        } else {
          result.clientVerifyTelCode_ = clientVerifyTelCodeBuilder_.build();
        }
        if (clientQueryShareListBuilder_ == null) {
          result.clientQueryShareList_ = clientQueryShareList_;
        } else {
          result.clientQueryShareList_ = clientQueryShareListBuilder_.build();
        }
        if (clientQueryShareDetailBuilder_ == null) {
          result.clientQueryShareDetail_ = clientQueryShareDetail_;
        } else {
          result.clientQueryShareDetail_ = clientQueryShareDetailBuilder_.build();
        }
        if (clientGetTaskAwardBuilder_ == null) {
          result.clientGetTaskAward_ = clientGetTaskAward_;
        } else {
          result.clientGetTaskAward_ = clientGetTaskAwardBuilder_.build();
        }
        if (clientSharePackageBuilder_ == null) {
          result.clientSharePackage_ = clientSharePackage_;
        } else {
          result.clientSharePackage_ = clientSharePackageBuilder_.build();
        }
        if (clientGetAwardListBuilder_ == null) {
          result.clientGetAwardList_ = clientGetAwardList_;
        } else {
          result.clientGetAwardList_ = clientGetAwardListBuilder_.build();
        }
        if (clientPlayerLogoutBuilder_ == null) {
          result.clientPlayerLogout_ = clientPlayerLogout_;
        } else {
          result.clientPlayerLogout_ = clientPlayerLogoutBuilder_.build();
        }
        if (clientCheckConnectBuilder_ == null) {
          result.clientCheckConnect_ = clientCheckConnect_;
        } else {
          result.clientCheckConnect_ = clientCheckConnectBuilder_.build();
        }
        if (clientGetPFListBuilder_ == null) {
          result.clientGetPFList_ = clientGetPFList_;
        } else {
          result.clientGetPFList_ = clientGetPFListBuilder_.build();
        }
        if (clientChoosePFBuilder_ == null) {
          result.clientChoosePF_ = clientChoosePF_;
        } else {
          result.clientChoosePF_ = clientChoosePFBuilder_.build();
        }
        if (clientGetHistoryRankBuilder_ == null) {
          result.clientGetHistoryRank_ = clientGetHistoryRank_;
        } else {
          result.clientGetHistoryRank_ = clientGetHistoryRankBuilder_.build();
        }
        if (clientH5RewardBuilder_ == null) {
          result.clientH5Reward_ = clientH5Reward_;
        } else {
          result.clientH5Reward_ = clientH5RewardBuilder_.build();
        }
        if (clientNewDrawWinCupBuilder_ == null) {
          result.clientNewDrawWinCup_ = clientNewDrawWinCup_;
        } else {
          result.clientNewDrawWinCup_ = clientNewDrawWinCupBuilder_.build();
        }
        if (clientGetNewHallInfoBuilder_ == null) {
          result.clientGetNewHallInfo_ = clientGetNewHallInfo_;
        } else {
          result.clientGetNewHallInfo_ = clientGetNewHallInfoBuilder_.build();
        }
        if (clientGetSkinInfoBuilder_ == null) {
          result.clientGetSkinInfo_ = clientGetSkinInfo_;
        } else {
          result.clientGetSkinInfo_ = clientGetSkinInfoBuilder_.build();
        }
        if (clientEquipSkinBuilder_ == null) {
          result.clientEquipSkin_ = clientEquipSkin_;
        } else {
          result.clientEquipSkin_ = clientEquipSkinBuilder_.build();
        }
        if (clientGetStoreDataBuilder_ == null) {
          result.clientGetStoreData_ = clientGetStoreData_;
        } else {
          result.clientGetStoreData_ = clientGetStoreDataBuilder_.build();
        }
        if (clientConvertGoodsBuilder_ == null) {
          result.clientConvertGoods_ = clientConvertGoods_;
        } else {
          result.clientConvertGoods_ = clientConvertGoodsBuilder_.build();
        }
        if (clientWXPayResultQueryBuilder_ == null) {
          result.clientWXPayResultQuery_ = clientWXPayResultQuery_;
        } else {
          result.clientWXPayResultQuery_ = clientWXPayResultQueryBuilder_.build();
        }
        if (clientBuyOrderGoodsBuilder_ == null) {
          result.clientBuyOrderGoods_ = clientBuyOrderGoods_;
        } else {
          result.clientBuyOrderGoods_ = clientBuyOrderGoodsBuilder_.build();
        }
        if (clientGetFirstChargeBuilder_ == null) {
          result.clientGetFirstCharge_ = clientGetFirstCharge_;
        } else {
          result.clientGetFirstCharge_ = clientGetFirstChargeBuilder_.build();
        }
        if (clientGetDailyGiftBuilder_ == null) {
          result.clientGetDailyGift_ = clientGetDailyGift_;
        } else {
          result.clientGetDailyGift_ = clientGetDailyGiftBuilder_.build();
        }
        if (clientGetMonthCardBuilder_ == null) {
          result.clientGetMonthCard_ = clientGetMonthCard_;
        } else {
          result.clientGetMonthCard_ = clientGetMonthCardBuilder_.build();
        }
        if (clientGetResurgenceGiftBuilder_ == null) {
          result.clientGetResurgenceGift_ = clientGetResurgenceGift_;
        } else {
          result.clientGetResurgenceGift_ = clientGetResurgenceGiftBuilder_.build();
        }
        if (clientGetAnnounceBuilder_ == null) {
          result.clientGetAnnounce_ = clientGetAnnounce_;
        } else {
          result.clientGetAnnounce_ = clientGetAnnounceBuilder_.build();
        }
        if (clientGetMailBuilder_ == null) {
          result.clientGetMail_ = clientGetMail_;
        } else {
          result.clientGetMail_ = clientGetMailBuilder_.build();
        }
        if (clientGetMailRewardBuilder_ == null) {
          result.clientGetMailReward_ = clientGetMailReward_;
        } else {
          result.clientGetMailReward_ = clientGetMailRewardBuilder_.build();
        }
        if (clientDelMailBuilder_ == null) {
          result.clientDelMail_ = clientDelMail_;
        } else {
          result.clientDelMail_ = clientDelMailBuilder_.build();
        }
        if (clientReadMailBuilder_ == null) {
          result.clientReadMail_ = clientReadMail_;
        } else {
          result.clientReadMail_ = clientReadMailBuilder_.build();
        }
        if (clientDel2RBuilder_ == null) {
          result.clientDel2R_ = clientDel2R_;
        } else {
          result.clientDel2R_ = clientDel2RBuilder_.build();
        }
        if (clientQueryDailyTaskBuilder_ == null) {
          result.clientQueryDailyTask_ = clientQueryDailyTask_;
        } else {
          result.clientQueryDailyTask_ = clientQueryDailyTaskBuilder_.build();
        }
        if (clientGetDailyTaskAwardBuilder_ == null) {
          result.clientGetDailyTaskAward_ = clientGetDailyTaskAward_;
        } else {
          result.clientGetDailyTaskAward_ = clientGetDailyTaskAwardBuilder_.build();
        }
        if (clientGetNoviceRewardBuilder_ == null) {
          result.clientGetNoviceReward_ = clientGetNoviceReward_;
        } else {
          result.clientGetNoviceReward_ = clientGetNoviceRewardBuilder_.build();
        }
        if (clientQueryNoviceTaskBuilder_ == null) {
          result.clientQueryNoviceTask_ = clientQueryNoviceTask_;
        } else {
          result.clientQueryNoviceTask_ = clientQueryNoviceTaskBuilder_.build();
        }
        if (clientGetDTAwardBuilder_ == null) {
          result.clientGetDTAward_ = clientGetDTAward_;
        } else {
          result.clientGetDTAward_ = clientGetDTAwardBuilder_.build();
        }
        if (clientGetReceiveAddrBuilder_ == null) {
          result.clientGetReceiveAddr_ = clientGetReceiveAddr_;
        } else {
          result.clientGetReceiveAddr_ = clientGetReceiveAddrBuilder_.build();
        }
        if (clientAlterReceiveAddrBuilder_ == null) {
          result.clientAlterReceiveAddr_ = clientAlterReceiveAddr_;
        } else {
          result.clientAlterReceiveAddr_ = clientAlterReceiveAddrBuilder_.build();
        }
        if (clientSnatchListBuilder_ == null) {
          result.clientSnatchList_ = clientSnatchList_;
        } else {
          result.clientSnatchList_ = clientSnatchListBuilder_.build();
        }
        if (clientSnatchItemDetailBuilder_ == null) {
          result.clientSnatchItemDetail_ = clientSnatchItemDetail_;
        } else {
          result.clientSnatchItemDetail_ = clientSnatchItemDetailBuilder_.build();
        }
        if (clientSnatchBetBuilder_ == null) {
          result.clientSnatchBet_ = clientSnatchBet_;
        } else {
          result.clientSnatchBet_ = clientSnatchBetBuilder_.build();
        }
        if (clientSnatchAwardListBuilder_ == null) {
          result.clientSnatchAwardList_ = clientSnatchAwardList_;
        } else {
          result.clientSnatchAwardList_ = clientSnatchAwardListBuilder_.build();
        }
        if (clientOwnSnatchRecordBuilder_ == null) {
          result.clientOwnSnatchRecord_ = clientOwnSnatchRecord_;
        } else {
          result.clientOwnSnatchRecord_ = clientOwnSnatchRecordBuilder_.build();
        }
        if (clientSnatchItemHistoryBuilder_ == null) {
          result.clientSnatchItemHistory_ = clientSnatchItemHistory_;
        } else {
          result.clientSnatchItemHistory_ = clientSnatchItemHistoryBuilder_.build();
        }
        if (clientSnatchHistoryDetailBuilder_ == null) {
          result.clientSnatchHistoryDetail_ = clientSnatchHistoryDetail_;
        } else {
          result.clientSnatchHistoryDetail_ = clientSnatchHistoryDetailBuilder_.build();
        }
        if (clientSnatchGetAwardBuilder_ == null) {
          result.clientSnatchGetAward_ = clientSnatchGetAward_;
        } else {
          result.clientSnatchGetAward_ = clientSnatchGetAwardBuilder_.build();
        }
        if (clientEnterDGBuilder_ == null) {
          result.clientEnterDG_ = clientEnterDG_;
        } else {
          result.clientEnterDG_ = clientEnterDGBuilder_.build();
        }
        if (clientDGLotteryBuilder_ == null) {
          result.clientDGLottery_ = clientDGLottery_;
        } else {
          result.clientDGLottery_ = clientDGLotteryBuilder_.build();
        }
        if (clientResetLotteryBuilder_ == null) {
          result.clientResetLottery_ = clientResetLottery_;
        } else {
          result.clientResetLottery_ = clientResetLotteryBuilder_.build();
        }
        if (clientExitDGBuilder_ == null) {
          result.clientExitDG_ = clientExitDG_;
        } else {
          result.clientExitDG_ = clientExitDGBuilder_.build();
        }
        if (clientOpenDGBuilder_ == null) {
          result.clientOpenDG_ = clientOpenDG_;
        } else {
          result.clientOpenDG_ = clientOpenDGBuilder_.build();
        }
        if (clientOpenDDBuilder_ == null) {
          result.clientOpenDD_ = clientOpenDD_;
        } else {
          result.clientOpenDD_ = clientOpenDDBuilder_.build();
        }
        if (clientDDLotteryBuilder_ == null) {
          result.clientDDLottery_ = clientDDLottery_;
        } else {
          result.clientDDLottery_ = clientDDLotteryBuilder_.build();
        }
        if (clientExitDDBuilder_ == null) {
          result.clientExitDD_ = clientExitDD_;
        } else {
          result.clientExitDD_ = clientExitDDBuilder_.build();
        }
        if (clientQueryPropBuilder_ == null) {
          result.clientQueryProp_ = clientQueryProp_;
        } else {
          result.clientQueryProp_ = clientQueryPropBuilder_.build();
        }
        if (clientUsePropBuilder_ == null) {
          result.clientUseProp_ = clientUseProp_;
        } else {
          result.clientUseProp_ = clientUsePropBuilder_.build();
        }
        if (clientQueryPropCountBuilder_ == null) {
          result.clientQueryPropCount_ = clientQueryPropCount_;
        } else {
          result.clientQueryPropCount_ = clientQueryPropCountBuilder_.build();
        }
        if (clientMonthSignInfoBuilder_ == null) {
          result.clientMonthSignInfo_ = clientMonthSignInfo_;
        } else {
          result.clientMonthSignInfo_ = clientMonthSignInfoBuilder_.build();
        }
        if (clientMonthSignBuilder_ == null) {
          result.clientMonthSign_ = clientMonthSign_;
        } else {
          result.clientMonthSign_ = clientMonthSignBuilder_.build();
        }
        if (clientGetCritRewardBuilder_ == null) {
          result.clientGetCritReward_ = clientGetCritReward_;
        } else {
          result.clientGetCritReward_ = clientGetCritRewardBuilder_.build();
        }
        if (clientLTLotteryBuilder_ == null) {
          result.clientLTLottery_ = clientLTLottery_;
        } else {
          result.clientLTLottery_ = clientLTLotteryBuilder_.build();
        }
        if (clientGetTSRewardBuilder_ == null) {
          result.clientGetTSReward_ = clientGetTSReward_;
        } else {
          result.clientGetTSReward_ = clientGetTSRewardBuilder_.build();
        }
        if (clientGetLuckInfoBuilder_ == null) {
          result.clientGetLuckInfo_ = clientGetLuckInfo_;
        } else {
          result.clientGetLuckInfo_ = clientGetLuckInfoBuilder_.build();
        }
        if (clientGetVipInfoBuilder_ == null) {
          result.clientGetVipInfo_ = clientGetVipInfo_;
        } else {
          result.clientGetVipInfo_ = clientGetVipInfoBuilder_.build();
        }
        if (clientGetVipWeekBuilder_ == null) {
          result.clientGetVipWeek_ = clientGetVipWeek_;
        } else {
          result.clientGetVipWeek_ = clientGetVipWeekBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kys.util.netty.proto.ProtoMsg.ClientRequest) {
          return mergeFrom((com.kys.util.netty.proto.ProtoMsg.ClientRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kys.util.netty.proto.ProtoMsg.ClientRequest other) {
        if (other == com.kys.util.netty.proto.ProtoMsg.ClientRequest.getDefaultInstance()) return this;
        if (other.getUserId() != 0) {
          setUserId(other.getUserId());
        }
        if (other.getMethodId() != 0) {
          setMethodId(other.getMethodId());
        }
        if (other.hasClientLogin()) {
          mergeClientLogin(other.getClientLogin());
        }
        if (other.hasClientPlayerInfo()) {
          mergeClientPlayerInfo(other.getClientPlayerInfo());
        }
        if (other.hasClientReturnHallHeartBeat()) {
          mergeClientReturnHallHeartBeat(other.getClientReturnHallHeartBeat());
        }
        if (other.hasClientReturnGameHeartBeat()) {
          mergeClientReturnGameHeartBeat(other.getClientReturnGameHeartBeat());
        }
        if (other.hasClientGetUserInfo()) {
          mergeClientGetUserInfo(other.getClientGetUserInfo());
        }
        if (other.hasClientNewLogin()) {
          mergeClientNewLogin(other.getClientNewLogin());
        }
        if (other.hasClientQuickJoin()) {
          mergeClientQuickJoin(other.getClientQuickJoin());
        }
        if (other.hasClientEnterRoom()) {
          mergeClientEnterRoom(other.getClientEnterRoom());
        }
        if (other.hasClientDoCatch()) {
          mergeClientDoCatch(other.getClientDoCatch());
        }
        if (other.hasClientPlayCards()) {
          mergeClientPlayCards(other.getClientPlayCards());
        }
        if (other.hasClientRecoverGame()) {
          mergeClientRecoverGame(other.getClientRecoverGame());
        }
        if (other.hasClientAutoPlay()) {
          mergeClientAutoPlay(other.getClientAutoPlay());
        }
        if (other.hasClientLeaveRoom()) {
          mergeClientLeaveRoom(other.getClientLeaveRoom());
        }
        if (other.hasClientCancleJoin()) {
          mergeClientCancleJoin(other.getClientCancleJoin());
        }
        if (other.hasClientQueryIndex()) {
          mergeClientQueryIndex(other.getClientQueryIndex());
        }
        if (other.hasClientRetryReturnGame()) {
          mergeClientRetryReturnGame(other.getClientRetryReturnGame());
        }
        if (other.hasClientGetRankList()) {
          mergeClientGetRankList(other.getClientGetRankList());
        }
        if (other.hasClientGetSignupRewardList()) {
          mergeClientGetSignupRewardList(other.getClientGetSignupRewardList());
        }
        if (other.hasClientGetHallInfo()) {
          mergeClientGetHallInfo(other.getClientGetHallInfo());
        }
        if (other.hasClientSignup()) {
          mergeClientSignup(other.getClientSignup());
        }
        if (other.hasClientDrawWinCup()) {
          mergeClientDrawWinCup(other.getClientDrawWinCup());
        }
        if (other.hasClientGetRoomConfig()) {
          mergeClientGetRoomConfig(other.getClientGetRoomConfig());
        }
        if (other.hasClientRewardMessage()) {
          mergeClientRewardMessage(other.getClientRewardMessage());
        }
        if (other.hasClientGetRoomCardConfig()) {
          mergeClientGetRoomCardConfig(other.getClientGetRoomCardConfig());
        }
        if (other.hasClientCreateRoom()) {
          mergeClientCreateRoom(other.getClientCreateRoom());
        }
        if (other.hasClientGetMonthCardDiamond()) {
          mergeClientGetMonthCardDiamond(other.getClientGetMonthCardDiamond());
        }
        if (other.hasClientGetLotteryCount()) {
          mergeClientGetLotteryCount(other.getClientGetLotteryCount());
        }
        if (other.hasClientGetRoomInfo()) {
          mergeClientGetRoomInfo(other.getClientGetRoomInfo());
        }
        if (other.hasClientSendTelCode()) {
          mergeClientSendTelCode(other.getClientSendTelCode());
        }
        if (other.hasClientVerifyTelCode()) {
          mergeClientVerifyTelCode(other.getClientVerifyTelCode());
        }
        if (other.hasClientQueryShareList()) {
          mergeClientQueryShareList(other.getClientQueryShareList());
        }
        if (other.hasClientQueryShareDetail()) {
          mergeClientQueryShareDetail(other.getClientQueryShareDetail());
        }
        if (other.hasClientGetTaskAward()) {
          mergeClientGetTaskAward(other.getClientGetTaskAward());
        }
        if (other.hasClientSharePackage()) {
          mergeClientSharePackage(other.getClientSharePackage());
        }
        if (other.hasClientGetAwardList()) {
          mergeClientGetAwardList(other.getClientGetAwardList());
        }
        if (other.hasClientPlayerLogout()) {
          mergeClientPlayerLogout(other.getClientPlayerLogout());
        }
        if (other.hasClientCheckConnect()) {
          mergeClientCheckConnect(other.getClientCheckConnect());
        }
        if (other.hasClientGetPFList()) {
          mergeClientGetPFList(other.getClientGetPFList());
        }
        if (other.hasClientChoosePF()) {
          mergeClientChoosePF(other.getClientChoosePF());
        }
        if (other.hasClientGetHistoryRank()) {
          mergeClientGetHistoryRank(other.getClientGetHistoryRank());
        }
        if (other.hasClientH5Reward()) {
          mergeClientH5Reward(other.getClientH5Reward());
        }
        if (other.hasClientNewDrawWinCup()) {
          mergeClientNewDrawWinCup(other.getClientNewDrawWinCup());
        }
        if (other.hasClientGetNewHallInfo()) {
          mergeClientGetNewHallInfo(other.getClientGetNewHallInfo());
        }
        if (other.hasClientGetSkinInfo()) {
          mergeClientGetSkinInfo(other.getClientGetSkinInfo());
        }
        if (other.hasClientEquipSkin()) {
          mergeClientEquipSkin(other.getClientEquipSkin());
        }
        if (other.hasClientGetStoreData()) {
          mergeClientGetStoreData(other.getClientGetStoreData());
        }
        if (other.hasClientConvertGoods()) {
          mergeClientConvertGoods(other.getClientConvertGoods());
        }
        if (other.hasClientWXPayResultQuery()) {
          mergeClientWXPayResultQuery(other.getClientWXPayResultQuery());
        }
        if (other.hasClientBuyOrderGoods()) {
          mergeClientBuyOrderGoods(other.getClientBuyOrderGoods());
        }
        if (other.hasClientGetFirstCharge()) {
          mergeClientGetFirstCharge(other.getClientGetFirstCharge());
        }
        if (other.hasClientGetDailyGift()) {
          mergeClientGetDailyGift(other.getClientGetDailyGift());
        }
        if (other.hasClientGetMonthCard()) {
          mergeClientGetMonthCard(other.getClientGetMonthCard());
        }
        if (other.hasClientGetResurgenceGift()) {
          mergeClientGetResurgenceGift(other.getClientGetResurgenceGift());
        }
        if (other.hasClientGetAnnounce()) {
          mergeClientGetAnnounce(other.getClientGetAnnounce());
        }
        if (other.hasClientGetMail()) {
          mergeClientGetMail(other.getClientGetMail());
        }
        if (other.hasClientGetMailReward()) {
          mergeClientGetMailReward(other.getClientGetMailReward());
        }
        if (other.hasClientDelMail()) {
          mergeClientDelMail(other.getClientDelMail());
        }
        if (other.hasClientReadMail()) {
          mergeClientReadMail(other.getClientReadMail());
        }
        if (other.hasClientDel2R()) {
          mergeClientDel2R(other.getClientDel2R());
        }
        if (other.hasClientQueryDailyTask()) {
          mergeClientQueryDailyTask(other.getClientQueryDailyTask());
        }
        if (other.hasClientGetDailyTaskAward()) {
          mergeClientGetDailyTaskAward(other.getClientGetDailyTaskAward());
        }
        if (other.hasClientGetNoviceReward()) {
          mergeClientGetNoviceReward(other.getClientGetNoviceReward());
        }
        if (other.hasClientQueryNoviceTask()) {
          mergeClientQueryNoviceTask(other.getClientQueryNoviceTask());
        }
        if (other.hasClientGetDTAward()) {
          mergeClientGetDTAward(other.getClientGetDTAward());
        }
        if (other.hasClientGetReceiveAddr()) {
          mergeClientGetReceiveAddr(other.getClientGetReceiveAddr());
        }
        if (other.hasClientAlterReceiveAddr()) {
          mergeClientAlterReceiveAddr(other.getClientAlterReceiveAddr());
        }
        if (other.hasClientSnatchList()) {
          mergeClientSnatchList(other.getClientSnatchList());
        }
        if (other.hasClientSnatchItemDetail()) {
          mergeClientSnatchItemDetail(other.getClientSnatchItemDetail());
        }
        if (other.hasClientSnatchBet()) {
          mergeClientSnatchBet(other.getClientSnatchBet());
        }
        if (other.hasClientSnatchAwardList()) {
          mergeClientSnatchAwardList(other.getClientSnatchAwardList());
        }
        if (other.hasClientOwnSnatchRecord()) {
          mergeClientOwnSnatchRecord(other.getClientOwnSnatchRecord());
        }
        if (other.hasClientSnatchItemHistory()) {
          mergeClientSnatchItemHistory(other.getClientSnatchItemHistory());
        }
        if (other.hasClientSnatchHistoryDetail()) {
          mergeClientSnatchHistoryDetail(other.getClientSnatchHistoryDetail());
        }
        if (other.hasClientSnatchGetAward()) {
          mergeClientSnatchGetAward(other.getClientSnatchGetAward());
        }
        if (other.hasClientEnterDG()) {
          mergeClientEnterDG(other.getClientEnterDG());
        }
        if (other.hasClientDGLottery()) {
          mergeClientDGLottery(other.getClientDGLottery());
        }
        if (other.hasClientResetLottery()) {
          mergeClientResetLottery(other.getClientResetLottery());
        }
        if (other.hasClientExitDG()) {
          mergeClientExitDG(other.getClientExitDG());
        }
        if (other.hasClientOpenDG()) {
          mergeClientOpenDG(other.getClientOpenDG());
        }
        if (other.hasClientOpenDD()) {
          mergeClientOpenDD(other.getClientOpenDD());
        }
        if (other.hasClientDDLottery()) {
          mergeClientDDLottery(other.getClientDDLottery());
        }
        if (other.hasClientExitDD()) {
          mergeClientExitDD(other.getClientExitDD());
        }
        if (other.hasClientQueryProp()) {
          mergeClientQueryProp(other.getClientQueryProp());
        }
        if (other.hasClientUseProp()) {
          mergeClientUseProp(other.getClientUseProp());
        }
        if (other.hasClientQueryPropCount()) {
          mergeClientQueryPropCount(other.getClientQueryPropCount());
        }
        if (other.hasClientMonthSignInfo()) {
          mergeClientMonthSignInfo(other.getClientMonthSignInfo());
        }
        if (other.hasClientMonthSign()) {
          mergeClientMonthSign(other.getClientMonthSign());
        }
        if (other.hasClientGetCritReward()) {
          mergeClientGetCritReward(other.getClientGetCritReward());
        }
        if (other.hasClientLTLottery()) {
          mergeClientLTLottery(other.getClientLTLottery());
        }
        if (other.hasClientGetTSReward()) {
          mergeClientGetTSReward(other.getClientGetTSReward());
        }
        if (other.hasClientGetLuckInfo()) {
          mergeClientGetLuckInfo(other.getClientGetLuckInfo());
        }
        if (other.hasClientGetVipInfo()) {
          mergeClientGetVipInfo(other.getClientGetVipInfo());
        }
        if (other.hasClientGetVipWeek()) {
          mergeClientGetVipWeek(other.getClientGetVipWeek());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kys.util.netty.proto.ProtoMsg.ClientRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kys.util.netty.proto.ProtoMsg.ClientRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int userId_ ;
      /**
       * <pre>
       ** 用户名 
       * </pre>
       *
       * <code>int32 userId = 1;</code>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <pre>
       ** 用户名 
       * </pre>
       *
       * <code>int32 userId = 1;</code>
       */
      public Builder setUserId(int value) {
        
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 用户名 
       * </pre>
       *
       * <code>int32 userId = 1;</code>
       */
      public Builder clearUserId() {
        
        userId_ = 0;
        onChanged();
        return this;
      }

      private int methodId_ ;
      /**
       * <pre>
       ** 请求方法名 
       * </pre>
       *
       * <code>int32 methodId = 2;</code>
       */
      public int getMethodId() {
        return methodId_;
      }
      /**
       * <pre>
       ** 请求方法名 
       * </pre>
       *
       * <code>int32 methodId = 2;</code>
       */
      public Builder setMethodId(int value) {
        
        methodId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 请求方法名 
       * </pre>
       *
       * <code>int32 methodId = 2;</code>
       */
      public Builder clearMethodId() {
        
        methodId_ = 0;
        onChanged();
        return this;
      }

      private com.kys.util.netty.proto.LoginProto.ClientLogin clientLogin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientLogin, com.kys.util.netty.proto.LoginProto.ClientLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientLoginOrBuilder> clientLoginBuilder_;
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      public boolean hasClientLogin() {
        return clientLoginBuilder_ != null || clientLogin_ != null;
      }
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientLogin getClientLogin() {
        if (clientLoginBuilder_ == null) {
          return clientLogin_ == null ? com.kys.util.netty.proto.LoginProto.ClientLogin.getDefaultInstance() : clientLogin_;
        } else {
          return clientLoginBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      public Builder setClientLogin(com.kys.util.netty.proto.LoginProto.ClientLogin value) {
        if (clientLoginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientLogin_ = value;
          onChanged();
        } else {
          clientLoginBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      public Builder setClientLogin(
          com.kys.util.netty.proto.LoginProto.ClientLogin.Builder builderForValue) {
        if (clientLoginBuilder_ == null) {
          clientLogin_ = builderForValue.build();
          onChanged();
        } else {
          clientLoginBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      public Builder mergeClientLogin(com.kys.util.netty.proto.LoginProto.ClientLogin value) {
        if (clientLoginBuilder_ == null) {
          if (clientLogin_ != null) {
            clientLogin_ =
              com.kys.util.netty.proto.LoginProto.ClientLogin.newBuilder(clientLogin_).mergeFrom(value).buildPartial();
          } else {
            clientLogin_ = value;
          }
          onChanged();
        } else {
          clientLoginBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      public Builder clearClientLogin() {
        if (clientLoginBuilder_ == null) {
          clientLogin_ = null;
          onChanged();
        } else {
          clientLogin_ = null;
          clientLoginBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientLogin.Builder getClientLoginBuilder() {
        
        onChanged();
        return getClientLoginFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientLoginOrBuilder getClientLoginOrBuilder() {
        if (clientLoginBuilder_ != null) {
          return clientLoginBuilder_.getMessageOrBuilder();
        } else {
          return clientLogin_ == null ?
              com.kys.util.netty.proto.LoginProto.ClientLogin.getDefaultInstance() : clientLogin_;
        }
      }
      /**
       * <pre>
       ** 账号登录方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLogin clientLogin = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientLogin, com.kys.util.netty.proto.LoginProto.ClientLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientLoginOrBuilder> 
          getClientLoginFieldBuilder() {
        if (clientLoginBuilder_ == null) {
          clientLoginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ClientLogin, com.kys.util.netty.proto.LoginProto.ClientLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientLoginOrBuilder>(
                  getClientLogin(),
                  getParentForChildren(),
                  isClean());
          clientLogin_ = null;
        }
        return clientLoginBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ClientGetUserInfo clientPlayerInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder> clientPlayerInfoBuilder_;
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public boolean hasClientPlayerInfo() {
        return clientPlayerInfoBuilder_ != null || clientPlayerInfo_ != null;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientPlayerInfo() {
        if (clientPlayerInfoBuilder_ == null) {
          return clientPlayerInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientPlayerInfo_;
        } else {
          return clientPlayerInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public Builder setClientPlayerInfo(com.kys.util.netty.proto.UserProto.ClientGetUserInfo value) {
        if (clientPlayerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientPlayerInfo_ = value;
          onChanged();
        } else {
          clientPlayerInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public Builder setClientPlayerInfo(
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder builderForValue) {
        if (clientPlayerInfoBuilder_ == null) {
          clientPlayerInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientPlayerInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public Builder mergeClientPlayerInfo(com.kys.util.netty.proto.UserProto.ClientGetUserInfo value) {
        if (clientPlayerInfoBuilder_ == null) {
          if (clientPlayerInfo_ != null) {
            clientPlayerInfo_ =
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.newBuilder(clientPlayerInfo_).mergeFrom(value).buildPartial();
          } else {
            clientPlayerInfo_ = value;
          }
          onChanged();
        } else {
          clientPlayerInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public Builder clearClientPlayerInfo() {
        if (clientPlayerInfoBuilder_ == null) {
          clientPlayerInfo_ = null;
          onChanged();
        } else {
          clientPlayerInfo_ = null;
          clientPlayerInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder getClientPlayerInfoBuilder() {
        
        onChanged();
        return getClientPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientPlayerInfoOrBuilder() {
        if (clientPlayerInfoBuilder_ != null) {
          return clientPlayerInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientPlayerInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientPlayerInfo_;
        }
      }
      /**
       * <pre>
       ** 获取用户信息方法 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientPlayerInfo = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder> 
          getClientPlayerInfoFieldBuilder() {
        if (clientPlayerInfoBuilder_ == null) {
          clientPlayerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder>(
                  getClientPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          clientPlayerInfo_ = null;
        }
        return clientPlayerInfoBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat clientReturnHallHeartBeat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder> clientReturnHallHeartBeatBuilder_;
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public boolean hasClientReturnHallHeartBeat() {
        return clientReturnHallHeartBeatBuilder_ != null || clientReturnHallHeartBeat_ != null;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat getClientReturnHallHeartBeat() {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          return clientReturnHallHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.getDefaultInstance() : clientReturnHallHeartBeat_;
        } else {
          return clientReturnHallHeartBeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public Builder setClientReturnHallHeartBeat(com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat value) {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientReturnHallHeartBeat_ = value;
          onChanged();
        } else {
          clientReturnHallHeartBeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public Builder setClientReturnHallHeartBeat(
          com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder builderForValue) {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          clientReturnHallHeartBeat_ = builderForValue.build();
          onChanged();
        } else {
          clientReturnHallHeartBeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public Builder mergeClientReturnHallHeartBeat(com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat value) {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          if (clientReturnHallHeartBeat_ != null) {
            clientReturnHallHeartBeat_ =
              com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.newBuilder(clientReturnHallHeartBeat_).mergeFrom(value).buildPartial();
          } else {
            clientReturnHallHeartBeat_ = value;
          }
          onChanged();
        } else {
          clientReturnHallHeartBeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public Builder clearClientReturnHallHeartBeat() {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          clientReturnHallHeartBeat_ = null;
          onChanged();
        } else {
          clientReturnHallHeartBeat_ = null;
          clientReturnHallHeartBeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder getClientReturnHallHeartBeatBuilder() {
        
        onChanged();
        return getClientReturnHallHeartBeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder getClientReturnHallHeartBeatOrBuilder() {
        if (clientReturnHallHeartBeatBuilder_ != null) {
          return clientReturnHallHeartBeatBuilder_.getMessageOrBuilder();
        } else {
          return clientReturnHallHeartBeat_ == null ?
              com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.getDefaultInstance() : clientReturnHallHeartBeat_;
        }
      }
      /**
       * <pre>
       ** 客户端返回大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnHallHeartBeat clientReturnHallHeartBeat = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder> 
          getClientReturnHallHeartBeatFieldBuilder() {
        if (clientReturnHallHeartBeatBuilder_ == null) {
          clientReturnHallHeartBeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnHallHeartBeatOrBuilder>(
                  getClientReturnHallHeartBeat(),
                  getParentForChildren(),
                  isClean());
          clientReturnHallHeartBeat_ = null;
        }
        return clientReturnHallHeartBeatBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat clientReturnGameHeartBeat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder> clientReturnGameHeartBeatBuilder_;
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public boolean hasClientReturnGameHeartBeat() {
        return clientReturnGameHeartBeatBuilder_ != null || clientReturnGameHeartBeat_ != null;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat getClientReturnGameHeartBeat() {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          return clientReturnGameHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.getDefaultInstance() : clientReturnGameHeartBeat_;
        } else {
          return clientReturnGameHeartBeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public Builder setClientReturnGameHeartBeat(com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat value) {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientReturnGameHeartBeat_ = value;
          onChanged();
        } else {
          clientReturnGameHeartBeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public Builder setClientReturnGameHeartBeat(
          com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder builderForValue) {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          clientReturnGameHeartBeat_ = builderForValue.build();
          onChanged();
        } else {
          clientReturnGameHeartBeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public Builder mergeClientReturnGameHeartBeat(com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat value) {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          if (clientReturnGameHeartBeat_ != null) {
            clientReturnGameHeartBeat_ =
              com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.newBuilder(clientReturnGameHeartBeat_).mergeFrom(value).buildPartial();
          } else {
            clientReturnGameHeartBeat_ = value;
          }
          onChanged();
        } else {
          clientReturnGameHeartBeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public Builder clearClientReturnGameHeartBeat() {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          clientReturnGameHeartBeat_ = null;
          onChanged();
        } else {
          clientReturnGameHeartBeat_ = null;
          clientReturnGameHeartBeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder getClientReturnGameHeartBeatBuilder() {
        
        onChanged();
        return getClientReturnGameHeartBeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder getClientReturnGameHeartBeatOrBuilder() {
        if (clientReturnGameHeartBeatBuilder_ != null) {
          return clientReturnGameHeartBeatBuilder_.getMessageOrBuilder();
        } else {
          return clientReturnGameHeartBeat_ == null ?
              com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.getDefaultInstance() : clientReturnGameHeartBeat_;
        }
      }
      /**
       * <pre>
       ** 客户端返回游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReturnGameHeartBeat clientReturnGameHeartBeat = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder> 
          getClientReturnGameHeartBeatFieldBuilder() {
        if (clientReturnGameHeartBeatBuilder_ == null) {
          clientReturnGameHeartBeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ClientReturnGameHeartBeatOrBuilder>(
                  getClientReturnGameHeartBeat(),
                  getParentForChildren(),
                  isClean());
          clientReturnGameHeartBeat_ = null;
        }
        return clientReturnGameHeartBeatBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ClientGetUserInfo clientGetUserInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder> clientGetUserInfoBuilder_;
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public boolean hasClientGetUserInfo() {
        return clientGetUserInfoBuilder_ != null || clientGetUserInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfo getClientGetUserInfo() {
        if (clientGetUserInfoBuilder_ == null) {
          return clientGetUserInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientGetUserInfo_;
        } else {
          return clientGetUserInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public Builder setClientGetUserInfo(com.kys.util.netty.proto.UserProto.ClientGetUserInfo value) {
        if (clientGetUserInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetUserInfo_ = value;
          onChanged();
        } else {
          clientGetUserInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public Builder setClientGetUserInfo(
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder builderForValue) {
        if (clientGetUserInfoBuilder_ == null) {
          clientGetUserInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetUserInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public Builder mergeClientGetUserInfo(com.kys.util.netty.proto.UserProto.ClientGetUserInfo value) {
        if (clientGetUserInfoBuilder_ == null) {
          if (clientGetUserInfo_ != null) {
            clientGetUserInfo_ =
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.newBuilder(clientGetUserInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetUserInfo_ = value;
          }
          onChanged();
        } else {
          clientGetUserInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public Builder clearClientGetUserInfo() {
        if (clientGetUserInfoBuilder_ == null) {
          clientGetUserInfo_ = null;
          onChanged();
        } else {
          clientGetUserInfo_ = null;
          clientGetUserInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder getClientGetUserInfoBuilder() {
        
        onChanged();
        return getClientGetUserInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder getClientGetUserInfoOrBuilder() {
        if (clientGetUserInfoBuilder_ != null) {
          return clientGetUserInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetUserInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo.getDefaultInstance() : clientGetUserInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端获取用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetUserInfo clientGetUserInfo = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder> 
          getClientGetUserInfoFieldBuilder() {
        if (clientGetUserInfoBuilder_ == null) {
          clientGetUserInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ClientGetUserInfo, com.kys.util.netty.proto.UserProto.ClientGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetUserInfoOrBuilder>(
                  getClientGetUserInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetUserInfo_ = null;
        }
        return clientGetUserInfoBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ClientNewLogin clientNewLogin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientNewLogin, com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder> clientNewLoginBuilder_;
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public boolean hasClientNewLogin() {
        return clientNewLoginBuilder_ != null || clientNewLogin_ != null;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientNewLogin getClientNewLogin() {
        if (clientNewLoginBuilder_ == null) {
          return clientNewLogin_ == null ? com.kys.util.netty.proto.LoginProto.ClientNewLogin.getDefaultInstance() : clientNewLogin_;
        } else {
          return clientNewLoginBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public Builder setClientNewLogin(com.kys.util.netty.proto.LoginProto.ClientNewLogin value) {
        if (clientNewLoginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientNewLogin_ = value;
          onChanged();
        } else {
          clientNewLoginBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public Builder setClientNewLogin(
          com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder builderForValue) {
        if (clientNewLoginBuilder_ == null) {
          clientNewLogin_ = builderForValue.build();
          onChanged();
        } else {
          clientNewLoginBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public Builder mergeClientNewLogin(com.kys.util.netty.proto.LoginProto.ClientNewLogin value) {
        if (clientNewLoginBuilder_ == null) {
          if (clientNewLogin_ != null) {
            clientNewLogin_ =
              com.kys.util.netty.proto.LoginProto.ClientNewLogin.newBuilder(clientNewLogin_).mergeFrom(value).buildPartial();
          } else {
            clientNewLogin_ = value;
          }
          onChanged();
        } else {
          clientNewLoginBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public Builder clearClientNewLogin() {
        if (clientNewLoginBuilder_ == null) {
          clientNewLogin_ = null;
          onChanged();
        } else {
          clientNewLogin_ = null;
          clientNewLoginBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder getClientNewLoginBuilder() {
        
        onChanged();
        return getClientNewLoginFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder getClientNewLoginOrBuilder() {
        if (clientNewLoginBuilder_ != null) {
          return clientNewLoginBuilder_.getMessageOrBuilder();
        } else {
          return clientNewLogin_ == null ?
              com.kys.util.netty.proto.LoginProto.ClientNewLogin.getDefaultInstance() : clientNewLogin_;
        }
      }
      /**
       * <pre>
       ** 新Client登录消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewLogin clientNewLogin = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ClientNewLogin, com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder> 
          getClientNewLoginFieldBuilder() {
        if (clientNewLoginBuilder_ == null) {
          clientNewLoginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ClientNewLogin, com.kys.util.netty.proto.LoginProto.ClientNewLogin.Builder, com.kys.util.netty.proto.LoginProto.ClientNewLoginOrBuilder>(
                  getClientNewLogin(),
                  getParentForChildren(),
                  isClean());
          clientNewLogin_ = null;
        }
        return clientNewLoginBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientQuickJoin clientQuickJoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientQuickJoin, com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder> clientQuickJoinBuilder_;
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public boolean hasClientQuickJoin() {
        return clientQuickJoinBuilder_ != null || clientQuickJoin_ != null;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQuickJoin getClientQuickJoin() {
        if (clientQuickJoinBuilder_ == null) {
          return clientQuickJoin_ == null ? com.kys.util.netty.proto.GameProto.ClientQuickJoin.getDefaultInstance() : clientQuickJoin_;
        } else {
          return clientQuickJoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public Builder setClientQuickJoin(com.kys.util.netty.proto.GameProto.ClientQuickJoin value) {
        if (clientQuickJoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQuickJoin_ = value;
          onChanged();
        } else {
          clientQuickJoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public Builder setClientQuickJoin(
          com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder builderForValue) {
        if (clientQuickJoinBuilder_ == null) {
          clientQuickJoin_ = builderForValue.build();
          onChanged();
        } else {
          clientQuickJoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public Builder mergeClientQuickJoin(com.kys.util.netty.proto.GameProto.ClientQuickJoin value) {
        if (clientQuickJoinBuilder_ == null) {
          if (clientQuickJoin_ != null) {
            clientQuickJoin_ =
              com.kys.util.netty.proto.GameProto.ClientQuickJoin.newBuilder(clientQuickJoin_).mergeFrom(value).buildPartial();
          } else {
            clientQuickJoin_ = value;
          }
          onChanged();
        } else {
          clientQuickJoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public Builder clearClientQuickJoin() {
        if (clientQuickJoinBuilder_ == null) {
          clientQuickJoin_ = null;
          onChanged();
        } else {
          clientQuickJoin_ = null;
          clientQuickJoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder getClientQuickJoinBuilder() {
        
        onChanged();
        return getClientQuickJoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder getClientQuickJoinOrBuilder() {
        if (clientQuickJoinBuilder_ != null) {
          return clientQuickJoinBuilder_.getMessageOrBuilder();
        } else {
          return clientQuickJoin_ == null ?
              com.kys.util.netty.proto.GameProto.ClientQuickJoin.getDefaultInstance() : clientQuickJoin_;
        }
      }
      /**
       * <pre>
       ** 加入快速匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQuickJoin clientQuickJoin = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientQuickJoin, com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder> 
          getClientQuickJoinFieldBuilder() {
        if (clientQuickJoinBuilder_ == null) {
          clientQuickJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientQuickJoin, com.kys.util.netty.proto.GameProto.ClientQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ClientQuickJoinOrBuilder>(
                  getClientQuickJoin(),
                  getParentForChildren(),
                  isClean());
          clientQuickJoin_ = null;
        }
        return clientQuickJoinBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientEnterRoom clientEnterRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientEnterRoom, com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder> clientEnterRoomBuilder_;
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public boolean hasClientEnterRoom() {
        return clientEnterRoomBuilder_ != null || clientEnterRoom_ != null;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientEnterRoom getClientEnterRoom() {
        if (clientEnterRoomBuilder_ == null) {
          return clientEnterRoom_ == null ? com.kys.util.netty.proto.GameProto.ClientEnterRoom.getDefaultInstance() : clientEnterRoom_;
        } else {
          return clientEnterRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public Builder setClientEnterRoom(com.kys.util.netty.proto.GameProto.ClientEnterRoom value) {
        if (clientEnterRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientEnterRoom_ = value;
          onChanged();
        } else {
          clientEnterRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public Builder setClientEnterRoom(
          com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder builderForValue) {
        if (clientEnterRoomBuilder_ == null) {
          clientEnterRoom_ = builderForValue.build();
          onChanged();
        } else {
          clientEnterRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public Builder mergeClientEnterRoom(com.kys.util.netty.proto.GameProto.ClientEnterRoom value) {
        if (clientEnterRoomBuilder_ == null) {
          if (clientEnterRoom_ != null) {
            clientEnterRoom_ =
              com.kys.util.netty.proto.GameProto.ClientEnterRoom.newBuilder(clientEnterRoom_).mergeFrom(value).buildPartial();
          } else {
            clientEnterRoom_ = value;
          }
          onChanged();
        } else {
          clientEnterRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public Builder clearClientEnterRoom() {
        if (clientEnterRoomBuilder_ == null) {
          clientEnterRoom_ = null;
          onChanged();
        } else {
          clientEnterRoom_ = null;
          clientEnterRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder getClientEnterRoomBuilder() {
        
        onChanged();
        return getClientEnterRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder getClientEnterRoomOrBuilder() {
        if (clientEnterRoomBuilder_ != null) {
          return clientEnterRoomBuilder_.getMessageOrBuilder();
        } else {
          return clientEnterRoom_ == null ?
              com.kys.util.netty.proto.GameProto.ClientEnterRoom.getDefaultInstance() : clientEnterRoom_;
        }
      }
      /**
       * <pre>
       ** 连接上游戏服后，进入房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterRoom clientEnterRoom = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientEnterRoom, com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder> 
          getClientEnterRoomFieldBuilder() {
        if (clientEnterRoomBuilder_ == null) {
          clientEnterRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientEnterRoom, com.kys.util.netty.proto.GameProto.ClientEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ClientEnterRoomOrBuilder>(
                  getClientEnterRoom(),
                  getParentForChildren(),
                  isClean());
          clientEnterRoom_ = null;
        }
        return clientEnterRoomBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientDoCatch clientDoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientDoCatch, com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder, com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder> clientDoCatchBuilder_;
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public boolean hasClientDoCatch() {
        return clientDoCatchBuilder_ != null || clientDoCatch_ != null;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientDoCatch getClientDoCatch() {
        if (clientDoCatchBuilder_ == null) {
          return clientDoCatch_ == null ? com.kys.util.netty.proto.GameProto.ClientDoCatch.getDefaultInstance() : clientDoCatch_;
        } else {
          return clientDoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public Builder setClientDoCatch(com.kys.util.netty.proto.GameProto.ClientDoCatch value) {
        if (clientDoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDoCatch_ = value;
          onChanged();
        } else {
          clientDoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public Builder setClientDoCatch(
          com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder builderForValue) {
        if (clientDoCatchBuilder_ == null) {
          clientDoCatch_ = builderForValue.build();
          onChanged();
        } else {
          clientDoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public Builder mergeClientDoCatch(com.kys.util.netty.proto.GameProto.ClientDoCatch value) {
        if (clientDoCatchBuilder_ == null) {
          if (clientDoCatch_ != null) {
            clientDoCatch_ =
              com.kys.util.netty.proto.GameProto.ClientDoCatch.newBuilder(clientDoCatch_).mergeFrom(value).buildPartial();
          } else {
            clientDoCatch_ = value;
          }
          onChanged();
        } else {
          clientDoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public Builder clearClientDoCatch() {
        if (clientDoCatchBuilder_ == null) {
          clientDoCatch_ = null;
          onChanged();
        } else {
          clientDoCatch_ = null;
          clientDoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder getClientDoCatchBuilder() {
        
        onChanged();
        return getClientDoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder getClientDoCatchOrBuilder() {
        if (clientDoCatchBuilder_ != null) {
          return clientDoCatchBuilder_.getMessageOrBuilder();
        } else {
          return clientDoCatch_ == null ?
              com.kys.util.netty.proto.GameProto.ClientDoCatch.getDefaultInstance() : clientDoCatch_;
        }
      }
      /**
       * <pre>
       ** 叫分 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDoCatch clientDoCatch = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientDoCatch, com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder, com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder> 
          getClientDoCatchFieldBuilder() {
        if (clientDoCatchBuilder_ == null) {
          clientDoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientDoCatch, com.kys.util.netty.proto.GameProto.ClientDoCatch.Builder, com.kys.util.netty.proto.GameProto.ClientDoCatchOrBuilder>(
                  getClientDoCatch(),
                  getParentForChildren(),
                  isClean());
          clientDoCatch_ = null;
        }
        return clientDoCatchBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientPlayCards clientPlayCards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientPlayCards, com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder, com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder> clientPlayCardsBuilder_;
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public boolean hasClientPlayCards() {
        return clientPlayCardsBuilder_ != null || clientPlayCards_ != null;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientPlayCards getClientPlayCards() {
        if (clientPlayCardsBuilder_ == null) {
          return clientPlayCards_ == null ? com.kys.util.netty.proto.GameProto.ClientPlayCards.getDefaultInstance() : clientPlayCards_;
        } else {
          return clientPlayCardsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public Builder setClientPlayCards(com.kys.util.netty.proto.GameProto.ClientPlayCards value) {
        if (clientPlayCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientPlayCards_ = value;
          onChanged();
        } else {
          clientPlayCardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public Builder setClientPlayCards(
          com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder builderForValue) {
        if (clientPlayCardsBuilder_ == null) {
          clientPlayCards_ = builderForValue.build();
          onChanged();
        } else {
          clientPlayCardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public Builder mergeClientPlayCards(com.kys.util.netty.proto.GameProto.ClientPlayCards value) {
        if (clientPlayCardsBuilder_ == null) {
          if (clientPlayCards_ != null) {
            clientPlayCards_ =
              com.kys.util.netty.proto.GameProto.ClientPlayCards.newBuilder(clientPlayCards_).mergeFrom(value).buildPartial();
          } else {
            clientPlayCards_ = value;
          }
          onChanged();
        } else {
          clientPlayCardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public Builder clearClientPlayCards() {
        if (clientPlayCardsBuilder_ == null) {
          clientPlayCards_ = null;
          onChanged();
        } else {
          clientPlayCards_ = null;
          clientPlayCardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder getClientPlayCardsBuilder() {
        
        onChanged();
        return getClientPlayCardsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder getClientPlayCardsOrBuilder() {
        if (clientPlayCardsBuilder_ != null) {
          return clientPlayCardsBuilder_.getMessageOrBuilder();
        } else {
          return clientPlayCards_ == null ?
              com.kys.util.netty.proto.GameProto.ClientPlayCards.getDefaultInstance() : clientPlayCards_;
        }
      }
      /**
       * <pre>
       ** 出牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayCards clientPlayCards = 103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientPlayCards, com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder, com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder> 
          getClientPlayCardsFieldBuilder() {
        if (clientPlayCardsBuilder_ == null) {
          clientPlayCardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientPlayCards, com.kys.util.netty.proto.GameProto.ClientPlayCards.Builder, com.kys.util.netty.proto.GameProto.ClientPlayCardsOrBuilder>(
                  getClientPlayCards(),
                  getParentForChildren(),
                  isClean());
          clientPlayCards_ = null;
        }
        return clientPlayCardsBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientRecoverGame clientRecoverGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientRecoverGame, com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder> clientRecoverGameBuilder_;
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public boolean hasClientRecoverGame() {
        return clientRecoverGameBuilder_ != null || clientRecoverGame_ != null;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRecoverGame getClientRecoverGame() {
        if (clientRecoverGameBuilder_ == null) {
          return clientRecoverGame_ == null ? com.kys.util.netty.proto.GameProto.ClientRecoverGame.getDefaultInstance() : clientRecoverGame_;
        } else {
          return clientRecoverGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public Builder setClientRecoverGame(com.kys.util.netty.proto.GameProto.ClientRecoverGame value) {
        if (clientRecoverGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientRecoverGame_ = value;
          onChanged();
        } else {
          clientRecoverGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public Builder setClientRecoverGame(
          com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder builderForValue) {
        if (clientRecoverGameBuilder_ == null) {
          clientRecoverGame_ = builderForValue.build();
          onChanged();
        } else {
          clientRecoverGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public Builder mergeClientRecoverGame(com.kys.util.netty.proto.GameProto.ClientRecoverGame value) {
        if (clientRecoverGameBuilder_ == null) {
          if (clientRecoverGame_ != null) {
            clientRecoverGame_ =
              com.kys.util.netty.proto.GameProto.ClientRecoverGame.newBuilder(clientRecoverGame_).mergeFrom(value).buildPartial();
          } else {
            clientRecoverGame_ = value;
          }
          onChanged();
        } else {
          clientRecoverGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public Builder clearClientRecoverGame() {
        if (clientRecoverGameBuilder_ == null) {
          clientRecoverGame_ = null;
          onChanged();
        } else {
          clientRecoverGame_ = null;
          clientRecoverGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder getClientRecoverGameBuilder() {
        
        onChanged();
        return getClientRecoverGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder getClientRecoverGameOrBuilder() {
        if (clientRecoverGameBuilder_ != null) {
          return clientRecoverGameBuilder_.getMessageOrBuilder();
        } else {
          return clientRecoverGame_ == null ?
              com.kys.util.netty.proto.GameProto.ClientRecoverGame.getDefaultInstance() : clientRecoverGame_;
        }
      }
      /**
       * <pre>
       ** 客户端掉线后，恢复游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRecoverGame clientRecoverGame = 104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientRecoverGame, com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder> 
          getClientRecoverGameFieldBuilder() {
        if (clientRecoverGameBuilder_ == null) {
          clientRecoverGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientRecoverGame, com.kys.util.netty.proto.GameProto.ClientRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ClientRecoverGameOrBuilder>(
                  getClientRecoverGame(),
                  getParentForChildren(),
                  isClean());
          clientRecoverGame_ = null;
        }
        return clientRecoverGameBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientAutoPlay clientAutoPlay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientAutoPlay, com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder> clientAutoPlayBuilder_;
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public boolean hasClientAutoPlay() {
        return clientAutoPlayBuilder_ != null || clientAutoPlay_ != null;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientAutoPlay getClientAutoPlay() {
        if (clientAutoPlayBuilder_ == null) {
          return clientAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.ClientAutoPlay.getDefaultInstance() : clientAutoPlay_;
        } else {
          return clientAutoPlayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public Builder setClientAutoPlay(com.kys.util.netty.proto.GameProto.ClientAutoPlay value) {
        if (clientAutoPlayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientAutoPlay_ = value;
          onChanged();
        } else {
          clientAutoPlayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public Builder setClientAutoPlay(
          com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder builderForValue) {
        if (clientAutoPlayBuilder_ == null) {
          clientAutoPlay_ = builderForValue.build();
          onChanged();
        } else {
          clientAutoPlayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public Builder mergeClientAutoPlay(com.kys.util.netty.proto.GameProto.ClientAutoPlay value) {
        if (clientAutoPlayBuilder_ == null) {
          if (clientAutoPlay_ != null) {
            clientAutoPlay_ =
              com.kys.util.netty.proto.GameProto.ClientAutoPlay.newBuilder(clientAutoPlay_).mergeFrom(value).buildPartial();
          } else {
            clientAutoPlay_ = value;
          }
          onChanged();
        } else {
          clientAutoPlayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public Builder clearClientAutoPlay() {
        if (clientAutoPlayBuilder_ == null) {
          clientAutoPlay_ = null;
          onChanged();
        } else {
          clientAutoPlay_ = null;
          clientAutoPlayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder getClientAutoPlayBuilder() {
        
        onChanged();
        return getClientAutoPlayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder getClientAutoPlayOrBuilder() {
        if (clientAutoPlayBuilder_ != null) {
          return clientAutoPlayBuilder_.getMessageOrBuilder();
        } else {
          return clientAutoPlay_ == null ?
              com.kys.util.netty.proto.GameProto.ClientAutoPlay.getDefaultInstance() : clientAutoPlay_;
        }
      }
      /**
       * <pre>
       ** 客户端托管 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAutoPlay clientAutoPlay = 105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientAutoPlay, com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder> 
          getClientAutoPlayFieldBuilder() {
        if (clientAutoPlayBuilder_ == null) {
          clientAutoPlayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientAutoPlay, com.kys.util.netty.proto.GameProto.ClientAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ClientAutoPlayOrBuilder>(
                  getClientAutoPlay(),
                  getParentForChildren(),
                  isClean());
          clientAutoPlay_ = null;
        }
        return clientAutoPlayBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientLeaveRoom clientLeaveRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientLeaveRoom, com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder> clientLeaveRoomBuilder_;
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public boolean hasClientLeaveRoom() {
        return clientLeaveRoomBuilder_ != null || clientLeaveRoom_ != null;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientLeaveRoom getClientLeaveRoom() {
        if (clientLeaveRoomBuilder_ == null) {
          return clientLeaveRoom_ == null ? com.kys.util.netty.proto.GameProto.ClientLeaveRoom.getDefaultInstance() : clientLeaveRoom_;
        } else {
          return clientLeaveRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public Builder setClientLeaveRoom(com.kys.util.netty.proto.GameProto.ClientLeaveRoom value) {
        if (clientLeaveRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientLeaveRoom_ = value;
          onChanged();
        } else {
          clientLeaveRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public Builder setClientLeaveRoom(
          com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder builderForValue) {
        if (clientLeaveRoomBuilder_ == null) {
          clientLeaveRoom_ = builderForValue.build();
          onChanged();
        } else {
          clientLeaveRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public Builder mergeClientLeaveRoom(com.kys.util.netty.proto.GameProto.ClientLeaveRoom value) {
        if (clientLeaveRoomBuilder_ == null) {
          if (clientLeaveRoom_ != null) {
            clientLeaveRoom_ =
              com.kys.util.netty.proto.GameProto.ClientLeaveRoom.newBuilder(clientLeaveRoom_).mergeFrom(value).buildPartial();
          } else {
            clientLeaveRoom_ = value;
          }
          onChanged();
        } else {
          clientLeaveRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public Builder clearClientLeaveRoom() {
        if (clientLeaveRoomBuilder_ == null) {
          clientLeaveRoom_ = null;
          onChanged();
        } else {
          clientLeaveRoom_ = null;
          clientLeaveRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder getClientLeaveRoomBuilder() {
        
        onChanged();
        return getClientLeaveRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder getClientLeaveRoomOrBuilder() {
        if (clientLeaveRoomBuilder_ != null) {
          return clientLeaveRoomBuilder_.getMessageOrBuilder();
        } else {
          return clientLeaveRoom_ == null ?
              com.kys.util.netty.proto.GameProto.ClientLeaveRoom.getDefaultInstance() : clientLeaveRoom_;
        }
      }
      /**
       * <pre>
       ** 客户端离开房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLeaveRoom clientLeaveRoom = 106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientLeaveRoom, com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder> 
          getClientLeaveRoomFieldBuilder() {
        if (clientLeaveRoomBuilder_ == null) {
          clientLeaveRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientLeaveRoom, com.kys.util.netty.proto.GameProto.ClientLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ClientLeaveRoomOrBuilder>(
                  getClientLeaveRoom(),
                  getParentForChildren(),
                  isClean());
          clientLeaveRoom_ = null;
        }
        return clientLeaveRoomBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientCancleJoin clientCancleJoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientCancleJoin, com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder> clientCancleJoinBuilder_;
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public boolean hasClientCancleJoin() {
        return clientCancleJoinBuilder_ != null || clientCancleJoin_ != null;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientCancleJoin getClientCancleJoin() {
        if (clientCancleJoinBuilder_ == null) {
          return clientCancleJoin_ == null ? com.kys.util.netty.proto.GameProto.ClientCancleJoin.getDefaultInstance() : clientCancleJoin_;
        } else {
          return clientCancleJoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public Builder setClientCancleJoin(com.kys.util.netty.proto.GameProto.ClientCancleJoin value) {
        if (clientCancleJoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientCancleJoin_ = value;
          onChanged();
        } else {
          clientCancleJoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public Builder setClientCancleJoin(
          com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder builderForValue) {
        if (clientCancleJoinBuilder_ == null) {
          clientCancleJoin_ = builderForValue.build();
          onChanged();
        } else {
          clientCancleJoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public Builder mergeClientCancleJoin(com.kys.util.netty.proto.GameProto.ClientCancleJoin value) {
        if (clientCancleJoinBuilder_ == null) {
          if (clientCancleJoin_ != null) {
            clientCancleJoin_ =
              com.kys.util.netty.proto.GameProto.ClientCancleJoin.newBuilder(clientCancleJoin_).mergeFrom(value).buildPartial();
          } else {
            clientCancleJoin_ = value;
          }
          onChanged();
        } else {
          clientCancleJoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public Builder clearClientCancleJoin() {
        if (clientCancleJoinBuilder_ == null) {
          clientCancleJoin_ = null;
          onChanged();
        } else {
          clientCancleJoin_ = null;
          clientCancleJoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder getClientCancleJoinBuilder() {
        
        onChanged();
        return getClientCancleJoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder getClientCancleJoinOrBuilder() {
        if (clientCancleJoinBuilder_ != null) {
          return clientCancleJoinBuilder_.getMessageOrBuilder();
        } else {
          return clientCancleJoin_ == null ?
              com.kys.util.netty.proto.GameProto.ClientCancleJoin.getDefaultInstance() : clientCancleJoin_;
        }
      }
      /**
       * <pre>
       ** 客户端取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCancleJoin clientCancleJoin = 107;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientCancleJoin, com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder> 
          getClientCancleJoinFieldBuilder() {
        if (clientCancleJoinBuilder_ == null) {
          clientCancleJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientCancleJoin, com.kys.util.netty.proto.GameProto.ClientCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ClientCancleJoinOrBuilder>(
                  getClientCancleJoin(),
                  getParentForChildren(),
                  isClean());
          clientCancleJoin_ = null;
        }
        return clientCancleJoinBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientQueryIndex clientQueryIndex_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientQueryIndex, com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder> clientQueryIndexBuilder_;
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public boolean hasClientQueryIndex() {
        return clientQueryIndexBuilder_ != null || clientQueryIndex_ != null;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQueryIndex getClientQueryIndex() {
        if (clientQueryIndexBuilder_ == null) {
          return clientQueryIndex_ == null ? com.kys.util.netty.proto.GameProto.ClientQueryIndex.getDefaultInstance() : clientQueryIndex_;
        } else {
          return clientQueryIndexBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public Builder setClientQueryIndex(com.kys.util.netty.proto.GameProto.ClientQueryIndex value) {
        if (clientQueryIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryIndex_ = value;
          onChanged();
        } else {
          clientQueryIndexBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public Builder setClientQueryIndex(
          com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder builderForValue) {
        if (clientQueryIndexBuilder_ == null) {
          clientQueryIndex_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryIndexBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public Builder mergeClientQueryIndex(com.kys.util.netty.proto.GameProto.ClientQueryIndex value) {
        if (clientQueryIndexBuilder_ == null) {
          if (clientQueryIndex_ != null) {
            clientQueryIndex_ =
              com.kys.util.netty.proto.GameProto.ClientQueryIndex.newBuilder(clientQueryIndex_).mergeFrom(value).buildPartial();
          } else {
            clientQueryIndex_ = value;
          }
          onChanged();
        } else {
          clientQueryIndexBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public Builder clearClientQueryIndex() {
        if (clientQueryIndexBuilder_ == null) {
          clientQueryIndex_ = null;
          onChanged();
        } else {
          clientQueryIndex_ = null;
          clientQueryIndexBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder getClientQueryIndexBuilder() {
        
        onChanged();
        return getClientQueryIndexFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder getClientQueryIndexOrBuilder() {
        if (clientQueryIndexBuilder_ != null) {
          return clientQueryIndexBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryIndex_ == null ?
              com.kys.util.netty.proto.GameProto.ClientQueryIndex.getDefaultInstance() : clientQueryIndex_;
        }
      }
      /**
       * <pre>
       ** 客户端查询序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryIndex clientQueryIndex = 108;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientQueryIndex, com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder> 
          getClientQueryIndexFieldBuilder() {
        if (clientQueryIndexBuilder_ == null) {
          clientQueryIndexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientQueryIndex, com.kys.util.netty.proto.GameProto.ClientQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ClientQueryIndexOrBuilder>(
                  getClientQueryIndex(),
                  getParentForChildren(),
                  isClean());
          clientQueryIndex_ = null;
        }
        return clientQueryIndexBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ClientRetryReturnGame clientRetryReturnGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientRetryReturnGame, com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder> clientRetryReturnGameBuilder_;
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public boolean hasClientRetryReturnGame() {
        return clientRetryReturnGameBuilder_ != null || clientRetryReturnGame_ != null;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRetryReturnGame getClientRetryReturnGame() {
        if (clientRetryReturnGameBuilder_ == null) {
          return clientRetryReturnGame_ == null ? com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.getDefaultInstance() : clientRetryReturnGame_;
        } else {
          return clientRetryReturnGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public Builder setClientRetryReturnGame(com.kys.util.netty.proto.GameProto.ClientRetryReturnGame value) {
        if (clientRetryReturnGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientRetryReturnGame_ = value;
          onChanged();
        } else {
          clientRetryReturnGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public Builder setClientRetryReturnGame(
          com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder builderForValue) {
        if (clientRetryReturnGameBuilder_ == null) {
          clientRetryReturnGame_ = builderForValue.build();
          onChanged();
        } else {
          clientRetryReturnGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public Builder mergeClientRetryReturnGame(com.kys.util.netty.proto.GameProto.ClientRetryReturnGame value) {
        if (clientRetryReturnGameBuilder_ == null) {
          if (clientRetryReturnGame_ != null) {
            clientRetryReturnGame_ =
              com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.newBuilder(clientRetryReturnGame_).mergeFrom(value).buildPartial();
          } else {
            clientRetryReturnGame_ = value;
          }
          onChanged();
        } else {
          clientRetryReturnGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public Builder clearClientRetryReturnGame() {
        if (clientRetryReturnGameBuilder_ == null) {
          clientRetryReturnGame_ = null;
          onChanged();
        } else {
          clientRetryReturnGame_ = null;
          clientRetryReturnGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder getClientRetryReturnGameBuilder() {
        
        onChanged();
        return getClientRetryReturnGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder getClientRetryReturnGameOrBuilder() {
        if (clientRetryReturnGameBuilder_ != null) {
          return clientRetryReturnGameBuilder_.getMessageOrBuilder();
        } else {
          return clientRetryReturnGame_ == null ?
              com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.getDefaultInstance() : clientRetryReturnGame_;
        }
      }
      /**
       * <pre>
       ** 客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRetryReturnGame clientRetryReturnGame = 109;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ClientRetryReturnGame, com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder> 
          getClientRetryReturnGameFieldBuilder() {
        if (clientRetryReturnGameBuilder_ == null) {
          clientRetryReturnGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ClientRetryReturnGame, com.kys.util.netty.proto.GameProto.ClientRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ClientRetryReturnGameOrBuilder>(
                  getClientRetryReturnGame(),
                  getParentForChildren(),
                  isClean());
          clientRetryReturnGame_ = null;
        }
        return clientRetryReturnGameBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetRankList clientGetRankList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRankList, com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder, com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder> clientGetRankListBuilder_;
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public boolean hasClientGetRankList() {
        return clientGetRankListBuilder_ != null || clientGetRankList_ != null;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRankList getClientGetRankList() {
        if (clientGetRankListBuilder_ == null) {
          return clientGetRankList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRankList.getDefaultInstance() : clientGetRankList_;
        } else {
          return clientGetRankListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public Builder setClientGetRankList(com.kys.util.netty.proto.HallProto.ClientGetRankList value) {
        if (clientGetRankListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetRankList_ = value;
          onChanged();
        } else {
          clientGetRankListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public Builder setClientGetRankList(
          com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder builderForValue) {
        if (clientGetRankListBuilder_ == null) {
          clientGetRankList_ = builderForValue.build();
          onChanged();
        } else {
          clientGetRankListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public Builder mergeClientGetRankList(com.kys.util.netty.proto.HallProto.ClientGetRankList value) {
        if (clientGetRankListBuilder_ == null) {
          if (clientGetRankList_ != null) {
            clientGetRankList_ =
              com.kys.util.netty.proto.HallProto.ClientGetRankList.newBuilder(clientGetRankList_).mergeFrom(value).buildPartial();
          } else {
            clientGetRankList_ = value;
          }
          onChanged();
        } else {
          clientGetRankListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public Builder clearClientGetRankList() {
        if (clientGetRankListBuilder_ == null) {
          clientGetRankList_ = null;
          onChanged();
        } else {
          clientGetRankList_ = null;
          clientGetRankListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder getClientGetRankListBuilder() {
        
        onChanged();
        return getClientGetRankListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder getClientGetRankListOrBuilder() {
        if (clientGetRankListBuilder_ != null) {
          return clientGetRankListBuilder_.getMessageOrBuilder();
        } else {
          return clientGetRankList_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetRankList.getDefaultInstance() : clientGetRankList_;
        }
      }
      /**
       * <pre>
       ** 获取排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRankList clientGetRankList = 200;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRankList, com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder, com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder> 
          getClientGetRankListFieldBuilder() {
        if (clientGetRankListBuilder_ == null) {
          clientGetRankListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetRankList, com.kys.util.netty.proto.HallProto.ClientGetRankList.Builder, com.kys.util.netty.proto.HallProto.ClientGetRankListOrBuilder>(
                  getClientGetRankList(),
                  getParentForChildren(),
                  isClean());
          clientGetRankList_ = null;
        }
        return clientGetRankListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList clientGetSignupRewardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList, com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetSignupRewardListOrBuilder> clientGetSignupRewardListBuilder_;
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      public boolean hasClientGetSignupRewardList() {
        return clientGetSignupRewardListBuilder_ != null || clientGetSignupRewardList_ != null;
      }
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList getClientGetSignupRewardList() {
        if (clientGetSignupRewardListBuilder_ == null) {
          return clientGetSignupRewardList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.getDefaultInstance() : clientGetSignupRewardList_;
        } else {
          return clientGetSignupRewardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      public Builder setClientGetSignupRewardList(com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList value) {
        if (clientGetSignupRewardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetSignupRewardList_ = value;
          onChanged();
        } else {
          clientGetSignupRewardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      public Builder setClientGetSignupRewardList(
          com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.Builder builderForValue) {
        if (clientGetSignupRewardListBuilder_ == null) {
          clientGetSignupRewardList_ = builderForValue.build();
          onChanged();
        } else {
          clientGetSignupRewardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      public Builder mergeClientGetSignupRewardList(com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList value) {
        if (clientGetSignupRewardListBuilder_ == null) {
          if (clientGetSignupRewardList_ != null) {
            clientGetSignupRewardList_ =
              com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.newBuilder(clientGetSignupRewardList_).mergeFrom(value).buildPartial();
          } else {
            clientGetSignupRewardList_ = value;
          }
          onChanged();
        } else {
          clientGetSignupRewardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      public Builder clearClientGetSignupRewardList() {
        if (clientGetSignupRewardListBuilder_ == null) {
          clientGetSignupRewardList_ = null;
          onChanged();
        } else {
          clientGetSignupRewardList_ = null;
          clientGetSignupRewardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.Builder getClientGetSignupRewardListBuilder() {
        
        onChanged();
        return getClientGetSignupRewardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetSignupRewardListOrBuilder getClientGetSignupRewardListOrBuilder() {
        if (clientGetSignupRewardListBuilder_ != null) {
          return clientGetSignupRewardListBuilder_.getMessageOrBuilder();
        } else {
          return clientGetSignupRewardList_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.getDefaultInstance() : clientGetSignupRewardList_;
        }
      }
      /**
       * <pre>
       ** Client获取签到奖励信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSignupRewardList clientGetSignupRewardList = 201;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList, com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetSignupRewardListOrBuilder> 
          getClientGetSignupRewardListFieldBuilder() {
        if (clientGetSignupRewardListBuilder_ == null) {
          clientGetSignupRewardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList, com.kys.util.netty.proto.HallProto.ClientGetSignupRewardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetSignupRewardListOrBuilder>(
                  getClientGetSignupRewardList(),
                  getParentForChildren(),
                  isClean());
          clientGetSignupRewardList_ = null;
        }
        return clientGetSignupRewardListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetHallInfo clientGetHallInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetHallInfo, com.kys.util.netty.proto.HallProto.ClientGetHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetHallInfoOrBuilder> clientGetHallInfoBuilder_;
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      public boolean hasClientGetHallInfo() {
        return clientGetHallInfoBuilder_ != null || clientGetHallInfo_ != null;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHallInfo getClientGetHallInfo() {
        if (clientGetHallInfoBuilder_ == null) {
          return clientGetHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetHallInfo.getDefaultInstance() : clientGetHallInfo_;
        } else {
          return clientGetHallInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      public Builder setClientGetHallInfo(com.kys.util.netty.proto.HallProto.ClientGetHallInfo value) {
        if (clientGetHallInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetHallInfo_ = value;
          onChanged();
        } else {
          clientGetHallInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      public Builder setClientGetHallInfo(
          com.kys.util.netty.proto.HallProto.ClientGetHallInfo.Builder builderForValue) {
        if (clientGetHallInfoBuilder_ == null) {
          clientGetHallInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetHallInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      public Builder mergeClientGetHallInfo(com.kys.util.netty.proto.HallProto.ClientGetHallInfo value) {
        if (clientGetHallInfoBuilder_ == null) {
          if (clientGetHallInfo_ != null) {
            clientGetHallInfo_ =
              com.kys.util.netty.proto.HallProto.ClientGetHallInfo.newBuilder(clientGetHallInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetHallInfo_ = value;
          }
          onChanged();
        } else {
          clientGetHallInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      public Builder clearClientGetHallInfo() {
        if (clientGetHallInfoBuilder_ == null) {
          clientGetHallInfo_ = null;
          onChanged();
        } else {
          clientGetHallInfo_ = null;
          clientGetHallInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHallInfo.Builder getClientGetHallInfoBuilder() {
        
        onChanged();
        return getClientGetHallInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHallInfoOrBuilder getClientGetHallInfoOrBuilder() {
        if (clientGetHallInfoBuilder_ != null) {
          return clientGetHallInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetHallInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetHallInfo.getDefaultInstance() : clientGetHallInfo_;
        }
      }
      /**
       * <pre>
       ** 获取玩家大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHallInfo clientGetHallInfo = 202;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetHallInfo, com.kys.util.netty.proto.HallProto.ClientGetHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetHallInfoOrBuilder> 
          getClientGetHallInfoFieldBuilder() {
        if (clientGetHallInfoBuilder_ == null) {
          clientGetHallInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetHallInfo, com.kys.util.netty.proto.HallProto.ClientGetHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetHallInfoOrBuilder>(
                  getClientGetHallInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetHallInfo_ = null;
        }
        return clientGetHallInfoBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientSignup clientSignup_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSignup, com.kys.util.netty.proto.HallProto.ClientSignup.Builder, com.kys.util.netty.proto.HallProto.ClientSignupOrBuilder> clientSignupBuilder_;
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      public boolean hasClientSignup() {
        return clientSignupBuilder_ != null || clientSignup_ != null;
      }
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSignup getClientSignup() {
        if (clientSignupBuilder_ == null) {
          return clientSignup_ == null ? com.kys.util.netty.proto.HallProto.ClientSignup.getDefaultInstance() : clientSignup_;
        } else {
          return clientSignupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      public Builder setClientSignup(com.kys.util.netty.proto.HallProto.ClientSignup value) {
        if (clientSignupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSignup_ = value;
          onChanged();
        } else {
          clientSignupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      public Builder setClientSignup(
          com.kys.util.netty.proto.HallProto.ClientSignup.Builder builderForValue) {
        if (clientSignupBuilder_ == null) {
          clientSignup_ = builderForValue.build();
          onChanged();
        } else {
          clientSignupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      public Builder mergeClientSignup(com.kys.util.netty.proto.HallProto.ClientSignup value) {
        if (clientSignupBuilder_ == null) {
          if (clientSignup_ != null) {
            clientSignup_ =
              com.kys.util.netty.proto.HallProto.ClientSignup.newBuilder(clientSignup_).mergeFrom(value).buildPartial();
          } else {
            clientSignup_ = value;
          }
          onChanged();
        } else {
          clientSignupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      public Builder clearClientSignup() {
        if (clientSignupBuilder_ == null) {
          clientSignup_ = null;
          onChanged();
        } else {
          clientSignup_ = null;
          clientSignupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSignup.Builder getClientSignupBuilder() {
        
        onChanged();
        return getClientSignupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSignupOrBuilder getClientSignupOrBuilder() {
        if (clientSignupBuilder_ != null) {
          return clientSignupBuilder_.getMessageOrBuilder();
        } else {
          return clientSignup_ == null ?
              com.kys.util.netty.proto.HallProto.ClientSignup.getDefaultInstance() : clientSignup_;
        }
      }
      /**
       * <pre>
       ** 签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSignup clientSignup = 203;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSignup, com.kys.util.netty.proto.HallProto.ClientSignup.Builder, com.kys.util.netty.proto.HallProto.ClientSignupOrBuilder> 
          getClientSignupFieldBuilder() {
        if (clientSignupBuilder_ == null) {
          clientSignupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientSignup, com.kys.util.netty.proto.HallProto.ClientSignup.Builder, com.kys.util.netty.proto.HallProto.ClientSignupOrBuilder>(
                  getClientSignup(),
                  getParentForChildren(),
                  isClean());
          clientSignup_ = null;
        }
        return clientSignupBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientDrawWinCup clientDrawWinCup_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDrawWinCup, com.kys.util.netty.proto.HallProto.ClientDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientDrawWinCupOrBuilder> clientDrawWinCupBuilder_;
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      public boolean hasClientDrawWinCup() {
        return clientDrawWinCupBuilder_ != null || clientDrawWinCup_ != null;
      }
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDrawWinCup getClientDrawWinCup() {
        if (clientDrawWinCupBuilder_ == null) {
          return clientDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ClientDrawWinCup.getDefaultInstance() : clientDrawWinCup_;
        } else {
          return clientDrawWinCupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      public Builder setClientDrawWinCup(com.kys.util.netty.proto.HallProto.ClientDrawWinCup value) {
        if (clientDrawWinCupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDrawWinCup_ = value;
          onChanged();
        } else {
          clientDrawWinCupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      public Builder setClientDrawWinCup(
          com.kys.util.netty.proto.HallProto.ClientDrawWinCup.Builder builderForValue) {
        if (clientDrawWinCupBuilder_ == null) {
          clientDrawWinCup_ = builderForValue.build();
          onChanged();
        } else {
          clientDrawWinCupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      public Builder mergeClientDrawWinCup(com.kys.util.netty.proto.HallProto.ClientDrawWinCup value) {
        if (clientDrawWinCupBuilder_ == null) {
          if (clientDrawWinCup_ != null) {
            clientDrawWinCup_ =
              com.kys.util.netty.proto.HallProto.ClientDrawWinCup.newBuilder(clientDrawWinCup_).mergeFrom(value).buildPartial();
          } else {
            clientDrawWinCup_ = value;
          }
          onChanged();
        } else {
          clientDrawWinCupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      public Builder clearClientDrawWinCup() {
        if (clientDrawWinCupBuilder_ == null) {
          clientDrawWinCup_ = null;
          onChanged();
        } else {
          clientDrawWinCup_ = null;
          clientDrawWinCupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDrawWinCup.Builder getClientDrawWinCupBuilder() {
        
        onChanged();
        return getClientDrawWinCupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDrawWinCupOrBuilder getClientDrawWinCupOrBuilder() {
        if (clientDrawWinCupBuilder_ != null) {
          return clientDrawWinCupBuilder_.getMessageOrBuilder();
        } else {
          return clientDrawWinCup_ == null ?
              com.kys.util.netty.proto.HallProto.ClientDrawWinCup.getDefaultInstance() : clientDrawWinCup_;
        }
      }
      /**
       * <pre>
       ** 客户端请求抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDrawWinCup clientDrawWinCup = 204;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDrawWinCup, com.kys.util.netty.proto.HallProto.ClientDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientDrawWinCupOrBuilder> 
          getClientDrawWinCupFieldBuilder() {
        if (clientDrawWinCupBuilder_ == null) {
          clientDrawWinCupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientDrawWinCup, com.kys.util.netty.proto.HallProto.ClientDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientDrawWinCupOrBuilder>(
                  getClientDrawWinCup(),
                  getParentForChildren(),
                  isClean());
          clientDrawWinCup_ = null;
        }
        return clientDrawWinCupBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetRoomConfig clientGetRoomConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder> clientGetRoomConfigBuilder_;
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public boolean hasClientGetRoomConfig() {
        return clientGetRoomConfigBuilder_ != null || clientGetRoomConfig_ != null;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomConfig getClientGetRoomConfig() {
        if (clientGetRoomConfigBuilder_ == null) {
          return clientGetRoomConfig_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.getDefaultInstance() : clientGetRoomConfig_;
        } else {
          return clientGetRoomConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public Builder setClientGetRoomConfig(com.kys.util.netty.proto.HallProto.ClientGetRoomConfig value) {
        if (clientGetRoomConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetRoomConfig_ = value;
          onChanged();
        } else {
          clientGetRoomConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public Builder setClientGetRoomConfig(
          com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder builderForValue) {
        if (clientGetRoomConfigBuilder_ == null) {
          clientGetRoomConfig_ = builderForValue.build();
          onChanged();
        } else {
          clientGetRoomConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public Builder mergeClientGetRoomConfig(com.kys.util.netty.proto.HallProto.ClientGetRoomConfig value) {
        if (clientGetRoomConfigBuilder_ == null) {
          if (clientGetRoomConfig_ != null) {
            clientGetRoomConfig_ =
              com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.newBuilder(clientGetRoomConfig_).mergeFrom(value).buildPartial();
          } else {
            clientGetRoomConfig_ = value;
          }
          onChanged();
        } else {
          clientGetRoomConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public Builder clearClientGetRoomConfig() {
        if (clientGetRoomConfigBuilder_ == null) {
          clientGetRoomConfig_ = null;
          onChanged();
        } else {
          clientGetRoomConfig_ = null;
          clientGetRoomConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder getClientGetRoomConfigBuilder() {
        
        onChanged();
        return getClientGetRoomConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder getClientGetRoomConfigOrBuilder() {
        if (clientGetRoomConfigBuilder_ != null) {
          return clientGetRoomConfigBuilder_.getMessageOrBuilder();
        } else {
          return clientGetRoomConfig_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.getDefaultInstance() : clientGetRoomConfig_;
        }
      }
      /**
       * <pre>
       ** 客户端请求游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomConfig clientGetRoomConfig = 205;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder> 
          getClientGetRoomConfigFieldBuilder() {
        if (clientGetRoomConfigBuilder_ == null) {
          clientGetRoomConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetRoomConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomConfigOrBuilder>(
                  getClientGetRoomConfig(),
                  getParentForChildren(),
                  isClean());
          clientGetRoomConfig_ = null;
        }
        return clientGetRoomConfigBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientRewardMessage clientRewardMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientRewardMessage, com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder> clientRewardMessageBuilder_;
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public boolean hasClientRewardMessage() {
        return clientRewardMessageBuilder_ != null || clientRewardMessage_ != null;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientRewardMessage getClientRewardMessage() {
        if (clientRewardMessageBuilder_ == null) {
          return clientRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.ClientRewardMessage.getDefaultInstance() : clientRewardMessage_;
        } else {
          return clientRewardMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public Builder setClientRewardMessage(com.kys.util.netty.proto.HallProto.ClientRewardMessage value) {
        if (clientRewardMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientRewardMessage_ = value;
          onChanged();
        } else {
          clientRewardMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public Builder setClientRewardMessage(
          com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder builderForValue) {
        if (clientRewardMessageBuilder_ == null) {
          clientRewardMessage_ = builderForValue.build();
          onChanged();
        } else {
          clientRewardMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public Builder mergeClientRewardMessage(com.kys.util.netty.proto.HallProto.ClientRewardMessage value) {
        if (clientRewardMessageBuilder_ == null) {
          if (clientRewardMessage_ != null) {
            clientRewardMessage_ =
              com.kys.util.netty.proto.HallProto.ClientRewardMessage.newBuilder(clientRewardMessage_).mergeFrom(value).buildPartial();
          } else {
            clientRewardMessage_ = value;
          }
          onChanged();
        } else {
          clientRewardMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public Builder clearClientRewardMessage() {
        if (clientRewardMessageBuilder_ == null) {
          clientRewardMessage_ = null;
          onChanged();
        } else {
          clientRewardMessage_ = null;
          clientRewardMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder getClientRewardMessageBuilder() {
        
        onChanged();
        return getClientRewardMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder getClientRewardMessageOrBuilder() {
        if (clientRewardMessageBuilder_ != null) {
          return clientRewardMessageBuilder_.getMessageOrBuilder();
        } else {
          return clientRewardMessage_ == null ?
              com.kys.util.netty.proto.HallProto.ClientRewardMessage.getDefaultInstance() : clientRewardMessage_;
        }
      }
      /**
       * <pre>
       ** 客户端请求奖励公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientRewardMessage clientRewardMessage = 206;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientRewardMessage, com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder> 
          getClientRewardMessageFieldBuilder() {
        if (clientRewardMessageBuilder_ == null) {
          clientRewardMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientRewardMessage, com.kys.util.netty.proto.HallProto.ClientRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ClientRewardMessageOrBuilder>(
                  getClientRewardMessage(),
                  getParentForChildren(),
                  isClean());
          clientRewardMessage_ = null;
        }
        return clientRewardMessageBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig clientGetRoomCardConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfigOrBuilder> clientGetRoomCardConfigBuilder_;
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      public boolean hasClientGetRoomCardConfig() {
        return clientGetRoomCardConfigBuilder_ != null || clientGetRoomCardConfig_ != null;
      }
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig getClientGetRoomCardConfig() {
        if (clientGetRoomCardConfigBuilder_ == null) {
          return clientGetRoomCardConfig_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.getDefaultInstance() : clientGetRoomCardConfig_;
        } else {
          return clientGetRoomCardConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      public Builder setClientGetRoomCardConfig(com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig value) {
        if (clientGetRoomCardConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetRoomCardConfig_ = value;
          onChanged();
        } else {
          clientGetRoomCardConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      public Builder setClientGetRoomCardConfig(
          com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.Builder builderForValue) {
        if (clientGetRoomCardConfigBuilder_ == null) {
          clientGetRoomCardConfig_ = builderForValue.build();
          onChanged();
        } else {
          clientGetRoomCardConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      public Builder mergeClientGetRoomCardConfig(com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig value) {
        if (clientGetRoomCardConfigBuilder_ == null) {
          if (clientGetRoomCardConfig_ != null) {
            clientGetRoomCardConfig_ =
              com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.newBuilder(clientGetRoomCardConfig_).mergeFrom(value).buildPartial();
          } else {
            clientGetRoomCardConfig_ = value;
          }
          onChanged();
        } else {
          clientGetRoomCardConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      public Builder clearClientGetRoomCardConfig() {
        if (clientGetRoomCardConfigBuilder_ == null) {
          clientGetRoomCardConfig_ = null;
          onChanged();
        } else {
          clientGetRoomCardConfig_ = null;
          clientGetRoomCardConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.Builder getClientGetRoomCardConfigBuilder() {
        
        onChanged();
        return getClientGetRoomCardConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfigOrBuilder getClientGetRoomCardConfigOrBuilder() {
        if (clientGetRoomCardConfigBuilder_ != null) {
          return clientGetRoomCardConfigBuilder_.getMessageOrBuilder();
        } else {
          return clientGetRoomCardConfig_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.getDefaultInstance() : clientGetRoomCardConfig_;
        }
      }
      /**
       * <pre>
       ** 客户端请求房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomCardConfig clientGetRoomCardConfig = 207;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfigOrBuilder> 
          getClientGetRoomCardConfigFieldBuilder() {
        if (clientGetRoomCardConfigBuilder_ == null) {
          clientGetRoomCardConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig, com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfig.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomCardConfigOrBuilder>(
                  getClientGetRoomCardConfig(),
                  getParentForChildren(),
                  isClean());
          clientGetRoomCardConfig_ = null;
        }
        return clientGetRoomCardConfigBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientCreateRoom clientCreateRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientCreateRoom, com.kys.util.netty.proto.HallProto.ClientCreateRoom.Builder, com.kys.util.netty.proto.HallProto.ClientCreateRoomOrBuilder> clientCreateRoomBuilder_;
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      public boolean hasClientCreateRoom() {
        return clientCreateRoomBuilder_ != null || clientCreateRoom_ != null;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCreateRoom getClientCreateRoom() {
        if (clientCreateRoomBuilder_ == null) {
          return clientCreateRoom_ == null ? com.kys.util.netty.proto.HallProto.ClientCreateRoom.getDefaultInstance() : clientCreateRoom_;
        } else {
          return clientCreateRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      public Builder setClientCreateRoom(com.kys.util.netty.proto.HallProto.ClientCreateRoom value) {
        if (clientCreateRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientCreateRoom_ = value;
          onChanged();
        } else {
          clientCreateRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      public Builder setClientCreateRoom(
          com.kys.util.netty.proto.HallProto.ClientCreateRoom.Builder builderForValue) {
        if (clientCreateRoomBuilder_ == null) {
          clientCreateRoom_ = builderForValue.build();
          onChanged();
        } else {
          clientCreateRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      public Builder mergeClientCreateRoom(com.kys.util.netty.proto.HallProto.ClientCreateRoom value) {
        if (clientCreateRoomBuilder_ == null) {
          if (clientCreateRoom_ != null) {
            clientCreateRoom_ =
              com.kys.util.netty.proto.HallProto.ClientCreateRoom.newBuilder(clientCreateRoom_).mergeFrom(value).buildPartial();
          } else {
            clientCreateRoom_ = value;
          }
          onChanged();
        } else {
          clientCreateRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      public Builder clearClientCreateRoom() {
        if (clientCreateRoomBuilder_ == null) {
          clientCreateRoom_ = null;
          onChanged();
        } else {
          clientCreateRoom_ = null;
          clientCreateRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCreateRoom.Builder getClientCreateRoomBuilder() {
        
        onChanged();
        return getClientCreateRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCreateRoomOrBuilder getClientCreateRoomOrBuilder() {
        if (clientCreateRoomBuilder_ != null) {
          return clientCreateRoomBuilder_.getMessageOrBuilder();
        } else {
          return clientCreateRoom_ == null ?
              com.kys.util.netty.proto.HallProto.ClientCreateRoom.getDefaultInstance() : clientCreateRoom_;
        }
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCreateRoom clientCreateRoom = 208;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientCreateRoom, com.kys.util.netty.proto.HallProto.ClientCreateRoom.Builder, com.kys.util.netty.proto.HallProto.ClientCreateRoomOrBuilder> 
          getClientCreateRoomFieldBuilder() {
        if (clientCreateRoomBuilder_ == null) {
          clientCreateRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientCreateRoom, com.kys.util.netty.proto.HallProto.ClientCreateRoom.Builder, com.kys.util.netty.proto.HallProto.ClientCreateRoomOrBuilder>(
                  getClientCreateRoom(),
                  getParentForChildren(),
                  isClean());
          clientCreateRoom_ = null;
        }
        return clientCreateRoomBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond clientGetMonthCardDiamond_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder> clientGetMonthCardDiamondBuilder_;
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public boolean hasClientGetMonthCardDiamond() {
        return clientGetMonthCardDiamondBuilder_ != null || clientGetMonthCardDiamond_ != null;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond getClientGetMonthCardDiamond() {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          return clientGetMonthCardDiamond_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.getDefaultInstance() : clientGetMonthCardDiamond_;
        } else {
          return clientGetMonthCardDiamondBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public Builder setClientGetMonthCardDiamond(com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond value) {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMonthCardDiamond_ = value;
          onChanged();
        } else {
          clientGetMonthCardDiamondBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public Builder setClientGetMonthCardDiamond(
          com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder builderForValue) {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          clientGetMonthCardDiamond_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMonthCardDiamondBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public Builder mergeClientGetMonthCardDiamond(com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond value) {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          if (clientGetMonthCardDiamond_ != null) {
            clientGetMonthCardDiamond_ =
              com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.newBuilder(clientGetMonthCardDiamond_).mergeFrom(value).buildPartial();
          } else {
            clientGetMonthCardDiamond_ = value;
          }
          onChanged();
        } else {
          clientGetMonthCardDiamondBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public Builder clearClientGetMonthCardDiamond() {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          clientGetMonthCardDiamond_ = null;
          onChanged();
        } else {
          clientGetMonthCardDiamond_ = null;
          clientGetMonthCardDiamondBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder getClientGetMonthCardDiamondBuilder() {
        
        onChanged();
        return getClientGetMonthCardDiamondFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder getClientGetMonthCardDiamondOrBuilder() {
        if (clientGetMonthCardDiamondBuilder_ != null) {
          return clientGetMonthCardDiamondBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMonthCardDiamond_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.getDefaultInstance() : clientGetMonthCardDiamond_;
        }
      }
      /**
       * <pre>
       ** 客户端领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCardDiamond clientGetMonthCardDiamond = 209;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder> 
          getClientGetMonthCardDiamondFieldBuilder() {
        if (clientGetMonthCardDiamondBuilder_ == null) {
          clientGetMonthCardDiamondBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ClientGetMonthCardDiamondOrBuilder>(
                  getClientGetMonthCardDiamond(),
                  getParentForChildren(),
                  isClean());
          clientGetMonthCardDiamond_ = null;
        }
        return clientGetMonthCardDiamondBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetLotteryCount clientGetLotteryCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetLotteryCount, com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder> clientGetLotteryCountBuilder_;
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public boolean hasClientGetLotteryCount() {
        return clientGetLotteryCountBuilder_ != null || clientGetLotteryCount_ != null;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetLotteryCount getClientGetLotteryCount() {
        if (clientGetLotteryCountBuilder_ == null) {
          return clientGetLotteryCount_ == null ? com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.getDefaultInstance() : clientGetLotteryCount_;
        } else {
          return clientGetLotteryCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public Builder setClientGetLotteryCount(com.kys.util.netty.proto.HallProto.ClientGetLotteryCount value) {
        if (clientGetLotteryCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetLotteryCount_ = value;
          onChanged();
        } else {
          clientGetLotteryCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public Builder setClientGetLotteryCount(
          com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder builderForValue) {
        if (clientGetLotteryCountBuilder_ == null) {
          clientGetLotteryCount_ = builderForValue.build();
          onChanged();
        } else {
          clientGetLotteryCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public Builder mergeClientGetLotteryCount(com.kys.util.netty.proto.HallProto.ClientGetLotteryCount value) {
        if (clientGetLotteryCountBuilder_ == null) {
          if (clientGetLotteryCount_ != null) {
            clientGetLotteryCount_ =
              com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.newBuilder(clientGetLotteryCount_).mergeFrom(value).buildPartial();
          } else {
            clientGetLotteryCount_ = value;
          }
          onChanged();
        } else {
          clientGetLotteryCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public Builder clearClientGetLotteryCount() {
        if (clientGetLotteryCountBuilder_ == null) {
          clientGetLotteryCount_ = null;
          onChanged();
        } else {
          clientGetLotteryCount_ = null;
          clientGetLotteryCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder getClientGetLotteryCountBuilder() {
        
        onChanged();
        return getClientGetLotteryCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder getClientGetLotteryCountOrBuilder() {
        if (clientGetLotteryCountBuilder_ != null) {
          return clientGetLotteryCountBuilder_.getMessageOrBuilder();
        } else {
          return clientGetLotteryCount_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.getDefaultInstance() : clientGetLotteryCount_;
        }
      }
      /**
       * <pre>
       ** 客户端获取玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLotteryCount clientGetLotteryCount = 210;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetLotteryCount, com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder> 
          getClientGetLotteryCountFieldBuilder() {
        if (clientGetLotteryCountBuilder_ == null) {
          clientGetLotteryCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetLotteryCount, com.kys.util.netty.proto.HallProto.ClientGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ClientGetLotteryCountOrBuilder>(
                  getClientGetLotteryCount(),
                  getParentForChildren(),
                  isClean());
          clientGetLotteryCount_ = null;
        }
        return clientGetLotteryCountBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetRoomInfo clientGetRoomInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomInfo, com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder> clientGetRoomInfoBuilder_;
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public boolean hasClientGetRoomInfo() {
        return clientGetRoomInfoBuilder_ != null || clientGetRoomInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomInfo getClientGetRoomInfo() {
        if (clientGetRoomInfoBuilder_ == null) {
          return clientGetRoomInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.getDefaultInstance() : clientGetRoomInfo_;
        } else {
          return clientGetRoomInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public Builder setClientGetRoomInfo(com.kys.util.netty.proto.HallProto.ClientGetRoomInfo value) {
        if (clientGetRoomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetRoomInfo_ = value;
          onChanged();
        } else {
          clientGetRoomInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public Builder setClientGetRoomInfo(
          com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder builderForValue) {
        if (clientGetRoomInfoBuilder_ == null) {
          clientGetRoomInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetRoomInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public Builder mergeClientGetRoomInfo(com.kys.util.netty.proto.HallProto.ClientGetRoomInfo value) {
        if (clientGetRoomInfoBuilder_ == null) {
          if (clientGetRoomInfo_ != null) {
            clientGetRoomInfo_ =
              com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.newBuilder(clientGetRoomInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetRoomInfo_ = value;
          }
          onChanged();
        } else {
          clientGetRoomInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public Builder clearClientGetRoomInfo() {
        if (clientGetRoomInfoBuilder_ == null) {
          clientGetRoomInfo_ = null;
          onChanged();
        } else {
          clientGetRoomInfo_ = null;
          clientGetRoomInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder getClientGetRoomInfoBuilder() {
        
        onChanged();
        return getClientGetRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder getClientGetRoomInfoOrBuilder() {
        if (clientGetRoomInfoBuilder_ != null) {
          return clientGetRoomInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetRoomInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.getDefaultInstance() : clientGetRoomInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端请求单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetRoomInfo clientGetRoomInfo = 211;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetRoomInfo, com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder> 
          getClientGetRoomInfoFieldBuilder() {
        if (clientGetRoomInfoBuilder_ == null) {
          clientGetRoomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetRoomInfo, com.kys.util.netty.proto.HallProto.ClientGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetRoomInfoOrBuilder>(
                  getClientGetRoomInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetRoomInfo_ = null;
        }
        return clientGetRoomInfoBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientSendTelCode clientSendTelCode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSendTelCode, com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder> clientSendTelCodeBuilder_;
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public boolean hasClientSendTelCode() {
        return clientSendTelCodeBuilder_ != null || clientSendTelCode_ != null;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSendTelCode getClientSendTelCode() {
        if (clientSendTelCodeBuilder_ == null) {
          return clientSendTelCode_ == null ? com.kys.util.netty.proto.HallProto.ClientSendTelCode.getDefaultInstance() : clientSendTelCode_;
        } else {
          return clientSendTelCodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public Builder setClientSendTelCode(com.kys.util.netty.proto.HallProto.ClientSendTelCode value) {
        if (clientSendTelCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSendTelCode_ = value;
          onChanged();
        } else {
          clientSendTelCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public Builder setClientSendTelCode(
          com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder builderForValue) {
        if (clientSendTelCodeBuilder_ == null) {
          clientSendTelCode_ = builderForValue.build();
          onChanged();
        } else {
          clientSendTelCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public Builder mergeClientSendTelCode(com.kys.util.netty.proto.HallProto.ClientSendTelCode value) {
        if (clientSendTelCodeBuilder_ == null) {
          if (clientSendTelCode_ != null) {
            clientSendTelCode_ =
              com.kys.util.netty.proto.HallProto.ClientSendTelCode.newBuilder(clientSendTelCode_).mergeFrom(value).buildPartial();
          } else {
            clientSendTelCode_ = value;
          }
          onChanged();
        } else {
          clientSendTelCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public Builder clearClientSendTelCode() {
        if (clientSendTelCodeBuilder_ == null) {
          clientSendTelCode_ = null;
          onChanged();
        } else {
          clientSendTelCode_ = null;
          clientSendTelCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder getClientSendTelCodeBuilder() {
        
        onChanged();
        return getClientSendTelCodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder getClientSendTelCodeOrBuilder() {
        if (clientSendTelCodeBuilder_ != null) {
          return clientSendTelCodeBuilder_.getMessageOrBuilder();
        } else {
          return clientSendTelCode_ == null ?
              com.kys.util.netty.proto.HallProto.ClientSendTelCode.getDefaultInstance() : clientSendTelCode_;
        }
      }
      /**
       * <pre>
       ** 客户端请求发送验证短信 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSendTelCode clientSendTelCode = 212;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSendTelCode, com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder> 
          getClientSendTelCodeFieldBuilder() {
        if (clientSendTelCodeBuilder_ == null) {
          clientSendTelCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientSendTelCode, com.kys.util.netty.proto.HallProto.ClientSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientSendTelCodeOrBuilder>(
                  getClientSendTelCode(),
                  getParentForChildren(),
                  isClean());
          clientSendTelCode_ = null;
        }
        return clientSendTelCodeBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientVerifyTelCode clientVerifyTelCode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientVerifyTelCode, com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder> clientVerifyTelCodeBuilder_;
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public boolean hasClientVerifyTelCode() {
        return clientVerifyTelCodeBuilder_ != null || clientVerifyTelCode_ != null;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientVerifyTelCode getClientVerifyTelCode() {
        if (clientVerifyTelCodeBuilder_ == null) {
          return clientVerifyTelCode_ == null ? com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.getDefaultInstance() : clientVerifyTelCode_;
        } else {
          return clientVerifyTelCodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public Builder setClientVerifyTelCode(com.kys.util.netty.proto.HallProto.ClientVerifyTelCode value) {
        if (clientVerifyTelCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientVerifyTelCode_ = value;
          onChanged();
        } else {
          clientVerifyTelCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public Builder setClientVerifyTelCode(
          com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder builderForValue) {
        if (clientVerifyTelCodeBuilder_ == null) {
          clientVerifyTelCode_ = builderForValue.build();
          onChanged();
        } else {
          clientVerifyTelCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public Builder mergeClientVerifyTelCode(com.kys.util.netty.proto.HallProto.ClientVerifyTelCode value) {
        if (clientVerifyTelCodeBuilder_ == null) {
          if (clientVerifyTelCode_ != null) {
            clientVerifyTelCode_ =
              com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.newBuilder(clientVerifyTelCode_).mergeFrom(value).buildPartial();
          } else {
            clientVerifyTelCode_ = value;
          }
          onChanged();
        } else {
          clientVerifyTelCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public Builder clearClientVerifyTelCode() {
        if (clientVerifyTelCodeBuilder_ == null) {
          clientVerifyTelCode_ = null;
          onChanged();
        } else {
          clientVerifyTelCode_ = null;
          clientVerifyTelCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder getClientVerifyTelCodeBuilder() {
        
        onChanged();
        return getClientVerifyTelCodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder getClientVerifyTelCodeOrBuilder() {
        if (clientVerifyTelCodeBuilder_ != null) {
          return clientVerifyTelCodeBuilder_.getMessageOrBuilder();
        } else {
          return clientVerifyTelCode_ == null ?
              com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.getDefaultInstance() : clientVerifyTelCode_;
        }
      }
      /**
       * <pre>
       ** 客户端校验短信验证码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientVerifyTelCode clientVerifyTelCode = 213;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientVerifyTelCode, com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder> 
          getClientVerifyTelCodeFieldBuilder() {
        if (clientVerifyTelCodeBuilder_ == null) {
          clientVerifyTelCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientVerifyTelCode, com.kys.util.netty.proto.HallProto.ClientVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ClientVerifyTelCodeOrBuilder>(
                  getClientVerifyTelCode(),
                  getParentForChildren(),
                  isClean());
          clientVerifyTelCode_ = null;
        }
        return clientVerifyTelCodeBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientQueryShareList clientQueryShareList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryShareList, com.kys.util.netty.proto.HallProto.ClientQueryShareList.Builder, com.kys.util.netty.proto.HallProto.ClientQueryShareListOrBuilder> clientQueryShareListBuilder_;
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      public boolean hasClientQueryShareList() {
        return clientQueryShareListBuilder_ != null || clientQueryShareList_ != null;
      }
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryShareList getClientQueryShareList() {
        if (clientQueryShareListBuilder_ == null) {
          return clientQueryShareList_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryShareList.getDefaultInstance() : clientQueryShareList_;
        } else {
          return clientQueryShareListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      public Builder setClientQueryShareList(com.kys.util.netty.proto.HallProto.ClientQueryShareList value) {
        if (clientQueryShareListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryShareList_ = value;
          onChanged();
        } else {
          clientQueryShareListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      public Builder setClientQueryShareList(
          com.kys.util.netty.proto.HallProto.ClientQueryShareList.Builder builderForValue) {
        if (clientQueryShareListBuilder_ == null) {
          clientQueryShareList_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryShareListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      public Builder mergeClientQueryShareList(com.kys.util.netty.proto.HallProto.ClientQueryShareList value) {
        if (clientQueryShareListBuilder_ == null) {
          if (clientQueryShareList_ != null) {
            clientQueryShareList_ =
              com.kys.util.netty.proto.HallProto.ClientQueryShareList.newBuilder(clientQueryShareList_).mergeFrom(value).buildPartial();
          } else {
            clientQueryShareList_ = value;
          }
          onChanged();
        } else {
          clientQueryShareListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      public Builder clearClientQueryShareList() {
        if (clientQueryShareListBuilder_ == null) {
          clientQueryShareList_ = null;
          onChanged();
        } else {
          clientQueryShareList_ = null;
          clientQueryShareListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryShareList.Builder getClientQueryShareListBuilder() {
        
        onChanged();
        return getClientQueryShareListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryShareListOrBuilder getClientQueryShareListOrBuilder() {
        if (clientQueryShareListBuilder_ != null) {
          return clientQueryShareListBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryShareList_ == null ?
              com.kys.util.netty.proto.HallProto.ClientQueryShareList.getDefaultInstance() : clientQueryShareList_;
        }
      }
      /**
       * <pre>
       ** 客户端请求分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareList clientQueryShareList = 214;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryShareList, com.kys.util.netty.proto.HallProto.ClientQueryShareList.Builder, com.kys.util.netty.proto.HallProto.ClientQueryShareListOrBuilder> 
          getClientQueryShareListFieldBuilder() {
        if (clientQueryShareListBuilder_ == null) {
          clientQueryShareListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientQueryShareList, com.kys.util.netty.proto.HallProto.ClientQueryShareList.Builder, com.kys.util.netty.proto.HallProto.ClientQueryShareListOrBuilder>(
                  getClientQueryShareList(),
                  getParentForChildren(),
                  isClean());
          clientQueryShareList_ = null;
        }
        return clientQueryShareListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientQueryShareDetail clientQueryShareDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryShareDetail, com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.Builder, com.kys.util.netty.proto.HallProto.ClientQueryShareDetailOrBuilder> clientQueryShareDetailBuilder_;
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      public boolean hasClientQueryShareDetail() {
        return clientQueryShareDetailBuilder_ != null || clientQueryShareDetail_ != null;
      }
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryShareDetail getClientQueryShareDetail() {
        if (clientQueryShareDetailBuilder_ == null) {
          return clientQueryShareDetail_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.getDefaultInstance() : clientQueryShareDetail_;
        } else {
          return clientQueryShareDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      public Builder setClientQueryShareDetail(com.kys.util.netty.proto.HallProto.ClientQueryShareDetail value) {
        if (clientQueryShareDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryShareDetail_ = value;
          onChanged();
        } else {
          clientQueryShareDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      public Builder setClientQueryShareDetail(
          com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.Builder builderForValue) {
        if (clientQueryShareDetailBuilder_ == null) {
          clientQueryShareDetail_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryShareDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      public Builder mergeClientQueryShareDetail(com.kys.util.netty.proto.HallProto.ClientQueryShareDetail value) {
        if (clientQueryShareDetailBuilder_ == null) {
          if (clientQueryShareDetail_ != null) {
            clientQueryShareDetail_ =
              com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.newBuilder(clientQueryShareDetail_).mergeFrom(value).buildPartial();
          } else {
            clientQueryShareDetail_ = value;
          }
          onChanged();
        } else {
          clientQueryShareDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      public Builder clearClientQueryShareDetail() {
        if (clientQueryShareDetailBuilder_ == null) {
          clientQueryShareDetail_ = null;
          onChanged();
        } else {
          clientQueryShareDetail_ = null;
          clientQueryShareDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.Builder getClientQueryShareDetailBuilder() {
        
        onChanged();
        return getClientQueryShareDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryShareDetailOrBuilder getClientQueryShareDetailOrBuilder() {
        if (clientQueryShareDetailBuilder_ != null) {
          return clientQueryShareDetailBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryShareDetail_ == null ?
              com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.getDefaultInstance() : clientQueryShareDetail_;
        }
      }
      /**
       * <pre>
       ** 客户端查询推广列表详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryShareDetail clientQueryShareDetail = 215;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryShareDetail, com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.Builder, com.kys.util.netty.proto.HallProto.ClientQueryShareDetailOrBuilder> 
          getClientQueryShareDetailFieldBuilder() {
        if (clientQueryShareDetailBuilder_ == null) {
          clientQueryShareDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientQueryShareDetail, com.kys.util.netty.proto.HallProto.ClientQueryShareDetail.Builder, com.kys.util.netty.proto.HallProto.ClientQueryShareDetailOrBuilder>(
                  getClientQueryShareDetail(),
                  getParentForChildren(),
                  isClean());
          clientQueryShareDetail_ = null;
        }
        return clientQueryShareDetailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetTaskAward clientGetTaskAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetTaskAward, com.kys.util.netty.proto.HallProto.ClientGetTaskAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetTaskAwardOrBuilder> clientGetTaskAwardBuilder_;
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      public boolean hasClientGetTaskAward() {
        return clientGetTaskAwardBuilder_ != null || clientGetTaskAward_ != null;
      }
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetTaskAward getClientGetTaskAward() {
        if (clientGetTaskAwardBuilder_ == null) {
          return clientGetTaskAward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetTaskAward.getDefaultInstance() : clientGetTaskAward_;
        } else {
          return clientGetTaskAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      public Builder setClientGetTaskAward(com.kys.util.netty.proto.HallProto.ClientGetTaskAward value) {
        if (clientGetTaskAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetTaskAward_ = value;
          onChanged();
        } else {
          clientGetTaskAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      public Builder setClientGetTaskAward(
          com.kys.util.netty.proto.HallProto.ClientGetTaskAward.Builder builderForValue) {
        if (clientGetTaskAwardBuilder_ == null) {
          clientGetTaskAward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetTaskAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      public Builder mergeClientGetTaskAward(com.kys.util.netty.proto.HallProto.ClientGetTaskAward value) {
        if (clientGetTaskAwardBuilder_ == null) {
          if (clientGetTaskAward_ != null) {
            clientGetTaskAward_ =
              com.kys.util.netty.proto.HallProto.ClientGetTaskAward.newBuilder(clientGetTaskAward_).mergeFrom(value).buildPartial();
          } else {
            clientGetTaskAward_ = value;
          }
          onChanged();
        } else {
          clientGetTaskAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      public Builder clearClientGetTaskAward() {
        if (clientGetTaskAwardBuilder_ == null) {
          clientGetTaskAward_ = null;
          onChanged();
        } else {
          clientGetTaskAward_ = null;
          clientGetTaskAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetTaskAward.Builder getClientGetTaskAwardBuilder() {
        
        onChanged();
        return getClientGetTaskAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetTaskAwardOrBuilder getClientGetTaskAwardOrBuilder() {
        if (clientGetTaskAwardBuilder_ != null) {
          return clientGetTaskAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetTaskAward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetTaskAward.getDefaultInstance() : clientGetTaskAward_;
        }
      }
      /**
       * <pre>
       ** 客户端领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTaskAward clientGetTaskAward = 216;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetTaskAward, com.kys.util.netty.proto.HallProto.ClientGetTaskAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetTaskAwardOrBuilder> 
          getClientGetTaskAwardFieldBuilder() {
        if (clientGetTaskAwardBuilder_ == null) {
          clientGetTaskAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetTaskAward, com.kys.util.netty.proto.HallProto.ClientGetTaskAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetTaskAwardOrBuilder>(
                  getClientGetTaskAward(),
                  getParentForChildren(),
                  isClean());
          clientGetTaskAward_ = null;
        }
        return clientGetTaskAwardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientSharePackage clientSharePackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSharePackage, com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder, com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder> clientSharePackageBuilder_;
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public boolean hasClientSharePackage() {
        return clientSharePackageBuilder_ != null || clientSharePackage_ != null;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSharePackage getClientSharePackage() {
        if (clientSharePackageBuilder_ == null) {
          return clientSharePackage_ == null ? com.kys.util.netty.proto.HallProto.ClientSharePackage.getDefaultInstance() : clientSharePackage_;
        } else {
          return clientSharePackageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public Builder setClientSharePackage(com.kys.util.netty.proto.HallProto.ClientSharePackage value) {
        if (clientSharePackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSharePackage_ = value;
          onChanged();
        } else {
          clientSharePackageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public Builder setClientSharePackage(
          com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder builderForValue) {
        if (clientSharePackageBuilder_ == null) {
          clientSharePackage_ = builderForValue.build();
          onChanged();
        } else {
          clientSharePackageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public Builder mergeClientSharePackage(com.kys.util.netty.proto.HallProto.ClientSharePackage value) {
        if (clientSharePackageBuilder_ == null) {
          if (clientSharePackage_ != null) {
            clientSharePackage_ =
              com.kys.util.netty.proto.HallProto.ClientSharePackage.newBuilder(clientSharePackage_).mergeFrom(value).buildPartial();
          } else {
            clientSharePackage_ = value;
          }
          onChanged();
        } else {
          clientSharePackageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public Builder clearClientSharePackage() {
        if (clientSharePackageBuilder_ == null) {
          clientSharePackage_ = null;
          onChanged();
        } else {
          clientSharePackage_ = null;
          clientSharePackageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder getClientSharePackageBuilder() {
        
        onChanged();
        return getClientSharePackageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder getClientSharePackageOrBuilder() {
        if (clientSharePackageBuilder_ != null) {
          return clientSharePackageBuilder_.getMessageOrBuilder();
        } else {
          return clientSharePackage_ == null ?
              com.kys.util.netty.proto.HallProto.ClientSharePackage.getDefaultInstance() : clientSharePackage_;
        }
      }
      /**
       * <pre>
       ** 客户端分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSharePackage clientSharePackage = 217;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientSharePackage, com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder, com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder> 
          getClientSharePackageFieldBuilder() {
        if (clientSharePackageBuilder_ == null) {
          clientSharePackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientSharePackage, com.kys.util.netty.proto.HallProto.ClientSharePackage.Builder, com.kys.util.netty.proto.HallProto.ClientSharePackageOrBuilder>(
                  getClientSharePackage(),
                  getParentForChildren(),
                  isClean());
          clientSharePackage_ = null;
        }
        return clientSharePackageBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetAwardList clientGetAwardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetAwardList, com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder> clientGetAwardListBuilder_;
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public boolean hasClientGetAwardList() {
        return clientGetAwardListBuilder_ != null || clientGetAwardList_ != null;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAwardList getClientGetAwardList() {
        if (clientGetAwardListBuilder_ == null) {
          return clientGetAwardList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetAwardList.getDefaultInstance() : clientGetAwardList_;
        } else {
          return clientGetAwardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public Builder setClientGetAwardList(com.kys.util.netty.proto.HallProto.ClientGetAwardList value) {
        if (clientGetAwardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetAwardList_ = value;
          onChanged();
        } else {
          clientGetAwardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public Builder setClientGetAwardList(
          com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder builderForValue) {
        if (clientGetAwardListBuilder_ == null) {
          clientGetAwardList_ = builderForValue.build();
          onChanged();
        } else {
          clientGetAwardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public Builder mergeClientGetAwardList(com.kys.util.netty.proto.HallProto.ClientGetAwardList value) {
        if (clientGetAwardListBuilder_ == null) {
          if (clientGetAwardList_ != null) {
            clientGetAwardList_ =
              com.kys.util.netty.proto.HallProto.ClientGetAwardList.newBuilder(clientGetAwardList_).mergeFrom(value).buildPartial();
          } else {
            clientGetAwardList_ = value;
          }
          onChanged();
        } else {
          clientGetAwardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public Builder clearClientGetAwardList() {
        if (clientGetAwardListBuilder_ == null) {
          clientGetAwardList_ = null;
          onChanged();
        } else {
          clientGetAwardList_ = null;
          clientGetAwardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder getClientGetAwardListBuilder() {
        
        onChanged();
        return getClientGetAwardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder getClientGetAwardListOrBuilder() {
        if (clientGetAwardListBuilder_ != null) {
          return clientGetAwardListBuilder_.getMessageOrBuilder();
        } else {
          return clientGetAwardList_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetAwardList.getDefaultInstance() : clientGetAwardList_;
        }
      }
      /**
       * <pre>
       ** 客户端获取大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAwardList clientGetAwardList = 218;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetAwardList, com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder> 
          getClientGetAwardListFieldBuilder() {
        if (clientGetAwardListBuilder_ == null) {
          clientGetAwardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetAwardList, com.kys.util.netty.proto.HallProto.ClientGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ClientGetAwardListOrBuilder>(
                  getClientGetAwardList(),
                  getParentForChildren(),
                  isClean());
          clientGetAwardList_ = null;
        }
        return clientGetAwardListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientPlayerLogout clientPlayerLogout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientPlayerLogout, com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder, com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder> clientPlayerLogoutBuilder_;
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public boolean hasClientPlayerLogout() {
        return clientPlayerLogoutBuilder_ != null || clientPlayerLogout_ != null;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientPlayerLogout getClientPlayerLogout() {
        if (clientPlayerLogoutBuilder_ == null) {
          return clientPlayerLogout_ == null ? com.kys.util.netty.proto.HallProto.ClientPlayerLogout.getDefaultInstance() : clientPlayerLogout_;
        } else {
          return clientPlayerLogoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public Builder setClientPlayerLogout(com.kys.util.netty.proto.HallProto.ClientPlayerLogout value) {
        if (clientPlayerLogoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientPlayerLogout_ = value;
          onChanged();
        } else {
          clientPlayerLogoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public Builder setClientPlayerLogout(
          com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder builderForValue) {
        if (clientPlayerLogoutBuilder_ == null) {
          clientPlayerLogout_ = builderForValue.build();
          onChanged();
        } else {
          clientPlayerLogoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public Builder mergeClientPlayerLogout(com.kys.util.netty.proto.HallProto.ClientPlayerLogout value) {
        if (clientPlayerLogoutBuilder_ == null) {
          if (clientPlayerLogout_ != null) {
            clientPlayerLogout_ =
              com.kys.util.netty.proto.HallProto.ClientPlayerLogout.newBuilder(clientPlayerLogout_).mergeFrom(value).buildPartial();
          } else {
            clientPlayerLogout_ = value;
          }
          onChanged();
        } else {
          clientPlayerLogoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public Builder clearClientPlayerLogout() {
        if (clientPlayerLogoutBuilder_ == null) {
          clientPlayerLogout_ = null;
          onChanged();
        } else {
          clientPlayerLogout_ = null;
          clientPlayerLogoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder getClientPlayerLogoutBuilder() {
        
        onChanged();
        return getClientPlayerLogoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder getClientPlayerLogoutOrBuilder() {
        if (clientPlayerLogoutBuilder_ != null) {
          return clientPlayerLogoutBuilder_.getMessageOrBuilder();
        } else {
          return clientPlayerLogout_ == null ?
              com.kys.util.netty.proto.HallProto.ClientPlayerLogout.getDefaultInstance() : clientPlayerLogout_;
        }
      }
      /**
       * <pre>
       ** 玩家登出 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientPlayerLogout clientPlayerLogout = 219;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientPlayerLogout, com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder, com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder> 
          getClientPlayerLogoutFieldBuilder() {
        if (clientPlayerLogoutBuilder_ == null) {
          clientPlayerLogoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientPlayerLogout, com.kys.util.netty.proto.HallProto.ClientPlayerLogout.Builder, com.kys.util.netty.proto.HallProto.ClientPlayerLogoutOrBuilder>(
                  getClientPlayerLogout(),
                  getParentForChildren(),
                  isClean());
          clientPlayerLogout_ = null;
        }
        return clientPlayerLogoutBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientCheckConnect clientCheckConnect_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientCheckConnect, com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder> clientCheckConnectBuilder_;
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public boolean hasClientCheckConnect() {
        return clientCheckConnectBuilder_ != null || clientCheckConnect_ != null;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCheckConnect getClientCheckConnect() {
        if (clientCheckConnectBuilder_ == null) {
          return clientCheckConnect_ == null ? com.kys.util.netty.proto.HallProto.ClientCheckConnect.getDefaultInstance() : clientCheckConnect_;
        } else {
          return clientCheckConnectBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public Builder setClientCheckConnect(com.kys.util.netty.proto.HallProto.ClientCheckConnect value) {
        if (clientCheckConnectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientCheckConnect_ = value;
          onChanged();
        } else {
          clientCheckConnectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public Builder setClientCheckConnect(
          com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder builderForValue) {
        if (clientCheckConnectBuilder_ == null) {
          clientCheckConnect_ = builderForValue.build();
          onChanged();
        } else {
          clientCheckConnectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public Builder mergeClientCheckConnect(com.kys.util.netty.proto.HallProto.ClientCheckConnect value) {
        if (clientCheckConnectBuilder_ == null) {
          if (clientCheckConnect_ != null) {
            clientCheckConnect_ =
              com.kys.util.netty.proto.HallProto.ClientCheckConnect.newBuilder(clientCheckConnect_).mergeFrom(value).buildPartial();
          } else {
            clientCheckConnect_ = value;
          }
          onChanged();
        } else {
          clientCheckConnectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public Builder clearClientCheckConnect() {
        if (clientCheckConnectBuilder_ == null) {
          clientCheckConnect_ = null;
          onChanged();
        } else {
          clientCheckConnect_ = null;
          clientCheckConnectBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder getClientCheckConnectBuilder() {
        
        onChanged();
        return getClientCheckConnectFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder getClientCheckConnectOrBuilder() {
        if (clientCheckConnectBuilder_ != null) {
          return clientCheckConnectBuilder_.getMessageOrBuilder();
        } else {
          return clientCheckConnect_ == null ?
              com.kys.util.netty.proto.HallProto.ClientCheckConnect.getDefaultInstance() : clientCheckConnect_;
        }
      }
      /**
       * <pre>
       ** 玩家检测与大厅的连接 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientCheckConnect clientCheckConnect = 220;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientCheckConnect, com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder> 
          getClientCheckConnectFieldBuilder() {
        if (clientCheckConnectBuilder_ == null) {
          clientCheckConnectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientCheckConnect, com.kys.util.netty.proto.HallProto.ClientCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ClientCheckConnectOrBuilder>(
                  getClientCheckConnect(),
                  getParentForChildren(),
                  isClean());
          clientCheckConnect_ = null;
        }
        return clientCheckConnectBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetPFList clientGetPFList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetPFList, com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder, com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder> clientGetPFListBuilder_;
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public boolean hasClientGetPFList() {
        return clientGetPFListBuilder_ != null || clientGetPFList_ != null;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetPFList getClientGetPFList() {
        if (clientGetPFListBuilder_ == null) {
          return clientGetPFList_ == null ? com.kys.util.netty.proto.HallProto.ClientGetPFList.getDefaultInstance() : clientGetPFList_;
        } else {
          return clientGetPFListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public Builder setClientGetPFList(com.kys.util.netty.proto.HallProto.ClientGetPFList value) {
        if (clientGetPFListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetPFList_ = value;
          onChanged();
        } else {
          clientGetPFListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public Builder setClientGetPFList(
          com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder builderForValue) {
        if (clientGetPFListBuilder_ == null) {
          clientGetPFList_ = builderForValue.build();
          onChanged();
        } else {
          clientGetPFListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public Builder mergeClientGetPFList(com.kys.util.netty.proto.HallProto.ClientGetPFList value) {
        if (clientGetPFListBuilder_ == null) {
          if (clientGetPFList_ != null) {
            clientGetPFList_ =
              com.kys.util.netty.proto.HallProto.ClientGetPFList.newBuilder(clientGetPFList_).mergeFrom(value).buildPartial();
          } else {
            clientGetPFList_ = value;
          }
          onChanged();
        } else {
          clientGetPFListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public Builder clearClientGetPFList() {
        if (clientGetPFListBuilder_ == null) {
          clientGetPFList_ = null;
          onChanged();
        } else {
          clientGetPFList_ = null;
          clientGetPFListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder getClientGetPFListBuilder() {
        
        onChanged();
        return getClientGetPFListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder getClientGetPFListOrBuilder() {
        if (clientGetPFListBuilder_ != null) {
          return clientGetPFListBuilder_.getMessageOrBuilder();
        } else {
          return clientGetPFList_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetPFList.getDefaultInstance() : clientGetPFList_;
        }
      }
      /**
       * <pre>
       ** 客户端请求获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetPFList clientGetPFList = 221;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetPFList, com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder, com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder> 
          getClientGetPFListFieldBuilder() {
        if (clientGetPFListBuilder_ == null) {
          clientGetPFListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetPFList, com.kys.util.netty.proto.HallProto.ClientGetPFList.Builder, com.kys.util.netty.proto.HallProto.ClientGetPFListOrBuilder>(
                  getClientGetPFList(),
                  getParentForChildren(),
                  isClean());
          clientGetPFList_ = null;
        }
        return clientGetPFListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientChoosePF clientChoosePF_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientChoosePF, com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder, com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder> clientChoosePFBuilder_;
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public boolean hasClientChoosePF() {
        return clientChoosePFBuilder_ != null || clientChoosePF_ != null;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientChoosePF getClientChoosePF() {
        if (clientChoosePFBuilder_ == null) {
          return clientChoosePF_ == null ? com.kys.util.netty.proto.HallProto.ClientChoosePF.getDefaultInstance() : clientChoosePF_;
        } else {
          return clientChoosePFBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public Builder setClientChoosePF(com.kys.util.netty.proto.HallProto.ClientChoosePF value) {
        if (clientChoosePFBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientChoosePF_ = value;
          onChanged();
        } else {
          clientChoosePFBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public Builder setClientChoosePF(
          com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder builderForValue) {
        if (clientChoosePFBuilder_ == null) {
          clientChoosePF_ = builderForValue.build();
          onChanged();
        } else {
          clientChoosePFBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public Builder mergeClientChoosePF(com.kys.util.netty.proto.HallProto.ClientChoosePF value) {
        if (clientChoosePFBuilder_ == null) {
          if (clientChoosePF_ != null) {
            clientChoosePF_ =
              com.kys.util.netty.proto.HallProto.ClientChoosePF.newBuilder(clientChoosePF_).mergeFrom(value).buildPartial();
          } else {
            clientChoosePF_ = value;
          }
          onChanged();
        } else {
          clientChoosePFBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public Builder clearClientChoosePF() {
        if (clientChoosePFBuilder_ == null) {
          clientChoosePF_ = null;
          onChanged();
        } else {
          clientChoosePF_ = null;
          clientChoosePFBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder getClientChoosePFBuilder() {
        
        onChanged();
        return getClientChoosePFFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder getClientChoosePFOrBuilder() {
        if (clientChoosePFBuilder_ != null) {
          return clientChoosePFBuilder_.getMessageOrBuilder();
        } else {
          return clientChoosePF_ == null ?
              com.kys.util.netty.proto.HallProto.ClientChoosePF.getDefaultInstance() : clientChoosePF_;
        }
      }
      /**
       * <pre>
       ** 客户端选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientChoosePF clientChoosePF = 222;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientChoosePF, com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder, com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder> 
          getClientChoosePFFieldBuilder() {
        if (clientChoosePFBuilder_ == null) {
          clientChoosePFBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientChoosePF, com.kys.util.netty.proto.HallProto.ClientChoosePF.Builder, com.kys.util.netty.proto.HallProto.ClientChoosePFOrBuilder>(
                  getClientChoosePF(),
                  getParentForChildren(),
                  isClean());
          clientChoosePF_ = null;
        }
        return clientChoosePFBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetHistoryRank clientGetHistoryRank_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetHistoryRank, com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder> clientGetHistoryRankBuilder_;
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public boolean hasClientGetHistoryRank() {
        return clientGetHistoryRankBuilder_ != null || clientGetHistoryRank_ != null;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHistoryRank getClientGetHistoryRank() {
        if (clientGetHistoryRankBuilder_ == null) {
          return clientGetHistoryRank_ == null ? com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.getDefaultInstance() : clientGetHistoryRank_;
        } else {
          return clientGetHistoryRankBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public Builder setClientGetHistoryRank(com.kys.util.netty.proto.HallProto.ClientGetHistoryRank value) {
        if (clientGetHistoryRankBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetHistoryRank_ = value;
          onChanged();
        } else {
          clientGetHistoryRankBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public Builder setClientGetHistoryRank(
          com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder builderForValue) {
        if (clientGetHistoryRankBuilder_ == null) {
          clientGetHistoryRank_ = builderForValue.build();
          onChanged();
        } else {
          clientGetHistoryRankBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public Builder mergeClientGetHistoryRank(com.kys.util.netty.proto.HallProto.ClientGetHistoryRank value) {
        if (clientGetHistoryRankBuilder_ == null) {
          if (clientGetHistoryRank_ != null) {
            clientGetHistoryRank_ =
              com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.newBuilder(clientGetHistoryRank_).mergeFrom(value).buildPartial();
          } else {
            clientGetHistoryRank_ = value;
          }
          onChanged();
        } else {
          clientGetHistoryRankBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public Builder clearClientGetHistoryRank() {
        if (clientGetHistoryRankBuilder_ == null) {
          clientGetHistoryRank_ = null;
          onChanged();
        } else {
          clientGetHistoryRank_ = null;
          clientGetHistoryRankBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder getClientGetHistoryRankBuilder() {
        
        onChanged();
        return getClientGetHistoryRankFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder getClientGetHistoryRankOrBuilder() {
        if (clientGetHistoryRankBuilder_ != null) {
          return clientGetHistoryRankBuilder_.getMessageOrBuilder();
        } else {
          return clientGetHistoryRank_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.getDefaultInstance() : clientGetHistoryRank_;
        }
      }
      /**
       * <pre>
       ** 客户端获取上周历史排行榜
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetHistoryRank clientGetHistoryRank = 223;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetHistoryRank, com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder> 
          getClientGetHistoryRankFieldBuilder() {
        if (clientGetHistoryRankBuilder_ == null) {
          clientGetHistoryRankBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetHistoryRank, com.kys.util.netty.proto.HallProto.ClientGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ClientGetHistoryRankOrBuilder>(
                  getClientGetHistoryRank(),
                  getParentForChildren(),
                  isClean());
          clientGetHistoryRank_ = null;
        }
        return clientGetHistoryRankBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientH5Reward clientH5Reward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientH5Reward, com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder, com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder> clientH5RewardBuilder_;
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public boolean hasClientH5Reward() {
        return clientH5RewardBuilder_ != null || clientH5Reward_ != null;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientH5Reward getClientH5Reward() {
        if (clientH5RewardBuilder_ == null) {
          return clientH5Reward_ == null ? com.kys.util.netty.proto.HallProto.ClientH5Reward.getDefaultInstance() : clientH5Reward_;
        } else {
          return clientH5RewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public Builder setClientH5Reward(com.kys.util.netty.proto.HallProto.ClientH5Reward value) {
        if (clientH5RewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientH5Reward_ = value;
          onChanged();
        } else {
          clientH5RewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public Builder setClientH5Reward(
          com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder builderForValue) {
        if (clientH5RewardBuilder_ == null) {
          clientH5Reward_ = builderForValue.build();
          onChanged();
        } else {
          clientH5RewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public Builder mergeClientH5Reward(com.kys.util.netty.proto.HallProto.ClientH5Reward value) {
        if (clientH5RewardBuilder_ == null) {
          if (clientH5Reward_ != null) {
            clientH5Reward_ =
              com.kys.util.netty.proto.HallProto.ClientH5Reward.newBuilder(clientH5Reward_).mergeFrom(value).buildPartial();
          } else {
            clientH5Reward_ = value;
          }
          onChanged();
        } else {
          clientH5RewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public Builder clearClientH5Reward() {
        if (clientH5RewardBuilder_ == null) {
          clientH5Reward_ = null;
          onChanged();
        } else {
          clientH5Reward_ = null;
          clientH5RewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder getClientH5RewardBuilder() {
        
        onChanged();
        return getClientH5RewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder getClientH5RewardOrBuilder() {
        if (clientH5RewardBuilder_ != null) {
          return clientH5RewardBuilder_.getMessageOrBuilder();
        } else {
          return clientH5Reward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientH5Reward.getDefaultInstance() : clientH5Reward_;
        }
      }
      /**
       * <pre>
       ** 客户端请求H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientH5Reward clientH5Reward = 224;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientH5Reward, com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder, com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder> 
          getClientH5RewardFieldBuilder() {
        if (clientH5RewardBuilder_ == null) {
          clientH5RewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientH5Reward, com.kys.util.netty.proto.HallProto.ClientH5Reward.Builder, com.kys.util.netty.proto.HallProto.ClientH5RewardOrBuilder>(
                  getClientH5Reward(),
                  getParentForChildren(),
                  isClean());
          clientH5Reward_ = null;
        }
        return clientH5RewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup clientNewDrawWinCup_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder> clientNewDrawWinCupBuilder_;
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public boolean hasClientNewDrawWinCup() {
        return clientNewDrawWinCupBuilder_ != null || clientNewDrawWinCup_ != null;
      }
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup getClientNewDrawWinCup() {
        if (clientNewDrawWinCupBuilder_ == null) {
          return clientNewDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.getDefaultInstance() : clientNewDrawWinCup_;
        } else {
          return clientNewDrawWinCupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public Builder setClientNewDrawWinCup(com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup value) {
        if (clientNewDrawWinCupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientNewDrawWinCup_ = value;
          onChanged();
        } else {
          clientNewDrawWinCupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public Builder setClientNewDrawWinCup(
          com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder builderForValue) {
        if (clientNewDrawWinCupBuilder_ == null) {
          clientNewDrawWinCup_ = builderForValue.build();
          onChanged();
        } else {
          clientNewDrawWinCupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public Builder mergeClientNewDrawWinCup(com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup value) {
        if (clientNewDrawWinCupBuilder_ == null) {
          if (clientNewDrawWinCup_ != null) {
            clientNewDrawWinCup_ =
              com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.newBuilder(clientNewDrawWinCup_).mergeFrom(value).buildPartial();
          } else {
            clientNewDrawWinCup_ = value;
          }
          onChanged();
        } else {
          clientNewDrawWinCupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public Builder clearClientNewDrawWinCup() {
        if (clientNewDrawWinCupBuilder_ == null) {
          clientNewDrawWinCup_ = null;
          onChanged();
        } else {
          clientNewDrawWinCup_ = null;
          clientNewDrawWinCupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder getClientNewDrawWinCupBuilder() {
        
        onChanged();
        return getClientNewDrawWinCupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder getClientNewDrawWinCupOrBuilder() {
        if (clientNewDrawWinCupBuilder_ != null) {
          return clientNewDrawWinCupBuilder_.getMessageOrBuilder();
        } else {
          return clientNewDrawWinCup_ == null ?
              com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.getDefaultInstance() : clientNewDrawWinCup_;
        }
      }
      /**
       * <pre>
       ** 客户端新抽奖杯请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientNewDrawWinCup clientNewDrawWinCup = 225;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder> 
          getClientNewDrawWinCupFieldBuilder() {
        if (clientNewDrawWinCupBuilder_ == null) {
          clientNewDrawWinCupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ClientNewDrawWinCupOrBuilder>(
                  getClientNewDrawWinCup(),
                  getParentForChildren(),
                  isClean());
          clientNewDrawWinCup_ = null;
        }
        return clientNewDrawWinCupBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo clientGetNewHallInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder> clientGetNewHallInfoBuilder_;
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public boolean hasClientGetNewHallInfo() {
        return clientGetNewHallInfoBuilder_ != null || clientGetNewHallInfo_ != null;
      }
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo getClientGetNewHallInfo() {
        if (clientGetNewHallInfoBuilder_ == null) {
          return clientGetNewHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.getDefaultInstance() : clientGetNewHallInfo_;
        } else {
          return clientGetNewHallInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public Builder setClientGetNewHallInfo(com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo value) {
        if (clientGetNewHallInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetNewHallInfo_ = value;
          onChanged();
        } else {
          clientGetNewHallInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public Builder setClientGetNewHallInfo(
          com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder builderForValue) {
        if (clientGetNewHallInfoBuilder_ == null) {
          clientGetNewHallInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetNewHallInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public Builder mergeClientGetNewHallInfo(com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo value) {
        if (clientGetNewHallInfoBuilder_ == null) {
          if (clientGetNewHallInfo_ != null) {
            clientGetNewHallInfo_ =
              com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.newBuilder(clientGetNewHallInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetNewHallInfo_ = value;
          }
          onChanged();
        } else {
          clientGetNewHallInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public Builder clearClientGetNewHallInfo() {
        if (clientGetNewHallInfoBuilder_ == null) {
          clientGetNewHallInfo_ = null;
          onChanged();
        } else {
          clientGetNewHallInfo_ = null;
          clientGetNewHallInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder getClientGetNewHallInfoBuilder() {
        
        onChanged();
        return getClientGetNewHallInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder getClientGetNewHallInfoOrBuilder() {
        if (clientGetNewHallInfoBuilder_ != null) {
          return clientGetNewHallInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetNewHallInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.getDefaultInstance() : clientGetNewHallInfo_;
        }
      }
      /**
       * <pre>
       ** 获取玩家(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNewHallInfo clientGetNewHallInfo = 226;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder> 
          getClientGetNewHallInfoFieldBuilder() {
        if (clientGetNewHallInfoBuilder_ == null) {
          clientGetNewHallInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ClientGetNewHallInfoOrBuilder>(
                  getClientGetNewHallInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetNewHallInfo_ = null;
        }
        return clientGetNewHallInfoBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ClientGetSkinInfo clientGetSkinInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetSkinInfo, com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetSkinInfoOrBuilder> clientGetSkinInfoBuilder_;
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      public boolean hasClientGetSkinInfo() {
        return clientGetSkinInfoBuilder_ != null || clientGetSkinInfo_ != null;
      }
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetSkinInfo getClientGetSkinInfo() {
        if (clientGetSkinInfoBuilder_ == null) {
          return clientGetSkinInfo_ == null ? com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.getDefaultInstance() : clientGetSkinInfo_;
        } else {
          return clientGetSkinInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      public Builder setClientGetSkinInfo(com.kys.util.netty.proto.UserProto.ClientGetSkinInfo value) {
        if (clientGetSkinInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetSkinInfo_ = value;
          onChanged();
        } else {
          clientGetSkinInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      public Builder setClientGetSkinInfo(
          com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.Builder builderForValue) {
        if (clientGetSkinInfoBuilder_ == null) {
          clientGetSkinInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetSkinInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      public Builder mergeClientGetSkinInfo(com.kys.util.netty.proto.UserProto.ClientGetSkinInfo value) {
        if (clientGetSkinInfoBuilder_ == null) {
          if (clientGetSkinInfo_ != null) {
            clientGetSkinInfo_ =
              com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.newBuilder(clientGetSkinInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetSkinInfo_ = value;
          }
          onChanged();
        } else {
          clientGetSkinInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      public Builder clearClientGetSkinInfo() {
        if (clientGetSkinInfoBuilder_ == null) {
          clientGetSkinInfo_ = null;
          onChanged();
        } else {
          clientGetSkinInfo_ = null;
          clientGetSkinInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.Builder getClientGetSkinInfoBuilder() {
        
        onChanged();
        return getClientGetSkinInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientGetSkinInfoOrBuilder getClientGetSkinInfoOrBuilder() {
        if (clientGetSkinInfoBuilder_ != null) {
          return clientGetSkinInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetSkinInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.getDefaultInstance() : clientGetSkinInfo_;
        }
      }
      /**
       * <pre>
       ** 获取玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetSkinInfo clientGetSkinInfo = 227;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientGetSkinInfo, com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetSkinInfoOrBuilder> 
          getClientGetSkinInfoFieldBuilder() {
        if (clientGetSkinInfoBuilder_ == null) {
          clientGetSkinInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ClientGetSkinInfo, com.kys.util.netty.proto.UserProto.ClientGetSkinInfo.Builder, com.kys.util.netty.proto.UserProto.ClientGetSkinInfoOrBuilder>(
                  getClientGetSkinInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetSkinInfo_ = null;
        }
        return clientGetSkinInfoBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ClientEquipSkin clientEquipSkin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientEquipSkin, com.kys.util.netty.proto.UserProto.ClientEquipSkin.Builder, com.kys.util.netty.proto.UserProto.ClientEquipSkinOrBuilder> clientEquipSkinBuilder_;
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      public boolean hasClientEquipSkin() {
        return clientEquipSkinBuilder_ != null || clientEquipSkin_ != null;
      }
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientEquipSkin getClientEquipSkin() {
        if (clientEquipSkinBuilder_ == null) {
          return clientEquipSkin_ == null ? com.kys.util.netty.proto.UserProto.ClientEquipSkin.getDefaultInstance() : clientEquipSkin_;
        } else {
          return clientEquipSkinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      public Builder setClientEquipSkin(com.kys.util.netty.proto.UserProto.ClientEquipSkin value) {
        if (clientEquipSkinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientEquipSkin_ = value;
          onChanged();
        } else {
          clientEquipSkinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      public Builder setClientEquipSkin(
          com.kys.util.netty.proto.UserProto.ClientEquipSkin.Builder builderForValue) {
        if (clientEquipSkinBuilder_ == null) {
          clientEquipSkin_ = builderForValue.build();
          onChanged();
        } else {
          clientEquipSkinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      public Builder mergeClientEquipSkin(com.kys.util.netty.proto.UserProto.ClientEquipSkin value) {
        if (clientEquipSkinBuilder_ == null) {
          if (clientEquipSkin_ != null) {
            clientEquipSkin_ =
              com.kys.util.netty.proto.UserProto.ClientEquipSkin.newBuilder(clientEquipSkin_).mergeFrom(value).buildPartial();
          } else {
            clientEquipSkin_ = value;
          }
          onChanged();
        } else {
          clientEquipSkinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      public Builder clearClientEquipSkin() {
        if (clientEquipSkinBuilder_ == null) {
          clientEquipSkin_ = null;
          onChanged();
        } else {
          clientEquipSkin_ = null;
          clientEquipSkinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientEquipSkin.Builder getClientEquipSkinBuilder() {
        
        onChanged();
        return getClientEquipSkinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      public com.kys.util.netty.proto.UserProto.ClientEquipSkinOrBuilder getClientEquipSkinOrBuilder() {
        if (clientEquipSkinBuilder_ != null) {
          return clientEquipSkinBuilder_.getMessageOrBuilder();
        } else {
          return clientEquipSkin_ == null ?
              com.kys.util.netty.proto.UserProto.ClientEquipSkin.getDefaultInstance() : clientEquipSkin_;
        }
      }
      /**
       * <pre>
       ** 玩家修改当前皮肤 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEquipSkin clientEquipSkin = 228;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ClientEquipSkin, com.kys.util.netty.proto.UserProto.ClientEquipSkin.Builder, com.kys.util.netty.proto.UserProto.ClientEquipSkinOrBuilder> 
          getClientEquipSkinFieldBuilder() {
        if (clientEquipSkinBuilder_ == null) {
          clientEquipSkinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ClientEquipSkin, com.kys.util.netty.proto.UserProto.ClientEquipSkin.Builder, com.kys.util.netty.proto.UserProto.ClientEquipSkinOrBuilder>(
                  getClientEquipSkin(),
                  getParentForChildren(),
                  isClean());
          clientEquipSkin_ = null;
        }
        return clientEquipSkinBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetStoreData clientGetStoreData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetStoreData, com.kys.util.netty.proto.StoreProto.ClientGetStoreData.Builder, com.kys.util.netty.proto.StoreProto.ClientGetStoreDataOrBuilder> clientGetStoreDataBuilder_;
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      public boolean hasClientGetStoreData() {
        return clientGetStoreDataBuilder_ != null || clientGetStoreData_ != null;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetStoreData getClientGetStoreData() {
        if (clientGetStoreDataBuilder_ == null) {
          return clientGetStoreData_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetStoreData.getDefaultInstance() : clientGetStoreData_;
        } else {
          return clientGetStoreDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      public Builder setClientGetStoreData(com.kys.util.netty.proto.StoreProto.ClientGetStoreData value) {
        if (clientGetStoreDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetStoreData_ = value;
          onChanged();
        } else {
          clientGetStoreDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      public Builder setClientGetStoreData(
          com.kys.util.netty.proto.StoreProto.ClientGetStoreData.Builder builderForValue) {
        if (clientGetStoreDataBuilder_ == null) {
          clientGetStoreData_ = builderForValue.build();
          onChanged();
        } else {
          clientGetStoreDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      public Builder mergeClientGetStoreData(com.kys.util.netty.proto.StoreProto.ClientGetStoreData value) {
        if (clientGetStoreDataBuilder_ == null) {
          if (clientGetStoreData_ != null) {
            clientGetStoreData_ =
              com.kys.util.netty.proto.StoreProto.ClientGetStoreData.newBuilder(clientGetStoreData_).mergeFrom(value).buildPartial();
          } else {
            clientGetStoreData_ = value;
          }
          onChanged();
        } else {
          clientGetStoreDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      public Builder clearClientGetStoreData() {
        if (clientGetStoreDataBuilder_ == null) {
          clientGetStoreData_ = null;
          onChanged();
        } else {
          clientGetStoreData_ = null;
          clientGetStoreDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetStoreData.Builder getClientGetStoreDataBuilder() {
        
        onChanged();
        return getClientGetStoreDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetStoreDataOrBuilder getClientGetStoreDataOrBuilder() {
        if (clientGetStoreDataBuilder_ != null) {
          return clientGetStoreDataBuilder_.getMessageOrBuilder();
        } else {
          return clientGetStoreData_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetStoreData.getDefaultInstance() : clientGetStoreData_;
        }
      }
      /**
       * <pre>
       ** 获去商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetStoreData clientGetStoreData = 300;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetStoreData, com.kys.util.netty.proto.StoreProto.ClientGetStoreData.Builder, com.kys.util.netty.proto.StoreProto.ClientGetStoreDataOrBuilder> 
          getClientGetStoreDataFieldBuilder() {
        if (clientGetStoreDataBuilder_ == null) {
          clientGetStoreDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetStoreData, com.kys.util.netty.proto.StoreProto.ClientGetStoreData.Builder, com.kys.util.netty.proto.StoreProto.ClientGetStoreDataOrBuilder>(
                  getClientGetStoreData(),
                  getParentForChildren(),
                  isClean());
          clientGetStoreData_ = null;
        }
        return clientGetStoreDataBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientConvertGoods clientConvertGoods_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientConvertGoods, com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder> clientConvertGoodsBuilder_;
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public boolean hasClientConvertGoods() {
        return clientConvertGoodsBuilder_ != null || clientConvertGoods_ != null;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientConvertGoods getClientConvertGoods() {
        if (clientConvertGoodsBuilder_ == null) {
          return clientConvertGoods_ == null ? com.kys.util.netty.proto.StoreProto.ClientConvertGoods.getDefaultInstance() : clientConvertGoods_;
        } else {
          return clientConvertGoodsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public Builder setClientConvertGoods(com.kys.util.netty.proto.StoreProto.ClientConvertGoods value) {
        if (clientConvertGoodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientConvertGoods_ = value;
          onChanged();
        } else {
          clientConvertGoodsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public Builder setClientConvertGoods(
          com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder builderForValue) {
        if (clientConvertGoodsBuilder_ == null) {
          clientConvertGoods_ = builderForValue.build();
          onChanged();
        } else {
          clientConvertGoodsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public Builder mergeClientConvertGoods(com.kys.util.netty.proto.StoreProto.ClientConvertGoods value) {
        if (clientConvertGoodsBuilder_ == null) {
          if (clientConvertGoods_ != null) {
            clientConvertGoods_ =
              com.kys.util.netty.proto.StoreProto.ClientConvertGoods.newBuilder(clientConvertGoods_).mergeFrom(value).buildPartial();
          } else {
            clientConvertGoods_ = value;
          }
          onChanged();
        } else {
          clientConvertGoodsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public Builder clearClientConvertGoods() {
        if (clientConvertGoodsBuilder_ == null) {
          clientConvertGoods_ = null;
          onChanged();
        } else {
          clientConvertGoods_ = null;
          clientConvertGoodsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder getClientConvertGoodsBuilder() {
        
        onChanged();
        return getClientConvertGoodsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder getClientConvertGoodsOrBuilder() {
        if (clientConvertGoodsBuilder_ != null) {
          return clientConvertGoodsBuilder_.getMessageOrBuilder();
        } else {
          return clientConvertGoods_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientConvertGoods.getDefaultInstance() : clientConvertGoods_;
        }
      }
      /**
       * <pre>
       ** 玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientConvertGoods clientConvertGoods = 301;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientConvertGoods, com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder> 
          getClientConvertGoodsFieldBuilder() {
        if (clientConvertGoodsBuilder_ == null) {
          clientConvertGoodsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientConvertGoods, com.kys.util.netty.proto.StoreProto.ClientConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientConvertGoodsOrBuilder>(
                  getClientConvertGoods(),
                  getParentForChildren(),
                  isClean());
          clientConvertGoods_ = null;
        }
        return clientConvertGoodsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery clientWXPayResultQuery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder> clientWXPayResultQueryBuilder_;
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public boolean hasClientWXPayResultQuery() {
        return clientWXPayResultQueryBuilder_ != null || clientWXPayResultQuery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery getClientWXPayResultQuery() {
        if (clientWXPayResultQueryBuilder_ == null) {
          return clientWXPayResultQuery_ == null ? com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.getDefaultInstance() : clientWXPayResultQuery_;
        } else {
          return clientWXPayResultQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public Builder setClientWXPayResultQuery(com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery value) {
        if (clientWXPayResultQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientWXPayResultQuery_ = value;
          onChanged();
        } else {
          clientWXPayResultQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public Builder setClientWXPayResultQuery(
          com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder builderForValue) {
        if (clientWXPayResultQueryBuilder_ == null) {
          clientWXPayResultQuery_ = builderForValue.build();
          onChanged();
        } else {
          clientWXPayResultQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public Builder mergeClientWXPayResultQuery(com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery value) {
        if (clientWXPayResultQueryBuilder_ == null) {
          if (clientWXPayResultQuery_ != null) {
            clientWXPayResultQuery_ =
              com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.newBuilder(clientWXPayResultQuery_).mergeFrom(value).buildPartial();
          } else {
            clientWXPayResultQuery_ = value;
          }
          onChanged();
        } else {
          clientWXPayResultQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public Builder clearClientWXPayResultQuery() {
        if (clientWXPayResultQueryBuilder_ == null) {
          clientWXPayResultQuery_ = null;
          onChanged();
        } else {
          clientWXPayResultQuery_ = null;
          clientWXPayResultQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder getClientWXPayResultQueryBuilder() {
        
        onChanged();
        return getClientWXPayResultQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder getClientWXPayResultQueryOrBuilder() {
        if (clientWXPayResultQueryBuilder_ != null) {
          return clientWXPayResultQueryBuilder_.getMessageOrBuilder();
        } else {
          return clientWXPayResultQuery_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.getDefaultInstance() : clientWXPayResultQuery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求查询支付结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientWXPayResultQuery clientWXPayResultQuery = 302;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder> 
          getClientWXPayResultQueryFieldBuilder() {
        if (clientWXPayResultQueryBuilder_ == null) {
          clientWXPayResultQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQuery.Builder, com.kys.util.netty.proto.StoreProto.ClientWXPayResultQueryOrBuilder>(
                  getClientWXPayResultQuery(),
                  getParentForChildren(),
                  isClean());
          clientWXPayResultQuery_ = null;
        }
        return clientWXPayResultQueryBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods clientBuyOrderGoods_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder> clientBuyOrderGoodsBuilder_;
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public boolean hasClientBuyOrderGoods() {
        return clientBuyOrderGoodsBuilder_ != null || clientBuyOrderGoods_ != null;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods getClientBuyOrderGoods() {
        if (clientBuyOrderGoodsBuilder_ == null) {
          return clientBuyOrderGoods_ == null ? com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.getDefaultInstance() : clientBuyOrderGoods_;
        } else {
          return clientBuyOrderGoodsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public Builder setClientBuyOrderGoods(com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods value) {
        if (clientBuyOrderGoodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientBuyOrderGoods_ = value;
          onChanged();
        } else {
          clientBuyOrderGoodsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public Builder setClientBuyOrderGoods(
          com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder builderForValue) {
        if (clientBuyOrderGoodsBuilder_ == null) {
          clientBuyOrderGoods_ = builderForValue.build();
          onChanged();
        } else {
          clientBuyOrderGoodsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public Builder mergeClientBuyOrderGoods(com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods value) {
        if (clientBuyOrderGoodsBuilder_ == null) {
          if (clientBuyOrderGoods_ != null) {
            clientBuyOrderGoods_ =
              com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.newBuilder(clientBuyOrderGoods_).mergeFrom(value).buildPartial();
          } else {
            clientBuyOrderGoods_ = value;
          }
          onChanged();
        } else {
          clientBuyOrderGoodsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public Builder clearClientBuyOrderGoods() {
        if (clientBuyOrderGoodsBuilder_ == null) {
          clientBuyOrderGoods_ = null;
          onChanged();
        } else {
          clientBuyOrderGoods_ = null;
          clientBuyOrderGoodsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder getClientBuyOrderGoodsBuilder() {
        
        onChanged();
        return getClientBuyOrderGoodsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder getClientBuyOrderGoodsOrBuilder() {
        if (clientBuyOrderGoodsBuilder_ != null) {
          return clientBuyOrderGoodsBuilder_.getMessageOrBuilder();
        } else {
          return clientBuyOrderGoods_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.getDefaultInstance() : clientBuyOrderGoods_;
        }
      }
      /**
       * <pre>
       ** Client请求商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientBuyOrderGoods clientBuyOrderGoods = 303;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder> 
          getClientBuyOrderGoodsFieldBuilder() {
        if (clientBuyOrderGoodsBuilder_ == null) {
          clientBuyOrderGoodsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ClientBuyOrderGoodsOrBuilder>(
                  getClientBuyOrderGoods(),
                  getParentForChildren(),
                  isClean());
          clientBuyOrderGoods_ = null;
        }
        return clientBuyOrderGoodsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge clientGetFirstCharge_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge, com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder> clientGetFirstChargeBuilder_;
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public boolean hasClientGetFirstCharge() {
        return clientGetFirstChargeBuilder_ != null || clientGetFirstCharge_ != null;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge getClientGetFirstCharge() {
        if (clientGetFirstChargeBuilder_ == null) {
          return clientGetFirstCharge_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.getDefaultInstance() : clientGetFirstCharge_;
        } else {
          return clientGetFirstChargeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public Builder setClientGetFirstCharge(com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge value) {
        if (clientGetFirstChargeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetFirstCharge_ = value;
          onChanged();
        } else {
          clientGetFirstChargeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public Builder setClientGetFirstCharge(
          com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder builderForValue) {
        if (clientGetFirstChargeBuilder_ == null) {
          clientGetFirstCharge_ = builderForValue.build();
          onChanged();
        } else {
          clientGetFirstChargeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public Builder mergeClientGetFirstCharge(com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge value) {
        if (clientGetFirstChargeBuilder_ == null) {
          if (clientGetFirstCharge_ != null) {
            clientGetFirstCharge_ =
              com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.newBuilder(clientGetFirstCharge_).mergeFrom(value).buildPartial();
          } else {
            clientGetFirstCharge_ = value;
          }
          onChanged();
        } else {
          clientGetFirstChargeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public Builder clearClientGetFirstCharge() {
        if (clientGetFirstChargeBuilder_ == null) {
          clientGetFirstCharge_ = null;
          onChanged();
        } else {
          clientGetFirstCharge_ = null;
          clientGetFirstChargeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder getClientGetFirstChargeBuilder() {
        
        onChanged();
        return getClientGetFirstChargeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder getClientGetFirstChargeOrBuilder() {
        if (clientGetFirstChargeBuilder_ != null) {
          return clientGetFirstChargeBuilder_.getMessageOrBuilder();
        } else {
          return clientGetFirstCharge_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.getDefaultInstance() : clientGetFirstCharge_;
        }
      }
      /**
       * <pre>
       ** 客户端请求首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetFirstCharge clientGetFirstCharge = 304;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge, com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder> 
          getClientGetFirstChargeFieldBuilder() {
        if (clientGetFirstChargeBuilder_ == null) {
          clientGetFirstChargeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge, com.kys.util.netty.proto.StoreProto.ClientGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ClientGetFirstChargeOrBuilder>(
                  getClientGetFirstCharge(),
                  getParentForChildren(),
                  isClean());
          clientGetFirstCharge_ = null;
        }
        return clientGetFirstChargeBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetDailyGift clientGetDailyGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetDailyGift, com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder> clientGetDailyGiftBuilder_;
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public boolean hasClientGetDailyGift() {
        return clientGetDailyGiftBuilder_ != null || clientGetDailyGift_ != null;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetDailyGift getClientGetDailyGift() {
        if (clientGetDailyGiftBuilder_ == null) {
          return clientGetDailyGift_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.getDefaultInstance() : clientGetDailyGift_;
        } else {
          return clientGetDailyGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public Builder setClientGetDailyGift(com.kys.util.netty.proto.StoreProto.ClientGetDailyGift value) {
        if (clientGetDailyGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetDailyGift_ = value;
          onChanged();
        } else {
          clientGetDailyGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public Builder setClientGetDailyGift(
          com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder builderForValue) {
        if (clientGetDailyGiftBuilder_ == null) {
          clientGetDailyGift_ = builderForValue.build();
          onChanged();
        } else {
          clientGetDailyGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public Builder mergeClientGetDailyGift(com.kys.util.netty.proto.StoreProto.ClientGetDailyGift value) {
        if (clientGetDailyGiftBuilder_ == null) {
          if (clientGetDailyGift_ != null) {
            clientGetDailyGift_ =
              com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.newBuilder(clientGetDailyGift_).mergeFrom(value).buildPartial();
          } else {
            clientGetDailyGift_ = value;
          }
          onChanged();
        } else {
          clientGetDailyGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public Builder clearClientGetDailyGift() {
        if (clientGetDailyGiftBuilder_ == null) {
          clientGetDailyGift_ = null;
          onChanged();
        } else {
          clientGetDailyGift_ = null;
          clientGetDailyGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder getClientGetDailyGiftBuilder() {
        
        onChanged();
        return getClientGetDailyGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder getClientGetDailyGiftOrBuilder() {
        if (clientGetDailyGiftBuilder_ != null) {
          return clientGetDailyGiftBuilder_.getMessageOrBuilder();
        } else {
          return clientGetDailyGift_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.getDefaultInstance() : clientGetDailyGift_;
        }
      }
      /**
       * <pre>
       ** 客户端请求每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyGift clientGetDailyGift = 305;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetDailyGift, com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder> 
          getClientGetDailyGiftFieldBuilder() {
        if (clientGetDailyGiftBuilder_ == null) {
          clientGetDailyGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetDailyGift, com.kys.util.netty.proto.StoreProto.ClientGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetDailyGiftOrBuilder>(
                  getClientGetDailyGift(),
                  getParentForChildren(),
                  isClean());
          clientGetDailyGift_ = null;
        }
        return clientGetDailyGiftBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetMonthCard clientGetMonthCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetMonthCard, com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder> clientGetMonthCardBuilder_;
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public boolean hasClientGetMonthCard() {
        return clientGetMonthCardBuilder_ != null || clientGetMonthCard_ != null;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetMonthCard getClientGetMonthCard() {
        if (clientGetMonthCardBuilder_ == null) {
          return clientGetMonthCard_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.getDefaultInstance() : clientGetMonthCard_;
        } else {
          return clientGetMonthCardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public Builder setClientGetMonthCard(com.kys.util.netty.proto.StoreProto.ClientGetMonthCard value) {
        if (clientGetMonthCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMonthCard_ = value;
          onChanged();
        } else {
          clientGetMonthCardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public Builder setClientGetMonthCard(
          com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder builderForValue) {
        if (clientGetMonthCardBuilder_ == null) {
          clientGetMonthCard_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMonthCardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public Builder mergeClientGetMonthCard(com.kys.util.netty.proto.StoreProto.ClientGetMonthCard value) {
        if (clientGetMonthCardBuilder_ == null) {
          if (clientGetMonthCard_ != null) {
            clientGetMonthCard_ =
              com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.newBuilder(clientGetMonthCard_).mergeFrom(value).buildPartial();
          } else {
            clientGetMonthCard_ = value;
          }
          onChanged();
        } else {
          clientGetMonthCardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public Builder clearClientGetMonthCard() {
        if (clientGetMonthCardBuilder_ == null) {
          clientGetMonthCard_ = null;
          onChanged();
        } else {
          clientGetMonthCard_ = null;
          clientGetMonthCardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder getClientGetMonthCardBuilder() {
        
        onChanged();
        return getClientGetMonthCardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder getClientGetMonthCardOrBuilder() {
        if (clientGetMonthCardBuilder_ != null) {
          return clientGetMonthCardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMonthCard_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.getDefaultInstance() : clientGetMonthCard_;
        }
      }
      /**
       * <pre>
       ** 客户端请求钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMonthCard clientGetMonthCard = 306;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetMonthCard, com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder> 
          getClientGetMonthCardFieldBuilder() {
        if (clientGetMonthCardBuilder_ == null) {
          clientGetMonthCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetMonthCard, com.kys.util.netty.proto.StoreProto.ClientGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ClientGetMonthCardOrBuilder>(
                  getClientGetMonthCard(),
                  getParentForChildren(),
                  isClean());
          clientGetMonthCard_ = null;
        }
        return clientGetMonthCardBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift clientGetResurgenceGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder> clientGetResurgenceGiftBuilder_;
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public boolean hasClientGetResurgenceGift() {
        return clientGetResurgenceGiftBuilder_ != null || clientGetResurgenceGift_ != null;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift getClientGetResurgenceGift() {
        if (clientGetResurgenceGiftBuilder_ == null) {
          return clientGetResurgenceGift_ == null ? com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.getDefaultInstance() : clientGetResurgenceGift_;
        } else {
          return clientGetResurgenceGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public Builder setClientGetResurgenceGift(com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift value) {
        if (clientGetResurgenceGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetResurgenceGift_ = value;
          onChanged();
        } else {
          clientGetResurgenceGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public Builder setClientGetResurgenceGift(
          com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder builderForValue) {
        if (clientGetResurgenceGiftBuilder_ == null) {
          clientGetResurgenceGift_ = builderForValue.build();
          onChanged();
        } else {
          clientGetResurgenceGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public Builder mergeClientGetResurgenceGift(com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift value) {
        if (clientGetResurgenceGiftBuilder_ == null) {
          if (clientGetResurgenceGift_ != null) {
            clientGetResurgenceGift_ =
              com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.newBuilder(clientGetResurgenceGift_).mergeFrom(value).buildPartial();
          } else {
            clientGetResurgenceGift_ = value;
          }
          onChanged();
        } else {
          clientGetResurgenceGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public Builder clearClientGetResurgenceGift() {
        if (clientGetResurgenceGiftBuilder_ == null) {
          clientGetResurgenceGift_ = null;
          onChanged();
        } else {
          clientGetResurgenceGift_ = null;
          clientGetResurgenceGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder getClientGetResurgenceGiftBuilder() {
        
        onChanged();
        return getClientGetResurgenceGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder getClientGetResurgenceGiftOrBuilder() {
        if (clientGetResurgenceGiftBuilder_ != null) {
          return clientGetResurgenceGiftBuilder_.getMessageOrBuilder();
        } else {
          return clientGetResurgenceGift_ == null ?
              com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.getDefaultInstance() : clientGetResurgenceGift_;
        }
      }
      /**
       * <pre>
       ** 客户端请求复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetResurgenceGift clientGetResurgenceGift = 307;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder> 
          getClientGetResurgenceGiftFieldBuilder() {
        if (clientGetResurgenceGiftBuilder_ == null) {
          clientGetResurgenceGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ClientGetResurgenceGiftOrBuilder>(
                  getClientGetResurgenceGift(),
                  getParentForChildren(),
                  isClean());
          clientGetResurgenceGift_ = null;
        }
        return clientGetResurgenceGiftBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetAnnounce clientGetAnnounce_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetAnnounce, com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder> clientGetAnnounceBuilder_;
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public boolean hasClientGetAnnounce() {
        return clientGetAnnounceBuilder_ != null || clientGetAnnounce_ != null;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAnnounce getClientGetAnnounce() {
        if (clientGetAnnounceBuilder_ == null) {
          return clientGetAnnounce_ == null ? com.kys.util.netty.proto.HallProto.ClientGetAnnounce.getDefaultInstance() : clientGetAnnounce_;
        } else {
          return clientGetAnnounceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public Builder setClientGetAnnounce(com.kys.util.netty.proto.HallProto.ClientGetAnnounce value) {
        if (clientGetAnnounceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetAnnounce_ = value;
          onChanged();
        } else {
          clientGetAnnounceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public Builder setClientGetAnnounce(
          com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder builderForValue) {
        if (clientGetAnnounceBuilder_ == null) {
          clientGetAnnounce_ = builderForValue.build();
          onChanged();
        } else {
          clientGetAnnounceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public Builder mergeClientGetAnnounce(com.kys.util.netty.proto.HallProto.ClientGetAnnounce value) {
        if (clientGetAnnounceBuilder_ == null) {
          if (clientGetAnnounce_ != null) {
            clientGetAnnounce_ =
              com.kys.util.netty.proto.HallProto.ClientGetAnnounce.newBuilder(clientGetAnnounce_).mergeFrom(value).buildPartial();
          } else {
            clientGetAnnounce_ = value;
          }
          onChanged();
        } else {
          clientGetAnnounceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public Builder clearClientGetAnnounce() {
        if (clientGetAnnounceBuilder_ == null) {
          clientGetAnnounce_ = null;
          onChanged();
        } else {
          clientGetAnnounce_ = null;
          clientGetAnnounceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder getClientGetAnnounceBuilder() {
        
        onChanged();
        return getClientGetAnnounceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder getClientGetAnnounceOrBuilder() {
        if (clientGetAnnounceBuilder_ != null) {
          return clientGetAnnounceBuilder_.getMessageOrBuilder();
        } else {
          return clientGetAnnounce_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetAnnounce.getDefaultInstance() : clientGetAnnounce_;
        }
      }
      /**
       * <pre>
       ** 客户端请求公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetAnnounce clientGetAnnounce = 500;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetAnnounce, com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder> 
          getClientGetAnnounceFieldBuilder() {
        if (clientGetAnnounceBuilder_ == null) {
          clientGetAnnounceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetAnnounce, com.kys.util.netty.proto.HallProto.ClientGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ClientGetAnnounceOrBuilder>(
                  getClientGetAnnounce(),
                  getParentForChildren(),
                  isClean());
          clientGetAnnounce_ = null;
        }
        return clientGetAnnounceBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetMail clientGetMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMail, com.kys.util.netty.proto.HallProto.ClientGetMail.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder> clientGetMailBuilder_;
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public boolean hasClientGetMail() {
        return clientGetMailBuilder_ != null || clientGetMail_ != null;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMail getClientGetMail() {
        if (clientGetMailBuilder_ == null) {
          return clientGetMail_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMail.getDefaultInstance() : clientGetMail_;
        } else {
          return clientGetMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public Builder setClientGetMail(com.kys.util.netty.proto.HallProto.ClientGetMail value) {
        if (clientGetMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMail_ = value;
          onChanged();
        } else {
          clientGetMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public Builder setClientGetMail(
          com.kys.util.netty.proto.HallProto.ClientGetMail.Builder builderForValue) {
        if (clientGetMailBuilder_ == null) {
          clientGetMail_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public Builder mergeClientGetMail(com.kys.util.netty.proto.HallProto.ClientGetMail value) {
        if (clientGetMailBuilder_ == null) {
          if (clientGetMail_ != null) {
            clientGetMail_ =
              com.kys.util.netty.proto.HallProto.ClientGetMail.newBuilder(clientGetMail_).mergeFrom(value).buildPartial();
          } else {
            clientGetMail_ = value;
          }
          onChanged();
        } else {
          clientGetMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public Builder clearClientGetMail() {
        if (clientGetMailBuilder_ == null) {
          clientGetMail_ = null;
          onChanged();
        } else {
          clientGetMail_ = null;
          clientGetMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMail.Builder getClientGetMailBuilder() {
        
        onChanged();
        return getClientGetMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder getClientGetMailOrBuilder() {
        if (clientGetMailBuilder_ != null) {
          return clientGetMailBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMail_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetMail.getDefaultInstance() : clientGetMail_;
        }
      }
      /**
       * <pre>
       ** 客户端获取邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMail clientGetMail = 600;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMail, com.kys.util.netty.proto.HallProto.ClientGetMail.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder> 
          getClientGetMailFieldBuilder() {
        if (clientGetMailBuilder_ == null) {
          clientGetMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetMail, com.kys.util.netty.proto.HallProto.ClientGetMail.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailOrBuilder>(
                  getClientGetMail(),
                  getParentForChildren(),
                  isClean());
          clientGetMail_ = null;
        }
        return clientGetMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetMailReward clientGetMailReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMailReward, com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder> clientGetMailRewardBuilder_;
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public boolean hasClientGetMailReward() {
        return clientGetMailRewardBuilder_ != null || clientGetMailReward_ != null;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMailReward getClientGetMailReward() {
        if (clientGetMailRewardBuilder_ == null) {
          return clientGetMailReward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetMailReward.getDefaultInstance() : clientGetMailReward_;
        } else {
          return clientGetMailRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public Builder setClientGetMailReward(com.kys.util.netty.proto.HallProto.ClientGetMailReward value) {
        if (clientGetMailRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetMailReward_ = value;
          onChanged();
        } else {
          clientGetMailRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public Builder setClientGetMailReward(
          com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder builderForValue) {
        if (clientGetMailRewardBuilder_ == null) {
          clientGetMailReward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetMailRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public Builder mergeClientGetMailReward(com.kys.util.netty.proto.HallProto.ClientGetMailReward value) {
        if (clientGetMailRewardBuilder_ == null) {
          if (clientGetMailReward_ != null) {
            clientGetMailReward_ =
              com.kys.util.netty.proto.HallProto.ClientGetMailReward.newBuilder(clientGetMailReward_).mergeFrom(value).buildPartial();
          } else {
            clientGetMailReward_ = value;
          }
          onChanged();
        } else {
          clientGetMailRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public Builder clearClientGetMailReward() {
        if (clientGetMailRewardBuilder_ == null) {
          clientGetMailReward_ = null;
          onChanged();
        } else {
          clientGetMailReward_ = null;
          clientGetMailRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder getClientGetMailRewardBuilder() {
        
        onChanged();
        return getClientGetMailRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder getClientGetMailRewardOrBuilder() {
        if (clientGetMailRewardBuilder_ != null) {
          return clientGetMailRewardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetMailReward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetMailReward.getDefaultInstance() : clientGetMailReward_;
        }
      }
      /**
       * <pre>
       ** 客户端获取邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetMailReward clientGetMailReward = 601;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetMailReward, com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder> 
          getClientGetMailRewardFieldBuilder() {
        if (clientGetMailRewardBuilder_ == null) {
          clientGetMailRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetMailReward, com.kys.util.netty.proto.HallProto.ClientGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetMailRewardOrBuilder>(
                  getClientGetMailReward(),
                  getParentForChildren(),
                  isClean());
          clientGetMailReward_ = null;
        }
        return clientGetMailRewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientDelMail clientDelMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDelMail, com.kys.util.netty.proto.HallProto.ClientDelMail.Builder, com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder> clientDelMailBuilder_;
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public boolean hasClientDelMail() {
        return clientDelMailBuilder_ != null || clientDelMail_ != null;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDelMail getClientDelMail() {
        if (clientDelMailBuilder_ == null) {
          return clientDelMail_ == null ? com.kys.util.netty.proto.HallProto.ClientDelMail.getDefaultInstance() : clientDelMail_;
        } else {
          return clientDelMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public Builder setClientDelMail(com.kys.util.netty.proto.HallProto.ClientDelMail value) {
        if (clientDelMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDelMail_ = value;
          onChanged();
        } else {
          clientDelMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public Builder setClientDelMail(
          com.kys.util.netty.proto.HallProto.ClientDelMail.Builder builderForValue) {
        if (clientDelMailBuilder_ == null) {
          clientDelMail_ = builderForValue.build();
          onChanged();
        } else {
          clientDelMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public Builder mergeClientDelMail(com.kys.util.netty.proto.HallProto.ClientDelMail value) {
        if (clientDelMailBuilder_ == null) {
          if (clientDelMail_ != null) {
            clientDelMail_ =
              com.kys.util.netty.proto.HallProto.ClientDelMail.newBuilder(clientDelMail_).mergeFrom(value).buildPartial();
          } else {
            clientDelMail_ = value;
          }
          onChanged();
        } else {
          clientDelMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public Builder clearClientDelMail() {
        if (clientDelMailBuilder_ == null) {
          clientDelMail_ = null;
          onChanged();
        } else {
          clientDelMail_ = null;
          clientDelMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDelMail.Builder getClientDelMailBuilder() {
        
        onChanged();
        return getClientDelMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder getClientDelMailOrBuilder() {
        if (clientDelMailBuilder_ != null) {
          return clientDelMailBuilder_.getMessageOrBuilder();
        } else {
          return clientDelMail_ == null ?
              com.kys.util.netty.proto.HallProto.ClientDelMail.getDefaultInstance() : clientDelMail_;
        }
      }
      /**
       * <pre>
       ** 客户端请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDelMail clientDelMail = 602;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDelMail, com.kys.util.netty.proto.HallProto.ClientDelMail.Builder, com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder> 
          getClientDelMailFieldBuilder() {
        if (clientDelMailBuilder_ == null) {
          clientDelMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientDelMail, com.kys.util.netty.proto.HallProto.ClientDelMail.Builder, com.kys.util.netty.proto.HallProto.ClientDelMailOrBuilder>(
                  getClientDelMail(),
                  getParentForChildren(),
                  isClean());
          clientDelMail_ = null;
        }
        return clientDelMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientReadMail clientReadMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientReadMail, com.kys.util.netty.proto.HallProto.ClientReadMail.Builder, com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder> clientReadMailBuilder_;
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public boolean hasClientReadMail() {
        return clientReadMailBuilder_ != null || clientReadMail_ != null;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientReadMail getClientReadMail() {
        if (clientReadMailBuilder_ == null) {
          return clientReadMail_ == null ? com.kys.util.netty.proto.HallProto.ClientReadMail.getDefaultInstance() : clientReadMail_;
        } else {
          return clientReadMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public Builder setClientReadMail(com.kys.util.netty.proto.HallProto.ClientReadMail value) {
        if (clientReadMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientReadMail_ = value;
          onChanged();
        } else {
          clientReadMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public Builder setClientReadMail(
          com.kys.util.netty.proto.HallProto.ClientReadMail.Builder builderForValue) {
        if (clientReadMailBuilder_ == null) {
          clientReadMail_ = builderForValue.build();
          onChanged();
        } else {
          clientReadMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public Builder mergeClientReadMail(com.kys.util.netty.proto.HallProto.ClientReadMail value) {
        if (clientReadMailBuilder_ == null) {
          if (clientReadMail_ != null) {
            clientReadMail_ =
              com.kys.util.netty.proto.HallProto.ClientReadMail.newBuilder(clientReadMail_).mergeFrom(value).buildPartial();
          } else {
            clientReadMail_ = value;
          }
          onChanged();
        } else {
          clientReadMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public Builder clearClientReadMail() {
        if (clientReadMailBuilder_ == null) {
          clientReadMail_ = null;
          onChanged();
        } else {
          clientReadMail_ = null;
          clientReadMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientReadMail.Builder getClientReadMailBuilder() {
        
        onChanged();
        return getClientReadMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder getClientReadMailOrBuilder() {
        if (clientReadMailBuilder_ != null) {
          return clientReadMailBuilder_.getMessageOrBuilder();
        } else {
          return clientReadMail_ == null ?
              com.kys.util.netty.proto.HallProto.ClientReadMail.getDefaultInstance() : clientReadMail_;
        }
      }
      /**
       * <pre>
       ** 客户端已经读取了邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientReadMail clientReadMail = 603;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientReadMail, com.kys.util.netty.proto.HallProto.ClientReadMail.Builder, com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder> 
          getClientReadMailFieldBuilder() {
        if (clientReadMailBuilder_ == null) {
          clientReadMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientReadMail, com.kys.util.netty.proto.HallProto.ClientReadMail.Builder, com.kys.util.netty.proto.HallProto.ClientReadMailOrBuilder>(
                  getClientReadMail(),
                  getParentForChildren(),
                  isClean());
          clientReadMail_ = null;
        }
        return clientReadMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientDel2R clientDel2R_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDel2R, com.kys.util.netty.proto.HallProto.ClientDel2R.Builder, com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder> clientDel2RBuilder_;
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public boolean hasClientDel2R() {
        return clientDel2RBuilder_ != null || clientDel2R_ != null;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDel2R getClientDel2R() {
        if (clientDel2RBuilder_ == null) {
          return clientDel2R_ == null ? com.kys.util.netty.proto.HallProto.ClientDel2R.getDefaultInstance() : clientDel2R_;
        } else {
          return clientDel2RBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public Builder setClientDel2R(com.kys.util.netty.proto.HallProto.ClientDel2R value) {
        if (clientDel2RBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDel2R_ = value;
          onChanged();
        } else {
          clientDel2RBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public Builder setClientDel2R(
          com.kys.util.netty.proto.HallProto.ClientDel2R.Builder builderForValue) {
        if (clientDel2RBuilder_ == null) {
          clientDel2R_ = builderForValue.build();
          onChanged();
        } else {
          clientDel2RBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public Builder mergeClientDel2R(com.kys.util.netty.proto.HallProto.ClientDel2R value) {
        if (clientDel2RBuilder_ == null) {
          if (clientDel2R_ != null) {
            clientDel2R_ =
              com.kys.util.netty.proto.HallProto.ClientDel2R.newBuilder(clientDel2R_).mergeFrom(value).buildPartial();
          } else {
            clientDel2R_ = value;
          }
          onChanged();
        } else {
          clientDel2RBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public Builder clearClientDel2R() {
        if (clientDel2RBuilder_ == null) {
          clientDel2R_ = null;
          onChanged();
        } else {
          clientDel2R_ = null;
          clientDel2RBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDel2R.Builder getClientDel2RBuilder() {
        
        onChanged();
        return getClientDel2RFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder getClientDel2ROrBuilder() {
        if (clientDel2RBuilder_ != null) {
          return clientDel2RBuilder_.getMessageOrBuilder();
        } else {
          return clientDel2R_ == null ?
              com.kys.util.netty.proto.HallProto.ClientDel2R.getDefaultInstance() : clientDel2R_;
        }
      }
      /**
       * <pre>
       ** 客户端请求删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDel2R clientDel2R = 604;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientDel2R, com.kys.util.netty.proto.HallProto.ClientDel2R.Builder, com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder> 
          getClientDel2RFieldBuilder() {
        if (clientDel2RBuilder_ == null) {
          clientDel2RBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientDel2R, com.kys.util.netty.proto.HallProto.ClientDel2R.Builder, com.kys.util.netty.proto.HallProto.ClientDel2ROrBuilder>(
                  getClientDel2R(),
                  getParentForChildren(),
                  isClean());
          clientDel2R_ = null;
        }
        return clientDel2RBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientQueryDailyTask clientQueryDailyTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryDailyTask, com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder> clientQueryDailyTaskBuilder_;
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public boolean hasClientQueryDailyTask() {
        return clientQueryDailyTaskBuilder_ != null || clientQueryDailyTask_ != null;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryDailyTask getClientQueryDailyTask() {
        if (clientQueryDailyTaskBuilder_ == null) {
          return clientQueryDailyTask_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.getDefaultInstance() : clientQueryDailyTask_;
        } else {
          return clientQueryDailyTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public Builder setClientQueryDailyTask(com.kys.util.netty.proto.HallProto.ClientQueryDailyTask value) {
        if (clientQueryDailyTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryDailyTask_ = value;
          onChanged();
        } else {
          clientQueryDailyTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public Builder setClientQueryDailyTask(
          com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder builderForValue) {
        if (clientQueryDailyTaskBuilder_ == null) {
          clientQueryDailyTask_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryDailyTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public Builder mergeClientQueryDailyTask(com.kys.util.netty.proto.HallProto.ClientQueryDailyTask value) {
        if (clientQueryDailyTaskBuilder_ == null) {
          if (clientQueryDailyTask_ != null) {
            clientQueryDailyTask_ =
              com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.newBuilder(clientQueryDailyTask_).mergeFrom(value).buildPartial();
          } else {
            clientQueryDailyTask_ = value;
          }
          onChanged();
        } else {
          clientQueryDailyTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public Builder clearClientQueryDailyTask() {
        if (clientQueryDailyTaskBuilder_ == null) {
          clientQueryDailyTask_ = null;
          onChanged();
        } else {
          clientQueryDailyTask_ = null;
          clientQueryDailyTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder getClientQueryDailyTaskBuilder() {
        
        onChanged();
        return getClientQueryDailyTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder getClientQueryDailyTaskOrBuilder() {
        if (clientQueryDailyTaskBuilder_ != null) {
          return clientQueryDailyTaskBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryDailyTask_ == null ?
              com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.getDefaultInstance() : clientQueryDailyTask_;
        }
      }
      /**
       * <pre>
       ** 客户端请求每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryDailyTask clientQueryDailyTask = 700;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryDailyTask, com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder> 
          getClientQueryDailyTaskFieldBuilder() {
        if (clientQueryDailyTaskBuilder_ == null) {
          clientQueryDailyTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientQueryDailyTask, com.kys.util.netty.proto.HallProto.ClientQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryDailyTaskOrBuilder>(
                  getClientQueryDailyTask(),
                  getParentForChildren(),
                  isClean());
          clientQueryDailyTask_ = null;
        }
        return clientQueryDailyTaskBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward clientGetDailyTaskAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward, com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAwardOrBuilder> clientGetDailyTaskAwardBuilder_;
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      public boolean hasClientGetDailyTaskAward() {
        return clientGetDailyTaskAwardBuilder_ != null || clientGetDailyTaskAward_ != null;
      }
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward getClientGetDailyTaskAward() {
        if (clientGetDailyTaskAwardBuilder_ == null) {
          return clientGetDailyTaskAward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.getDefaultInstance() : clientGetDailyTaskAward_;
        } else {
          return clientGetDailyTaskAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      public Builder setClientGetDailyTaskAward(com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward value) {
        if (clientGetDailyTaskAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetDailyTaskAward_ = value;
          onChanged();
        } else {
          clientGetDailyTaskAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      public Builder setClientGetDailyTaskAward(
          com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.Builder builderForValue) {
        if (clientGetDailyTaskAwardBuilder_ == null) {
          clientGetDailyTaskAward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetDailyTaskAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      public Builder mergeClientGetDailyTaskAward(com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward value) {
        if (clientGetDailyTaskAwardBuilder_ == null) {
          if (clientGetDailyTaskAward_ != null) {
            clientGetDailyTaskAward_ =
              com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.newBuilder(clientGetDailyTaskAward_).mergeFrom(value).buildPartial();
          } else {
            clientGetDailyTaskAward_ = value;
          }
          onChanged();
        } else {
          clientGetDailyTaskAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      public Builder clearClientGetDailyTaskAward() {
        if (clientGetDailyTaskAwardBuilder_ == null) {
          clientGetDailyTaskAward_ = null;
          onChanged();
        } else {
          clientGetDailyTaskAward_ = null;
          clientGetDailyTaskAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.Builder getClientGetDailyTaskAwardBuilder() {
        
        onChanged();
        return getClientGetDailyTaskAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAwardOrBuilder getClientGetDailyTaskAwardOrBuilder() {
        if (clientGetDailyTaskAwardBuilder_ != null) {
          return clientGetDailyTaskAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetDailyTaskAward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.getDefaultInstance() : clientGetDailyTaskAward_;
        }
      }
      /**
       * <pre>
       ** 客户端领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDailyTaskAward clientGetDailyTaskAward = 701;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward, com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAwardOrBuilder> 
          getClientGetDailyTaskAwardFieldBuilder() {
        if (clientGetDailyTaskAwardBuilder_ == null) {
          clientGetDailyTaskAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward, com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDailyTaskAwardOrBuilder>(
                  getClientGetDailyTaskAward(),
                  getParentForChildren(),
                  isClean());
          clientGetDailyTaskAward_ = null;
        }
        return clientGetDailyTaskAwardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetNoviceReward clientGetNoviceReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetNoviceReward, com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder> clientGetNoviceRewardBuilder_;
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public boolean hasClientGetNoviceReward() {
        return clientGetNoviceRewardBuilder_ != null || clientGetNoviceReward_ != null;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNoviceReward getClientGetNoviceReward() {
        if (clientGetNoviceRewardBuilder_ == null) {
          return clientGetNoviceReward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.getDefaultInstance() : clientGetNoviceReward_;
        } else {
          return clientGetNoviceRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public Builder setClientGetNoviceReward(com.kys.util.netty.proto.HallProto.ClientGetNoviceReward value) {
        if (clientGetNoviceRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetNoviceReward_ = value;
          onChanged();
        } else {
          clientGetNoviceRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public Builder setClientGetNoviceReward(
          com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder builderForValue) {
        if (clientGetNoviceRewardBuilder_ == null) {
          clientGetNoviceReward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetNoviceRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public Builder mergeClientGetNoviceReward(com.kys.util.netty.proto.HallProto.ClientGetNoviceReward value) {
        if (clientGetNoviceRewardBuilder_ == null) {
          if (clientGetNoviceReward_ != null) {
            clientGetNoviceReward_ =
              com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.newBuilder(clientGetNoviceReward_).mergeFrom(value).buildPartial();
          } else {
            clientGetNoviceReward_ = value;
          }
          onChanged();
        } else {
          clientGetNoviceRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public Builder clearClientGetNoviceReward() {
        if (clientGetNoviceRewardBuilder_ == null) {
          clientGetNoviceReward_ = null;
          onChanged();
        } else {
          clientGetNoviceReward_ = null;
          clientGetNoviceRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder getClientGetNoviceRewardBuilder() {
        
        onChanged();
        return getClientGetNoviceRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder getClientGetNoviceRewardOrBuilder() {
        if (clientGetNoviceRewardBuilder_ != null) {
          return clientGetNoviceRewardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetNoviceReward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.getDefaultInstance() : clientGetNoviceReward_;
        }
      }
      /**
       * <pre>
       ** 客户端请求抽取新手引导奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetNoviceReward clientGetNoviceReward = 702;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetNoviceReward, com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder> 
          getClientGetNoviceRewardFieldBuilder() {
        if (clientGetNoviceRewardBuilder_ == null) {
          clientGetNoviceRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetNoviceReward, com.kys.util.netty.proto.HallProto.ClientGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ClientGetNoviceRewardOrBuilder>(
                  getClientGetNoviceReward(),
                  getParentForChildren(),
                  isClean());
          clientGetNoviceReward_ = null;
        }
        return clientGetNoviceRewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask clientQueryNoviceTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder> clientQueryNoviceTaskBuilder_;
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public boolean hasClientQueryNoviceTask() {
        return clientQueryNoviceTaskBuilder_ != null || clientQueryNoviceTask_ != null;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask getClientQueryNoviceTask() {
        if (clientQueryNoviceTaskBuilder_ == null) {
          return clientQueryNoviceTask_ == null ? com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.getDefaultInstance() : clientQueryNoviceTask_;
        } else {
          return clientQueryNoviceTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public Builder setClientQueryNoviceTask(com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask value) {
        if (clientQueryNoviceTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryNoviceTask_ = value;
          onChanged();
        } else {
          clientQueryNoviceTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public Builder setClientQueryNoviceTask(
          com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder builderForValue) {
        if (clientQueryNoviceTaskBuilder_ == null) {
          clientQueryNoviceTask_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryNoviceTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public Builder mergeClientQueryNoviceTask(com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask value) {
        if (clientQueryNoviceTaskBuilder_ == null) {
          if (clientQueryNoviceTask_ != null) {
            clientQueryNoviceTask_ =
              com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.newBuilder(clientQueryNoviceTask_).mergeFrom(value).buildPartial();
          } else {
            clientQueryNoviceTask_ = value;
          }
          onChanged();
        } else {
          clientQueryNoviceTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public Builder clearClientQueryNoviceTask() {
        if (clientQueryNoviceTaskBuilder_ == null) {
          clientQueryNoviceTask_ = null;
          onChanged();
        } else {
          clientQueryNoviceTask_ = null;
          clientQueryNoviceTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder getClientQueryNoviceTaskBuilder() {
        
        onChanged();
        return getClientQueryNoviceTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder getClientQueryNoviceTaskOrBuilder() {
        if (clientQueryNoviceTaskBuilder_ != null) {
          return clientQueryNoviceTaskBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryNoviceTask_ == null ?
              com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.getDefaultInstance() : clientQueryNoviceTask_;
        }
      }
      /**
       * <pre>
       ** 客户端请求新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryNoviceTask clientQueryNoviceTask = 703;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder> 
          getClientQueryNoviceTaskFieldBuilder() {
        if (clientQueryNoviceTaskBuilder_ == null) {
          clientQueryNoviceTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ClientQueryNoviceTaskOrBuilder>(
                  getClientQueryNoviceTask(),
                  getParentForChildren(),
                  isClean());
          clientQueryNoviceTask_ = null;
        }
        return clientQueryNoviceTaskBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ClientGetDTAward clientGetDTAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetDTAward, com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder> clientGetDTAwardBuilder_;
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public boolean hasClientGetDTAward() {
        return clientGetDTAwardBuilder_ != null || clientGetDTAward_ != null;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDTAward getClientGetDTAward() {
        if (clientGetDTAwardBuilder_ == null) {
          return clientGetDTAward_ == null ? com.kys.util.netty.proto.HallProto.ClientGetDTAward.getDefaultInstance() : clientGetDTAward_;
        } else {
          return clientGetDTAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public Builder setClientGetDTAward(com.kys.util.netty.proto.HallProto.ClientGetDTAward value) {
        if (clientGetDTAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetDTAward_ = value;
          onChanged();
        } else {
          clientGetDTAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public Builder setClientGetDTAward(
          com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder builderForValue) {
        if (clientGetDTAwardBuilder_ == null) {
          clientGetDTAward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetDTAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public Builder mergeClientGetDTAward(com.kys.util.netty.proto.HallProto.ClientGetDTAward value) {
        if (clientGetDTAwardBuilder_ == null) {
          if (clientGetDTAward_ != null) {
            clientGetDTAward_ =
              com.kys.util.netty.proto.HallProto.ClientGetDTAward.newBuilder(clientGetDTAward_).mergeFrom(value).buildPartial();
          } else {
            clientGetDTAward_ = value;
          }
          onChanged();
        } else {
          clientGetDTAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public Builder clearClientGetDTAward() {
        if (clientGetDTAwardBuilder_ == null) {
          clientGetDTAward_ = null;
          onChanged();
        } else {
          clientGetDTAward_ = null;
          clientGetDTAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder getClientGetDTAwardBuilder() {
        
        onChanged();
        return getClientGetDTAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder getClientGetDTAwardOrBuilder() {
        if (clientGetDTAwardBuilder_ != null) {
          return clientGetDTAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetDTAward_ == null ?
              com.kys.util.netty.proto.HallProto.ClientGetDTAward.getDefaultInstance() : clientGetDTAward_;
        }
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetDTAward clientGetDTAward = 704;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ClientGetDTAward, com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder> 
          getClientGetDTAwardFieldBuilder() {
        if (clientGetDTAwardBuilder_ == null) {
          clientGetDTAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ClientGetDTAward, com.kys.util.netty.proto.HallProto.ClientGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ClientGetDTAwardOrBuilder>(
                  getClientGetDTAward(),
                  getParentForChildren(),
                  isClean());
          clientGetDTAward_ = null;
        }
        return clientGetDTAwardBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr clientGetReceiveAddr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder> clientGetReceiveAddrBuilder_;
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public boolean hasClientGetReceiveAddr() {
        return clientGetReceiveAddrBuilder_ != null || clientGetReceiveAddr_ != null;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr getClientGetReceiveAddr() {
        if (clientGetReceiveAddrBuilder_ == null) {
          return clientGetReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.getDefaultInstance() : clientGetReceiveAddr_;
        } else {
          return clientGetReceiveAddrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public Builder setClientGetReceiveAddr(com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr value) {
        if (clientGetReceiveAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetReceiveAddr_ = value;
          onChanged();
        } else {
          clientGetReceiveAddrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public Builder setClientGetReceiveAddr(
          com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder builderForValue) {
        if (clientGetReceiveAddrBuilder_ == null) {
          clientGetReceiveAddr_ = builderForValue.build();
          onChanged();
        } else {
          clientGetReceiveAddrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public Builder mergeClientGetReceiveAddr(com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr value) {
        if (clientGetReceiveAddrBuilder_ == null) {
          if (clientGetReceiveAddr_ != null) {
            clientGetReceiveAddr_ =
              com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.newBuilder(clientGetReceiveAddr_).mergeFrom(value).buildPartial();
          } else {
            clientGetReceiveAddr_ = value;
          }
          onChanged();
        } else {
          clientGetReceiveAddrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public Builder clearClientGetReceiveAddr() {
        if (clientGetReceiveAddrBuilder_ == null) {
          clientGetReceiveAddr_ = null;
          onChanged();
        } else {
          clientGetReceiveAddr_ = null;
          clientGetReceiveAddrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder getClientGetReceiveAddrBuilder() {
        
        onChanged();
        return getClientGetReceiveAddrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder getClientGetReceiveAddrOrBuilder() {
        if (clientGetReceiveAddrBuilder_ != null) {
          return clientGetReceiveAddrBuilder_.getMessageOrBuilder();
        } else {
          return clientGetReceiveAddr_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.getDefaultInstance() : clientGetReceiveAddr_;
        }
      }
      /**
       * <pre>
       ** 获取用户地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetReceiveAddr clientGetReceiveAddr = 800;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder> 
          getClientGetReceiveAddrFieldBuilder() {
        if (clientGetReceiveAddrBuilder_ == null) {
          clientGetReceiveAddrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientGetReceiveAddrOrBuilder>(
                  getClientGetReceiveAddr(),
                  getParentForChildren(),
                  isClean());
          clientGetReceiveAddr_ = null;
        }
        return clientGetReceiveAddrBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr clientAlterReceiveAddr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder> clientAlterReceiveAddrBuilder_;
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public boolean hasClientAlterReceiveAddr() {
        return clientAlterReceiveAddrBuilder_ != null || clientAlterReceiveAddr_ != null;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr getClientAlterReceiveAddr() {
        if (clientAlterReceiveAddrBuilder_ == null) {
          return clientAlterReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.getDefaultInstance() : clientAlterReceiveAddr_;
        } else {
          return clientAlterReceiveAddrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public Builder setClientAlterReceiveAddr(com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr value) {
        if (clientAlterReceiveAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientAlterReceiveAddr_ = value;
          onChanged();
        } else {
          clientAlterReceiveAddrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public Builder setClientAlterReceiveAddr(
          com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder builderForValue) {
        if (clientAlterReceiveAddrBuilder_ == null) {
          clientAlterReceiveAddr_ = builderForValue.build();
          onChanged();
        } else {
          clientAlterReceiveAddrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public Builder mergeClientAlterReceiveAddr(com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr value) {
        if (clientAlterReceiveAddrBuilder_ == null) {
          if (clientAlterReceiveAddr_ != null) {
            clientAlterReceiveAddr_ =
              com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.newBuilder(clientAlterReceiveAddr_).mergeFrom(value).buildPartial();
          } else {
            clientAlterReceiveAddr_ = value;
          }
          onChanged();
        } else {
          clientAlterReceiveAddrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public Builder clearClientAlterReceiveAddr() {
        if (clientAlterReceiveAddrBuilder_ == null) {
          clientAlterReceiveAddr_ = null;
          onChanged();
        } else {
          clientAlterReceiveAddr_ = null;
          clientAlterReceiveAddrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder getClientAlterReceiveAddrBuilder() {
        
        onChanged();
        return getClientAlterReceiveAddrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder getClientAlterReceiveAddrOrBuilder() {
        if (clientAlterReceiveAddrBuilder_ != null) {
          return clientAlterReceiveAddrBuilder_.getMessageOrBuilder();
        } else {
          return clientAlterReceiveAddr_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.getDefaultInstance() : clientAlterReceiveAddr_;
        }
      }
      /**
       * <pre>
       ** 客户端修改玩家收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientAlterReceiveAddr clientAlterReceiveAddr = 801;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder> 
          getClientAlterReceiveAddrFieldBuilder() {
        if (clientAlterReceiveAddrBuilder_ == null) {
          clientAlterReceiveAddrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ClientAlterReceiveAddrOrBuilder>(
                  getClientAlterReceiveAddr(),
                  getParentForChildren(),
                  isClean());
          clientAlterReceiveAddr_ = null;
        }
        return clientAlterReceiveAddrBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchList clientSnatchList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchList, com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder> clientSnatchListBuilder_;
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public boolean hasClientSnatchList() {
        return clientSnatchListBuilder_ != null || clientSnatchList_ != null;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchList getClientSnatchList() {
        if (clientSnatchListBuilder_ == null) {
          return clientSnatchList_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchList.getDefaultInstance() : clientSnatchList_;
        } else {
          return clientSnatchListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public Builder setClientSnatchList(com.kys.util.netty.proto.SnatchProto.ClientSnatchList value) {
        if (clientSnatchListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchList_ = value;
          onChanged();
        } else {
          clientSnatchListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public Builder setClientSnatchList(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder builderForValue) {
        if (clientSnatchListBuilder_ == null) {
          clientSnatchList_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public Builder mergeClientSnatchList(com.kys.util.netty.proto.SnatchProto.ClientSnatchList value) {
        if (clientSnatchListBuilder_ == null) {
          if (clientSnatchList_ != null) {
            clientSnatchList_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchList.newBuilder(clientSnatchList_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchList_ = value;
          }
          onChanged();
        } else {
          clientSnatchListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public Builder clearClientSnatchList() {
        if (clientSnatchListBuilder_ == null) {
          clientSnatchList_ = null;
          onChanged();
        } else {
          clientSnatchList_ = null;
          clientSnatchListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder getClientSnatchListBuilder() {
        
        onChanged();
        return getClientSnatchListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder getClientSnatchListOrBuilder() {
        if (clientSnatchListBuilder_ != null) {
          return clientSnatchListBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchList_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchList.getDefaultInstance() : clientSnatchList_;
        }
      }
      /**
       * <pre>
       ** 夺宝主界面，请求当前商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchList clientSnatchList = 802;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchList, com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder> 
          getClientSnatchListFieldBuilder() {
        if (clientSnatchListBuilder_ == null) {
          clientSnatchListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchList, com.kys.util.netty.proto.SnatchProto.ClientSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchListOrBuilder>(
                  getClientSnatchList(),
                  getParentForChildren(),
                  isClean());
          clientSnatchList_ = null;
        }
        return clientSnatchListBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail clientSnatchItemDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder> clientSnatchItemDetailBuilder_;
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public boolean hasClientSnatchItemDetail() {
        return clientSnatchItemDetailBuilder_ != null || clientSnatchItemDetail_ != null;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail getClientSnatchItemDetail() {
        if (clientSnatchItemDetailBuilder_ == null) {
          return clientSnatchItemDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.getDefaultInstance() : clientSnatchItemDetail_;
        } else {
          return clientSnatchItemDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public Builder setClientSnatchItemDetail(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail value) {
        if (clientSnatchItemDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchItemDetail_ = value;
          onChanged();
        } else {
          clientSnatchItemDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public Builder setClientSnatchItemDetail(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder builderForValue) {
        if (clientSnatchItemDetailBuilder_ == null) {
          clientSnatchItemDetail_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchItemDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public Builder mergeClientSnatchItemDetail(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail value) {
        if (clientSnatchItemDetailBuilder_ == null) {
          if (clientSnatchItemDetail_ != null) {
            clientSnatchItemDetail_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.newBuilder(clientSnatchItemDetail_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchItemDetail_ = value;
          }
          onChanged();
        } else {
          clientSnatchItemDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public Builder clearClientSnatchItemDetail() {
        if (clientSnatchItemDetailBuilder_ == null) {
          clientSnatchItemDetail_ = null;
          onChanged();
        } else {
          clientSnatchItemDetail_ = null;
          clientSnatchItemDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder getClientSnatchItemDetailBuilder() {
        
        onChanged();
        return getClientSnatchItemDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder getClientSnatchItemDetailOrBuilder() {
        if (clientSnatchItemDetailBuilder_ != null) {
          return clientSnatchItemDetailBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchItemDetail_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.getDefaultInstance() : clientSnatchItemDetail_;
        }
      }
      /**
       * <pre>
       ** 获取单个奖品下注详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemDetail clientSnatchItemDetail = 803;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder> 
          getClientSnatchItemDetailFieldBuilder() {
        if (clientSnatchItemDetailBuilder_ == null) {
          clientSnatchItemDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemDetailOrBuilder>(
                  getClientSnatchItemDetail(),
                  getParentForChildren(),
                  isClean());
          clientSnatchItemDetail_ = null;
        }
        return clientSnatchItemDetailBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchBet clientSnatchBet_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchBet, com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder> clientSnatchBetBuilder_;
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public boolean hasClientSnatchBet() {
        return clientSnatchBetBuilder_ != null || clientSnatchBet_ != null;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchBet getClientSnatchBet() {
        if (clientSnatchBetBuilder_ == null) {
          return clientSnatchBet_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.getDefaultInstance() : clientSnatchBet_;
        } else {
          return clientSnatchBetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public Builder setClientSnatchBet(com.kys.util.netty.proto.SnatchProto.ClientSnatchBet value) {
        if (clientSnatchBetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchBet_ = value;
          onChanged();
        } else {
          clientSnatchBetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public Builder setClientSnatchBet(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder builderForValue) {
        if (clientSnatchBetBuilder_ == null) {
          clientSnatchBet_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchBetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public Builder mergeClientSnatchBet(com.kys.util.netty.proto.SnatchProto.ClientSnatchBet value) {
        if (clientSnatchBetBuilder_ == null) {
          if (clientSnatchBet_ != null) {
            clientSnatchBet_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.newBuilder(clientSnatchBet_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchBet_ = value;
          }
          onChanged();
        } else {
          clientSnatchBetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public Builder clearClientSnatchBet() {
        if (clientSnatchBetBuilder_ == null) {
          clientSnatchBet_ = null;
          onChanged();
        } else {
          clientSnatchBet_ = null;
          clientSnatchBetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder getClientSnatchBetBuilder() {
        
        onChanged();
        return getClientSnatchBetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder getClientSnatchBetOrBuilder() {
        if (clientSnatchBetBuilder_ != null) {
          return clientSnatchBetBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchBet_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.getDefaultInstance() : clientSnatchBet_;
        }
      }
      /**
       * <pre>
       ** 下注 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchBet clientSnatchBet = 804;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchBet, com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder> 
          getClientSnatchBetFieldBuilder() {
        if (clientSnatchBetBuilder_ == null) {
          clientSnatchBetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchBet, com.kys.util.netty.proto.SnatchProto.ClientSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchBetOrBuilder>(
                  getClientSnatchBet(),
                  getParentForChildren(),
                  isClean());
          clientSnatchBet_ = null;
        }
        return clientSnatchBetBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList clientSnatchAwardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder> clientSnatchAwardListBuilder_;
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public boolean hasClientSnatchAwardList() {
        return clientSnatchAwardListBuilder_ != null || clientSnatchAwardList_ != null;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList getClientSnatchAwardList() {
        if (clientSnatchAwardListBuilder_ == null) {
          return clientSnatchAwardList_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.getDefaultInstance() : clientSnatchAwardList_;
        } else {
          return clientSnatchAwardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public Builder setClientSnatchAwardList(com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList value) {
        if (clientSnatchAwardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchAwardList_ = value;
          onChanged();
        } else {
          clientSnatchAwardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public Builder setClientSnatchAwardList(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder builderForValue) {
        if (clientSnatchAwardListBuilder_ == null) {
          clientSnatchAwardList_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchAwardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public Builder mergeClientSnatchAwardList(com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList value) {
        if (clientSnatchAwardListBuilder_ == null) {
          if (clientSnatchAwardList_ != null) {
            clientSnatchAwardList_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.newBuilder(clientSnatchAwardList_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchAwardList_ = value;
          }
          onChanged();
        } else {
          clientSnatchAwardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public Builder clearClientSnatchAwardList() {
        if (clientSnatchAwardListBuilder_ == null) {
          clientSnatchAwardList_ = null;
          onChanged();
        } else {
          clientSnatchAwardList_ = null;
          clientSnatchAwardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder getClientSnatchAwardListBuilder() {
        
        onChanged();
        return getClientSnatchAwardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder getClientSnatchAwardListOrBuilder() {
        if (clientSnatchAwardListBuilder_ != null) {
          return clientSnatchAwardListBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchAwardList_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.getDefaultInstance() : clientSnatchAwardList_;
        }
      }
      /**
       * <pre>
       ** 客户端请求近期开奖列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchAwardList clientSnatchAwardList = 805;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder> 
          getClientSnatchAwardListFieldBuilder() {
        if (clientSnatchAwardListBuilder_ == null) {
          clientSnatchAwardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchAwardListOrBuilder>(
                  getClientSnatchAwardList(),
                  getParentForChildren(),
                  isClean());
          clientSnatchAwardList_ = null;
        }
        return clientSnatchAwardListBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord clientOwnSnatchRecord_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder> clientOwnSnatchRecordBuilder_;
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public boolean hasClientOwnSnatchRecord() {
        return clientOwnSnatchRecordBuilder_ != null || clientOwnSnatchRecord_ != null;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord getClientOwnSnatchRecord() {
        if (clientOwnSnatchRecordBuilder_ == null) {
          return clientOwnSnatchRecord_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.getDefaultInstance() : clientOwnSnatchRecord_;
        } else {
          return clientOwnSnatchRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public Builder setClientOwnSnatchRecord(com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord value) {
        if (clientOwnSnatchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientOwnSnatchRecord_ = value;
          onChanged();
        } else {
          clientOwnSnatchRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public Builder setClientOwnSnatchRecord(
          com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder builderForValue) {
        if (clientOwnSnatchRecordBuilder_ == null) {
          clientOwnSnatchRecord_ = builderForValue.build();
          onChanged();
        } else {
          clientOwnSnatchRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public Builder mergeClientOwnSnatchRecord(com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord value) {
        if (clientOwnSnatchRecordBuilder_ == null) {
          if (clientOwnSnatchRecord_ != null) {
            clientOwnSnatchRecord_ =
              com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.newBuilder(clientOwnSnatchRecord_).mergeFrom(value).buildPartial();
          } else {
            clientOwnSnatchRecord_ = value;
          }
          onChanged();
        } else {
          clientOwnSnatchRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public Builder clearClientOwnSnatchRecord() {
        if (clientOwnSnatchRecordBuilder_ == null) {
          clientOwnSnatchRecord_ = null;
          onChanged();
        } else {
          clientOwnSnatchRecord_ = null;
          clientOwnSnatchRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder getClientOwnSnatchRecordBuilder() {
        
        onChanged();
        return getClientOwnSnatchRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder getClientOwnSnatchRecordOrBuilder() {
        if (clientOwnSnatchRecordBuilder_ != null) {
          return clientOwnSnatchRecordBuilder_.getMessageOrBuilder();
        } else {
          return clientOwnSnatchRecord_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.getDefaultInstance() : clientOwnSnatchRecord_;
        }
      }
      /**
       * <pre>
       ** 客户端获取自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOwnSnatchRecord clientOwnSnatchRecord = 806;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder> 
          getClientOwnSnatchRecordFieldBuilder() {
        if (clientOwnSnatchRecordBuilder_ == null) {
          clientOwnSnatchRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ClientOwnSnatchRecordOrBuilder>(
                  getClientOwnSnatchRecord(),
                  getParentForChildren(),
                  isClean());
          clientOwnSnatchRecord_ = null;
        }
        return clientOwnSnatchRecordBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory clientSnatchItemHistory_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder> clientSnatchItemHistoryBuilder_;
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public boolean hasClientSnatchItemHistory() {
        return clientSnatchItemHistoryBuilder_ != null || clientSnatchItemHistory_ != null;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory getClientSnatchItemHistory() {
        if (clientSnatchItemHistoryBuilder_ == null) {
          return clientSnatchItemHistory_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.getDefaultInstance() : clientSnatchItemHistory_;
        } else {
          return clientSnatchItemHistoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public Builder setClientSnatchItemHistory(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory value) {
        if (clientSnatchItemHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchItemHistory_ = value;
          onChanged();
        } else {
          clientSnatchItemHistoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public Builder setClientSnatchItemHistory(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder builderForValue) {
        if (clientSnatchItemHistoryBuilder_ == null) {
          clientSnatchItemHistory_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchItemHistoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public Builder mergeClientSnatchItemHistory(com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory value) {
        if (clientSnatchItemHistoryBuilder_ == null) {
          if (clientSnatchItemHistory_ != null) {
            clientSnatchItemHistory_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.newBuilder(clientSnatchItemHistory_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchItemHistory_ = value;
          }
          onChanged();
        } else {
          clientSnatchItemHistoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public Builder clearClientSnatchItemHistory() {
        if (clientSnatchItemHistoryBuilder_ == null) {
          clientSnatchItemHistory_ = null;
          onChanged();
        } else {
          clientSnatchItemHistory_ = null;
          clientSnatchItemHistoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder getClientSnatchItemHistoryBuilder() {
        
        onChanged();
        return getClientSnatchItemHistoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder getClientSnatchItemHistoryOrBuilder() {
        if (clientSnatchItemHistoryBuilder_ != null) {
          return clientSnatchItemHistoryBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchItemHistory_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.getDefaultInstance() : clientSnatchItemHistory_;
        }
      }
      /**
       * <pre>
       ** 查看某个商品的历史详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchItemHistory clientSnatchItemHistory = 807;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder> 
          getClientSnatchItemHistoryFieldBuilder() {
        if (clientSnatchItemHistoryBuilder_ == null) {
          clientSnatchItemHistoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchItemHistoryOrBuilder>(
                  getClientSnatchItemHistory(),
                  getParentForChildren(),
                  isClean());
          clientSnatchItemHistory_ = null;
        }
        return clientSnatchItemHistoryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail clientSnatchHistoryDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder> clientSnatchHistoryDetailBuilder_;
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public boolean hasClientSnatchHistoryDetail() {
        return clientSnatchHistoryDetailBuilder_ != null || clientSnatchHistoryDetail_ != null;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail getClientSnatchHistoryDetail() {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          return clientSnatchHistoryDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.getDefaultInstance() : clientSnatchHistoryDetail_;
        } else {
          return clientSnatchHistoryDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public Builder setClientSnatchHistoryDetail(com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail value) {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchHistoryDetail_ = value;
          onChanged();
        } else {
          clientSnatchHistoryDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public Builder setClientSnatchHistoryDetail(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder builderForValue) {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          clientSnatchHistoryDetail_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchHistoryDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public Builder mergeClientSnatchHistoryDetail(com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail value) {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          if (clientSnatchHistoryDetail_ != null) {
            clientSnatchHistoryDetail_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.newBuilder(clientSnatchHistoryDetail_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchHistoryDetail_ = value;
          }
          onChanged();
        } else {
          clientSnatchHistoryDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public Builder clearClientSnatchHistoryDetail() {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          clientSnatchHistoryDetail_ = null;
          onChanged();
        } else {
          clientSnatchHistoryDetail_ = null;
          clientSnatchHistoryDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder getClientSnatchHistoryDetailBuilder() {
        
        onChanged();
        return getClientSnatchHistoryDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder getClientSnatchHistoryDetailOrBuilder() {
        if (clientSnatchHistoryDetailBuilder_ != null) {
          return clientSnatchHistoryDetailBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchHistoryDetail_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.getDefaultInstance() : clientSnatchHistoryDetail_;
        }
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchHistoryDetail clientSnatchHistoryDetail = 808;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder> 
          getClientSnatchHistoryDetailFieldBuilder() {
        if (clientSnatchHistoryDetailBuilder_ == null) {
          clientSnatchHistoryDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchHistoryDetailOrBuilder>(
                  getClientSnatchHistoryDetail(),
                  getParentForChildren(),
                  isClean());
          clientSnatchHistoryDetail_ = null;
        }
        return clientSnatchHistoryDetailBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward clientSnatchGetAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder> clientSnatchGetAwardBuilder_;
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public boolean hasClientSnatchGetAward() {
        return clientSnatchGetAwardBuilder_ != null || clientSnatchGetAward_ != null;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward getClientSnatchGetAward() {
        if (clientSnatchGetAwardBuilder_ == null) {
          return clientSnatchGetAward_ == null ? com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.getDefaultInstance() : clientSnatchGetAward_;
        } else {
          return clientSnatchGetAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public Builder setClientSnatchGetAward(com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward value) {
        if (clientSnatchGetAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientSnatchGetAward_ = value;
          onChanged();
        } else {
          clientSnatchGetAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public Builder setClientSnatchGetAward(
          com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder builderForValue) {
        if (clientSnatchGetAwardBuilder_ == null) {
          clientSnatchGetAward_ = builderForValue.build();
          onChanged();
        } else {
          clientSnatchGetAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public Builder mergeClientSnatchGetAward(com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward value) {
        if (clientSnatchGetAwardBuilder_ == null) {
          if (clientSnatchGetAward_ != null) {
            clientSnatchGetAward_ =
              com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.newBuilder(clientSnatchGetAward_).mergeFrom(value).buildPartial();
          } else {
            clientSnatchGetAward_ = value;
          }
          onChanged();
        } else {
          clientSnatchGetAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public Builder clearClientSnatchGetAward() {
        if (clientSnatchGetAwardBuilder_ == null) {
          clientSnatchGetAward_ = null;
          onChanged();
        } else {
          clientSnatchGetAward_ = null;
          clientSnatchGetAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder getClientSnatchGetAwardBuilder() {
        
        onChanged();
        return getClientSnatchGetAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder getClientSnatchGetAwardOrBuilder() {
        if (clientSnatchGetAwardBuilder_ != null) {
          return clientSnatchGetAwardBuilder_.getMessageOrBuilder();
        } else {
          return clientSnatchGetAward_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.getDefaultInstance() : clientSnatchGetAward_;
        }
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientSnatchGetAward clientSnatchGetAward = 809;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder> 
          getClientSnatchGetAwardFieldBuilder() {
        if (clientSnatchGetAwardBuilder_ == null) {
          clientSnatchGetAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ClientSnatchGetAwardOrBuilder>(
                  getClientSnatchGetAward(),
                  getParentForChildren(),
                  isClean());
          clientSnatchGetAward_ = null;
        }
        return clientSnatchGetAwardBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientEnterDG clientEnterDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientEnterDG, com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder> clientEnterDGBuilder_;
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public boolean hasClientEnterDG() {
        return clientEnterDGBuilder_ != null || clientEnterDG_ != null;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientEnterDG getClientEnterDG() {
        if (clientEnterDGBuilder_ == null) {
          return clientEnterDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientEnterDG.getDefaultInstance() : clientEnterDG_;
        } else {
          return clientEnterDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public Builder setClientEnterDG(com.kys.util.netty.proto.SnatchProto.ClientEnterDG value) {
        if (clientEnterDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientEnterDG_ = value;
          onChanged();
        } else {
          clientEnterDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public Builder setClientEnterDG(
          com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder builderForValue) {
        if (clientEnterDGBuilder_ == null) {
          clientEnterDG_ = builderForValue.build();
          onChanged();
        } else {
          clientEnterDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public Builder mergeClientEnterDG(com.kys.util.netty.proto.SnatchProto.ClientEnterDG value) {
        if (clientEnterDGBuilder_ == null) {
          if (clientEnterDG_ != null) {
            clientEnterDG_ =
              com.kys.util.netty.proto.SnatchProto.ClientEnterDG.newBuilder(clientEnterDG_).mergeFrom(value).buildPartial();
          } else {
            clientEnterDG_ = value;
          }
          onChanged();
        } else {
          clientEnterDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public Builder clearClientEnterDG() {
        if (clientEnterDGBuilder_ == null) {
          clientEnterDG_ = null;
          onChanged();
        } else {
          clientEnterDG_ = null;
          clientEnterDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder getClientEnterDGBuilder() {
        
        onChanged();
        return getClientEnterDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder getClientEnterDGOrBuilder() {
        if (clientEnterDGBuilder_ != null) {
          return clientEnterDGBuilder_.getMessageOrBuilder();
        } else {
          return clientEnterDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientEnterDG.getDefaultInstance() : clientEnterDG_;
        }
      }
      /**
       * <pre>
       ** 客户端请求进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientEnterDG clientEnterDG = 900;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientEnterDG, com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder> 
          getClientEnterDGFieldBuilder() {
        if (clientEnterDGBuilder_ == null) {
          clientEnterDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientEnterDG, com.kys.util.netty.proto.SnatchProto.ClientEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientEnterDGOrBuilder>(
                  getClientEnterDG(),
                  getParentForChildren(),
                  isClean());
          clientEnterDG_ = null;
        }
        return clientEnterDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientDGLottery clientDGLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientDGLottery, com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder> clientDGLotteryBuilder_;
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public boolean hasClientDGLottery() {
        return clientDGLotteryBuilder_ != null || clientDGLottery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDGLottery getClientDGLottery() {
        if (clientDGLotteryBuilder_ == null) {
          return clientDGLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientDGLottery.getDefaultInstance() : clientDGLottery_;
        } else {
          return clientDGLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public Builder setClientDGLottery(com.kys.util.netty.proto.SnatchProto.ClientDGLottery value) {
        if (clientDGLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDGLottery_ = value;
          onChanged();
        } else {
          clientDGLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public Builder setClientDGLottery(
          com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder builderForValue) {
        if (clientDGLotteryBuilder_ == null) {
          clientDGLottery_ = builderForValue.build();
          onChanged();
        } else {
          clientDGLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public Builder mergeClientDGLottery(com.kys.util.netty.proto.SnatchProto.ClientDGLottery value) {
        if (clientDGLotteryBuilder_ == null) {
          if (clientDGLottery_ != null) {
            clientDGLottery_ =
              com.kys.util.netty.proto.SnatchProto.ClientDGLottery.newBuilder(clientDGLottery_).mergeFrom(value).buildPartial();
          } else {
            clientDGLottery_ = value;
          }
          onChanged();
        } else {
          clientDGLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public Builder clearClientDGLottery() {
        if (clientDGLotteryBuilder_ == null) {
          clientDGLottery_ = null;
          onChanged();
        } else {
          clientDGLottery_ = null;
          clientDGLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder getClientDGLotteryBuilder() {
        
        onChanged();
        return getClientDGLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder getClientDGLotteryOrBuilder() {
        if (clientDGLotteryBuilder_ != null) {
          return clientDGLotteryBuilder_.getMessageOrBuilder();
        } else {
          return clientDGLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientDGLottery.getDefaultInstance() : clientDGLottery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDGLottery clientDGLottery = 901;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientDGLottery, com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder> 
          getClientDGLotteryFieldBuilder() {
        if (clientDGLotteryBuilder_ == null) {
          clientDGLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientDGLottery, com.kys.util.netty.proto.SnatchProto.ClientDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDGLotteryOrBuilder>(
                  getClientDGLottery(),
                  getParentForChildren(),
                  isClean());
          clientDGLottery_ = null;
        }
        return clientDGLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientResetLottery clientResetLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientResetLottery, com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder> clientResetLotteryBuilder_;
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public boolean hasClientResetLottery() {
        return clientResetLotteryBuilder_ != null || clientResetLottery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientResetLottery getClientResetLottery() {
        if (clientResetLotteryBuilder_ == null) {
          return clientResetLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientResetLottery.getDefaultInstance() : clientResetLottery_;
        } else {
          return clientResetLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public Builder setClientResetLottery(com.kys.util.netty.proto.SnatchProto.ClientResetLottery value) {
        if (clientResetLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientResetLottery_ = value;
          onChanged();
        } else {
          clientResetLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public Builder setClientResetLottery(
          com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder builderForValue) {
        if (clientResetLotteryBuilder_ == null) {
          clientResetLottery_ = builderForValue.build();
          onChanged();
        } else {
          clientResetLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public Builder mergeClientResetLottery(com.kys.util.netty.proto.SnatchProto.ClientResetLottery value) {
        if (clientResetLotteryBuilder_ == null) {
          if (clientResetLottery_ != null) {
            clientResetLottery_ =
              com.kys.util.netty.proto.SnatchProto.ClientResetLottery.newBuilder(clientResetLottery_).mergeFrom(value).buildPartial();
          } else {
            clientResetLottery_ = value;
          }
          onChanged();
        } else {
          clientResetLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public Builder clearClientResetLottery() {
        if (clientResetLotteryBuilder_ == null) {
          clientResetLottery_ = null;
          onChanged();
        } else {
          clientResetLottery_ = null;
          clientResetLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder getClientResetLotteryBuilder() {
        
        onChanged();
        return getClientResetLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder getClientResetLotteryOrBuilder() {
        if (clientResetLotteryBuilder_ != null) {
          return clientResetLotteryBuilder_.getMessageOrBuilder();
        } else {
          return clientResetLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientResetLottery.getDefaultInstance() : clientResetLottery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientResetLottery clientResetLottery = 902;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientResetLottery, com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder> 
          getClientResetLotteryFieldBuilder() {
        if (clientResetLotteryBuilder_ == null) {
          clientResetLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientResetLottery, com.kys.util.netty.proto.SnatchProto.ClientResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientResetLotteryOrBuilder>(
                  getClientResetLottery(),
                  getParentForChildren(),
                  isClean());
          clientResetLottery_ = null;
        }
        return clientResetLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientExitDG clientExitDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientExitDG, com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder> clientExitDGBuilder_;
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public boolean hasClientExitDG() {
        return clientExitDGBuilder_ != null || clientExitDG_ != null;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDG getClientExitDG() {
        if (clientExitDGBuilder_ == null) {
          return clientExitDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientExitDG.getDefaultInstance() : clientExitDG_;
        } else {
          return clientExitDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public Builder setClientExitDG(com.kys.util.netty.proto.SnatchProto.ClientExitDG value) {
        if (clientExitDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientExitDG_ = value;
          onChanged();
        } else {
          clientExitDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public Builder setClientExitDG(
          com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder builderForValue) {
        if (clientExitDGBuilder_ == null) {
          clientExitDG_ = builderForValue.build();
          onChanged();
        } else {
          clientExitDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public Builder mergeClientExitDG(com.kys.util.netty.proto.SnatchProto.ClientExitDG value) {
        if (clientExitDGBuilder_ == null) {
          if (clientExitDG_ != null) {
            clientExitDG_ =
              com.kys.util.netty.proto.SnatchProto.ClientExitDG.newBuilder(clientExitDG_).mergeFrom(value).buildPartial();
          } else {
            clientExitDG_ = value;
          }
          onChanged();
        } else {
          clientExitDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public Builder clearClientExitDG() {
        if (clientExitDGBuilder_ == null) {
          clientExitDG_ = null;
          onChanged();
        } else {
          clientExitDG_ = null;
          clientExitDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder getClientExitDGBuilder() {
        
        onChanged();
        return getClientExitDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder getClientExitDGOrBuilder() {
        if (clientExitDGBuilder_ != null) {
          return clientExitDGBuilder_.getMessageOrBuilder();
        } else {
          return clientExitDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientExitDG.getDefaultInstance() : clientExitDG_;
        }
      }
      /**
       * <pre>
       ** 客户端退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDG clientExitDG = 903;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientExitDG, com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder> 
          getClientExitDGFieldBuilder() {
        if (clientExitDGBuilder_ == null) {
          clientExitDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientExitDG, com.kys.util.netty.proto.SnatchProto.ClientExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDGOrBuilder>(
                  getClientExitDG(),
                  getParentForChildren(),
                  isClean());
          clientExitDG_ = null;
        }
        return clientExitDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientOpenDG clientOpenDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOpenDG, com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder> clientOpenDGBuilder_;
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public boolean hasClientOpenDG() {
        return clientOpenDGBuilder_ != null || clientOpenDG_ != null;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDG getClientOpenDG() {
        if (clientOpenDGBuilder_ == null) {
          return clientOpenDG_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOpenDG.getDefaultInstance() : clientOpenDG_;
        } else {
          return clientOpenDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public Builder setClientOpenDG(com.kys.util.netty.proto.SnatchProto.ClientOpenDG value) {
        if (clientOpenDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientOpenDG_ = value;
          onChanged();
        } else {
          clientOpenDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public Builder setClientOpenDG(
          com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder builderForValue) {
        if (clientOpenDGBuilder_ == null) {
          clientOpenDG_ = builderForValue.build();
          onChanged();
        } else {
          clientOpenDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public Builder mergeClientOpenDG(com.kys.util.netty.proto.SnatchProto.ClientOpenDG value) {
        if (clientOpenDGBuilder_ == null) {
          if (clientOpenDG_ != null) {
            clientOpenDG_ =
              com.kys.util.netty.proto.SnatchProto.ClientOpenDG.newBuilder(clientOpenDG_).mergeFrom(value).buildPartial();
          } else {
            clientOpenDG_ = value;
          }
          onChanged();
        } else {
          clientOpenDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public Builder clearClientOpenDG() {
        if (clientOpenDGBuilder_ == null) {
          clientOpenDG_ = null;
          onChanged();
        } else {
          clientOpenDG_ = null;
          clientOpenDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder getClientOpenDGBuilder() {
        
        onChanged();
        return getClientOpenDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder getClientOpenDGOrBuilder() {
        if (clientOpenDGBuilder_ != null) {
          return clientOpenDGBuilder_.getMessageOrBuilder();
        } else {
          return clientOpenDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientOpenDG.getDefaultInstance() : clientOpenDG_;
        }
      }
      /**
       * <pre>
       ** 客户端请求开启活动 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDG clientOpenDG = 904;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOpenDG, com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder> 
          getClientOpenDGFieldBuilder() {
        if (clientOpenDGBuilder_ == null) {
          clientOpenDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientOpenDG, com.kys.util.netty.proto.SnatchProto.ClientOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDGOrBuilder>(
                  getClientOpenDG(),
                  getParentForChildren(),
                  isClean());
          clientOpenDG_ = null;
        }
        return clientOpenDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientOpenDD clientOpenDD_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOpenDD, com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder> clientOpenDDBuilder_;
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public boolean hasClientOpenDD() {
        return clientOpenDDBuilder_ != null || clientOpenDD_ != null;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDD getClientOpenDD() {
        if (clientOpenDDBuilder_ == null) {
          return clientOpenDD_ == null ? com.kys.util.netty.proto.SnatchProto.ClientOpenDD.getDefaultInstance() : clientOpenDD_;
        } else {
          return clientOpenDDBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public Builder setClientOpenDD(com.kys.util.netty.proto.SnatchProto.ClientOpenDD value) {
        if (clientOpenDDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientOpenDD_ = value;
          onChanged();
        } else {
          clientOpenDDBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public Builder setClientOpenDD(
          com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder builderForValue) {
        if (clientOpenDDBuilder_ == null) {
          clientOpenDD_ = builderForValue.build();
          onChanged();
        } else {
          clientOpenDDBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public Builder mergeClientOpenDD(com.kys.util.netty.proto.SnatchProto.ClientOpenDD value) {
        if (clientOpenDDBuilder_ == null) {
          if (clientOpenDD_ != null) {
            clientOpenDD_ =
              com.kys.util.netty.proto.SnatchProto.ClientOpenDD.newBuilder(clientOpenDD_).mergeFrom(value).buildPartial();
          } else {
            clientOpenDD_ = value;
          }
          onChanged();
        } else {
          clientOpenDDBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public Builder clearClientOpenDD() {
        if (clientOpenDDBuilder_ == null) {
          clientOpenDD_ = null;
          onChanged();
        } else {
          clientOpenDD_ = null;
          clientOpenDDBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder getClientOpenDDBuilder() {
        
        onChanged();
        return getClientOpenDDFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder getClientOpenDDOrBuilder() {
        if (clientOpenDDBuilder_ != null) {
          return clientOpenDDBuilder_.getMessageOrBuilder();
        } else {
          return clientOpenDD_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientOpenDD.getDefaultInstance() : clientOpenDD_;
        }
      }
      /**
       * <pre>
       ** 客户端请求开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientOpenDD clientOpenDD = 905;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientOpenDD, com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder> 
          getClientOpenDDFieldBuilder() {
        if (clientOpenDDBuilder_ == null) {
          clientOpenDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientOpenDD, com.kys.util.netty.proto.SnatchProto.ClientOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientOpenDDOrBuilder>(
                  getClientOpenDD(),
                  getParentForChildren(),
                  isClean());
          clientOpenDD_ = null;
        }
        return clientOpenDDBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientDDLottery clientDDLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientDDLottery, com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder> clientDDLotteryBuilder_;
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public boolean hasClientDDLottery() {
        return clientDDLotteryBuilder_ != null || clientDDLottery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDDLottery getClientDDLottery() {
        if (clientDDLotteryBuilder_ == null) {
          return clientDDLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ClientDDLottery.getDefaultInstance() : clientDDLottery_;
        } else {
          return clientDDLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public Builder setClientDDLottery(com.kys.util.netty.proto.SnatchProto.ClientDDLottery value) {
        if (clientDDLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientDDLottery_ = value;
          onChanged();
        } else {
          clientDDLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public Builder setClientDDLottery(
          com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder builderForValue) {
        if (clientDDLotteryBuilder_ == null) {
          clientDDLottery_ = builderForValue.build();
          onChanged();
        } else {
          clientDDLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public Builder mergeClientDDLottery(com.kys.util.netty.proto.SnatchProto.ClientDDLottery value) {
        if (clientDDLotteryBuilder_ == null) {
          if (clientDDLottery_ != null) {
            clientDDLottery_ =
              com.kys.util.netty.proto.SnatchProto.ClientDDLottery.newBuilder(clientDDLottery_).mergeFrom(value).buildPartial();
          } else {
            clientDDLottery_ = value;
          }
          onChanged();
        } else {
          clientDDLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public Builder clearClientDDLottery() {
        if (clientDDLotteryBuilder_ == null) {
          clientDDLottery_ = null;
          onChanged();
        } else {
          clientDDLottery_ = null;
          clientDDLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder getClientDDLotteryBuilder() {
        
        onChanged();
        return getClientDDLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder getClientDDLotteryOrBuilder() {
        if (clientDDLotteryBuilder_ != null) {
          return clientDDLotteryBuilder_.getMessageOrBuilder();
        } else {
          return clientDDLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientDDLottery.getDefaultInstance() : clientDDLottery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientDDLottery clientDDLottery = 906;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientDDLottery, com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder> 
          getClientDDLotteryFieldBuilder() {
        if (clientDDLotteryBuilder_ == null) {
          clientDDLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientDDLottery, com.kys.util.netty.proto.SnatchProto.ClientDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ClientDDLotteryOrBuilder>(
                  getClientDDLottery(),
                  getParentForChildren(),
                  isClean());
          clientDDLottery_ = null;
        }
        return clientDDLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ClientExitDD clientExitDD_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientExitDD, com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder> clientExitDDBuilder_;
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public boolean hasClientExitDD() {
        return clientExitDDBuilder_ != null || clientExitDD_ != null;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDD getClientExitDD() {
        if (clientExitDDBuilder_ == null) {
          return clientExitDD_ == null ? com.kys.util.netty.proto.SnatchProto.ClientExitDD.getDefaultInstance() : clientExitDD_;
        } else {
          return clientExitDDBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public Builder setClientExitDD(com.kys.util.netty.proto.SnatchProto.ClientExitDD value) {
        if (clientExitDDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientExitDD_ = value;
          onChanged();
        } else {
          clientExitDDBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public Builder setClientExitDD(
          com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder builderForValue) {
        if (clientExitDDBuilder_ == null) {
          clientExitDD_ = builderForValue.build();
          onChanged();
        } else {
          clientExitDDBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public Builder mergeClientExitDD(com.kys.util.netty.proto.SnatchProto.ClientExitDD value) {
        if (clientExitDDBuilder_ == null) {
          if (clientExitDD_ != null) {
            clientExitDD_ =
              com.kys.util.netty.proto.SnatchProto.ClientExitDD.newBuilder(clientExitDD_).mergeFrom(value).buildPartial();
          } else {
            clientExitDD_ = value;
          }
          onChanged();
        } else {
          clientExitDDBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public Builder clearClientExitDD() {
        if (clientExitDDBuilder_ == null) {
          clientExitDD_ = null;
          onChanged();
        } else {
          clientExitDD_ = null;
          clientExitDDBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder getClientExitDDBuilder() {
        
        onChanged();
        return getClientExitDDFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder getClientExitDDOrBuilder() {
        if (clientExitDDBuilder_ != null) {
          return clientExitDDBuilder_.getMessageOrBuilder();
        } else {
          return clientExitDD_ == null ?
              com.kys.util.netty.proto.SnatchProto.ClientExitDD.getDefaultInstance() : clientExitDD_;
        }
      }
      /**
       * <pre>
       ** 客户端请求退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientExitDD clientExitDD = 907;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ClientExitDD, com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder> 
          getClientExitDDFieldBuilder() {
        if (clientExitDDBuilder_ == null) {
          clientExitDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ClientExitDD, com.kys.util.netty.proto.SnatchProto.ClientExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ClientExitDDOrBuilder>(
                  getClientExitDD(),
                  getParentForChildren(),
                  isClean());
          clientExitDD_ = null;
        }
        return clientExitDDBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ClientQueryProp clientQueryProp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientQueryProp, com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder> clientQueryPropBuilder_;
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public boolean hasClientQueryProp() {
        return clientQueryPropBuilder_ != null || clientQueryProp_ != null;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryProp getClientQueryProp() {
        if (clientQueryPropBuilder_ == null) {
          return clientQueryProp_ == null ? com.kys.util.netty.proto.PropProto.ClientQueryProp.getDefaultInstance() : clientQueryProp_;
        } else {
          return clientQueryPropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public Builder setClientQueryProp(com.kys.util.netty.proto.PropProto.ClientQueryProp value) {
        if (clientQueryPropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryProp_ = value;
          onChanged();
        } else {
          clientQueryPropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public Builder setClientQueryProp(
          com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder builderForValue) {
        if (clientQueryPropBuilder_ == null) {
          clientQueryProp_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryPropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public Builder mergeClientQueryProp(com.kys.util.netty.proto.PropProto.ClientQueryProp value) {
        if (clientQueryPropBuilder_ == null) {
          if (clientQueryProp_ != null) {
            clientQueryProp_ =
              com.kys.util.netty.proto.PropProto.ClientQueryProp.newBuilder(clientQueryProp_).mergeFrom(value).buildPartial();
          } else {
            clientQueryProp_ = value;
          }
          onChanged();
        } else {
          clientQueryPropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public Builder clearClientQueryProp() {
        if (clientQueryPropBuilder_ == null) {
          clientQueryProp_ = null;
          onChanged();
        } else {
          clientQueryProp_ = null;
          clientQueryPropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder getClientQueryPropBuilder() {
        
        onChanged();
        return getClientQueryPropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder getClientQueryPropOrBuilder() {
        if (clientQueryPropBuilder_ != null) {
          return clientQueryPropBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryProp_ == null ?
              com.kys.util.netty.proto.PropProto.ClientQueryProp.getDefaultInstance() : clientQueryProp_;
        }
      }
      /**
       * <pre>
       ** 客户端查看自己的道具接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryProp clientQueryProp = 1001;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientQueryProp, com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder> 
          getClientQueryPropFieldBuilder() {
        if (clientQueryPropBuilder_ == null) {
          clientQueryPropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ClientQueryProp, com.kys.util.netty.proto.PropProto.ClientQueryProp.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropOrBuilder>(
                  getClientQueryProp(),
                  getParentForChildren(),
                  isClean());
          clientQueryProp_ = null;
        }
        return clientQueryPropBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ClientUseProp clientUseProp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientUseProp, com.kys.util.netty.proto.PropProto.ClientUseProp.Builder, com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder> clientUsePropBuilder_;
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public boolean hasClientUseProp() {
        return clientUsePropBuilder_ != null || clientUseProp_ != null;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientUseProp getClientUseProp() {
        if (clientUsePropBuilder_ == null) {
          return clientUseProp_ == null ? com.kys.util.netty.proto.PropProto.ClientUseProp.getDefaultInstance() : clientUseProp_;
        } else {
          return clientUsePropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public Builder setClientUseProp(com.kys.util.netty.proto.PropProto.ClientUseProp value) {
        if (clientUsePropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientUseProp_ = value;
          onChanged();
        } else {
          clientUsePropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public Builder setClientUseProp(
          com.kys.util.netty.proto.PropProto.ClientUseProp.Builder builderForValue) {
        if (clientUsePropBuilder_ == null) {
          clientUseProp_ = builderForValue.build();
          onChanged();
        } else {
          clientUsePropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public Builder mergeClientUseProp(com.kys.util.netty.proto.PropProto.ClientUseProp value) {
        if (clientUsePropBuilder_ == null) {
          if (clientUseProp_ != null) {
            clientUseProp_ =
              com.kys.util.netty.proto.PropProto.ClientUseProp.newBuilder(clientUseProp_).mergeFrom(value).buildPartial();
          } else {
            clientUseProp_ = value;
          }
          onChanged();
        } else {
          clientUsePropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public Builder clearClientUseProp() {
        if (clientUsePropBuilder_ == null) {
          clientUseProp_ = null;
          onChanged();
        } else {
          clientUseProp_ = null;
          clientUsePropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientUseProp.Builder getClientUsePropBuilder() {
        
        onChanged();
        return getClientUsePropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder getClientUsePropOrBuilder() {
        if (clientUsePropBuilder_ != null) {
          return clientUsePropBuilder_.getMessageOrBuilder();
        } else {
          return clientUseProp_ == null ?
              com.kys.util.netty.proto.PropProto.ClientUseProp.getDefaultInstance() : clientUseProp_;
        }
      }
      /**
       * <pre>
       ** 客户端请求使用道具 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientUseProp clientUseProp = 1002;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientUseProp, com.kys.util.netty.proto.PropProto.ClientUseProp.Builder, com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder> 
          getClientUsePropFieldBuilder() {
        if (clientUsePropBuilder_ == null) {
          clientUsePropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ClientUseProp, com.kys.util.netty.proto.PropProto.ClientUseProp.Builder, com.kys.util.netty.proto.PropProto.ClientUsePropOrBuilder>(
                  getClientUseProp(),
                  getParentForChildren(),
                  isClean());
          clientUseProp_ = null;
        }
        return clientUsePropBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ClientQueryPropCount clientQueryPropCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientQueryPropCount, com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder> clientQueryPropCountBuilder_;
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public boolean hasClientQueryPropCount() {
        return clientQueryPropCountBuilder_ != null || clientQueryPropCount_ != null;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryPropCount getClientQueryPropCount() {
        if (clientQueryPropCountBuilder_ == null) {
          return clientQueryPropCount_ == null ? com.kys.util.netty.proto.PropProto.ClientQueryPropCount.getDefaultInstance() : clientQueryPropCount_;
        } else {
          return clientQueryPropCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public Builder setClientQueryPropCount(com.kys.util.netty.proto.PropProto.ClientQueryPropCount value) {
        if (clientQueryPropCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientQueryPropCount_ = value;
          onChanged();
        } else {
          clientQueryPropCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public Builder setClientQueryPropCount(
          com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder builderForValue) {
        if (clientQueryPropCountBuilder_ == null) {
          clientQueryPropCount_ = builderForValue.build();
          onChanged();
        } else {
          clientQueryPropCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public Builder mergeClientQueryPropCount(com.kys.util.netty.proto.PropProto.ClientQueryPropCount value) {
        if (clientQueryPropCountBuilder_ == null) {
          if (clientQueryPropCount_ != null) {
            clientQueryPropCount_ =
              com.kys.util.netty.proto.PropProto.ClientQueryPropCount.newBuilder(clientQueryPropCount_).mergeFrom(value).buildPartial();
          } else {
            clientQueryPropCount_ = value;
          }
          onChanged();
        } else {
          clientQueryPropCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public Builder clearClientQueryPropCount() {
        if (clientQueryPropCountBuilder_ == null) {
          clientQueryPropCount_ = null;
          onChanged();
        } else {
          clientQueryPropCount_ = null;
          clientQueryPropCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder getClientQueryPropCountBuilder() {
        
        onChanged();
        return getClientQueryPropCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder getClientQueryPropCountOrBuilder() {
        if (clientQueryPropCountBuilder_ != null) {
          return clientQueryPropCountBuilder_.getMessageOrBuilder();
        } else {
          return clientQueryPropCount_ == null ?
              com.kys.util.netty.proto.PropProto.ClientQueryPropCount.getDefaultInstance() : clientQueryPropCount_;
        }
      }
      /**
       * <pre>
       ** 客户端根据道具类型查询该种道具的数量 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientQueryPropCount clientQueryPropCount = 1003;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ClientQueryPropCount, com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder> 
          getClientQueryPropCountFieldBuilder() {
        if (clientQueryPropCountBuilder_ == null) {
          clientQueryPropCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ClientQueryPropCount, com.kys.util.netty.proto.PropProto.ClientQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ClientQueryPropCountOrBuilder>(
                  getClientQueryPropCount(),
                  getParentForChildren(),
                  isClean());
          clientQueryPropCount_ = null;
        }
        return clientQueryPropCountBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientMonthSignInfo clientMonthSignInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientMonthSignInfo, com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.Builder, com.kys.util.netty.proto.SignProto.ClientMonthSignInfoOrBuilder> clientMonthSignInfoBuilder_;
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      public boolean hasClientMonthSignInfo() {
        return clientMonthSignInfoBuilder_ != null || clientMonthSignInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientMonthSignInfo getClientMonthSignInfo() {
        if (clientMonthSignInfoBuilder_ == null) {
          return clientMonthSignInfo_ == null ? com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.getDefaultInstance() : clientMonthSignInfo_;
        } else {
          return clientMonthSignInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      public Builder setClientMonthSignInfo(com.kys.util.netty.proto.SignProto.ClientMonthSignInfo value) {
        if (clientMonthSignInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientMonthSignInfo_ = value;
          onChanged();
        } else {
          clientMonthSignInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      public Builder setClientMonthSignInfo(
          com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.Builder builderForValue) {
        if (clientMonthSignInfoBuilder_ == null) {
          clientMonthSignInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientMonthSignInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      public Builder mergeClientMonthSignInfo(com.kys.util.netty.proto.SignProto.ClientMonthSignInfo value) {
        if (clientMonthSignInfoBuilder_ == null) {
          if (clientMonthSignInfo_ != null) {
            clientMonthSignInfo_ =
              com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.newBuilder(clientMonthSignInfo_).mergeFrom(value).buildPartial();
          } else {
            clientMonthSignInfo_ = value;
          }
          onChanged();
        } else {
          clientMonthSignInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      public Builder clearClientMonthSignInfo() {
        if (clientMonthSignInfoBuilder_ == null) {
          clientMonthSignInfo_ = null;
          onChanged();
        } else {
          clientMonthSignInfo_ = null;
          clientMonthSignInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.Builder getClientMonthSignInfoBuilder() {
        
        onChanged();
        return getClientMonthSignInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientMonthSignInfoOrBuilder getClientMonthSignInfoOrBuilder() {
        if (clientMonthSignInfoBuilder_ != null) {
          return clientMonthSignInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientMonthSignInfo_ == null ?
              com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.getDefaultInstance() : clientMonthSignInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端请求月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSignInfo clientMonthSignInfo = 1101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientMonthSignInfo, com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.Builder, com.kys.util.netty.proto.SignProto.ClientMonthSignInfoOrBuilder> 
          getClientMonthSignInfoFieldBuilder() {
        if (clientMonthSignInfoBuilder_ == null) {
          clientMonthSignInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientMonthSignInfo, com.kys.util.netty.proto.SignProto.ClientMonthSignInfo.Builder, com.kys.util.netty.proto.SignProto.ClientMonthSignInfoOrBuilder>(
                  getClientMonthSignInfo(),
                  getParentForChildren(),
                  isClean());
          clientMonthSignInfo_ = null;
        }
        return clientMonthSignInfoBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientMonthSign clientMonthSign_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientMonthSign, com.kys.util.netty.proto.SignProto.ClientMonthSign.Builder, com.kys.util.netty.proto.SignProto.ClientMonthSignOrBuilder> clientMonthSignBuilder_;
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      public boolean hasClientMonthSign() {
        return clientMonthSignBuilder_ != null || clientMonthSign_ != null;
      }
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientMonthSign getClientMonthSign() {
        if (clientMonthSignBuilder_ == null) {
          return clientMonthSign_ == null ? com.kys.util.netty.proto.SignProto.ClientMonthSign.getDefaultInstance() : clientMonthSign_;
        } else {
          return clientMonthSignBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      public Builder setClientMonthSign(com.kys.util.netty.proto.SignProto.ClientMonthSign value) {
        if (clientMonthSignBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientMonthSign_ = value;
          onChanged();
        } else {
          clientMonthSignBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      public Builder setClientMonthSign(
          com.kys.util.netty.proto.SignProto.ClientMonthSign.Builder builderForValue) {
        if (clientMonthSignBuilder_ == null) {
          clientMonthSign_ = builderForValue.build();
          onChanged();
        } else {
          clientMonthSignBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      public Builder mergeClientMonthSign(com.kys.util.netty.proto.SignProto.ClientMonthSign value) {
        if (clientMonthSignBuilder_ == null) {
          if (clientMonthSign_ != null) {
            clientMonthSign_ =
              com.kys.util.netty.proto.SignProto.ClientMonthSign.newBuilder(clientMonthSign_).mergeFrom(value).buildPartial();
          } else {
            clientMonthSign_ = value;
          }
          onChanged();
        } else {
          clientMonthSignBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      public Builder clearClientMonthSign() {
        if (clientMonthSignBuilder_ == null) {
          clientMonthSign_ = null;
          onChanged();
        } else {
          clientMonthSign_ = null;
          clientMonthSignBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientMonthSign.Builder getClientMonthSignBuilder() {
        
        onChanged();
        return getClientMonthSignFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientMonthSignOrBuilder getClientMonthSignOrBuilder() {
        if (clientMonthSignBuilder_ != null) {
          return clientMonthSignBuilder_.getMessageOrBuilder();
        } else {
          return clientMonthSign_ == null ?
              com.kys.util.netty.proto.SignProto.ClientMonthSign.getDefaultInstance() : clientMonthSign_;
        }
      }
      /**
       * <pre>
       ** 客户端请求(新)签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientMonthSign clientMonthSign = 1102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientMonthSign, com.kys.util.netty.proto.SignProto.ClientMonthSign.Builder, com.kys.util.netty.proto.SignProto.ClientMonthSignOrBuilder> 
          getClientMonthSignFieldBuilder() {
        if (clientMonthSignBuilder_ == null) {
          clientMonthSignBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientMonthSign, com.kys.util.netty.proto.SignProto.ClientMonthSign.Builder, com.kys.util.netty.proto.SignProto.ClientMonthSignOrBuilder>(
                  getClientMonthSign(),
                  getParentForChildren(),
                  isClean());
          clientMonthSign_ = null;
        }
        return clientMonthSignBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientGetCritReward clientGetCritReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetCritReward, com.kys.util.netty.proto.SignProto.ClientGetCritReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetCritRewardOrBuilder> clientGetCritRewardBuilder_;
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      public boolean hasClientGetCritReward() {
        return clientGetCritRewardBuilder_ != null || clientGetCritReward_ != null;
      }
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetCritReward getClientGetCritReward() {
        if (clientGetCritRewardBuilder_ == null) {
          return clientGetCritReward_ == null ? com.kys.util.netty.proto.SignProto.ClientGetCritReward.getDefaultInstance() : clientGetCritReward_;
        } else {
          return clientGetCritRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      public Builder setClientGetCritReward(com.kys.util.netty.proto.SignProto.ClientGetCritReward value) {
        if (clientGetCritRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetCritReward_ = value;
          onChanged();
        } else {
          clientGetCritRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      public Builder setClientGetCritReward(
          com.kys.util.netty.proto.SignProto.ClientGetCritReward.Builder builderForValue) {
        if (clientGetCritRewardBuilder_ == null) {
          clientGetCritReward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetCritRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      public Builder mergeClientGetCritReward(com.kys.util.netty.proto.SignProto.ClientGetCritReward value) {
        if (clientGetCritRewardBuilder_ == null) {
          if (clientGetCritReward_ != null) {
            clientGetCritReward_ =
              com.kys.util.netty.proto.SignProto.ClientGetCritReward.newBuilder(clientGetCritReward_).mergeFrom(value).buildPartial();
          } else {
            clientGetCritReward_ = value;
          }
          onChanged();
        } else {
          clientGetCritRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      public Builder clearClientGetCritReward() {
        if (clientGetCritRewardBuilder_ == null) {
          clientGetCritReward_ = null;
          onChanged();
        } else {
          clientGetCritReward_ = null;
          clientGetCritRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetCritReward.Builder getClientGetCritRewardBuilder() {
        
        onChanged();
        return getClientGetCritRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetCritRewardOrBuilder getClientGetCritRewardOrBuilder() {
        if (clientGetCritRewardBuilder_ != null) {
          return clientGetCritRewardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetCritReward_ == null ?
              com.kys.util.netty.proto.SignProto.ClientGetCritReward.getDefaultInstance() : clientGetCritReward_;
        }
      }
      /**
       * <pre>
       ** 客户端获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetCritReward clientGetCritReward = 1103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetCritReward, com.kys.util.netty.proto.SignProto.ClientGetCritReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetCritRewardOrBuilder> 
          getClientGetCritRewardFieldBuilder() {
        if (clientGetCritRewardBuilder_ == null) {
          clientGetCritRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientGetCritReward, com.kys.util.netty.proto.SignProto.ClientGetCritReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetCritRewardOrBuilder>(
                  getClientGetCritReward(),
                  getParentForChildren(),
                  isClean());
          clientGetCritReward_ = null;
        }
        return clientGetCritRewardBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientLTLottery clientLTLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientLTLottery, com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder, com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder> clientLTLotteryBuilder_;
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public boolean hasClientLTLottery() {
        return clientLTLotteryBuilder_ != null || clientLTLottery_ != null;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientLTLottery getClientLTLottery() {
        if (clientLTLotteryBuilder_ == null) {
          return clientLTLottery_ == null ? com.kys.util.netty.proto.SignProto.ClientLTLottery.getDefaultInstance() : clientLTLottery_;
        } else {
          return clientLTLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public Builder setClientLTLottery(com.kys.util.netty.proto.SignProto.ClientLTLottery value) {
        if (clientLTLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientLTLottery_ = value;
          onChanged();
        } else {
          clientLTLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public Builder setClientLTLottery(
          com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder builderForValue) {
        if (clientLTLotteryBuilder_ == null) {
          clientLTLottery_ = builderForValue.build();
          onChanged();
        } else {
          clientLTLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public Builder mergeClientLTLottery(com.kys.util.netty.proto.SignProto.ClientLTLottery value) {
        if (clientLTLotteryBuilder_ == null) {
          if (clientLTLottery_ != null) {
            clientLTLottery_ =
              com.kys.util.netty.proto.SignProto.ClientLTLottery.newBuilder(clientLTLottery_).mergeFrom(value).buildPartial();
          } else {
            clientLTLottery_ = value;
          }
          onChanged();
        } else {
          clientLTLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public Builder clearClientLTLottery() {
        if (clientLTLotteryBuilder_ == null) {
          clientLTLottery_ = null;
          onChanged();
        } else {
          clientLTLottery_ = null;
          clientLTLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder getClientLTLotteryBuilder() {
        
        onChanged();
        return getClientLTLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder getClientLTLotteryOrBuilder() {
        if (clientLTLotteryBuilder_ != null) {
          return clientLTLotteryBuilder_.getMessageOrBuilder();
        } else {
          return clientLTLottery_ == null ?
              com.kys.util.netty.proto.SignProto.ClientLTLottery.getDefaultInstance() : clientLTLottery_;
        }
      }
      /**
       * <pre>
       ** 客户端请求幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientLTLottery clientLTLottery = 1104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientLTLottery, com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder, com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder> 
          getClientLTLotteryFieldBuilder() {
        if (clientLTLotteryBuilder_ == null) {
          clientLTLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientLTLottery, com.kys.util.netty.proto.SignProto.ClientLTLottery.Builder, com.kys.util.netty.proto.SignProto.ClientLTLotteryOrBuilder>(
                  getClientLTLottery(),
                  getParentForChildren(),
                  isClean());
          clientLTLottery_ = null;
        }
        return clientLTLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientGetTSReward clientGetTSReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetTSReward, com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder> clientGetTSRewardBuilder_;
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public boolean hasClientGetTSReward() {
        return clientGetTSRewardBuilder_ != null || clientGetTSReward_ != null;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetTSReward getClientGetTSReward() {
        if (clientGetTSRewardBuilder_ == null) {
          return clientGetTSReward_ == null ? com.kys.util.netty.proto.SignProto.ClientGetTSReward.getDefaultInstance() : clientGetTSReward_;
        } else {
          return clientGetTSRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public Builder setClientGetTSReward(com.kys.util.netty.proto.SignProto.ClientGetTSReward value) {
        if (clientGetTSRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetTSReward_ = value;
          onChanged();
        } else {
          clientGetTSRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public Builder setClientGetTSReward(
          com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder builderForValue) {
        if (clientGetTSRewardBuilder_ == null) {
          clientGetTSReward_ = builderForValue.build();
          onChanged();
        } else {
          clientGetTSRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public Builder mergeClientGetTSReward(com.kys.util.netty.proto.SignProto.ClientGetTSReward value) {
        if (clientGetTSRewardBuilder_ == null) {
          if (clientGetTSReward_ != null) {
            clientGetTSReward_ =
              com.kys.util.netty.proto.SignProto.ClientGetTSReward.newBuilder(clientGetTSReward_).mergeFrom(value).buildPartial();
          } else {
            clientGetTSReward_ = value;
          }
          onChanged();
        } else {
          clientGetTSRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public Builder clearClientGetTSReward() {
        if (clientGetTSRewardBuilder_ == null) {
          clientGetTSReward_ = null;
          onChanged();
        } else {
          clientGetTSReward_ = null;
          clientGetTSRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder getClientGetTSRewardBuilder() {
        
        onChanged();
        return getClientGetTSRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder getClientGetTSRewardOrBuilder() {
        if (clientGetTSRewardBuilder_ != null) {
          return clientGetTSRewardBuilder_.getMessageOrBuilder();
        } else {
          return clientGetTSReward_ == null ?
              com.kys.util.netty.proto.SignProto.ClientGetTSReward.getDefaultInstance() : clientGetTSReward_;
        }
      }
      /**
       * <pre>
       ** 客户端获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetTSReward clientGetTSReward = 1105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetTSReward, com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder> 
          getClientGetTSRewardFieldBuilder() {
        if (clientGetTSRewardBuilder_ == null) {
          clientGetTSRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientGetTSReward, com.kys.util.netty.proto.SignProto.ClientGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ClientGetTSRewardOrBuilder>(
                  getClientGetTSReward(),
                  getParentForChildren(),
                  isClean());
          clientGetTSReward_ = null;
        }
        return clientGetTSRewardBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ClientGetLuckInfo clientGetLuckInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetLuckInfo, com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder> clientGetLuckInfoBuilder_;
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public boolean hasClientGetLuckInfo() {
        return clientGetLuckInfoBuilder_ != null || clientGetLuckInfo_ != null;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetLuckInfo getClientGetLuckInfo() {
        if (clientGetLuckInfoBuilder_ == null) {
          return clientGetLuckInfo_ == null ? com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.getDefaultInstance() : clientGetLuckInfo_;
        } else {
          return clientGetLuckInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public Builder setClientGetLuckInfo(com.kys.util.netty.proto.SignProto.ClientGetLuckInfo value) {
        if (clientGetLuckInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetLuckInfo_ = value;
          onChanged();
        } else {
          clientGetLuckInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public Builder setClientGetLuckInfo(
          com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder builderForValue) {
        if (clientGetLuckInfoBuilder_ == null) {
          clientGetLuckInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetLuckInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public Builder mergeClientGetLuckInfo(com.kys.util.netty.proto.SignProto.ClientGetLuckInfo value) {
        if (clientGetLuckInfoBuilder_ == null) {
          if (clientGetLuckInfo_ != null) {
            clientGetLuckInfo_ =
              com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.newBuilder(clientGetLuckInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetLuckInfo_ = value;
          }
          onChanged();
        } else {
          clientGetLuckInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public Builder clearClientGetLuckInfo() {
        if (clientGetLuckInfoBuilder_ == null) {
          clientGetLuckInfo_ = null;
          onChanged();
        } else {
          clientGetLuckInfo_ = null;
          clientGetLuckInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder getClientGetLuckInfoBuilder() {
        
        onChanged();
        return getClientGetLuckInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder getClientGetLuckInfoOrBuilder() {
        if (clientGetLuckInfoBuilder_ != null) {
          return clientGetLuckInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetLuckInfo_ == null ?
              com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.getDefaultInstance() : clientGetLuckInfo_;
        }
      }
      /**
       * <pre>
       ** 客户端获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetLuckInfo clientGetLuckInfo = 1106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ClientGetLuckInfo, com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder> 
          getClientGetLuckInfoFieldBuilder() {
        if (clientGetLuckInfoBuilder_ == null) {
          clientGetLuckInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ClientGetLuckInfo, com.kys.util.netty.proto.SignProto.ClientGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ClientGetLuckInfoOrBuilder>(
                  getClientGetLuckInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetLuckInfo_ = null;
        }
        return clientGetLuckInfoBuilder_;
      }

      private com.kys.util.netty.proto.VipProto.ClientGetVipInfo clientGetVipInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ClientGetVipInfo, com.kys.util.netty.proto.VipProto.ClientGetVipInfo.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipInfoOrBuilder> clientGetVipInfoBuilder_;
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      public boolean hasClientGetVipInfo() {
        return clientGetVipInfoBuilder_ != null || clientGetVipInfo_ != null;
      }
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVipInfo getClientGetVipInfo() {
        if (clientGetVipInfoBuilder_ == null) {
          return clientGetVipInfo_ == null ? com.kys.util.netty.proto.VipProto.ClientGetVipInfo.getDefaultInstance() : clientGetVipInfo_;
        } else {
          return clientGetVipInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      public Builder setClientGetVipInfo(com.kys.util.netty.proto.VipProto.ClientGetVipInfo value) {
        if (clientGetVipInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetVipInfo_ = value;
          onChanged();
        } else {
          clientGetVipInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      public Builder setClientGetVipInfo(
          com.kys.util.netty.proto.VipProto.ClientGetVipInfo.Builder builderForValue) {
        if (clientGetVipInfoBuilder_ == null) {
          clientGetVipInfo_ = builderForValue.build();
          onChanged();
        } else {
          clientGetVipInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      public Builder mergeClientGetVipInfo(com.kys.util.netty.proto.VipProto.ClientGetVipInfo value) {
        if (clientGetVipInfoBuilder_ == null) {
          if (clientGetVipInfo_ != null) {
            clientGetVipInfo_ =
              com.kys.util.netty.proto.VipProto.ClientGetVipInfo.newBuilder(clientGetVipInfo_).mergeFrom(value).buildPartial();
          } else {
            clientGetVipInfo_ = value;
          }
          onChanged();
        } else {
          clientGetVipInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      public Builder clearClientGetVipInfo() {
        if (clientGetVipInfoBuilder_ == null) {
          clientGetVipInfo_ = null;
          onChanged();
        } else {
          clientGetVipInfo_ = null;
          clientGetVipInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVipInfo.Builder getClientGetVipInfoBuilder() {
        
        onChanged();
        return getClientGetVipInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVipInfoOrBuilder getClientGetVipInfoOrBuilder() {
        if (clientGetVipInfoBuilder_ != null) {
          return clientGetVipInfoBuilder_.getMessageOrBuilder();
        } else {
          return clientGetVipInfo_ == null ?
              com.kys.util.netty.proto.VipProto.ClientGetVipInfo.getDefaultInstance() : clientGetVipInfo_;
        }
      }
      /**
       * <pre>
       ** 请求获取vip界面展示的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipInfo clientGetVipInfo = 1201;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ClientGetVipInfo, com.kys.util.netty.proto.VipProto.ClientGetVipInfo.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipInfoOrBuilder> 
          getClientGetVipInfoFieldBuilder() {
        if (clientGetVipInfoBuilder_ == null) {
          clientGetVipInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.VipProto.ClientGetVipInfo, com.kys.util.netty.proto.VipProto.ClientGetVipInfo.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipInfoOrBuilder>(
                  getClientGetVipInfo(),
                  getParentForChildren(),
                  isClean());
          clientGetVipInfo_ = null;
        }
        return clientGetVipInfoBuilder_;
      }

      private com.kys.util.netty.proto.VipProto.ClientGetVipWeek clientGetVipWeek_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ClientGetVipWeek, com.kys.util.netty.proto.VipProto.ClientGetVipWeek.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipWeekOrBuilder> clientGetVipWeekBuilder_;
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      public boolean hasClientGetVipWeek() {
        return clientGetVipWeekBuilder_ != null || clientGetVipWeek_ != null;
      }
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVipWeek getClientGetVipWeek() {
        if (clientGetVipWeekBuilder_ == null) {
          return clientGetVipWeek_ == null ? com.kys.util.netty.proto.VipProto.ClientGetVipWeek.getDefaultInstance() : clientGetVipWeek_;
        } else {
          return clientGetVipWeekBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      public Builder setClientGetVipWeek(com.kys.util.netty.proto.VipProto.ClientGetVipWeek value) {
        if (clientGetVipWeekBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientGetVipWeek_ = value;
          onChanged();
        } else {
          clientGetVipWeekBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      public Builder setClientGetVipWeek(
          com.kys.util.netty.proto.VipProto.ClientGetVipWeek.Builder builderForValue) {
        if (clientGetVipWeekBuilder_ == null) {
          clientGetVipWeek_ = builderForValue.build();
          onChanged();
        } else {
          clientGetVipWeekBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      public Builder mergeClientGetVipWeek(com.kys.util.netty.proto.VipProto.ClientGetVipWeek value) {
        if (clientGetVipWeekBuilder_ == null) {
          if (clientGetVipWeek_ != null) {
            clientGetVipWeek_ =
              com.kys.util.netty.proto.VipProto.ClientGetVipWeek.newBuilder(clientGetVipWeek_).mergeFrom(value).buildPartial();
          } else {
            clientGetVipWeek_ = value;
          }
          onChanged();
        } else {
          clientGetVipWeekBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      public Builder clearClientGetVipWeek() {
        if (clientGetVipWeekBuilder_ == null) {
          clientGetVipWeek_ = null;
          onChanged();
        } else {
          clientGetVipWeek_ = null;
          clientGetVipWeekBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVipWeek.Builder getClientGetVipWeekBuilder() {
        
        onChanged();
        return getClientGetVipWeekFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      public com.kys.util.netty.proto.VipProto.ClientGetVipWeekOrBuilder getClientGetVipWeekOrBuilder() {
        if (clientGetVipWeekBuilder_ != null) {
          return clientGetVipWeekBuilder_.getMessageOrBuilder();
        } else {
          return clientGetVipWeek_ == null ?
              com.kys.util.netty.proto.VipProto.ClientGetVipWeek.getDefaultInstance() : clientGetVipWeek_;
        }
      }
      /**
       * <pre>
       ** 获取每周VIP礼包奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ClientGetVipWeek clientGetVipWeek = 1202;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ClientGetVipWeek, com.kys.util.netty.proto.VipProto.ClientGetVipWeek.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipWeekOrBuilder> 
          getClientGetVipWeekFieldBuilder() {
        if (clientGetVipWeekBuilder_ == null) {
          clientGetVipWeekBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.VipProto.ClientGetVipWeek, com.kys.util.netty.proto.VipProto.ClientGetVipWeek.Builder, com.kys.util.netty.proto.VipProto.ClientGetVipWeekOrBuilder>(
                  getClientGetVipWeek(),
                  getParentForChildren(),
                  isClean());
          clientGetVipWeek_ = null;
        }
        return clientGetVipWeekBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.kys.util.netty.proto.ClientRequest)
    }

    // @@protoc_insertion_point(class_scope:com.kys.util.netty.proto.ClientRequest)
    private static final com.kys.util.netty.proto.ProtoMsg.ClientRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.kys.util.netty.proto.ProtoMsg.ClientRequest();
    }

    public static com.kys.util.netty.proto.ProtoMsg.ClientRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClientRequest>
        PARSER = new com.google.protobuf.AbstractParser<ClientRequest>() {
      public ClientRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ClientRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClientRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClientRequest> getParserForType() {
      return PARSER;
    }

    public com.kys.util.netty.proto.ProtoMsg.ClientRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.kys.util.netty.proto.ServerResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 methodId = 1;</code>
     */
    int getMethodId();

    /**
     * <pre>
     ** 返回码，包含success和错误码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
     */
    int getResultValue();
    /**
     * <pre>
     ** 返回码，包含success和错误码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
     */
    com.kys.util.netty.proto.ProtoMsg.ResultCode getResult();

    /**
     * <pre>
     ** 错误展示字段，如果result不为0，则取该字段给用户展示 
     * </pre>
     *
     * <code>string errStr = 99;</code>
     */
    java.lang.String getErrStr();
    /**
     * <pre>
     ** 错误展示字段，如果result不为0，则取该字段给用户展示 
     * </pre>
     *
     * <code>string errStr = 99;</code>
     */
    com.google.protobuf.ByteString
        getErrStrBytes();

    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    boolean hasServerLogin();
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerLogin getServerLogin();
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder getServerLoginOrBuilder();

    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    boolean hasServerPlayerInfo();
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerPlayerInfo();
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerPlayerInfoOrBuilder();

    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    boolean hasServerSendHallHeartBeat();
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat getServerSendHallHeartBeat();
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder getServerSendHallHeartBeatOrBuilder();

    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    boolean hasServerSendGameHeartBeat();
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat getServerSendGameHeartBeat();
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder getServerSendGameHeartBeatOrBuilder();

    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    boolean hasServerGetUserInfo();
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerGetUserInfo();
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerGetUserInfoOrBuilder();

    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    boolean hasServerQuickJoin();
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerQuickJoin getServerQuickJoin();
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder getServerQuickJoinOrBuilder();

    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    boolean hasServerEnterRoom();
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerEnterRoom getServerEnterRoom();
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder getServerEnterRoomOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    boolean hasServerRecoverGame();
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerRecoverGame getServerRecoverGame();
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder getServerRecoverGameOrBuilder();

    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    boolean hasServerDoCatch();
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerDoCatch getServerDoCatch();
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder getServerDoCatchOrBuilder();

    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    boolean hasServerPlayCards();
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerPlayCards getServerPlayCards();
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder getServerPlayCardsOrBuilder();

    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    boolean hasServerAutoPlay();
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerAutoPlay getServerAutoPlay();
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder getServerAutoPlayOrBuilder();

    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    boolean hasServerLeaveRoom();
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerLeaveRoom getServerLeaveRoom();
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder getServerLeaveRoomOrBuilder();

    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    boolean hasServerCancleJoin();
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerCancleJoin getServerCancleJoin();
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder getServerCancleJoinOrBuilder();

    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    boolean hasServerQueryIndex();
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerQueryIndex getServerQueryIndex();
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder getServerQueryIndexOrBuilder();

    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    boolean hasServerRetryReturnGame();
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerRetryReturnGame getServerRetryReturnGame();
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder getServerRetryReturnGameOrBuilder();

    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    boolean hasServerGetRankList();
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRankList getServerGetRankList();
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder getServerGetRankListOrBuilder();

    /**
     * <pre>
     ** 服务器返回签到奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
     */
    boolean hasServerGetSignupRewardList();
    /**
     * <pre>
     ** 服务器返回签到奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList getServerGetSignupRewardList();
    /**
     * <pre>
     ** 服务器返回签到奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetSignupRewardListOrBuilder getServerGetSignupRewardListOrBuilder();

    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
     */
    boolean hasServerGetHallInfo();
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetHallInfo getServerGetHallInfo();
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetHallInfoOrBuilder getServerGetHallInfoOrBuilder();

    /**
     * <pre>
     ** 服务器响应签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
     */
    boolean hasServerSignup();
    /**
     * <pre>
     ** 服务器响应签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSignup getServerSignup();
    /**
     * <pre>
     ** 服务器响应签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSignupOrBuilder getServerSignupOrBuilder();

    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    boolean hasServerRewardMessage();
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerRewardMessage getServerRewardMessage();
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder getServerRewardMessageOrBuilder();

    /**
     * <pre>
     ** 服务器返回抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
     */
    boolean hasServerDrawWinCup();
    /**
     * <pre>
     ** 服务器返回抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDrawWinCup getServerDrawWinCup();
    /**
     * <pre>
     ** 服务器返回抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDrawWinCupOrBuilder getServerDrawWinCupOrBuilder();

    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    boolean hasServerGetRoomConfig();
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomConfig getServerGetRoomConfig();
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder getServerGetRoomConfigOrBuilder();

    /**
     * <pre>
     ** 服务器返回房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
     */
    boolean hasServerGetRoomCardConfig();
    /**
     * <pre>
     ** 服务器返回房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig getServerGetRoomCardConfig();
    /**
     * <pre>
     ** 服务器返回房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfigOrBuilder getServerGetRoomCardConfigOrBuilder();

    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
     */
    boolean hasServerCreateRoom();
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerCreateRoom getServerCreateRoom();
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerCreateRoomOrBuilder getServerCreateRoomOrBuilder();

    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    boolean hasServerGetMonthCardDiamond();
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond getServerGetMonthCardDiamond();
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder getServerGetMonthCardDiamondOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    boolean hasServerGetLotteryCount();
    /**
     * <pre>
     ** 服务器返回玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetLotteryCount getServerGetLotteryCount();
    /**
     * <pre>
     ** 服务器返回玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder getServerGetLotteryCountOrBuilder();

    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    boolean hasServerGetRoomInfo();
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomInfo getServerGetRoomInfo();
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder getServerGetRoomInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    boolean hasServerSendTelCode();
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSendTelCode getServerSendTelCode();
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder getServerSendTelCodeOrBuilder();

    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    boolean hasServerVerifyTelCode();
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerVerifyTelCode getServerVerifyTelCode();
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder getServerVerifyTelCodeOrBuilder();

    /**
     * <pre>
     ** 服务器返回分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
     */
    boolean hasServerQueryShareList();
    /**
     * <pre>
     ** 服务器返回分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryShareList getServerQueryShareList();
    /**
     * <pre>
     ** 服务器返回分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryShareListOrBuilder getServerQueryShareListOrBuilder();

    /**
     * <pre>
     ** 服务器返回详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
     */
    boolean hasServerQueryShareDetail();
    /**
     * <pre>
     ** 服务器返回详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryShareDetail getServerQueryShareDetail();
    /**
     * <pre>
     ** 服务器返回详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryShareDetailOrBuilder getServerQueryShareDetailOrBuilder();

    /**
     * <pre>
     ** 服务器返回领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
     */
    boolean hasServerGetTaskAward();
    /**
     * <pre>
     ** 服务器返回领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetTaskAward getServerGetTaskAward();
    /**
     * <pre>
     ** 服务器返回领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetTaskAwardOrBuilder getServerGetTaskAwardOrBuilder();

    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    boolean hasServerSharePackage();
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSharePackage getServerSharePackage();
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder getServerSharePackageOrBuilder();

    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    boolean hasServerGetAwardList();
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetAwardList getServerGetAwardList();
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder getServerGetAwardListOrBuilder();

    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    boolean hasServerCheckConnect();
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerCheckConnect getServerCheckConnect();
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder getServerCheckConnectOrBuilder();

    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    boolean hasServerGetPFList();
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetPFList getServerGetPFList();
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder getServerGetPFListOrBuilder();

    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    boolean hasServerChoosePF();
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerChoosePF getServerChoosePF();
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder getServerChoosePFOrBuilder();

    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    boolean hasServerGetHistoryRank();
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetHistoryRank getServerGetHistoryRank();
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder getServerGetHistoryRankOrBuilder();

    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    boolean hasServerH5Reward();
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerH5Reward getServerH5Reward();
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder getServerH5RewardOrBuilder();

    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    boolean hasServerNewDrawWinCup();
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup getServerNewDrawWinCup();
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder getServerNewDrawWinCupOrBuilder();

    /**
     * <pre>
     ** 服务器返回(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    boolean hasServerGetNewHallInfo();
    /**
     * <pre>
     ** 服务器返回(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo getServerGetNewHallInfo();
    /**
     * <pre>
     ** 服务器返回(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder getServerGetNewHallInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
     */
    boolean hasServerGetSkinInfo();
    /**
     * <pre>
     ** 服务器返回玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetSkinInfo getServerGetSkinInfo();
    /**
     * <pre>
     ** 服务器返回玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerGetSkinInfoOrBuilder getServerGetSkinInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家修改皮肤信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
     */
    boolean hasServerEquipSkin();
    /**
     * <pre>
     ** 服务器返回玩家修改皮肤信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerEquipSkin getServerEquipSkin();
    /**
     * <pre>
     ** 服务器返回玩家修改皮肤信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
     */
    com.kys.util.netty.proto.UserProto.ServerEquipSkinOrBuilder getServerEquipSkinOrBuilder();

    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
     */
    boolean hasServerGetStoreData();
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetStoreData getServerGetStoreData();
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetStoreDataOrBuilder getServerGetStoreDataOrBuilder();

    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    boolean hasServerConvertGoods();
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerConvertGoods getServerConvertGoods();
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder getServerConvertGoodsOrBuilder();

    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    boolean hasServerWXPayResult();
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerWXPayResult getServerWXPayResult();
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder getServerWXPayResultOrBuilder();

    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    boolean hasServerBuyOrderGoods();
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods getServerBuyOrderGoods();
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder getServerBuyOrderGoodsOrBuilder();

    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    boolean hasServerGetFirstCharge();
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge getServerGetFirstCharge();
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder getServerGetFirstChargeOrBuilder();

    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    boolean hasServerGetDailyGift();
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetDailyGift getServerGetDailyGift();
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder getServerGetDailyGiftOrBuilder();

    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    boolean hasServerGetMonthCard();
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetMonthCard getServerGetMonthCard();
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder getServerGetMonthCardOrBuilder();

    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    boolean hasServerGetResurgenceGift();
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift getServerGetResurgenceGift();
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder getServerGetResurgenceGiftOrBuilder();

    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    boolean hasServerGetAnnounce();
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetAnnounce getServerGetAnnounce();
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder getServerGetAnnounceOrBuilder();

    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    boolean hasServerGetMail();
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMail getServerGetMail();
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder getServerGetMailOrBuilder();

    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    boolean hasServerGetMailReward();
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMailReward getServerGetMailReward();
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder getServerGetMailRewardOrBuilder();

    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    boolean hasServerDelMail();
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDelMail getServerDelMail();
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder getServerDelMailOrBuilder();

    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    boolean hasServerReadMail();
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerReadMail getServerReadMail();
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder getServerReadMailOrBuilder();

    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    boolean hasServerDel2R();
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDel2R getServerDel2R();
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder getServerDel2ROrBuilder();

    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    boolean hasServerQueryDailyTask();
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryDailyTask getServerQueryDailyTask();
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder getServerQueryDailyTaskOrBuilder();

    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
     */
    boolean hasServerGetDailyTaskAward();
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward getServerGetDailyTaskAward();
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAwardOrBuilder getServerGetDailyTaskAwardOrBuilder();

    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    boolean hasServerGetNoviceReward();
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetNoviceReward getServerGetNoviceReward();
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder getServerGetNoviceRewardOrBuilder();

    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    boolean hasServerQueryNoviceTask();
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask getServerQueryNoviceTask();
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder getServerQueryNoviceTaskOrBuilder();

    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    boolean hasServerGetDTAward();
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetDTAward getServerGetDTAward();
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder getServerGetDTAwardOrBuilder();

    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    boolean hasServerGetReceiveAddr();
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr getServerGetReceiveAddr();
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder getServerGetReceiveAddrOrBuilder();

    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    boolean hasServerAlterReceiveAddr();
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr getServerAlterReceiveAddr();
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder getServerAlterReceiveAddrOrBuilder();

    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    boolean hasServerSnatchList();
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchList getServerSnatchList();
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder getServerSnatchListOrBuilder();

    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    boolean hasServerSnatchItemDetail();
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail getServerSnatchItemDetail();
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder getServerSnatchItemDetailOrBuilder();

    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    boolean hasServerSnatchBet();
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchBet getServerSnatchBet();
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder getServerSnatchBetOrBuilder();

    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    boolean hasServerSnatchAwardList();
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList getServerSnatchAwardList();
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder getServerSnatchAwardListOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    boolean hasServerOwnSnatchRecord();
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord getServerOwnSnatchRecord();
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder getServerOwnSnatchRecordOrBuilder();

    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    boolean hasServerSnatchItemHistory();
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory getServerSnatchItemHistory();
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder getServerSnatchItemHistoryOrBuilder();

    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    boolean hasServerSnatchHistoryDetail();
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail getServerSnatchHistoryDetail();
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder getServerSnatchHistoryDetailOrBuilder();

    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    boolean hasServerSnatchGetAward();
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward getServerSnatchGetAward();
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder getServerSnatchGetAwardOrBuilder();

    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    boolean hasServerEnterDG();
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerEnterDG getServerEnterDG();
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder getServerEnterDGOrBuilder();

    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    boolean hasServerDGLottery();
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerDGLottery getServerDGLottery();
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder getServerDGLotteryOrBuilder();

    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    boolean hasServerResetLottery();
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerResetLottery getServerResetLottery();
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder getServerResetLotteryOrBuilder();

    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    boolean hasServerExitDG();
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerExitDG getServerExitDG();
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder getServerExitDGOrBuilder();

    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    boolean hasServerOpenDG();
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOpenDG getServerOpenDG();
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder getServerOpenDGOrBuilder();

    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    boolean hasServerOpenDD();
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOpenDD getServerOpenDD();
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder getServerOpenDDOrBuilder();

    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    boolean hasServerDDLottery();
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerDDLottery getServerDDLottery();
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder getServerDDLotteryOrBuilder();

    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    boolean hasServerExitDD();
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerExitDD getServerExitDD();
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder getServerExitDDOrBuilder();

    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    boolean hasServerQueryProp();
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerQueryProp getServerQueryProp();
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder getServerQueryPropOrBuilder();

    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    boolean hasServerUseProp();
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerUseProp getServerUseProp();
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder getServerUsePropOrBuilder();

    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    boolean hasServerQueryPropCount();
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerQueryPropCount getServerQueryPropCount();
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder getServerQueryPropCountOrBuilder();

    /**
     * <pre>
     ** 服务端返回月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
     */
    boolean hasServerMonthSignInfo();
    /**
     * <pre>
     ** 服务端返回月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerMonthSignInfo getServerMonthSignInfo();
    /**
     * <pre>
     ** 服务端返回月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerMonthSignInfoOrBuilder getServerMonthSignInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回(新)月签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
     */
    boolean hasServerMonthSign();
    /**
     * <pre>
     ** 服务器返回(新)月签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerMonthSign getServerMonthSign();
    /**
     * <pre>
     ** 服务器返回(新)月签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerMonthSignOrBuilder getServerMonthSignOrBuilder();

    /**
     * <pre>
     ** 服务器返回获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
     */
    boolean hasServerGetCritReward();
    /**
     * <pre>
     ** 服务器返回获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetCritReward getServerGetCritReward();
    /**
     * <pre>
     ** 服务器返回获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetCritRewardOrBuilder getServerGetCritRewardOrBuilder();

    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    boolean hasServerLTLottery();
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerLTLottery getServerLTLottery();
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder getServerLTLotteryOrBuilder();

    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    boolean hasServerGetTSReward();
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetTSReward getServerGetTSReward();
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder getServerGetTSRewardOrBuilder();

    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    boolean hasServerGetLuckInfo();
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetLuckInfo getServerGetLuckInfo();
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder getServerGetLuckInfoOrBuilder();

    /**
     * <pre>
     ** 服务器返回VIP界面展示所需的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
     */
    boolean hasServerGetVipInfo();
    /**
     * <pre>
     ** 服务器返回VIP界面展示所需的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
     */
    com.kys.util.netty.proto.VipProto.ServerGetVipInfo getServerGetVipInfo();
    /**
     * <pre>
     ** 服务器返回VIP界面展示所需的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
     */
    com.kys.util.netty.proto.VipProto.ServerGetVipInfoOrBuilder getServerGetVipInfoOrBuilder();

    /**
     * <pre>
     ** 返回领取VIP每周礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
     */
    boolean hasServerGetVipWeek();
    /**
     * <pre>
     ** 返回领取VIP每周礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
     */
    com.kys.util.netty.proto.VipProto.ServerGetVipWeek getServerGetVipWeek();
    /**
     * <pre>
     ** 返回领取VIP每周礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
     */
    com.kys.util.netty.proto.VipProto.ServerGetVipWeekOrBuilder getServerGetVipWeekOrBuilder();

    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    boolean hasBGameStart();
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    com.kys.util.netty.proto.GameProto.B_GameStart getBGameStart();
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder getBGameStartOrBuilder();

    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    boolean hasBDoCatch();
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    com.kys.util.netty.proto.GameProto.B_DoCatch getBDoCatch();
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder getBDoCatchOrBuilder();

    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    boolean hasBCatchResult();
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    com.kys.util.netty.proto.GameProto.B_CatchResult getBCatchResult();
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder getBCatchResultOrBuilder();

    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    boolean hasBPlayCards();
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    com.kys.util.netty.proto.GameProto.B_PlayCards getBPlayCards();
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder getBPlayCardsOrBuilder();

    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    boolean hasBSendDiZhuCard();
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    com.kys.util.netty.proto.GameProto.B_SendDiZhuCard getBSendDiZhuCard();
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder getBSendDiZhuCardOrBuilder();

    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    boolean hasBNextPlayer();
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    com.kys.util.netty.proto.GameProto.B_NextPlayer getBNextPlayer();
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder getBNextPlayerOrBuilder();

    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    boolean hasBGameSettle();
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    com.kys.util.netty.proto.GameProto.B_GameSettle getBGameSettle();
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder getBGameSettleOrBuilder();

    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    boolean hasBRewardMessage();
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    com.kys.util.netty.proto.HallProto.B_RewardMessage getBRewardMessage();
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder getBRewardMessageOrBuilder();

    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    boolean hasBAutoPlay();
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    com.kys.util.netty.proto.GameProto.B_AutoPlay getBAutoPlay();
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder getBAutoPlayOrBuilder();

    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    boolean hasBRoomIdUrl();
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    com.kys.util.netty.proto.GameProto.B_RoomIdUrl getBRoomIdUrl();
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder getBRoomIdUrlOrBuilder();

    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    boolean hasBAwardDialog();
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    com.kys.util.netty.proto.HallProto.B_AwardDialog getBAwardDialog();
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder getBAwardDialogOrBuilder();

    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    boolean hasBBuySuccess();
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    com.kys.util.netty.proto.StoreProto.B_BuySuccess getBBuySuccess();
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder getBBuySuccessOrBuilder();

    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    boolean hasBRedDotPush();
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    com.kys.util.netty.proto.HallProto.B_RedDotPush getBRedDotPush();
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder getBRedDotPushOrBuilder();

    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    boolean hasBForceAnnounce();
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    com.kys.util.netty.proto.HallProto.B_ForceAnnounce getBForceAnnounce();
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder getBForceAnnounceOrBuilder();

    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    boolean hasBDGameMessage();
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DGameMessage getBDGameMessage();
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder getBDGameMessageOrBuilder();

    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    boolean hasBDGOver();
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DGOver getBDGOver();
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder getBDGOverOrBuilder();

    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    boolean hasBDDOver();
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DDOver getBDDOver();
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder getBDDOverOrBuilder();

    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    boolean hasBDDInfo();
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DDInfo getBDDInfo();
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder getBDDInfoOrBuilder();
  }
  /**
   * <pre>
   ** 所有下行请求都是serverResponse，服务器会传递具体内容的标示methodId，客户端根据methodId进行处理 
   * </pre>
   *
   * Protobuf type {@code com.kys.util.netty.proto.ServerResponse}
   */
  public  static final class ServerResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.kys.util.netty.proto.ServerResponse)
      ServerResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServerResponse.newBuilder() to construct.
    private ServerResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServerResponse() {
      methodId_ = 0;
      result_ = 0;
      errStr_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ServerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      int mutable_bitField3_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              methodId_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              result_ = rawValue;
              break;
            }
            case 26: {
              com.kys.util.netty.proto.LoginProto.ServerLogin.Builder subBuilder = null;
              if (serverLogin_ != null) {
                subBuilder = serverLogin_.toBuilder();
              }
              serverLogin_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ServerLogin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverLogin_);
                serverLogin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder subBuilder = null;
              if (serverPlayerInfo_ != null) {
                subBuilder = serverPlayerInfo_.toBuilder();
              }
              serverPlayerInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ServerGetUserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverPlayerInfo_);
                serverPlayerInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder subBuilder = null;
              if (serverSendHallHeartBeat_ != null) {
                subBuilder = serverSendHallHeartBeat_.toBuilder();
              }
              serverSendHallHeartBeat_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSendHallHeartBeat_);
                serverSendHallHeartBeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder subBuilder = null;
              if (serverSendGameHeartBeat_ != null) {
                subBuilder = serverSendGameHeartBeat_.toBuilder();
              }
              serverSendGameHeartBeat_ = input.readMessage(com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSendGameHeartBeat_);
                serverSendGameHeartBeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder subBuilder = null;
              if (serverGetUserInfo_ != null) {
                subBuilder = serverGetUserInfo_.toBuilder();
              }
              serverGetUserInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ServerGetUserInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetUserInfo_);
                serverGetUserInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 794: {
              java.lang.String s = input.readStringRequireUtf8();

              errStr_ = s;
              break;
            }
            case 802: {
              com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder subBuilder = null;
              if (serverQuickJoin_ != null) {
                subBuilder = serverQuickJoin_.toBuilder();
              }
              serverQuickJoin_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerQuickJoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQuickJoin_);
                serverQuickJoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 810: {
              com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder subBuilder = null;
              if (serverEnterRoom_ != null) {
                subBuilder = serverEnterRoom_.toBuilder();
              }
              serverEnterRoom_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerEnterRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverEnterRoom_);
                serverEnterRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 818: {
              com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder subBuilder = null;
              if (serverRecoverGame_ != null) {
                subBuilder = serverRecoverGame_.toBuilder();
              }
              serverRecoverGame_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerRecoverGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverRecoverGame_);
                serverRecoverGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 826: {
              com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder subBuilder = null;
              if (serverDoCatch_ != null) {
                subBuilder = serverDoCatch_.toBuilder();
              }
              serverDoCatch_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerDoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDoCatch_);
                serverDoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 834: {
              com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder subBuilder = null;
              if (serverPlayCards_ != null) {
                subBuilder = serverPlayCards_.toBuilder();
              }
              serverPlayCards_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerPlayCards.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverPlayCards_);
                serverPlayCards_ = subBuilder.buildPartial();
              }

              break;
            }
            case 842: {
              com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder subBuilder = null;
              if (serverAutoPlay_ != null) {
                subBuilder = serverAutoPlay_.toBuilder();
              }
              serverAutoPlay_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerAutoPlay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverAutoPlay_);
                serverAutoPlay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 850: {
              com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder subBuilder = null;
              if (serverLeaveRoom_ != null) {
                subBuilder = serverLeaveRoom_.toBuilder();
              }
              serverLeaveRoom_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerLeaveRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverLeaveRoom_);
                serverLeaveRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 858: {
              com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder subBuilder = null;
              if (serverCancleJoin_ != null) {
                subBuilder = serverCancleJoin_.toBuilder();
              }
              serverCancleJoin_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerCancleJoin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverCancleJoin_);
                serverCancleJoin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 866: {
              com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder subBuilder = null;
              if (serverQueryIndex_ != null) {
                subBuilder = serverQueryIndex_.toBuilder();
              }
              serverQueryIndex_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerQueryIndex.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryIndex_);
                serverQueryIndex_ = subBuilder.buildPartial();
              }

              break;
            }
            case 874: {
              com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder subBuilder = null;
              if (serverRetryReturnGame_ != null) {
                subBuilder = serverRetryReturnGame_.toBuilder();
              }
              serverRetryReturnGame_ = input.readMessage(com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverRetryReturnGame_);
                serverRetryReturnGame_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1602: {
              com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder subBuilder = null;
              if (serverGetRankList_ != null) {
                subBuilder = serverGetRankList_.toBuilder();
              }
              serverGetRankList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetRankList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetRankList_);
                serverGetRankList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1610: {
              com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.Builder subBuilder = null;
              if (serverGetSignupRewardList_ != null) {
                subBuilder = serverGetSignupRewardList_.toBuilder();
              }
              serverGetSignupRewardList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetSignupRewardList_);
                serverGetSignupRewardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1618: {
              com.kys.util.netty.proto.HallProto.ServerGetHallInfo.Builder subBuilder = null;
              if (serverGetHallInfo_ != null) {
                subBuilder = serverGetHallInfo_.toBuilder();
              }
              serverGetHallInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetHallInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetHallInfo_);
                serverGetHallInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1626: {
              com.kys.util.netty.proto.HallProto.ServerSignup.Builder subBuilder = null;
              if (serverSignup_ != null) {
                subBuilder = serverSignup_.toBuilder();
              }
              serverSignup_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerSignup.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSignup_);
                serverSignup_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1634: {
              com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder subBuilder = null;
              if (serverRewardMessage_ != null) {
                subBuilder = serverRewardMessage_.toBuilder();
              }
              serverRewardMessage_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerRewardMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverRewardMessage_);
                serverRewardMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1642: {
              com.kys.util.netty.proto.HallProto.ServerDrawWinCup.Builder subBuilder = null;
              if (serverDrawWinCup_ != null) {
                subBuilder = serverDrawWinCup_.toBuilder();
              }
              serverDrawWinCup_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerDrawWinCup.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDrawWinCup_);
                serverDrawWinCup_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1650: {
              com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder subBuilder = null;
              if (serverGetRoomConfig_ != null) {
                subBuilder = serverGetRoomConfig_.toBuilder();
              }
              serverGetRoomConfig_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetRoomConfig_);
                serverGetRoomConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1658: {
              com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.Builder subBuilder = null;
              if (serverGetRoomCardConfig_ != null) {
                subBuilder = serverGetRoomCardConfig_.toBuilder();
              }
              serverGetRoomCardConfig_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetRoomCardConfig_);
                serverGetRoomCardConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1666: {
              com.kys.util.netty.proto.HallProto.ServerCreateRoom.Builder subBuilder = null;
              if (serverCreateRoom_ != null) {
                subBuilder = serverCreateRoom_.toBuilder();
              }
              serverCreateRoom_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerCreateRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverCreateRoom_);
                serverCreateRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1674: {
              com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder subBuilder = null;
              if (serverGetMonthCardDiamond_ != null) {
                subBuilder = serverGetMonthCardDiamond_.toBuilder();
              }
              serverGetMonthCardDiamond_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMonthCardDiamond_);
                serverGetMonthCardDiamond_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1682: {
              com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder subBuilder = null;
              if (serverGetLotteryCount_ != null) {
                subBuilder = serverGetLotteryCount_.toBuilder();
              }
              serverGetLotteryCount_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetLotteryCount_);
                serverGetLotteryCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1690: {
              com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder subBuilder = null;
              if (serverGetRoomInfo_ != null) {
                subBuilder = serverGetRoomInfo_.toBuilder();
              }
              serverGetRoomInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetRoomInfo_);
                serverGetRoomInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1698: {
              com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder subBuilder = null;
              if (serverSendTelCode_ != null) {
                subBuilder = serverSendTelCode_.toBuilder();
              }
              serverSendTelCode_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerSendTelCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSendTelCode_);
                serverSendTelCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1706: {
              com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder subBuilder = null;
              if (serverVerifyTelCode_ != null) {
                subBuilder = serverVerifyTelCode_.toBuilder();
              }
              serverVerifyTelCode_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverVerifyTelCode_);
                serverVerifyTelCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1714: {
              com.kys.util.netty.proto.HallProto.ServerQueryShareList.Builder subBuilder = null;
              if (serverQueryShareList_ != null) {
                subBuilder = serverQueryShareList_.toBuilder();
              }
              serverQueryShareList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerQueryShareList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryShareList_);
                serverQueryShareList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1722: {
              com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.Builder subBuilder = null;
              if (serverQueryShareDetail_ != null) {
                subBuilder = serverQueryShareDetail_.toBuilder();
              }
              serverQueryShareDetail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryShareDetail_);
                serverQueryShareDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1730: {
              com.kys.util.netty.proto.HallProto.ServerGetTaskAward.Builder subBuilder = null;
              if (serverGetTaskAward_ != null) {
                subBuilder = serverGetTaskAward_.toBuilder();
              }
              serverGetTaskAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetTaskAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetTaskAward_);
                serverGetTaskAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1738: {
              com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder subBuilder = null;
              if (serverSharePackage_ != null) {
                subBuilder = serverSharePackage_.toBuilder();
              }
              serverSharePackage_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerSharePackage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSharePackage_);
                serverSharePackage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1746: {
              com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder subBuilder = null;
              if (serverGetAwardList_ != null) {
                subBuilder = serverGetAwardList_.toBuilder();
              }
              serverGetAwardList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetAwardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetAwardList_);
                serverGetAwardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1754: {
              com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder subBuilder = null;
              if (serverCheckConnect_ != null) {
                subBuilder = serverCheckConnect_.toBuilder();
              }
              serverCheckConnect_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerCheckConnect.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverCheckConnect_);
                serverCheckConnect_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1762: {
              com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder subBuilder = null;
              if (serverGetPFList_ != null) {
                subBuilder = serverGetPFList_.toBuilder();
              }
              serverGetPFList_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetPFList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetPFList_);
                serverGetPFList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1770: {
              com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder subBuilder = null;
              if (serverChoosePF_ != null) {
                subBuilder = serverChoosePF_.toBuilder();
              }
              serverChoosePF_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerChoosePF.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverChoosePF_);
                serverChoosePF_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1778: {
              com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder subBuilder = null;
              if (serverGetHistoryRank_ != null) {
                subBuilder = serverGetHistoryRank_.toBuilder();
              }
              serverGetHistoryRank_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetHistoryRank_);
                serverGetHistoryRank_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1786: {
              com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder subBuilder = null;
              if (serverH5Reward_ != null) {
                subBuilder = serverH5Reward_.toBuilder();
              }
              serverH5Reward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerH5Reward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverH5Reward_);
                serverH5Reward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1794: {
              com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder subBuilder = null;
              if (serverNewDrawWinCup_ != null) {
                subBuilder = serverNewDrawWinCup_.toBuilder();
              }
              serverNewDrawWinCup_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverNewDrawWinCup_);
                serverNewDrawWinCup_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1802: {
              com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder subBuilder = null;
              if (serverGetNewHallInfo_ != null) {
                subBuilder = serverGetNewHallInfo_.toBuilder();
              }
              serverGetNewHallInfo_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetNewHallInfo_);
                serverGetNewHallInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1810: {
              com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.Builder subBuilder = null;
              if (serverGetSkinInfo_ != null) {
                subBuilder = serverGetSkinInfo_.toBuilder();
              }
              serverGetSkinInfo_ = input.readMessage(com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetSkinInfo_);
                serverGetSkinInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 1818: {
              com.kys.util.netty.proto.UserProto.ServerEquipSkin.Builder subBuilder = null;
              if (serverEquipSkin_ != null) {
                subBuilder = serverEquipSkin_.toBuilder();
              }
              serverEquipSkin_ = input.readMessage(com.kys.util.netty.proto.UserProto.ServerEquipSkin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverEquipSkin_);
                serverEquipSkin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2402: {
              com.kys.util.netty.proto.StoreProto.ServerGetStoreData.Builder subBuilder = null;
              if (serverGetStoreData_ != null) {
                subBuilder = serverGetStoreData_.toBuilder();
              }
              serverGetStoreData_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetStoreData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetStoreData_);
                serverGetStoreData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2410: {
              com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder subBuilder = null;
              if (serverConvertGoods_ != null) {
                subBuilder = serverConvertGoods_.toBuilder();
              }
              serverConvertGoods_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerConvertGoods.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverConvertGoods_);
                serverConvertGoods_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2426: {
              com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder subBuilder = null;
              if (serverWXPayResult_ != null) {
                subBuilder = serverWXPayResult_.toBuilder();
              }
              serverWXPayResult_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerWXPayResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverWXPayResult_);
                serverWXPayResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2434: {
              com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder subBuilder = null;
              if (serverBuyOrderGoods_ != null) {
                subBuilder = serverBuyOrderGoods_.toBuilder();
              }
              serverBuyOrderGoods_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverBuyOrderGoods_);
                serverBuyOrderGoods_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2442: {
              com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder subBuilder = null;
              if (serverGetFirstCharge_ != null) {
                subBuilder = serverGetFirstCharge_.toBuilder();
              }
              serverGetFirstCharge_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetFirstCharge_);
                serverGetFirstCharge_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2450: {
              com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder subBuilder = null;
              if (serverGetDailyGift_ != null) {
                subBuilder = serverGetDailyGift_.toBuilder();
              }
              serverGetDailyGift_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetDailyGift_);
                serverGetDailyGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2458: {
              com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder subBuilder = null;
              if (serverGetMonthCard_ != null) {
                subBuilder = serverGetMonthCard_.toBuilder();
              }
              serverGetMonthCard_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMonthCard_);
                serverGetMonthCard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 2466: {
              com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder subBuilder = null;
              if (serverGetResurgenceGift_ != null) {
                subBuilder = serverGetResurgenceGift_.toBuilder();
              }
              serverGetResurgenceGift_ = input.readMessage(com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetResurgenceGift_);
                serverGetResurgenceGift_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3218: {
              com.kys.util.netty.proto.GameProto.B_GameStart.Builder subBuilder = null;
              if (bGameStart_ != null) {
                subBuilder = bGameStart_.toBuilder();
              }
              bGameStart_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_GameStart.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bGameStart_);
                bGameStart_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3226: {
              com.kys.util.netty.proto.GameProto.B_DoCatch.Builder subBuilder = null;
              if (bDoCatch_ != null) {
                subBuilder = bDoCatch_.toBuilder();
              }
              bDoCatch_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_DoCatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDoCatch_);
                bDoCatch_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3234: {
              com.kys.util.netty.proto.GameProto.B_CatchResult.Builder subBuilder = null;
              if (bCatchResult_ != null) {
                subBuilder = bCatchResult_.toBuilder();
              }
              bCatchResult_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_CatchResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bCatchResult_);
                bCatchResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3242: {
              com.kys.util.netty.proto.GameProto.B_PlayCards.Builder subBuilder = null;
              if (bPlayCards_ != null) {
                subBuilder = bPlayCards_.toBuilder();
              }
              bPlayCards_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_PlayCards.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bPlayCards_);
                bPlayCards_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3258: {
              com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder subBuilder = null;
              if (bSendDiZhuCard_ != null) {
                subBuilder = bSendDiZhuCard_.toBuilder();
              }
              bSendDiZhuCard_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bSendDiZhuCard_);
                bSendDiZhuCard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3266: {
              com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder subBuilder = null;
              if (bNextPlayer_ != null) {
                subBuilder = bNextPlayer_.toBuilder();
              }
              bNextPlayer_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_NextPlayer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bNextPlayer_);
                bNextPlayer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3274: {
              com.kys.util.netty.proto.GameProto.B_GameSettle.Builder subBuilder = null;
              if (bGameSettle_ != null) {
                subBuilder = bGameSettle_.toBuilder();
              }
              bGameSettle_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_GameSettle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bGameSettle_);
                bGameSettle_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3282: {
              com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder subBuilder = null;
              if (bRewardMessage_ != null) {
                subBuilder = bRewardMessage_.toBuilder();
              }
              bRewardMessage_ = input.readMessage(com.kys.util.netty.proto.HallProto.B_RewardMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bRewardMessage_);
                bRewardMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3290: {
              com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder subBuilder = null;
              if (bAutoPlay_ != null) {
                subBuilder = bAutoPlay_.toBuilder();
              }
              bAutoPlay_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_AutoPlay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bAutoPlay_);
                bAutoPlay_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3298: {
              com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder subBuilder = null;
              if (bRoomIdUrl_ != null) {
                subBuilder = bRoomIdUrl_.toBuilder();
              }
              bRoomIdUrl_ = input.readMessage(com.kys.util.netty.proto.GameProto.B_RoomIdUrl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bRoomIdUrl_);
                bRoomIdUrl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3306: {
              com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder subBuilder = null;
              if (bAwardDialog_ != null) {
                subBuilder = bAwardDialog_.toBuilder();
              }
              bAwardDialog_ = input.readMessage(com.kys.util.netty.proto.HallProto.B_AwardDialog.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bAwardDialog_);
                bAwardDialog_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3314: {
              com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder subBuilder = null;
              if (bBuySuccess_ != null) {
                subBuilder = bBuySuccess_.toBuilder();
              }
              bBuySuccess_ = input.readMessage(com.kys.util.netty.proto.StoreProto.B_BuySuccess.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bBuySuccess_);
                bBuySuccess_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3322: {
              com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder subBuilder = null;
              if (bRedDotPush_ != null) {
                subBuilder = bRedDotPush_.toBuilder();
              }
              bRedDotPush_ = input.readMessage(com.kys.util.netty.proto.HallProto.B_RedDotPush.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bRedDotPush_);
                bRedDotPush_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3330: {
              com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder subBuilder = null;
              if (bForceAnnounce_ != null) {
                subBuilder = bForceAnnounce_.toBuilder();
              }
              bForceAnnounce_ = input.readMessage(com.kys.util.netty.proto.HallProto.B_ForceAnnounce.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bForceAnnounce_);
                bForceAnnounce_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3338: {
              com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder subBuilder = null;
              if (bDGameMessage_ != null) {
                subBuilder = bDGameMessage_.toBuilder();
              }
              bDGameMessage_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.B_DGameMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDGameMessage_);
                bDGameMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3346: {
              com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder subBuilder = null;
              if (bDGOver_ != null) {
                subBuilder = bDGOver_.toBuilder();
              }
              bDGOver_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.B_DGOver.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDGOver_);
                bDGOver_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3354: {
              com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder subBuilder = null;
              if (bDDOver_ != null) {
                subBuilder = bDDOver_.toBuilder();
              }
              bDDOver_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.B_DDOver.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDDOver_);
                bDDOver_ = subBuilder.buildPartial();
              }

              break;
            }
            case 3362: {
              com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder subBuilder = null;
              if (bDDInfo_ != null) {
                subBuilder = bDDInfo_.toBuilder();
              }
              bDDInfo_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.B_DDInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bDDInfo_);
                bDDInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4002: {
              com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder subBuilder = null;
              if (serverGetAnnounce_ != null) {
                subBuilder = serverGetAnnounce_.toBuilder();
              }
              serverGetAnnounce_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetAnnounce.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetAnnounce_);
                serverGetAnnounce_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4802: {
              com.kys.util.netty.proto.HallProto.ServerGetMail.Builder subBuilder = null;
              if (serverGetMail_ != null) {
                subBuilder = serverGetMail_.toBuilder();
              }
              serverGetMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMail_);
                serverGetMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4810: {
              com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder subBuilder = null;
              if (serverGetMailReward_ != null) {
                subBuilder = serverGetMailReward_.toBuilder();
              }
              serverGetMailReward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetMailReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetMailReward_);
                serverGetMailReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4818: {
              com.kys.util.netty.proto.HallProto.ServerDelMail.Builder subBuilder = null;
              if (serverDelMail_ != null) {
                subBuilder = serverDelMail_.toBuilder();
              }
              serverDelMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerDelMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDelMail_);
                serverDelMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4826: {
              com.kys.util.netty.proto.HallProto.ServerReadMail.Builder subBuilder = null;
              if (serverReadMail_ != null) {
                subBuilder = serverReadMail_.toBuilder();
              }
              serverReadMail_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerReadMail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverReadMail_);
                serverReadMail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 4834: {
              com.kys.util.netty.proto.HallProto.ServerDel2R.Builder subBuilder = null;
              if (serverDel2R_ != null) {
                subBuilder = serverDel2R_.toBuilder();
              }
              serverDel2R_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerDel2R.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDel2R_);
                serverDel2R_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5602: {
              com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder subBuilder = null;
              if (serverQueryDailyTask_ != null) {
                subBuilder = serverQueryDailyTask_.toBuilder();
              }
              serverQueryDailyTask_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryDailyTask_);
                serverQueryDailyTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5610: {
              com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.Builder subBuilder = null;
              if (serverGetDailyTaskAward_ != null) {
                subBuilder = serverGetDailyTaskAward_.toBuilder();
              }
              serverGetDailyTaskAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetDailyTaskAward_);
                serverGetDailyTaskAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5618: {
              com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder subBuilder = null;
              if (serverGetNoviceReward_ != null) {
                subBuilder = serverGetNoviceReward_.toBuilder();
              }
              serverGetNoviceReward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetNoviceReward_);
                serverGetNoviceReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5626: {
              com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder subBuilder = null;
              if (serverQueryNoviceTask_ != null) {
                subBuilder = serverQueryNoviceTask_.toBuilder();
              }
              serverQueryNoviceTask_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryNoviceTask_);
                serverQueryNoviceTask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 5634: {
              com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder subBuilder = null;
              if (serverGetDTAward_ != null) {
                subBuilder = serverGetDTAward_.toBuilder();
              }
              serverGetDTAward_ = input.readMessage(com.kys.util.netty.proto.HallProto.ServerGetDTAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetDTAward_);
                serverGetDTAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6402: {
              com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder subBuilder = null;
              if (serverGetReceiveAddr_ != null) {
                subBuilder = serverGetReceiveAddr_.toBuilder();
              }
              serverGetReceiveAddr_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetReceiveAddr_);
                serverGetReceiveAddr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6410: {
              com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder subBuilder = null;
              if (serverAlterReceiveAddr_ != null) {
                subBuilder = serverAlterReceiveAddr_.toBuilder();
              }
              serverAlterReceiveAddr_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverAlterReceiveAddr_);
                serverAlterReceiveAddr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6418: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder subBuilder = null;
              if (serverSnatchList_ != null) {
                subBuilder = serverSnatchList_.toBuilder();
              }
              serverSnatchList_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchList_);
                serverSnatchList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6426: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder subBuilder = null;
              if (serverSnatchItemDetail_ != null) {
                subBuilder = serverSnatchItemDetail_.toBuilder();
              }
              serverSnatchItemDetail_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchItemDetail_);
                serverSnatchItemDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6434: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder subBuilder = null;
              if (serverSnatchBet_ != null) {
                subBuilder = serverSnatchBet_.toBuilder();
              }
              serverSnatchBet_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchBet_);
                serverSnatchBet_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6442: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder subBuilder = null;
              if (serverSnatchAwardList_ != null) {
                subBuilder = serverSnatchAwardList_.toBuilder();
              }
              serverSnatchAwardList_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchAwardList_);
                serverSnatchAwardList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6450: {
              com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder subBuilder = null;
              if (serverOwnSnatchRecord_ != null) {
                subBuilder = serverOwnSnatchRecord_.toBuilder();
              }
              serverOwnSnatchRecord_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverOwnSnatchRecord_);
                serverOwnSnatchRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6458: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder subBuilder = null;
              if (serverSnatchItemHistory_ != null) {
                subBuilder = serverSnatchItemHistory_.toBuilder();
              }
              serverSnatchItemHistory_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchItemHistory_);
                serverSnatchItemHistory_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6466: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder subBuilder = null;
              if (serverSnatchHistoryDetail_ != null) {
                subBuilder = serverSnatchHistoryDetail_.toBuilder();
              }
              serverSnatchHistoryDetail_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchHistoryDetail_);
                serverSnatchHistoryDetail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 6474: {
              com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder subBuilder = null;
              if (serverSnatchGetAward_ != null) {
                subBuilder = serverSnatchGetAward_.toBuilder();
              }
              serverSnatchGetAward_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverSnatchGetAward_);
                serverSnatchGetAward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7202: {
              com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder subBuilder = null;
              if (serverEnterDG_ != null) {
                subBuilder = serverEnterDG_.toBuilder();
              }
              serverEnterDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerEnterDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverEnterDG_);
                serverEnterDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7210: {
              com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder subBuilder = null;
              if (serverDGLottery_ != null) {
                subBuilder = serverDGLottery_.toBuilder();
              }
              serverDGLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerDGLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDGLottery_);
                serverDGLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7218: {
              com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder subBuilder = null;
              if (serverResetLottery_ != null) {
                subBuilder = serverResetLottery_.toBuilder();
              }
              serverResetLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerResetLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverResetLottery_);
                serverResetLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7226: {
              com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder subBuilder = null;
              if (serverExitDG_ != null) {
                subBuilder = serverExitDG_.toBuilder();
              }
              serverExitDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerExitDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverExitDG_);
                serverExitDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7234: {
              com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder subBuilder = null;
              if (serverOpenDG_ != null) {
                subBuilder = serverOpenDG_.toBuilder();
              }
              serverOpenDG_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerOpenDG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverOpenDG_);
                serverOpenDG_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7242: {
              com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder subBuilder = null;
              if (serverOpenDD_ != null) {
                subBuilder = serverOpenDD_.toBuilder();
              }
              serverOpenDD_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerOpenDD.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverOpenDD_);
                serverOpenDD_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7250: {
              com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder subBuilder = null;
              if (serverDDLottery_ != null) {
                subBuilder = serverDDLottery_.toBuilder();
              }
              serverDDLottery_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerDDLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverDDLottery_);
                serverDDLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 7258: {
              com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder subBuilder = null;
              if (serverExitDD_ != null) {
                subBuilder = serverExitDD_.toBuilder();
              }
              serverExitDD_ = input.readMessage(com.kys.util.netty.proto.SnatchProto.ServerExitDD.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverExitDD_);
                serverExitDD_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8010: {
              com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder subBuilder = null;
              if (serverQueryProp_ != null) {
                subBuilder = serverQueryProp_.toBuilder();
              }
              serverQueryProp_ = input.readMessage(com.kys.util.netty.proto.PropProto.ServerQueryProp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryProp_);
                serverQueryProp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8018: {
              com.kys.util.netty.proto.PropProto.ServerUseProp.Builder subBuilder = null;
              if (serverUseProp_ != null) {
                subBuilder = serverUseProp_.toBuilder();
              }
              serverUseProp_ = input.readMessage(com.kys.util.netty.proto.PropProto.ServerUseProp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverUseProp_);
                serverUseProp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8026: {
              com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder subBuilder = null;
              if (serverQueryPropCount_ != null) {
                subBuilder = serverQueryPropCount_.toBuilder();
              }
              serverQueryPropCount_ = input.readMessage(com.kys.util.netty.proto.PropProto.ServerQueryPropCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverQueryPropCount_);
                serverQueryPropCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8810: {
              com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.Builder subBuilder = null;
              if (serverMonthSignInfo_ != null) {
                subBuilder = serverMonthSignInfo_.toBuilder();
              }
              serverMonthSignInfo_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMonthSignInfo_);
                serverMonthSignInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8818: {
              com.kys.util.netty.proto.SignProto.ServerMonthSign.Builder subBuilder = null;
              if (serverMonthSign_ != null) {
                subBuilder = serverMonthSign_.toBuilder();
              }
              serverMonthSign_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerMonthSign.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMonthSign_);
                serverMonthSign_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8826: {
              com.kys.util.netty.proto.SignProto.ServerGetCritReward.Builder subBuilder = null;
              if (serverGetCritReward_ != null) {
                subBuilder = serverGetCritReward_.toBuilder();
              }
              serverGetCritReward_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerGetCritReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetCritReward_);
                serverGetCritReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8834: {
              com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder subBuilder = null;
              if (serverLTLottery_ != null) {
                subBuilder = serverLTLottery_.toBuilder();
              }
              serverLTLottery_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerLTLottery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverLTLottery_);
                serverLTLottery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8842: {
              com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder subBuilder = null;
              if (serverGetTSReward_ != null) {
                subBuilder = serverGetTSReward_.toBuilder();
              }
              serverGetTSReward_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerGetTSReward.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetTSReward_);
                serverGetTSReward_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8850: {
              com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder subBuilder = null;
              if (serverGetLuckInfo_ != null) {
                subBuilder = serverGetLuckInfo_.toBuilder();
              }
              serverGetLuckInfo_ = input.readMessage(com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetLuckInfo_);
                serverGetLuckInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 9610: {
              com.kys.util.netty.proto.VipProto.ServerGetVipInfo.Builder subBuilder = null;
              if (serverGetVipInfo_ != null) {
                subBuilder = serverGetVipInfo_.toBuilder();
              }
              serverGetVipInfo_ = input.readMessage(com.kys.util.netty.proto.VipProto.ServerGetVipInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetVipInfo_);
                serverGetVipInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 9618: {
              com.kys.util.netty.proto.VipProto.ServerGetVipWeek.Builder subBuilder = null;
              if (serverGetVipWeek_ != null) {
                subBuilder = serverGetVipWeek_.toBuilder();
              }
              serverGetVipWeek_ = input.readMessage(com.kys.util.netty.proto.VipProto.ServerGetVipWeek.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverGetVipWeek_);
                serverGetVipWeek_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kys.util.netty.proto.ProtoMsg.ServerResponse.class, com.kys.util.netty.proto.ProtoMsg.ServerResponse.Builder.class);
    }

    public static final int METHODID_FIELD_NUMBER = 1;
    private int methodId_;
    /**
     * <code>int32 methodId = 1;</code>
     */
    public int getMethodId() {
      return methodId_;
    }

    public static final int RESULT_FIELD_NUMBER = 2;
    private int result_;
    /**
     * <pre>
     ** 返回码，包含success和错误码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
     */
    public int getResultValue() {
      return result_;
    }
    /**
     * <pre>
     ** 返回码，包含success和错误码 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
     */
    public com.kys.util.netty.proto.ProtoMsg.ResultCode getResult() {
      com.kys.util.netty.proto.ProtoMsg.ResultCode result = com.kys.util.netty.proto.ProtoMsg.ResultCode.valueOf(result_);
      return result == null ? com.kys.util.netty.proto.ProtoMsg.ResultCode.UNRECOGNIZED : result;
    }

    public static final int ERRSTR_FIELD_NUMBER = 99;
    private volatile java.lang.Object errStr_;
    /**
     * <pre>
     ** 错误展示字段，如果result不为0，则取该字段给用户展示 
     * </pre>
     *
     * <code>string errStr = 99;</code>
     */
    public java.lang.String getErrStr() {
      java.lang.Object ref = errStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        errStr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 错误展示字段，如果result不为0，则取该字段给用户展示 
     * </pre>
     *
     * <code>string errStr = 99;</code>
     */
    public com.google.protobuf.ByteString
        getErrStrBytes() {
      java.lang.Object ref = errStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVERLOGIN_FIELD_NUMBER = 3;
    private com.kys.util.netty.proto.LoginProto.ServerLogin serverLogin_;
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    public boolean hasServerLogin() {
      return serverLogin_ != null;
    }
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerLogin getServerLogin() {
      return serverLogin_ == null ? com.kys.util.netty.proto.LoginProto.ServerLogin.getDefaultInstance() : serverLogin_;
    }
    /**
     * <pre>
     ** 登录接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder getServerLoginOrBuilder() {
      return getServerLogin();
    }

    public static final int SERVERPLAYERINFO_FIELD_NUMBER = 4;
    private com.kys.util.netty.proto.UserProto.ServerGetUserInfo serverPlayerInfo_;
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    public boolean hasServerPlayerInfo() {
      return serverPlayerInfo_ != null;
    }
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerPlayerInfo() {
      return serverPlayerInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverPlayerInfo_;
    }
    /**
     * <pre>
     ** 取玩家信息接口返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerPlayerInfoOrBuilder() {
      return getServerPlayerInfo();
    }

    public static final int SERVERSENDHALLHEARTBEAT_FIELD_NUMBER = 5;
    private com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat serverSendHallHeartBeat_;
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    public boolean hasServerSendHallHeartBeat() {
      return serverSendHallHeartBeat_ != null;
    }
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat getServerSendHallHeartBeat() {
      return serverSendHallHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.getDefaultInstance() : serverSendHallHeartBeat_;
    }
    /**
     * <pre>
     ** 服务器发送大厅心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder getServerSendHallHeartBeatOrBuilder() {
      return getServerSendHallHeartBeat();
    }

    public static final int SERVERSENDGAMEHEARTBEAT_FIELD_NUMBER = 6;
    private com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat serverSendGameHeartBeat_;
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    public boolean hasServerSendGameHeartBeat() {
      return serverSendGameHeartBeat_ != null;
    }
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat getServerSendGameHeartBeat() {
      return serverSendGameHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.getDefaultInstance() : serverSendGameHeartBeat_;
    }
    /**
     * <pre>
     ** 服务器发送游戏服心跳 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
     */
    public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder getServerSendGameHeartBeatOrBuilder() {
      return getServerSendGameHeartBeat();
    }

    public static final int SERVERGETUSERINFO_FIELD_NUMBER = 7;
    private com.kys.util.netty.proto.UserProto.ServerGetUserInfo serverGetUserInfo_;
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    public boolean hasServerGetUserInfo() {
      return serverGetUserInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerGetUserInfo() {
      return serverGetUserInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverGetUserInfo_;
    }
    /**
     * <pre>
     ** 服务器返回用户信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerGetUserInfoOrBuilder() {
      return getServerGetUserInfo();
    }

    public static final int SERVERQUICKJOIN_FIELD_NUMBER = 100;
    private com.kys.util.netty.proto.GameProto.ServerQuickJoin serverQuickJoin_;
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    public boolean hasServerQuickJoin() {
      return serverQuickJoin_ != null;
    }
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerQuickJoin getServerQuickJoin() {
      return serverQuickJoin_ == null ? com.kys.util.netty.proto.GameProto.ServerQuickJoin.getDefaultInstance() : serverQuickJoin_;
    }
    /**
     * <pre>
     ** 服务器加入快速匹配返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder getServerQuickJoinOrBuilder() {
      return getServerQuickJoin();
    }

    public static final int SERVERENTERROOM_FIELD_NUMBER = 101;
    private com.kys.util.netty.proto.GameProto.ServerEnterRoom serverEnterRoom_;
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    public boolean hasServerEnterRoom() {
      return serverEnterRoom_ != null;
    }
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerEnterRoom getServerEnterRoom() {
      return serverEnterRoom_ == null ? com.kys.util.netty.proto.GameProto.ServerEnterRoom.getDefaultInstance() : serverEnterRoom_;
    }
    /**
     * <pre>
     ** 服务器根据房间号进入房间，获取房间内部信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder getServerEnterRoomOrBuilder() {
      return getServerEnterRoom();
    }

    public static final int SERVERRECOVERGAME_FIELD_NUMBER = 102;
    private com.kys.util.netty.proto.GameProto.ServerRecoverGame serverRecoverGame_;
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    public boolean hasServerRecoverGame() {
      return serverRecoverGame_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerRecoverGame getServerRecoverGame() {
      return serverRecoverGame_ == null ? com.kys.util.netty.proto.GameProto.ServerRecoverGame.getDefaultInstance() : serverRecoverGame_;
    }
    /**
     * <pre>
     ** 服务器返回玩家恢复游戏请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder getServerRecoverGameOrBuilder() {
      return getServerRecoverGame();
    }

    public static final int SERVERDOCATCH_FIELD_NUMBER = 103;
    private com.kys.util.netty.proto.GameProto.ServerDoCatch serverDoCatch_;
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    public boolean hasServerDoCatch() {
      return serverDoCatch_ != null;
    }
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerDoCatch getServerDoCatch() {
      return serverDoCatch_ == null ? com.kys.util.netty.proto.GameProto.ServerDoCatch.getDefaultInstance() : serverDoCatch_;
    }
    /**
     * <pre>
     ** 服务器返回叫分结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder getServerDoCatchOrBuilder() {
      return getServerDoCatch();
    }

    public static final int SERVERPLAYCARDS_FIELD_NUMBER = 104;
    private com.kys.util.netty.proto.GameProto.ServerPlayCards serverPlayCards_;
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    public boolean hasServerPlayCards() {
      return serverPlayCards_ != null;
    }
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerPlayCards getServerPlayCards() {
      return serverPlayCards_ == null ? com.kys.util.netty.proto.GameProto.ServerPlayCards.getDefaultInstance() : serverPlayCards_;
    }
    /**
     * <pre>
     ** 服务器返回出牌结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder getServerPlayCardsOrBuilder() {
      return getServerPlayCards();
    }

    public static final int SERVERAUTOPLAY_FIELD_NUMBER = 105;
    private com.kys.util.netty.proto.GameProto.ServerAutoPlay serverAutoPlay_;
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    public boolean hasServerAutoPlay() {
      return serverAutoPlay_ != null;
    }
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerAutoPlay getServerAutoPlay() {
      return serverAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.ServerAutoPlay.getDefaultInstance() : serverAutoPlay_;
    }
    /**
     * <pre>
     ** 服务器返回托管请求结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder getServerAutoPlayOrBuilder() {
      return getServerAutoPlay();
    }

    public static final int SERVERLEAVEROOM_FIELD_NUMBER = 106;
    private com.kys.util.netty.proto.GameProto.ServerLeaveRoom serverLeaveRoom_;
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    public boolean hasServerLeaveRoom() {
      return serverLeaveRoom_ != null;
    }
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerLeaveRoom getServerLeaveRoom() {
      return serverLeaveRoom_ == null ? com.kys.util.netty.proto.GameProto.ServerLeaveRoom.getDefaultInstance() : serverLeaveRoom_;
    }
    /**
     * <pre>
     ** 服务器离开房间ACK 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder getServerLeaveRoomOrBuilder() {
      return getServerLeaveRoom();
    }

    public static final int SERVERCANCLEJOIN_FIELD_NUMBER = 107;
    private com.kys.util.netty.proto.GameProto.ServerCancleJoin serverCancleJoin_;
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    public boolean hasServerCancleJoin() {
      return serverCancleJoin_ != null;
    }
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerCancleJoin getServerCancleJoin() {
      return serverCancleJoin_ == null ? com.kys.util.netty.proto.GameProto.ServerCancleJoin.getDefaultInstance() : serverCancleJoin_;
    }
    /**
     * <pre>
     ** 服务器取消匹配 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder getServerCancleJoinOrBuilder() {
      return getServerCancleJoin();
    }

    public static final int SERVERQUERYINDEX_FIELD_NUMBER = 108;
    private com.kys.util.netty.proto.GameProto.ServerQueryIndex serverQueryIndex_;
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    public boolean hasServerQueryIndex() {
      return serverQueryIndex_ != null;
    }
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerQueryIndex getServerQueryIndex() {
      return serverQueryIndex_ == null ? com.kys.util.netty.proto.GameProto.ServerQueryIndex.getDefaultInstance() : serverQueryIndex_;
    }
    /**
     * <pre>
     ** 服务器返回房间序号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder getServerQueryIndexOrBuilder() {
      return getServerQueryIndex();
    }

    public static final int SERVERRETRYRETURNGAME_FIELD_NUMBER = 109;
    private com.kys.util.netty.proto.GameProto.ServerRetryReturnGame serverRetryReturnGame_;
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    public boolean hasServerRetryReturnGame() {
      return serverRetryReturnGame_ != null;
    }
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerRetryReturnGame getServerRetryReturnGame() {
      return serverRetryReturnGame_ == null ? com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.getDefaultInstance() : serverRetryReturnGame_;
    }
    /**
     * <pre>
     ** 服务器返回客户端尝试返回游戏 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
     */
    public com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder getServerRetryReturnGameOrBuilder() {
      return getServerRetryReturnGame();
    }

    public static final int SERVERGETRANKLIST_FIELD_NUMBER = 200;
    private com.kys.util.netty.proto.HallProto.ServerGetRankList serverGetRankList_;
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    public boolean hasServerGetRankList() {
      return serverGetRankList_ != null;
    }
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRankList getServerGetRankList() {
      return serverGetRankList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRankList.getDefaultInstance() : serverGetRankList_;
    }
    /**
     * <pre>
     ** 返回排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder getServerGetRankListOrBuilder() {
      return getServerGetRankList();
    }

    public static final int SERVERGETSIGNUPREWARDLIST_FIELD_NUMBER = 201;
    private com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList serverGetSignupRewardList_;
    /**
     * <pre>
     ** 服务器返回签到奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
     */
    public boolean hasServerGetSignupRewardList() {
      return serverGetSignupRewardList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回签到奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList getServerGetSignupRewardList() {
      return serverGetSignupRewardList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.getDefaultInstance() : serverGetSignupRewardList_;
    }
    /**
     * <pre>
     ** 服务器返回签到奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetSignupRewardListOrBuilder getServerGetSignupRewardListOrBuilder() {
      return getServerGetSignupRewardList();
    }

    public static final int SERVERGETHALLINFO_FIELD_NUMBER = 202;
    private com.kys.util.netty.proto.HallProto.ServerGetHallInfo serverGetHallInfo_;
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
     */
    public boolean hasServerGetHallInfo() {
      return serverGetHallInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetHallInfo getServerGetHallInfo() {
      return serverGetHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetHallInfo.getDefaultInstance() : serverGetHallInfo_;
    }
    /**
     * <pre>
     ** 服务器返回大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetHallInfoOrBuilder getServerGetHallInfoOrBuilder() {
      return getServerGetHallInfo();
    }

    public static final int SERVERSIGNUP_FIELD_NUMBER = 203;
    private com.kys.util.netty.proto.HallProto.ServerSignup serverSignup_;
    /**
     * <pre>
     ** 服务器响应签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
     */
    public boolean hasServerSignup() {
      return serverSignup_ != null;
    }
    /**
     * <pre>
     ** 服务器响应签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSignup getServerSignup() {
      return serverSignup_ == null ? com.kys.util.netty.proto.HallProto.ServerSignup.getDefaultInstance() : serverSignup_;
    }
    /**
     * <pre>
     ** 服务器响应签到请求 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSignupOrBuilder getServerSignupOrBuilder() {
      return getServerSignup();
    }

    public static final int SERVERREWARDMESSAGE_FIELD_NUMBER = 204;
    private com.kys.util.netty.proto.HallProto.ServerRewardMessage serverRewardMessage_;
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    public boolean hasServerRewardMessage() {
      return serverRewardMessage_ != null;
    }
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerRewardMessage getServerRewardMessage() {
      return serverRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.ServerRewardMessage.getDefaultInstance() : serverRewardMessage_;
    }
    /**
     * <pre>
     ** 服务器返回大厅获奖公示 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder getServerRewardMessageOrBuilder() {
      return getServerRewardMessage();
    }

    public static final int SERVERDRAWWINCUP_FIELD_NUMBER = 205;
    private com.kys.util.netty.proto.HallProto.ServerDrawWinCup serverDrawWinCup_;
    /**
     * <pre>
     ** 服务器返回抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
     */
    public boolean hasServerDrawWinCup() {
      return serverDrawWinCup_ != null;
    }
    /**
     * <pre>
     ** 服务器返回抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDrawWinCup getServerDrawWinCup() {
      return serverDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ServerDrawWinCup.getDefaultInstance() : serverDrawWinCup_;
    }
    /**
     * <pre>
     ** 服务器返回抽奖杯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDrawWinCupOrBuilder getServerDrawWinCupOrBuilder() {
      return getServerDrawWinCup();
    }

    public static final int SERVERGETROOMCONFIG_FIELD_NUMBER = 206;
    private com.kys.util.netty.proto.HallProto.ServerGetRoomConfig serverGetRoomConfig_;
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    public boolean hasServerGetRoomConfig() {
      return serverGetRoomConfig_ != null;
    }
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomConfig getServerGetRoomConfig() {
      return serverGetRoomConfig_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.getDefaultInstance() : serverGetRoomConfig_;
    }
    /**
     * <pre>
     ** 服务器返回游戏场次信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder getServerGetRoomConfigOrBuilder() {
      return getServerGetRoomConfig();
    }

    public static final int SERVERGETROOMCARDCONFIG_FIELD_NUMBER = 207;
    private com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig serverGetRoomCardConfig_;
    /**
     * <pre>
     ** 服务器返回房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
     */
    public boolean hasServerGetRoomCardConfig() {
      return serverGetRoomCardConfig_ != null;
    }
    /**
     * <pre>
     ** 服务器返回房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig getServerGetRoomCardConfig() {
      return serverGetRoomCardConfig_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.getDefaultInstance() : serverGetRoomCardConfig_;
    }
    /**
     * <pre>
     ** 服务器返回房卡模式配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfigOrBuilder getServerGetRoomCardConfigOrBuilder() {
      return getServerGetRoomCardConfig();
    }

    public static final int SERVERCREATEROOM_FIELD_NUMBER = 208;
    private com.kys.util.netty.proto.HallProto.ServerCreateRoom serverCreateRoom_;
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
     */
    public boolean hasServerCreateRoom() {
      return serverCreateRoom_ != null;
    }
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerCreateRoom getServerCreateRoom() {
      return serverCreateRoom_ == null ? com.kys.util.netty.proto.HallProto.ServerCreateRoom.getDefaultInstance() : serverCreateRoom_;
    }
    /**
     * <pre>
     ** 客户端请求创建房卡模式房间 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerCreateRoomOrBuilder getServerCreateRoomOrBuilder() {
      return getServerCreateRoom();
    }

    public static final int SERVERGETMONTHCARDDIAMOND_FIELD_NUMBER = 209;
    private com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond serverGetMonthCardDiamond_;
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    public boolean hasServerGetMonthCardDiamond() {
      return serverGetMonthCardDiamond_ != null;
    }
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond getServerGetMonthCardDiamond() {
      return serverGetMonthCardDiamond_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.getDefaultInstance() : serverGetMonthCardDiamond_;
    }
    /**
     * <pre>
     ** 服务器返回领取钻石月卡钻石 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder getServerGetMonthCardDiamondOrBuilder() {
      return getServerGetMonthCardDiamond();
    }

    public static final int SERVERGETLOTTERYCOUNT_FIELD_NUMBER = 210;
    private com.kys.util.netty.proto.HallProto.ServerGetLotteryCount serverGetLotteryCount_;
    /**
     * <pre>
     ** 服务器返回玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    public boolean hasServerGetLotteryCount() {
      return serverGetLotteryCount_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetLotteryCount getServerGetLotteryCount() {
      return serverGetLotteryCount_ == null ? com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.getDefaultInstance() : serverGetLotteryCount_;
    }
    /**
     * <pre>
     ** 服务器返回玩家抽取奖杯比赛数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder getServerGetLotteryCountOrBuilder() {
      return getServerGetLotteryCount();
    }

    public static final int SERVERGETROOMINFO_FIELD_NUMBER = 211;
    private com.kys.util.netty.proto.HallProto.ServerGetRoomInfo serverGetRoomInfo_;
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    public boolean hasServerGetRoomInfo() {
      return serverGetRoomInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomInfo getServerGetRoomInfo() {
      return serverGetRoomInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.getDefaultInstance() : serverGetRoomInfo_;
    }
    /**
     * <pre>
     ** 服务器返回单一房间配置 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder getServerGetRoomInfoOrBuilder() {
      return getServerGetRoomInfo();
    }

    public static final int SERVERSENDTELCODE_FIELD_NUMBER = 212;
    private com.kys.util.netty.proto.HallProto.ServerSendTelCode serverSendTelCode_;
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    public boolean hasServerSendTelCode() {
      return serverSendTelCode_ != null;
    }
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSendTelCode getServerSendTelCode() {
      return serverSendTelCode_ == null ? com.kys.util.netty.proto.HallProto.ServerSendTelCode.getDefaultInstance() : serverSendTelCode_;
    }
    /**
     * <pre>
     ** 服务器返回发送验证码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder getServerSendTelCodeOrBuilder() {
      return getServerSendTelCode();
    }

    public static final int SERVERVERIFYTELCODE_FIELD_NUMBER = 213;
    private com.kys.util.netty.proto.HallProto.ServerVerifyTelCode serverVerifyTelCode_;
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    public boolean hasServerVerifyTelCode() {
      return serverVerifyTelCode_ != null;
    }
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerVerifyTelCode getServerVerifyTelCode() {
      return serverVerifyTelCode_ == null ? com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.getDefaultInstance() : serverVerifyTelCode_;
    }
    /**
     * <pre>
     ** 服务器返回校验短信码ACK消息
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder getServerVerifyTelCodeOrBuilder() {
      return getServerVerifyTelCode();
    }

    public static final int SERVERQUERYSHARELIST_FIELD_NUMBER = 214;
    private com.kys.util.netty.proto.HallProto.ServerQueryShareList serverQueryShareList_;
    /**
     * <pre>
     ** 服务器返回分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
     */
    public boolean hasServerQueryShareList() {
      return serverQueryShareList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryShareList getServerQueryShareList() {
      return serverQueryShareList_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryShareList.getDefaultInstance() : serverQueryShareList_;
    }
    /**
     * <pre>
     ** 服务器返回分享列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryShareListOrBuilder getServerQueryShareListOrBuilder() {
      return getServerQueryShareList();
    }

    public static final int SERVERQUERYSHAREDETAIL_FIELD_NUMBER = 215;
    private com.kys.util.netty.proto.HallProto.ServerQueryShareDetail serverQueryShareDetail_;
    /**
     * <pre>
     ** 服务器返回详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
     */
    public boolean hasServerQueryShareDetail() {
      return serverQueryShareDetail_ != null;
    }
    /**
     * <pre>
     ** 服务器返回详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryShareDetail getServerQueryShareDetail() {
      return serverQueryShareDetail_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.getDefaultInstance() : serverQueryShareDetail_;
    }
    /**
     * <pre>
     ** 服务器返回详细信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryShareDetailOrBuilder getServerQueryShareDetailOrBuilder() {
      return getServerQueryShareDetail();
    }

    public static final int SERVERGETTASKAWARD_FIELD_NUMBER = 216;
    private com.kys.util.netty.proto.HallProto.ServerGetTaskAward serverGetTaskAward_;
    /**
     * <pre>
     ** 服务器返回领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
     */
    public boolean hasServerGetTaskAward() {
      return serverGetTaskAward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetTaskAward getServerGetTaskAward() {
      return serverGetTaskAward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetTaskAward.getDefaultInstance() : serverGetTaskAward_;
    }
    /**
     * <pre>
     ** 服务器返回领取任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetTaskAwardOrBuilder getServerGetTaskAwardOrBuilder() {
      return getServerGetTaskAward();
    }

    public static final int SERVERSHAREPACKAGE_FIELD_NUMBER = 217;
    private com.kys.util.netty.proto.HallProto.ServerSharePackage serverSharePackage_;
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    public boolean hasServerSharePackage() {
      return serverSharePackage_ != null;
    }
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSharePackage getServerSharePackage() {
      return serverSharePackage_ == null ? com.kys.util.netty.proto.HallProto.ServerSharePackage.getDefaultInstance() : serverSharePackage_;
    }
    /**
     * <pre>
     ** 服务器分包接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder getServerSharePackageOrBuilder() {
      return getServerSharePackage();
    }

    public static final int SERVERGETAWARDLIST_FIELD_NUMBER = 218;
    private com.kys.util.netty.proto.HallProto.ServerGetAwardList serverGetAwardList_;
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    public boolean hasServerGetAwardList() {
      return serverGetAwardList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetAwardList getServerGetAwardList() {
      return serverGetAwardList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetAwardList.getDefaultInstance() : serverGetAwardList_;
    }
    /**
     * <pre>
     ** 服务器返回大厅奖励列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder getServerGetAwardListOrBuilder() {
      return getServerGetAwardList();
    }

    public static final int SERVERCHECKCONNECT_FIELD_NUMBER = 219;
    private com.kys.util.netty.proto.HallProto.ServerCheckConnect serverCheckConnect_;
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    public boolean hasServerCheckConnect() {
      return serverCheckConnect_ != null;
    }
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerCheckConnect getServerCheckConnect() {
      return serverCheckConnect_ == null ? com.kys.util.netty.proto.HallProto.ServerCheckConnect.getDefaultInstance() : serverCheckConnect_;
    }
    /**
     * <pre>
     ** 服务器返回连接状态 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder getServerCheckConnectOrBuilder() {
      return getServerCheckConnect();
    }

    public static final int SERVERGETPFLIST_FIELD_NUMBER = 220;
    private com.kys.util.netty.proto.HallProto.ServerGetPFList serverGetPFList_;
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    public boolean hasServerGetPFList() {
      return serverGetPFList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetPFList getServerGetPFList() {
      return serverGetPFList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetPFList.getDefaultInstance() : serverGetPFList_;
    }
    /**
     * <pre>
     ** 服务器返回获取头像框列表 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder getServerGetPFListOrBuilder() {
      return getServerGetPFList();
    }

    public static final int SERVERCHOOSEPF_FIELD_NUMBER = 221;
    private com.kys.util.netty.proto.HallProto.ServerChoosePF serverChoosePF_;
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    public boolean hasServerChoosePF() {
      return serverChoosePF_ != null;
    }
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerChoosePF getServerChoosePF() {
      return serverChoosePF_ == null ? com.kys.util.netty.proto.HallProto.ServerChoosePF.getDefaultInstance() : serverChoosePF_;
    }
    /**
     * <pre>
     ** 服务器选择头像框 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder getServerChoosePFOrBuilder() {
      return getServerChoosePF();
    }

    public static final int SERVERGETHISTORYRANK_FIELD_NUMBER = 222;
    private com.kys.util.netty.proto.HallProto.ServerGetHistoryRank serverGetHistoryRank_;
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    public boolean hasServerGetHistoryRank() {
      return serverGetHistoryRank_ != null;
    }
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetHistoryRank getServerGetHistoryRank() {
      return serverGetHistoryRank_ == null ? com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.getDefaultInstance() : serverGetHistoryRank_;
    }
    /**
     * <pre>
     ** 服务器返回上周排行榜 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder getServerGetHistoryRankOrBuilder() {
      return getServerGetHistoryRank();
    }

    public static final int SERVERH5REWARD_FIELD_NUMBER = 223;
    private com.kys.util.netty.proto.HallProto.ServerH5Reward serverH5Reward_;
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    public boolean hasServerH5Reward() {
      return serverH5Reward_ != null;
    }
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerH5Reward getServerH5Reward() {
      return serverH5Reward_ == null ? com.kys.util.netty.proto.HallProto.ServerH5Reward.getDefaultInstance() : serverH5Reward_;
    }
    /**
     * <pre>
     ** 服务端返回H5新用户奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder getServerH5RewardOrBuilder() {
      return getServerH5Reward();
    }

    public static final int SERVERNEWDRAWWINCUP_FIELD_NUMBER = 224;
    private com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup serverNewDrawWinCup_;
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    public boolean hasServerNewDrawWinCup() {
      return serverNewDrawWinCup_ != null;
    }
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup getServerNewDrawWinCup() {
      return serverNewDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.getDefaultInstance() : serverNewDrawWinCup_;
    }
    /**
     * <pre>
     ** 服务器新抽奖接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder getServerNewDrawWinCupOrBuilder() {
      return getServerNewDrawWinCup();
    }

    public static final int SERVERGETNEWHALLINFO_FIELD_NUMBER = 225;
    private com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo serverGetNewHallInfo_;
    /**
     * <pre>
     ** 服务器返回(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    public boolean hasServerGetNewHallInfo() {
      return serverGetNewHallInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo getServerGetNewHallInfo() {
      return serverGetNewHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.getDefaultInstance() : serverGetNewHallInfo_;
    }
    /**
     * <pre>
     ** 服务器返回(新)大厅信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder getServerGetNewHallInfoOrBuilder() {
      return getServerGetNewHallInfo();
    }

    public static final int SERVERGETSKININFO_FIELD_NUMBER = 226;
    private com.kys.util.netty.proto.UserProto.ServerGetSkinInfo serverGetSkinInfo_;
    /**
     * <pre>
     ** 服务器返回玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
     */
    public boolean hasServerGetSkinInfo() {
      return serverGetSkinInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetSkinInfo getServerGetSkinInfo() {
      return serverGetSkinInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.getDefaultInstance() : serverGetSkinInfo_;
    }
    /**
     * <pre>
     ** 服务器返回玩家皮肤界面信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerGetSkinInfoOrBuilder getServerGetSkinInfoOrBuilder() {
      return getServerGetSkinInfo();
    }

    public static final int SERVEREQUIPSKIN_FIELD_NUMBER = 227;
    private com.kys.util.netty.proto.UserProto.ServerEquipSkin serverEquipSkin_;
    /**
     * <pre>
     ** 服务器返回玩家修改皮肤信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
     */
    public boolean hasServerEquipSkin() {
      return serverEquipSkin_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家修改皮肤信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerEquipSkin getServerEquipSkin() {
      return serverEquipSkin_ == null ? com.kys.util.netty.proto.UserProto.ServerEquipSkin.getDefaultInstance() : serverEquipSkin_;
    }
    /**
     * <pre>
     ** 服务器返回玩家修改皮肤信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
     */
    public com.kys.util.netty.proto.UserProto.ServerEquipSkinOrBuilder getServerEquipSkinOrBuilder() {
      return getServerEquipSkin();
    }

    public static final int SERVERGETSTOREDATA_FIELD_NUMBER = 300;
    private com.kys.util.netty.proto.StoreProto.ServerGetStoreData serverGetStoreData_;
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
     */
    public boolean hasServerGetStoreData() {
      return serverGetStoreData_ != null;
    }
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetStoreData getServerGetStoreData() {
      return serverGetStoreData_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetStoreData.getDefaultInstance() : serverGetStoreData_;
    }
    /**
     * <pre>
     ** 获取商城 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetStoreDataOrBuilder getServerGetStoreDataOrBuilder() {
      return getServerGetStoreData();
    }

    public static final int SERVERCONVERTGOODS_FIELD_NUMBER = 301;
    private com.kys.util.netty.proto.StoreProto.ServerConvertGoods serverConvertGoods_;
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    public boolean hasServerConvertGoods() {
      return serverConvertGoods_ != null;
    }
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerConvertGoods getServerConvertGoods() {
      return serverConvertGoods_ == null ? com.kys.util.netty.proto.StoreProto.ServerConvertGoods.getDefaultInstance() : serverConvertGoods_;
    }
    /**
     * <pre>
     ** 服务器响应玩家请求兑换 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder getServerConvertGoodsOrBuilder() {
      return getServerConvertGoods();
    }

    public static final int SERVERWXPAYRESULT_FIELD_NUMBER = 303;
    private com.kys.util.netty.proto.StoreProto.ServerWXPayResult serverWXPayResult_;
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    public boolean hasServerWXPayResult() {
      return serverWXPayResult_ != null;
    }
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerWXPayResult getServerWXPayResult() {
      return serverWXPayResult_ == null ? com.kys.util.netty.proto.StoreProto.ServerWXPayResult.getDefaultInstance() : serverWXPayResult_;
    }
    /**
     * <pre>
     ** 返回商城查询结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder getServerWXPayResultOrBuilder() {
      return getServerWXPayResult();
    }

    public static final int SERVERBUYORDERGOODS_FIELD_NUMBER = 304;
    private com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods serverBuyOrderGoods_;
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    public boolean hasServerBuyOrderGoods() {
      return serverBuyOrderGoods_ != null;
    }
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods getServerBuyOrderGoods() {
      return serverBuyOrderGoods_ == null ? com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.getDefaultInstance() : serverBuyOrderGoods_;
    }
    /**
     * <pre>
     ** Server返回商品微信支付下单 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder getServerBuyOrderGoodsOrBuilder() {
      return getServerBuyOrderGoods();
    }

    public static final int SERVERGETFIRSTCHARGE_FIELD_NUMBER = 305;
    private com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge serverGetFirstCharge_;
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    public boolean hasServerGetFirstCharge() {
      return serverGetFirstCharge_ != null;
    }
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge getServerGetFirstCharge() {
      return serverGetFirstCharge_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.getDefaultInstance() : serverGetFirstCharge_;
    }
    /**
     * <pre>
     ** 服务器返回首充商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder getServerGetFirstChargeOrBuilder() {
      return getServerGetFirstCharge();
    }

    public static final int SERVERGETDAILYGIFT_FIELD_NUMBER = 306;
    private com.kys.util.netty.proto.StoreProto.ServerGetDailyGift serverGetDailyGift_;
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    public boolean hasServerGetDailyGift() {
      return serverGetDailyGift_ != null;
    }
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetDailyGift getServerGetDailyGift() {
      return serverGetDailyGift_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.getDefaultInstance() : serverGetDailyGift_;
    }
    /**
     * <pre>
     ** 服务器返回每日礼包商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder getServerGetDailyGiftOrBuilder() {
      return getServerGetDailyGift();
    }

    public static final int SERVERGETMONTHCARD_FIELD_NUMBER = 307;
    private com.kys.util.netty.proto.StoreProto.ServerGetMonthCard serverGetMonthCard_;
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    public boolean hasServerGetMonthCard() {
      return serverGetMonthCard_ != null;
    }
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetMonthCard getServerGetMonthCard() {
      return serverGetMonthCard_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.getDefaultInstance() : serverGetMonthCard_;
    }
    /**
     * <pre>
     ** 服务器返回钻石月卡商品 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder getServerGetMonthCardOrBuilder() {
      return getServerGetMonthCard();
    }

    public static final int SERVERGETRESURGENCEGIFT_FIELD_NUMBER = 308;
    private com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift serverGetResurgenceGift_;
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    public boolean hasServerGetResurgenceGift() {
      return serverGetResurgenceGift_ != null;
    }
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift getServerGetResurgenceGift() {
      return serverGetResurgenceGift_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.getDefaultInstance() : serverGetResurgenceGift_;
    }
    /**
     * <pre>
     ** 服务器返回复活礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
     */
    public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder getServerGetResurgenceGiftOrBuilder() {
      return getServerGetResurgenceGift();
    }

    public static final int SERVERGETANNOUNCE_FIELD_NUMBER = 500;
    private com.kys.util.netty.proto.HallProto.ServerGetAnnounce serverGetAnnounce_;
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    public boolean hasServerGetAnnounce() {
      return serverGetAnnounce_ != null;
    }
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetAnnounce getServerGetAnnounce() {
      return serverGetAnnounce_ == null ? com.kys.util.netty.proto.HallProto.ServerGetAnnounce.getDefaultInstance() : serverGetAnnounce_;
    }
    /**
     * <pre>
     ** 服务器返回普通公告信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder getServerGetAnnounceOrBuilder() {
      return getServerGetAnnounce();
    }

    public static final int SERVERGETMAIL_FIELD_NUMBER = 600;
    private com.kys.util.netty.proto.HallProto.ServerGetMail serverGetMail_;
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    public boolean hasServerGetMail() {
      return serverGetMail_ != null;
    }
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMail getServerGetMail() {
      return serverGetMail_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMail.getDefaultInstance() : serverGetMail_;
    }
    /**
     * <pre>
     ** 服务端邮件返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder getServerGetMailOrBuilder() {
      return getServerGetMail();
    }

    public static final int SERVERGETMAILREWARD_FIELD_NUMBER = 601;
    private com.kys.util.netty.proto.HallProto.ServerGetMailReward serverGetMailReward_;
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    public boolean hasServerGetMailReward() {
      return serverGetMailReward_ != null;
    }
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMailReward getServerGetMailReward() {
      return serverGetMailReward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMailReward.getDefaultInstance() : serverGetMailReward_;
    }
    /**
     * <pre>
     ** 服务端返回邮件奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder getServerGetMailRewardOrBuilder() {
      return getServerGetMailReward();
    }

    public static final int SERVERDELMAIL_FIELD_NUMBER = 602;
    private com.kys.util.netty.proto.HallProto.ServerDelMail serverDelMail_;
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    public boolean hasServerDelMail() {
      return serverDelMail_ != null;
    }
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDelMail getServerDelMail() {
      return serverDelMail_ == null ? com.kys.util.netty.proto.HallProto.ServerDelMail.getDefaultInstance() : serverDelMail_;
    }
    /**
     * <pre>
     ** 服务端返回请求删除邮件 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder getServerDelMailOrBuilder() {
      return getServerDelMail();
    }

    public static final int SERVERREADMAIL_FIELD_NUMBER = 603;
    private com.kys.util.netty.proto.HallProto.ServerReadMail serverReadMail_;
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    public boolean hasServerReadMail() {
      return serverReadMail_ != null;
    }
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerReadMail getServerReadMail() {
      return serverReadMail_ == null ? com.kys.util.netty.proto.HallProto.ServerReadMail.getDefaultInstance() : serverReadMail_;
    }
    /**
     * <pre>
     ** 服务器端返回邮件已读 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder getServerReadMailOrBuilder() {
      return getServerReadMail();
    }

    public static final int SERVERDEL2R_FIELD_NUMBER = 604;
    private com.kys.util.netty.proto.HallProto.ServerDel2R serverDel2R_;
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    public boolean hasServerDel2R() {
      return serverDel2R_ != null;
    }
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDel2R getServerDel2R() {
      return serverDel2R_ == null ? com.kys.util.netty.proto.HallProto.ServerDel2R.getDefaultInstance() : serverDel2R_;
    }
    /**
     * <pre>
     ** 服务端删除已读已领取 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder getServerDel2ROrBuilder() {
      return getServerDel2R();
    }

    public static final int SERVERQUERYDAILYTASK_FIELD_NUMBER = 700;
    private com.kys.util.netty.proto.HallProto.ServerQueryDailyTask serverQueryDailyTask_;
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    public boolean hasServerQueryDailyTask() {
      return serverQueryDailyTask_ != null;
    }
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryDailyTask getServerQueryDailyTask() {
      return serverQueryDailyTask_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.getDefaultInstance() : serverQueryDailyTask_;
    }
    /**
     * <pre>
     ** 服务器返回每日任务信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder getServerQueryDailyTaskOrBuilder() {
      return getServerQueryDailyTask();
    }

    public static final int SERVERGETDAILYTASKAWARD_FIELD_NUMBER = 701;
    private com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward serverGetDailyTaskAward_;
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
     */
    public boolean hasServerGetDailyTaskAward() {
      return serverGetDailyTaskAward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward getServerGetDailyTaskAward() {
      return serverGetDailyTaskAward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.getDefaultInstance() : serverGetDailyTaskAward_;
    }
    /**
     * <pre>
     ** 服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAwardOrBuilder getServerGetDailyTaskAwardOrBuilder() {
      return getServerGetDailyTaskAward();
    }

    public static final int SERVERGETNOVICEREWARD_FIELD_NUMBER = 702;
    private com.kys.util.netty.proto.HallProto.ServerGetNoviceReward serverGetNoviceReward_;
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    public boolean hasServerGetNoviceReward() {
      return serverGetNoviceReward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetNoviceReward getServerGetNoviceReward() {
      return serverGetNoviceReward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.getDefaultInstance() : serverGetNoviceReward_;
    }
    /**
     * <pre>
     ** 服务器返回获取新手任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder getServerGetNoviceRewardOrBuilder() {
      return getServerGetNoviceReward();
    }

    public static final int SERVERQUERYNOVICETASK_FIELD_NUMBER = 703;
    private com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask serverQueryNoviceTask_;
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    public boolean hasServerQueryNoviceTask() {
      return serverQueryNoviceTask_ != null;
    }
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask getServerQueryNoviceTask() {
      return serverQueryNoviceTask_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.getDefaultInstance() : serverQueryNoviceTask_;
    }
    /**
     * <pre>
     ** 服务器返回新手任务 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder getServerQueryNoviceTaskOrBuilder() {
      return getServerQueryNoviceTask();
    }

    public static final int SERVERGETDTAWARD_FIELD_NUMBER = 704;
    private com.kys.util.netty.proto.HallProto.ServerGetDTAward serverGetDTAward_;
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    public boolean hasServerGetDTAward() {
      return serverGetDTAward_ != null;
    }
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetDTAward getServerGetDTAward() {
      return serverGetDTAward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetDTAward.getDefaultInstance() : serverGetDTAward_;
    }
    /**
     * <pre>
     ** (新)服务器返回领取每日任务奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
     */
    public com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder getServerGetDTAwardOrBuilder() {
      return getServerGetDTAward();
    }

    public static final int SERVERGETRECEIVEADDR_FIELD_NUMBER = 800;
    private com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr serverGetReceiveAddr_;
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    public boolean hasServerGetReceiveAddr() {
      return serverGetReceiveAddr_ != null;
    }
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr getServerGetReceiveAddr() {
      return serverGetReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.getDefaultInstance() : serverGetReceiveAddr_;
    }
    /**
     * <pre>
     ** 服务器返回用户收货地址 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder getServerGetReceiveAddrOrBuilder() {
      return getServerGetReceiveAddr();
    }

    public static final int SERVERALTERRECEIVEADDR_FIELD_NUMBER = 801;
    private com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr serverAlterReceiveAddr_;
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    public boolean hasServerAlterReceiveAddr() {
      return serverAlterReceiveAddr_ != null;
    }
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr getServerAlterReceiveAddr() {
      return serverAlterReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.getDefaultInstance() : serverAlterReceiveAddr_;
    }
    /**
     * <pre>
     ** 修改收货地址ack返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder getServerAlterReceiveAddrOrBuilder() {
      return getServerAlterReceiveAddr();
    }

    public static final int SERVERSNATCHLIST_FIELD_NUMBER = 802;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchList serverSnatchList_;
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    public boolean hasServerSnatchList() {
      return serverSnatchList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchList getServerSnatchList() {
      return serverSnatchList_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchList.getDefaultInstance() : serverSnatchList_;
    }
    /**
     * <pre>
     ** 服务器返回商品列表信息接口 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder getServerSnatchListOrBuilder() {
      return getServerSnatchList();
    }

    public static final int SERVERSNATCHITEMDETAIL_FIELD_NUMBER = 803;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail serverSnatchItemDetail_;
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    public boolean hasServerSnatchItemDetail() {
      return serverSnatchItemDetail_ != null;
    }
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail getServerSnatchItemDetail() {
      return serverSnatchItemDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.getDefaultInstance() : serverSnatchItemDetail_;
    }
    /**
     * <pre>
     ** 服务器返回商品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder getServerSnatchItemDetailOrBuilder() {
      return getServerSnatchItemDetail();
    }

    public static final int SERVERSNATCHBET_FIELD_NUMBER = 804;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchBet serverSnatchBet_;
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    public boolean hasServerSnatchBet() {
      return serverSnatchBet_ != null;
    }
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchBet getServerSnatchBet() {
      return serverSnatchBet_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.getDefaultInstance() : serverSnatchBet_;
    }
    /**
     * <pre>
     ** 服务器下注返回 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder getServerSnatchBetOrBuilder() {
      return getServerSnatchBet();
    }

    public static final int SERVERSNATCHAWARDLIST_FIELD_NUMBER = 805;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList serverSnatchAwardList_;
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    public boolean hasServerSnatchAwardList() {
      return serverSnatchAwardList_ != null;
    }
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList getServerSnatchAwardList() {
      return serverSnatchAwardList_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.getDefaultInstance() : serverSnatchAwardList_;
    }
    /**
     * <pre>
     ** 服务器返回近期开奖列表信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder getServerSnatchAwardListOrBuilder() {
      return getServerSnatchAwardList();
    }

    public static final int SERVEROWNSNATCHRECORD_FIELD_NUMBER = 806;
    private com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord serverOwnSnatchRecord_;
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    public boolean hasServerOwnSnatchRecord() {
      return serverOwnSnatchRecord_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord getServerOwnSnatchRecord() {
      return serverOwnSnatchRecord_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.getDefaultInstance() : serverOwnSnatchRecord_;
    }
    /**
     * <pre>
     ** 服务器返回玩家自己的夺宝记录 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder getServerOwnSnatchRecordOrBuilder() {
      return getServerOwnSnatchRecord();
    }

    public static final int SERVERSNATCHITEMHISTORY_FIELD_NUMBER = 807;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory serverSnatchItemHistory_;
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    public boolean hasServerSnatchItemHistory() {
      return serverSnatchItemHistory_ != null;
    }
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory getServerSnatchItemHistory() {
      return serverSnatchItemHistory_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.getDefaultInstance() : serverSnatchItemHistory_;
    }
    /**
     * <pre>
     ** 服务器返回奖品详情 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder getServerSnatchItemHistoryOrBuilder() {
      return getServerSnatchItemHistory();
    }

    public static final int SERVERSNATCHHISTORYDETAIL_FIELD_NUMBER = 808;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail serverSnatchHistoryDetail_;
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    public boolean hasServerSnatchHistoryDetail() {
      return serverSnatchHistoryDetail_ != null;
    }
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail getServerSnatchHistoryDetail() {
      return serverSnatchHistoryDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.getDefaultInstance() : serverSnatchHistoryDetail_;
    }
    /**
     * <pre>
     **查看某个历史商品的中奖详情
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder getServerSnatchHistoryDetailOrBuilder() {
      return getServerSnatchHistoryDetail();
    }

    public static final int SERVERSNATCHGETAWARD_FIELD_NUMBER = 809;
    private com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward serverSnatchGetAward_;
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    public boolean hasServerSnatchGetAward() {
      return serverSnatchGetAward_ != null;
    }
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward getServerSnatchGetAward() {
      return serverSnatchGetAward_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.getDefaultInstance() : serverSnatchGetAward_;
    }
    /**
     * <pre>
     ** 领取具体奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder getServerSnatchGetAwardOrBuilder() {
      return getServerSnatchGetAward();
    }

    public static final int SERVERENTERDG_FIELD_NUMBER = 900;
    private com.kys.util.netty.proto.SnatchProto.ServerEnterDG serverEnterDG_;
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    public boolean hasServerEnterDG() {
      return serverEnterDG_ != null;
    }
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerEnterDG getServerEnterDG() {
      return serverEnterDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerEnterDG.getDefaultInstance() : serverEnterDG_;
    }
    /**
     * <pre>
     ** 服务端返回进入钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder getServerEnterDGOrBuilder() {
      return getServerEnterDG();
    }

    public static final int SERVERDGLOTTERY_FIELD_NUMBER = 901;
    private com.kys.util.netty.proto.SnatchProto.ServerDGLottery serverDGLottery_;
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    public boolean hasServerDGLottery() {
      return serverDGLottery_ != null;
    }
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerDGLottery getServerDGLottery() {
      return serverDGLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerDGLottery.getDefaultInstance() : serverDGLottery_;
    }
    /**
     * <pre>
     ** 服务端返回抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder getServerDGLotteryOrBuilder() {
      return getServerDGLottery();
    }

    public static final int SERVERRESETLOTTERY_FIELD_NUMBER = 902;
    private com.kys.util.netty.proto.SnatchProto.ServerResetLottery serverResetLottery_;
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    public boolean hasServerResetLottery() {
      return serverResetLottery_ != null;
    }
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerResetLottery getServerResetLottery() {
      return serverResetLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerResetLottery.getDefaultInstance() : serverResetLottery_;
    }
    /**
     * <pre>
     ** 服务端返回重置抽奖次数 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder getServerResetLotteryOrBuilder() {
      return getServerResetLottery();
    }

    public static final int SERVEREXITDG_FIELD_NUMBER = 903;
    private com.kys.util.netty.proto.SnatchProto.ServerExitDG serverExitDG_;
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    public boolean hasServerExitDG() {
      return serverExitDG_ != null;
    }
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerExitDG getServerExitDG() {
      return serverExitDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerExitDG.getDefaultInstance() : serverExitDG_;
    }
    /**
     * <pre>
     ** 服务端返回退出钻石宝箱 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder getServerExitDGOrBuilder() {
      return getServerExitDG();
    }

    public static final int SERVEROPENDG_FIELD_NUMBER = 904;
    private com.kys.util.netty.proto.SnatchProto.ServerOpenDG serverOpenDG_;
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    public boolean hasServerOpenDG() {
      return serverOpenDG_ != null;
    }
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOpenDG getServerOpenDG() {
      return serverOpenDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOpenDG.getDefaultInstance() : serverOpenDG_;
    }
    /**
     * <pre>
     ** 服务器返回玩家开启抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder getServerOpenDGOrBuilder() {
      return getServerOpenDG();
    }

    public static final int SERVEROPENDD_FIELD_NUMBER = 905;
    private com.kys.util.netty.proto.SnatchProto.ServerOpenDD serverOpenDD_;
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    public boolean hasServerOpenDD() {
      return serverOpenDD_ != null;
    }
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOpenDD getServerOpenDD() {
      return serverOpenDD_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOpenDD.getDefaultInstance() : serverOpenDD_;
    }
    /**
     * <pre>
     ** 服务器返回开启钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder getServerOpenDDOrBuilder() {
      return getServerOpenDD();
    }

    public static final int SERVERDDLOTTERY_FIELD_NUMBER = 906;
    private com.kys.util.netty.proto.SnatchProto.ServerDDLottery serverDDLottery_;
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    public boolean hasServerDDLottery() {
      return serverDDLottery_ != null;
    }
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerDDLottery getServerDDLottery() {
      return serverDDLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerDDLottery.getDefaultInstance() : serverDDLottery_;
    }
    /**
     * <pre>
     ** 服务器返回钻石滚动抽奖结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder getServerDDLotteryOrBuilder() {
      return getServerDDLottery();
    }

    public static final int SERVEREXITDD_FIELD_NUMBER = 907;
    private com.kys.util.netty.proto.SnatchProto.ServerExitDD serverExitDD_;
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    public boolean hasServerExitDD() {
      return serverExitDD_ != null;
    }
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerExitDD getServerExitDD() {
      return serverExitDD_ == null ? com.kys.util.netty.proto.SnatchProto.ServerExitDD.getDefaultInstance() : serverExitDD_;
    }
    /**
     * <pre>
     ** 服务器返回退出钻石滚动抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder getServerExitDDOrBuilder() {
      return getServerExitDD();
    }

    public static final int SERVERQUERYPROP_FIELD_NUMBER = 1001;
    private com.kys.util.netty.proto.PropProto.ServerQueryProp serverQueryProp_;
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    public boolean hasServerQueryProp() {
      return serverQueryProp_ != null;
    }
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerQueryProp getServerQueryProp() {
      return serverQueryProp_ == null ? com.kys.util.netty.proto.PropProto.ServerQueryProp.getDefaultInstance() : serverQueryProp_;
    }
    /**
     * <pre>
     ** 服务端返回所有道具信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder getServerQueryPropOrBuilder() {
      return getServerQueryProp();
    }

    public static final int SERVERUSEPROP_FIELD_NUMBER = 1002;
    private com.kys.util.netty.proto.PropProto.ServerUseProp serverUseProp_;
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    public boolean hasServerUseProp() {
      return serverUseProp_ != null;
    }
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerUseProp getServerUseProp() {
      return serverUseProp_ == null ? com.kys.util.netty.proto.PropProto.ServerUseProp.getDefaultInstance() : serverUseProp_;
    }
    /**
     * <pre>
     ** 服务器返回使用道具结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder getServerUsePropOrBuilder() {
      return getServerUseProp();
    }

    public static final int SERVERQUERYPROPCOUNT_FIELD_NUMBER = 1003;
    private com.kys.util.netty.proto.PropProto.ServerQueryPropCount serverQueryPropCount_;
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    public boolean hasServerQueryPropCount() {
      return serverQueryPropCount_ != null;
    }
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerQueryPropCount getServerQueryPropCount() {
      return serverQueryPropCount_ == null ? com.kys.util.netty.proto.PropProto.ServerQueryPropCount.getDefaultInstance() : serverQueryPropCount_;
    }
    /**
     * <pre>
     ** 服务器返回查询的道具id数组 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
     */
    public com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder getServerQueryPropCountOrBuilder() {
      return getServerQueryPropCount();
    }

    public static final int SERVERMONTHSIGNINFO_FIELD_NUMBER = 1101;
    private com.kys.util.netty.proto.SignProto.ServerMonthSignInfo serverMonthSignInfo_;
    /**
     * <pre>
     ** 服务端返回月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
     */
    public boolean hasServerMonthSignInfo() {
      return serverMonthSignInfo_ != null;
    }
    /**
     * <pre>
     ** 服务端返回月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerMonthSignInfo getServerMonthSignInfo() {
      return serverMonthSignInfo_ == null ? com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.getDefaultInstance() : serverMonthSignInfo_;
    }
    /**
     * <pre>
     ** 服务端返回月签信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerMonthSignInfoOrBuilder getServerMonthSignInfoOrBuilder() {
      return getServerMonthSignInfo();
    }

    public static final int SERVERMONTHSIGN_FIELD_NUMBER = 1102;
    private com.kys.util.netty.proto.SignProto.ServerMonthSign serverMonthSign_;
    /**
     * <pre>
     ** 服务器返回(新)月签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
     */
    public boolean hasServerMonthSign() {
      return serverMonthSign_ != null;
    }
    /**
     * <pre>
     ** 服务器返回(新)月签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerMonthSign getServerMonthSign() {
      return serverMonthSign_ == null ? com.kys.util.netty.proto.SignProto.ServerMonthSign.getDefaultInstance() : serverMonthSign_;
    }
    /**
     * <pre>
     ** 服务器返回(新)月签到 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerMonthSignOrBuilder getServerMonthSignOrBuilder() {
      return getServerMonthSign();
    }

    public static final int SERVERGETCRITREWARD_FIELD_NUMBER = 1103;
    private com.kys.util.netty.proto.SignProto.ServerGetCritReward serverGetCritReward_;
    /**
     * <pre>
     ** 服务器返回获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
     */
    public boolean hasServerGetCritReward() {
      return serverGetCritReward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetCritReward getServerGetCritReward() {
      return serverGetCritReward_ == null ? com.kys.util.netty.proto.SignProto.ServerGetCritReward.getDefaultInstance() : serverGetCritReward_;
    }
    /**
     * <pre>
     ** 服务器返回获取暴击奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetCritRewardOrBuilder getServerGetCritRewardOrBuilder() {
      return getServerGetCritReward();
    }

    public static final int SERVERLTLOTTERY_FIELD_NUMBER = 1104;
    private com.kys.util.netty.proto.SignProto.ServerLTLottery serverLTLottery_;
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    public boolean hasServerLTLottery() {
      return serverLTLottery_ != null;
    }
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerLTLottery getServerLTLottery() {
      return serverLTLottery_ == null ? com.kys.util.netty.proto.SignProto.ServerLTLottery.getDefaultInstance() : serverLTLottery_;
    }
    /**
     * <pre>
     ** 服务器返回幸运时钟抽奖 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder getServerLTLotteryOrBuilder() {
      return getServerLTLottery();
    }

    public static final int SERVERGETTSREWARD_FIELD_NUMBER = 1105;
    private com.kys.util.netty.proto.SignProto.ServerGetTSReward serverGetTSReward_;
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    public boolean hasServerGetTSReward() {
      return serverGetTSReward_ != null;
    }
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetTSReward getServerGetTSReward() {
      return serverGetTSReward_ == null ? com.kys.util.netty.proto.SignProto.ServerGetTSReward.getDefaultInstance() : serverGetTSReward_;
    }
    /**
     * <pre>
     ** 服务器返回获取累计签到奖励 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder getServerGetTSRewardOrBuilder() {
      return getServerGetTSReward();
    }

    public static final int SERVERGETLUCKINFO_FIELD_NUMBER = 1106;
    private com.kys.util.netty.proto.SignProto.ServerGetLuckInfo serverGetLuckInfo_;
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    public boolean hasServerGetLuckInfo() {
      return serverGetLuckInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetLuckInfo getServerGetLuckInfo() {
      return serverGetLuckInfo_ == null ? com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.getDefaultInstance() : serverGetLuckInfo_;
    }
    /**
     * <pre>
     ** 服务器获取幸运抽奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
     */
    public com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder getServerGetLuckInfoOrBuilder() {
      return getServerGetLuckInfo();
    }

    public static final int SERVERGETVIPINFO_FIELD_NUMBER = 1201;
    private com.kys.util.netty.proto.VipProto.ServerGetVipInfo serverGetVipInfo_;
    /**
     * <pre>
     ** 服务器返回VIP界面展示所需的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
     */
    public boolean hasServerGetVipInfo() {
      return serverGetVipInfo_ != null;
    }
    /**
     * <pre>
     ** 服务器返回VIP界面展示所需的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
     */
    public com.kys.util.netty.proto.VipProto.ServerGetVipInfo getServerGetVipInfo() {
      return serverGetVipInfo_ == null ? com.kys.util.netty.proto.VipProto.ServerGetVipInfo.getDefaultInstance() : serverGetVipInfo_;
    }
    /**
     * <pre>
     ** 服务器返回VIP界面展示所需的属性 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
     */
    public com.kys.util.netty.proto.VipProto.ServerGetVipInfoOrBuilder getServerGetVipInfoOrBuilder() {
      return getServerGetVipInfo();
    }

    public static final int SERVERGETVIPWEEK_FIELD_NUMBER = 1202;
    private com.kys.util.netty.proto.VipProto.ServerGetVipWeek serverGetVipWeek_;
    /**
     * <pre>
     ** 返回领取VIP每周礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
     */
    public boolean hasServerGetVipWeek() {
      return serverGetVipWeek_ != null;
    }
    /**
     * <pre>
     ** 返回领取VIP每周礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
     */
    public com.kys.util.netty.proto.VipProto.ServerGetVipWeek getServerGetVipWeek() {
      return serverGetVipWeek_ == null ? com.kys.util.netty.proto.VipProto.ServerGetVipWeek.getDefaultInstance() : serverGetVipWeek_;
    }
    /**
     * <pre>
     ** 返回领取VIP每周礼包 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
     */
    public com.kys.util.netty.proto.VipProto.ServerGetVipWeekOrBuilder getServerGetVipWeekOrBuilder() {
      return getServerGetVipWeek();
    }

    public static final int B_GAMESTART_FIELD_NUMBER = 402;
    private com.kys.util.netty.proto.GameProto.B_GameStart bGameStart_;
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    public boolean hasBGameStart() {
      return bGameStart_ != null;
    }
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_GameStart getBGameStart() {
      return bGameStart_ == null ? com.kys.util.netty.proto.GameProto.B_GameStart.getDefaultInstance() : bGameStart_;
    }
    /**
     * <pre>
     ** 服务器发牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder getBGameStartOrBuilder() {
      return getBGameStart();
    }

    public static final int B_DOCATCH_FIELD_NUMBER = 403;
    private com.kys.util.netty.proto.GameProto.B_DoCatch bDoCatch_;
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    public boolean hasBDoCatch() {
      return bDoCatch_ != null;
    }
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_DoCatch getBDoCatch() {
      return bDoCatch_ == null ? com.kys.util.netty.proto.GameProto.B_DoCatch.getDefaultInstance() : bDoCatch_;
    }
    /**
     * <pre>
     ** 广播通知玩家叫地主 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder getBDoCatchOrBuilder() {
      return getBDoCatch();
    }

    public static final int B_CATCHRESULT_FIELD_NUMBER = 404;
    private com.kys.util.netty.proto.GameProto.B_CatchResult bCatchResult_;
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    public boolean hasBCatchResult() {
      return bCatchResult_ != null;
    }
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_CatchResult getBCatchResult() {
      return bCatchResult_ == null ? com.kys.util.netty.proto.GameProto.B_CatchResult.getDefaultInstance() : bCatchResult_;
    }
    /**
     * <pre>
     ** Server广播上个玩家叫地主结果 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder getBCatchResultOrBuilder() {
      return getBCatchResult();
    }

    public static final int B_PLAYCARDS_FIELD_NUMBER = 405;
    private com.kys.util.netty.proto.GameProto.B_PlayCards bPlayCards_;
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    public boolean hasBPlayCards() {
      return bPlayCards_ != null;
    }
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_PlayCards getBPlayCards() {
      return bPlayCards_ == null ? com.kys.util.netty.proto.GameProto.B_PlayCards.getDefaultInstance() : bPlayCards_;
    }
    /**
     * <pre>
     ** Server上个玩家出牌信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder getBPlayCardsOrBuilder() {
      return getBPlayCards();
    }

    public static final int B_SENDDIZHUCARD_FIELD_NUMBER = 407;
    private com.kys.util.netty.proto.GameProto.B_SendDiZhuCard bSendDiZhuCard_;
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    public boolean hasBSendDiZhuCard() {
      return bSendDiZhuCard_ != null;
    }
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_SendDiZhuCard getBSendDiZhuCard() {
      return bSendDiZhuCard_ == null ? com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.getDefaultInstance() : bSendDiZhuCard_;
    }
    /**
     * <pre>
     ** Server广播发地主牌 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder getBSendDiZhuCardOrBuilder() {
      return getBSendDiZhuCard();
    }

    public static final int B_NEXTPLAYER_FIELD_NUMBER = 408;
    private com.kys.util.netty.proto.GameProto.B_NextPlayer bNextPlayer_;
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    public boolean hasBNextPlayer() {
      return bNextPlayer_ != null;
    }
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_NextPlayer getBNextPlayer() {
      return bNextPlayer_ == null ? com.kys.util.netty.proto.GameProto.B_NextPlayer.getDefaultInstance() : bNextPlayer_;
    }
    /**
     * <pre>
     ** Server广播出牌玩家 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder getBNextPlayerOrBuilder() {
      return getBNextPlayer();
    }

    public static final int B_GAMESETTLE_FIELD_NUMBER = 409;
    private com.kys.util.netty.proto.GameProto.B_GameSettle bGameSettle_;
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    public boolean hasBGameSettle() {
      return bGameSettle_ != null;
    }
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_GameSettle getBGameSettle() {
      return bGameSettle_ == null ? com.kys.util.netty.proto.GameProto.B_GameSettle.getDefaultInstance() : bGameSettle_;
    }
    /**
     * <pre>
     ** 广播牌局结算信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder getBGameSettleOrBuilder() {
      return getBGameSettle();
    }

    public static final int B_REWARDMESSAGE_FIELD_NUMBER = 410;
    private com.kys.util.netty.proto.HallProto.B_RewardMessage bRewardMessage_;
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    public boolean hasBRewardMessage() {
      return bRewardMessage_ != null;
    }
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_RewardMessage getBRewardMessage() {
      return bRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.B_RewardMessage.getDefaultInstance() : bRewardMessage_;
    }
    /**
     * <pre>
     ** 推送奖励公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder getBRewardMessageOrBuilder() {
      return getBRewardMessage();
    }

    public static final int B_AUTOPLAY_FIELD_NUMBER = 411;
    private com.kys.util.netty.proto.GameProto.B_AutoPlay bAutoPlay_;
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    public boolean hasBAutoPlay() {
      return bAutoPlay_ != null;
    }
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_AutoPlay getBAutoPlay() {
      return bAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.B_AutoPlay.getDefaultInstance() : bAutoPlay_;
    }
    /**
     * <pre>
     ** 广播玩家托管消息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder getBAutoPlayOrBuilder() {
      return getBAutoPlay();
    }

    public static final int B_ROOMIDURL_FIELD_NUMBER = 412;
    private com.kys.util.netty.proto.GameProto.B_RoomIdUrl bRoomIdUrl_;
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    public boolean hasBRoomIdUrl() {
      return bRoomIdUrl_ != null;
    }
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_RoomIdUrl getBRoomIdUrl() {
      return bRoomIdUrl_ == null ? com.kys.util.netty.proto.GameProto.B_RoomIdUrl.getDefaultInstance() : bRoomIdUrl_;
    }
    /**
     * <pre>
     ** 推送玩家需要加入的房间url和房间号 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
     */
    public com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder getBRoomIdUrlOrBuilder() {
      return getBRoomIdUrl();
    }

    public static final int B_AWARDDIALOG_FIELD_NUMBER = 413;
    private com.kys.util.netty.proto.HallProto.B_AwardDialog bAwardDialog_;
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    public boolean hasBAwardDialog() {
      return bAwardDialog_ != null;
    }
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_AwardDialog getBAwardDialog() {
      return bAwardDialog_ == null ? com.kys.util.netty.proto.HallProto.B_AwardDialog.getDefaultInstance() : bAwardDialog_;
    }
    /**
     * <pre>
     ** 奖励弹窗 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder getBAwardDialogOrBuilder() {
      return getBAwardDialog();
    }

    public static final int B_BUYSUCCESS_FIELD_NUMBER = 414;
    private com.kys.util.netty.proto.StoreProto.B_BuySuccess bBuySuccess_;
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    public boolean hasBBuySuccess() {
      return bBuySuccess_ != null;
    }
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    public com.kys.util.netty.proto.StoreProto.B_BuySuccess getBBuySuccess() {
      return bBuySuccess_ == null ? com.kys.util.netty.proto.StoreProto.B_BuySuccess.getDefaultInstance() : bBuySuccess_;
    }
    /**
     * <pre>
     ** 微信回调购买成功 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
     */
    public com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder getBBuySuccessOrBuilder() {
      return getBBuySuccess();
    }

    public static final int B_REDDOTPUSH_FIELD_NUMBER = 415;
    private com.kys.util.netty.proto.HallProto.B_RedDotPush bRedDotPush_;
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    public boolean hasBRedDotPush() {
      return bRedDotPush_ != null;
    }
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_RedDotPush getBRedDotPush() {
      return bRedDotPush_ == null ? com.kys.util.netty.proto.HallProto.B_RedDotPush.getDefaultInstance() : bRedDotPush_;
    }
    /**
     * <pre>
     ** 红点推送 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder getBRedDotPushOrBuilder() {
      return getBRedDotPush();
    }

    public static final int B_FORCEANNOUNCE_FIELD_NUMBER = 416;
    private com.kys.util.netty.proto.HallProto.B_ForceAnnounce bForceAnnounce_;
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    public boolean hasBForceAnnounce() {
      return bForceAnnounce_ != null;
    }
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_ForceAnnounce getBForceAnnounce() {
      return bForceAnnounce_ == null ? com.kys.util.netty.proto.HallProto.B_ForceAnnounce.getDefaultInstance() : bForceAnnounce_;
    }
    /**
     * <pre>
     ** 推送强制公告 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
     */
    public com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder getBForceAnnounceOrBuilder() {
      return getBForceAnnounce();
    }

    public static final int B_DGAMEMESSAGE_FIELD_NUMBER = 417;
    private com.kys.util.netty.proto.SnatchProto.B_DGameMessage bDGameMessage_;
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    public boolean hasBDGameMessage() {
      return bDGameMessage_ != null;
    }
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DGameMessage getBDGameMessage() {
      return bDGameMessage_ == null ? com.kys.util.netty.proto.SnatchProto.B_DGameMessage.getDefaultInstance() : bDGameMessage_;
    }
    /**
     * <pre>
     ** 钻石宝箱跑马灯 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder getBDGameMessageOrBuilder() {
      return getBDGameMessage();
    }

    public static final int B_DGOVER_FIELD_NUMBER = 418;
    private com.kys.util.netty.proto.SnatchProto.B_DGOver bDGOver_;
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    public boolean hasBDGOver() {
      return bDGOver_ != null;
    }
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DGOver getBDGOver() {
      return bDGOver_ == null ? com.kys.util.netty.proto.SnatchProto.B_DGOver.getDefaultInstance() : bDGOver_;
    }
    /**
     * <pre>
     ** 钻石宝箱活动已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder getBDGOverOrBuilder() {
      return getBDGOver();
    }

    public static final int B_DDOVER_FIELD_NUMBER = 419;
    private com.kys.util.netty.proto.SnatchProto.B_DDOver bDDOver_;
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    public boolean hasBDDOver() {
      return bDDOver_ != null;
    }
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DDOver getBDDOver() {
      return bDDOver_ == null ? com.kys.util.netty.proto.SnatchProto.B_DDOver.getDefaultInstance() : bDDOver_;
    }
    /**
     * <pre>
     ** 钻石滚动抽奖已经结束 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder getBDDOverOrBuilder() {
      return getBDDOver();
    }

    public static final int B_DDINFO_FIELD_NUMBER = 420;
    private com.kys.util.netty.proto.SnatchProto.B_DDInfo bDDInfo_;
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    public boolean hasBDDInfo() {
      return bDDInfo_ != null;
    }
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DDInfo getBDDInfo() {
      return bDDInfo_ == null ? com.kys.util.netty.proto.SnatchProto.B_DDInfo.getDefaultInstance() : bDDInfo_;
    }
    /**
     * <pre>
     ** 广播中奖信息 
     * </pre>
     *
     * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
     */
    public com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder getBDDInfoOrBuilder() {
      return getBDDInfo();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (methodId_ != 0) {
        output.writeInt32(1, methodId_);
      }
      if (result_ != com.kys.util.netty.proto.ProtoMsg.ResultCode.success.getNumber()) {
        output.writeEnum(2, result_);
      }
      if (serverLogin_ != null) {
        output.writeMessage(3, getServerLogin());
      }
      if (serverPlayerInfo_ != null) {
        output.writeMessage(4, getServerPlayerInfo());
      }
      if (serverSendHallHeartBeat_ != null) {
        output.writeMessage(5, getServerSendHallHeartBeat());
      }
      if (serverSendGameHeartBeat_ != null) {
        output.writeMessage(6, getServerSendGameHeartBeat());
      }
      if (serverGetUserInfo_ != null) {
        output.writeMessage(7, getServerGetUserInfo());
      }
      if (!getErrStrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 99, errStr_);
      }
      if (serverQuickJoin_ != null) {
        output.writeMessage(100, getServerQuickJoin());
      }
      if (serverEnterRoom_ != null) {
        output.writeMessage(101, getServerEnterRoom());
      }
      if (serverRecoverGame_ != null) {
        output.writeMessage(102, getServerRecoverGame());
      }
      if (serverDoCatch_ != null) {
        output.writeMessage(103, getServerDoCatch());
      }
      if (serverPlayCards_ != null) {
        output.writeMessage(104, getServerPlayCards());
      }
      if (serverAutoPlay_ != null) {
        output.writeMessage(105, getServerAutoPlay());
      }
      if (serverLeaveRoom_ != null) {
        output.writeMessage(106, getServerLeaveRoom());
      }
      if (serverCancleJoin_ != null) {
        output.writeMessage(107, getServerCancleJoin());
      }
      if (serverQueryIndex_ != null) {
        output.writeMessage(108, getServerQueryIndex());
      }
      if (serverRetryReturnGame_ != null) {
        output.writeMessage(109, getServerRetryReturnGame());
      }
      if (serverGetRankList_ != null) {
        output.writeMessage(200, getServerGetRankList());
      }
      if (serverGetSignupRewardList_ != null) {
        output.writeMessage(201, getServerGetSignupRewardList());
      }
      if (serverGetHallInfo_ != null) {
        output.writeMessage(202, getServerGetHallInfo());
      }
      if (serverSignup_ != null) {
        output.writeMessage(203, getServerSignup());
      }
      if (serverRewardMessage_ != null) {
        output.writeMessage(204, getServerRewardMessage());
      }
      if (serverDrawWinCup_ != null) {
        output.writeMessage(205, getServerDrawWinCup());
      }
      if (serverGetRoomConfig_ != null) {
        output.writeMessage(206, getServerGetRoomConfig());
      }
      if (serverGetRoomCardConfig_ != null) {
        output.writeMessage(207, getServerGetRoomCardConfig());
      }
      if (serverCreateRoom_ != null) {
        output.writeMessage(208, getServerCreateRoom());
      }
      if (serverGetMonthCardDiamond_ != null) {
        output.writeMessage(209, getServerGetMonthCardDiamond());
      }
      if (serverGetLotteryCount_ != null) {
        output.writeMessage(210, getServerGetLotteryCount());
      }
      if (serverGetRoomInfo_ != null) {
        output.writeMessage(211, getServerGetRoomInfo());
      }
      if (serverSendTelCode_ != null) {
        output.writeMessage(212, getServerSendTelCode());
      }
      if (serverVerifyTelCode_ != null) {
        output.writeMessage(213, getServerVerifyTelCode());
      }
      if (serverQueryShareList_ != null) {
        output.writeMessage(214, getServerQueryShareList());
      }
      if (serverQueryShareDetail_ != null) {
        output.writeMessage(215, getServerQueryShareDetail());
      }
      if (serverGetTaskAward_ != null) {
        output.writeMessage(216, getServerGetTaskAward());
      }
      if (serverSharePackage_ != null) {
        output.writeMessage(217, getServerSharePackage());
      }
      if (serverGetAwardList_ != null) {
        output.writeMessage(218, getServerGetAwardList());
      }
      if (serverCheckConnect_ != null) {
        output.writeMessage(219, getServerCheckConnect());
      }
      if (serverGetPFList_ != null) {
        output.writeMessage(220, getServerGetPFList());
      }
      if (serverChoosePF_ != null) {
        output.writeMessage(221, getServerChoosePF());
      }
      if (serverGetHistoryRank_ != null) {
        output.writeMessage(222, getServerGetHistoryRank());
      }
      if (serverH5Reward_ != null) {
        output.writeMessage(223, getServerH5Reward());
      }
      if (serverNewDrawWinCup_ != null) {
        output.writeMessage(224, getServerNewDrawWinCup());
      }
      if (serverGetNewHallInfo_ != null) {
        output.writeMessage(225, getServerGetNewHallInfo());
      }
      if (serverGetSkinInfo_ != null) {
        output.writeMessage(226, getServerGetSkinInfo());
      }
      if (serverEquipSkin_ != null) {
        output.writeMessage(227, getServerEquipSkin());
      }
      if (serverGetStoreData_ != null) {
        output.writeMessage(300, getServerGetStoreData());
      }
      if (serverConvertGoods_ != null) {
        output.writeMessage(301, getServerConvertGoods());
      }
      if (serverWXPayResult_ != null) {
        output.writeMessage(303, getServerWXPayResult());
      }
      if (serverBuyOrderGoods_ != null) {
        output.writeMessage(304, getServerBuyOrderGoods());
      }
      if (serverGetFirstCharge_ != null) {
        output.writeMessage(305, getServerGetFirstCharge());
      }
      if (serverGetDailyGift_ != null) {
        output.writeMessage(306, getServerGetDailyGift());
      }
      if (serverGetMonthCard_ != null) {
        output.writeMessage(307, getServerGetMonthCard());
      }
      if (serverGetResurgenceGift_ != null) {
        output.writeMessage(308, getServerGetResurgenceGift());
      }
      if (bGameStart_ != null) {
        output.writeMessage(402, getBGameStart());
      }
      if (bDoCatch_ != null) {
        output.writeMessage(403, getBDoCatch());
      }
      if (bCatchResult_ != null) {
        output.writeMessage(404, getBCatchResult());
      }
      if (bPlayCards_ != null) {
        output.writeMessage(405, getBPlayCards());
      }
      if (bSendDiZhuCard_ != null) {
        output.writeMessage(407, getBSendDiZhuCard());
      }
      if (bNextPlayer_ != null) {
        output.writeMessage(408, getBNextPlayer());
      }
      if (bGameSettle_ != null) {
        output.writeMessage(409, getBGameSettle());
      }
      if (bRewardMessage_ != null) {
        output.writeMessage(410, getBRewardMessage());
      }
      if (bAutoPlay_ != null) {
        output.writeMessage(411, getBAutoPlay());
      }
      if (bRoomIdUrl_ != null) {
        output.writeMessage(412, getBRoomIdUrl());
      }
      if (bAwardDialog_ != null) {
        output.writeMessage(413, getBAwardDialog());
      }
      if (bBuySuccess_ != null) {
        output.writeMessage(414, getBBuySuccess());
      }
      if (bRedDotPush_ != null) {
        output.writeMessage(415, getBRedDotPush());
      }
      if (bForceAnnounce_ != null) {
        output.writeMessage(416, getBForceAnnounce());
      }
      if (bDGameMessage_ != null) {
        output.writeMessage(417, getBDGameMessage());
      }
      if (bDGOver_ != null) {
        output.writeMessage(418, getBDGOver());
      }
      if (bDDOver_ != null) {
        output.writeMessage(419, getBDDOver());
      }
      if (bDDInfo_ != null) {
        output.writeMessage(420, getBDDInfo());
      }
      if (serverGetAnnounce_ != null) {
        output.writeMessage(500, getServerGetAnnounce());
      }
      if (serverGetMail_ != null) {
        output.writeMessage(600, getServerGetMail());
      }
      if (serverGetMailReward_ != null) {
        output.writeMessage(601, getServerGetMailReward());
      }
      if (serverDelMail_ != null) {
        output.writeMessage(602, getServerDelMail());
      }
      if (serverReadMail_ != null) {
        output.writeMessage(603, getServerReadMail());
      }
      if (serverDel2R_ != null) {
        output.writeMessage(604, getServerDel2R());
      }
      if (serverQueryDailyTask_ != null) {
        output.writeMessage(700, getServerQueryDailyTask());
      }
      if (serverGetDailyTaskAward_ != null) {
        output.writeMessage(701, getServerGetDailyTaskAward());
      }
      if (serverGetNoviceReward_ != null) {
        output.writeMessage(702, getServerGetNoviceReward());
      }
      if (serverQueryNoviceTask_ != null) {
        output.writeMessage(703, getServerQueryNoviceTask());
      }
      if (serverGetDTAward_ != null) {
        output.writeMessage(704, getServerGetDTAward());
      }
      if (serverGetReceiveAddr_ != null) {
        output.writeMessage(800, getServerGetReceiveAddr());
      }
      if (serverAlterReceiveAddr_ != null) {
        output.writeMessage(801, getServerAlterReceiveAddr());
      }
      if (serverSnatchList_ != null) {
        output.writeMessage(802, getServerSnatchList());
      }
      if (serverSnatchItemDetail_ != null) {
        output.writeMessage(803, getServerSnatchItemDetail());
      }
      if (serverSnatchBet_ != null) {
        output.writeMessage(804, getServerSnatchBet());
      }
      if (serverSnatchAwardList_ != null) {
        output.writeMessage(805, getServerSnatchAwardList());
      }
      if (serverOwnSnatchRecord_ != null) {
        output.writeMessage(806, getServerOwnSnatchRecord());
      }
      if (serverSnatchItemHistory_ != null) {
        output.writeMessage(807, getServerSnatchItemHistory());
      }
      if (serverSnatchHistoryDetail_ != null) {
        output.writeMessage(808, getServerSnatchHistoryDetail());
      }
      if (serverSnatchGetAward_ != null) {
        output.writeMessage(809, getServerSnatchGetAward());
      }
      if (serverEnterDG_ != null) {
        output.writeMessage(900, getServerEnterDG());
      }
      if (serverDGLottery_ != null) {
        output.writeMessage(901, getServerDGLottery());
      }
      if (serverResetLottery_ != null) {
        output.writeMessage(902, getServerResetLottery());
      }
      if (serverExitDG_ != null) {
        output.writeMessage(903, getServerExitDG());
      }
      if (serverOpenDG_ != null) {
        output.writeMessage(904, getServerOpenDG());
      }
      if (serverOpenDD_ != null) {
        output.writeMessage(905, getServerOpenDD());
      }
      if (serverDDLottery_ != null) {
        output.writeMessage(906, getServerDDLottery());
      }
      if (serverExitDD_ != null) {
        output.writeMessage(907, getServerExitDD());
      }
      if (serverQueryProp_ != null) {
        output.writeMessage(1001, getServerQueryProp());
      }
      if (serverUseProp_ != null) {
        output.writeMessage(1002, getServerUseProp());
      }
      if (serverQueryPropCount_ != null) {
        output.writeMessage(1003, getServerQueryPropCount());
      }
      if (serverMonthSignInfo_ != null) {
        output.writeMessage(1101, getServerMonthSignInfo());
      }
      if (serverMonthSign_ != null) {
        output.writeMessage(1102, getServerMonthSign());
      }
      if (serverGetCritReward_ != null) {
        output.writeMessage(1103, getServerGetCritReward());
      }
      if (serverLTLottery_ != null) {
        output.writeMessage(1104, getServerLTLottery());
      }
      if (serverGetTSReward_ != null) {
        output.writeMessage(1105, getServerGetTSReward());
      }
      if (serverGetLuckInfo_ != null) {
        output.writeMessage(1106, getServerGetLuckInfo());
      }
      if (serverGetVipInfo_ != null) {
        output.writeMessage(1201, getServerGetVipInfo());
      }
      if (serverGetVipWeek_ != null) {
        output.writeMessage(1202, getServerGetVipWeek());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (methodId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, methodId_);
      }
      if (result_ != com.kys.util.netty.proto.ProtoMsg.ResultCode.success.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, result_);
      }
      if (serverLogin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getServerLogin());
      }
      if (serverPlayerInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getServerPlayerInfo());
      }
      if (serverSendHallHeartBeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getServerSendHallHeartBeat());
      }
      if (serverSendGameHeartBeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getServerSendGameHeartBeat());
      }
      if (serverGetUserInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getServerGetUserInfo());
      }
      if (!getErrStrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(99, errStr_);
      }
      if (serverQuickJoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getServerQuickJoin());
      }
      if (serverEnterRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, getServerEnterRoom());
      }
      if (serverRecoverGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, getServerRecoverGame());
      }
      if (serverDoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, getServerDoCatch());
      }
      if (serverPlayCards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, getServerPlayCards());
      }
      if (serverAutoPlay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, getServerAutoPlay());
      }
      if (serverLeaveRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, getServerLeaveRoom());
      }
      if (serverCancleJoin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(107, getServerCancleJoin());
      }
      if (serverQueryIndex_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(108, getServerQueryIndex());
      }
      if (serverRetryReturnGame_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(109, getServerRetryReturnGame());
      }
      if (serverGetRankList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(200, getServerGetRankList());
      }
      if (serverGetSignupRewardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(201, getServerGetSignupRewardList());
      }
      if (serverGetHallInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(202, getServerGetHallInfo());
      }
      if (serverSignup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(203, getServerSignup());
      }
      if (serverRewardMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(204, getServerRewardMessage());
      }
      if (serverDrawWinCup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(205, getServerDrawWinCup());
      }
      if (serverGetRoomConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(206, getServerGetRoomConfig());
      }
      if (serverGetRoomCardConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(207, getServerGetRoomCardConfig());
      }
      if (serverCreateRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(208, getServerCreateRoom());
      }
      if (serverGetMonthCardDiamond_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(209, getServerGetMonthCardDiamond());
      }
      if (serverGetLotteryCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(210, getServerGetLotteryCount());
      }
      if (serverGetRoomInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(211, getServerGetRoomInfo());
      }
      if (serverSendTelCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(212, getServerSendTelCode());
      }
      if (serverVerifyTelCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(213, getServerVerifyTelCode());
      }
      if (serverQueryShareList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(214, getServerQueryShareList());
      }
      if (serverQueryShareDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(215, getServerQueryShareDetail());
      }
      if (serverGetTaskAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(216, getServerGetTaskAward());
      }
      if (serverSharePackage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(217, getServerSharePackage());
      }
      if (serverGetAwardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(218, getServerGetAwardList());
      }
      if (serverCheckConnect_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(219, getServerCheckConnect());
      }
      if (serverGetPFList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(220, getServerGetPFList());
      }
      if (serverChoosePF_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(221, getServerChoosePF());
      }
      if (serverGetHistoryRank_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(222, getServerGetHistoryRank());
      }
      if (serverH5Reward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(223, getServerH5Reward());
      }
      if (serverNewDrawWinCup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(224, getServerNewDrawWinCup());
      }
      if (serverGetNewHallInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(225, getServerGetNewHallInfo());
      }
      if (serverGetSkinInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(226, getServerGetSkinInfo());
      }
      if (serverEquipSkin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(227, getServerEquipSkin());
      }
      if (serverGetStoreData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(300, getServerGetStoreData());
      }
      if (serverConvertGoods_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(301, getServerConvertGoods());
      }
      if (serverWXPayResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(303, getServerWXPayResult());
      }
      if (serverBuyOrderGoods_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(304, getServerBuyOrderGoods());
      }
      if (serverGetFirstCharge_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(305, getServerGetFirstCharge());
      }
      if (serverGetDailyGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(306, getServerGetDailyGift());
      }
      if (serverGetMonthCard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(307, getServerGetMonthCard());
      }
      if (serverGetResurgenceGift_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(308, getServerGetResurgenceGift());
      }
      if (bGameStart_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(402, getBGameStart());
      }
      if (bDoCatch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(403, getBDoCatch());
      }
      if (bCatchResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(404, getBCatchResult());
      }
      if (bPlayCards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(405, getBPlayCards());
      }
      if (bSendDiZhuCard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(407, getBSendDiZhuCard());
      }
      if (bNextPlayer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(408, getBNextPlayer());
      }
      if (bGameSettle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(409, getBGameSettle());
      }
      if (bRewardMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(410, getBRewardMessage());
      }
      if (bAutoPlay_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(411, getBAutoPlay());
      }
      if (bRoomIdUrl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(412, getBRoomIdUrl());
      }
      if (bAwardDialog_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(413, getBAwardDialog());
      }
      if (bBuySuccess_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(414, getBBuySuccess());
      }
      if (bRedDotPush_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(415, getBRedDotPush());
      }
      if (bForceAnnounce_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(416, getBForceAnnounce());
      }
      if (bDGameMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(417, getBDGameMessage());
      }
      if (bDGOver_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(418, getBDGOver());
      }
      if (bDDOver_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(419, getBDDOver());
      }
      if (bDDInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(420, getBDDInfo());
      }
      if (serverGetAnnounce_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(500, getServerGetAnnounce());
      }
      if (serverGetMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(600, getServerGetMail());
      }
      if (serverGetMailReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(601, getServerGetMailReward());
      }
      if (serverDelMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(602, getServerDelMail());
      }
      if (serverReadMail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(603, getServerReadMail());
      }
      if (serverDel2R_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(604, getServerDel2R());
      }
      if (serverQueryDailyTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(700, getServerQueryDailyTask());
      }
      if (serverGetDailyTaskAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(701, getServerGetDailyTaskAward());
      }
      if (serverGetNoviceReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(702, getServerGetNoviceReward());
      }
      if (serverQueryNoviceTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(703, getServerQueryNoviceTask());
      }
      if (serverGetDTAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(704, getServerGetDTAward());
      }
      if (serverGetReceiveAddr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(800, getServerGetReceiveAddr());
      }
      if (serverAlterReceiveAddr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(801, getServerAlterReceiveAddr());
      }
      if (serverSnatchList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(802, getServerSnatchList());
      }
      if (serverSnatchItemDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(803, getServerSnatchItemDetail());
      }
      if (serverSnatchBet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(804, getServerSnatchBet());
      }
      if (serverSnatchAwardList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(805, getServerSnatchAwardList());
      }
      if (serverOwnSnatchRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(806, getServerOwnSnatchRecord());
      }
      if (serverSnatchItemHistory_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(807, getServerSnatchItemHistory());
      }
      if (serverSnatchHistoryDetail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(808, getServerSnatchHistoryDetail());
      }
      if (serverSnatchGetAward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(809, getServerSnatchGetAward());
      }
      if (serverEnterDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(900, getServerEnterDG());
      }
      if (serverDGLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(901, getServerDGLottery());
      }
      if (serverResetLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(902, getServerResetLottery());
      }
      if (serverExitDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(903, getServerExitDG());
      }
      if (serverOpenDG_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(904, getServerOpenDG());
      }
      if (serverOpenDD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(905, getServerOpenDD());
      }
      if (serverDDLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(906, getServerDDLottery());
      }
      if (serverExitDD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(907, getServerExitDD());
      }
      if (serverQueryProp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1001, getServerQueryProp());
      }
      if (serverUseProp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1002, getServerUseProp());
      }
      if (serverQueryPropCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1003, getServerQueryPropCount());
      }
      if (serverMonthSignInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1101, getServerMonthSignInfo());
      }
      if (serverMonthSign_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1102, getServerMonthSign());
      }
      if (serverGetCritReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1103, getServerGetCritReward());
      }
      if (serverLTLottery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1104, getServerLTLottery());
      }
      if (serverGetTSReward_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1105, getServerGetTSReward());
      }
      if (serverGetLuckInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1106, getServerGetLuckInfo());
      }
      if (serverGetVipInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1201, getServerGetVipInfo());
      }
      if (serverGetVipWeek_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1202, getServerGetVipWeek());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.kys.util.netty.proto.ProtoMsg.ServerResponse)) {
        return super.equals(obj);
      }
      com.kys.util.netty.proto.ProtoMsg.ServerResponse other = (com.kys.util.netty.proto.ProtoMsg.ServerResponse) obj;

      boolean result = true;
      result = result && (getMethodId()
          == other.getMethodId());
      result = result && result_ == other.result_;
      result = result && getErrStr()
          .equals(other.getErrStr());
      result = result && (hasServerLogin() == other.hasServerLogin());
      if (hasServerLogin()) {
        result = result && getServerLogin()
            .equals(other.getServerLogin());
      }
      result = result && (hasServerPlayerInfo() == other.hasServerPlayerInfo());
      if (hasServerPlayerInfo()) {
        result = result && getServerPlayerInfo()
            .equals(other.getServerPlayerInfo());
      }
      result = result && (hasServerSendHallHeartBeat() == other.hasServerSendHallHeartBeat());
      if (hasServerSendHallHeartBeat()) {
        result = result && getServerSendHallHeartBeat()
            .equals(other.getServerSendHallHeartBeat());
      }
      result = result && (hasServerSendGameHeartBeat() == other.hasServerSendGameHeartBeat());
      if (hasServerSendGameHeartBeat()) {
        result = result && getServerSendGameHeartBeat()
            .equals(other.getServerSendGameHeartBeat());
      }
      result = result && (hasServerGetUserInfo() == other.hasServerGetUserInfo());
      if (hasServerGetUserInfo()) {
        result = result && getServerGetUserInfo()
            .equals(other.getServerGetUserInfo());
      }
      result = result && (hasServerQuickJoin() == other.hasServerQuickJoin());
      if (hasServerQuickJoin()) {
        result = result && getServerQuickJoin()
            .equals(other.getServerQuickJoin());
      }
      result = result && (hasServerEnterRoom() == other.hasServerEnterRoom());
      if (hasServerEnterRoom()) {
        result = result && getServerEnterRoom()
            .equals(other.getServerEnterRoom());
      }
      result = result && (hasServerRecoverGame() == other.hasServerRecoverGame());
      if (hasServerRecoverGame()) {
        result = result && getServerRecoverGame()
            .equals(other.getServerRecoverGame());
      }
      result = result && (hasServerDoCatch() == other.hasServerDoCatch());
      if (hasServerDoCatch()) {
        result = result && getServerDoCatch()
            .equals(other.getServerDoCatch());
      }
      result = result && (hasServerPlayCards() == other.hasServerPlayCards());
      if (hasServerPlayCards()) {
        result = result && getServerPlayCards()
            .equals(other.getServerPlayCards());
      }
      result = result && (hasServerAutoPlay() == other.hasServerAutoPlay());
      if (hasServerAutoPlay()) {
        result = result && getServerAutoPlay()
            .equals(other.getServerAutoPlay());
      }
      result = result && (hasServerLeaveRoom() == other.hasServerLeaveRoom());
      if (hasServerLeaveRoom()) {
        result = result && getServerLeaveRoom()
            .equals(other.getServerLeaveRoom());
      }
      result = result && (hasServerCancleJoin() == other.hasServerCancleJoin());
      if (hasServerCancleJoin()) {
        result = result && getServerCancleJoin()
            .equals(other.getServerCancleJoin());
      }
      result = result && (hasServerQueryIndex() == other.hasServerQueryIndex());
      if (hasServerQueryIndex()) {
        result = result && getServerQueryIndex()
            .equals(other.getServerQueryIndex());
      }
      result = result && (hasServerRetryReturnGame() == other.hasServerRetryReturnGame());
      if (hasServerRetryReturnGame()) {
        result = result && getServerRetryReturnGame()
            .equals(other.getServerRetryReturnGame());
      }
      result = result && (hasServerGetRankList() == other.hasServerGetRankList());
      if (hasServerGetRankList()) {
        result = result && getServerGetRankList()
            .equals(other.getServerGetRankList());
      }
      result = result && (hasServerGetSignupRewardList() == other.hasServerGetSignupRewardList());
      if (hasServerGetSignupRewardList()) {
        result = result && getServerGetSignupRewardList()
            .equals(other.getServerGetSignupRewardList());
      }
      result = result && (hasServerGetHallInfo() == other.hasServerGetHallInfo());
      if (hasServerGetHallInfo()) {
        result = result && getServerGetHallInfo()
            .equals(other.getServerGetHallInfo());
      }
      result = result && (hasServerSignup() == other.hasServerSignup());
      if (hasServerSignup()) {
        result = result && getServerSignup()
            .equals(other.getServerSignup());
      }
      result = result && (hasServerRewardMessage() == other.hasServerRewardMessage());
      if (hasServerRewardMessage()) {
        result = result && getServerRewardMessage()
            .equals(other.getServerRewardMessage());
      }
      result = result && (hasServerDrawWinCup() == other.hasServerDrawWinCup());
      if (hasServerDrawWinCup()) {
        result = result && getServerDrawWinCup()
            .equals(other.getServerDrawWinCup());
      }
      result = result && (hasServerGetRoomConfig() == other.hasServerGetRoomConfig());
      if (hasServerGetRoomConfig()) {
        result = result && getServerGetRoomConfig()
            .equals(other.getServerGetRoomConfig());
      }
      result = result && (hasServerGetRoomCardConfig() == other.hasServerGetRoomCardConfig());
      if (hasServerGetRoomCardConfig()) {
        result = result && getServerGetRoomCardConfig()
            .equals(other.getServerGetRoomCardConfig());
      }
      result = result && (hasServerCreateRoom() == other.hasServerCreateRoom());
      if (hasServerCreateRoom()) {
        result = result && getServerCreateRoom()
            .equals(other.getServerCreateRoom());
      }
      result = result && (hasServerGetMonthCardDiamond() == other.hasServerGetMonthCardDiamond());
      if (hasServerGetMonthCardDiamond()) {
        result = result && getServerGetMonthCardDiamond()
            .equals(other.getServerGetMonthCardDiamond());
      }
      result = result && (hasServerGetLotteryCount() == other.hasServerGetLotteryCount());
      if (hasServerGetLotteryCount()) {
        result = result && getServerGetLotteryCount()
            .equals(other.getServerGetLotteryCount());
      }
      result = result && (hasServerGetRoomInfo() == other.hasServerGetRoomInfo());
      if (hasServerGetRoomInfo()) {
        result = result && getServerGetRoomInfo()
            .equals(other.getServerGetRoomInfo());
      }
      result = result && (hasServerSendTelCode() == other.hasServerSendTelCode());
      if (hasServerSendTelCode()) {
        result = result && getServerSendTelCode()
            .equals(other.getServerSendTelCode());
      }
      result = result && (hasServerVerifyTelCode() == other.hasServerVerifyTelCode());
      if (hasServerVerifyTelCode()) {
        result = result && getServerVerifyTelCode()
            .equals(other.getServerVerifyTelCode());
      }
      result = result && (hasServerQueryShareList() == other.hasServerQueryShareList());
      if (hasServerQueryShareList()) {
        result = result && getServerQueryShareList()
            .equals(other.getServerQueryShareList());
      }
      result = result && (hasServerQueryShareDetail() == other.hasServerQueryShareDetail());
      if (hasServerQueryShareDetail()) {
        result = result && getServerQueryShareDetail()
            .equals(other.getServerQueryShareDetail());
      }
      result = result && (hasServerGetTaskAward() == other.hasServerGetTaskAward());
      if (hasServerGetTaskAward()) {
        result = result && getServerGetTaskAward()
            .equals(other.getServerGetTaskAward());
      }
      result = result && (hasServerSharePackage() == other.hasServerSharePackage());
      if (hasServerSharePackage()) {
        result = result && getServerSharePackage()
            .equals(other.getServerSharePackage());
      }
      result = result && (hasServerGetAwardList() == other.hasServerGetAwardList());
      if (hasServerGetAwardList()) {
        result = result && getServerGetAwardList()
            .equals(other.getServerGetAwardList());
      }
      result = result && (hasServerCheckConnect() == other.hasServerCheckConnect());
      if (hasServerCheckConnect()) {
        result = result && getServerCheckConnect()
            .equals(other.getServerCheckConnect());
      }
      result = result && (hasServerGetPFList() == other.hasServerGetPFList());
      if (hasServerGetPFList()) {
        result = result && getServerGetPFList()
            .equals(other.getServerGetPFList());
      }
      result = result && (hasServerChoosePF() == other.hasServerChoosePF());
      if (hasServerChoosePF()) {
        result = result && getServerChoosePF()
            .equals(other.getServerChoosePF());
      }
      result = result && (hasServerGetHistoryRank() == other.hasServerGetHistoryRank());
      if (hasServerGetHistoryRank()) {
        result = result && getServerGetHistoryRank()
            .equals(other.getServerGetHistoryRank());
      }
      result = result && (hasServerH5Reward() == other.hasServerH5Reward());
      if (hasServerH5Reward()) {
        result = result && getServerH5Reward()
            .equals(other.getServerH5Reward());
      }
      result = result && (hasServerNewDrawWinCup() == other.hasServerNewDrawWinCup());
      if (hasServerNewDrawWinCup()) {
        result = result && getServerNewDrawWinCup()
            .equals(other.getServerNewDrawWinCup());
      }
      result = result && (hasServerGetNewHallInfo() == other.hasServerGetNewHallInfo());
      if (hasServerGetNewHallInfo()) {
        result = result && getServerGetNewHallInfo()
            .equals(other.getServerGetNewHallInfo());
      }
      result = result && (hasServerGetSkinInfo() == other.hasServerGetSkinInfo());
      if (hasServerGetSkinInfo()) {
        result = result && getServerGetSkinInfo()
            .equals(other.getServerGetSkinInfo());
      }
      result = result && (hasServerEquipSkin() == other.hasServerEquipSkin());
      if (hasServerEquipSkin()) {
        result = result && getServerEquipSkin()
            .equals(other.getServerEquipSkin());
      }
      result = result && (hasServerGetStoreData() == other.hasServerGetStoreData());
      if (hasServerGetStoreData()) {
        result = result && getServerGetStoreData()
            .equals(other.getServerGetStoreData());
      }
      result = result && (hasServerConvertGoods() == other.hasServerConvertGoods());
      if (hasServerConvertGoods()) {
        result = result && getServerConvertGoods()
            .equals(other.getServerConvertGoods());
      }
      result = result && (hasServerWXPayResult() == other.hasServerWXPayResult());
      if (hasServerWXPayResult()) {
        result = result && getServerWXPayResult()
            .equals(other.getServerWXPayResult());
      }
      result = result && (hasServerBuyOrderGoods() == other.hasServerBuyOrderGoods());
      if (hasServerBuyOrderGoods()) {
        result = result && getServerBuyOrderGoods()
            .equals(other.getServerBuyOrderGoods());
      }
      result = result && (hasServerGetFirstCharge() == other.hasServerGetFirstCharge());
      if (hasServerGetFirstCharge()) {
        result = result && getServerGetFirstCharge()
            .equals(other.getServerGetFirstCharge());
      }
      result = result && (hasServerGetDailyGift() == other.hasServerGetDailyGift());
      if (hasServerGetDailyGift()) {
        result = result && getServerGetDailyGift()
            .equals(other.getServerGetDailyGift());
      }
      result = result && (hasServerGetMonthCard() == other.hasServerGetMonthCard());
      if (hasServerGetMonthCard()) {
        result = result && getServerGetMonthCard()
            .equals(other.getServerGetMonthCard());
      }
      result = result && (hasServerGetResurgenceGift() == other.hasServerGetResurgenceGift());
      if (hasServerGetResurgenceGift()) {
        result = result && getServerGetResurgenceGift()
            .equals(other.getServerGetResurgenceGift());
      }
      result = result && (hasServerGetAnnounce() == other.hasServerGetAnnounce());
      if (hasServerGetAnnounce()) {
        result = result && getServerGetAnnounce()
            .equals(other.getServerGetAnnounce());
      }
      result = result && (hasServerGetMail() == other.hasServerGetMail());
      if (hasServerGetMail()) {
        result = result && getServerGetMail()
            .equals(other.getServerGetMail());
      }
      result = result && (hasServerGetMailReward() == other.hasServerGetMailReward());
      if (hasServerGetMailReward()) {
        result = result && getServerGetMailReward()
            .equals(other.getServerGetMailReward());
      }
      result = result && (hasServerDelMail() == other.hasServerDelMail());
      if (hasServerDelMail()) {
        result = result && getServerDelMail()
            .equals(other.getServerDelMail());
      }
      result = result && (hasServerReadMail() == other.hasServerReadMail());
      if (hasServerReadMail()) {
        result = result && getServerReadMail()
            .equals(other.getServerReadMail());
      }
      result = result && (hasServerDel2R() == other.hasServerDel2R());
      if (hasServerDel2R()) {
        result = result && getServerDel2R()
            .equals(other.getServerDel2R());
      }
      result = result && (hasServerQueryDailyTask() == other.hasServerQueryDailyTask());
      if (hasServerQueryDailyTask()) {
        result = result && getServerQueryDailyTask()
            .equals(other.getServerQueryDailyTask());
      }
      result = result && (hasServerGetDailyTaskAward() == other.hasServerGetDailyTaskAward());
      if (hasServerGetDailyTaskAward()) {
        result = result && getServerGetDailyTaskAward()
            .equals(other.getServerGetDailyTaskAward());
      }
      result = result && (hasServerGetNoviceReward() == other.hasServerGetNoviceReward());
      if (hasServerGetNoviceReward()) {
        result = result && getServerGetNoviceReward()
            .equals(other.getServerGetNoviceReward());
      }
      result = result && (hasServerQueryNoviceTask() == other.hasServerQueryNoviceTask());
      if (hasServerQueryNoviceTask()) {
        result = result && getServerQueryNoviceTask()
            .equals(other.getServerQueryNoviceTask());
      }
      result = result && (hasServerGetDTAward() == other.hasServerGetDTAward());
      if (hasServerGetDTAward()) {
        result = result && getServerGetDTAward()
            .equals(other.getServerGetDTAward());
      }
      result = result && (hasServerGetReceiveAddr() == other.hasServerGetReceiveAddr());
      if (hasServerGetReceiveAddr()) {
        result = result && getServerGetReceiveAddr()
            .equals(other.getServerGetReceiveAddr());
      }
      result = result && (hasServerAlterReceiveAddr() == other.hasServerAlterReceiveAddr());
      if (hasServerAlterReceiveAddr()) {
        result = result && getServerAlterReceiveAddr()
            .equals(other.getServerAlterReceiveAddr());
      }
      result = result && (hasServerSnatchList() == other.hasServerSnatchList());
      if (hasServerSnatchList()) {
        result = result && getServerSnatchList()
            .equals(other.getServerSnatchList());
      }
      result = result && (hasServerSnatchItemDetail() == other.hasServerSnatchItemDetail());
      if (hasServerSnatchItemDetail()) {
        result = result && getServerSnatchItemDetail()
            .equals(other.getServerSnatchItemDetail());
      }
      result = result && (hasServerSnatchBet() == other.hasServerSnatchBet());
      if (hasServerSnatchBet()) {
        result = result && getServerSnatchBet()
            .equals(other.getServerSnatchBet());
      }
      result = result && (hasServerSnatchAwardList() == other.hasServerSnatchAwardList());
      if (hasServerSnatchAwardList()) {
        result = result && getServerSnatchAwardList()
            .equals(other.getServerSnatchAwardList());
      }
      result = result && (hasServerOwnSnatchRecord() == other.hasServerOwnSnatchRecord());
      if (hasServerOwnSnatchRecord()) {
        result = result && getServerOwnSnatchRecord()
            .equals(other.getServerOwnSnatchRecord());
      }
      result = result && (hasServerSnatchItemHistory() == other.hasServerSnatchItemHistory());
      if (hasServerSnatchItemHistory()) {
        result = result && getServerSnatchItemHistory()
            .equals(other.getServerSnatchItemHistory());
      }
      result = result && (hasServerSnatchHistoryDetail() == other.hasServerSnatchHistoryDetail());
      if (hasServerSnatchHistoryDetail()) {
        result = result && getServerSnatchHistoryDetail()
            .equals(other.getServerSnatchHistoryDetail());
      }
      result = result && (hasServerSnatchGetAward() == other.hasServerSnatchGetAward());
      if (hasServerSnatchGetAward()) {
        result = result && getServerSnatchGetAward()
            .equals(other.getServerSnatchGetAward());
      }
      result = result && (hasServerEnterDG() == other.hasServerEnterDG());
      if (hasServerEnterDG()) {
        result = result && getServerEnterDG()
            .equals(other.getServerEnterDG());
      }
      result = result && (hasServerDGLottery() == other.hasServerDGLottery());
      if (hasServerDGLottery()) {
        result = result && getServerDGLottery()
            .equals(other.getServerDGLottery());
      }
      result = result && (hasServerResetLottery() == other.hasServerResetLottery());
      if (hasServerResetLottery()) {
        result = result && getServerResetLottery()
            .equals(other.getServerResetLottery());
      }
      result = result && (hasServerExitDG() == other.hasServerExitDG());
      if (hasServerExitDG()) {
        result = result && getServerExitDG()
            .equals(other.getServerExitDG());
      }
      result = result && (hasServerOpenDG() == other.hasServerOpenDG());
      if (hasServerOpenDG()) {
        result = result && getServerOpenDG()
            .equals(other.getServerOpenDG());
      }
      result = result && (hasServerOpenDD() == other.hasServerOpenDD());
      if (hasServerOpenDD()) {
        result = result && getServerOpenDD()
            .equals(other.getServerOpenDD());
      }
      result = result && (hasServerDDLottery() == other.hasServerDDLottery());
      if (hasServerDDLottery()) {
        result = result && getServerDDLottery()
            .equals(other.getServerDDLottery());
      }
      result = result && (hasServerExitDD() == other.hasServerExitDD());
      if (hasServerExitDD()) {
        result = result && getServerExitDD()
            .equals(other.getServerExitDD());
      }
      result = result && (hasServerQueryProp() == other.hasServerQueryProp());
      if (hasServerQueryProp()) {
        result = result && getServerQueryProp()
            .equals(other.getServerQueryProp());
      }
      result = result && (hasServerUseProp() == other.hasServerUseProp());
      if (hasServerUseProp()) {
        result = result && getServerUseProp()
            .equals(other.getServerUseProp());
      }
      result = result && (hasServerQueryPropCount() == other.hasServerQueryPropCount());
      if (hasServerQueryPropCount()) {
        result = result && getServerQueryPropCount()
            .equals(other.getServerQueryPropCount());
      }
      result = result && (hasServerMonthSignInfo() == other.hasServerMonthSignInfo());
      if (hasServerMonthSignInfo()) {
        result = result && getServerMonthSignInfo()
            .equals(other.getServerMonthSignInfo());
      }
      result = result && (hasServerMonthSign() == other.hasServerMonthSign());
      if (hasServerMonthSign()) {
        result = result && getServerMonthSign()
            .equals(other.getServerMonthSign());
      }
      result = result && (hasServerGetCritReward() == other.hasServerGetCritReward());
      if (hasServerGetCritReward()) {
        result = result && getServerGetCritReward()
            .equals(other.getServerGetCritReward());
      }
      result = result && (hasServerLTLottery() == other.hasServerLTLottery());
      if (hasServerLTLottery()) {
        result = result && getServerLTLottery()
            .equals(other.getServerLTLottery());
      }
      result = result && (hasServerGetTSReward() == other.hasServerGetTSReward());
      if (hasServerGetTSReward()) {
        result = result && getServerGetTSReward()
            .equals(other.getServerGetTSReward());
      }
      result = result && (hasServerGetLuckInfo() == other.hasServerGetLuckInfo());
      if (hasServerGetLuckInfo()) {
        result = result && getServerGetLuckInfo()
            .equals(other.getServerGetLuckInfo());
      }
      result = result && (hasServerGetVipInfo() == other.hasServerGetVipInfo());
      if (hasServerGetVipInfo()) {
        result = result && getServerGetVipInfo()
            .equals(other.getServerGetVipInfo());
      }
      result = result && (hasServerGetVipWeek() == other.hasServerGetVipWeek());
      if (hasServerGetVipWeek()) {
        result = result && getServerGetVipWeek()
            .equals(other.getServerGetVipWeek());
      }
      result = result && (hasBGameStart() == other.hasBGameStart());
      if (hasBGameStart()) {
        result = result && getBGameStart()
            .equals(other.getBGameStart());
      }
      result = result && (hasBDoCatch() == other.hasBDoCatch());
      if (hasBDoCatch()) {
        result = result && getBDoCatch()
            .equals(other.getBDoCatch());
      }
      result = result && (hasBCatchResult() == other.hasBCatchResult());
      if (hasBCatchResult()) {
        result = result && getBCatchResult()
            .equals(other.getBCatchResult());
      }
      result = result && (hasBPlayCards() == other.hasBPlayCards());
      if (hasBPlayCards()) {
        result = result && getBPlayCards()
            .equals(other.getBPlayCards());
      }
      result = result && (hasBSendDiZhuCard() == other.hasBSendDiZhuCard());
      if (hasBSendDiZhuCard()) {
        result = result && getBSendDiZhuCard()
            .equals(other.getBSendDiZhuCard());
      }
      result = result && (hasBNextPlayer() == other.hasBNextPlayer());
      if (hasBNextPlayer()) {
        result = result && getBNextPlayer()
            .equals(other.getBNextPlayer());
      }
      result = result && (hasBGameSettle() == other.hasBGameSettle());
      if (hasBGameSettle()) {
        result = result && getBGameSettle()
            .equals(other.getBGameSettle());
      }
      result = result && (hasBRewardMessage() == other.hasBRewardMessage());
      if (hasBRewardMessage()) {
        result = result && getBRewardMessage()
            .equals(other.getBRewardMessage());
      }
      result = result && (hasBAutoPlay() == other.hasBAutoPlay());
      if (hasBAutoPlay()) {
        result = result && getBAutoPlay()
            .equals(other.getBAutoPlay());
      }
      result = result && (hasBRoomIdUrl() == other.hasBRoomIdUrl());
      if (hasBRoomIdUrl()) {
        result = result && getBRoomIdUrl()
            .equals(other.getBRoomIdUrl());
      }
      result = result && (hasBAwardDialog() == other.hasBAwardDialog());
      if (hasBAwardDialog()) {
        result = result && getBAwardDialog()
            .equals(other.getBAwardDialog());
      }
      result = result && (hasBBuySuccess() == other.hasBBuySuccess());
      if (hasBBuySuccess()) {
        result = result && getBBuySuccess()
            .equals(other.getBBuySuccess());
      }
      result = result && (hasBRedDotPush() == other.hasBRedDotPush());
      if (hasBRedDotPush()) {
        result = result && getBRedDotPush()
            .equals(other.getBRedDotPush());
      }
      result = result && (hasBForceAnnounce() == other.hasBForceAnnounce());
      if (hasBForceAnnounce()) {
        result = result && getBForceAnnounce()
            .equals(other.getBForceAnnounce());
      }
      result = result && (hasBDGameMessage() == other.hasBDGameMessage());
      if (hasBDGameMessage()) {
        result = result && getBDGameMessage()
            .equals(other.getBDGameMessage());
      }
      result = result && (hasBDGOver() == other.hasBDGOver());
      if (hasBDGOver()) {
        result = result && getBDGOver()
            .equals(other.getBDGOver());
      }
      result = result && (hasBDDOver() == other.hasBDDOver());
      if (hasBDDOver()) {
        result = result && getBDDOver()
            .equals(other.getBDDOver());
      }
      result = result && (hasBDDInfo() == other.hasBDDInfo());
      if (hasBDDInfo()) {
        result = result && getBDDInfo()
            .equals(other.getBDDInfo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METHODID_FIELD_NUMBER;
      hash = (53 * hash) + getMethodId();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + result_;
      hash = (37 * hash) + ERRSTR_FIELD_NUMBER;
      hash = (53 * hash) + getErrStr().hashCode();
      if (hasServerLogin()) {
        hash = (37 * hash) + SERVERLOGIN_FIELD_NUMBER;
        hash = (53 * hash) + getServerLogin().hashCode();
      }
      if (hasServerPlayerInfo()) {
        hash = (37 * hash) + SERVERPLAYERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerPlayerInfo().hashCode();
      }
      if (hasServerSendHallHeartBeat()) {
        hash = (37 * hash) + SERVERSENDHALLHEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getServerSendHallHeartBeat().hashCode();
      }
      if (hasServerSendGameHeartBeat()) {
        hash = (37 * hash) + SERVERSENDGAMEHEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getServerSendGameHeartBeat().hashCode();
      }
      if (hasServerGetUserInfo()) {
        hash = (37 * hash) + SERVERGETUSERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetUserInfo().hashCode();
      }
      if (hasServerQuickJoin()) {
        hash = (37 * hash) + SERVERQUICKJOIN_FIELD_NUMBER;
        hash = (53 * hash) + getServerQuickJoin().hashCode();
      }
      if (hasServerEnterRoom()) {
        hash = (37 * hash) + SERVERENTERROOM_FIELD_NUMBER;
        hash = (53 * hash) + getServerEnterRoom().hashCode();
      }
      if (hasServerRecoverGame()) {
        hash = (37 * hash) + SERVERRECOVERGAME_FIELD_NUMBER;
        hash = (53 * hash) + getServerRecoverGame().hashCode();
      }
      if (hasServerDoCatch()) {
        hash = (37 * hash) + SERVERDOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getServerDoCatch().hashCode();
      }
      if (hasServerPlayCards()) {
        hash = (37 * hash) + SERVERPLAYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getServerPlayCards().hashCode();
      }
      if (hasServerAutoPlay()) {
        hash = (37 * hash) + SERVERAUTOPLAY_FIELD_NUMBER;
        hash = (53 * hash) + getServerAutoPlay().hashCode();
      }
      if (hasServerLeaveRoom()) {
        hash = (37 * hash) + SERVERLEAVEROOM_FIELD_NUMBER;
        hash = (53 * hash) + getServerLeaveRoom().hashCode();
      }
      if (hasServerCancleJoin()) {
        hash = (37 * hash) + SERVERCANCLEJOIN_FIELD_NUMBER;
        hash = (53 * hash) + getServerCancleJoin().hashCode();
      }
      if (hasServerQueryIndex()) {
        hash = (37 * hash) + SERVERQUERYINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryIndex().hashCode();
      }
      if (hasServerRetryReturnGame()) {
        hash = (37 * hash) + SERVERRETRYRETURNGAME_FIELD_NUMBER;
        hash = (53 * hash) + getServerRetryReturnGame().hashCode();
      }
      if (hasServerGetRankList()) {
        hash = (37 * hash) + SERVERGETRANKLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetRankList().hashCode();
      }
      if (hasServerGetSignupRewardList()) {
        hash = (37 * hash) + SERVERGETSIGNUPREWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetSignupRewardList().hashCode();
      }
      if (hasServerGetHallInfo()) {
        hash = (37 * hash) + SERVERGETHALLINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetHallInfo().hashCode();
      }
      if (hasServerSignup()) {
        hash = (37 * hash) + SERVERSIGNUP_FIELD_NUMBER;
        hash = (53 * hash) + getServerSignup().hashCode();
      }
      if (hasServerRewardMessage()) {
        hash = (37 * hash) + SERVERREWARDMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerRewardMessage().hashCode();
      }
      if (hasServerDrawWinCup()) {
        hash = (37 * hash) + SERVERDRAWWINCUP_FIELD_NUMBER;
        hash = (53 * hash) + getServerDrawWinCup().hashCode();
      }
      if (hasServerGetRoomConfig()) {
        hash = (37 * hash) + SERVERGETROOMCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetRoomConfig().hashCode();
      }
      if (hasServerGetRoomCardConfig()) {
        hash = (37 * hash) + SERVERGETROOMCARDCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetRoomCardConfig().hashCode();
      }
      if (hasServerCreateRoom()) {
        hash = (37 * hash) + SERVERCREATEROOM_FIELD_NUMBER;
        hash = (53 * hash) + getServerCreateRoom().hashCode();
      }
      if (hasServerGetMonthCardDiamond()) {
        hash = (37 * hash) + SERVERGETMONTHCARDDIAMOND_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMonthCardDiamond().hashCode();
      }
      if (hasServerGetLotteryCount()) {
        hash = (37 * hash) + SERVERGETLOTTERYCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetLotteryCount().hashCode();
      }
      if (hasServerGetRoomInfo()) {
        hash = (37 * hash) + SERVERGETROOMINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetRoomInfo().hashCode();
      }
      if (hasServerSendTelCode()) {
        hash = (37 * hash) + SERVERSENDTELCODE_FIELD_NUMBER;
        hash = (53 * hash) + getServerSendTelCode().hashCode();
      }
      if (hasServerVerifyTelCode()) {
        hash = (37 * hash) + SERVERVERIFYTELCODE_FIELD_NUMBER;
        hash = (53 * hash) + getServerVerifyTelCode().hashCode();
      }
      if (hasServerQueryShareList()) {
        hash = (37 * hash) + SERVERQUERYSHARELIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryShareList().hashCode();
      }
      if (hasServerQueryShareDetail()) {
        hash = (37 * hash) + SERVERQUERYSHAREDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryShareDetail().hashCode();
      }
      if (hasServerGetTaskAward()) {
        hash = (37 * hash) + SERVERGETTASKAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetTaskAward().hashCode();
      }
      if (hasServerSharePackage()) {
        hash = (37 * hash) + SERVERSHAREPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerSharePackage().hashCode();
      }
      if (hasServerGetAwardList()) {
        hash = (37 * hash) + SERVERGETAWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetAwardList().hashCode();
      }
      if (hasServerCheckConnect()) {
        hash = (37 * hash) + SERVERCHECKCONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getServerCheckConnect().hashCode();
      }
      if (hasServerGetPFList()) {
        hash = (37 * hash) + SERVERGETPFLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetPFList().hashCode();
      }
      if (hasServerChoosePF()) {
        hash = (37 * hash) + SERVERCHOOSEPF_FIELD_NUMBER;
        hash = (53 * hash) + getServerChoosePF().hashCode();
      }
      if (hasServerGetHistoryRank()) {
        hash = (37 * hash) + SERVERGETHISTORYRANK_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetHistoryRank().hashCode();
      }
      if (hasServerH5Reward()) {
        hash = (37 * hash) + SERVERH5REWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerH5Reward().hashCode();
      }
      if (hasServerNewDrawWinCup()) {
        hash = (37 * hash) + SERVERNEWDRAWWINCUP_FIELD_NUMBER;
        hash = (53 * hash) + getServerNewDrawWinCup().hashCode();
      }
      if (hasServerGetNewHallInfo()) {
        hash = (37 * hash) + SERVERGETNEWHALLINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetNewHallInfo().hashCode();
      }
      if (hasServerGetSkinInfo()) {
        hash = (37 * hash) + SERVERGETSKININFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetSkinInfo().hashCode();
      }
      if (hasServerEquipSkin()) {
        hash = (37 * hash) + SERVEREQUIPSKIN_FIELD_NUMBER;
        hash = (53 * hash) + getServerEquipSkin().hashCode();
      }
      if (hasServerGetStoreData()) {
        hash = (37 * hash) + SERVERGETSTOREDATA_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetStoreData().hashCode();
      }
      if (hasServerConvertGoods()) {
        hash = (37 * hash) + SERVERCONVERTGOODS_FIELD_NUMBER;
        hash = (53 * hash) + getServerConvertGoods().hashCode();
      }
      if (hasServerWXPayResult()) {
        hash = (37 * hash) + SERVERWXPAYRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getServerWXPayResult().hashCode();
      }
      if (hasServerBuyOrderGoods()) {
        hash = (37 * hash) + SERVERBUYORDERGOODS_FIELD_NUMBER;
        hash = (53 * hash) + getServerBuyOrderGoods().hashCode();
      }
      if (hasServerGetFirstCharge()) {
        hash = (37 * hash) + SERVERGETFIRSTCHARGE_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetFirstCharge().hashCode();
      }
      if (hasServerGetDailyGift()) {
        hash = (37 * hash) + SERVERGETDAILYGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetDailyGift().hashCode();
      }
      if (hasServerGetMonthCard()) {
        hash = (37 * hash) + SERVERGETMONTHCARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMonthCard().hashCode();
      }
      if (hasServerGetResurgenceGift()) {
        hash = (37 * hash) + SERVERGETRESURGENCEGIFT_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetResurgenceGift().hashCode();
      }
      if (hasServerGetAnnounce()) {
        hash = (37 * hash) + SERVERGETANNOUNCE_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetAnnounce().hashCode();
      }
      if (hasServerGetMail()) {
        hash = (37 * hash) + SERVERGETMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMail().hashCode();
      }
      if (hasServerGetMailReward()) {
        hash = (37 * hash) + SERVERGETMAILREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetMailReward().hashCode();
      }
      if (hasServerDelMail()) {
        hash = (37 * hash) + SERVERDELMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerDelMail().hashCode();
      }
      if (hasServerReadMail()) {
        hash = (37 * hash) + SERVERREADMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerReadMail().hashCode();
      }
      if (hasServerDel2R()) {
        hash = (37 * hash) + SERVERDEL2R_FIELD_NUMBER;
        hash = (53 * hash) + getServerDel2R().hashCode();
      }
      if (hasServerQueryDailyTask()) {
        hash = (37 * hash) + SERVERQUERYDAILYTASK_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryDailyTask().hashCode();
      }
      if (hasServerGetDailyTaskAward()) {
        hash = (37 * hash) + SERVERGETDAILYTASKAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetDailyTaskAward().hashCode();
      }
      if (hasServerGetNoviceReward()) {
        hash = (37 * hash) + SERVERGETNOVICEREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetNoviceReward().hashCode();
      }
      if (hasServerQueryNoviceTask()) {
        hash = (37 * hash) + SERVERQUERYNOVICETASK_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryNoviceTask().hashCode();
      }
      if (hasServerGetDTAward()) {
        hash = (37 * hash) + SERVERGETDTAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetDTAward().hashCode();
      }
      if (hasServerGetReceiveAddr()) {
        hash = (37 * hash) + SERVERGETRECEIVEADDR_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetReceiveAddr().hashCode();
      }
      if (hasServerAlterReceiveAddr()) {
        hash = (37 * hash) + SERVERALTERRECEIVEADDR_FIELD_NUMBER;
        hash = (53 * hash) + getServerAlterReceiveAddr().hashCode();
      }
      if (hasServerSnatchList()) {
        hash = (37 * hash) + SERVERSNATCHLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchList().hashCode();
      }
      if (hasServerSnatchItemDetail()) {
        hash = (37 * hash) + SERVERSNATCHITEMDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchItemDetail().hashCode();
      }
      if (hasServerSnatchBet()) {
        hash = (37 * hash) + SERVERSNATCHBET_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchBet().hashCode();
      }
      if (hasServerSnatchAwardList()) {
        hash = (37 * hash) + SERVERSNATCHAWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchAwardList().hashCode();
      }
      if (hasServerOwnSnatchRecord()) {
        hash = (37 * hash) + SERVEROWNSNATCHRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getServerOwnSnatchRecord().hashCode();
      }
      if (hasServerSnatchItemHistory()) {
        hash = (37 * hash) + SERVERSNATCHITEMHISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchItemHistory().hashCode();
      }
      if (hasServerSnatchHistoryDetail()) {
        hash = (37 * hash) + SERVERSNATCHHISTORYDETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchHistoryDetail().hashCode();
      }
      if (hasServerSnatchGetAward()) {
        hash = (37 * hash) + SERVERSNATCHGETAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerSnatchGetAward().hashCode();
      }
      if (hasServerEnterDG()) {
        hash = (37 * hash) + SERVERENTERDG_FIELD_NUMBER;
        hash = (53 * hash) + getServerEnterDG().hashCode();
      }
      if (hasServerDGLottery()) {
        hash = (37 * hash) + SERVERDGLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getServerDGLottery().hashCode();
      }
      if (hasServerResetLottery()) {
        hash = (37 * hash) + SERVERRESETLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getServerResetLottery().hashCode();
      }
      if (hasServerExitDG()) {
        hash = (37 * hash) + SERVEREXITDG_FIELD_NUMBER;
        hash = (53 * hash) + getServerExitDG().hashCode();
      }
      if (hasServerOpenDG()) {
        hash = (37 * hash) + SERVEROPENDG_FIELD_NUMBER;
        hash = (53 * hash) + getServerOpenDG().hashCode();
      }
      if (hasServerOpenDD()) {
        hash = (37 * hash) + SERVEROPENDD_FIELD_NUMBER;
        hash = (53 * hash) + getServerOpenDD().hashCode();
      }
      if (hasServerDDLottery()) {
        hash = (37 * hash) + SERVERDDLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getServerDDLottery().hashCode();
      }
      if (hasServerExitDD()) {
        hash = (37 * hash) + SERVEREXITDD_FIELD_NUMBER;
        hash = (53 * hash) + getServerExitDD().hashCode();
      }
      if (hasServerQueryProp()) {
        hash = (37 * hash) + SERVERQUERYPROP_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryProp().hashCode();
      }
      if (hasServerUseProp()) {
        hash = (37 * hash) + SERVERUSEPROP_FIELD_NUMBER;
        hash = (53 * hash) + getServerUseProp().hashCode();
      }
      if (hasServerQueryPropCount()) {
        hash = (37 * hash) + SERVERQUERYPROPCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getServerQueryPropCount().hashCode();
      }
      if (hasServerMonthSignInfo()) {
        hash = (37 * hash) + SERVERMONTHSIGNINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerMonthSignInfo().hashCode();
      }
      if (hasServerMonthSign()) {
        hash = (37 * hash) + SERVERMONTHSIGN_FIELD_NUMBER;
        hash = (53 * hash) + getServerMonthSign().hashCode();
      }
      if (hasServerGetCritReward()) {
        hash = (37 * hash) + SERVERGETCRITREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetCritReward().hashCode();
      }
      if (hasServerLTLottery()) {
        hash = (37 * hash) + SERVERLTLOTTERY_FIELD_NUMBER;
        hash = (53 * hash) + getServerLTLottery().hashCode();
      }
      if (hasServerGetTSReward()) {
        hash = (37 * hash) + SERVERGETTSREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetTSReward().hashCode();
      }
      if (hasServerGetLuckInfo()) {
        hash = (37 * hash) + SERVERGETLUCKINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetLuckInfo().hashCode();
      }
      if (hasServerGetVipInfo()) {
        hash = (37 * hash) + SERVERGETVIPINFO_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetVipInfo().hashCode();
      }
      if (hasServerGetVipWeek()) {
        hash = (37 * hash) + SERVERGETVIPWEEK_FIELD_NUMBER;
        hash = (53 * hash) + getServerGetVipWeek().hashCode();
      }
      if (hasBGameStart()) {
        hash = (37 * hash) + B_GAMESTART_FIELD_NUMBER;
        hash = (53 * hash) + getBGameStart().hashCode();
      }
      if (hasBDoCatch()) {
        hash = (37 * hash) + B_DOCATCH_FIELD_NUMBER;
        hash = (53 * hash) + getBDoCatch().hashCode();
      }
      if (hasBCatchResult()) {
        hash = (37 * hash) + B_CATCHRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getBCatchResult().hashCode();
      }
      if (hasBPlayCards()) {
        hash = (37 * hash) + B_PLAYCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getBPlayCards().hashCode();
      }
      if (hasBSendDiZhuCard()) {
        hash = (37 * hash) + B_SENDDIZHUCARD_FIELD_NUMBER;
        hash = (53 * hash) + getBSendDiZhuCard().hashCode();
      }
      if (hasBNextPlayer()) {
        hash = (37 * hash) + B_NEXTPLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getBNextPlayer().hashCode();
      }
      if (hasBGameSettle()) {
        hash = (37 * hash) + B_GAMESETTLE_FIELD_NUMBER;
        hash = (53 * hash) + getBGameSettle().hashCode();
      }
      if (hasBRewardMessage()) {
        hash = (37 * hash) + B_REWARDMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getBRewardMessage().hashCode();
      }
      if (hasBAutoPlay()) {
        hash = (37 * hash) + B_AUTOPLAY_FIELD_NUMBER;
        hash = (53 * hash) + getBAutoPlay().hashCode();
      }
      if (hasBRoomIdUrl()) {
        hash = (37 * hash) + B_ROOMIDURL_FIELD_NUMBER;
        hash = (53 * hash) + getBRoomIdUrl().hashCode();
      }
      if (hasBAwardDialog()) {
        hash = (37 * hash) + B_AWARDDIALOG_FIELD_NUMBER;
        hash = (53 * hash) + getBAwardDialog().hashCode();
      }
      if (hasBBuySuccess()) {
        hash = (37 * hash) + B_BUYSUCCESS_FIELD_NUMBER;
        hash = (53 * hash) + getBBuySuccess().hashCode();
      }
      if (hasBRedDotPush()) {
        hash = (37 * hash) + B_REDDOTPUSH_FIELD_NUMBER;
        hash = (53 * hash) + getBRedDotPush().hashCode();
      }
      if (hasBForceAnnounce()) {
        hash = (37 * hash) + B_FORCEANNOUNCE_FIELD_NUMBER;
        hash = (53 * hash) + getBForceAnnounce().hashCode();
      }
      if (hasBDGameMessage()) {
        hash = (37 * hash) + B_DGAMEMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getBDGameMessage().hashCode();
      }
      if (hasBDGOver()) {
        hash = (37 * hash) + B_DGOVER_FIELD_NUMBER;
        hash = (53 * hash) + getBDGOver().hashCode();
      }
      if (hasBDDOver()) {
        hash = (37 * hash) + B_DDOVER_FIELD_NUMBER;
        hash = (53 * hash) + getBDDOver().hashCode();
      }
      if (hasBDDInfo()) {
        hash = (37 * hash) + B_DDINFO_FIELD_NUMBER;
        hash = (53 * hash) + getBDDInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.kys.util.netty.proto.ProtoMsg.ServerResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** 所有下行请求都是serverResponse，服务器会传递具体内容的标示methodId，客户端根据methodId进行处理 
     * </pre>
     *
     * Protobuf type {@code com.kys.util.netty.proto.ServerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.kys.util.netty.proto.ServerResponse)
        com.kys.util.netty.proto.ProtoMsg.ServerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kys.util.netty.proto.ProtoMsg.ServerResponse.class, com.kys.util.netty.proto.ProtoMsg.ServerResponse.Builder.class);
      }

      // Construct using com.kys.util.netty.proto.ProtoMsg.ServerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        methodId_ = 0;

        result_ = 0;

        errStr_ = "";

        if (serverLoginBuilder_ == null) {
          serverLogin_ = null;
        } else {
          serverLogin_ = null;
          serverLoginBuilder_ = null;
        }
        if (serverPlayerInfoBuilder_ == null) {
          serverPlayerInfo_ = null;
        } else {
          serverPlayerInfo_ = null;
          serverPlayerInfoBuilder_ = null;
        }
        if (serverSendHallHeartBeatBuilder_ == null) {
          serverSendHallHeartBeat_ = null;
        } else {
          serverSendHallHeartBeat_ = null;
          serverSendHallHeartBeatBuilder_ = null;
        }
        if (serverSendGameHeartBeatBuilder_ == null) {
          serverSendGameHeartBeat_ = null;
        } else {
          serverSendGameHeartBeat_ = null;
          serverSendGameHeartBeatBuilder_ = null;
        }
        if (serverGetUserInfoBuilder_ == null) {
          serverGetUserInfo_ = null;
        } else {
          serverGetUserInfo_ = null;
          serverGetUserInfoBuilder_ = null;
        }
        if (serverQuickJoinBuilder_ == null) {
          serverQuickJoin_ = null;
        } else {
          serverQuickJoin_ = null;
          serverQuickJoinBuilder_ = null;
        }
        if (serverEnterRoomBuilder_ == null) {
          serverEnterRoom_ = null;
        } else {
          serverEnterRoom_ = null;
          serverEnterRoomBuilder_ = null;
        }
        if (serverRecoverGameBuilder_ == null) {
          serverRecoverGame_ = null;
        } else {
          serverRecoverGame_ = null;
          serverRecoverGameBuilder_ = null;
        }
        if (serverDoCatchBuilder_ == null) {
          serverDoCatch_ = null;
        } else {
          serverDoCatch_ = null;
          serverDoCatchBuilder_ = null;
        }
        if (serverPlayCardsBuilder_ == null) {
          serverPlayCards_ = null;
        } else {
          serverPlayCards_ = null;
          serverPlayCardsBuilder_ = null;
        }
        if (serverAutoPlayBuilder_ == null) {
          serverAutoPlay_ = null;
        } else {
          serverAutoPlay_ = null;
          serverAutoPlayBuilder_ = null;
        }
        if (serverLeaveRoomBuilder_ == null) {
          serverLeaveRoom_ = null;
        } else {
          serverLeaveRoom_ = null;
          serverLeaveRoomBuilder_ = null;
        }
        if (serverCancleJoinBuilder_ == null) {
          serverCancleJoin_ = null;
        } else {
          serverCancleJoin_ = null;
          serverCancleJoinBuilder_ = null;
        }
        if (serverQueryIndexBuilder_ == null) {
          serverQueryIndex_ = null;
        } else {
          serverQueryIndex_ = null;
          serverQueryIndexBuilder_ = null;
        }
        if (serverRetryReturnGameBuilder_ == null) {
          serverRetryReturnGame_ = null;
        } else {
          serverRetryReturnGame_ = null;
          serverRetryReturnGameBuilder_ = null;
        }
        if (serverGetRankListBuilder_ == null) {
          serverGetRankList_ = null;
        } else {
          serverGetRankList_ = null;
          serverGetRankListBuilder_ = null;
        }
        if (serverGetSignupRewardListBuilder_ == null) {
          serverGetSignupRewardList_ = null;
        } else {
          serverGetSignupRewardList_ = null;
          serverGetSignupRewardListBuilder_ = null;
        }
        if (serverGetHallInfoBuilder_ == null) {
          serverGetHallInfo_ = null;
        } else {
          serverGetHallInfo_ = null;
          serverGetHallInfoBuilder_ = null;
        }
        if (serverSignupBuilder_ == null) {
          serverSignup_ = null;
        } else {
          serverSignup_ = null;
          serverSignupBuilder_ = null;
        }
        if (serverRewardMessageBuilder_ == null) {
          serverRewardMessage_ = null;
        } else {
          serverRewardMessage_ = null;
          serverRewardMessageBuilder_ = null;
        }
        if (serverDrawWinCupBuilder_ == null) {
          serverDrawWinCup_ = null;
        } else {
          serverDrawWinCup_ = null;
          serverDrawWinCupBuilder_ = null;
        }
        if (serverGetRoomConfigBuilder_ == null) {
          serverGetRoomConfig_ = null;
        } else {
          serverGetRoomConfig_ = null;
          serverGetRoomConfigBuilder_ = null;
        }
        if (serverGetRoomCardConfigBuilder_ == null) {
          serverGetRoomCardConfig_ = null;
        } else {
          serverGetRoomCardConfig_ = null;
          serverGetRoomCardConfigBuilder_ = null;
        }
        if (serverCreateRoomBuilder_ == null) {
          serverCreateRoom_ = null;
        } else {
          serverCreateRoom_ = null;
          serverCreateRoomBuilder_ = null;
        }
        if (serverGetMonthCardDiamondBuilder_ == null) {
          serverGetMonthCardDiamond_ = null;
        } else {
          serverGetMonthCardDiamond_ = null;
          serverGetMonthCardDiamondBuilder_ = null;
        }
        if (serverGetLotteryCountBuilder_ == null) {
          serverGetLotteryCount_ = null;
        } else {
          serverGetLotteryCount_ = null;
          serverGetLotteryCountBuilder_ = null;
        }
        if (serverGetRoomInfoBuilder_ == null) {
          serverGetRoomInfo_ = null;
        } else {
          serverGetRoomInfo_ = null;
          serverGetRoomInfoBuilder_ = null;
        }
        if (serverSendTelCodeBuilder_ == null) {
          serverSendTelCode_ = null;
        } else {
          serverSendTelCode_ = null;
          serverSendTelCodeBuilder_ = null;
        }
        if (serverVerifyTelCodeBuilder_ == null) {
          serverVerifyTelCode_ = null;
        } else {
          serverVerifyTelCode_ = null;
          serverVerifyTelCodeBuilder_ = null;
        }
        if (serverQueryShareListBuilder_ == null) {
          serverQueryShareList_ = null;
        } else {
          serverQueryShareList_ = null;
          serverQueryShareListBuilder_ = null;
        }
        if (serverQueryShareDetailBuilder_ == null) {
          serverQueryShareDetail_ = null;
        } else {
          serverQueryShareDetail_ = null;
          serverQueryShareDetailBuilder_ = null;
        }
        if (serverGetTaskAwardBuilder_ == null) {
          serverGetTaskAward_ = null;
        } else {
          serverGetTaskAward_ = null;
          serverGetTaskAwardBuilder_ = null;
        }
        if (serverSharePackageBuilder_ == null) {
          serverSharePackage_ = null;
        } else {
          serverSharePackage_ = null;
          serverSharePackageBuilder_ = null;
        }
        if (serverGetAwardListBuilder_ == null) {
          serverGetAwardList_ = null;
        } else {
          serverGetAwardList_ = null;
          serverGetAwardListBuilder_ = null;
        }
        if (serverCheckConnectBuilder_ == null) {
          serverCheckConnect_ = null;
        } else {
          serverCheckConnect_ = null;
          serverCheckConnectBuilder_ = null;
        }
        if (serverGetPFListBuilder_ == null) {
          serverGetPFList_ = null;
        } else {
          serverGetPFList_ = null;
          serverGetPFListBuilder_ = null;
        }
        if (serverChoosePFBuilder_ == null) {
          serverChoosePF_ = null;
        } else {
          serverChoosePF_ = null;
          serverChoosePFBuilder_ = null;
        }
        if (serverGetHistoryRankBuilder_ == null) {
          serverGetHistoryRank_ = null;
        } else {
          serverGetHistoryRank_ = null;
          serverGetHistoryRankBuilder_ = null;
        }
        if (serverH5RewardBuilder_ == null) {
          serverH5Reward_ = null;
        } else {
          serverH5Reward_ = null;
          serverH5RewardBuilder_ = null;
        }
        if (serverNewDrawWinCupBuilder_ == null) {
          serverNewDrawWinCup_ = null;
        } else {
          serverNewDrawWinCup_ = null;
          serverNewDrawWinCupBuilder_ = null;
        }
        if (serverGetNewHallInfoBuilder_ == null) {
          serverGetNewHallInfo_ = null;
        } else {
          serverGetNewHallInfo_ = null;
          serverGetNewHallInfoBuilder_ = null;
        }
        if (serverGetSkinInfoBuilder_ == null) {
          serverGetSkinInfo_ = null;
        } else {
          serverGetSkinInfo_ = null;
          serverGetSkinInfoBuilder_ = null;
        }
        if (serverEquipSkinBuilder_ == null) {
          serverEquipSkin_ = null;
        } else {
          serverEquipSkin_ = null;
          serverEquipSkinBuilder_ = null;
        }
        if (serverGetStoreDataBuilder_ == null) {
          serverGetStoreData_ = null;
        } else {
          serverGetStoreData_ = null;
          serverGetStoreDataBuilder_ = null;
        }
        if (serverConvertGoodsBuilder_ == null) {
          serverConvertGoods_ = null;
        } else {
          serverConvertGoods_ = null;
          serverConvertGoodsBuilder_ = null;
        }
        if (serverWXPayResultBuilder_ == null) {
          serverWXPayResult_ = null;
        } else {
          serverWXPayResult_ = null;
          serverWXPayResultBuilder_ = null;
        }
        if (serverBuyOrderGoodsBuilder_ == null) {
          serverBuyOrderGoods_ = null;
        } else {
          serverBuyOrderGoods_ = null;
          serverBuyOrderGoodsBuilder_ = null;
        }
        if (serverGetFirstChargeBuilder_ == null) {
          serverGetFirstCharge_ = null;
        } else {
          serverGetFirstCharge_ = null;
          serverGetFirstChargeBuilder_ = null;
        }
        if (serverGetDailyGiftBuilder_ == null) {
          serverGetDailyGift_ = null;
        } else {
          serverGetDailyGift_ = null;
          serverGetDailyGiftBuilder_ = null;
        }
        if (serverGetMonthCardBuilder_ == null) {
          serverGetMonthCard_ = null;
        } else {
          serverGetMonthCard_ = null;
          serverGetMonthCardBuilder_ = null;
        }
        if (serverGetResurgenceGiftBuilder_ == null) {
          serverGetResurgenceGift_ = null;
        } else {
          serverGetResurgenceGift_ = null;
          serverGetResurgenceGiftBuilder_ = null;
        }
        if (serverGetAnnounceBuilder_ == null) {
          serverGetAnnounce_ = null;
        } else {
          serverGetAnnounce_ = null;
          serverGetAnnounceBuilder_ = null;
        }
        if (serverGetMailBuilder_ == null) {
          serverGetMail_ = null;
        } else {
          serverGetMail_ = null;
          serverGetMailBuilder_ = null;
        }
        if (serverGetMailRewardBuilder_ == null) {
          serverGetMailReward_ = null;
        } else {
          serverGetMailReward_ = null;
          serverGetMailRewardBuilder_ = null;
        }
        if (serverDelMailBuilder_ == null) {
          serverDelMail_ = null;
        } else {
          serverDelMail_ = null;
          serverDelMailBuilder_ = null;
        }
        if (serverReadMailBuilder_ == null) {
          serverReadMail_ = null;
        } else {
          serverReadMail_ = null;
          serverReadMailBuilder_ = null;
        }
        if (serverDel2RBuilder_ == null) {
          serverDel2R_ = null;
        } else {
          serverDel2R_ = null;
          serverDel2RBuilder_ = null;
        }
        if (serverQueryDailyTaskBuilder_ == null) {
          serverQueryDailyTask_ = null;
        } else {
          serverQueryDailyTask_ = null;
          serverQueryDailyTaskBuilder_ = null;
        }
        if (serverGetDailyTaskAwardBuilder_ == null) {
          serverGetDailyTaskAward_ = null;
        } else {
          serverGetDailyTaskAward_ = null;
          serverGetDailyTaskAwardBuilder_ = null;
        }
        if (serverGetNoviceRewardBuilder_ == null) {
          serverGetNoviceReward_ = null;
        } else {
          serverGetNoviceReward_ = null;
          serverGetNoviceRewardBuilder_ = null;
        }
        if (serverQueryNoviceTaskBuilder_ == null) {
          serverQueryNoviceTask_ = null;
        } else {
          serverQueryNoviceTask_ = null;
          serverQueryNoviceTaskBuilder_ = null;
        }
        if (serverGetDTAwardBuilder_ == null) {
          serverGetDTAward_ = null;
        } else {
          serverGetDTAward_ = null;
          serverGetDTAwardBuilder_ = null;
        }
        if (serverGetReceiveAddrBuilder_ == null) {
          serverGetReceiveAddr_ = null;
        } else {
          serverGetReceiveAddr_ = null;
          serverGetReceiveAddrBuilder_ = null;
        }
        if (serverAlterReceiveAddrBuilder_ == null) {
          serverAlterReceiveAddr_ = null;
        } else {
          serverAlterReceiveAddr_ = null;
          serverAlterReceiveAddrBuilder_ = null;
        }
        if (serverSnatchListBuilder_ == null) {
          serverSnatchList_ = null;
        } else {
          serverSnatchList_ = null;
          serverSnatchListBuilder_ = null;
        }
        if (serverSnatchItemDetailBuilder_ == null) {
          serverSnatchItemDetail_ = null;
        } else {
          serverSnatchItemDetail_ = null;
          serverSnatchItemDetailBuilder_ = null;
        }
        if (serverSnatchBetBuilder_ == null) {
          serverSnatchBet_ = null;
        } else {
          serverSnatchBet_ = null;
          serverSnatchBetBuilder_ = null;
        }
        if (serverSnatchAwardListBuilder_ == null) {
          serverSnatchAwardList_ = null;
        } else {
          serverSnatchAwardList_ = null;
          serverSnatchAwardListBuilder_ = null;
        }
        if (serverOwnSnatchRecordBuilder_ == null) {
          serverOwnSnatchRecord_ = null;
        } else {
          serverOwnSnatchRecord_ = null;
          serverOwnSnatchRecordBuilder_ = null;
        }
        if (serverSnatchItemHistoryBuilder_ == null) {
          serverSnatchItemHistory_ = null;
        } else {
          serverSnatchItemHistory_ = null;
          serverSnatchItemHistoryBuilder_ = null;
        }
        if (serverSnatchHistoryDetailBuilder_ == null) {
          serverSnatchHistoryDetail_ = null;
        } else {
          serverSnatchHistoryDetail_ = null;
          serverSnatchHistoryDetailBuilder_ = null;
        }
        if (serverSnatchGetAwardBuilder_ == null) {
          serverSnatchGetAward_ = null;
        } else {
          serverSnatchGetAward_ = null;
          serverSnatchGetAwardBuilder_ = null;
        }
        if (serverEnterDGBuilder_ == null) {
          serverEnterDG_ = null;
        } else {
          serverEnterDG_ = null;
          serverEnterDGBuilder_ = null;
        }
        if (serverDGLotteryBuilder_ == null) {
          serverDGLottery_ = null;
        } else {
          serverDGLottery_ = null;
          serverDGLotteryBuilder_ = null;
        }
        if (serverResetLotteryBuilder_ == null) {
          serverResetLottery_ = null;
        } else {
          serverResetLottery_ = null;
          serverResetLotteryBuilder_ = null;
        }
        if (serverExitDGBuilder_ == null) {
          serverExitDG_ = null;
        } else {
          serverExitDG_ = null;
          serverExitDGBuilder_ = null;
        }
        if (serverOpenDGBuilder_ == null) {
          serverOpenDG_ = null;
        } else {
          serverOpenDG_ = null;
          serverOpenDGBuilder_ = null;
        }
        if (serverOpenDDBuilder_ == null) {
          serverOpenDD_ = null;
        } else {
          serverOpenDD_ = null;
          serverOpenDDBuilder_ = null;
        }
        if (serverDDLotteryBuilder_ == null) {
          serverDDLottery_ = null;
        } else {
          serverDDLottery_ = null;
          serverDDLotteryBuilder_ = null;
        }
        if (serverExitDDBuilder_ == null) {
          serverExitDD_ = null;
        } else {
          serverExitDD_ = null;
          serverExitDDBuilder_ = null;
        }
        if (serverQueryPropBuilder_ == null) {
          serverQueryProp_ = null;
        } else {
          serverQueryProp_ = null;
          serverQueryPropBuilder_ = null;
        }
        if (serverUsePropBuilder_ == null) {
          serverUseProp_ = null;
        } else {
          serverUseProp_ = null;
          serverUsePropBuilder_ = null;
        }
        if (serverQueryPropCountBuilder_ == null) {
          serverQueryPropCount_ = null;
        } else {
          serverQueryPropCount_ = null;
          serverQueryPropCountBuilder_ = null;
        }
        if (serverMonthSignInfoBuilder_ == null) {
          serverMonthSignInfo_ = null;
        } else {
          serverMonthSignInfo_ = null;
          serverMonthSignInfoBuilder_ = null;
        }
        if (serverMonthSignBuilder_ == null) {
          serverMonthSign_ = null;
        } else {
          serverMonthSign_ = null;
          serverMonthSignBuilder_ = null;
        }
        if (serverGetCritRewardBuilder_ == null) {
          serverGetCritReward_ = null;
        } else {
          serverGetCritReward_ = null;
          serverGetCritRewardBuilder_ = null;
        }
        if (serverLTLotteryBuilder_ == null) {
          serverLTLottery_ = null;
        } else {
          serverLTLottery_ = null;
          serverLTLotteryBuilder_ = null;
        }
        if (serverGetTSRewardBuilder_ == null) {
          serverGetTSReward_ = null;
        } else {
          serverGetTSReward_ = null;
          serverGetTSRewardBuilder_ = null;
        }
        if (serverGetLuckInfoBuilder_ == null) {
          serverGetLuckInfo_ = null;
        } else {
          serverGetLuckInfo_ = null;
          serverGetLuckInfoBuilder_ = null;
        }
        if (serverGetVipInfoBuilder_ == null) {
          serverGetVipInfo_ = null;
        } else {
          serverGetVipInfo_ = null;
          serverGetVipInfoBuilder_ = null;
        }
        if (serverGetVipWeekBuilder_ == null) {
          serverGetVipWeek_ = null;
        } else {
          serverGetVipWeek_ = null;
          serverGetVipWeekBuilder_ = null;
        }
        if (bGameStartBuilder_ == null) {
          bGameStart_ = null;
        } else {
          bGameStart_ = null;
          bGameStartBuilder_ = null;
        }
        if (bDoCatchBuilder_ == null) {
          bDoCatch_ = null;
        } else {
          bDoCatch_ = null;
          bDoCatchBuilder_ = null;
        }
        if (bCatchResultBuilder_ == null) {
          bCatchResult_ = null;
        } else {
          bCatchResult_ = null;
          bCatchResultBuilder_ = null;
        }
        if (bPlayCardsBuilder_ == null) {
          bPlayCards_ = null;
        } else {
          bPlayCards_ = null;
          bPlayCardsBuilder_ = null;
        }
        if (bSendDiZhuCardBuilder_ == null) {
          bSendDiZhuCard_ = null;
        } else {
          bSendDiZhuCard_ = null;
          bSendDiZhuCardBuilder_ = null;
        }
        if (bNextPlayerBuilder_ == null) {
          bNextPlayer_ = null;
        } else {
          bNextPlayer_ = null;
          bNextPlayerBuilder_ = null;
        }
        if (bGameSettleBuilder_ == null) {
          bGameSettle_ = null;
        } else {
          bGameSettle_ = null;
          bGameSettleBuilder_ = null;
        }
        if (bRewardMessageBuilder_ == null) {
          bRewardMessage_ = null;
        } else {
          bRewardMessage_ = null;
          bRewardMessageBuilder_ = null;
        }
        if (bAutoPlayBuilder_ == null) {
          bAutoPlay_ = null;
        } else {
          bAutoPlay_ = null;
          bAutoPlayBuilder_ = null;
        }
        if (bRoomIdUrlBuilder_ == null) {
          bRoomIdUrl_ = null;
        } else {
          bRoomIdUrl_ = null;
          bRoomIdUrlBuilder_ = null;
        }
        if (bAwardDialogBuilder_ == null) {
          bAwardDialog_ = null;
        } else {
          bAwardDialog_ = null;
          bAwardDialogBuilder_ = null;
        }
        if (bBuySuccessBuilder_ == null) {
          bBuySuccess_ = null;
        } else {
          bBuySuccess_ = null;
          bBuySuccessBuilder_ = null;
        }
        if (bRedDotPushBuilder_ == null) {
          bRedDotPush_ = null;
        } else {
          bRedDotPush_ = null;
          bRedDotPushBuilder_ = null;
        }
        if (bForceAnnounceBuilder_ == null) {
          bForceAnnounce_ = null;
        } else {
          bForceAnnounce_ = null;
          bForceAnnounceBuilder_ = null;
        }
        if (bDGameMessageBuilder_ == null) {
          bDGameMessage_ = null;
        } else {
          bDGameMessage_ = null;
          bDGameMessageBuilder_ = null;
        }
        if (bDGOverBuilder_ == null) {
          bDGOver_ = null;
        } else {
          bDGOver_ = null;
          bDGOverBuilder_ = null;
        }
        if (bDDOverBuilder_ == null) {
          bDDOver_ = null;
        } else {
          bDDOver_ = null;
          bDDOverBuilder_ = null;
        }
        if (bDDInfoBuilder_ == null) {
          bDDInfo_ = null;
        } else {
          bDDInfo_ = null;
          bDDInfoBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kys.util.netty.proto.ProtoMsg.internal_static_com_kys_util_netty_proto_ServerResponse_descriptor;
      }

      public com.kys.util.netty.proto.ProtoMsg.ServerResponse getDefaultInstanceForType() {
        return com.kys.util.netty.proto.ProtoMsg.ServerResponse.getDefaultInstance();
      }

      public com.kys.util.netty.proto.ProtoMsg.ServerResponse build() {
        com.kys.util.netty.proto.ProtoMsg.ServerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kys.util.netty.proto.ProtoMsg.ServerResponse buildPartial() {
        com.kys.util.netty.proto.ProtoMsg.ServerResponse result = new com.kys.util.netty.proto.ProtoMsg.ServerResponse(this);
        result.methodId_ = methodId_;
        result.result_ = result_;
        result.errStr_ = errStr_;
        if (serverLoginBuilder_ == null) {
          result.serverLogin_ = serverLogin_;
        } else {
          result.serverLogin_ = serverLoginBuilder_.build();
        }
        if (serverPlayerInfoBuilder_ == null) {
          result.serverPlayerInfo_ = serverPlayerInfo_;
        } else {
          result.serverPlayerInfo_ = serverPlayerInfoBuilder_.build();
        }
        if (serverSendHallHeartBeatBuilder_ == null) {
          result.serverSendHallHeartBeat_ = serverSendHallHeartBeat_;
        } else {
          result.serverSendHallHeartBeat_ = serverSendHallHeartBeatBuilder_.build();
        }
        if (serverSendGameHeartBeatBuilder_ == null) {
          result.serverSendGameHeartBeat_ = serverSendGameHeartBeat_;
        } else {
          result.serverSendGameHeartBeat_ = serverSendGameHeartBeatBuilder_.build();
        }
        if (serverGetUserInfoBuilder_ == null) {
          result.serverGetUserInfo_ = serverGetUserInfo_;
        } else {
          result.serverGetUserInfo_ = serverGetUserInfoBuilder_.build();
        }
        if (serverQuickJoinBuilder_ == null) {
          result.serverQuickJoin_ = serverQuickJoin_;
        } else {
          result.serverQuickJoin_ = serverQuickJoinBuilder_.build();
        }
        if (serverEnterRoomBuilder_ == null) {
          result.serverEnterRoom_ = serverEnterRoom_;
        } else {
          result.serverEnterRoom_ = serverEnterRoomBuilder_.build();
        }
        if (serverRecoverGameBuilder_ == null) {
          result.serverRecoverGame_ = serverRecoverGame_;
        } else {
          result.serverRecoverGame_ = serverRecoverGameBuilder_.build();
        }
        if (serverDoCatchBuilder_ == null) {
          result.serverDoCatch_ = serverDoCatch_;
        } else {
          result.serverDoCatch_ = serverDoCatchBuilder_.build();
        }
        if (serverPlayCardsBuilder_ == null) {
          result.serverPlayCards_ = serverPlayCards_;
        } else {
          result.serverPlayCards_ = serverPlayCardsBuilder_.build();
        }
        if (serverAutoPlayBuilder_ == null) {
          result.serverAutoPlay_ = serverAutoPlay_;
        } else {
          result.serverAutoPlay_ = serverAutoPlayBuilder_.build();
        }
        if (serverLeaveRoomBuilder_ == null) {
          result.serverLeaveRoom_ = serverLeaveRoom_;
        } else {
          result.serverLeaveRoom_ = serverLeaveRoomBuilder_.build();
        }
        if (serverCancleJoinBuilder_ == null) {
          result.serverCancleJoin_ = serverCancleJoin_;
        } else {
          result.serverCancleJoin_ = serverCancleJoinBuilder_.build();
        }
        if (serverQueryIndexBuilder_ == null) {
          result.serverQueryIndex_ = serverQueryIndex_;
        } else {
          result.serverQueryIndex_ = serverQueryIndexBuilder_.build();
        }
        if (serverRetryReturnGameBuilder_ == null) {
          result.serverRetryReturnGame_ = serverRetryReturnGame_;
        } else {
          result.serverRetryReturnGame_ = serverRetryReturnGameBuilder_.build();
        }
        if (serverGetRankListBuilder_ == null) {
          result.serverGetRankList_ = serverGetRankList_;
        } else {
          result.serverGetRankList_ = serverGetRankListBuilder_.build();
        }
        if (serverGetSignupRewardListBuilder_ == null) {
          result.serverGetSignupRewardList_ = serverGetSignupRewardList_;
        } else {
          result.serverGetSignupRewardList_ = serverGetSignupRewardListBuilder_.build();
        }
        if (serverGetHallInfoBuilder_ == null) {
          result.serverGetHallInfo_ = serverGetHallInfo_;
        } else {
          result.serverGetHallInfo_ = serverGetHallInfoBuilder_.build();
        }
        if (serverSignupBuilder_ == null) {
          result.serverSignup_ = serverSignup_;
        } else {
          result.serverSignup_ = serverSignupBuilder_.build();
        }
        if (serverRewardMessageBuilder_ == null) {
          result.serverRewardMessage_ = serverRewardMessage_;
        } else {
          result.serverRewardMessage_ = serverRewardMessageBuilder_.build();
        }
        if (serverDrawWinCupBuilder_ == null) {
          result.serverDrawWinCup_ = serverDrawWinCup_;
        } else {
          result.serverDrawWinCup_ = serverDrawWinCupBuilder_.build();
        }
        if (serverGetRoomConfigBuilder_ == null) {
          result.serverGetRoomConfig_ = serverGetRoomConfig_;
        } else {
          result.serverGetRoomConfig_ = serverGetRoomConfigBuilder_.build();
        }
        if (serverGetRoomCardConfigBuilder_ == null) {
          result.serverGetRoomCardConfig_ = serverGetRoomCardConfig_;
        } else {
          result.serverGetRoomCardConfig_ = serverGetRoomCardConfigBuilder_.build();
        }
        if (serverCreateRoomBuilder_ == null) {
          result.serverCreateRoom_ = serverCreateRoom_;
        } else {
          result.serverCreateRoom_ = serverCreateRoomBuilder_.build();
        }
        if (serverGetMonthCardDiamondBuilder_ == null) {
          result.serverGetMonthCardDiamond_ = serverGetMonthCardDiamond_;
        } else {
          result.serverGetMonthCardDiamond_ = serverGetMonthCardDiamondBuilder_.build();
        }
        if (serverGetLotteryCountBuilder_ == null) {
          result.serverGetLotteryCount_ = serverGetLotteryCount_;
        } else {
          result.serverGetLotteryCount_ = serverGetLotteryCountBuilder_.build();
        }
        if (serverGetRoomInfoBuilder_ == null) {
          result.serverGetRoomInfo_ = serverGetRoomInfo_;
        } else {
          result.serverGetRoomInfo_ = serverGetRoomInfoBuilder_.build();
        }
        if (serverSendTelCodeBuilder_ == null) {
          result.serverSendTelCode_ = serverSendTelCode_;
        } else {
          result.serverSendTelCode_ = serverSendTelCodeBuilder_.build();
        }
        if (serverVerifyTelCodeBuilder_ == null) {
          result.serverVerifyTelCode_ = serverVerifyTelCode_;
        } else {
          result.serverVerifyTelCode_ = serverVerifyTelCodeBuilder_.build();
        }
        if (serverQueryShareListBuilder_ == null) {
          result.serverQueryShareList_ = serverQueryShareList_;
        } else {
          result.serverQueryShareList_ = serverQueryShareListBuilder_.build();
        }
        if (serverQueryShareDetailBuilder_ == null) {
          result.serverQueryShareDetail_ = serverQueryShareDetail_;
        } else {
          result.serverQueryShareDetail_ = serverQueryShareDetailBuilder_.build();
        }
        if (serverGetTaskAwardBuilder_ == null) {
          result.serverGetTaskAward_ = serverGetTaskAward_;
        } else {
          result.serverGetTaskAward_ = serverGetTaskAwardBuilder_.build();
        }
        if (serverSharePackageBuilder_ == null) {
          result.serverSharePackage_ = serverSharePackage_;
        } else {
          result.serverSharePackage_ = serverSharePackageBuilder_.build();
        }
        if (serverGetAwardListBuilder_ == null) {
          result.serverGetAwardList_ = serverGetAwardList_;
        } else {
          result.serverGetAwardList_ = serverGetAwardListBuilder_.build();
        }
        if (serverCheckConnectBuilder_ == null) {
          result.serverCheckConnect_ = serverCheckConnect_;
        } else {
          result.serverCheckConnect_ = serverCheckConnectBuilder_.build();
        }
        if (serverGetPFListBuilder_ == null) {
          result.serverGetPFList_ = serverGetPFList_;
        } else {
          result.serverGetPFList_ = serverGetPFListBuilder_.build();
        }
        if (serverChoosePFBuilder_ == null) {
          result.serverChoosePF_ = serverChoosePF_;
        } else {
          result.serverChoosePF_ = serverChoosePFBuilder_.build();
        }
        if (serverGetHistoryRankBuilder_ == null) {
          result.serverGetHistoryRank_ = serverGetHistoryRank_;
        } else {
          result.serverGetHistoryRank_ = serverGetHistoryRankBuilder_.build();
        }
        if (serverH5RewardBuilder_ == null) {
          result.serverH5Reward_ = serverH5Reward_;
        } else {
          result.serverH5Reward_ = serverH5RewardBuilder_.build();
        }
        if (serverNewDrawWinCupBuilder_ == null) {
          result.serverNewDrawWinCup_ = serverNewDrawWinCup_;
        } else {
          result.serverNewDrawWinCup_ = serverNewDrawWinCupBuilder_.build();
        }
        if (serverGetNewHallInfoBuilder_ == null) {
          result.serverGetNewHallInfo_ = serverGetNewHallInfo_;
        } else {
          result.serverGetNewHallInfo_ = serverGetNewHallInfoBuilder_.build();
        }
        if (serverGetSkinInfoBuilder_ == null) {
          result.serverGetSkinInfo_ = serverGetSkinInfo_;
        } else {
          result.serverGetSkinInfo_ = serverGetSkinInfoBuilder_.build();
        }
        if (serverEquipSkinBuilder_ == null) {
          result.serverEquipSkin_ = serverEquipSkin_;
        } else {
          result.serverEquipSkin_ = serverEquipSkinBuilder_.build();
        }
        if (serverGetStoreDataBuilder_ == null) {
          result.serverGetStoreData_ = serverGetStoreData_;
        } else {
          result.serverGetStoreData_ = serverGetStoreDataBuilder_.build();
        }
        if (serverConvertGoodsBuilder_ == null) {
          result.serverConvertGoods_ = serverConvertGoods_;
        } else {
          result.serverConvertGoods_ = serverConvertGoodsBuilder_.build();
        }
        if (serverWXPayResultBuilder_ == null) {
          result.serverWXPayResult_ = serverWXPayResult_;
        } else {
          result.serverWXPayResult_ = serverWXPayResultBuilder_.build();
        }
        if (serverBuyOrderGoodsBuilder_ == null) {
          result.serverBuyOrderGoods_ = serverBuyOrderGoods_;
        } else {
          result.serverBuyOrderGoods_ = serverBuyOrderGoodsBuilder_.build();
        }
        if (serverGetFirstChargeBuilder_ == null) {
          result.serverGetFirstCharge_ = serverGetFirstCharge_;
        } else {
          result.serverGetFirstCharge_ = serverGetFirstChargeBuilder_.build();
        }
        if (serverGetDailyGiftBuilder_ == null) {
          result.serverGetDailyGift_ = serverGetDailyGift_;
        } else {
          result.serverGetDailyGift_ = serverGetDailyGiftBuilder_.build();
        }
        if (serverGetMonthCardBuilder_ == null) {
          result.serverGetMonthCard_ = serverGetMonthCard_;
        } else {
          result.serverGetMonthCard_ = serverGetMonthCardBuilder_.build();
        }
        if (serverGetResurgenceGiftBuilder_ == null) {
          result.serverGetResurgenceGift_ = serverGetResurgenceGift_;
        } else {
          result.serverGetResurgenceGift_ = serverGetResurgenceGiftBuilder_.build();
        }
        if (serverGetAnnounceBuilder_ == null) {
          result.serverGetAnnounce_ = serverGetAnnounce_;
        } else {
          result.serverGetAnnounce_ = serverGetAnnounceBuilder_.build();
        }
        if (serverGetMailBuilder_ == null) {
          result.serverGetMail_ = serverGetMail_;
        } else {
          result.serverGetMail_ = serverGetMailBuilder_.build();
        }
        if (serverGetMailRewardBuilder_ == null) {
          result.serverGetMailReward_ = serverGetMailReward_;
        } else {
          result.serverGetMailReward_ = serverGetMailRewardBuilder_.build();
        }
        if (serverDelMailBuilder_ == null) {
          result.serverDelMail_ = serverDelMail_;
        } else {
          result.serverDelMail_ = serverDelMailBuilder_.build();
        }
        if (serverReadMailBuilder_ == null) {
          result.serverReadMail_ = serverReadMail_;
        } else {
          result.serverReadMail_ = serverReadMailBuilder_.build();
        }
        if (serverDel2RBuilder_ == null) {
          result.serverDel2R_ = serverDel2R_;
        } else {
          result.serverDel2R_ = serverDel2RBuilder_.build();
        }
        if (serverQueryDailyTaskBuilder_ == null) {
          result.serverQueryDailyTask_ = serverQueryDailyTask_;
        } else {
          result.serverQueryDailyTask_ = serverQueryDailyTaskBuilder_.build();
        }
        if (serverGetDailyTaskAwardBuilder_ == null) {
          result.serverGetDailyTaskAward_ = serverGetDailyTaskAward_;
        } else {
          result.serverGetDailyTaskAward_ = serverGetDailyTaskAwardBuilder_.build();
        }
        if (serverGetNoviceRewardBuilder_ == null) {
          result.serverGetNoviceReward_ = serverGetNoviceReward_;
        } else {
          result.serverGetNoviceReward_ = serverGetNoviceRewardBuilder_.build();
        }
        if (serverQueryNoviceTaskBuilder_ == null) {
          result.serverQueryNoviceTask_ = serverQueryNoviceTask_;
        } else {
          result.serverQueryNoviceTask_ = serverQueryNoviceTaskBuilder_.build();
        }
        if (serverGetDTAwardBuilder_ == null) {
          result.serverGetDTAward_ = serverGetDTAward_;
        } else {
          result.serverGetDTAward_ = serverGetDTAwardBuilder_.build();
        }
        if (serverGetReceiveAddrBuilder_ == null) {
          result.serverGetReceiveAddr_ = serverGetReceiveAddr_;
        } else {
          result.serverGetReceiveAddr_ = serverGetReceiveAddrBuilder_.build();
        }
        if (serverAlterReceiveAddrBuilder_ == null) {
          result.serverAlterReceiveAddr_ = serverAlterReceiveAddr_;
        } else {
          result.serverAlterReceiveAddr_ = serverAlterReceiveAddrBuilder_.build();
        }
        if (serverSnatchListBuilder_ == null) {
          result.serverSnatchList_ = serverSnatchList_;
        } else {
          result.serverSnatchList_ = serverSnatchListBuilder_.build();
        }
        if (serverSnatchItemDetailBuilder_ == null) {
          result.serverSnatchItemDetail_ = serverSnatchItemDetail_;
        } else {
          result.serverSnatchItemDetail_ = serverSnatchItemDetailBuilder_.build();
        }
        if (serverSnatchBetBuilder_ == null) {
          result.serverSnatchBet_ = serverSnatchBet_;
        } else {
          result.serverSnatchBet_ = serverSnatchBetBuilder_.build();
        }
        if (serverSnatchAwardListBuilder_ == null) {
          result.serverSnatchAwardList_ = serverSnatchAwardList_;
        } else {
          result.serverSnatchAwardList_ = serverSnatchAwardListBuilder_.build();
        }
        if (serverOwnSnatchRecordBuilder_ == null) {
          result.serverOwnSnatchRecord_ = serverOwnSnatchRecord_;
        } else {
          result.serverOwnSnatchRecord_ = serverOwnSnatchRecordBuilder_.build();
        }
        if (serverSnatchItemHistoryBuilder_ == null) {
          result.serverSnatchItemHistory_ = serverSnatchItemHistory_;
        } else {
          result.serverSnatchItemHistory_ = serverSnatchItemHistoryBuilder_.build();
        }
        if (serverSnatchHistoryDetailBuilder_ == null) {
          result.serverSnatchHistoryDetail_ = serverSnatchHistoryDetail_;
        } else {
          result.serverSnatchHistoryDetail_ = serverSnatchHistoryDetailBuilder_.build();
        }
        if (serverSnatchGetAwardBuilder_ == null) {
          result.serverSnatchGetAward_ = serverSnatchGetAward_;
        } else {
          result.serverSnatchGetAward_ = serverSnatchGetAwardBuilder_.build();
        }
        if (serverEnterDGBuilder_ == null) {
          result.serverEnterDG_ = serverEnterDG_;
        } else {
          result.serverEnterDG_ = serverEnterDGBuilder_.build();
        }
        if (serverDGLotteryBuilder_ == null) {
          result.serverDGLottery_ = serverDGLottery_;
        } else {
          result.serverDGLottery_ = serverDGLotteryBuilder_.build();
        }
        if (serverResetLotteryBuilder_ == null) {
          result.serverResetLottery_ = serverResetLottery_;
        } else {
          result.serverResetLottery_ = serverResetLotteryBuilder_.build();
        }
        if (serverExitDGBuilder_ == null) {
          result.serverExitDG_ = serverExitDG_;
        } else {
          result.serverExitDG_ = serverExitDGBuilder_.build();
        }
        if (serverOpenDGBuilder_ == null) {
          result.serverOpenDG_ = serverOpenDG_;
        } else {
          result.serverOpenDG_ = serverOpenDGBuilder_.build();
        }
        if (serverOpenDDBuilder_ == null) {
          result.serverOpenDD_ = serverOpenDD_;
        } else {
          result.serverOpenDD_ = serverOpenDDBuilder_.build();
        }
        if (serverDDLotteryBuilder_ == null) {
          result.serverDDLottery_ = serverDDLottery_;
        } else {
          result.serverDDLottery_ = serverDDLotteryBuilder_.build();
        }
        if (serverExitDDBuilder_ == null) {
          result.serverExitDD_ = serverExitDD_;
        } else {
          result.serverExitDD_ = serverExitDDBuilder_.build();
        }
        if (serverQueryPropBuilder_ == null) {
          result.serverQueryProp_ = serverQueryProp_;
        } else {
          result.serverQueryProp_ = serverQueryPropBuilder_.build();
        }
        if (serverUsePropBuilder_ == null) {
          result.serverUseProp_ = serverUseProp_;
        } else {
          result.serverUseProp_ = serverUsePropBuilder_.build();
        }
        if (serverQueryPropCountBuilder_ == null) {
          result.serverQueryPropCount_ = serverQueryPropCount_;
        } else {
          result.serverQueryPropCount_ = serverQueryPropCountBuilder_.build();
        }
        if (serverMonthSignInfoBuilder_ == null) {
          result.serverMonthSignInfo_ = serverMonthSignInfo_;
        } else {
          result.serverMonthSignInfo_ = serverMonthSignInfoBuilder_.build();
        }
        if (serverMonthSignBuilder_ == null) {
          result.serverMonthSign_ = serverMonthSign_;
        } else {
          result.serverMonthSign_ = serverMonthSignBuilder_.build();
        }
        if (serverGetCritRewardBuilder_ == null) {
          result.serverGetCritReward_ = serverGetCritReward_;
        } else {
          result.serverGetCritReward_ = serverGetCritRewardBuilder_.build();
        }
        if (serverLTLotteryBuilder_ == null) {
          result.serverLTLottery_ = serverLTLottery_;
        } else {
          result.serverLTLottery_ = serverLTLotteryBuilder_.build();
        }
        if (serverGetTSRewardBuilder_ == null) {
          result.serverGetTSReward_ = serverGetTSReward_;
        } else {
          result.serverGetTSReward_ = serverGetTSRewardBuilder_.build();
        }
        if (serverGetLuckInfoBuilder_ == null) {
          result.serverGetLuckInfo_ = serverGetLuckInfo_;
        } else {
          result.serverGetLuckInfo_ = serverGetLuckInfoBuilder_.build();
        }
        if (serverGetVipInfoBuilder_ == null) {
          result.serverGetVipInfo_ = serverGetVipInfo_;
        } else {
          result.serverGetVipInfo_ = serverGetVipInfoBuilder_.build();
        }
        if (serverGetVipWeekBuilder_ == null) {
          result.serverGetVipWeek_ = serverGetVipWeek_;
        } else {
          result.serverGetVipWeek_ = serverGetVipWeekBuilder_.build();
        }
        if (bGameStartBuilder_ == null) {
          result.bGameStart_ = bGameStart_;
        } else {
          result.bGameStart_ = bGameStartBuilder_.build();
        }
        if (bDoCatchBuilder_ == null) {
          result.bDoCatch_ = bDoCatch_;
        } else {
          result.bDoCatch_ = bDoCatchBuilder_.build();
        }
        if (bCatchResultBuilder_ == null) {
          result.bCatchResult_ = bCatchResult_;
        } else {
          result.bCatchResult_ = bCatchResultBuilder_.build();
        }
        if (bPlayCardsBuilder_ == null) {
          result.bPlayCards_ = bPlayCards_;
        } else {
          result.bPlayCards_ = bPlayCardsBuilder_.build();
        }
        if (bSendDiZhuCardBuilder_ == null) {
          result.bSendDiZhuCard_ = bSendDiZhuCard_;
        } else {
          result.bSendDiZhuCard_ = bSendDiZhuCardBuilder_.build();
        }
        if (bNextPlayerBuilder_ == null) {
          result.bNextPlayer_ = bNextPlayer_;
        } else {
          result.bNextPlayer_ = bNextPlayerBuilder_.build();
        }
        if (bGameSettleBuilder_ == null) {
          result.bGameSettle_ = bGameSettle_;
        } else {
          result.bGameSettle_ = bGameSettleBuilder_.build();
        }
        if (bRewardMessageBuilder_ == null) {
          result.bRewardMessage_ = bRewardMessage_;
        } else {
          result.bRewardMessage_ = bRewardMessageBuilder_.build();
        }
        if (bAutoPlayBuilder_ == null) {
          result.bAutoPlay_ = bAutoPlay_;
        } else {
          result.bAutoPlay_ = bAutoPlayBuilder_.build();
        }
        if (bRoomIdUrlBuilder_ == null) {
          result.bRoomIdUrl_ = bRoomIdUrl_;
        } else {
          result.bRoomIdUrl_ = bRoomIdUrlBuilder_.build();
        }
        if (bAwardDialogBuilder_ == null) {
          result.bAwardDialog_ = bAwardDialog_;
        } else {
          result.bAwardDialog_ = bAwardDialogBuilder_.build();
        }
        if (bBuySuccessBuilder_ == null) {
          result.bBuySuccess_ = bBuySuccess_;
        } else {
          result.bBuySuccess_ = bBuySuccessBuilder_.build();
        }
        if (bRedDotPushBuilder_ == null) {
          result.bRedDotPush_ = bRedDotPush_;
        } else {
          result.bRedDotPush_ = bRedDotPushBuilder_.build();
        }
        if (bForceAnnounceBuilder_ == null) {
          result.bForceAnnounce_ = bForceAnnounce_;
        } else {
          result.bForceAnnounce_ = bForceAnnounceBuilder_.build();
        }
        if (bDGameMessageBuilder_ == null) {
          result.bDGameMessage_ = bDGameMessage_;
        } else {
          result.bDGameMessage_ = bDGameMessageBuilder_.build();
        }
        if (bDGOverBuilder_ == null) {
          result.bDGOver_ = bDGOver_;
        } else {
          result.bDGOver_ = bDGOverBuilder_.build();
        }
        if (bDDOverBuilder_ == null) {
          result.bDDOver_ = bDDOver_;
        } else {
          result.bDDOver_ = bDDOverBuilder_.build();
        }
        if (bDDInfoBuilder_ == null) {
          result.bDDInfo_ = bDDInfo_;
        } else {
          result.bDDInfo_ = bDDInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kys.util.netty.proto.ProtoMsg.ServerResponse) {
          return mergeFrom((com.kys.util.netty.proto.ProtoMsg.ServerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kys.util.netty.proto.ProtoMsg.ServerResponse other) {
        if (other == com.kys.util.netty.proto.ProtoMsg.ServerResponse.getDefaultInstance()) return this;
        if (other.getMethodId() != 0) {
          setMethodId(other.getMethodId());
        }
        if (other.result_ != 0) {
          setResultValue(other.getResultValue());
        }
        if (!other.getErrStr().isEmpty()) {
          errStr_ = other.errStr_;
          onChanged();
        }
        if (other.hasServerLogin()) {
          mergeServerLogin(other.getServerLogin());
        }
        if (other.hasServerPlayerInfo()) {
          mergeServerPlayerInfo(other.getServerPlayerInfo());
        }
        if (other.hasServerSendHallHeartBeat()) {
          mergeServerSendHallHeartBeat(other.getServerSendHallHeartBeat());
        }
        if (other.hasServerSendGameHeartBeat()) {
          mergeServerSendGameHeartBeat(other.getServerSendGameHeartBeat());
        }
        if (other.hasServerGetUserInfo()) {
          mergeServerGetUserInfo(other.getServerGetUserInfo());
        }
        if (other.hasServerQuickJoin()) {
          mergeServerQuickJoin(other.getServerQuickJoin());
        }
        if (other.hasServerEnterRoom()) {
          mergeServerEnterRoom(other.getServerEnterRoom());
        }
        if (other.hasServerRecoverGame()) {
          mergeServerRecoverGame(other.getServerRecoverGame());
        }
        if (other.hasServerDoCatch()) {
          mergeServerDoCatch(other.getServerDoCatch());
        }
        if (other.hasServerPlayCards()) {
          mergeServerPlayCards(other.getServerPlayCards());
        }
        if (other.hasServerAutoPlay()) {
          mergeServerAutoPlay(other.getServerAutoPlay());
        }
        if (other.hasServerLeaveRoom()) {
          mergeServerLeaveRoom(other.getServerLeaveRoom());
        }
        if (other.hasServerCancleJoin()) {
          mergeServerCancleJoin(other.getServerCancleJoin());
        }
        if (other.hasServerQueryIndex()) {
          mergeServerQueryIndex(other.getServerQueryIndex());
        }
        if (other.hasServerRetryReturnGame()) {
          mergeServerRetryReturnGame(other.getServerRetryReturnGame());
        }
        if (other.hasServerGetRankList()) {
          mergeServerGetRankList(other.getServerGetRankList());
        }
        if (other.hasServerGetSignupRewardList()) {
          mergeServerGetSignupRewardList(other.getServerGetSignupRewardList());
        }
        if (other.hasServerGetHallInfo()) {
          mergeServerGetHallInfo(other.getServerGetHallInfo());
        }
        if (other.hasServerSignup()) {
          mergeServerSignup(other.getServerSignup());
        }
        if (other.hasServerRewardMessage()) {
          mergeServerRewardMessage(other.getServerRewardMessage());
        }
        if (other.hasServerDrawWinCup()) {
          mergeServerDrawWinCup(other.getServerDrawWinCup());
        }
        if (other.hasServerGetRoomConfig()) {
          mergeServerGetRoomConfig(other.getServerGetRoomConfig());
        }
        if (other.hasServerGetRoomCardConfig()) {
          mergeServerGetRoomCardConfig(other.getServerGetRoomCardConfig());
        }
        if (other.hasServerCreateRoom()) {
          mergeServerCreateRoom(other.getServerCreateRoom());
        }
        if (other.hasServerGetMonthCardDiamond()) {
          mergeServerGetMonthCardDiamond(other.getServerGetMonthCardDiamond());
        }
        if (other.hasServerGetLotteryCount()) {
          mergeServerGetLotteryCount(other.getServerGetLotteryCount());
        }
        if (other.hasServerGetRoomInfo()) {
          mergeServerGetRoomInfo(other.getServerGetRoomInfo());
        }
        if (other.hasServerSendTelCode()) {
          mergeServerSendTelCode(other.getServerSendTelCode());
        }
        if (other.hasServerVerifyTelCode()) {
          mergeServerVerifyTelCode(other.getServerVerifyTelCode());
        }
        if (other.hasServerQueryShareList()) {
          mergeServerQueryShareList(other.getServerQueryShareList());
        }
        if (other.hasServerQueryShareDetail()) {
          mergeServerQueryShareDetail(other.getServerQueryShareDetail());
        }
        if (other.hasServerGetTaskAward()) {
          mergeServerGetTaskAward(other.getServerGetTaskAward());
        }
        if (other.hasServerSharePackage()) {
          mergeServerSharePackage(other.getServerSharePackage());
        }
        if (other.hasServerGetAwardList()) {
          mergeServerGetAwardList(other.getServerGetAwardList());
        }
        if (other.hasServerCheckConnect()) {
          mergeServerCheckConnect(other.getServerCheckConnect());
        }
        if (other.hasServerGetPFList()) {
          mergeServerGetPFList(other.getServerGetPFList());
        }
        if (other.hasServerChoosePF()) {
          mergeServerChoosePF(other.getServerChoosePF());
        }
        if (other.hasServerGetHistoryRank()) {
          mergeServerGetHistoryRank(other.getServerGetHistoryRank());
        }
        if (other.hasServerH5Reward()) {
          mergeServerH5Reward(other.getServerH5Reward());
        }
        if (other.hasServerNewDrawWinCup()) {
          mergeServerNewDrawWinCup(other.getServerNewDrawWinCup());
        }
        if (other.hasServerGetNewHallInfo()) {
          mergeServerGetNewHallInfo(other.getServerGetNewHallInfo());
        }
        if (other.hasServerGetSkinInfo()) {
          mergeServerGetSkinInfo(other.getServerGetSkinInfo());
        }
        if (other.hasServerEquipSkin()) {
          mergeServerEquipSkin(other.getServerEquipSkin());
        }
        if (other.hasServerGetStoreData()) {
          mergeServerGetStoreData(other.getServerGetStoreData());
        }
        if (other.hasServerConvertGoods()) {
          mergeServerConvertGoods(other.getServerConvertGoods());
        }
        if (other.hasServerWXPayResult()) {
          mergeServerWXPayResult(other.getServerWXPayResult());
        }
        if (other.hasServerBuyOrderGoods()) {
          mergeServerBuyOrderGoods(other.getServerBuyOrderGoods());
        }
        if (other.hasServerGetFirstCharge()) {
          mergeServerGetFirstCharge(other.getServerGetFirstCharge());
        }
        if (other.hasServerGetDailyGift()) {
          mergeServerGetDailyGift(other.getServerGetDailyGift());
        }
        if (other.hasServerGetMonthCard()) {
          mergeServerGetMonthCard(other.getServerGetMonthCard());
        }
        if (other.hasServerGetResurgenceGift()) {
          mergeServerGetResurgenceGift(other.getServerGetResurgenceGift());
        }
        if (other.hasServerGetAnnounce()) {
          mergeServerGetAnnounce(other.getServerGetAnnounce());
        }
        if (other.hasServerGetMail()) {
          mergeServerGetMail(other.getServerGetMail());
        }
        if (other.hasServerGetMailReward()) {
          mergeServerGetMailReward(other.getServerGetMailReward());
        }
        if (other.hasServerDelMail()) {
          mergeServerDelMail(other.getServerDelMail());
        }
        if (other.hasServerReadMail()) {
          mergeServerReadMail(other.getServerReadMail());
        }
        if (other.hasServerDel2R()) {
          mergeServerDel2R(other.getServerDel2R());
        }
        if (other.hasServerQueryDailyTask()) {
          mergeServerQueryDailyTask(other.getServerQueryDailyTask());
        }
        if (other.hasServerGetDailyTaskAward()) {
          mergeServerGetDailyTaskAward(other.getServerGetDailyTaskAward());
        }
        if (other.hasServerGetNoviceReward()) {
          mergeServerGetNoviceReward(other.getServerGetNoviceReward());
        }
        if (other.hasServerQueryNoviceTask()) {
          mergeServerQueryNoviceTask(other.getServerQueryNoviceTask());
        }
        if (other.hasServerGetDTAward()) {
          mergeServerGetDTAward(other.getServerGetDTAward());
        }
        if (other.hasServerGetReceiveAddr()) {
          mergeServerGetReceiveAddr(other.getServerGetReceiveAddr());
        }
        if (other.hasServerAlterReceiveAddr()) {
          mergeServerAlterReceiveAddr(other.getServerAlterReceiveAddr());
        }
        if (other.hasServerSnatchList()) {
          mergeServerSnatchList(other.getServerSnatchList());
        }
        if (other.hasServerSnatchItemDetail()) {
          mergeServerSnatchItemDetail(other.getServerSnatchItemDetail());
        }
        if (other.hasServerSnatchBet()) {
          mergeServerSnatchBet(other.getServerSnatchBet());
        }
        if (other.hasServerSnatchAwardList()) {
          mergeServerSnatchAwardList(other.getServerSnatchAwardList());
        }
        if (other.hasServerOwnSnatchRecord()) {
          mergeServerOwnSnatchRecord(other.getServerOwnSnatchRecord());
        }
        if (other.hasServerSnatchItemHistory()) {
          mergeServerSnatchItemHistory(other.getServerSnatchItemHistory());
        }
        if (other.hasServerSnatchHistoryDetail()) {
          mergeServerSnatchHistoryDetail(other.getServerSnatchHistoryDetail());
        }
        if (other.hasServerSnatchGetAward()) {
          mergeServerSnatchGetAward(other.getServerSnatchGetAward());
        }
        if (other.hasServerEnterDG()) {
          mergeServerEnterDG(other.getServerEnterDG());
        }
        if (other.hasServerDGLottery()) {
          mergeServerDGLottery(other.getServerDGLottery());
        }
        if (other.hasServerResetLottery()) {
          mergeServerResetLottery(other.getServerResetLottery());
        }
        if (other.hasServerExitDG()) {
          mergeServerExitDG(other.getServerExitDG());
        }
        if (other.hasServerOpenDG()) {
          mergeServerOpenDG(other.getServerOpenDG());
        }
        if (other.hasServerOpenDD()) {
          mergeServerOpenDD(other.getServerOpenDD());
        }
        if (other.hasServerDDLottery()) {
          mergeServerDDLottery(other.getServerDDLottery());
        }
        if (other.hasServerExitDD()) {
          mergeServerExitDD(other.getServerExitDD());
        }
        if (other.hasServerQueryProp()) {
          mergeServerQueryProp(other.getServerQueryProp());
        }
        if (other.hasServerUseProp()) {
          mergeServerUseProp(other.getServerUseProp());
        }
        if (other.hasServerQueryPropCount()) {
          mergeServerQueryPropCount(other.getServerQueryPropCount());
        }
        if (other.hasServerMonthSignInfo()) {
          mergeServerMonthSignInfo(other.getServerMonthSignInfo());
        }
        if (other.hasServerMonthSign()) {
          mergeServerMonthSign(other.getServerMonthSign());
        }
        if (other.hasServerGetCritReward()) {
          mergeServerGetCritReward(other.getServerGetCritReward());
        }
        if (other.hasServerLTLottery()) {
          mergeServerLTLottery(other.getServerLTLottery());
        }
        if (other.hasServerGetTSReward()) {
          mergeServerGetTSReward(other.getServerGetTSReward());
        }
        if (other.hasServerGetLuckInfo()) {
          mergeServerGetLuckInfo(other.getServerGetLuckInfo());
        }
        if (other.hasServerGetVipInfo()) {
          mergeServerGetVipInfo(other.getServerGetVipInfo());
        }
        if (other.hasServerGetVipWeek()) {
          mergeServerGetVipWeek(other.getServerGetVipWeek());
        }
        if (other.hasBGameStart()) {
          mergeBGameStart(other.getBGameStart());
        }
        if (other.hasBDoCatch()) {
          mergeBDoCatch(other.getBDoCatch());
        }
        if (other.hasBCatchResult()) {
          mergeBCatchResult(other.getBCatchResult());
        }
        if (other.hasBPlayCards()) {
          mergeBPlayCards(other.getBPlayCards());
        }
        if (other.hasBSendDiZhuCard()) {
          mergeBSendDiZhuCard(other.getBSendDiZhuCard());
        }
        if (other.hasBNextPlayer()) {
          mergeBNextPlayer(other.getBNextPlayer());
        }
        if (other.hasBGameSettle()) {
          mergeBGameSettle(other.getBGameSettle());
        }
        if (other.hasBRewardMessage()) {
          mergeBRewardMessage(other.getBRewardMessage());
        }
        if (other.hasBAutoPlay()) {
          mergeBAutoPlay(other.getBAutoPlay());
        }
        if (other.hasBRoomIdUrl()) {
          mergeBRoomIdUrl(other.getBRoomIdUrl());
        }
        if (other.hasBAwardDialog()) {
          mergeBAwardDialog(other.getBAwardDialog());
        }
        if (other.hasBBuySuccess()) {
          mergeBBuySuccess(other.getBBuySuccess());
        }
        if (other.hasBRedDotPush()) {
          mergeBRedDotPush(other.getBRedDotPush());
        }
        if (other.hasBForceAnnounce()) {
          mergeBForceAnnounce(other.getBForceAnnounce());
        }
        if (other.hasBDGameMessage()) {
          mergeBDGameMessage(other.getBDGameMessage());
        }
        if (other.hasBDGOver()) {
          mergeBDGOver(other.getBDGOver());
        }
        if (other.hasBDDOver()) {
          mergeBDDOver(other.getBDDOver());
        }
        if (other.hasBDDInfo()) {
          mergeBDDInfo(other.getBDDInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kys.util.netty.proto.ProtoMsg.ServerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kys.util.netty.proto.ProtoMsg.ServerResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int methodId_ ;
      /**
       * <code>int32 methodId = 1;</code>
       */
      public int getMethodId() {
        return methodId_;
      }
      /**
       * <code>int32 methodId = 1;</code>
       */
      public Builder setMethodId(int value) {
        
        methodId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 methodId = 1;</code>
       */
      public Builder clearMethodId() {
        
        methodId_ = 0;
        onChanged();
        return this;
      }

      private int result_ = 0;
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public int getResultValue() {
        return result_;
      }
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public Builder setResultValue(int value) {
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public com.kys.util.netty.proto.ProtoMsg.ResultCode getResult() {
        com.kys.util.netty.proto.ProtoMsg.ResultCode result = com.kys.util.netty.proto.ProtoMsg.ResultCode.valueOf(result_);
        return result == null ? com.kys.util.netty.proto.ProtoMsg.ResultCode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public Builder setResult(com.kys.util.netty.proto.ProtoMsg.ResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 返回码，包含success和错误码 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ResultCode result = 2;</code>
       */
      public Builder clearResult() {
        
        result_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object errStr_ = "";
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public java.lang.String getErrStr() {
        java.lang.Object ref = errStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          errStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public com.google.protobuf.ByteString
          getErrStrBytes() {
        java.lang.Object ref = errStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public Builder setErrStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        errStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public Builder clearErrStr() {
        
        errStr_ = getDefaultInstance().getErrStr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 错误展示字段，如果result不为0，则取该字段给用户展示 
       * </pre>
       *
       * <code>string errStr = 99;</code>
       */
      public Builder setErrStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        errStr_ = value;
        onChanged();
        return this;
      }

      private com.kys.util.netty.proto.LoginProto.ServerLogin serverLogin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerLogin, com.kys.util.netty.proto.LoginProto.ServerLogin.Builder, com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder> serverLoginBuilder_;
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public boolean hasServerLogin() {
        return serverLoginBuilder_ != null || serverLogin_ != null;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerLogin getServerLogin() {
        if (serverLoginBuilder_ == null) {
          return serverLogin_ == null ? com.kys.util.netty.proto.LoginProto.ServerLogin.getDefaultInstance() : serverLogin_;
        } else {
          return serverLoginBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public Builder setServerLogin(com.kys.util.netty.proto.LoginProto.ServerLogin value) {
        if (serverLoginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverLogin_ = value;
          onChanged();
        } else {
          serverLoginBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public Builder setServerLogin(
          com.kys.util.netty.proto.LoginProto.ServerLogin.Builder builderForValue) {
        if (serverLoginBuilder_ == null) {
          serverLogin_ = builderForValue.build();
          onChanged();
        } else {
          serverLoginBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public Builder mergeServerLogin(com.kys.util.netty.proto.LoginProto.ServerLogin value) {
        if (serverLoginBuilder_ == null) {
          if (serverLogin_ != null) {
            serverLogin_ =
              com.kys.util.netty.proto.LoginProto.ServerLogin.newBuilder(serverLogin_).mergeFrom(value).buildPartial();
          } else {
            serverLogin_ = value;
          }
          onChanged();
        } else {
          serverLoginBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public Builder clearServerLogin() {
        if (serverLoginBuilder_ == null) {
          serverLogin_ = null;
          onChanged();
        } else {
          serverLogin_ = null;
          serverLoginBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerLogin.Builder getServerLoginBuilder() {
        
        onChanged();
        return getServerLoginFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder getServerLoginOrBuilder() {
        if (serverLoginBuilder_ != null) {
          return serverLoginBuilder_.getMessageOrBuilder();
        } else {
          return serverLogin_ == null ?
              com.kys.util.netty.proto.LoginProto.ServerLogin.getDefaultInstance() : serverLogin_;
        }
      }
      /**
       * <pre>
       ** 登录接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLogin serverLogin = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerLogin, com.kys.util.netty.proto.LoginProto.ServerLogin.Builder, com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder> 
          getServerLoginFieldBuilder() {
        if (serverLoginBuilder_ == null) {
          serverLoginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ServerLogin, com.kys.util.netty.proto.LoginProto.ServerLogin.Builder, com.kys.util.netty.proto.LoginProto.ServerLoginOrBuilder>(
                  getServerLogin(),
                  getParentForChildren(),
                  isClean());
          serverLogin_ = null;
        }
        return serverLoginBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ServerGetUserInfo serverPlayerInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder> serverPlayerInfoBuilder_;
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public boolean hasServerPlayerInfo() {
        return serverPlayerInfoBuilder_ != null || serverPlayerInfo_ != null;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerPlayerInfo() {
        if (serverPlayerInfoBuilder_ == null) {
          return serverPlayerInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverPlayerInfo_;
        } else {
          return serverPlayerInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public Builder setServerPlayerInfo(com.kys.util.netty.proto.UserProto.ServerGetUserInfo value) {
        if (serverPlayerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverPlayerInfo_ = value;
          onChanged();
        } else {
          serverPlayerInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public Builder setServerPlayerInfo(
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder builderForValue) {
        if (serverPlayerInfoBuilder_ == null) {
          serverPlayerInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverPlayerInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public Builder mergeServerPlayerInfo(com.kys.util.netty.proto.UserProto.ServerGetUserInfo value) {
        if (serverPlayerInfoBuilder_ == null) {
          if (serverPlayerInfo_ != null) {
            serverPlayerInfo_ =
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.newBuilder(serverPlayerInfo_).mergeFrom(value).buildPartial();
          } else {
            serverPlayerInfo_ = value;
          }
          onChanged();
        } else {
          serverPlayerInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public Builder clearServerPlayerInfo() {
        if (serverPlayerInfoBuilder_ == null) {
          serverPlayerInfo_ = null;
          onChanged();
        } else {
          serverPlayerInfo_ = null;
          serverPlayerInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder getServerPlayerInfoBuilder() {
        
        onChanged();
        return getServerPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerPlayerInfoOrBuilder() {
        if (serverPlayerInfoBuilder_ != null) {
          return serverPlayerInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverPlayerInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverPlayerInfo_;
        }
      }
      /**
       * <pre>
       ** 取玩家信息接口返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverPlayerInfo = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder> 
          getServerPlayerInfoFieldBuilder() {
        if (serverPlayerInfoBuilder_ == null) {
          serverPlayerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder>(
                  getServerPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          serverPlayerInfo_ = null;
        }
        return serverPlayerInfoBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat serverSendHallHeartBeat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder> serverSendHallHeartBeatBuilder_;
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public boolean hasServerSendHallHeartBeat() {
        return serverSendHallHeartBeatBuilder_ != null || serverSendHallHeartBeat_ != null;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat getServerSendHallHeartBeat() {
        if (serverSendHallHeartBeatBuilder_ == null) {
          return serverSendHallHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.getDefaultInstance() : serverSendHallHeartBeat_;
        } else {
          return serverSendHallHeartBeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public Builder setServerSendHallHeartBeat(com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat value) {
        if (serverSendHallHeartBeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSendHallHeartBeat_ = value;
          onChanged();
        } else {
          serverSendHallHeartBeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public Builder setServerSendHallHeartBeat(
          com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder builderForValue) {
        if (serverSendHallHeartBeatBuilder_ == null) {
          serverSendHallHeartBeat_ = builderForValue.build();
          onChanged();
        } else {
          serverSendHallHeartBeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public Builder mergeServerSendHallHeartBeat(com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat value) {
        if (serverSendHallHeartBeatBuilder_ == null) {
          if (serverSendHallHeartBeat_ != null) {
            serverSendHallHeartBeat_ =
              com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.newBuilder(serverSendHallHeartBeat_).mergeFrom(value).buildPartial();
          } else {
            serverSendHallHeartBeat_ = value;
          }
          onChanged();
        } else {
          serverSendHallHeartBeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public Builder clearServerSendHallHeartBeat() {
        if (serverSendHallHeartBeatBuilder_ == null) {
          serverSendHallHeartBeat_ = null;
          onChanged();
        } else {
          serverSendHallHeartBeat_ = null;
          serverSendHallHeartBeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder getServerSendHallHeartBeatBuilder() {
        
        onChanged();
        return getServerSendHallHeartBeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder getServerSendHallHeartBeatOrBuilder() {
        if (serverSendHallHeartBeatBuilder_ != null) {
          return serverSendHallHeartBeatBuilder_.getMessageOrBuilder();
        } else {
          return serverSendHallHeartBeat_ == null ?
              com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.getDefaultInstance() : serverSendHallHeartBeat_;
        }
      }
      /**
       * <pre>
       ** 服务器发送大厅心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendHallHeartBeat serverSendHallHeartBeat = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder> 
          getServerSendHallHeartBeatFieldBuilder() {
        if (serverSendHallHeartBeatBuilder_ == null) {
          serverSendHallHeartBeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendHallHeartBeatOrBuilder>(
                  getServerSendHallHeartBeat(),
                  getParentForChildren(),
                  isClean());
          serverSendHallHeartBeat_ = null;
        }
        return serverSendHallHeartBeatBuilder_;
      }

      private com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat serverSendGameHeartBeat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder> serverSendGameHeartBeatBuilder_;
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public boolean hasServerSendGameHeartBeat() {
        return serverSendGameHeartBeatBuilder_ != null || serverSendGameHeartBeat_ != null;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat getServerSendGameHeartBeat() {
        if (serverSendGameHeartBeatBuilder_ == null) {
          return serverSendGameHeartBeat_ == null ? com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.getDefaultInstance() : serverSendGameHeartBeat_;
        } else {
          return serverSendGameHeartBeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public Builder setServerSendGameHeartBeat(com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat value) {
        if (serverSendGameHeartBeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSendGameHeartBeat_ = value;
          onChanged();
        } else {
          serverSendGameHeartBeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public Builder setServerSendGameHeartBeat(
          com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder builderForValue) {
        if (serverSendGameHeartBeatBuilder_ == null) {
          serverSendGameHeartBeat_ = builderForValue.build();
          onChanged();
        } else {
          serverSendGameHeartBeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public Builder mergeServerSendGameHeartBeat(com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat value) {
        if (serverSendGameHeartBeatBuilder_ == null) {
          if (serverSendGameHeartBeat_ != null) {
            serverSendGameHeartBeat_ =
              com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.newBuilder(serverSendGameHeartBeat_).mergeFrom(value).buildPartial();
          } else {
            serverSendGameHeartBeat_ = value;
          }
          onChanged();
        } else {
          serverSendGameHeartBeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public Builder clearServerSendGameHeartBeat() {
        if (serverSendGameHeartBeatBuilder_ == null) {
          serverSendGameHeartBeat_ = null;
          onChanged();
        } else {
          serverSendGameHeartBeat_ = null;
          serverSendGameHeartBeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder getServerSendGameHeartBeatBuilder() {
        
        onChanged();
        return getServerSendGameHeartBeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      public com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder getServerSendGameHeartBeatOrBuilder() {
        if (serverSendGameHeartBeatBuilder_ != null) {
          return serverSendGameHeartBeatBuilder_.getMessageOrBuilder();
        } else {
          return serverSendGameHeartBeat_ == null ?
              com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.getDefaultInstance() : serverSendGameHeartBeat_;
        }
      }
      /**
       * <pre>
       ** 服务器发送游戏服心跳 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendGameHeartBeat serverSendGameHeartBeat = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder> 
          getServerSendGameHeartBeatFieldBuilder() {
        if (serverSendGameHeartBeatBuilder_ == null) {
          serverSendGameHeartBeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeat.Builder, com.kys.util.netty.proto.LoginProto.ServerSendGameHeartBeatOrBuilder>(
                  getServerSendGameHeartBeat(),
                  getParentForChildren(),
                  isClean());
          serverSendGameHeartBeat_ = null;
        }
        return serverSendGameHeartBeatBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ServerGetUserInfo serverGetUserInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder> serverGetUserInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public boolean hasServerGetUserInfo() {
        return serverGetUserInfoBuilder_ != null || serverGetUserInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfo getServerGetUserInfo() {
        if (serverGetUserInfoBuilder_ == null) {
          return serverGetUserInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverGetUserInfo_;
        } else {
          return serverGetUserInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public Builder setServerGetUserInfo(com.kys.util.netty.proto.UserProto.ServerGetUserInfo value) {
        if (serverGetUserInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetUserInfo_ = value;
          onChanged();
        } else {
          serverGetUserInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public Builder setServerGetUserInfo(
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder builderForValue) {
        if (serverGetUserInfoBuilder_ == null) {
          serverGetUserInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetUserInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public Builder mergeServerGetUserInfo(com.kys.util.netty.proto.UserProto.ServerGetUserInfo value) {
        if (serverGetUserInfoBuilder_ == null) {
          if (serverGetUserInfo_ != null) {
            serverGetUserInfo_ =
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.newBuilder(serverGetUserInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetUserInfo_ = value;
          }
          onChanged();
        } else {
          serverGetUserInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public Builder clearServerGetUserInfo() {
        if (serverGetUserInfoBuilder_ == null) {
          serverGetUserInfo_ = null;
          onChanged();
        } else {
          serverGetUserInfo_ = null;
          serverGetUserInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder getServerGetUserInfoBuilder() {
        
        onChanged();
        return getServerGetUserInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder getServerGetUserInfoOrBuilder() {
        if (serverGetUserInfoBuilder_ != null) {
          return serverGetUserInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetUserInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo.getDefaultInstance() : serverGetUserInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回用户信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetUserInfo serverGetUserInfo = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder> 
          getServerGetUserInfoFieldBuilder() {
        if (serverGetUserInfoBuilder_ == null) {
          serverGetUserInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ServerGetUserInfo, com.kys.util.netty.proto.UserProto.ServerGetUserInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetUserInfoOrBuilder>(
                  getServerGetUserInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetUserInfo_ = null;
        }
        return serverGetUserInfoBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerQuickJoin serverQuickJoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerQuickJoin, com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder> serverQuickJoinBuilder_;
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public boolean hasServerQuickJoin() {
        return serverQuickJoinBuilder_ != null || serverQuickJoin_ != null;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQuickJoin getServerQuickJoin() {
        if (serverQuickJoinBuilder_ == null) {
          return serverQuickJoin_ == null ? com.kys.util.netty.proto.GameProto.ServerQuickJoin.getDefaultInstance() : serverQuickJoin_;
        } else {
          return serverQuickJoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public Builder setServerQuickJoin(com.kys.util.netty.proto.GameProto.ServerQuickJoin value) {
        if (serverQuickJoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQuickJoin_ = value;
          onChanged();
        } else {
          serverQuickJoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public Builder setServerQuickJoin(
          com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder builderForValue) {
        if (serverQuickJoinBuilder_ == null) {
          serverQuickJoin_ = builderForValue.build();
          onChanged();
        } else {
          serverQuickJoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public Builder mergeServerQuickJoin(com.kys.util.netty.proto.GameProto.ServerQuickJoin value) {
        if (serverQuickJoinBuilder_ == null) {
          if (serverQuickJoin_ != null) {
            serverQuickJoin_ =
              com.kys.util.netty.proto.GameProto.ServerQuickJoin.newBuilder(serverQuickJoin_).mergeFrom(value).buildPartial();
          } else {
            serverQuickJoin_ = value;
          }
          onChanged();
        } else {
          serverQuickJoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public Builder clearServerQuickJoin() {
        if (serverQuickJoinBuilder_ == null) {
          serverQuickJoin_ = null;
          onChanged();
        } else {
          serverQuickJoin_ = null;
          serverQuickJoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder getServerQuickJoinBuilder() {
        
        onChanged();
        return getServerQuickJoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder getServerQuickJoinOrBuilder() {
        if (serverQuickJoinBuilder_ != null) {
          return serverQuickJoinBuilder_.getMessageOrBuilder();
        } else {
          return serverQuickJoin_ == null ?
              com.kys.util.netty.proto.GameProto.ServerQuickJoin.getDefaultInstance() : serverQuickJoin_;
        }
      }
      /**
       * <pre>
       ** 服务器加入快速匹配返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQuickJoin serverQuickJoin = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerQuickJoin, com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder> 
          getServerQuickJoinFieldBuilder() {
        if (serverQuickJoinBuilder_ == null) {
          serverQuickJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerQuickJoin, com.kys.util.netty.proto.GameProto.ServerQuickJoin.Builder, com.kys.util.netty.proto.GameProto.ServerQuickJoinOrBuilder>(
                  getServerQuickJoin(),
                  getParentForChildren(),
                  isClean());
          serverQuickJoin_ = null;
        }
        return serverQuickJoinBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerEnterRoom serverEnterRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerEnterRoom, com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder> serverEnterRoomBuilder_;
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public boolean hasServerEnterRoom() {
        return serverEnterRoomBuilder_ != null || serverEnterRoom_ != null;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerEnterRoom getServerEnterRoom() {
        if (serverEnterRoomBuilder_ == null) {
          return serverEnterRoom_ == null ? com.kys.util.netty.proto.GameProto.ServerEnterRoom.getDefaultInstance() : serverEnterRoom_;
        } else {
          return serverEnterRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public Builder setServerEnterRoom(com.kys.util.netty.proto.GameProto.ServerEnterRoom value) {
        if (serverEnterRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverEnterRoom_ = value;
          onChanged();
        } else {
          serverEnterRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public Builder setServerEnterRoom(
          com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder builderForValue) {
        if (serverEnterRoomBuilder_ == null) {
          serverEnterRoom_ = builderForValue.build();
          onChanged();
        } else {
          serverEnterRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public Builder mergeServerEnterRoom(com.kys.util.netty.proto.GameProto.ServerEnterRoom value) {
        if (serverEnterRoomBuilder_ == null) {
          if (serverEnterRoom_ != null) {
            serverEnterRoom_ =
              com.kys.util.netty.proto.GameProto.ServerEnterRoom.newBuilder(serverEnterRoom_).mergeFrom(value).buildPartial();
          } else {
            serverEnterRoom_ = value;
          }
          onChanged();
        } else {
          serverEnterRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public Builder clearServerEnterRoom() {
        if (serverEnterRoomBuilder_ == null) {
          serverEnterRoom_ = null;
          onChanged();
        } else {
          serverEnterRoom_ = null;
          serverEnterRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder getServerEnterRoomBuilder() {
        
        onChanged();
        return getServerEnterRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder getServerEnterRoomOrBuilder() {
        if (serverEnterRoomBuilder_ != null) {
          return serverEnterRoomBuilder_.getMessageOrBuilder();
        } else {
          return serverEnterRoom_ == null ?
              com.kys.util.netty.proto.GameProto.ServerEnterRoom.getDefaultInstance() : serverEnterRoom_;
        }
      }
      /**
       * <pre>
       ** 服务器根据房间号进入房间，获取房间内部信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterRoom serverEnterRoom = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerEnterRoom, com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder> 
          getServerEnterRoomFieldBuilder() {
        if (serverEnterRoomBuilder_ == null) {
          serverEnterRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerEnterRoom, com.kys.util.netty.proto.GameProto.ServerEnterRoom.Builder, com.kys.util.netty.proto.GameProto.ServerEnterRoomOrBuilder>(
                  getServerEnterRoom(),
                  getParentForChildren(),
                  isClean());
          serverEnterRoom_ = null;
        }
        return serverEnterRoomBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerRecoverGame serverRecoverGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerRecoverGame, com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder> serverRecoverGameBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public boolean hasServerRecoverGame() {
        return serverRecoverGameBuilder_ != null || serverRecoverGame_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRecoverGame getServerRecoverGame() {
        if (serverRecoverGameBuilder_ == null) {
          return serverRecoverGame_ == null ? com.kys.util.netty.proto.GameProto.ServerRecoverGame.getDefaultInstance() : serverRecoverGame_;
        } else {
          return serverRecoverGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public Builder setServerRecoverGame(com.kys.util.netty.proto.GameProto.ServerRecoverGame value) {
        if (serverRecoverGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverRecoverGame_ = value;
          onChanged();
        } else {
          serverRecoverGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public Builder setServerRecoverGame(
          com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder builderForValue) {
        if (serverRecoverGameBuilder_ == null) {
          serverRecoverGame_ = builderForValue.build();
          onChanged();
        } else {
          serverRecoverGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public Builder mergeServerRecoverGame(com.kys.util.netty.proto.GameProto.ServerRecoverGame value) {
        if (serverRecoverGameBuilder_ == null) {
          if (serverRecoverGame_ != null) {
            serverRecoverGame_ =
              com.kys.util.netty.proto.GameProto.ServerRecoverGame.newBuilder(serverRecoverGame_).mergeFrom(value).buildPartial();
          } else {
            serverRecoverGame_ = value;
          }
          onChanged();
        } else {
          serverRecoverGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public Builder clearServerRecoverGame() {
        if (serverRecoverGameBuilder_ == null) {
          serverRecoverGame_ = null;
          onChanged();
        } else {
          serverRecoverGame_ = null;
          serverRecoverGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder getServerRecoverGameBuilder() {
        
        onChanged();
        return getServerRecoverGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder getServerRecoverGameOrBuilder() {
        if (serverRecoverGameBuilder_ != null) {
          return serverRecoverGameBuilder_.getMessageOrBuilder();
        } else {
          return serverRecoverGame_ == null ?
              com.kys.util.netty.proto.GameProto.ServerRecoverGame.getDefaultInstance() : serverRecoverGame_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家恢复游戏请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRecoverGame serverRecoverGame = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerRecoverGame, com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder> 
          getServerRecoverGameFieldBuilder() {
        if (serverRecoverGameBuilder_ == null) {
          serverRecoverGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerRecoverGame, com.kys.util.netty.proto.GameProto.ServerRecoverGame.Builder, com.kys.util.netty.proto.GameProto.ServerRecoverGameOrBuilder>(
                  getServerRecoverGame(),
                  getParentForChildren(),
                  isClean());
          serverRecoverGame_ = null;
        }
        return serverRecoverGameBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerDoCatch serverDoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerDoCatch, com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder, com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder> serverDoCatchBuilder_;
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public boolean hasServerDoCatch() {
        return serverDoCatchBuilder_ != null || serverDoCatch_ != null;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerDoCatch getServerDoCatch() {
        if (serverDoCatchBuilder_ == null) {
          return serverDoCatch_ == null ? com.kys.util.netty.proto.GameProto.ServerDoCatch.getDefaultInstance() : serverDoCatch_;
        } else {
          return serverDoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public Builder setServerDoCatch(com.kys.util.netty.proto.GameProto.ServerDoCatch value) {
        if (serverDoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDoCatch_ = value;
          onChanged();
        } else {
          serverDoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public Builder setServerDoCatch(
          com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder builderForValue) {
        if (serverDoCatchBuilder_ == null) {
          serverDoCatch_ = builderForValue.build();
          onChanged();
        } else {
          serverDoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public Builder mergeServerDoCatch(com.kys.util.netty.proto.GameProto.ServerDoCatch value) {
        if (serverDoCatchBuilder_ == null) {
          if (serverDoCatch_ != null) {
            serverDoCatch_ =
              com.kys.util.netty.proto.GameProto.ServerDoCatch.newBuilder(serverDoCatch_).mergeFrom(value).buildPartial();
          } else {
            serverDoCatch_ = value;
          }
          onChanged();
        } else {
          serverDoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public Builder clearServerDoCatch() {
        if (serverDoCatchBuilder_ == null) {
          serverDoCatch_ = null;
          onChanged();
        } else {
          serverDoCatch_ = null;
          serverDoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder getServerDoCatchBuilder() {
        
        onChanged();
        return getServerDoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder getServerDoCatchOrBuilder() {
        if (serverDoCatchBuilder_ != null) {
          return serverDoCatchBuilder_.getMessageOrBuilder();
        } else {
          return serverDoCatch_ == null ?
              com.kys.util.netty.proto.GameProto.ServerDoCatch.getDefaultInstance() : serverDoCatch_;
        }
      }
      /**
       * <pre>
       ** 服务器返回叫分结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDoCatch serverDoCatch = 103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerDoCatch, com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder, com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder> 
          getServerDoCatchFieldBuilder() {
        if (serverDoCatchBuilder_ == null) {
          serverDoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerDoCatch, com.kys.util.netty.proto.GameProto.ServerDoCatch.Builder, com.kys.util.netty.proto.GameProto.ServerDoCatchOrBuilder>(
                  getServerDoCatch(),
                  getParentForChildren(),
                  isClean());
          serverDoCatch_ = null;
        }
        return serverDoCatchBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerPlayCards serverPlayCards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerPlayCards, com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder, com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder> serverPlayCardsBuilder_;
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public boolean hasServerPlayCards() {
        return serverPlayCardsBuilder_ != null || serverPlayCards_ != null;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerPlayCards getServerPlayCards() {
        if (serverPlayCardsBuilder_ == null) {
          return serverPlayCards_ == null ? com.kys.util.netty.proto.GameProto.ServerPlayCards.getDefaultInstance() : serverPlayCards_;
        } else {
          return serverPlayCardsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public Builder setServerPlayCards(com.kys.util.netty.proto.GameProto.ServerPlayCards value) {
        if (serverPlayCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverPlayCards_ = value;
          onChanged();
        } else {
          serverPlayCardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public Builder setServerPlayCards(
          com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder builderForValue) {
        if (serverPlayCardsBuilder_ == null) {
          serverPlayCards_ = builderForValue.build();
          onChanged();
        } else {
          serverPlayCardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public Builder mergeServerPlayCards(com.kys.util.netty.proto.GameProto.ServerPlayCards value) {
        if (serverPlayCardsBuilder_ == null) {
          if (serverPlayCards_ != null) {
            serverPlayCards_ =
              com.kys.util.netty.proto.GameProto.ServerPlayCards.newBuilder(serverPlayCards_).mergeFrom(value).buildPartial();
          } else {
            serverPlayCards_ = value;
          }
          onChanged();
        } else {
          serverPlayCardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public Builder clearServerPlayCards() {
        if (serverPlayCardsBuilder_ == null) {
          serverPlayCards_ = null;
          onChanged();
        } else {
          serverPlayCards_ = null;
          serverPlayCardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder getServerPlayCardsBuilder() {
        
        onChanged();
        return getServerPlayCardsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder getServerPlayCardsOrBuilder() {
        if (serverPlayCardsBuilder_ != null) {
          return serverPlayCardsBuilder_.getMessageOrBuilder();
        } else {
          return serverPlayCards_ == null ?
              com.kys.util.netty.proto.GameProto.ServerPlayCards.getDefaultInstance() : serverPlayCards_;
        }
      }
      /**
       * <pre>
       ** 服务器返回出牌结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerPlayCards serverPlayCards = 104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerPlayCards, com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder, com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder> 
          getServerPlayCardsFieldBuilder() {
        if (serverPlayCardsBuilder_ == null) {
          serverPlayCardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerPlayCards, com.kys.util.netty.proto.GameProto.ServerPlayCards.Builder, com.kys.util.netty.proto.GameProto.ServerPlayCardsOrBuilder>(
                  getServerPlayCards(),
                  getParentForChildren(),
                  isClean());
          serverPlayCards_ = null;
        }
        return serverPlayCardsBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerAutoPlay serverAutoPlay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerAutoPlay, com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder> serverAutoPlayBuilder_;
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public boolean hasServerAutoPlay() {
        return serverAutoPlayBuilder_ != null || serverAutoPlay_ != null;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerAutoPlay getServerAutoPlay() {
        if (serverAutoPlayBuilder_ == null) {
          return serverAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.ServerAutoPlay.getDefaultInstance() : serverAutoPlay_;
        } else {
          return serverAutoPlayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public Builder setServerAutoPlay(com.kys.util.netty.proto.GameProto.ServerAutoPlay value) {
        if (serverAutoPlayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverAutoPlay_ = value;
          onChanged();
        } else {
          serverAutoPlayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public Builder setServerAutoPlay(
          com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder builderForValue) {
        if (serverAutoPlayBuilder_ == null) {
          serverAutoPlay_ = builderForValue.build();
          onChanged();
        } else {
          serverAutoPlayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public Builder mergeServerAutoPlay(com.kys.util.netty.proto.GameProto.ServerAutoPlay value) {
        if (serverAutoPlayBuilder_ == null) {
          if (serverAutoPlay_ != null) {
            serverAutoPlay_ =
              com.kys.util.netty.proto.GameProto.ServerAutoPlay.newBuilder(serverAutoPlay_).mergeFrom(value).buildPartial();
          } else {
            serverAutoPlay_ = value;
          }
          onChanged();
        } else {
          serverAutoPlayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public Builder clearServerAutoPlay() {
        if (serverAutoPlayBuilder_ == null) {
          serverAutoPlay_ = null;
          onChanged();
        } else {
          serverAutoPlay_ = null;
          serverAutoPlayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder getServerAutoPlayBuilder() {
        
        onChanged();
        return getServerAutoPlayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder getServerAutoPlayOrBuilder() {
        if (serverAutoPlayBuilder_ != null) {
          return serverAutoPlayBuilder_.getMessageOrBuilder();
        } else {
          return serverAutoPlay_ == null ?
              com.kys.util.netty.proto.GameProto.ServerAutoPlay.getDefaultInstance() : serverAutoPlay_;
        }
      }
      /**
       * <pre>
       ** 服务器返回托管请求结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAutoPlay serverAutoPlay = 105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerAutoPlay, com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder> 
          getServerAutoPlayFieldBuilder() {
        if (serverAutoPlayBuilder_ == null) {
          serverAutoPlayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerAutoPlay, com.kys.util.netty.proto.GameProto.ServerAutoPlay.Builder, com.kys.util.netty.proto.GameProto.ServerAutoPlayOrBuilder>(
                  getServerAutoPlay(),
                  getParentForChildren(),
                  isClean());
          serverAutoPlay_ = null;
        }
        return serverAutoPlayBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerLeaveRoom serverLeaveRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerLeaveRoom, com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder> serverLeaveRoomBuilder_;
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public boolean hasServerLeaveRoom() {
        return serverLeaveRoomBuilder_ != null || serverLeaveRoom_ != null;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerLeaveRoom getServerLeaveRoom() {
        if (serverLeaveRoomBuilder_ == null) {
          return serverLeaveRoom_ == null ? com.kys.util.netty.proto.GameProto.ServerLeaveRoom.getDefaultInstance() : serverLeaveRoom_;
        } else {
          return serverLeaveRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public Builder setServerLeaveRoom(com.kys.util.netty.proto.GameProto.ServerLeaveRoom value) {
        if (serverLeaveRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverLeaveRoom_ = value;
          onChanged();
        } else {
          serverLeaveRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public Builder setServerLeaveRoom(
          com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder builderForValue) {
        if (serverLeaveRoomBuilder_ == null) {
          serverLeaveRoom_ = builderForValue.build();
          onChanged();
        } else {
          serverLeaveRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public Builder mergeServerLeaveRoom(com.kys.util.netty.proto.GameProto.ServerLeaveRoom value) {
        if (serverLeaveRoomBuilder_ == null) {
          if (serverLeaveRoom_ != null) {
            serverLeaveRoom_ =
              com.kys.util.netty.proto.GameProto.ServerLeaveRoom.newBuilder(serverLeaveRoom_).mergeFrom(value).buildPartial();
          } else {
            serverLeaveRoom_ = value;
          }
          onChanged();
        } else {
          serverLeaveRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public Builder clearServerLeaveRoom() {
        if (serverLeaveRoomBuilder_ == null) {
          serverLeaveRoom_ = null;
          onChanged();
        } else {
          serverLeaveRoom_ = null;
          serverLeaveRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder getServerLeaveRoomBuilder() {
        
        onChanged();
        return getServerLeaveRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder getServerLeaveRoomOrBuilder() {
        if (serverLeaveRoomBuilder_ != null) {
          return serverLeaveRoomBuilder_.getMessageOrBuilder();
        } else {
          return serverLeaveRoom_ == null ?
              com.kys.util.netty.proto.GameProto.ServerLeaveRoom.getDefaultInstance() : serverLeaveRoom_;
        }
      }
      /**
       * <pre>
       ** 服务器离开房间ACK 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLeaveRoom serverLeaveRoom = 106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerLeaveRoom, com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder> 
          getServerLeaveRoomFieldBuilder() {
        if (serverLeaveRoomBuilder_ == null) {
          serverLeaveRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerLeaveRoom, com.kys.util.netty.proto.GameProto.ServerLeaveRoom.Builder, com.kys.util.netty.proto.GameProto.ServerLeaveRoomOrBuilder>(
                  getServerLeaveRoom(),
                  getParentForChildren(),
                  isClean());
          serverLeaveRoom_ = null;
        }
        return serverLeaveRoomBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerCancleJoin serverCancleJoin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerCancleJoin, com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder> serverCancleJoinBuilder_;
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public boolean hasServerCancleJoin() {
        return serverCancleJoinBuilder_ != null || serverCancleJoin_ != null;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerCancleJoin getServerCancleJoin() {
        if (serverCancleJoinBuilder_ == null) {
          return serverCancleJoin_ == null ? com.kys.util.netty.proto.GameProto.ServerCancleJoin.getDefaultInstance() : serverCancleJoin_;
        } else {
          return serverCancleJoinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public Builder setServerCancleJoin(com.kys.util.netty.proto.GameProto.ServerCancleJoin value) {
        if (serverCancleJoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverCancleJoin_ = value;
          onChanged();
        } else {
          serverCancleJoinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public Builder setServerCancleJoin(
          com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder builderForValue) {
        if (serverCancleJoinBuilder_ == null) {
          serverCancleJoin_ = builderForValue.build();
          onChanged();
        } else {
          serverCancleJoinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public Builder mergeServerCancleJoin(com.kys.util.netty.proto.GameProto.ServerCancleJoin value) {
        if (serverCancleJoinBuilder_ == null) {
          if (serverCancleJoin_ != null) {
            serverCancleJoin_ =
              com.kys.util.netty.proto.GameProto.ServerCancleJoin.newBuilder(serverCancleJoin_).mergeFrom(value).buildPartial();
          } else {
            serverCancleJoin_ = value;
          }
          onChanged();
        } else {
          serverCancleJoinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public Builder clearServerCancleJoin() {
        if (serverCancleJoinBuilder_ == null) {
          serverCancleJoin_ = null;
          onChanged();
        } else {
          serverCancleJoin_ = null;
          serverCancleJoinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder getServerCancleJoinBuilder() {
        
        onChanged();
        return getServerCancleJoinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder getServerCancleJoinOrBuilder() {
        if (serverCancleJoinBuilder_ != null) {
          return serverCancleJoinBuilder_.getMessageOrBuilder();
        } else {
          return serverCancleJoin_ == null ?
              com.kys.util.netty.proto.GameProto.ServerCancleJoin.getDefaultInstance() : serverCancleJoin_;
        }
      }
      /**
       * <pre>
       ** 服务器取消匹配 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCancleJoin serverCancleJoin = 107;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerCancleJoin, com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder> 
          getServerCancleJoinFieldBuilder() {
        if (serverCancleJoinBuilder_ == null) {
          serverCancleJoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerCancleJoin, com.kys.util.netty.proto.GameProto.ServerCancleJoin.Builder, com.kys.util.netty.proto.GameProto.ServerCancleJoinOrBuilder>(
                  getServerCancleJoin(),
                  getParentForChildren(),
                  isClean());
          serverCancleJoin_ = null;
        }
        return serverCancleJoinBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerQueryIndex serverQueryIndex_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerQueryIndex, com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder> serverQueryIndexBuilder_;
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public boolean hasServerQueryIndex() {
        return serverQueryIndexBuilder_ != null || serverQueryIndex_ != null;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQueryIndex getServerQueryIndex() {
        if (serverQueryIndexBuilder_ == null) {
          return serverQueryIndex_ == null ? com.kys.util.netty.proto.GameProto.ServerQueryIndex.getDefaultInstance() : serverQueryIndex_;
        } else {
          return serverQueryIndexBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public Builder setServerQueryIndex(com.kys.util.netty.proto.GameProto.ServerQueryIndex value) {
        if (serverQueryIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryIndex_ = value;
          onChanged();
        } else {
          serverQueryIndexBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public Builder setServerQueryIndex(
          com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder builderForValue) {
        if (serverQueryIndexBuilder_ == null) {
          serverQueryIndex_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryIndexBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public Builder mergeServerQueryIndex(com.kys.util.netty.proto.GameProto.ServerQueryIndex value) {
        if (serverQueryIndexBuilder_ == null) {
          if (serverQueryIndex_ != null) {
            serverQueryIndex_ =
              com.kys.util.netty.proto.GameProto.ServerQueryIndex.newBuilder(serverQueryIndex_).mergeFrom(value).buildPartial();
          } else {
            serverQueryIndex_ = value;
          }
          onChanged();
        } else {
          serverQueryIndexBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public Builder clearServerQueryIndex() {
        if (serverQueryIndexBuilder_ == null) {
          serverQueryIndex_ = null;
          onChanged();
        } else {
          serverQueryIndex_ = null;
          serverQueryIndexBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder getServerQueryIndexBuilder() {
        
        onChanged();
        return getServerQueryIndexFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder getServerQueryIndexOrBuilder() {
        if (serverQueryIndexBuilder_ != null) {
          return serverQueryIndexBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryIndex_ == null ?
              com.kys.util.netty.proto.GameProto.ServerQueryIndex.getDefaultInstance() : serverQueryIndex_;
        }
      }
      /**
       * <pre>
       ** 服务器返回房间序号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryIndex serverQueryIndex = 108;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerQueryIndex, com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder> 
          getServerQueryIndexFieldBuilder() {
        if (serverQueryIndexBuilder_ == null) {
          serverQueryIndexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerQueryIndex, com.kys.util.netty.proto.GameProto.ServerQueryIndex.Builder, com.kys.util.netty.proto.GameProto.ServerQueryIndexOrBuilder>(
                  getServerQueryIndex(),
                  getParentForChildren(),
                  isClean());
          serverQueryIndex_ = null;
        }
        return serverQueryIndexBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.ServerRetryReturnGame serverRetryReturnGame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerRetryReturnGame, com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder> serverRetryReturnGameBuilder_;
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public boolean hasServerRetryReturnGame() {
        return serverRetryReturnGameBuilder_ != null || serverRetryReturnGame_ != null;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRetryReturnGame getServerRetryReturnGame() {
        if (serverRetryReturnGameBuilder_ == null) {
          return serverRetryReturnGame_ == null ? com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.getDefaultInstance() : serverRetryReturnGame_;
        } else {
          return serverRetryReturnGameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public Builder setServerRetryReturnGame(com.kys.util.netty.proto.GameProto.ServerRetryReturnGame value) {
        if (serverRetryReturnGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverRetryReturnGame_ = value;
          onChanged();
        } else {
          serverRetryReturnGameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public Builder setServerRetryReturnGame(
          com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder builderForValue) {
        if (serverRetryReturnGameBuilder_ == null) {
          serverRetryReturnGame_ = builderForValue.build();
          onChanged();
        } else {
          serverRetryReturnGameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public Builder mergeServerRetryReturnGame(com.kys.util.netty.proto.GameProto.ServerRetryReturnGame value) {
        if (serverRetryReturnGameBuilder_ == null) {
          if (serverRetryReturnGame_ != null) {
            serverRetryReturnGame_ =
              com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.newBuilder(serverRetryReturnGame_).mergeFrom(value).buildPartial();
          } else {
            serverRetryReturnGame_ = value;
          }
          onChanged();
        } else {
          serverRetryReturnGameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public Builder clearServerRetryReturnGame() {
        if (serverRetryReturnGameBuilder_ == null) {
          serverRetryReturnGame_ = null;
          onChanged();
        } else {
          serverRetryReturnGame_ = null;
          serverRetryReturnGameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder getServerRetryReturnGameBuilder() {
        
        onChanged();
        return getServerRetryReturnGameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      public com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder getServerRetryReturnGameOrBuilder() {
        if (serverRetryReturnGameBuilder_ != null) {
          return serverRetryReturnGameBuilder_.getMessageOrBuilder();
        } else {
          return serverRetryReturnGame_ == null ?
              com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.getDefaultInstance() : serverRetryReturnGame_;
        }
      }
      /**
       * <pre>
       ** 服务器返回客户端尝试返回游戏 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRetryReturnGame serverRetryReturnGame = 109;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.ServerRetryReturnGame, com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder> 
          getServerRetryReturnGameFieldBuilder() {
        if (serverRetryReturnGameBuilder_ == null) {
          serverRetryReturnGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.ServerRetryReturnGame, com.kys.util.netty.proto.GameProto.ServerRetryReturnGame.Builder, com.kys.util.netty.proto.GameProto.ServerRetryReturnGameOrBuilder>(
                  getServerRetryReturnGame(),
                  getParentForChildren(),
                  isClean());
          serverRetryReturnGame_ = null;
        }
        return serverRetryReturnGameBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetRankList serverGetRankList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRankList, com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder, com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder> serverGetRankListBuilder_;
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public boolean hasServerGetRankList() {
        return serverGetRankListBuilder_ != null || serverGetRankList_ != null;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRankList getServerGetRankList() {
        if (serverGetRankListBuilder_ == null) {
          return serverGetRankList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRankList.getDefaultInstance() : serverGetRankList_;
        } else {
          return serverGetRankListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public Builder setServerGetRankList(com.kys.util.netty.proto.HallProto.ServerGetRankList value) {
        if (serverGetRankListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetRankList_ = value;
          onChanged();
        } else {
          serverGetRankListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public Builder setServerGetRankList(
          com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder builderForValue) {
        if (serverGetRankListBuilder_ == null) {
          serverGetRankList_ = builderForValue.build();
          onChanged();
        } else {
          serverGetRankListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public Builder mergeServerGetRankList(com.kys.util.netty.proto.HallProto.ServerGetRankList value) {
        if (serverGetRankListBuilder_ == null) {
          if (serverGetRankList_ != null) {
            serverGetRankList_ =
              com.kys.util.netty.proto.HallProto.ServerGetRankList.newBuilder(serverGetRankList_).mergeFrom(value).buildPartial();
          } else {
            serverGetRankList_ = value;
          }
          onChanged();
        } else {
          serverGetRankListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public Builder clearServerGetRankList() {
        if (serverGetRankListBuilder_ == null) {
          serverGetRankList_ = null;
          onChanged();
        } else {
          serverGetRankList_ = null;
          serverGetRankListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder getServerGetRankListBuilder() {
        
        onChanged();
        return getServerGetRankListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder getServerGetRankListOrBuilder() {
        if (serverGetRankListBuilder_ != null) {
          return serverGetRankListBuilder_.getMessageOrBuilder();
        } else {
          return serverGetRankList_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetRankList.getDefaultInstance() : serverGetRankList_;
        }
      }
      /**
       * <pre>
       ** 返回排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRankList serverGetRankList = 200;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRankList, com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder, com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder> 
          getServerGetRankListFieldBuilder() {
        if (serverGetRankListBuilder_ == null) {
          serverGetRankListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetRankList, com.kys.util.netty.proto.HallProto.ServerGetRankList.Builder, com.kys.util.netty.proto.HallProto.ServerGetRankListOrBuilder>(
                  getServerGetRankList(),
                  getParentForChildren(),
                  isClean());
          serverGetRankList_ = null;
        }
        return serverGetRankListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList serverGetSignupRewardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList, com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetSignupRewardListOrBuilder> serverGetSignupRewardListBuilder_;
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      public boolean hasServerGetSignupRewardList() {
        return serverGetSignupRewardListBuilder_ != null || serverGetSignupRewardList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList getServerGetSignupRewardList() {
        if (serverGetSignupRewardListBuilder_ == null) {
          return serverGetSignupRewardList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.getDefaultInstance() : serverGetSignupRewardList_;
        } else {
          return serverGetSignupRewardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      public Builder setServerGetSignupRewardList(com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList value) {
        if (serverGetSignupRewardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetSignupRewardList_ = value;
          onChanged();
        } else {
          serverGetSignupRewardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      public Builder setServerGetSignupRewardList(
          com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.Builder builderForValue) {
        if (serverGetSignupRewardListBuilder_ == null) {
          serverGetSignupRewardList_ = builderForValue.build();
          onChanged();
        } else {
          serverGetSignupRewardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      public Builder mergeServerGetSignupRewardList(com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList value) {
        if (serverGetSignupRewardListBuilder_ == null) {
          if (serverGetSignupRewardList_ != null) {
            serverGetSignupRewardList_ =
              com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.newBuilder(serverGetSignupRewardList_).mergeFrom(value).buildPartial();
          } else {
            serverGetSignupRewardList_ = value;
          }
          onChanged();
        } else {
          serverGetSignupRewardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      public Builder clearServerGetSignupRewardList() {
        if (serverGetSignupRewardListBuilder_ == null) {
          serverGetSignupRewardList_ = null;
          onChanged();
        } else {
          serverGetSignupRewardList_ = null;
          serverGetSignupRewardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.Builder getServerGetSignupRewardListBuilder() {
        
        onChanged();
        return getServerGetSignupRewardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetSignupRewardListOrBuilder getServerGetSignupRewardListOrBuilder() {
        if (serverGetSignupRewardListBuilder_ != null) {
          return serverGetSignupRewardListBuilder_.getMessageOrBuilder();
        } else {
          return serverGetSignupRewardList_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.getDefaultInstance() : serverGetSignupRewardList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回签到奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSignupRewardList serverGetSignupRewardList = 201;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList, com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetSignupRewardListOrBuilder> 
          getServerGetSignupRewardListFieldBuilder() {
        if (serverGetSignupRewardListBuilder_ == null) {
          serverGetSignupRewardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList, com.kys.util.netty.proto.HallProto.ServerGetSignupRewardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetSignupRewardListOrBuilder>(
                  getServerGetSignupRewardList(),
                  getParentForChildren(),
                  isClean());
          serverGetSignupRewardList_ = null;
        }
        return serverGetSignupRewardListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetHallInfo serverGetHallInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetHallInfo, com.kys.util.netty.proto.HallProto.ServerGetHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetHallInfoOrBuilder> serverGetHallInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      public boolean hasServerGetHallInfo() {
        return serverGetHallInfoBuilder_ != null || serverGetHallInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHallInfo getServerGetHallInfo() {
        if (serverGetHallInfoBuilder_ == null) {
          return serverGetHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetHallInfo.getDefaultInstance() : serverGetHallInfo_;
        } else {
          return serverGetHallInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      public Builder setServerGetHallInfo(com.kys.util.netty.proto.HallProto.ServerGetHallInfo value) {
        if (serverGetHallInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetHallInfo_ = value;
          onChanged();
        } else {
          serverGetHallInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      public Builder setServerGetHallInfo(
          com.kys.util.netty.proto.HallProto.ServerGetHallInfo.Builder builderForValue) {
        if (serverGetHallInfoBuilder_ == null) {
          serverGetHallInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetHallInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      public Builder mergeServerGetHallInfo(com.kys.util.netty.proto.HallProto.ServerGetHallInfo value) {
        if (serverGetHallInfoBuilder_ == null) {
          if (serverGetHallInfo_ != null) {
            serverGetHallInfo_ =
              com.kys.util.netty.proto.HallProto.ServerGetHallInfo.newBuilder(serverGetHallInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetHallInfo_ = value;
          }
          onChanged();
        } else {
          serverGetHallInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      public Builder clearServerGetHallInfo() {
        if (serverGetHallInfoBuilder_ == null) {
          serverGetHallInfo_ = null;
          onChanged();
        } else {
          serverGetHallInfo_ = null;
          serverGetHallInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHallInfo.Builder getServerGetHallInfoBuilder() {
        
        onChanged();
        return getServerGetHallInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHallInfoOrBuilder getServerGetHallInfoOrBuilder() {
        if (serverGetHallInfoBuilder_ != null) {
          return serverGetHallInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetHallInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetHallInfo.getDefaultInstance() : serverGetHallInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHallInfo serverGetHallInfo = 202;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetHallInfo, com.kys.util.netty.proto.HallProto.ServerGetHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetHallInfoOrBuilder> 
          getServerGetHallInfoFieldBuilder() {
        if (serverGetHallInfoBuilder_ == null) {
          serverGetHallInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetHallInfo, com.kys.util.netty.proto.HallProto.ServerGetHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetHallInfoOrBuilder>(
                  getServerGetHallInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetHallInfo_ = null;
        }
        return serverGetHallInfoBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerSignup serverSignup_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSignup, com.kys.util.netty.proto.HallProto.ServerSignup.Builder, com.kys.util.netty.proto.HallProto.ServerSignupOrBuilder> serverSignupBuilder_;
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      public boolean hasServerSignup() {
        return serverSignupBuilder_ != null || serverSignup_ != null;
      }
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSignup getServerSignup() {
        if (serverSignupBuilder_ == null) {
          return serverSignup_ == null ? com.kys.util.netty.proto.HallProto.ServerSignup.getDefaultInstance() : serverSignup_;
        } else {
          return serverSignupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      public Builder setServerSignup(com.kys.util.netty.proto.HallProto.ServerSignup value) {
        if (serverSignupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSignup_ = value;
          onChanged();
        } else {
          serverSignupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      public Builder setServerSignup(
          com.kys.util.netty.proto.HallProto.ServerSignup.Builder builderForValue) {
        if (serverSignupBuilder_ == null) {
          serverSignup_ = builderForValue.build();
          onChanged();
        } else {
          serverSignupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      public Builder mergeServerSignup(com.kys.util.netty.proto.HallProto.ServerSignup value) {
        if (serverSignupBuilder_ == null) {
          if (serverSignup_ != null) {
            serverSignup_ =
              com.kys.util.netty.proto.HallProto.ServerSignup.newBuilder(serverSignup_).mergeFrom(value).buildPartial();
          } else {
            serverSignup_ = value;
          }
          onChanged();
        } else {
          serverSignupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      public Builder clearServerSignup() {
        if (serverSignupBuilder_ == null) {
          serverSignup_ = null;
          onChanged();
        } else {
          serverSignup_ = null;
          serverSignupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSignup.Builder getServerSignupBuilder() {
        
        onChanged();
        return getServerSignupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSignupOrBuilder getServerSignupOrBuilder() {
        if (serverSignupBuilder_ != null) {
          return serverSignupBuilder_.getMessageOrBuilder();
        } else {
          return serverSignup_ == null ?
              com.kys.util.netty.proto.HallProto.ServerSignup.getDefaultInstance() : serverSignup_;
        }
      }
      /**
       * <pre>
       ** 服务器响应签到请求 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSignup serverSignup = 203;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSignup, com.kys.util.netty.proto.HallProto.ServerSignup.Builder, com.kys.util.netty.proto.HallProto.ServerSignupOrBuilder> 
          getServerSignupFieldBuilder() {
        if (serverSignupBuilder_ == null) {
          serverSignupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerSignup, com.kys.util.netty.proto.HallProto.ServerSignup.Builder, com.kys.util.netty.proto.HallProto.ServerSignupOrBuilder>(
                  getServerSignup(),
                  getParentForChildren(),
                  isClean());
          serverSignup_ = null;
        }
        return serverSignupBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerRewardMessage serverRewardMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerRewardMessage, com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder> serverRewardMessageBuilder_;
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public boolean hasServerRewardMessage() {
        return serverRewardMessageBuilder_ != null || serverRewardMessage_ != null;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerRewardMessage getServerRewardMessage() {
        if (serverRewardMessageBuilder_ == null) {
          return serverRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.ServerRewardMessage.getDefaultInstance() : serverRewardMessage_;
        } else {
          return serverRewardMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public Builder setServerRewardMessage(com.kys.util.netty.proto.HallProto.ServerRewardMessage value) {
        if (serverRewardMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverRewardMessage_ = value;
          onChanged();
        } else {
          serverRewardMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public Builder setServerRewardMessage(
          com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder builderForValue) {
        if (serverRewardMessageBuilder_ == null) {
          serverRewardMessage_ = builderForValue.build();
          onChanged();
        } else {
          serverRewardMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public Builder mergeServerRewardMessage(com.kys.util.netty.proto.HallProto.ServerRewardMessage value) {
        if (serverRewardMessageBuilder_ == null) {
          if (serverRewardMessage_ != null) {
            serverRewardMessage_ =
              com.kys.util.netty.proto.HallProto.ServerRewardMessage.newBuilder(serverRewardMessage_).mergeFrom(value).buildPartial();
          } else {
            serverRewardMessage_ = value;
          }
          onChanged();
        } else {
          serverRewardMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public Builder clearServerRewardMessage() {
        if (serverRewardMessageBuilder_ == null) {
          serverRewardMessage_ = null;
          onChanged();
        } else {
          serverRewardMessage_ = null;
          serverRewardMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder getServerRewardMessageBuilder() {
        
        onChanged();
        return getServerRewardMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder getServerRewardMessageOrBuilder() {
        if (serverRewardMessageBuilder_ != null) {
          return serverRewardMessageBuilder_.getMessageOrBuilder();
        } else {
          return serverRewardMessage_ == null ?
              com.kys.util.netty.proto.HallProto.ServerRewardMessage.getDefaultInstance() : serverRewardMessage_;
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅获奖公示 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerRewardMessage serverRewardMessage = 204;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerRewardMessage, com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder> 
          getServerRewardMessageFieldBuilder() {
        if (serverRewardMessageBuilder_ == null) {
          serverRewardMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerRewardMessage, com.kys.util.netty.proto.HallProto.ServerRewardMessage.Builder, com.kys.util.netty.proto.HallProto.ServerRewardMessageOrBuilder>(
                  getServerRewardMessage(),
                  getParentForChildren(),
                  isClean());
          serverRewardMessage_ = null;
        }
        return serverRewardMessageBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerDrawWinCup serverDrawWinCup_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDrawWinCup, com.kys.util.netty.proto.HallProto.ServerDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerDrawWinCupOrBuilder> serverDrawWinCupBuilder_;
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      public boolean hasServerDrawWinCup() {
        return serverDrawWinCupBuilder_ != null || serverDrawWinCup_ != null;
      }
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDrawWinCup getServerDrawWinCup() {
        if (serverDrawWinCupBuilder_ == null) {
          return serverDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ServerDrawWinCup.getDefaultInstance() : serverDrawWinCup_;
        } else {
          return serverDrawWinCupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      public Builder setServerDrawWinCup(com.kys.util.netty.proto.HallProto.ServerDrawWinCup value) {
        if (serverDrawWinCupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDrawWinCup_ = value;
          onChanged();
        } else {
          serverDrawWinCupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      public Builder setServerDrawWinCup(
          com.kys.util.netty.proto.HallProto.ServerDrawWinCup.Builder builderForValue) {
        if (serverDrawWinCupBuilder_ == null) {
          serverDrawWinCup_ = builderForValue.build();
          onChanged();
        } else {
          serverDrawWinCupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      public Builder mergeServerDrawWinCup(com.kys.util.netty.proto.HallProto.ServerDrawWinCup value) {
        if (serverDrawWinCupBuilder_ == null) {
          if (serverDrawWinCup_ != null) {
            serverDrawWinCup_ =
              com.kys.util.netty.proto.HallProto.ServerDrawWinCup.newBuilder(serverDrawWinCup_).mergeFrom(value).buildPartial();
          } else {
            serverDrawWinCup_ = value;
          }
          onChanged();
        } else {
          serverDrawWinCupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      public Builder clearServerDrawWinCup() {
        if (serverDrawWinCupBuilder_ == null) {
          serverDrawWinCup_ = null;
          onChanged();
        } else {
          serverDrawWinCup_ = null;
          serverDrawWinCupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDrawWinCup.Builder getServerDrawWinCupBuilder() {
        
        onChanged();
        return getServerDrawWinCupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDrawWinCupOrBuilder getServerDrawWinCupOrBuilder() {
        if (serverDrawWinCupBuilder_ != null) {
          return serverDrawWinCupBuilder_.getMessageOrBuilder();
        } else {
          return serverDrawWinCup_ == null ?
              com.kys.util.netty.proto.HallProto.ServerDrawWinCup.getDefaultInstance() : serverDrawWinCup_;
        }
      }
      /**
       * <pre>
       ** 服务器返回抽奖杯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDrawWinCup serverDrawWinCup = 205;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDrawWinCup, com.kys.util.netty.proto.HallProto.ServerDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerDrawWinCupOrBuilder> 
          getServerDrawWinCupFieldBuilder() {
        if (serverDrawWinCupBuilder_ == null) {
          serverDrawWinCupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerDrawWinCup, com.kys.util.netty.proto.HallProto.ServerDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerDrawWinCupOrBuilder>(
                  getServerDrawWinCup(),
                  getParentForChildren(),
                  isClean());
          serverDrawWinCup_ = null;
        }
        return serverDrawWinCupBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetRoomConfig serverGetRoomConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder> serverGetRoomConfigBuilder_;
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public boolean hasServerGetRoomConfig() {
        return serverGetRoomConfigBuilder_ != null || serverGetRoomConfig_ != null;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomConfig getServerGetRoomConfig() {
        if (serverGetRoomConfigBuilder_ == null) {
          return serverGetRoomConfig_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.getDefaultInstance() : serverGetRoomConfig_;
        } else {
          return serverGetRoomConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public Builder setServerGetRoomConfig(com.kys.util.netty.proto.HallProto.ServerGetRoomConfig value) {
        if (serverGetRoomConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetRoomConfig_ = value;
          onChanged();
        } else {
          serverGetRoomConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public Builder setServerGetRoomConfig(
          com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder builderForValue) {
        if (serverGetRoomConfigBuilder_ == null) {
          serverGetRoomConfig_ = builderForValue.build();
          onChanged();
        } else {
          serverGetRoomConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public Builder mergeServerGetRoomConfig(com.kys.util.netty.proto.HallProto.ServerGetRoomConfig value) {
        if (serverGetRoomConfigBuilder_ == null) {
          if (serverGetRoomConfig_ != null) {
            serverGetRoomConfig_ =
              com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.newBuilder(serverGetRoomConfig_).mergeFrom(value).buildPartial();
          } else {
            serverGetRoomConfig_ = value;
          }
          onChanged();
        } else {
          serverGetRoomConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public Builder clearServerGetRoomConfig() {
        if (serverGetRoomConfigBuilder_ == null) {
          serverGetRoomConfig_ = null;
          onChanged();
        } else {
          serverGetRoomConfig_ = null;
          serverGetRoomConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder getServerGetRoomConfigBuilder() {
        
        onChanged();
        return getServerGetRoomConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder getServerGetRoomConfigOrBuilder() {
        if (serverGetRoomConfigBuilder_ != null) {
          return serverGetRoomConfigBuilder_.getMessageOrBuilder();
        } else {
          return serverGetRoomConfig_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.getDefaultInstance() : serverGetRoomConfig_;
        }
      }
      /**
       * <pre>
       ** 服务器返回游戏场次信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomConfig serverGetRoomConfig = 206;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder> 
          getServerGetRoomConfigFieldBuilder() {
        if (serverGetRoomConfigBuilder_ == null) {
          serverGetRoomConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetRoomConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomConfigOrBuilder>(
                  getServerGetRoomConfig(),
                  getParentForChildren(),
                  isClean());
          serverGetRoomConfig_ = null;
        }
        return serverGetRoomConfigBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig serverGetRoomCardConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfigOrBuilder> serverGetRoomCardConfigBuilder_;
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      public boolean hasServerGetRoomCardConfig() {
        return serverGetRoomCardConfigBuilder_ != null || serverGetRoomCardConfig_ != null;
      }
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig getServerGetRoomCardConfig() {
        if (serverGetRoomCardConfigBuilder_ == null) {
          return serverGetRoomCardConfig_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.getDefaultInstance() : serverGetRoomCardConfig_;
        } else {
          return serverGetRoomCardConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      public Builder setServerGetRoomCardConfig(com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig value) {
        if (serverGetRoomCardConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetRoomCardConfig_ = value;
          onChanged();
        } else {
          serverGetRoomCardConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      public Builder setServerGetRoomCardConfig(
          com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.Builder builderForValue) {
        if (serverGetRoomCardConfigBuilder_ == null) {
          serverGetRoomCardConfig_ = builderForValue.build();
          onChanged();
        } else {
          serverGetRoomCardConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      public Builder mergeServerGetRoomCardConfig(com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig value) {
        if (serverGetRoomCardConfigBuilder_ == null) {
          if (serverGetRoomCardConfig_ != null) {
            serverGetRoomCardConfig_ =
              com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.newBuilder(serverGetRoomCardConfig_).mergeFrom(value).buildPartial();
          } else {
            serverGetRoomCardConfig_ = value;
          }
          onChanged();
        } else {
          serverGetRoomCardConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      public Builder clearServerGetRoomCardConfig() {
        if (serverGetRoomCardConfigBuilder_ == null) {
          serverGetRoomCardConfig_ = null;
          onChanged();
        } else {
          serverGetRoomCardConfig_ = null;
          serverGetRoomCardConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.Builder getServerGetRoomCardConfigBuilder() {
        
        onChanged();
        return getServerGetRoomCardConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfigOrBuilder getServerGetRoomCardConfigOrBuilder() {
        if (serverGetRoomCardConfigBuilder_ != null) {
          return serverGetRoomCardConfigBuilder_.getMessageOrBuilder();
        } else {
          return serverGetRoomCardConfig_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.getDefaultInstance() : serverGetRoomCardConfig_;
        }
      }
      /**
       * <pre>
       ** 服务器返回房卡模式配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomCardConfig serverGetRoomCardConfig = 207;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfigOrBuilder> 
          getServerGetRoomCardConfigFieldBuilder() {
        if (serverGetRoomCardConfigBuilder_ == null) {
          serverGetRoomCardConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig, com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfig.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomCardConfigOrBuilder>(
                  getServerGetRoomCardConfig(),
                  getParentForChildren(),
                  isClean());
          serverGetRoomCardConfig_ = null;
        }
        return serverGetRoomCardConfigBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerCreateRoom serverCreateRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerCreateRoom, com.kys.util.netty.proto.HallProto.ServerCreateRoom.Builder, com.kys.util.netty.proto.HallProto.ServerCreateRoomOrBuilder> serverCreateRoomBuilder_;
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      public boolean hasServerCreateRoom() {
        return serverCreateRoomBuilder_ != null || serverCreateRoom_ != null;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCreateRoom getServerCreateRoom() {
        if (serverCreateRoomBuilder_ == null) {
          return serverCreateRoom_ == null ? com.kys.util.netty.proto.HallProto.ServerCreateRoom.getDefaultInstance() : serverCreateRoom_;
        } else {
          return serverCreateRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      public Builder setServerCreateRoom(com.kys.util.netty.proto.HallProto.ServerCreateRoom value) {
        if (serverCreateRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverCreateRoom_ = value;
          onChanged();
        } else {
          serverCreateRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      public Builder setServerCreateRoom(
          com.kys.util.netty.proto.HallProto.ServerCreateRoom.Builder builderForValue) {
        if (serverCreateRoomBuilder_ == null) {
          serverCreateRoom_ = builderForValue.build();
          onChanged();
        } else {
          serverCreateRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      public Builder mergeServerCreateRoom(com.kys.util.netty.proto.HallProto.ServerCreateRoom value) {
        if (serverCreateRoomBuilder_ == null) {
          if (serverCreateRoom_ != null) {
            serverCreateRoom_ =
              com.kys.util.netty.proto.HallProto.ServerCreateRoom.newBuilder(serverCreateRoom_).mergeFrom(value).buildPartial();
          } else {
            serverCreateRoom_ = value;
          }
          onChanged();
        } else {
          serverCreateRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      public Builder clearServerCreateRoom() {
        if (serverCreateRoomBuilder_ == null) {
          serverCreateRoom_ = null;
          onChanged();
        } else {
          serverCreateRoom_ = null;
          serverCreateRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCreateRoom.Builder getServerCreateRoomBuilder() {
        
        onChanged();
        return getServerCreateRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCreateRoomOrBuilder getServerCreateRoomOrBuilder() {
        if (serverCreateRoomBuilder_ != null) {
          return serverCreateRoomBuilder_.getMessageOrBuilder();
        } else {
          return serverCreateRoom_ == null ?
              com.kys.util.netty.proto.HallProto.ServerCreateRoom.getDefaultInstance() : serverCreateRoom_;
        }
      }
      /**
       * <pre>
       ** 客户端请求创建房卡模式房间 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCreateRoom serverCreateRoom = 208;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerCreateRoom, com.kys.util.netty.proto.HallProto.ServerCreateRoom.Builder, com.kys.util.netty.proto.HallProto.ServerCreateRoomOrBuilder> 
          getServerCreateRoomFieldBuilder() {
        if (serverCreateRoomBuilder_ == null) {
          serverCreateRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerCreateRoom, com.kys.util.netty.proto.HallProto.ServerCreateRoom.Builder, com.kys.util.netty.proto.HallProto.ServerCreateRoomOrBuilder>(
                  getServerCreateRoom(),
                  getParentForChildren(),
                  isClean());
          serverCreateRoom_ = null;
        }
        return serverCreateRoomBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond serverGetMonthCardDiamond_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder> serverGetMonthCardDiamondBuilder_;
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public boolean hasServerGetMonthCardDiamond() {
        return serverGetMonthCardDiamondBuilder_ != null || serverGetMonthCardDiamond_ != null;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond getServerGetMonthCardDiamond() {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          return serverGetMonthCardDiamond_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.getDefaultInstance() : serverGetMonthCardDiamond_;
        } else {
          return serverGetMonthCardDiamondBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public Builder setServerGetMonthCardDiamond(com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond value) {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMonthCardDiamond_ = value;
          onChanged();
        } else {
          serverGetMonthCardDiamondBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public Builder setServerGetMonthCardDiamond(
          com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder builderForValue) {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          serverGetMonthCardDiamond_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMonthCardDiamondBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public Builder mergeServerGetMonthCardDiamond(com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond value) {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          if (serverGetMonthCardDiamond_ != null) {
            serverGetMonthCardDiamond_ =
              com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.newBuilder(serverGetMonthCardDiamond_).mergeFrom(value).buildPartial();
          } else {
            serverGetMonthCardDiamond_ = value;
          }
          onChanged();
        } else {
          serverGetMonthCardDiamondBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public Builder clearServerGetMonthCardDiamond() {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          serverGetMonthCardDiamond_ = null;
          onChanged();
        } else {
          serverGetMonthCardDiamond_ = null;
          serverGetMonthCardDiamondBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder getServerGetMonthCardDiamondBuilder() {
        
        onChanged();
        return getServerGetMonthCardDiamondFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder getServerGetMonthCardDiamondOrBuilder() {
        if (serverGetMonthCardDiamondBuilder_ != null) {
          return serverGetMonthCardDiamondBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMonthCardDiamond_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.getDefaultInstance() : serverGetMonthCardDiamond_;
        }
      }
      /**
       * <pre>
       ** 服务器返回领取钻石月卡钻石 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCardDiamond serverGetMonthCardDiamond = 209;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder> 
          getServerGetMonthCardDiamondFieldBuilder() {
        if (serverGetMonthCardDiamondBuilder_ == null) {
          serverGetMonthCardDiamondBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamond.Builder, com.kys.util.netty.proto.HallProto.ServerGetMonthCardDiamondOrBuilder>(
                  getServerGetMonthCardDiamond(),
                  getParentForChildren(),
                  isClean());
          serverGetMonthCardDiamond_ = null;
        }
        return serverGetMonthCardDiamondBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetLotteryCount serverGetLotteryCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetLotteryCount, com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder> serverGetLotteryCountBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public boolean hasServerGetLotteryCount() {
        return serverGetLotteryCountBuilder_ != null || serverGetLotteryCount_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetLotteryCount getServerGetLotteryCount() {
        if (serverGetLotteryCountBuilder_ == null) {
          return serverGetLotteryCount_ == null ? com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.getDefaultInstance() : serverGetLotteryCount_;
        } else {
          return serverGetLotteryCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public Builder setServerGetLotteryCount(com.kys.util.netty.proto.HallProto.ServerGetLotteryCount value) {
        if (serverGetLotteryCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetLotteryCount_ = value;
          onChanged();
        } else {
          serverGetLotteryCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public Builder setServerGetLotteryCount(
          com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder builderForValue) {
        if (serverGetLotteryCountBuilder_ == null) {
          serverGetLotteryCount_ = builderForValue.build();
          onChanged();
        } else {
          serverGetLotteryCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public Builder mergeServerGetLotteryCount(com.kys.util.netty.proto.HallProto.ServerGetLotteryCount value) {
        if (serverGetLotteryCountBuilder_ == null) {
          if (serverGetLotteryCount_ != null) {
            serverGetLotteryCount_ =
              com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.newBuilder(serverGetLotteryCount_).mergeFrom(value).buildPartial();
          } else {
            serverGetLotteryCount_ = value;
          }
          onChanged();
        } else {
          serverGetLotteryCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public Builder clearServerGetLotteryCount() {
        if (serverGetLotteryCountBuilder_ == null) {
          serverGetLotteryCount_ = null;
          onChanged();
        } else {
          serverGetLotteryCount_ = null;
          serverGetLotteryCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder getServerGetLotteryCountBuilder() {
        
        onChanged();
        return getServerGetLotteryCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder getServerGetLotteryCountOrBuilder() {
        if (serverGetLotteryCountBuilder_ != null) {
          return serverGetLotteryCountBuilder_.getMessageOrBuilder();
        } else {
          return serverGetLotteryCount_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.getDefaultInstance() : serverGetLotteryCount_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家抽取奖杯比赛数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLotteryCount serverGetLotteryCount = 210;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetLotteryCount, com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder> 
          getServerGetLotteryCountFieldBuilder() {
        if (serverGetLotteryCountBuilder_ == null) {
          serverGetLotteryCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetLotteryCount, com.kys.util.netty.proto.HallProto.ServerGetLotteryCount.Builder, com.kys.util.netty.proto.HallProto.ServerGetLotteryCountOrBuilder>(
                  getServerGetLotteryCount(),
                  getParentForChildren(),
                  isClean());
          serverGetLotteryCount_ = null;
        }
        return serverGetLotteryCountBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetRoomInfo serverGetRoomInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomInfo, com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder> serverGetRoomInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public boolean hasServerGetRoomInfo() {
        return serverGetRoomInfoBuilder_ != null || serverGetRoomInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomInfo getServerGetRoomInfo() {
        if (serverGetRoomInfoBuilder_ == null) {
          return serverGetRoomInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.getDefaultInstance() : serverGetRoomInfo_;
        } else {
          return serverGetRoomInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public Builder setServerGetRoomInfo(com.kys.util.netty.proto.HallProto.ServerGetRoomInfo value) {
        if (serverGetRoomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetRoomInfo_ = value;
          onChanged();
        } else {
          serverGetRoomInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public Builder setServerGetRoomInfo(
          com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder builderForValue) {
        if (serverGetRoomInfoBuilder_ == null) {
          serverGetRoomInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetRoomInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public Builder mergeServerGetRoomInfo(com.kys.util.netty.proto.HallProto.ServerGetRoomInfo value) {
        if (serverGetRoomInfoBuilder_ == null) {
          if (serverGetRoomInfo_ != null) {
            serverGetRoomInfo_ =
              com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.newBuilder(serverGetRoomInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetRoomInfo_ = value;
          }
          onChanged();
        } else {
          serverGetRoomInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public Builder clearServerGetRoomInfo() {
        if (serverGetRoomInfoBuilder_ == null) {
          serverGetRoomInfo_ = null;
          onChanged();
        } else {
          serverGetRoomInfo_ = null;
          serverGetRoomInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder getServerGetRoomInfoBuilder() {
        
        onChanged();
        return getServerGetRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder getServerGetRoomInfoOrBuilder() {
        if (serverGetRoomInfoBuilder_ != null) {
          return serverGetRoomInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetRoomInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.getDefaultInstance() : serverGetRoomInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回单一房间配置 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetRoomInfo serverGetRoomInfo = 211;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetRoomInfo, com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder> 
          getServerGetRoomInfoFieldBuilder() {
        if (serverGetRoomInfoBuilder_ == null) {
          serverGetRoomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetRoomInfo, com.kys.util.netty.proto.HallProto.ServerGetRoomInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetRoomInfoOrBuilder>(
                  getServerGetRoomInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetRoomInfo_ = null;
        }
        return serverGetRoomInfoBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerSendTelCode serverSendTelCode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSendTelCode, com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder> serverSendTelCodeBuilder_;
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public boolean hasServerSendTelCode() {
        return serverSendTelCodeBuilder_ != null || serverSendTelCode_ != null;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSendTelCode getServerSendTelCode() {
        if (serverSendTelCodeBuilder_ == null) {
          return serverSendTelCode_ == null ? com.kys.util.netty.proto.HallProto.ServerSendTelCode.getDefaultInstance() : serverSendTelCode_;
        } else {
          return serverSendTelCodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public Builder setServerSendTelCode(com.kys.util.netty.proto.HallProto.ServerSendTelCode value) {
        if (serverSendTelCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSendTelCode_ = value;
          onChanged();
        } else {
          serverSendTelCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public Builder setServerSendTelCode(
          com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder builderForValue) {
        if (serverSendTelCodeBuilder_ == null) {
          serverSendTelCode_ = builderForValue.build();
          onChanged();
        } else {
          serverSendTelCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public Builder mergeServerSendTelCode(com.kys.util.netty.proto.HallProto.ServerSendTelCode value) {
        if (serverSendTelCodeBuilder_ == null) {
          if (serverSendTelCode_ != null) {
            serverSendTelCode_ =
              com.kys.util.netty.proto.HallProto.ServerSendTelCode.newBuilder(serverSendTelCode_).mergeFrom(value).buildPartial();
          } else {
            serverSendTelCode_ = value;
          }
          onChanged();
        } else {
          serverSendTelCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public Builder clearServerSendTelCode() {
        if (serverSendTelCodeBuilder_ == null) {
          serverSendTelCode_ = null;
          onChanged();
        } else {
          serverSendTelCode_ = null;
          serverSendTelCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder getServerSendTelCodeBuilder() {
        
        onChanged();
        return getServerSendTelCodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder getServerSendTelCodeOrBuilder() {
        if (serverSendTelCodeBuilder_ != null) {
          return serverSendTelCodeBuilder_.getMessageOrBuilder();
        } else {
          return serverSendTelCode_ == null ?
              com.kys.util.netty.proto.HallProto.ServerSendTelCode.getDefaultInstance() : serverSendTelCode_;
        }
      }
      /**
       * <pre>
       ** 服务器返回发送验证码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSendTelCode serverSendTelCode = 212;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSendTelCode, com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder> 
          getServerSendTelCodeFieldBuilder() {
        if (serverSendTelCodeBuilder_ == null) {
          serverSendTelCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerSendTelCode, com.kys.util.netty.proto.HallProto.ServerSendTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerSendTelCodeOrBuilder>(
                  getServerSendTelCode(),
                  getParentForChildren(),
                  isClean());
          serverSendTelCode_ = null;
        }
        return serverSendTelCodeBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerVerifyTelCode serverVerifyTelCode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerVerifyTelCode, com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder> serverVerifyTelCodeBuilder_;
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public boolean hasServerVerifyTelCode() {
        return serverVerifyTelCodeBuilder_ != null || serverVerifyTelCode_ != null;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerVerifyTelCode getServerVerifyTelCode() {
        if (serverVerifyTelCodeBuilder_ == null) {
          return serverVerifyTelCode_ == null ? com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.getDefaultInstance() : serverVerifyTelCode_;
        } else {
          return serverVerifyTelCodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public Builder setServerVerifyTelCode(com.kys.util.netty.proto.HallProto.ServerVerifyTelCode value) {
        if (serverVerifyTelCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverVerifyTelCode_ = value;
          onChanged();
        } else {
          serverVerifyTelCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public Builder setServerVerifyTelCode(
          com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder builderForValue) {
        if (serverVerifyTelCodeBuilder_ == null) {
          serverVerifyTelCode_ = builderForValue.build();
          onChanged();
        } else {
          serverVerifyTelCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public Builder mergeServerVerifyTelCode(com.kys.util.netty.proto.HallProto.ServerVerifyTelCode value) {
        if (serverVerifyTelCodeBuilder_ == null) {
          if (serverVerifyTelCode_ != null) {
            serverVerifyTelCode_ =
              com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.newBuilder(serverVerifyTelCode_).mergeFrom(value).buildPartial();
          } else {
            serverVerifyTelCode_ = value;
          }
          onChanged();
        } else {
          serverVerifyTelCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public Builder clearServerVerifyTelCode() {
        if (serverVerifyTelCodeBuilder_ == null) {
          serverVerifyTelCode_ = null;
          onChanged();
        } else {
          serverVerifyTelCode_ = null;
          serverVerifyTelCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder getServerVerifyTelCodeBuilder() {
        
        onChanged();
        return getServerVerifyTelCodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder getServerVerifyTelCodeOrBuilder() {
        if (serverVerifyTelCodeBuilder_ != null) {
          return serverVerifyTelCodeBuilder_.getMessageOrBuilder();
        } else {
          return serverVerifyTelCode_ == null ?
              com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.getDefaultInstance() : serverVerifyTelCode_;
        }
      }
      /**
       * <pre>
       ** 服务器返回校验短信码ACK消息
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerVerifyTelCode serverVerifyTelCode = 213;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerVerifyTelCode, com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder> 
          getServerVerifyTelCodeFieldBuilder() {
        if (serverVerifyTelCodeBuilder_ == null) {
          serverVerifyTelCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerVerifyTelCode, com.kys.util.netty.proto.HallProto.ServerVerifyTelCode.Builder, com.kys.util.netty.proto.HallProto.ServerVerifyTelCodeOrBuilder>(
                  getServerVerifyTelCode(),
                  getParentForChildren(),
                  isClean());
          serverVerifyTelCode_ = null;
        }
        return serverVerifyTelCodeBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerQueryShareList serverQueryShareList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryShareList, com.kys.util.netty.proto.HallProto.ServerQueryShareList.Builder, com.kys.util.netty.proto.HallProto.ServerQueryShareListOrBuilder> serverQueryShareListBuilder_;
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      public boolean hasServerQueryShareList() {
        return serverQueryShareListBuilder_ != null || serverQueryShareList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryShareList getServerQueryShareList() {
        if (serverQueryShareListBuilder_ == null) {
          return serverQueryShareList_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryShareList.getDefaultInstance() : serverQueryShareList_;
        } else {
          return serverQueryShareListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      public Builder setServerQueryShareList(com.kys.util.netty.proto.HallProto.ServerQueryShareList value) {
        if (serverQueryShareListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryShareList_ = value;
          onChanged();
        } else {
          serverQueryShareListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      public Builder setServerQueryShareList(
          com.kys.util.netty.proto.HallProto.ServerQueryShareList.Builder builderForValue) {
        if (serverQueryShareListBuilder_ == null) {
          serverQueryShareList_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryShareListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      public Builder mergeServerQueryShareList(com.kys.util.netty.proto.HallProto.ServerQueryShareList value) {
        if (serverQueryShareListBuilder_ == null) {
          if (serverQueryShareList_ != null) {
            serverQueryShareList_ =
              com.kys.util.netty.proto.HallProto.ServerQueryShareList.newBuilder(serverQueryShareList_).mergeFrom(value).buildPartial();
          } else {
            serverQueryShareList_ = value;
          }
          onChanged();
        } else {
          serverQueryShareListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      public Builder clearServerQueryShareList() {
        if (serverQueryShareListBuilder_ == null) {
          serverQueryShareList_ = null;
          onChanged();
        } else {
          serverQueryShareList_ = null;
          serverQueryShareListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryShareList.Builder getServerQueryShareListBuilder() {
        
        onChanged();
        return getServerQueryShareListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryShareListOrBuilder getServerQueryShareListOrBuilder() {
        if (serverQueryShareListBuilder_ != null) {
          return serverQueryShareListBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryShareList_ == null ?
              com.kys.util.netty.proto.HallProto.ServerQueryShareList.getDefaultInstance() : serverQueryShareList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回分享列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareList serverQueryShareList = 214;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryShareList, com.kys.util.netty.proto.HallProto.ServerQueryShareList.Builder, com.kys.util.netty.proto.HallProto.ServerQueryShareListOrBuilder> 
          getServerQueryShareListFieldBuilder() {
        if (serverQueryShareListBuilder_ == null) {
          serverQueryShareListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerQueryShareList, com.kys.util.netty.proto.HallProto.ServerQueryShareList.Builder, com.kys.util.netty.proto.HallProto.ServerQueryShareListOrBuilder>(
                  getServerQueryShareList(),
                  getParentForChildren(),
                  isClean());
          serverQueryShareList_ = null;
        }
        return serverQueryShareListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerQueryShareDetail serverQueryShareDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryShareDetail, com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.Builder, com.kys.util.netty.proto.HallProto.ServerQueryShareDetailOrBuilder> serverQueryShareDetailBuilder_;
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      public boolean hasServerQueryShareDetail() {
        return serverQueryShareDetailBuilder_ != null || serverQueryShareDetail_ != null;
      }
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryShareDetail getServerQueryShareDetail() {
        if (serverQueryShareDetailBuilder_ == null) {
          return serverQueryShareDetail_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.getDefaultInstance() : serverQueryShareDetail_;
        } else {
          return serverQueryShareDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      public Builder setServerQueryShareDetail(com.kys.util.netty.proto.HallProto.ServerQueryShareDetail value) {
        if (serverQueryShareDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryShareDetail_ = value;
          onChanged();
        } else {
          serverQueryShareDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      public Builder setServerQueryShareDetail(
          com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.Builder builderForValue) {
        if (serverQueryShareDetailBuilder_ == null) {
          serverQueryShareDetail_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryShareDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      public Builder mergeServerQueryShareDetail(com.kys.util.netty.proto.HallProto.ServerQueryShareDetail value) {
        if (serverQueryShareDetailBuilder_ == null) {
          if (serverQueryShareDetail_ != null) {
            serverQueryShareDetail_ =
              com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.newBuilder(serverQueryShareDetail_).mergeFrom(value).buildPartial();
          } else {
            serverQueryShareDetail_ = value;
          }
          onChanged();
        } else {
          serverQueryShareDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      public Builder clearServerQueryShareDetail() {
        if (serverQueryShareDetailBuilder_ == null) {
          serverQueryShareDetail_ = null;
          onChanged();
        } else {
          serverQueryShareDetail_ = null;
          serverQueryShareDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.Builder getServerQueryShareDetailBuilder() {
        
        onChanged();
        return getServerQueryShareDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryShareDetailOrBuilder getServerQueryShareDetailOrBuilder() {
        if (serverQueryShareDetailBuilder_ != null) {
          return serverQueryShareDetailBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryShareDetail_ == null ?
              com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.getDefaultInstance() : serverQueryShareDetail_;
        }
      }
      /**
       * <pre>
       ** 服务器返回详细信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryShareDetail serverQueryShareDetail = 215;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryShareDetail, com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.Builder, com.kys.util.netty.proto.HallProto.ServerQueryShareDetailOrBuilder> 
          getServerQueryShareDetailFieldBuilder() {
        if (serverQueryShareDetailBuilder_ == null) {
          serverQueryShareDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerQueryShareDetail, com.kys.util.netty.proto.HallProto.ServerQueryShareDetail.Builder, com.kys.util.netty.proto.HallProto.ServerQueryShareDetailOrBuilder>(
                  getServerQueryShareDetail(),
                  getParentForChildren(),
                  isClean());
          serverQueryShareDetail_ = null;
        }
        return serverQueryShareDetailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetTaskAward serverGetTaskAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetTaskAward, com.kys.util.netty.proto.HallProto.ServerGetTaskAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetTaskAwardOrBuilder> serverGetTaskAwardBuilder_;
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      public boolean hasServerGetTaskAward() {
        return serverGetTaskAwardBuilder_ != null || serverGetTaskAward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetTaskAward getServerGetTaskAward() {
        if (serverGetTaskAwardBuilder_ == null) {
          return serverGetTaskAward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetTaskAward.getDefaultInstance() : serverGetTaskAward_;
        } else {
          return serverGetTaskAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      public Builder setServerGetTaskAward(com.kys.util.netty.proto.HallProto.ServerGetTaskAward value) {
        if (serverGetTaskAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetTaskAward_ = value;
          onChanged();
        } else {
          serverGetTaskAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      public Builder setServerGetTaskAward(
          com.kys.util.netty.proto.HallProto.ServerGetTaskAward.Builder builderForValue) {
        if (serverGetTaskAwardBuilder_ == null) {
          serverGetTaskAward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetTaskAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      public Builder mergeServerGetTaskAward(com.kys.util.netty.proto.HallProto.ServerGetTaskAward value) {
        if (serverGetTaskAwardBuilder_ == null) {
          if (serverGetTaskAward_ != null) {
            serverGetTaskAward_ =
              com.kys.util.netty.proto.HallProto.ServerGetTaskAward.newBuilder(serverGetTaskAward_).mergeFrom(value).buildPartial();
          } else {
            serverGetTaskAward_ = value;
          }
          onChanged();
        } else {
          serverGetTaskAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      public Builder clearServerGetTaskAward() {
        if (serverGetTaskAwardBuilder_ == null) {
          serverGetTaskAward_ = null;
          onChanged();
        } else {
          serverGetTaskAward_ = null;
          serverGetTaskAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetTaskAward.Builder getServerGetTaskAwardBuilder() {
        
        onChanged();
        return getServerGetTaskAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetTaskAwardOrBuilder getServerGetTaskAwardOrBuilder() {
        if (serverGetTaskAwardBuilder_ != null) {
          return serverGetTaskAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetTaskAward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetTaskAward.getDefaultInstance() : serverGetTaskAward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回领取任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTaskAward serverGetTaskAward = 216;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetTaskAward, com.kys.util.netty.proto.HallProto.ServerGetTaskAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetTaskAwardOrBuilder> 
          getServerGetTaskAwardFieldBuilder() {
        if (serverGetTaskAwardBuilder_ == null) {
          serverGetTaskAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetTaskAward, com.kys.util.netty.proto.HallProto.ServerGetTaskAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetTaskAwardOrBuilder>(
                  getServerGetTaskAward(),
                  getParentForChildren(),
                  isClean());
          serverGetTaskAward_ = null;
        }
        return serverGetTaskAwardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerSharePackage serverSharePackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSharePackage, com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder, com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder> serverSharePackageBuilder_;
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public boolean hasServerSharePackage() {
        return serverSharePackageBuilder_ != null || serverSharePackage_ != null;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSharePackage getServerSharePackage() {
        if (serverSharePackageBuilder_ == null) {
          return serverSharePackage_ == null ? com.kys.util.netty.proto.HallProto.ServerSharePackage.getDefaultInstance() : serverSharePackage_;
        } else {
          return serverSharePackageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public Builder setServerSharePackage(com.kys.util.netty.proto.HallProto.ServerSharePackage value) {
        if (serverSharePackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSharePackage_ = value;
          onChanged();
        } else {
          serverSharePackageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public Builder setServerSharePackage(
          com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder builderForValue) {
        if (serverSharePackageBuilder_ == null) {
          serverSharePackage_ = builderForValue.build();
          onChanged();
        } else {
          serverSharePackageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public Builder mergeServerSharePackage(com.kys.util.netty.proto.HallProto.ServerSharePackage value) {
        if (serverSharePackageBuilder_ == null) {
          if (serverSharePackage_ != null) {
            serverSharePackage_ =
              com.kys.util.netty.proto.HallProto.ServerSharePackage.newBuilder(serverSharePackage_).mergeFrom(value).buildPartial();
          } else {
            serverSharePackage_ = value;
          }
          onChanged();
        } else {
          serverSharePackageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public Builder clearServerSharePackage() {
        if (serverSharePackageBuilder_ == null) {
          serverSharePackage_ = null;
          onChanged();
        } else {
          serverSharePackage_ = null;
          serverSharePackageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder getServerSharePackageBuilder() {
        
        onChanged();
        return getServerSharePackageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder getServerSharePackageOrBuilder() {
        if (serverSharePackageBuilder_ != null) {
          return serverSharePackageBuilder_.getMessageOrBuilder();
        } else {
          return serverSharePackage_ == null ?
              com.kys.util.netty.proto.HallProto.ServerSharePackage.getDefaultInstance() : serverSharePackage_;
        }
      }
      /**
       * <pre>
       ** 服务器分包接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSharePackage serverSharePackage = 217;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerSharePackage, com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder, com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder> 
          getServerSharePackageFieldBuilder() {
        if (serverSharePackageBuilder_ == null) {
          serverSharePackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerSharePackage, com.kys.util.netty.proto.HallProto.ServerSharePackage.Builder, com.kys.util.netty.proto.HallProto.ServerSharePackageOrBuilder>(
                  getServerSharePackage(),
                  getParentForChildren(),
                  isClean());
          serverSharePackage_ = null;
        }
        return serverSharePackageBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetAwardList serverGetAwardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetAwardList, com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder> serverGetAwardListBuilder_;
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public boolean hasServerGetAwardList() {
        return serverGetAwardListBuilder_ != null || serverGetAwardList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAwardList getServerGetAwardList() {
        if (serverGetAwardListBuilder_ == null) {
          return serverGetAwardList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetAwardList.getDefaultInstance() : serverGetAwardList_;
        } else {
          return serverGetAwardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public Builder setServerGetAwardList(com.kys.util.netty.proto.HallProto.ServerGetAwardList value) {
        if (serverGetAwardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetAwardList_ = value;
          onChanged();
        } else {
          serverGetAwardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public Builder setServerGetAwardList(
          com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder builderForValue) {
        if (serverGetAwardListBuilder_ == null) {
          serverGetAwardList_ = builderForValue.build();
          onChanged();
        } else {
          serverGetAwardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public Builder mergeServerGetAwardList(com.kys.util.netty.proto.HallProto.ServerGetAwardList value) {
        if (serverGetAwardListBuilder_ == null) {
          if (serverGetAwardList_ != null) {
            serverGetAwardList_ =
              com.kys.util.netty.proto.HallProto.ServerGetAwardList.newBuilder(serverGetAwardList_).mergeFrom(value).buildPartial();
          } else {
            serverGetAwardList_ = value;
          }
          onChanged();
        } else {
          serverGetAwardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public Builder clearServerGetAwardList() {
        if (serverGetAwardListBuilder_ == null) {
          serverGetAwardList_ = null;
          onChanged();
        } else {
          serverGetAwardList_ = null;
          serverGetAwardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder getServerGetAwardListBuilder() {
        
        onChanged();
        return getServerGetAwardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder getServerGetAwardListOrBuilder() {
        if (serverGetAwardListBuilder_ != null) {
          return serverGetAwardListBuilder_.getMessageOrBuilder();
        } else {
          return serverGetAwardList_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetAwardList.getDefaultInstance() : serverGetAwardList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回大厅奖励列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAwardList serverGetAwardList = 218;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetAwardList, com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder> 
          getServerGetAwardListFieldBuilder() {
        if (serverGetAwardListBuilder_ == null) {
          serverGetAwardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetAwardList, com.kys.util.netty.proto.HallProto.ServerGetAwardList.Builder, com.kys.util.netty.proto.HallProto.ServerGetAwardListOrBuilder>(
                  getServerGetAwardList(),
                  getParentForChildren(),
                  isClean());
          serverGetAwardList_ = null;
        }
        return serverGetAwardListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerCheckConnect serverCheckConnect_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerCheckConnect, com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder> serverCheckConnectBuilder_;
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public boolean hasServerCheckConnect() {
        return serverCheckConnectBuilder_ != null || serverCheckConnect_ != null;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCheckConnect getServerCheckConnect() {
        if (serverCheckConnectBuilder_ == null) {
          return serverCheckConnect_ == null ? com.kys.util.netty.proto.HallProto.ServerCheckConnect.getDefaultInstance() : serverCheckConnect_;
        } else {
          return serverCheckConnectBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public Builder setServerCheckConnect(com.kys.util.netty.proto.HallProto.ServerCheckConnect value) {
        if (serverCheckConnectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverCheckConnect_ = value;
          onChanged();
        } else {
          serverCheckConnectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public Builder setServerCheckConnect(
          com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder builderForValue) {
        if (serverCheckConnectBuilder_ == null) {
          serverCheckConnect_ = builderForValue.build();
          onChanged();
        } else {
          serverCheckConnectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public Builder mergeServerCheckConnect(com.kys.util.netty.proto.HallProto.ServerCheckConnect value) {
        if (serverCheckConnectBuilder_ == null) {
          if (serverCheckConnect_ != null) {
            serverCheckConnect_ =
              com.kys.util.netty.proto.HallProto.ServerCheckConnect.newBuilder(serverCheckConnect_).mergeFrom(value).buildPartial();
          } else {
            serverCheckConnect_ = value;
          }
          onChanged();
        } else {
          serverCheckConnectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public Builder clearServerCheckConnect() {
        if (serverCheckConnectBuilder_ == null) {
          serverCheckConnect_ = null;
          onChanged();
        } else {
          serverCheckConnect_ = null;
          serverCheckConnectBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder getServerCheckConnectBuilder() {
        
        onChanged();
        return getServerCheckConnectFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder getServerCheckConnectOrBuilder() {
        if (serverCheckConnectBuilder_ != null) {
          return serverCheckConnectBuilder_.getMessageOrBuilder();
        } else {
          return serverCheckConnect_ == null ?
              com.kys.util.netty.proto.HallProto.ServerCheckConnect.getDefaultInstance() : serverCheckConnect_;
        }
      }
      /**
       * <pre>
       ** 服务器返回连接状态 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerCheckConnect serverCheckConnect = 219;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerCheckConnect, com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder> 
          getServerCheckConnectFieldBuilder() {
        if (serverCheckConnectBuilder_ == null) {
          serverCheckConnectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerCheckConnect, com.kys.util.netty.proto.HallProto.ServerCheckConnect.Builder, com.kys.util.netty.proto.HallProto.ServerCheckConnectOrBuilder>(
                  getServerCheckConnect(),
                  getParentForChildren(),
                  isClean());
          serverCheckConnect_ = null;
        }
        return serverCheckConnectBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetPFList serverGetPFList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetPFList, com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder, com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder> serverGetPFListBuilder_;
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public boolean hasServerGetPFList() {
        return serverGetPFListBuilder_ != null || serverGetPFList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetPFList getServerGetPFList() {
        if (serverGetPFListBuilder_ == null) {
          return serverGetPFList_ == null ? com.kys.util.netty.proto.HallProto.ServerGetPFList.getDefaultInstance() : serverGetPFList_;
        } else {
          return serverGetPFListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public Builder setServerGetPFList(com.kys.util.netty.proto.HallProto.ServerGetPFList value) {
        if (serverGetPFListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetPFList_ = value;
          onChanged();
        } else {
          serverGetPFListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public Builder setServerGetPFList(
          com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder builderForValue) {
        if (serverGetPFListBuilder_ == null) {
          serverGetPFList_ = builderForValue.build();
          onChanged();
        } else {
          serverGetPFListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public Builder mergeServerGetPFList(com.kys.util.netty.proto.HallProto.ServerGetPFList value) {
        if (serverGetPFListBuilder_ == null) {
          if (serverGetPFList_ != null) {
            serverGetPFList_ =
              com.kys.util.netty.proto.HallProto.ServerGetPFList.newBuilder(serverGetPFList_).mergeFrom(value).buildPartial();
          } else {
            serverGetPFList_ = value;
          }
          onChanged();
        } else {
          serverGetPFListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public Builder clearServerGetPFList() {
        if (serverGetPFListBuilder_ == null) {
          serverGetPFList_ = null;
          onChanged();
        } else {
          serverGetPFList_ = null;
          serverGetPFListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder getServerGetPFListBuilder() {
        
        onChanged();
        return getServerGetPFListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder getServerGetPFListOrBuilder() {
        if (serverGetPFListBuilder_ != null) {
          return serverGetPFListBuilder_.getMessageOrBuilder();
        } else {
          return serverGetPFList_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetPFList.getDefaultInstance() : serverGetPFList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回获取头像框列表 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetPFList serverGetPFList = 220;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetPFList, com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder, com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder> 
          getServerGetPFListFieldBuilder() {
        if (serverGetPFListBuilder_ == null) {
          serverGetPFListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetPFList, com.kys.util.netty.proto.HallProto.ServerGetPFList.Builder, com.kys.util.netty.proto.HallProto.ServerGetPFListOrBuilder>(
                  getServerGetPFList(),
                  getParentForChildren(),
                  isClean());
          serverGetPFList_ = null;
        }
        return serverGetPFListBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerChoosePF serverChoosePF_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerChoosePF, com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder, com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder> serverChoosePFBuilder_;
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public boolean hasServerChoosePF() {
        return serverChoosePFBuilder_ != null || serverChoosePF_ != null;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerChoosePF getServerChoosePF() {
        if (serverChoosePFBuilder_ == null) {
          return serverChoosePF_ == null ? com.kys.util.netty.proto.HallProto.ServerChoosePF.getDefaultInstance() : serverChoosePF_;
        } else {
          return serverChoosePFBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public Builder setServerChoosePF(com.kys.util.netty.proto.HallProto.ServerChoosePF value) {
        if (serverChoosePFBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverChoosePF_ = value;
          onChanged();
        } else {
          serverChoosePFBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public Builder setServerChoosePF(
          com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder builderForValue) {
        if (serverChoosePFBuilder_ == null) {
          serverChoosePF_ = builderForValue.build();
          onChanged();
        } else {
          serverChoosePFBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public Builder mergeServerChoosePF(com.kys.util.netty.proto.HallProto.ServerChoosePF value) {
        if (serverChoosePFBuilder_ == null) {
          if (serverChoosePF_ != null) {
            serverChoosePF_ =
              com.kys.util.netty.proto.HallProto.ServerChoosePF.newBuilder(serverChoosePF_).mergeFrom(value).buildPartial();
          } else {
            serverChoosePF_ = value;
          }
          onChanged();
        } else {
          serverChoosePFBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public Builder clearServerChoosePF() {
        if (serverChoosePFBuilder_ == null) {
          serverChoosePF_ = null;
          onChanged();
        } else {
          serverChoosePF_ = null;
          serverChoosePFBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder getServerChoosePFBuilder() {
        
        onChanged();
        return getServerChoosePFFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder getServerChoosePFOrBuilder() {
        if (serverChoosePFBuilder_ != null) {
          return serverChoosePFBuilder_.getMessageOrBuilder();
        } else {
          return serverChoosePF_ == null ?
              com.kys.util.netty.proto.HallProto.ServerChoosePF.getDefaultInstance() : serverChoosePF_;
        }
      }
      /**
       * <pre>
       ** 服务器选择头像框 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerChoosePF serverChoosePF = 221;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerChoosePF, com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder, com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder> 
          getServerChoosePFFieldBuilder() {
        if (serverChoosePFBuilder_ == null) {
          serverChoosePFBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerChoosePF, com.kys.util.netty.proto.HallProto.ServerChoosePF.Builder, com.kys.util.netty.proto.HallProto.ServerChoosePFOrBuilder>(
                  getServerChoosePF(),
                  getParentForChildren(),
                  isClean());
          serverChoosePF_ = null;
        }
        return serverChoosePFBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetHistoryRank serverGetHistoryRank_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetHistoryRank, com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder> serverGetHistoryRankBuilder_;
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public boolean hasServerGetHistoryRank() {
        return serverGetHistoryRankBuilder_ != null || serverGetHistoryRank_ != null;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHistoryRank getServerGetHistoryRank() {
        if (serverGetHistoryRankBuilder_ == null) {
          return serverGetHistoryRank_ == null ? com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.getDefaultInstance() : serverGetHistoryRank_;
        } else {
          return serverGetHistoryRankBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public Builder setServerGetHistoryRank(com.kys.util.netty.proto.HallProto.ServerGetHistoryRank value) {
        if (serverGetHistoryRankBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetHistoryRank_ = value;
          onChanged();
        } else {
          serverGetHistoryRankBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public Builder setServerGetHistoryRank(
          com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder builderForValue) {
        if (serverGetHistoryRankBuilder_ == null) {
          serverGetHistoryRank_ = builderForValue.build();
          onChanged();
        } else {
          serverGetHistoryRankBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public Builder mergeServerGetHistoryRank(com.kys.util.netty.proto.HallProto.ServerGetHistoryRank value) {
        if (serverGetHistoryRankBuilder_ == null) {
          if (serverGetHistoryRank_ != null) {
            serverGetHistoryRank_ =
              com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.newBuilder(serverGetHistoryRank_).mergeFrom(value).buildPartial();
          } else {
            serverGetHistoryRank_ = value;
          }
          onChanged();
        } else {
          serverGetHistoryRankBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public Builder clearServerGetHistoryRank() {
        if (serverGetHistoryRankBuilder_ == null) {
          serverGetHistoryRank_ = null;
          onChanged();
        } else {
          serverGetHistoryRank_ = null;
          serverGetHistoryRankBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder getServerGetHistoryRankBuilder() {
        
        onChanged();
        return getServerGetHistoryRankFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder getServerGetHistoryRankOrBuilder() {
        if (serverGetHistoryRankBuilder_ != null) {
          return serverGetHistoryRankBuilder_.getMessageOrBuilder();
        } else {
          return serverGetHistoryRank_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.getDefaultInstance() : serverGetHistoryRank_;
        }
      }
      /**
       * <pre>
       ** 服务器返回上周排行榜 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetHistoryRank serverGetHistoryRank = 222;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetHistoryRank, com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder> 
          getServerGetHistoryRankFieldBuilder() {
        if (serverGetHistoryRankBuilder_ == null) {
          serverGetHistoryRankBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetHistoryRank, com.kys.util.netty.proto.HallProto.ServerGetHistoryRank.Builder, com.kys.util.netty.proto.HallProto.ServerGetHistoryRankOrBuilder>(
                  getServerGetHistoryRank(),
                  getParentForChildren(),
                  isClean());
          serverGetHistoryRank_ = null;
        }
        return serverGetHistoryRankBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerH5Reward serverH5Reward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerH5Reward, com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder, com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder> serverH5RewardBuilder_;
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public boolean hasServerH5Reward() {
        return serverH5RewardBuilder_ != null || serverH5Reward_ != null;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerH5Reward getServerH5Reward() {
        if (serverH5RewardBuilder_ == null) {
          return serverH5Reward_ == null ? com.kys.util.netty.proto.HallProto.ServerH5Reward.getDefaultInstance() : serverH5Reward_;
        } else {
          return serverH5RewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public Builder setServerH5Reward(com.kys.util.netty.proto.HallProto.ServerH5Reward value) {
        if (serverH5RewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverH5Reward_ = value;
          onChanged();
        } else {
          serverH5RewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public Builder setServerH5Reward(
          com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder builderForValue) {
        if (serverH5RewardBuilder_ == null) {
          serverH5Reward_ = builderForValue.build();
          onChanged();
        } else {
          serverH5RewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public Builder mergeServerH5Reward(com.kys.util.netty.proto.HallProto.ServerH5Reward value) {
        if (serverH5RewardBuilder_ == null) {
          if (serverH5Reward_ != null) {
            serverH5Reward_ =
              com.kys.util.netty.proto.HallProto.ServerH5Reward.newBuilder(serverH5Reward_).mergeFrom(value).buildPartial();
          } else {
            serverH5Reward_ = value;
          }
          onChanged();
        } else {
          serverH5RewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public Builder clearServerH5Reward() {
        if (serverH5RewardBuilder_ == null) {
          serverH5Reward_ = null;
          onChanged();
        } else {
          serverH5Reward_ = null;
          serverH5RewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder getServerH5RewardBuilder() {
        
        onChanged();
        return getServerH5RewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder getServerH5RewardOrBuilder() {
        if (serverH5RewardBuilder_ != null) {
          return serverH5RewardBuilder_.getMessageOrBuilder();
        } else {
          return serverH5Reward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerH5Reward.getDefaultInstance() : serverH5Reward_;
        }
      }
      /**
       * <pre>
       ** 服务端返回H5新用户奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerH5Reward serverH5Reward = 223;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerH5Reward, com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder, com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder> 
          getServerH5RewardFieldBuilder() {
        if (serverH5RewardBuilder_ == null) {
          serverH5RewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerH5Reward, com.kys.util.netty.proto.HallProto.ServerH5Reward.Builder, com.kys.util.netty.proto.HallProto.ServerH5RewardOrBuilder>(
                  getServerH5Reward(),
                  getParentForChildren(),
                  isClean());
          serverH5Reward_ = null;
        }
        return serverH5RewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup serverNewDrawWinCup_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder> serverNewDrawWinCupBuilder_;
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public boolean hasServerNewDrawWinCup() {
        return serverNewDrawWinCupBuilder_ != null || serverNewDrawWinCup_ != null;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup getServerNewDrawWinCup() {
        if (serverNewDrawWinCupBuilder_ == null) {
          return serverNewDrawWinCup_ == null ? com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.getDefaultInstance() : serverNewDrawWinCup_;
        } else {
          return serverNewDrawWinCupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public Builder setServerNewDrawWinCup(com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup value) {
        if (serverNewDrawWinCupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverNewDrawWinCup_ = value;
          onChanged();
        } else {
          serverNewDrawWinCupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public Builder setServerNewDrawWinCup(
          com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder builderForValue) {
        if (serverNewDrawWinCupBuilder_ == null) {
          serverNewDrawWinCup_ = builderForValue.build();
          onChanged();
        } else {
          serverNewDrawWinCupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public Builder mergeServerNewDrawWinCup(com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup value) {
        if (serverNewDrawWinCupBuilder_ == null) {
          if (serverNewDrawWinCup_ != null) {
            serverNewDrawWinCup_ =
              com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.newBuilder(serverNewDrawWinCup_).mergeFrom(value).buildPartial();
          } else {
            serverNewDrawWinCup_ = value;
          }
          onChanged();
        } else {
          serverNewDrawWinCupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public Builder clearServerNewDrawWinCup() {
        if (serverNewDrawWinCupBuilder_ == null) {
          serverNewDrawWinCup_ = null;
          onChanged();
        } else {
          serverNewDrawWinCup_ = null;
          serverNewDrawWinCupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder getServerNewDrawWinCupBuilder() {
        
        onChanged();
        return getServerNewDrawWinCupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder getServerNewDrawWinCupOrBuilder() {
        if (serverNewDrawWinCupBuilder_ != null) {
          return serverNewDrawWinCupBuilder_.getMessageOrBuilder();
        } else {
          return serverNewDrawWinCup_ == null ?
              com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.getDefaultInstance() : serverNewDrawWinCup_;
        }
      }
      /**
       * <pre>
       ** 服务器新抽奖接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerNewDrawWinCup serverNewDrawWinCup = 224;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder> 
          getServerNewDrawWinCupFieldBuilder() {
        if (serverNewDrawWinCupBuilder_ == null) {
          serverNewDrawWinCupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCup.Builder, com.kys.util.netty.proto.HallProto.ServerNewDrawWinCupOrBuilder>(
                  getServerNewDrawWinCup(),
                  getParentForChildren(),
                  isClean());
          serverNewDrawWinCup_ = null;
        }
        return serverNewDrawWinCupBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo serverGetNewHallInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder> serverGetNewHallInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public boolean hasServerGetNewHallInfo() {
        return serverGetNewHallInfoBuilder_ != null || serverGetNewHallInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo getServerGetNewHallInfo() {
        if (serverGetNewHallInfoBuilder_ == null) {
          return serverGetNewHallInfo_ == null ? com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.getDefaultInstance() : serverGetNewHallInfo_;
        } else {
          return serverGetNewHallInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public Builder setServerGetNewHallInfo(com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo value) {
        if (serverGetNewHallInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetNewHallInfo_ = value;
          onChanged();
        } else {
          serverGetNewHallInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public Builder setServerGetNewHallInfo(
          com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder builderForValue) {
        if (serverGetNewHallInfoBuilder_ == null) {
          serverGetNewHallInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetNewHallInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public Builder mergeServerGetNewHallInfo(com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo value) {
        if (serverGetNewHallInfoBuilder_ == null) {
          if (serverGetNewHallInfo_ != null) {
            serverGetNewHallInfo_ =
              com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.newBuilder(serverGetNewHallInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetNewHallInfo_ = value;
          }
          onChanged();
        } else {
          serverGetNewHallInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public Builder clearServerGetNewHallInfo() {
        if (serverGetNewHallInfoBuilder_ == null) {
          serverGetNewHallInfo_ = null;
          onChanged();
        } else {
          serverGetNewHallInfo_ = null;
          serverGetNewHallInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder getServerGetNewHallInfoBuilder() {
        
        onChanged();
        return getServerGetNewHallInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder getServerGetNewHallInfoOrBuilder() {
        if (serverGetNewHallInfoBuilder_ != null) {
          return serverGetNewHallInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetNewHallInfo_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.getDefaultInstance() : serverGetNewHallInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回(新)大厅信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNewHallInfo serverGetNewHallInfo = 225;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder> 
          getServerGetNewHallInfoFieldBuilder() {
        if (serverGetNewHallInfoBuilder_ == null) {
          serverGetNewHallInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfo.Builder, com.kys.util.netty.proto.HallProto.ServerGetNewHallInfoOrBuilder>(
                  getServerGetNewHallInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetNewHallInfo_ = null;
        }
        return serverGetNewHallInfoBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ServerGetSkinInfo serverGetSkinInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetSkinInfo, com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetSkinInfoOrBuilder> serverGetSkinInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      public boolean hasServerGetSkinInfo() {
        return serverGetSkinInfoBuilder_ != null || serverGetSkinInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetSkinInfo getServerGetSkinInfo() {
        if (serverGetSkinInfoBuilder_ == null) {
          return serverGetSkinInfo_ == null ? com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.getDefaultInstance() : serverGetSkinInfo_;
        } else {
          return serverGetSkinInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      public Builder setServerGetSkinInfo(com.kys.util.netty.proto.UserProto.ServerGetSkinInfo value) {
        if (serverGetSkinInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetSkinInfo_ = value;
          onChanged();
        } else {
          serverGetSkinInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      public Builder setServerGetSkinInfo(
          com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.Builder builderForValue) {
        if (serverGetSkinInfoBuilder_ == null) {
          serverGetSkinInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetSkinInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      public Builder mergeServerGetSkinInfo(com.kys.util.netty.proto.UserProto.ServerGetSkinInfo value) {
        if (serverGetSkinInfoBuilder_ == null) {
          if (serverGetSkinInfo_ != null) {
            serverGetSkinInfo_ =
              com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.newBuilder(serverGetSkinInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetSkinInfo_ = value;
          }
          onChanged();
        } else {
          serverGetSkinInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      public Builder clearServerGetSkinInfo() {
        if (serverGetSkinInfoBuilder_ == null) {
          serverGetSkinInfo_ = null;
          onChanged();
        } else {
          serverGetSkinInfo_ = null;
          serverGetSkinInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.Builder getServerGetSkinInfoBuilder() {
        
        onChanged();
        return getServerGetSkinInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerGetSkinInfoOrBuilder getServerGetSkinInfoOrBuilder() {
        if (serverGetSkinInfoBuilder_ != null) {
          return serverGetSkinInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetSkinInfo_ == null ?
              com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.getDefaultInstance() : serverGetSkinInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家皮肤界面信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetSkinInfo serverGetSkinInfo = 226;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerGetSkinInfo, com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetSkinInfoOrBuilder> 
          getServerGetSkinInfoFieldBuilder() {
        if (serverGetSkinInfoBuilder_ == null) {
          serverGetSkinInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ServerGetSkinInfo, com.kys.util.netty.proto.UserProto.ServerGetSkinInfo.Builder, com.kys.util.netty.proto.UserProto.ServerGetSkinInfoOrBuilder>(
                  getServerGetSkinInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetSkinInfo_ = null;
        }
        return serverGetSkinInfoBuilder_;
      }

      private com.kys.util.netty.proto.UserProto.ServerEquipSkin serverEquipSkin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerEquipSkin, com.kys.util.netty.proto.UserProto.ServerEquipSkin.Builder, com.kys.util.netty.proto.UserProto.ServerEquipSkinOrBuilder> serverEquipSkinBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      public boolean hasServerEquipSkin() {
        return serverEquipSkinBuilder_ != null || serverEquipSkin_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerEquipSkin getServerEquipSkin() {
        if (serverEquipSkinBuilder_ == null) {
          return serverEquipSkin_ == null ? com.kys.util.netty.proto.UserProto.ServerEquipSkin.getDefaultInstance() : serverEquipSkin_;
        } else {
          return serverEquipSkinBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      public Builder setServerEquipSkin(com.kys.util.netty.proto.UserProto.ServerEquipSkin value) {
        if (serverEquipSkinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverEquipSkin_ = value;
          onChanged();
        } else {
          serverEquipSkinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      public Builder setServerEquipSkin(
          com.kys.util.netty.proto.UserProto.ServerEquipSkin.Builder builderForValue) {
        if (serverEquipSkinBuilder_ == null) {
          serverEquipSkin_ = builderForValue.build();
          onChanged();
        } else {
          serverEquipSkinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      public Builder mergeServerEquipSkin(com.kys.util.netty.proto.UserProto.ServerEquipSkin value) {
        if (serverEquipSkinBuilder_ == null) {
          if (serverEquipSkin_ != null) {
            serverEquipSkin_ =
              com.kys.util.netty.proto.UserProto.ServerEquipSkin.newBuilder(serverEquipSkin_).mergeFrom(value).buildPartial();
          } else {
            serverEquipSkin_ = value;
          }
          onChanged();
        } else {
          serverEquipSkinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      public Builder clearServerEquipSkin() {
        if (serverEquipSkinBuilder_ == null) {
          serverEquipSkin_ = null;
          onChanged();
        } else {
          serverEquipSkin_ = null;
          serverEquipSkinBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerEquipSkin.Builder getServerEquipSkinBuilder() {
        
        onChanged();
        return getServerEquipSkinFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      public com.kys.util.netty.proto.UserProto.ServerEquipSkinOrBuilder getServerEquipSkinOrBuilder() {
        if (serverEquipSkinBuilder_ != null) {
          return serverEquipSkinBuilder_.getMessageOrBuilder();
        } else {
          return serverEquipSkin_ == null ?
              com.kys.util.netty.proto.UserProto.ServerEquipSkin.getDefaultInstance() : serverEquipSkin_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家修改皮肤信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEquipSkin serverEquipSkin = 227;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.UserProto.ServerEquipSkin, com.kys.util.netty.proto.UserProto.ServerEquipSkin.Builder, com.kys.util.netty.proto.UserProto.ServerEquipSkinOrBuilder> 
          getServerEquipSkinFieldBuilder() {
        if (serverEquipSkinBuilder_ == null) {
          serverEquipSkinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.UserProto.ServerEquipSkin, com.kys.util.netty.proto.UserProto.ServerEquipSkin.Builder, com.kys.util.netty.proto.UserProto.ServerEquipSkinOrBuilder>(
                  getServerEquipSkin(),
                  getParentForChildren(),
                  isClean());
          serverEquipSkin_ = null;
        }
        return serverEquipSkinBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetStoreData serverGetStoreData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetStoreData, com.kys.util.netty.proto.StoreProto.ServerGetStoreData.Builder, com.kys.util.netty.proto.StoreProto.ServerGetStoreDataOrBuilder> serverGetStoreDataBuilder_;
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      public boolean hasServerGetStoreData() {
        return serverGetStoreDataBuilder_ != null || serverGetStoreData_ != null;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetStoreData getServerGetStoreData() {
        if (serverGetStoreDataBuilder_ == null) {
          return serverGetStoreData_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetStoreData.getDefaultInstance() : serverGetStoreData_;
        } else {
          return serverGetStoreDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      public Builder setServerGetStoreData(com.kys.util.netty.proto.StoreProto.ServerGetStoreData value) {
        if (serverGetStoreDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetStoreData_ = value;
          onChanged();
        } else {
          serverGetStoreDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      public Builder setServerGetStoreData(
          com.kys.util.netty.proto.StoreProto.ServerGetStoreData.Builder builderForValue) {
        if (serverGetStoreDataBuilder_ == null) {
          serverGetStoreData_ = builderForValue.build();
          onChanged();
        } else {
          serverGetStoreDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      public Builder mergeServerGetStoreData(com.kys.util.netty.proto.StoreProto.ServerGetStoreData value) {
        if (serverGetStoreDataBuilder_ == null) {
          if (serverGetStoreData_ != null) {
            serverGetStoreData_ =
              com.kys.util.netty.proto.StoreProto.ServerGetStoreData.newBuilder(serverGetStoreData_).mergeFrom(value).buildPartial();
          } else {
            serverGetStoreData_ = value;
          }
          onChanged();
        } else {
          serverGetStoreDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      public Builder clearServerGetStoreData() {
        if (serverGetStoreDataBuilder_ == null) {
          serverGetStoreData_ = null;
          onChanged();
        } else {
          serverGetStoreData_ = null;
          serverGetStoreDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetStoreData.Builder getServerGetStoreDataBuilder() {
        
        onChanged();
        return getServerGetStoreDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetStoreDataOrBuilder getServerGetStoreDataOrBuilder() {
        if (serverGetStoreDataBuilder_ != null) {
          return serverGetStoreDataBuilder_.getMessageOrBuilder();
        } else {
          return serverGetStoreData_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetStoreData.getDefaultInstance() : serverGetStoreData_;
        }
      }
      /**
       * <pre>
       ** 获取商城 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetStoreData serverGetStoreData = 300;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetStoreData, com.kys.util.netty.proto.StoreProto.ServerGetStoreData.Builder, com.kys.util.netty.proto.StoreProto.ServerGetStoreDataOrBuilder> 
          getServerGetStoreDataFieldBuilder() {
        if (serverGetStoreDataBuilder_ == null) {
          serverGetStoreDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetStoreData, com.kys.util.netty.proto.StoreProto.ServerGetStoreData.Builder, com.kys.util.netty.proto.StoreProto.ServerGetStoreDataOrBuilder>(
                  getServerGetStoreData(),
                  getParentForChildren(),
                  isClean());
          serverGetStoreData_ = null;
        }
        return serverGetStoreDataBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerConvertGoods serverConvertGoods_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerConvertGoods, com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder> serverConvertGoodsBuilder_;
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public boolean hasServerConvertGoods() {
        return serverConvertGoodsBuilder_ != null || serverConvertGoods_ != null;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerConvertGoods getServerConvertGoods() {
        if (serverConvertGoodsBuilder_ == null) {
          return serverConvertGoods_ == null ? com.kys.util.netty.proto.StoreProto.ServerConvertGoods.getDefaultInstance() : serverConvertGoods_;
        } else {
          return serverConvertGoodsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public Builder setServerConvertGoods(com.kys.util.netty.proto.StoreProto.ServerConvertGoods value) {
        if (serverConvertGoodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverConvertGoods_ = value;
          onChanged();
        } else {
          serverConvertGoodsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public Builder setServerConvertGoods(
          com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder builderForValue) {
        if (serverConvertGoodsBuilder_ == null) {
          serverConvertGoods_ = builderForValue.build();
          onChanged();
        } else {
          serverConvertGoodsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public Builder mergeServerConvertGoods(com.kys.util.netty.proto.StoreProto.ServerConvertGoods value) {
        if (serverConvertGoodsBuilder_ == null) {
          if (serverConvertGoods_ != null) {
            serverConvertGoods_ =
              com.kys.util.netty.proto.StoreProto.ServerConvertGoods.newBuilder(serverConvertGoods_).mergeFrom(value).buildPartial();
          } else {
            serverConvertGoods_ = value;
          }
          onChanged();
        } else {
          serverConvertGoodsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public Builder clearServerConvertGoods() {
        if (serverConvertGoodsBuilder_ == null) {
          serverConvertGoods_ = null;
          onChanged();
        } else {
          serverConvertGoods_ = null;
          serverConvertGoodsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder getServerConvertGoodsBuilder() {
        
        onChanged();
        return getServerConvertGoodsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder getServerConvertGoodsOrBuilder() {
        if (serverConvertGoodsBuilder_ != null) {
          return serverConvertGoodsBuilder_.getMessageOrBuilder();
        } else {
          return serverConvertGoods_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerConvertGoods.getDefaultInstance() : serverConvertGoods_;
        }
      }
      /**
       * <pre>
       ** 服务器响应玩家请求兑换 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerConvertGoods serverConvertGoods = 301;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerConvertGoods, com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder> 
          getServerConvertGoodsFieldBuilder() {
        if (serverConvertGoodsBuilder_ == null) {
          serverConvertGoodsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerConvertGoods, com.kys.util.netty.proto.StoreProto.ServerConvertGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerConvertGoodsOrBuilder>(
                  getServerConvertGoods(),
                  getParentForChildren(),
                  isClean());
          serverConvertGoods_ = null;
        }
        return serverConvertGoodsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerWXPayResult serverWXPayResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerWXPayResult, com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder, com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder> serverWXPayResultBuilder_;
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public boolean hasServerWXPayResult() {
        return serverWXPayResultBuilder_ != null || serverWXPayResult_ != null;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerWXPayResult getServerWXPayResult() {
        if (serverWXPayResultBuilder_ == null) {
          return serverWXPayResult_ == null ? com.kys.util.netty.proto.StoreProto.ServerWXPayResult.getDefaultInstance() : serverWXPayResult_;
        } else {
          return serverWXPayResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public Builder setServerWXPayResult(com.kys.util.netty.proto.StoreProto.ServerWXPayResult value) {
        if (serverWXPayResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverWXPayResult_ = value;
          onChanged();
        } else {
          serverWXPayResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public Builder setServerWXPayResult(
          com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder builderForValue) {
        if (serverWXPayResultBuilder_ == null) {
          serverWXPayResult_ = builderForValue.build();
          onChanged();
        } else {
          serverWXPayResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public Builder mergeServerWXPayResult(com.kys.util.netty.proto.StoreProto.ServerWXPayResult value) {
        if (serverWXPayResultBuilder_ == null) {
          if (serverWXPayResult_ != null) {
            serverWXPayResult_ =
              com.kys.util.netty.proto.StoreProto.ServerWXPayResult.newBuilder(serverWXPayResult_).mergeFrom(value).buildPartial();
          } else {
            serverWXPayResult_ = value;
          }
          onChanged();
        } else {
          serverWXPayResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public Builder clearServerWXPayResult() {
        if (serverWXPayResultBuilder_ == null) {
          serverWXPayResult_ = null;
          onChanged();
        } else {
          serverWXPayResult_ = null;
          serverWXPayResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder getServerWXPayResultBuilder() {
        
        onChanged();
        return getServerWXPayResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder getServerWXPayResultOrBuilder() {
        if (serverWXPayResultBuilder_ != null) {
          return serverWXPayResultBuilder_.getMessageOrBuilder();
        } else {
          return serverWXPayResult_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerWXPayResult.getDefaultInstance() : serverWXPayResult_;
        }
      }
      /**
       * <pre>
       ** 返回商城查询结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerWXPayResult serverWXPayResult = 303;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerWXPayResult, com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder, com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder> 
          getServerWXPayResultFieldBuilder() {
        if (serverWXPayResultBuilder_ == null) {
          serverWXPayResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerWXPayResult, com.kys.util.netty.proto.StoreProto.ServerWXPayResult.Builder, com.kys.util.netty.proto.StoreProto.ServerWXPayResultOrBuilder>(
                  getServerWXPayResult(),
                  getParentForChildren(),
                  isClean());
          serverWXPayResult_ = null;
        }
        return serverWXPayResultBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods serverBuyOrderGoods_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder> serverBuyOrderGoodsBuilder_;
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public boolean hasServerBuyOrderGoods() {
        return serverBuyOrderGoodsBuilder_ != null || serverBuyOrderGoods_ != null;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods getServerBuyOrderGoods() {
        if (serverBuyOrderGoodsBuilder_ == null) {
          return serverBuyOrderGoods_ == null ? com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.getDefaultInstance() : serverBuyOrderGoods_;
        } else {
          return serverBuyOrderGoodsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public Builder setServerBuyOrderGoods(com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods value) {
        if (serverBuyOrderGoodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverBuyOrderGoods_ = value;
          onChanged();
        } else {
          serverBuyOrderGoodsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public Builder setServerBuyOrderGoods(
          com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder builderForValue) {
        if (serverBuyOrderGoodsBuilder_ == null) {
          serverBuyOrderGoods_ = builderForValue.build();
          onChanged();
        } else {
          serverBuyOrderGoodsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public Builder mergeServerBuyOrderGoods(com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods value) {
        if (serverBuyOrderGoodsBuilder_ == null) {
          if (serverBuyOrderGoods_ != null) {
            serverBuyOrderGoods_ =
              com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.newBuilder(serverBuyOrderGoods_).mergeFrom(value).buildPartial();
          } else {
            serverBuyOrderGoods_ = value;
          }
          onChanged();
        } else {
          serverBuyOrderGoodsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public Builder clearServerBuyOrderGoods() {
        if (serverBuyOrderGoodsBuilder_ == null) {
          serverBuyOrderGoods_ = null;
          onChanged();
        } else {
          serverBuyOrderGoods_ = null;
          serverBuyOrderGoodsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder getServerBuyOrderGoodsBuilder() {
        
        onChanged();
        return getServerBuyOrderGoodsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder getServerBuyOrderGoodsOrBuilder() {
        if (serverBuyOrderGoodsBuilder_ != null) {
          return serverBuyOrderGoodsBuilder_.getMessageOrBuilder();
        } else {
          return serverBuyOrderGoods_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.getDefaultInstance() : serverBuyOrderGoods_;
        }
      }
      /**
       * <pre>
       ** Server返回商品微信支付下单 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerBuyOrderGoods serverBuyOrderGoods = 304;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder> 
          getServerBuyOrderGoodsFieldBuilder() {
        if (serverBuyOrderGoodsBuilder_ == null) {
          serverBuyOrderGoodsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoods.Builder, com.kys.util.netty.proto.StoreProto.ServerBuyOrderGoodsOrBuilder>(
                  getServerBuyOrderGoods(),
                  getParentForChildren(),
                  isClean());
          serverBuyOrderGoods_ = null;
        }
        return serverBuyOrderGoodsBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge serverGetFirstCharge_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge, com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder> serverGetFirstChargeBuilder_;
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public boolean hasServerGetFirstCharge() {
        return serverGetFirstChargeBuilder_ != null || serverGetFirstCharge_ != null;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge getServerGetFirstCharge() {
        if (serverGetFirstChargeBuilder_ == null) {
          return serverGetFirstCharge_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.getDefaultInstance() : serverGetFirstCharge_;
        } else {
          return serverGetFirstChargeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public Builder setServerGetFirstCharge(com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge value) {
        if (serverGetFirstChargeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetFirstCharge_ = value;
          onChanged();
        } else {
          serverGetFirstChargeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public Builder setServerGetFirstCharge(
          com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder builderForValue) {
        if (serverGetFirstChargeBuilder_ == null) {
          serverGetFirstCharge_ = builderForValue.build();
          onChanged();
        } else {
          serverGetFirstChargeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public Builder mergeServerGetFirstCharge(com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge value) {
        if (serverGetFirstChargeBuilder_ == null) {
          if (serverGetFirstCharge_ != null) {
            serverGetFirstCharge_ =
              com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.newBuilder(serverGetFirstCharge_).mergeFrom(value).buildPartial();
          } else {
            serverGetFirstCharge_ = value;
          }
          onChanged();
        } else {
          serverGetFirstChargeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public Builder clearServerGetFirstCharge() {
        if (serverGetFirstChargeBuilder_ == null) {
          serverGetFirstCharge_ = null;
          onChanged();
        } else {
          serverGetFirstCharge_ = null;
          serverGetFirstChargeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder getServerGetFirstChargeBuilder() {
        
        onChanged();
        return getServerGetFirstChargeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder getServerGetFirstChargeOrBuilder() {
        if (serverGetFirstChargeBuilder_ != null) {
          return serverGetFirstChargeBuilder_.getMessageOrBuilder();
        } else {
          return serverGetFirstCharge_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.getDefaultInstance() : serverGetFirstCharge_;
        }
      }
      /**
       * <pre>
       ** 服务器返回首充商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetFirstCharge serverGetFirstCharge = 305;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge, com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder> 
          getServerGetFirstChargeFieldBuilder() {
        if (serverGetFirstChargeBuilder_ == null) {
          serverGetFirstChargeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge, com.kys.util.netty.proto.StoreProto.ServerGetFirstCharge.Builder, com.kys.util.netty.proto.StoreProto.ServerGetFirstChargeOrBuilder>(
                  getServerGetFirstCharge(),
                  getParentForChildren(),
                  isClean());
          serverGetFirstCharge_ = null;
        }
        return serverGetFirstChargeBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetDailyGift serverGetDailyGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetDailyGift, com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder> serverGetDailyGiftBuilder_;
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public boolean hasServerGetDailyGift() {
        return serverGetDailyGiftBuilder_ != null || serverGetDailyGift_ != null;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetDailyGift getServerGetDailyGift() {
        if (serverGetDailyGiftBuilder_ == null) {
          return serverGetDailyGift_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.getDefaultInstance() : serverGetDailyGift_;
        } else {
          return serverGetDailyGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public Builder setServerGetDailyGift(com.kys.util.netty.proto.StoreProto.ServerGetDailyGift value) {
        if (serverGetDailyGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetDailyGift_ = value;
          onChanged();
        } else {
          serverGetDailyGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public Builder setServerGetDailyGift(
          com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder builderForValue) {
        if (serverGetDailyGiftBuilder_ == null) {
          serverGetDailyGift_ = builderForValue.build();
          onChanged();
        } else {
          serverGetDailyGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public Builder mergeServerGetDailyGift(com.kys.util.netty.proto.StoreProto.ServerGetDailyGift value) {
        if (serverGetDailyGiftBuilder_ == null) {
          if (serverGetDailyGift_ != null) {
            serverGetDailyGift_ =
              com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.newBuilder(serverGetDailyGift_).mergeFrom(value).buildPartial();
          } else {
            serverGetDailyGift_ = value;
          }
          onChanged();
        } else {
          serverGetDailyGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public Builder clearServerGetDailyGift() {
        if (serverGetDailyGiftBuilder_ == null) {
          serverGetDailyGift_ = null;
          onChanged();
        } else {
          serverGetDailyGift_ = null;
          serverGetDailyGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder getServerGetDailyGiftBuilder() {
        
        onChanged();
        return getServerGetDailyGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder getServerGetDailyGiftOrBuilder() {
        if (serverGetDailyGiftBuilder_ != null) {
          return serverGetDailyGiftBuilder_.getMessageOrBuilder();
        } else {
          return serverGetDailyGift_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.getDefaultInstance() : serverGetDailyGift_;
        }
      }
      /**
       * <pre>
       ** 服务器返回每日礼包商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyGift serverGetDailyGift = 306;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetDailyGift, com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder> 
          getServerGetDailyGiftFieldBuilder() {
        if (serverGetDailyGiftBuilder_ == null) {
          serverGetDailyGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetDailyGift, com.kys.util.netty.proto.StoreProto.ServerGetDailyGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetDailyGiftOrBuilder>(
                  getServerGetDailyGift(),
                  getParentForChildren(),
                  isClean());
          serverGetDailyGift_ = null;
        }
        return serverGetDailyGiftBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetMonthCard serverGetMonthCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetMonthCard, com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder> serverGetMonthCardBuilder_;
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public boolean hasServerGetMonthCard() {
        return serverGetMonthCardBuilder_ != null || serverGetMonthCard_ != null;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetMonthCard getServerGetMonthCard() {
        if (serverGetMonthCardBuilder_ == null) {
          return serverGetMonthCard_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.getDefaultInstance() : serverGetMonthCard_;
        } else {
          return serverGetMonthCardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public Builder setServerGetMonthCard(com.kys.util.netty.proto.StoreProto.ServerGetMonthCard value) {
        if (serverGetMonthCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMonthCard_ = value;
          onChanged();
        } else {
          serverGetMonthCardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public Builder setServerGetMonthCard(
          com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder builderForValue) {
        if (serverGetMonthCardBuilder_ == null) {
          serverGetMonthCard_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMonthCardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public Builder mergeServerGetMonthCard(com.kys.util.netty.proto.StoreProto.ServerGetMonthCard value) {
        if (serverGetMonthCardBuilder_ == null) {
          if (serverGetMonthCard_ != null) {
            serverGetMonthCard_ =
              com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.newBuilder(serverGetMonthCard_).mergeFrom(value).buildPartial();
          } else {
            serverGetMonthCard_ = value;
          }
          onChanged();
        } else {
          serverGetMonthCardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public Builder clearServerGetMonthCard() {
        if (serverGetMonthCardBuilder_ == null) {
          serverGetMonthCard_ = null;
          onChanged();
        } else {
          serverGetMonthCard_ = null;
          serverGetMonthCardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder getServerGetMonthCardBuilder() {
        
        onChanged();
        return getServerGetMonthCardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder getServerGetMonthCardOrBuilder() {
        if (serverGetMonthCardBuilder_ != null) {
          return serverGetMonthCardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMonthCard_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.getDefaultInstance() : serverGetMonthCard_;
        }
      }
      /**
       * <pre>
       ** 服务器返回钻石月卡商品 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMonthCard serverGetMonthCard = 307;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetMonthCard, com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder> 
          getServerGetMonthCardFieldBuilder() {
        if (serverGetMonthCardBuilder_ == null) {
          serverGetMonthCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetMonthCard, com.kys.util.netty.proto.StoreProto.ServerGetMonthCard.Builder, com.kys.util.netty.proto.StoreProto.ServerGetMonthCardOrBuilder>(
                  getServerGetMonthCard(),
                  getParentForChildren(),
                  isClean());
          serverGetMonthCard_ = null;
        }
        return serverGetMonthCardBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift serverGetResurgenceGift_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder> serverGetResurgenceGiftBuilder_;
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public boolean hasServerGetResurgenceGift() {
        return serverGetResurgenceGiftBuilder_ != null || serverGetResurgenceGift_ != null;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift getServerGetResurgenceGift() {
        if (serverGetResurgenceGiftBuilder_ == null) {
          return serverGetResurgenceGift_ == null ? com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.getDefaultInstance() : serverGetResurgenceGift_;
        } else {
          return serverGetResurgenceGiftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public Builder setServerGetResurgenceGift(com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift value) {
        if (serverGetResurgenceGiftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetResurgenceGift_ = value;
          onChanged();
        } else {
          serverGetResurgenceGiftBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public Builder setServerGetResurgenceGift(
          com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder builderForValue) {
        if (serverGetResurgenceGiftBuilder_ == null) {
          serverGetResurgenceGift_ = builderForValue.build();
          onChanged();
        } else {
          serverGetResurgenceGiftBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public Builder mergeServerGetResurgenceGift(com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift value) {
        if (serverGetResurgenceGiftBuilder_ == null) {
          if (serverGetResurgenceGift_ != null) {
            serverGetResurgenceGift_ =
              com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.newBuilder(serverGetResurgenceGift_).mergeFrom(value).buildPartial();
          } else {
            serverGetResurgenceGift_ = value;
          }
          onChanged();
        } else {
          serverGetResurgenceGiftBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public Builder clearServerGetResurgenceGift() {
        if (serverGetResurgenceGiftBuilder_ == null) {
          serverGetResurgenceGift_ = null;
          onChanged();
        } else {
          serverGetResurgenceGift_ = null;
          serverGetResurgenceGiftBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder getServerGetResurgenceGiftBuilder() {
        
        onChanged();
        return getServerGetResurgenceGiftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      public com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder getServerGetResurgenceGiftOrBuilder() {
        if (serverGetResurgenceGiftBuilder_ != null) {
          return serverGetResurgenceGiftBuilder_.getMessageOrBuilder();
        } else {
          return serverGetResurgenceGift_ == null ?
              com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.getDefaultInstance() : serverGetResurgenceGift_;
        }
      }
      /**
       * <pre>
       ** 服务器返回复活礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetResurgenceGift serverGetResurgenceGift = 308;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder> 
          getServerGetResurgenceGiftFieldBuilder() {
        if (serverGetResurgenceGiftBuilder_ == null) {
          serverGetResurgenceGiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGift.Builder, com.kys.util.netty.proto.StoreProto.ServerGetResurgenceGiftOrBuilder>(
                  getServerGetResurgenceGift(),
                  getParentForChildren(),
                  isClean());
          serverGetResurgenceGift_ = null;
        }
        return serverGetResurgenceGiftBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetAnnounce serverGetAnnounce_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetAnnounce, com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder> serverGetAnnounceBuilder_;
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public boolean hasServerGetAnnounce() {
        return serverGetAnnounceBuilder_ != null || serverGetAnnounce_ != null;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAnnounce getServerGetAnnounce() {
        if (serverGetAnnounceBuilder_ == null) {
          return serverGetAnnounce_ == null ? com.kys.util.netty.proto.HallProto.ServerGetAnnounce.getDefaultInstance() : serverGetAnnounce_;
        } else {
          return serverGetAnnounceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public Builder setServerGetAnnounce(com.kys.util.netty.proto.HallProto.ServerGetAnnounce value) {
        if (serverGetAnnounceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetAnnounce_ = value;
          onChanged();
        } else {
          serverGetAnnounceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public Builder setServerGetAnnounce(
          com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder builderForValue) {
        if (serverGetAnnounceBuilder_ == null) {
          serverGetAnnounce_ = builderForValue.build();
          onChanged();
        } else {
          serverGetAnnounceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public Builder mergeServerGetAnnounce(com.kys.util.netty.proto.HallProto.ServerGetAnnounce value) {
        if (serverGetAnnounceBuilder_ == null) {
          if (serverGetAnnounce_ != null) {
            serverGetAnnounce_ =
              com.kys.util.netty.proto.HallProto.ServerGetAnnounce.newBuilder(serverGetAnnounce_).mergeFrom(value).buildPartial();
          } else {
            serverGetAnnounce_ = value;
          }
          onChanged();
        } else {
          serverGetAnnounceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public Builder clearServerGetAnnounce() {
        if (serverGetAnnounceBuilder_ == null) {
          serverGetAnnounce_ = null;
          onChanged();
        } else {
          serverGetAnnounce_ = null;
          serverGetAnnounceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder getServerGetAnnounceBuilder() {
        
        onChanged();
        return getServerGetAnnounceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder getServerGetAnnounceOrBuilder() {
        if (serverGetAnnounceBuilder_ != null) {
          return serverGetAnnounceBuilder_.getMessageOrBuilder();
        } else {
          return serverGetAnnounce_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetAnnounce.getDefaultInstance() : serverGetAnnounce_;
        }
      }
      /**
       * <pre>
       ** 服务器返回普通公告信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetAnnounce serverGetAnnounce = 500;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetAnnounce, com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder> 
          getServerGetAnnounceFieldBuilder() {
        if (serverGetAnnounceBuilder_ == null) {
          serverGetAnnounceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetAnnounce, com.kys.util.netty.proto.HallProto.ServerGetAnnounce.Builder, com.kys.util.netty.proto.HallProto.ServerGetAnnounceOrBuilder>(
                  getServerGetAnnounce(),
                  getParentForChildren(),
                  isClean());
          serverGetAnnounce_ = null;
        }
        return serverGetAnnounceBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetMail serverGetMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMail, com.kys.util.netty.proto.HallProto.ServerGetMail.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder> serverGetMailBuilder_;
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public boolean hasServerGetMail() {
        return serverGetMailBuilder_ != null || serverGetMail_ != null;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMail getServerGetMail() {
        if (serverGetMailBuilder_ == null) {
          return serverGetMail_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMail.getDefaultInstance() : serverGetMail_;
        } else {
          return serverGetMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public Builder setServerGetMail(com.kys.util.netty.proto.HallProto.ServerGetMail value) {
        if (serverGetMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMail_ = value;
          onChanged();
        } else {
          serverGetMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public Builder setServerGetMail(
          com.kys.util.netty.proto.HallProto.ServerGetMail.Builder builderForValue) {
        if (serverGetMailBuilder_ == null) {
          serverGetMail_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public Builder mergeServerGetMail(com.kys.util.netty.proto.HallProto.ServerGetMail value) {
        if (serverGetMailBuilder_ == null) {
          if (serverGetMail_ != null) {
            serverGetMail_ =
              com.kys.util.netty.proto.HallProto.ServerGetMail.newBuilder(serverGetMail_).mergeFrom(value).buildPartial();
          } else {
            serverGetMail_ = value;
          }
          onChanged();
        } else {
          serverGetMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public Builder clearServerGetMail() {
        if (serverGetMailBuilder_ == null) {
          serverGetMail_ = null;
          onChanged();
        } else {
          serverGetMail_ = null;
          serverGetMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMail.Builder getServerGetMailBuilder() {
        
        onChanged();
        return getServerGetMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder getServerGetMailOrBuilder() {
        if (serverGetMailBuilder_ != null) {
          return serverGetMailBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMail_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetMail.getDefaultInstance() : serverGetMail_;
        }
      }
      /**
       * <pre>
       ** 服务端邮件返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMail serverGetMail = 600;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMail, com.kys.util.netty.proto.HallProto.ServerGetMail.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder> 
          getServerGetMailFieldBuilder() {
        if (serverGetMailBuilder_ == null) {
          serverGetMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetMail, com.kys.util.netty.proto.HallProto.ServerGetMail.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailOrBuilder>(
                  getServerGetMail(),
                  getParentForChildren(),
                  isClean());
          serverGetMail_ = null;
        }
        return serverGetMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetMailReward serverGetMailReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMailReward, com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder> serverGetMailRewardBuilder_;
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public boolean hasServerGetMailReward() {
        return serverGetMailRewardBuilder_ != null || serverGetMailReward_ != null;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMailReward getServerGetMailReward() {
        if (serverGetMailRewardBuilder_ == null) {
          return serverGetMailReward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetMailReward.getDefaultInstance() : serverGetMailReward_;
        } else {
          return serverGetMailRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public Builder setServerGetMailReward(com.kys.util.netty.proto.HallProto.ServerGetMailReward value) {
        if (serverGetMailRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetMailReward_ = value;
          onChanged();
        } else {
          serverGetMailRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public Builder setServerGetMailReward(
          com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder builderForValue) {
        if (serverGetMailRewardBuilder_ == null) {
          serverGetMailReward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetMailRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public Builder mergeServerGetMailReward(com.kys.util.netty.proto.HallProto.ServerGetMailReward value) {
        if (serverGetMailRewardBuilder_ == null) {
          if (serverGetMailReward_ != null) {
            serverGetMailReward_ =
              com.kys.util.netty.proto.HallProto.ServerGetMailReward.newBuilder(serverGetMailReward_).mergeFrom(value).buildPartial();
          } else {
            serverGetMailReward_ = value;
          }
          onChanged();
        } else {
          serverGetMailRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public Builder clearServerGetMailReward() {
        if (serverGetMailRewardBuilder_ == null) {
          serverGetMailReward_ = null;
          onChanged();
        } else {
          serverGetMailReward_ = null;
          serverGetMailRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder getServerGetMailRewardBuilder() {
        
        onChanged();
        return getServerGetMailRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder getServerGetMailRewardOrBuilder() {
        if (serverGetMailRewardBuilder_ != null) {
          return serverGetMailRewardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetMailReward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetMailReward.getDefaultInstance() : serverGetMailReward_;
        }
      }
      /**
       * <pre>
       ** 服务端返回邮件奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetMailReward serverGetMailReward = 601;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetMailReward, com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder> 
          getServerGetMailRewardFieldBuilder() {
        if (serverGetMailRewardBuilder_ == null) {
          serverGetMailRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetMailReward, com.kys.util.netty.proto.HallProto.ServerGetMailReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetMailRewardOrBuilder>(
                  getServerGetMailReward(),
                  getParentForChildren(),
                  isClean());
          serverGetMailReward_ = null;
        }
        return serverGetMailRewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerDelMail serverDelMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDelMail, com.kys.util.netty.proto.HallProto.ServerDelMail.Builder, com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder> serverDelMailBuilder_;
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public boolean hasServerDelMail() {
        return serverDelMailBuilder_ != null || serverDelMail_ != null;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDelMail getServerDelMail() {
        if (serverDelMailBuilder_ == null) {
          return serverDelMail_ == null ? com.kys.util.netty.proto.HallProto.ServerDelMail.getDefaultInstance() : serverDelMail_;
        } else {
          return serverDelMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public Builder setServerDelMail(com.kys.util.netty.proto.HallProto.ServerDelMail value) {
        if (serverDelMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDelMail_ = value;
          onChanged();
        } else {
          serverDelMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public Builder setServerDelMail(
          com.kys.util.netty.proto.HallProto.ServerDelMail.Builder builderForValue) {
        if (serverDelMailBuilder_ == null) {
          serverDelMail_ = builderForValue.build();
          onChanged();
        } else {
          serverDelMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public Builder mergeServerDelMail(com.kys.util.netty.proto.HallProto.ServerDelMail value) {
        if (serverDelMailBuilder_ == null) {
          if (serverDelMail_ != null) {
            serverDelMail_ =
              com.kys.util.netty.proto.HallProto.ServerDelMail.newBuilder(serverDelMail_).mergeFrom(value).buildPartial();
          } else {
            serverDelMail_ = value;
          }
          onChanged();
        } else {
          serverDelMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public Builder clearServerDelMail() {
        if (serverDelMailBuilder_ == null) {
          serverDelMail_ = null;
          onChanged();
        } else {
          serverDelMail_ = null;
          serverDelMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDelMail.Builder getServerDelMailBuilder() {
        
        onChanged();
        return getServerDelMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder getServerDelMailOrBuilder() {
        if (serverDelMailBuilder_ != null) {
          return serverDelMailBuilder_.getMessageOrBuilder();
        } else {
          return serverDelMail_ == null ?
              com.kys.util.netty.proto.HallProto.ServerDelMail.getDefaultInstance() : serverDelMail_;
        }
      }
      /**
       * <pre>
       ** 服务端返回请求删除邮件 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDelMail serverDelMail = 602;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDelMail, com.kys.util.netty.proto.HallProto.ServerDelMail.Builder, com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder> 
          getServerDelMailFieldBuilder() {
        if (serverDelMailBuilder_ == null) {
          serverDelMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerDelMail, com.kys.util.netty.proto.HallProto.ServerDelMail.Builder, com.kys.util.netty.proto.HallProto.ServerDelMailOrBuilder>(
                  getServerDelMail(),
                  getParentForChildren(),
                  isClean());
          serverDelMail_ = null;
        }
        return serverDelMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerReadMail serverReadMail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerReadMail, com.kys.util.netty.proto.HallProto.ServerReadMail.Builder, com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder> serverReadMailBuilder_;
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public boolean hasServerReadMail() {
        return serverReadMailBuilder_ != null || serverReadMail_ != null;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerReadMail getServerReadMail() {
        if (serverReadMailBuilder_ == null) {
          return serverReadMail_ == null ? com.kys.util.netty.proto.HallProto.ServerReadMail.getDefaultInstance() : serverReadMail_;
        } else {
          return serverReadMailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public Builder setServerReadMail(com.kys.util.netty.proto.HallProto.ServerReadMail value) {
        if (serverReadMailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverReadMail_ = value;
          onChanged();
        } else {
          serverReadMailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public Builder setServerReadMail(
          com.kys.util.netty.proto.HallProto.ServerReadMail.Builder builderForValue) {
        if (serverReadMailBuilder_ == null) {
          serverReadMail_ = builderForValue.build();
          onChanged();
        } else {
          serverReadMailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public Builder mergeServerReadMail(com.kys.util.netty.proto.HallProto.ServerReadMail value) {
        if (serverReadMailBuilder_ == null) {
          if (serverReadMail_ != null) {
            serverReadMail_ =
              com.kys.util.netty.proto.HallProto.ServerReadMail.newBuilder(serverReadMail_).mergeFrom(value).buildPartial();
          } else {
            serverReadMail_ = value;
          }
          onChanged();
        } else {
          serverReadMailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public Builder clearServerReadMail() {
        if (serverReadMailBuilder_ == null) {
          serverReadMail_ = null;
          onChanged();
        } else {
          serverReadMail_ = null;
          serverReadMailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerReadMail.Builder getServerReadMailBuilder() {
        
        onChanged();
        return getServerReadMailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder getServerReadMailOrBuilder() {
        if (serverReadMailBuilder_ != null) {
          return serverReadMailBuilder_.getMessageOrBuilder();
        } else {
          return serverReadMail_ == null ?
              com.kys.util.netty.proto.HallProto.ServerReadMail.getDefaultInstance() : serverReadMail_;
        }
      }
      /**
       * <pre>
       ** 服务器端返回邮件已读 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerReadMail serverReadMail = 603;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerReadMail, com.kys.util.netty.proto.HallProto.ServerReadMail.Builder, com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder> 
          getServerReadMailFieldBuilder() {
        if (serverReadMailBuilder_ == null) {
          serverReadMailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerReadMail, com.kys.util.netty.proto.HallProto.ServerReadMail.Builder, com.kys.util.netty.proto.HallProto.ServerReadMailOrBuilder>(
                  getServerReadMail(),
                  getParentForChildren(),
                  isClean());
          serverReadMail_ = null;
        }
        return serverReadMailBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerDel2R serverDel2R_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDel2R, com.kys.util.netty.proto.HallProto.ServerDel2R.Builder, com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder> serverDel2RBuilder_;
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public boolean hasServerDel2R() {
        return serverDel2RBuilder_ != null || serverDel2R_ != null;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDel2R getServerDel2R() {
        if (serverDel2RBuilder_ == null) {
          return serverDel2R_ == null ? com.kys.util.netty.proto.HallProto.ServerDel2R.getDefaultInstance() : serverDel2R_;
        } else {
          return serverDel2RBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public Builder setServerDel2R(com.kys.util.netty.proto.HallProto.ServerDel2R value) {
        if (serverDel2RBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDel2R_ = value;
          onChanged();
        } else {
          serverDel2RBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public Builder setServerDel2R(
          com.kys.util.netty.proto.HallProto.ServerDel2R.Builder builderForValue) {
        if (serverDel2RBuilder_ == null) {
          serverDel2R_ = builderForValue.build();
          onChanged();
        } else {
          serverDel2RBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public Builder mergeServerDel2R(com.kys.util.netty.proto.HallProto.ServerDel2R value) {
        if (serverDel2RBuilder_ == null) {
          if (serverDel2R_ != null) {
            serverDel2R_ =
              com.kys.util.netty.proto.HallProto.ServerDel2R.newBuilder(serverDel2R_).mergeFrom(value).buildPartial();
          } else {
            serverDel2R_ = value;
          }
          onChanged();
        } else {
          serverDel2RBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public Builder clearServerDel2R() {
        if (serverDel2RBuilder_ == null) {
          serverDel2R_ = null;
          onChanged();
        } else {
          serverDel2R_ = null;
          serverDel2RBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDel2R.Builder getServerDel2RBuilder() {
        
        onChanged();
        return getServerDel2RFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder getServerDel2ROrBuilder() {
        if (serverDel2RBuilder_ != null) {
          return serverDel2RBuilder_.getMessageOrBuilder();
        } else {
          return serverDel2R_ == null ?
              com.kys.util.netty.proto.HallProto.ServerDel2R.getDefaultInstance() : serverDel2R_;
        }
      }
      /**
       * <pre>
       ** 服务端删除已读已领取 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDel2R serverDel2R = 604;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerDel2R, com.kys.util.netty.proto.HallProto.ServerDel2R.Builder, com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder> 
          getServerDel2RFieldBuilder() {
        if (serverDel2RBuilder_ == null) {
          serverDel2RBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerDel2R, com.kys.util.netty.proto.HallProto.ServerDel2R.Builder, com.kys.util.netty.proto.HallProto.ServerDel2ROrBuilder>(
                  getServerDel2R(),
                  getParentForChildren(),
                  isClean());
          serverDel2R_ = null;
        }
        return serverDel2RBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerQueryDailyTask serverQueryDailyTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryDailyTask, com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder> serverQueryDailyTaskBuilder_;
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public boolean hasServerQueryDailyTask() {
        return serverQueryDailyTaskBuilder_ != null || serverQueryDailyTask_ != null;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryDailyTask getServerQueryDailyTask() {
        if (serverQueryDailyTaskBuilder_ == null) {
          return serverQueryDailyTask_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.getDefaultInstance() : serverQueryDailyTask_;
        } else {
          return serverQueryDailyTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public Builder setServerQueryDailyTask(com.kys.util.netty.proto.HallProto.ServerQueryDailyTask value) {
        if (serverQueryDailyTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryDailyTask_ = value;
          onChanged();
        } else {
          serverQueryDailyTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public Builder setServerQueryDailyTask(
          com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder builderForValue) {
        if (serverQueryDailyTaskBuilder_ == null) {
          serverQueryDailyTask_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryDailyTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public Builder mergeServerQueryDailyTask(com.kys.util.netty.proto.HallProto.ServerQueryDailyTask value) {
        if (serverQueryDailyTaskBuilder_ == null) {
          if (serverQueryDailyTask_ != null) {
            serverQueryDailyTask_ =
              com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.newBuilder(serverQueryDailyTask_).mergeFrom(value).buildPartial();
          } else {
            serverQueryDailyTask_ = value;
          }
          onChanged();
        } else {
          serverQueryDailyTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public Builder clearServerQueryDailyTask() {
        if (serverQueryDailyTaskBuilder_ == null) {
          serverQueryDailyTask_ = null;
          onChanged();
        } else {
          serverQueryDailyTask_ = null;
          serverQueryDailyTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder getServerQueryDailyTaskBuilder() {
        
        onChanged();
        return getServerQueryDailyTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder getServerQueryDailyTaskOrBuilder() {
        if (serverQueryDailyTaskBuilder_ != null) {
          return serverQueryDailyTaskBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryDailyTask_ == null ?
              com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.getDefaultInstance() : serverQueryDailyTask_;
        }
      }
      /**
       * <pre>
       ** 服务器返回每日任务信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryDailyTask serverQueryDailyTask = 700;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryDailyTask, com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder> 
          getServerQueryDailyTaskFieldBuilder() {
        if (serverQueryDailyTaskBuilder_ == null) {
          serverQueryDailyTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerQueryDailyTask, com.kys.util.netty.proto.HallProto.ServerQueryDailyTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryDailyTaskOrBuilder>(
                  getServerQueryDailyTask(),
                  getParentForChildren(),
                  isClean());
          serverQueryDailyTask_ = null;
        }
        return serverQueryDailyTaskBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward serverGetDailyTaskAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward, com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAwardOrBuilder> serverGetDailyTaskAwardBuilder_;
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      public boolean hasServerGetDailyTaskAward() {
        return serverGetDailyTaskAwardBuilder_ != null || serverGetDailyTaskAward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward getServerGetDailyTaskAward() {
        if (serverGetDailyTaskAwardBuilder_ == null) {
          return serverGetDailyTaskAward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.getDefaultInstance() : serverGetDailyTaskAward_;
        } else {
          return serverGetDailyTaskAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      public Builder setServerGetDailyTaskAward(com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward value) {
        if (serverGetDailyTaskAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetDailyTaskAward_ = value;
          onChanged();
        } else {
          serverGetDailyTaskAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      public Builder setServerGetDailyTaskAward(
          com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.Builder builderForValue) {
        if (serverGetDailyTaskAwardBuilder_ == null) {
          serverGetDailyTaskAward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetDailyTaskAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      public Builder mergeServerGetDailyTaskAward(com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward value) {
        if (serverGetDailyTaskAwardBuilder_ == null) {
          if (serverGetDailyTaskAward_ != null) {
            serverGetDailyTaskAward_ =
              com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.newBuilder(serverGetDailyTaskAward_).mergeFrom(value).buildPartial();
          } else {
            serverGetDailyTaskAward_ = value;
          }
          onChanged();
        } else {
          serverGetDailyTaskAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      public Builder clearServerGetDailyTaskAward() {
        if (serverGetDailyTaskAwardBuilder_ == null) {
          serverGetDailyTaskAward_ = null;
          onChanged();
        } else {
          serverGetDailyTaskAward_ = null;
          serverGetDailyTaskAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.Builder getServerGetDailyTaskAwardBuilder() {
        
        onChanged();
        return getServerGetDailyTaskAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAwardOrBuilder getServerGetDailyTaskAwardOrBuilder() {
        if (serverGetDailyTaskAwardBuilder_ != null) {
          return serverGetDailyTaskAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetDailyTaskAward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.getDefaultInstance() : serverGetDailyTaskAward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDailyTaskAward serverGetDailyTaskAward = 701;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward, com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAwardOrBuilder> 
          getServerGetDailyTaskAwardFieldBuilder() {
        if (serverGetDailyTaskAwardBuilder_ == null) {
          serverGetDailyTaskAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward, com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDailyTaskAwardOrBuilder>(
                  getServerGetDailyTaskAward(),
                  getParentForChildren(),
                  isClean());
          serverGetDailyTaskAward_ = null;
        }
        return serverGetDailyTaskAwardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetNoviceReward serverGetNoviceReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetNoviceReward, com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder> serverGetNoviceRewardBuilder_;
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public boolean hasServerGetNoviceReward() {
        return serverGetNoviceRewardBuilder_ != null || serverGetNoviceReward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNoviceReward getServerGetNoviceReward() {
        if (serverGetNoviceRewardBuilder_ == null) {
          return serverGetNoviceReward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.getDefaultInstance() : serverGetNoviceReward_;
        } else {
          return serverGetNoviceRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public Builder setServerGetNoviceReward(com.kys.util.netty.proto.HallProto.ServerGetNoviceReward value) {
        if (serverGetNoviceRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetNoviceReward_ = value;
          onChanged();
        } else {
          serverGetNoviceRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public Builder setServerGetNoviceReward(
          com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder builderForValue) {
        if (serverGetNoviceRewardBuilder_ == null) {
          serverGetNoviceReward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetNoviceRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public Builder mergeServerGetNoviceReward(com.kys.util.netty.proto.HallProto.ServerGetNoviceReward value) {
        if (serverGetNoviceRewardBuilder_ == null) {
          if (serverGetNoviceReward_ != null) {
            serverGetNoviceReward_ =
              com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.newBuilder(serverGetNoviceReward_).mergeFrom(value).buildPartial();
          } else {
            serverGetNoviceReward_ = value;
          }
          onChanged();
        } else {
          serverGetNoviceRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public Builder clearServerGetNoviceReward() {
        if (serverGetNoviceRewardBuilder_ == null) {
          serverGetNoviceReward_ = null;
          onChanged();
        } else {
          serverGetNoviceReward_ = null;
          serverGetNoviceRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder getServerGetNoviceRewardBuilder() {
        
        onChanged();
        return getServerGetNoviceRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder getServerGetNoviceRewardOrBuilder() {
        if (serverGetNoviceRewardBuilder_ != null) {
          return serverGetNoviceRewardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetNoviceReward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.getDefaultInstance() : serverGetNoviceReward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回获取新手任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetNoviceReward serverGetNoviceReward = 702;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetNoviceReward, com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder> 
          getServerGetNoviceRewardFieldBuilder() {
        if (serverGetNoviceRewardBuilder_ == null) {
          serverGetNoviceRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetNoviceReward, com.kys.util.netty.proto.HallProto.ServerGetNoviceReward.Builder, com.kys.util.netty.proto.HallProto.ServerGetNoviceRewardOrBuilder>(
                  getServerGetNoviceReward(),
                  getParentForChildren(),
                  isClean());
          serverGetNoviceReward_ = null;
        }
        return serverGetNoviceRewardBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask serverQueryNoviceTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder> serverQueryNoviceTaskBuilder_;
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public boolean hasServerQueryNoviceTask() {
        return serverQueryNoviceTaskBuilder_ != null || serverQueryNoviceTask_ != null;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask getServerQueryNoviceTask() {
        if (serverQueryNoviceTaskBuilder_ == null) {
          return serverQueryNoviceTask_ == null ? com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.getDefaultInstance() : serverQueryNoviceTask_;
        } else {
          return serverQueryNoviceTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public Builder setServerQueryNoviceTask(com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask value) {
        if (serverQueryNoviceTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryNoviceTask_ = value;
          onChanged();
        } else {
          serverQueryNoviceTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public Builder setServerQueryNoviceTask(
          com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder builderForValue) {
        if (serverQueryNoviceTaskBuilder_ == null) {
          serverQueryNoviceTask_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryNoviceTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public Builder mergeServerQueryNoviceTask(com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask value) {
        if (serverQueryNoviceTaskBuilder_ == null) {
          if (serverQueryNoviceTask_ != null) {
            serverQueryNoviceTask_ =
              com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.newBuilder(serverQueryNoviceTask_).mergeFrom(value).buildPartial();
          } else {
            serverQueryNoviceTask_ = value;
          }
          onChanged();
        } else {
          serverQueryNoviceTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public Builder clearServerQueryNoviceTask() {
        if (serverQueryNoviceTaskBuilder_ == null) {
          serverQueryNoviceTask_ = null;
          onChanged();
        } else {
          serverQueryNoviceTask_ = null;
          serverQueryNoviceTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder getServerQueryNoviceTaskBuilder() {
        
        onChanged();
        return getServerQueryNoviceTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder getServerQueryNoviceTaskOrBuilder() {
        if (serverQueryNoviceTaskBuilder_ != null) {
          return serverQueryNoviceTaskBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryNoviceTask_ == null ?
              com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.getDefaultInstance() : serverQueryNoviceTask_;
        }
      }
      /**
       * <pre>
       ** 服务器返回新手任务 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryNoviceTask serverQueryNoviceTask = 703;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder> 
          getServerQueryNoviceTaskFieldBuilder() {
        if (serverQueryNoviceTaskBuilder_ == null) {
          serverQueryNoviceTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTask.Builder, com.kys.util.netty.proto.HallProto.ServerQueryNoviceTaskOrBuilder>(
                  getServerQueryNoviceTask(),
                  getParentForChildren(),
                  isClean());
          serverQueryNoviceTask_ = null;
        }
        return serverQueryNoviceTaskBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.ServerGetDTAward serverGetDTAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetDTAward, com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder> serverGetDTAwardBuilder_;
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public boolean hasServerGetDTAward() {
        return serverGetDTAwardBuilder_ != null || serverGetDTAward_ != null;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDTAward getServerGetDTAward() {
        if (serverGetDTAwardBuilder_ == null) {
          return serverGetDTAward_ == null ? com.kys.util.netty.proto.HallProto.ServerGetDTAward.getDefaultInstance() : serverGetDTAward_;
        } else {
          return serverGetDTAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public Builder setServerGetDTAward(com.kys.util.netty.proto.HallProto.ServerGetDTAward value) {
        if (serverGetDTAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetDTAward_ = value;
          onChanged();
        } else {
          serverGetDTAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public Builder setServerGetDTAward(
          com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder builderForValue) {
        if (serverGetDTAwardBuilder_ == null) {
          serverGetDTAward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetDTAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public Builder mergeServerGetDTAward(com.kys.util.netty.proto.HallProto.ServerGetDTAward value) {
        if (serverGetDTAwardBuilder_ == null) {
          if (serverGetDTAward_ != null) {
            serverGetDTAward_ =
              com.kys.util.netty.proto.HallProto.ServerGetDTAward.newBuilder(serverGetDTAward_).mergeFrom(value).buildPartial();
          } else {
            serverGetDTAward_ = value;
          }
          onChanged();
        } else {
          serverGetDTAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public Builder clearServerGetDTAward() {
        if (serverGetDTAwardBuilder_ == null) {
          serverGetDTAward_ = null;
          onChanged();
        } else {
          serverGetDTAward_ = null;
          serverGetDTAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder getServerGetDTAwardBuilder() {
        
        onChanged();
        return getServerGetDTAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      public com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder getServerGetDTAwardOrBuilder() {
        if (serverGetDTAwardBuilder_ != null) {
          return serverGetDTAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetDTAward_ == null ?
              com.kys.util.netty.proto.HallProto.ServerGetDTAward.getDefaultInstance() : serverGetDTAward_;
        }
      }
      /**
       * <pre>
       ** (新)服务器返回领取每日任务奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetDTAward serverGetDTAward = 704;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.ServerGetDTAward, com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder> 
          getServerGetDTAwardFieldBuilder() {
        if (serverGetDTAwardBuilder_ == null) {
          serverGetDTAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.ServerGetDTAward, com.kys.util.netty.proto.HallProto.ServerGetDTAward.Builder, com.kys.util.netty.proto.HallProto.ServerGetDTAwardOrBuilder>(
                  getServerGetDTAward(),
                  getParentForChildren(),
                  isClean());
          serverGetDTAward_ = null;
        }
        return serverGetDTAwardBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr serverGetReceiveAddr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder> serverGetReceiveAddrBuilder_;
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public boolean hasServerGetReceiveAddr() {
        return serverGetReceiveAddrBuilder_ != null || serverGetReceiveAddr_ != null;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr getServerGetReceiveAddr() {
        if (serverGetReceiveAddrBuilder_ == null) {
          return serverGetReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.getDefaultInstance() : serverGetReceiveAddr_;
        } else {
          return serverGetReceiveAddrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public Builder setServerGetReceiveAddr(com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr value) {
        if (serverGetReceiveAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetReceiveAddr_ = value;
          onChanged();
        } else {
          serverGetReceiveAddrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public Builder setServerGetReceiveAddr(
          com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder builderForValue) {
        if (serverGetReceiveAddrBuilder_ == null) {
          serverGetReceiveAddr_ = builderForValue.build();
          onChanged();
        } else {
          serverGetReceiveAddrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public Builder mergeServerGetReceiveAddr(com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr value) {
        if (serverGetReceiveAddrBuilder_ == null) {
          if (serverGetReceiveAddr_ != null) {
            serverGetReceiveAddr_ =
              com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.newBuilder(serverGetReceiveAddr_).mergeFrom(value).buildPartial();
          } else {
            serverGetReceiveAddr_ = value;
          }
          onChanged();
        } else {
          serverGetReceiveAddrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public Builder clearServerGetReceiveAddr() {
        if (serverGetReceiveAddrBuilder_ == null) {
          serverGetReceiveAddr_ = null;
          onChanged();
        } else {
          serverGetReceiveAddr_ = null;
          serverGetReceiveAddrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder getServerGetReceiveAddrBuilder() {
        
        onChanged();
        return getServerGetReceiveAddrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder getServerGetReceiveAddrOrBuilder() {
        if (serverGetReceiveAddrBuilder_ != null) {
          return serverGetReceiveAddrBuilder_.getMessageOrBuilder();
        } else {
          return serverGetReceiveAddr_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.getDefaultInstance() : serverGetReceiveAddr_;
        }
      }
      /**
       * <pre>
       ** 服务器返回用户收货地址 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetReceiveAddr serverGetReceiveAddr = 800;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder> 
          getServerGetReceiveAddrFieldBuilder() {
        if (serverGetReceiveAddrBuilder_ == null) {
          serverGetReceiveAddrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerGetReceiveAddrOrBuilder>(
                  getServerGetReceiveAddr(),
                  getParentForChildren(),
                  isClean());
          serverGetReceiveAddr_ = null;
        }
        return serverGetReceiveAddrBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr serverAlterReceiveAddr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder> serverAlterReceiveAddrBuilder_;
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public boolean hasServerAlterReceiveAddr() {
        return serverAlterReceiveAddrBuilder_ != null || serverAlterReceiveAddr_ != null;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr getServerAlterReceiveAddr() {
        if (serverAlterReceiveAddrBuilder_ == null) {
          return serverAlterReceiveAddr_ == null ? com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.getDefaultInstance() : serverAlterReceiveAddr_;
        } else {
          return serverAlterReceiveAddrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public Builder setServerAlterReceiveAddr(com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr value) {
        if (serverAlterReceiveAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverAlterReceiveAddr_ = value;
          onChanged();
        } else {
          serverAlterReceiveAddrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public Builder setServerAlterReceiveAddr(
          com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder builderForValue) {
        if (serverAlterReceiveAddrBuilder_ == null) {
          serverAlterReceiveAddr_ = builderForValue.build();
          onChanged();
        } else {
          serverAlterReceiveAddrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public Builder mergeServerAlterReceiveAddr(com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr value) {
        if (serverAlterReceiveAddrBuilder_ == null) {
          if (serverAlterReceiveAddr_ != null) {
            serverAlterReceiveAddr_ =
              com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.newBuilder(serverAlterReceiveAddr_).mergeFrom(value).buildPartial();
          } else {
            serverAlterReceiveAddr_ = value;
          }
          onChanged();
        } else {
          serverAlterReceiveAddrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public Builder clearServerAlterReceiveAddr() {
        if (serverAlterReceiveAddrBuilder_ == null) {
          serverAlterReceiveAddr_ = null;
          onChanged();
        } else {
          serverAlterReceiveAddr_ = null;
          serverAlterReceiveAddrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder getServerAlterReceiveAddrBuilder() {
        
        onChanged();
        return getServerAlterReceiveAddrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder getServerAlterReceiveAddrOrBuilder() {
        if (serverAlterReceiveAddrBuilder_ != null) {
          return serverAlterReceiveAddrBuilder_.getMessageOrBuilder();
        } else {
          return serverAlterReceiveAddr_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.getDefaultInstance() : serverAlterReceiveAddr_;
        }
      }
      /**
       * <pre>
       ** 修改收货地址ack返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerAlterReceiveAddr serverAlterReceiveAddr = 801;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder> 
          getServerAlterReceiveAddrFieldBuilder() {
        if (serverAlterReceiveAddrBuilder_ == null) {
          serverAlterReceiveAddrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddr.Builder, com.kys.util.netty.proto.SnatchProto.ServerAlterReceiveAddrOrBuilder>(
                  getServerAlterReceiveAddr(),
                  getParentForChildren(),
                  isClean());
          serverAlterReceiveAddr_ = null;
        }
        return serverAlterReceiveAddrBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchList serverSnatchList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchList, com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder> serverSnatchListBuilder_;
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public boolean hasServerSnatchList() {
        return serverSnatchListBuilder_ != null || serverSnatchList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchList getServerSnatchList() {
        if (serverSnatchListBuilder_ == null) {
          return serverSnatchList_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchList.getDefaultInstance() : serverSnatchList_;
        } else {
          return serverSnatchListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public Builder setServerSnatchList(com.kys.util.netty.proto.SnatchProto.ServerSnatchList value) {
        if (serverSnatchListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchList_ = value;
          onChanged();
        } else {
          serverSnatchListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public Builder setServerSnatchList(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder builderForValue) {
        if (serverSnatchListBuilder_ == null) {
          serverSnatchList_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public Builder mergeServerSnatchList(com.kys.util.netty.proto.SnatchProto.ServerSnatchList value) {
        if (serverSnatchListBuilder_ == null) {
          if (serverSnatchList_ != null) {
            serverSnatchList_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchList.newBuilder(serverSnatchList_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchList_ = value;
          }
          onChanged();
        } else {
          serverSnatchListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public Builder clearServerSnatchList() {
        if (serverSnatchListBuilder_ == null) {
          serverSnatchList_ = null;
          onChanged();
        } else {
          serverSnatchList_ = null;
          serverSnatchListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder getServerSnatchListBuilder() {
        
        onChanged();
        return getServerSnatchListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder getServerSnatchListOrBuilder() {
        if (serverSnatchListBuilder_ != null) {
          return serverSnatchListBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchList_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchList.getDefaultInstance() : serverSnatchList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回商品列表信息接口 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchList serverSnatchList = 802;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchList, com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder> 
          getServerSnatchListFieldBuilder() {
        if (serverSnatchListBuilder_ == null) {
          serverSnatchListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchList, com.kys.util.netty.proto.SnatchProto.ServerSnatchList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchListOrBuilder>(
                  getServerSnatchList(),
                  getParentForChildren(),
                  isClean());
          serverSnatchList_ = null;
        }
        return serverSnatchListBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail serverSnatchItemDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder> serverSnatchItemDetailBuilder_;
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public boolean hasServerSnatchItemDetail() {
        return serverSnatchItemDetailBuilder_ != null || serverSnatchItemDetail_ != null;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail getServerSnatchItemDetail() {
        if (serverSnatchItemDetailBuilder_ == null) {
          return serverSnatchItemDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.getDefaultInstance() : serverSnatchItemDetail_;
        } else {
          return serverSnatchItemDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public Builder setServerSnatchItemDetail(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail value) {
        if (serverSnatchItemDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchItemDetail_ = value;
          onChanged();
        } else {
          serverSnatchItemDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public Builder setServerSnatchItemDetail(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder builderForValue) {
        if (serverSnatchItemDetailBuilder_ == null) {
          serverSnatchItemDetail_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchItemDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public Builder mergeServerSnatchItemDetail(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail value) {
        if (serverSnatchItemDetailBuilder_ == null) {
          if (serverSnatchItemDetail_ != null) {
            serverSnatchItemDetail_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.newBuilder(serverSnatchItemDetail_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchItemDetail_ = value;
          }
          onChanged();
        } else {
          serverSnatchItemDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public Builder clearServerSnatchItemDetail() {
        if (serverSnatchItemDetailBuilder_ == null) {
          serverSnatchItemDetail_ = null;
          onChanged();
        } else {
          serverSnatchItemDetail_ = null;
          serverSnatchItemDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder getServerSnatchItemDetailBuilder() {
        
        onChanged();
        return getServerSnatchItemDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder getServerSnatchItemDetailOrBuilder() {
        if (serverSnatchItemDetailBuilder_ != null) {
          return serverSnatchItemDetailBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchItemDetail_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.getDefaultInstance() : serverSnatchItemDetail_;
        }
      }
      /**
       * <pre>
       ** 服务器返回商品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemDetail serverSnatchItemDetail = 803;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder> 
          getServerSnatchItemDetailFieldBuilder() {
        if (serverSnatchItemDetailBuilder_ == null) {
          serverSnatchItemDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemDetailOrBuilder>(
                  getServerSnatchItemDetail(),
                  getParentForChildren(),
                  isClean());
          serverSnatchItemDetail_ = null;
        }
        return serverSnatchItemDetailBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchBet serverSnatchBet_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchBet, com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder> serverSnatchBetBuilder_;
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public boolean hasServerSnatchBet() {
        return serverSnatchBetBuilder_ != null || serverSnatchBet_ != null;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchBet getServerSnatchBet() {
        if (serverSnatchBetBuilder_ == null) {
          return serverSnatchBet_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.getDefaultInstance() : serverSnatchBet_;
        } else {
          return serverSnatchBetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public Builder setServerSnatchBet(com.kys.util.netty.proto.SnatchProto.ServerSnatchBet value) {
        if (serverSnatchBetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchBet_ = value;
          onChanged();
        } else {
          serverSnatchBetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public Builder setServerSnatchBet(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder builderForValue) {
        if (serverSnatchBetBuilder_ == null) {
          serverSnatchBet_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchBetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public Builder mergeServerSnatchBet(com.kys.util.netty.proto.SnatchProto.ServerSnatchBet value) {
        if (serverSnatchBetBuilder_ == null) {
          if (serverSnatchBet_ != null) {
            serverSnatchBet_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.newBuilder(serverSnatchBet_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchBet_ = value;
          }
          onChanged();
        } else {
          serverSnatchBetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public Builder clearServerSnatchBet() {
        if (serverSnatchBetBuilder_ == null) {
          serverSnatchBet_ = null;
          onChanged();
        } else {
          serverSnatchBet_ = null;
          serverSnatchBetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder getServerSnatchBetBuilder() {
        
        onChanged();
        return getServerSnatchBetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder getServerSnatchBetOrBuilder() {
        if (serverSnatchBetBuilder_ != null) {
          return serverSnatchBetBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchBet_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.getDefaultInstance() : serverSnatchBet_;
        }
      }
      /**
       * <pre>
       ** 服务器下注返回 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchBet serverSnatchBet = 804;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchBet, com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder> 
          getServerSnatchBetFieldBuilder() {
        if (serverSnatchBetBuilder_ == null) {
          serverSnatchBetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchBet, com.kys.util.netty.proto.SnatchProto.ServerSnatchBet.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchBetOrBuilder>(
                  getServerSnatchBet(),
                  getParentForChildren(),
                  isClean());
          serverSnatchBet_ = null;
        }
        return serverSnatchBetBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList serverSnatchAwardList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder> serverSnatchAwardListBuilder_;
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public boolean hasServerSnatchAwardList() {
        return serverSnatchAwardListBuilder_ != null || serverSnatchAwardList_ != null;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList getServerSnatchAwardList() {
        if (serverSnatchAwardListBuilder_ == null) {
          return serverSnatchAwardList_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.getDefaultInstance() : serverSnatchAwardList_;
        } else {
          return serverSnatchAwardListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public Builder setServerSnatchAwardList(com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList value) {
        if (serverSnatchAwardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchAwardList_ = value;
          onChanged();
        } else {
          serverSnatchAwardListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public Builder setServerSnatchAwardList(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder builderForValue) {
        if (serverSnatchAwardListBuilder_ == null) {
          serverSnatchAwardList_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchAwardListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public Builder mergeServerSnatchAwardList(com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList value) {
        if (serverSnatchAwardListBuilder_ == null) {
          if (serverSnatchAwardList_ != null) {
            serverSnatchAwardList_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.newBuilder(serverSnatchAwardList_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchAwardList_ = value;
          }
          onChanged();
        } else {
          serverSnatchAwardListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public Builder clearServerSnatchAwardList() {
        if (serverSnatchAwardListBuilder_ == null) {
          serverSnatchAwardList_ = null;
          onChanged();
        } else {
          serverSnatchAwardList_ = null;
          serverSnatchAwardListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder getServerSnatchAwardListBuilder() {
        
        onChanged();
        return getServerSnatchAwardListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder getServerSnatchAwardListOrBuilder() {
        if (serverSnatchAwardListBuilder_ != null) {
          return serverSnatchAwardListBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchAwardList_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.getDefaultInstance() : serverSnatchAwardList_;
        }
      }
      /**
       * <pre>
       ** 服务器返回近期开奖列表信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchAwardList serverSnatchAwardList = 805;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder> 
          getServerSnatchAwardListFieldBuilder() {
        if (serverSnatchAwardListBuilder_ == null) {
          serverSnatchAwardListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardList.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchAwardListOrBuilder>(
                  getServerSnatchAwardList(),
                  getParentForChildren(),
                  isClean());
          serverSnatchAwardList_ = null;
        }
        return serverSnatchAwardListBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord serverOwnSnatchRecord_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder> serverOwnSnatchRecordBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public boolean hasServerOwnSnatchRecord() {
        return serverOwnSnatchRecordBuilder_ != null || serverOwnSnatchRecord_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord getServerOwnSnatchRecord() {
        if (serverOwnSnatchRecordBuilder_ == null) {
          return serverOwnSnatchRecord_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.getDefaultInstance() : serverOwnSnatchRecord_;
        } else {
          return serverOwnSnatchRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public Builder setServerOwnSnatchRecord(com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord value) {
        if (serverOwnSnatchRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverOwnSnatchRecord_ = value;
          onChanged();
        } else {
          serverOwnSnatchRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public Builder setServerOwnSnatchRecord(
          com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder builderForValue) {
        if (serverOwnSnatchRecordBuilder_ == null) {
          serverOwnSnatchRecord_ = builderForValue.build();
          onChanged();
        } else {
          serverOwnSnatchRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public Builder mergeServerOwnSnatchRecord(com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord value) {
        if (serverOwnSnatchRecordBuilder_ == null) {
          if (serverOwnSnatchRecord_ != null) {
            serverOwnSnatchRecord_ =
              com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.newBuilder(serverOwnSnatchRecord_).mergeFrom(value).buildPartial();
          } else {
            serverOwnSnatchRecord_ = value;
          }
          onChanged();
        } else {
          serverOwnSnatchRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public Builder clearServerOwnSnatchRecord() {
        if (serverOwnSnatchRecordBuilder_ == null) {
          serverOwnSnatchRecord_ = null;
          onChanged();
        } else {
          serverOwnSnatchRecord_ = null;
          serverOwnSnatchRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder getServerOwnSnatchRecordBuilder() {
        
        onChanged();
        return getServerOwnSnatchRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder getServerOwnSnatchRecordOrBuilder() {
        if (serverOwnSnatchRecordBuilder_ != null) {
          return serverOwnSnatchRecordBuilder_.getMessageOrBuilder();
        } else {
          return serverOwnSnatchRecord_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.getDefaultInstance() : serverOwnSnatchRecord_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家自己的夺宝记录 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOwnSnatchRecord serverOwnSnatchRecord = 806;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder> 
          getServerOwnSnatchRecordFieldBuilder() {
        if (serverOwnSnatchRecordBuilder_ == null) {
          serverOwnSnatchRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecord.Builder, com.kys.util.netty.proto.SnatchProto.ServerOwnSnatchRecordOrBuilder>(
                  getServerOwnSnatchRecord(),
                  getParentForChildren(),
                  isClean());
          serverOwnSnatchRecord_ = null;
        }
        return serverOwnSnatchRecordBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory serverSnatchItemHistory_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder> serverSnatchItemHistoryBuilder_;
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public boolean hasServerSnatchItemHistory() {
        return serverSnatchItemHistoryBuilder_ != null || serverSnatchItemHistory_ != null;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory getServerSnatchItemHistory() {
        if (serverSnatchItemHistoryBuilder_ == null) {
          return serverSnatchItemHistory_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.getDefaultInstance() : serverSnatchItemHistory_;
        } else {
          return serverSnatchItemHistoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public Builder setServerSnatchItemHistory(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory value) {
        if (serverSnatchItemHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchItemHistory_ = value;
          onChanged();
        } else {
          serverSnatchItemHistoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public Builder setServerSnatchItemHistory(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder builderForValue) {
        if (serverSnatchItemHistoryBuilder_ == null) {
          serverSnatchItemHistory_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchItemHistoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public Builder mergeServerSnatchItemHistory(com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory value) {
        if (serverSnatchItemHistoryBuilder_ == null) {
          if (serverSnatchItemHistory_ != null) {
            serverSnatchItemHistory_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.newBuilder(serverSnatchItemHistory_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchItemHistory_ = value;
          }
          onChanged();
        } else {
          serverSnatchItemHistoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public Builder clearServerSnatchItemHistory() {
        if (serverSnatchItemHistoryBuilder_ == null) {
          serverSnatchItemHistory_ = null;
          onChanged();
        } else {
          serverSnatchItemHistory_ = null;
          serverSnatchItemHistoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder getServerSnatchItemHistoryBuilder() {
        
        onChanged();
        return getServerSnatchItemHistoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder getServerSnatchItemHistoryOrBuilder() {
        if (serverSnatchItemHistoryBuilder_ != null) {
          return serverSnatchItemHistoryBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchItemHistory_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.getDefaultInstance() : serverSnatchItemHistory_;
        }
      }
      /**
       * <pre>
       ** 服务器返回奖品详情 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchItemHistory serverSnatchItemHistory = 807;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder> 
          getServerSnatchItemHistoryFieldBuilder() {
        if (serverSnatchItemHistoryBuilder_ == null) {
          serverSnatchItemHistoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistory.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchItemHistoryOrBuilder>(
                  getServerSnatchItemHistory(),
                  getParentForChildren(),
                  isClean());
          serverSnatchItemHistory_ = null;
        }
        return serverSnatchItemHistoryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail serverSnatchHistoryDetail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder> serverSnatchHistoryDetailBuilder_;
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public boolean hasServerSnatchHistoryDetail() {
        return serverSnatchHistoryDetailBuilder_ != null || serverSnatchHistoryDetail_ != null;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail getServerSnatchHistoryDetail() {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          return serverSnatchHistoryDetail_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.getDefaultInstance() : serverSnatchHistoryDetail_;
        } else {
          return serverSnatchHistoryDetailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public Builder setServerSnatchHistoryDetail(com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail value) {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchHistoryDetail_ = value;
          onChanged();
        } else {
          serverSnatchHistoryDetailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public Builder setServerSnatchHistoryDetail(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder builderForValue) {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          serverSnatchHistoryDetail_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchHistoryDetailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public Builder mergeServerSnatchHistoryDetail(com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail value) {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          if (serverSnatchHistoryDetail_ != null) {
            serverSnatchHistoryDetail_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.newBuilder(serverSnatchHistoryDetail_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchHistoryDetail_ = value;
          }
          onChanged();
        } else {
          serverSnatchHistoryDetailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public Builder clearServerSnatchHistoryDetail() {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          serverSnatchHistoryDetail_ = null;
          onChanged();
        } else {
          serverSnatchHistoryDetail_ = null;
          serverSnatchHistoryDetailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder getServerSnatchHistoryDetailBuilder() {
        
        onChanged();
        return getServerSnatchHistoryDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder getServerSnatchHistoryDetailOrBuilder() {
        if (serverSnatchHistoryDetailBuilder_ != null) {
          return serverSnatchHistoryDetailBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchHistoryDetail_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.getDefaultInstance() : serverSnatchHistoryDetail_;
        }
      }
      /**
       * <pre>
       **查看某个历史商品的中奖详情
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchHistoryDetail serverSnatchHistoryDetail = 808;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder> 
          getServerSnatchHistoryDetailFieldBuilder() {
        if (serverSnatchHistoryDetailBuilder_ == null) {
          serverSnatchHistoryDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetail.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchHistoryDetailOrBuilder>(
                  getServerSnatchHistoryDetail(),
                  getParentForChildren(),
                  isClean());
          serverSnatchHistoryDetail_ = null;
        }
        return serverSnatchHistoryDetailBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward serverSnatchGetAward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder> serverSnatchGetAwardBuilder_;
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public boolean hasServerSnatchGetAward() {
        return serverSnatchGetAwardBuilder_ != null || serverSnatchGetAward_ != null;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward getServerSnatchGetAward() {
        if (serverSnatchGetAwardBuilder_ == null) {
          return serverSnatchGetAward_ == null ? com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.getDefaultInstance() : serverSnatchGetAward_;
        } else {
          return serverSnatchGetAwardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public Builder setServerSnatchGetAward(com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward value) {
        if (serverSnatchGetAwardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverSnatchGetAward_ = value;
          onChanged();
        } else {
          serverSnatchGetAwardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public Builder setServerSnatchGetAward(
          com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder builderForValue) {
        if (serverSnatchGetAwardBuilder_ == null) {
          serverSnatchGetAward_ = builderForValue.build();
          onChanged();
        } else {
          serverSnatchGetAwardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public Builder mergeServerSnatchGetAward(com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward value) {
        if (serverSnatchGetAwardBuilder_ == null) {
          if (serverSnatchGetAward_ != null) {
            serverSnatchGetAward_ =
              com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.newBuilder(serverSnatchGetAward_).mergeFrom(value).buildPartial();
          } else {
            serverSnatchGetAward_ = value;
          }
          onChanged();
        } else {
          serverSnatchGetAwardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public Builder clearServerSnatchGetAward() {
        if (serverSnatchGetAwardBuilder_ == null) {
          serverSnatchGetAward_ = null;
          onChanged();
        } else {
          serverSnatchGetAward_ = null;
          serverSnatchGetAwardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder getServerSnatchGetAwardBuilder() {
        
        onChanged();
        return getServerSnatchGetAwardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder getServerSnatchGetAwardOrBuilder() {
        if (serverSnatchGetAwardBuilder_ != null) {
          return serverSnatchGetAwardBuilder_.getMessageOrBuilder();
        } else {
          return serverSnatchGetAward_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.getDefaultInstance() : serverSnatchGetAward_;
        }
      }
      /**
       * <pre>
       ** 领取具体奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerSnatchGetAward serverSnatchGetAward = 809;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder> 
          getServerSnatchGetAwardFieldBuilder() {
        if (serverSnatchGetAwardBuilder_ == null) {
          serverSnatchGetAwardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAward.Builder, com.kys.util.netty.proto.SnatchProto.ServerSnatchGetAwardOrBuilder>(
                  getServerSnatchGetAward(),
                  getParentForChildren(),
                  isClean());
          serverSnatchGetAward_ = null;
        }
        return serverSnatchGetAwardBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerEnterDG serverEnterDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerEnterDG, com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder> serverEnterDGBuilder_;
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public boolean hasServerEnterDG() {
        return serverEnterDGBuilder_ != null || serverEnterDG_ != null;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerEnterDG getServerEnterDG() {
        if (serverEnterDGBuilder_ == null) {
          return serverEnterDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerEnterDG.getDefaultInstance() : serverEnterDG_;
        } else {
          return serverEnterDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public Builder setServerEnterDG(com.kys.util.netty.proto.SnatchProto.ServerEnterDG value) {
        if (serverEnterDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverEnterDG_ = value;
          onChanged();
        } else {
          serverEnterDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public Builder setServerEnterDG(
          com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder builderForValue) {
        if (serverEnterDGBuilder_ == null) {
          serverEnterDG_ = builderForValue.build();
          onChanged();
        } else {
          serverEnterDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public Builder mergeServerEnterDG(com.kys.util.netty.proto.SnatchProto.ServerEnterDG value) {
        if (serverEnterDGBuilder_ == null) {
          if (serverEnterDG_ != null) {
            serverEnterDG_ =
              com.kys.util.netty.proto.SnatchProto.ServerEnterDG.newBuilder(serverEnterDG_).mergeFrom(value).buildPartial();
          } else {
            serverEnterDG_ = value;
          }
          onChanged();
        } else {
          serverEnterDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public Builder clearServerEnterDG() {
        if (serverEnterDGBuilder_ == null) {
          serverEnterDG_ = null;
          onChanged();
        } else {
          serverEnterDG_ = null;
          serverEnterDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder getServerEnterDGBuilder() {
        
        onChanged();
        return getServerEnterDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder getServerEnterDGOrBuilder() {
        if (serverEnterDGBuilder_ != null) {
          return serverEnterDGBuilder_.getMessageOrBuilder();
        } else {
          return serverEnterDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerEnterDG.getDefaultInstance() : serverEnterDG_;
        }
      }
      /**
       * <pre>
       ** 服务端返回进入钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerEnterDG serverEnterDG = 900;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerEnterDG, com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder> 
          getServerEnterDGFieldBuilder() {
        if (serverEnterDGBuilder_ == null) {
          serverEnterDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerEnterDG, com.kys.util.netty.proto.SnatchProto.ServerEnterDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerEnterDGOrBuilder>(
                  getServerEnterDG(),
                  getParentForChildren(),
                  isClean());
          serverEnterDG_ = null;
        }
        return serverEnterDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerDGLottery serverDGLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerDGLottery, com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder> serverDGLotteryBuilder_;
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public boolean hasServerDGLottery() {
        return serverDGLotteryBuilder_ != null || serverDGLottery_ != null;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDGLottery getServerDGLottery() {
        if (serverDGLotteryBuilder_ == null) {
          return serverDGLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerDGLottery.getDefaultInstance() : serverDGLottery_;
        } else {
          return serverDGLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public Builder setServerDGLottery(com.kys.util.netty.proto.SnatchProto.ServerDGLottery value) {
        if (serverDGLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDGLottery_ = value;
          onChanged();
        } else {
          serverDGLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public Builder setServerDGLottery(
          com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder builderForValue) {
        if (serverDGLotteryBuilder_ == null) {
          serverDGLottery_ = builderForValue.build();
          onChanged();
        } else {
          serverDGLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public Builder mergeServerDGLottery(com.kys.util.netty.proto.SnatchProto.ServerDGLottery value) {
        if (serverDGLotteryBuilder_ == null) {
          if (serverDGLottery_ != null) {
            serverDGLottery_ =
              com.kys.util.netty.proto.SnatchProto.ServerDGLottery.newBuilder(serverDGLottery_).mergeFrom(value).buildPartial();
          } else {
            serverDGLottery_ = value;
          }
          onChanged();
        } else {
          serverDGLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public Builder clearServerDGLottery() {
        if (serverDGLotteryBuilder_ == null) {
          serverDGLottery_ = null;
          onChanged();
        } else {
          serverDGLottery_ = null;
          serverDGLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder getServerDGLotteryBuilder() {
        
        onChanged();
        return getServerDGLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder getServerDGLotteryOrBuilder() {
        if (serverDGLotteryBuilder_ != null) {
          return serverDGLotteryBuilder_.getMessageOrBuilder();
        } else {
          return serverDGLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerDGLottery.getDefaultInstance() : serverDGLottery_;
        }
      }
      /**
       * <pre>
       ** 服务端返回抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDGLottery serverDGLottery = 901;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerDGLottery, com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder> 
          getServerDGLotteryFieldBuilder() {
        if (serverDGLotteryBuilder_ == null) {
          serverDGLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerDGLottery, com.kys.util.netty.proto.SnatchProto.ServerDGLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDGLotteryOrBuilder>(
                  getServerDGLottery(),
                  getParentForChildren(),
                  isClean());
          serverDGLottery_ = null;
        }
        return serverDGLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerResetLottery serverResetLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerResetLottery, com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder> serverResetLotteryBuilder_;
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public boolean hasServerResetLottery() {
        return serverResetLotteryBuilder_ != null || serverResetLottery_ != null;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerResetLottery getServerResetLottery() {
        if (serverResetLotteryBuilder_ == null) {
          return serverResetLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerResetLottery.getDefaultInstance() : serverResetLottery_;
        } else {
          return serverResetLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public Builder setServerResetLottery(com.kys.util.netty.proto.SnatchProto.ServerResetLottery value) {
        if (serverResetLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverResetLottery_ = value;
          onChanged();
        } else {
          serverResetLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public Builder setServerResetLottery(
          com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder builderForValue) {
        if (serverResetLotteryBuilder_ == null) {
          serverResetLottery_ = builderForValue.build();
          onChanged();
        } else {
          serverResetLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public Builder mergeServerResetLottery(com.kys.util.netty.proto.SnatchProto.ServerResetLottery value) {
        if (serverResetLotteryBuilder_ == null) {
          if (serverResetLottery_ != null) {
            serverResetLottery_ =
              com.kys.util.netty.proto.SnatchProto.ServerResetLottery.newBuilder(serverResetLottery_).mergeFrom(value).buildPartial();
          } else {
            serverResetLottery_ = value;
          }
          onChanged();
        } else {
          serverResetLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public Builder clearServerResetLottery() {
        if (serverResetLotteryBuilder_ == null) {
          serverResetLottery_ = null;
          onChanged();
        } else {
          serverResetLottery_ = null;
          serverResetLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder getServerResetLotteryBuilder() {
        
        onChanged();
        return getServerResetLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder getServerResetLotteryOrBuilder() {
        if (serverResetLotteryBuilder_ != null) {
          return serverResetLotteryBuilder_.getMessageOrBuilder();
        } else {
          return serverResetLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerResetLottery.getDefaultInstance() : serverResetLottery_;
        }
      }
      /**
       * <pre>
       ** 服务端返回重置抽奖次数 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerResetLottery serverResetLottery = 902;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerResetLottery, com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder> 
          getServerResetLotteryFieldBuilder() {
        if (serverResetLotteryBuilder_ == null) {
          serverResetLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerResetLottery, com.kys.util.netty.proto.SnatchProto.ServerResetLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerResetLotteryOrBuilder>(
                  getServerResetLottery(),
                  getParentForChildren(),
                  isClean());
          serverResetLottery_ = null;
        }
        return serverResetLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerExitDG serverExitDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerExitDG, com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder> serverExitDGBuilder_;
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public boolean hasServerExitDG() {
        return serverExitDGBuilder_ != null || serverExitDG_ != null;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDG getServerExitDG() {
        if (serverExitDGBuilder_ == null) {
          return serverExitDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerExitDG.getDefaultInstance() : serverExitDG_;
        } else {
          return serverExitDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public Builder setServerExitDG(com.kys.util.netty.proto.SnatchProto.ServerExitDG value) {
        if (serverExitDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverExitDG_ = value;
          onChanged();
        } else {
          serverExitDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public Builder setServerExitDG(
          com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder builderForValue) {
        if (serverExitDGBuilder_ == null) {
          serverExitDG_ = builderForValue.build();
          onChanged();
        } else {
          serverExitDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public Builder mergeServerExitDG(com.kys.util.netty.proto.SnatchProto.ServerExitDG value) {
        if (serverExitDGBuilder_ == null) {
          if (serverExitDG_ != null) {
            serverExitDG_ =
              com.kys.util.netty.proto.SnatchProto.ServerExitDG.newBuilder(serverExitDG_).mergeFrom(value).buildPartial();
          } else {
            serverExitDG_ = value;
          }
          onChanged();
        } else {
          serverExitDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public Builder clearServerExitDG() {
        if (serverExitDGBuilder_ == null) {
          serverExitDG_ = null;
          onChanged();
        } else {
          serverExitDG_ = null;
          serverExitDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder getServerExitDGBuilder() {
        
        onChanged();
        return getServerExitDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder getServerExitDGOrBuilder() {
        if (serverExitDGBuilder_ != null) {
          return serverExitDGBuilder_.getMessageOrBuilder();
        } else {
          return serverExitDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerExitDG.getDefaultInstance() : serverExitDG_;
        }
      }
      /**
       * <pre>
       ** 服务端返回退出钻石宝箱 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDG serverExitDG = 903;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerExitDG, com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder> 
          getServerExitDGFieldBuilder() {
        if (serverExitDGBuilder_ == null) {
          serverExitDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerExitDG, com.kys.util.netty.proto.SnatchProto.ServerExitDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDGOrBuilder>(
                  getServerExitDG(),
                  getParentForChildren(),
                  isClean());
          serverExitDG_ = null;
        }
        return serverExitDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerOpenDG serverOpenDG_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOpenDG, com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder> serverOpenDGBuilder_;
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public boolean hasServerOpenDG() {
        return serverOpenDGBuilder_ != null || serverOpenDG_ != null;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDG getServerOpenDG() {
        if (serverOpenDGBuilder_ == null) {
          return serverOpenDG_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOpenDG.getDefaultInstance() : serverOpenDG_;
        } else {
          return serverOpenDGBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public Builder setServerOpenDG(com.kys.util.netty.proto.SnatchProto.ServerOpenDG value) {
        if (serverOpenDGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverOpenDG_ = value;
          onChanged();
        } else {
          serverOpenDGBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public Builder setServerOpenDG(
          com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder builderForValue) {
        if (serverOpenDGBuilder_ == null) {
          serverOpenDG_ = builderForValue.build();
          onChanged();
        } else {
          serverOpenDGBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public Builder mergeServerOpenDG(com.kys.util.netty.proto.SnatchProto.ServerOpenDG value) {
        if (serverOpenDGBuilder_ == null) {
          if (serverOpenDG_ != null) {
            serverOpenDG_ =
              com.kys.util.netty.proto.SnatchProto.ServerOpenDG.newBuilder(serverOpenDG_).mergeFrom(value).buildPartial();
          } else {
            serverOpenDG_ = value;
          }
          onChanged();
        } else {
          serverOpenDGBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public Builder clearServerOpenDG() {
        if (serverOpenDGBuilder_ == null) {
          serverOpenDG_ = null;
          onChanged();
        } else {
          serverOpenDG_ = null;
          serverOpenDGBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder getServerOpenDGBuilder() {
        
        onChanged();
        return getServerOpenDGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder getServerOpenDGOrBuilder() {
        if (serverOpenDGBuilder_ != null) {
          return serverOpenDGBuilder_.getMessageOrBuilder();
        } else {
          return serverOpenDG_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerOpenDG.getDefaultInstance() : serverOpenDG_;
        }
      }
      /**
       * <pre>
       ** 服务器返回玩家开启抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDG serverOpenDG = 904;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOpenDG, com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder> 
          getServerOpenDGFieldBuilder() {
        if (serverOpenDGBuilder_ == null) {
          serverOpenDGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerOpenDG, com.kys.util.netty.proto.SnatchProto.ServerOpenDG.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDGOrBuilder>(
                  getServerOpenDG(),
                  getParentForChildren(),
                  isClean());
          serverOpenDG_ = null;
        }
        return serverOpenDGBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerOpenDD serverOpenDD_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOpenDD, com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder> serverOpenDDBuilder_;
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public boolean hasServerOpenDD() {
        return serverOpenDDBuilder_ != null || serverOpenDD_ != null;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDD getServerOpenDD() {
        if (serverOpenDDBuilder_ == null) {
          return serverOpenDD_ == null ? com.kys.util.netty.proto.SnatchProto.ServerOpenDD.getDefaultInstance() : serverOpenDD_;
        } else {
          return serverOpenDDBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public Builder setServerOpenDD(com.kys.util.netty.proto.SnatchProto.ServerOpenDD value) {
        if (serverOpenDDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverOpenDD_ = value;
          onChanged();
        } else {
          serverOpenDDBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public Builder setServerOpenDD(
          com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder builderForValue) {
        if (serverOpenDDBuilder_ == null) {
          serverOpenDD_ = builderForValue.build();
          onChanged();
        } else {
          serverOpenDDBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public Builder mergeServerOpenDD(com.kys.util.netty.proto.SnatchProto.ServerOpenDD value) {
        if (serverOpenDDBuilder_ == null) {
          if (serverOpenDD_ != null) {
            serverOpenDD_ =
              com.kys.util.netty.proto.SnatchProto.ServerOpenDD.newBuilder(serverOpenDD_).mergeFrom(value).buildPartial();
          } else {
            serverOpenDD_ = value;
          }
          onChanged();
        } else {
          serverOpenDDBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public Builder clearServerOpenDD() {
        if (serverOpenDDBuilder_ == null) {
          serverOpenDD_ = null;
          onChanged();
        } else {
          serverOpenDD_ = null;
          serverOpenDDBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder getServerOpenDDBuilder() {
        
        onChanged();
        return getServerOpenDDFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder getServerOpenDDOrBuilder() {
        if (serverOpenDDBuilder_ != null) {
          return serverOpenDDBuilder_.getMessageOrBuilder();
        } else {
          return serverOpenDD_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerOpenDD.getDefaultInstance() : serverOpenDD_;
        }
      }
      /**
       * <pre>
       ** 服务器返回开启钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerOpenDD serverOpenDD = 905;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerOpenDD, com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder> 
          getServerOpenDDFieldBuilder() {
        if (serverOpenDDBuilder_ == null) {
          serverOpenDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerOpenDD, com.kys.util.netty.proto.SnatchProto.ServerOpenDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerOpenDDOrBuilder>(
                  getServerOpenDD(),
                  getParentForChildren(),
                  isClean());
          serverOpenDD_ = null;
        }
        return serverOpenDDBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerDDLottery serverDDLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerDDLottery, com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder> serverDDLotteryBuilder_;
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public boolean hasServerDDLottery() {
        return serverDDLotteryBuilder_ != null || serverDDLottery_ != null;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDDLottery getServerDDLottery() {
        if (serverDDLotteryBuilder_ == null) {
          return serverDDLottery_ == null ? com.kys.util.netty.proto.SnatchProto.ServerDDLottery.getDefaultInstance() : serverDDLottery_;
        } else {
          return serverDDLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public Builder setServerDDLottery(com.kys.util.netty.proto.SnatchProto.ServerDDLottery value) {
        if (serverDDLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverDDLottery_ = value;
          onChanged();
        } else {
          serverDDLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public Builder setServerDDLottery(
          com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder builderForValue) {
        if (serverDDLotteryBuilder_ == null) {
          serverDDLottery_ = builderForValue.build();
          onChanged();
        } else {
          serverDDLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public Builder mergeServerDDLottery(com.kys.util.netty.proto.SnatchProto.ServerDDLottery value) {
        if (serverDDLotteryBuilder_ == null) {
          if (serverDDLottery_ != null) {
            serverDDLottery_ =
              com.kys.util.netty.proto.SnatchProto.ServerDDLottery.newBuilder(serverDDLottery_).mergeFrom(value).buildPartial();
          } else {
            serverDDLottery_ = value;
          }
          onChanged();
        } else {
          serverDDLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public Builder clearServerDDLottery() {
        if (serverDDLotteryBuilder_ == null) {
          serverDDLottery_ = null;
          onChanged();
        } else {
          serverDDLottery_ = null;
          serverDDLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder getServerDDLotteryBuilder() {
        
        onChanged();
        return getServerDDLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder getServerDDLotteryOrBuilder() {
        if (serverDDLotteryBuilder_ != null) {
          return serverDDLotteryBuilder_.getMessageOrBuilder();
        } else {
          return serverDDLottery_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerDDLottery.getDefaultInstance() : serverDDLottery_;
        }
      }
      /**
       * <pre>
       ** 服务器返回钻石滚动抽奖结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerDDLottery serverDDLottery = 906;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerDDLottery, com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder> 
          getServerDDLotteryFieldBuilder() {
        if (serverDDLotteryBuilder_ == null) {
          serverDDLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerDDLottery, com.kys.util.netty.proto.SnatchProto.ServerDDLottery.Builder, com.kys.util.netty.proto.SnatchProto.ServerDDLotteryOrBuilder>(
                  getServerDDLottery(),
                  getParentForChildren(),
                  isClean());
          serverDDLottery_ = null;
        }
        return serverDDLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.ServerExitDD serverExitDD_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerExitDD, com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder> serverExitDDBuilder_;
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public boolean hasServerExitDD() {
        return serverExitDDBuilder_ != null || serverExitDD_ != null;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDD getServerExitDD() {
        if (serverExitDDBuilder_ == null) {
          return serverExitDD_ == null ? com.kys.util.netty.proto.SnatchProto.ServerExitDD.getDefaultInstance() : serverExitDD_;
        } else {
          return serverExitDDBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public Builder setServerExitDD(com.kys.util.netty.proto.SnatchProto.ServerExitDD value) {
        if (serverExitDDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverExitDD_ = value;
          onChanged();
        } else {
          serverExitDDBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public Builder setServerExitDD(
          com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder builderForValue) {
        if (serverExitDDBuilder_ == null) {
          serverExitDD_ = builderForValue.build();
          onChanged();
        } else {
          serverExitDDBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public Builder mergeServerExitDD(com.kys.util.netty.proto.SnatchProto.ServerExitDD value) {
        if (serverExitDDBuilder_ == null) {
          if (serverExitDD_ != null) {
            serverExitDD_ =
              com.kys.util.netty.proto.SnatchProto.ServerExitDD.newBuilder(serverExitDD_).mergeFrom(value).buildPartial();
          } else {
            serverExitDD_ = value;
          }
          onChanged();
        } else {
          serverExitDDBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public Builder clearServerExitDD() {
        if (serverExitDDBuilder_ == null) {
          serverExitDD_ = null;
          onChanged();
        } else {
          serverExitDD_ = null;
          serverExitDDBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder getServerExitDDBuilder() {
        
        onChanged();
        return getServerExitDDFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder getServerExitDDOrBuilder() {
        if (serverExitDDBuilder_ != null) {
          return serverExitDDBuilder_.getMessageOrBuilder();
        } else {
          return serverExitDD_ == null ?
              com.kys.util.netty.proto.SnatchProto.ServerExitDD.getDefaultInstance() : serverExitDD_;
        }
      }
      /**
       * <pre>
       ** 服务器返回退出钻石滚动抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerExitDD serverExitDD = 907;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.ServerExitDD, com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder> 
          getServerExitDDFieldBuilder() {
        if (serverExitDDBuilder_ == null) {
          serverExitDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.ServerExitDD, com.kys.util.netty.proto.SnatchProto.ServerExitDD.Builder, com.kys.util.netty.proto.SnatchProto.ServerExitDDOrBuilder>(
                  getServerExitDD(),
                  getParentForChildren(),
                  isClean());
          serverExitDD_ = null;
        }
        return serverExitDDBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ServerQueryProp serverQueryProp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerQueryProp, com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder> serverQueryPropBuilder_;
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public boolean hasServerQueryProp() {
        return serverQueryPropBuilder_ != null || serverQueryProp_ != null;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryProp getServerQueryProp() {
        if (serverQueryPropBuilder_ == null) {
          return serverQueryProp_ == null ? com.kys.util.netty.proto.PropProto.ServerQueryProp.getDefaultInstance() : serverQueryProp_;
        } else {
          return serverQueryPropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public Builder setServerQueryProp(com.kys.util.netty.proto.PropProto.ServerQueryProp value) {
        if (serverQueryPropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryProp_ = value;
          onChanged();
        } else {
          serverQueryPropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public Builder setServerQueryProp(
          com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder builderForValue) {
        if (serverQueryPropBuilder_ == null) {
          serverQueryProp_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryPropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public Builder mergeServerQueryProp(com.kys.util.netty.proto.PropProto.ServerQueryProp value) {
        if (serverQueryPropBuilder_ == null) {
          if (serverQueryProp_ != null) {
            serverQueryProp_ =
              com.kys.util.netty.proto.PropProto.ServerQueryProp.newBuilder(serverQueryProp_).mergeFrom(value).buildPartial();
          } else {
            serverQueryProp_ = value;
          }
          onChanged();
        } else {
          serverQueryPropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public Builder clearServerQueryProp() {
        if (serverQueryPropBuilder_ == null) {
          serverQueryProp_ = null;
          onChanged();
        } else {
          serverQueryProp_ = null;
          serverQueryPropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder getServerQueryPropBuilder() {
        
        onChanged();
        return getServerQueryPropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder getServerQueryPropOrBuilder() {
        if (serverQueryPropBuilder_ != null) {
          return serverQueryPropBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryProp_ == null ?
              com.kys.util.netty.proto.PropProto.ServerQueryProp.getDefaultInstance() : serverQueryProp_;
        }
      }
      /**
       * <pre>
       ** 服务端返回所有道具信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryProp serverQueryProp = 1001;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerQueryProp, com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder> 
          getServerQueryPropFieldBuilder() {
        if (serverQueryPropBuilder_ == null) {
          serverQueryPropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ServerQueryProp, com.kys.util.netty.proto.PropProto.ServerQueryProp.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropOrBuilder>(
                  getServerQueryProp(),
                  getParentForChildren(),
                  isClean());
          serverQueryProp_ = null;
        }
        return serverQueryPropBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ServerUseProp serverUseProp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerUseProp, com.kys.util.netty.proto.PropProto.ServerUseProp.Builder, com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder> serverUsePropBuilder_;
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public boolean hasServerUseProp() {
        return serverUsePropBuilder_ != null || serverUseProp_ != null;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerUseProp getServerUseProp() {
        if (serverUsePropBuilder_ == null) {
          return serverUseProp_ == null ? com.kys.util.netty.proto.PropProto.ServerUseProp.getDefaultInstance() : serverUseProp_;
        } else {
          return serverUsePropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public Builder setServerUseProp(com.kys.util.netty.proto.PropProto.ServerUseProp value) {
        if (serverUsePropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverUseProp_ = value;
          onChanged();
        } else {
          serverUsePropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public Builder setServerUseProp(
          com.kys.util.netty.proto.PropProto.ServerUseProp.Builder builderForValue) {
        if (serverUsePropBuilder_ == null) {
          serverUseProp_ = builderForValue.build();
          onChanged();
        } else {
          serverUsePropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public Builder mergeServerUseProp(com.kys.util.netty.proto.PropProto.ServerUseProp value) {
        if (serverUsePropBuilder_ == null) {
          if (serverUseProp_ != null) {
            serverUseProp_ =
              com.kys.util.netty.proto.PropProto.ServerUseProp.newBuilder(serverUseProp_).mergeFrom(value).buildPartial();
          } else {
            serverUseProp_ = value;
          }
          onChanged();
        } else {
          serverUsePropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public Builder clearServerUseProp() {
        if (serverUsePropBuilder_ == null) {
          serverUseProp_ = null;
          onChanged();
        } else {
          serverUseProp_ = null;
          serverUsePropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerUseProp.Builder getServerUsePropBuilder() {
        
        onChanged();
        return getServerUsePropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder getServerUsePropOrBuilder() {
        if (serverUsePropBuilder_ != null) {
          return serverUsePropBuilder_.getMessageOrBuilder();
        } else {
          return serverUseProp_ == null ?
              com.kys.util.netty.proto.PropProto.ServerUseProp.getDefaultInstance() : serverUseProp_;
        }
      }
      /**
       * <pre>
       ** 服务器返回使用道具结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerUseProp serverUseProp = 1002;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerUseProp, com.kys.util.netty.proto.PropProto.ServerUseProp.Builder, com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder> 
          getServerUsePropFieldBuilder() {
        if (serverUsePropBuilder_ == null) {
          serverUsePropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ServerUseProp, com.kys.util.netty.proto.PropProto.ServerUseProp.Builder, com.kys.util.netty.proto.PropProto.ServerUsePropOrBuilder>(
                  getServerUseProp(),
                  getParentForChildren(),
                  isClean());
          serverUseProp_ = null;
        }
        return serverUsePropBuilder_;
      }

      private com.kys.util.netty.proto.PropProto.ServerQueryPropCount serverQueryPropCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerQueryPropCount, com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder> serverQueryPropCountBuilder_;
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public boolean hasServerQueryPropCount() {
        return serverQueryPropCountBuilder_ != null || serverQueryPropCount_ != null;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryPropCount getServerQueryPropCount() {
        if (serverQueryPropCountBuilder_ == null) {
          return serverQueryPropCount_ == null ? com.kys.util.netty.proto.PropProto.ServerQueryPropCount.getDefaultInstance() : serverQueryPropCount_;
        } else {
          return serverQueryPropCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public Builder setServerQueryPropCount(com.kys.util.netty.proto.PropProto.ServerQueryPropCount value) {
        if (serverQueryPropCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverQueryPropCount_ = value;
          onChanged();
        } else {
          serverQueryPropCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public Builder setServerQueryPropCount(
          com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder builderForValue) {
        if (serverQueryPropCountBuilder_ == null) {
          serverQueryPropCount_ = builderForValue.build();
          onChanged();
        } else {
          serverQueryPropCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public Builder mergeServerQueryPropCount(com.kys.util.netty.proto.PropProto.ServerQueryPropCount value) {
        if (serverQueryPropCountBuilder_ == null) {
          if (serverQueryPropCount_ != null) {
            serverQueryPropCount_ =
              com.kys.util.netty.proto.PropProto.ServerQueryPropCount.newBuilder(serverQueryPropCount_).mergeFrom(value).buildPartial();
          } else {
            serverQueryPropCount_ = value;
          }
          onChanged();
        } else {
          serverQueryPropCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public Builder clearServerQueryPropCount() {
        if (serverQueryPropCountBuilder_ == null) {
          serverQueryPropCount_ = null;
          onChanged();
        } else {
          serverQueryPropCount_ = null;
          serverQueryPropCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder getServerQueryPropCountBuilder() {
        
        onChanged();
        return getServerQueryPropCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      public com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder getServerQueryPropCountOrBuilder() {
        if (serverQueryPropCountBuilder_ != null) {
          return serverQueryPropCountBuilder_.getMessageOrBuilder();
        } else {
          return serverQueryPropCount_ == null ?
              com.kys.util.netty.proto.PropProto.ServerQueryPropCount.getDefaultInstance() : serverQueryPropCount_;
        }
      }
      /**
       * <pre>
       ** 服务器返回查询的道具id数组 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerQueryPropCount serverQueryPropCount = 1003;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.PropProto.ServerQueryPropCount, com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder> 
          getServerQueryPropCountFieldBuilder() {
        if (serverQueryPropCountBuilder_ == null) {
          serverQueryPropCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.PropProto.ServerQueryPropCount, com.kys.util.netty.proto.PropProto.ServerQueryPropCount.Builder, com.kys.util.netty.proto.PropProto.ServerQueryPropCountOrBuilder>(
                  getServerQueryPropCount(),
                  getParentForChildren(),
                  isClean());
          serverQueryPropCount_ = null;
        }
        return serverQueryPropCountBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerMonthSignInfo serverMonthSignInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerMonthSignInfo, com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.Builder, com.kys.util.netty.proto.SignProto.ServerMonthSignInfoOrBuilder> serverMonthSignInfoBuilder_;
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      public boolean hasServerMonthSignInfo() {
        return serverMonthSignInfoBuilder_ != null || serverMonthSignInfo_ != null;
      }
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerMonthSignInfo getServerMonthSignInfo() {
        if (serverMonthSignInfoBuilder_ == null) {
          return serverMonthSignInfo_ == null ? com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.getDefaultInstance() : serverMonthSignInfo_;
        } else {
          return serverMonthSignInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      public Builder setServerMonthSignInfo(com.kys.util.netty.proto.SignProto.ServerMonthSignInfo value) {
        if (serverMonthSignInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMonthSignInfo_ = value;
          onChanged();
        } else {
          serverMonthSignInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      public Builder setServerMonthSignInfo(
          com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.Builder builderForValue) {
        if (serverMonthSignInfoBuilder_ == null) {
          serverMonthSignInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverMonthSignInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      public Builder mergeServerMonthSignInfo(com.kys.util.netty.proto.SignProto.ServerMonthSignInfo value) {
        if (serverMonthSignInfoBuilder_ == null) {
          if (serverMonthSignInfo_ != null) {
            serverMonthSignInfo_ =
              com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.newBuilder(serverMonthSignInfo_).mergeFrom(value).buildPartial();
          } else {
            serverMonthSignInfo_ = value;
          }
          onChanged();
        } else {
          serverMonthSignInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      public Builder clearServerMonthSignInfo() {
        if (serverMonthSignInfoBuilder_ == null) {
          serverMonthSignInfo_ = null;
          onChanged();
        } else {
          serverMonthSignInfo_ = null;
          serverMonthSignInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.Builder getServerMonthSignInfoBuilder() {
        
        onChanged();
        return getServerMonthSignInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerMonthSignInfoOrBuilder getServerMonthSignInfoOrBuilder() {
        if (serverMonthSignInfoBuilder_ != null) {
          return serverMonthSignInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverMonthSignInfo_ == null ?
              com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.getDefaultInstance() : serverMonthSignInfo_;
        }
      }
      /**
       * <pre>
       ** 服务端返回月签信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSignInfo serverMonthSignInfo = 1101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerMonthSignInfo, com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.Builder, com.kys.util.netty.proto.SignProto.ServerMonthSignInfoOrBuilder> 
          getServerMonthSignInfoFieldBuilder() {
        if (serverMonthSignInfoBuilder_ == null) {
          serverMonthSignInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerMonthSignInfo, com.kys.util.netty.proto.SignProto.ServerMonthSignInfo.Builder, com.kys.util.netty.proto.SignProto.ServerMonthSignInfoOrBuilder>(
                  getServerMonthSignInfo(),
                  getParentForChildren(),
                  isClean());
          serverMonthSignInfo_ = null;
        }
        return serverMonthSignInfoBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerMonthSign serverMonthSign_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerMonthSign, com.kys.util.netty.proto.SignProto.ServerMonthSign.Builder, com.kys.util.netty.proto.SignProto.ServerMonthSignOrBuilder> serverMonthSignBuilder_;
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      public boolean hasServerMonthSign() {
        return serverMonthSignBuilder_ != null || serverMonthSign_ != null;
      }
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerMonthSign getServerMonthSign() {
        if (serverMonthSignBuilder_ == null) {
          return serverMonthSign_ == null ? com.kys.util.netty.proto.SignProto.ServerMonthSign.getDefaultInstance() : serverMonthSign_;
        } else {
          return serverMonthSignBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      public Builder setServerMonthSign(com.kys.util.netty.proto.SignProto.ServerMonthSign value) {
        if (serverMonthSignBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMonthSign_ = value;
          onChanged();
        } else {
          serverMonthSignBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      public Builder setServerMonthSign(
          com.kys.util.netty.proto.SignProto.ServerMonthSign.Builder builderForValue) {
        if (serverMonthSignBuilder_ == null) {
          serverMonthSign_ = builderForValue.build();
          onChanged();
        } else {
          serverMonthSignBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      public Builder mergeServerMonthSign(com.kys.util.netty.proto.SignProto.ServerMonthSign value) {
        if (serverMonthSignBuilder_ == null) {
          if (serverMonthSign_ != null) {
            serverMonthSign_ =
              com.kys.util.netty.proto.SignProto.ServerMonthSign.newBuilder(serverMonthSign_).mergeFrom(value).buildPartial();
          } else {
            serverMonthSign_ = value;
          }
          onChanged();
        } else {
          serverMonthSignBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      public Builder clearServerMonthSign() {
        if (serverMonthSignBuilder_ == null) {
          serverMonthSign_ = null;
          onChanged();
        } else {
          serverMonthSign_ = null;
          serverMonthSignBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerMonthSign.Builder getServerMonthSignBuilder() {
        
        onChanged();
        return getServerMonthSignFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerMonthSignOrBuilder getServerMonthSignOrBuilder() {
        if (serverMonthSignBuilder_ != null) {
          return serverMonthSignBuilder_.getMessageOrBuilder();
        } else {
          return serverMonthSign_ == null ?
              com.kys.util.netty.proto.SignProto.ServerMonthSign.getDefaultInstance() : serverMonthSign_;
        }
      }
      /**
       * <pre>
       ** 服务器返回(新)月签到 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerMonthSign serverMonthSign = 1102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerMonthSign, com.kys.util.netty.proto.SignProto.ServerMonthSign.Builder, com.kys.util.netty.proto.SignProto.ServerMonthSignOrBuilder> 
          getServerMonthSignFieldBuilder() {
        if (serverMonthSignBuilder_ == null) {
          serverMonthSignBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerMonthSign, com.kys.util.netty.proto.SignProto.ServerMonthSign.Builder, com.kys.util.netty.proto.SignProto.ServerMonthSignOrBuilder>(
                  getServerMonthSign(),
                  getParentForChildren(),
                  isClean());
          serverMonthSign_ = null;
        }
        return serverMonthSignBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerGetCritReward serverGetCritReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetCritReward, com.kys.util.netty.proto.SignProto.ServerGetCritReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetCritRewardOrBuilder> serverGetCritRewardBuilder_;
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      public boolean hasServerGetCritReward() {
        return serverGetCritRewardBuilder_ != null || serverGetCritReward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetCritReward getServerGetCritReward() {
        if (serverGetCritRewardBuilder_ == null) {
          return serverGetCritReward_ == null ? com.kys.util.netty.proto.SignProto.ServerGetCritReward.getDefaultInstance() : serverGetCritReward_;
        } else {
          return serverGetCritRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      public Builder setServerGetCritReward(com.kys.util.netty.proto.SignProto.ServerGetCritReward value) {
        if (serverGetCritRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetCritReward_ = value;
          onChanged();
        } else {
          serverGetCritRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      public Builder setServerGetCritReward(
          com.kys.util.netty.proto.SignProto.ServerGetCritReward.Builder builderForValue) {
        if (serverGetCritRewardBuilder_ == null) {
          serverGetCritReward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetCritRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      public Builder mergeServerGetCritReward(com.kys.util.netty.proto.SignProto.ServerGetCritReward value) {
        if (serverGetCritRewardBuilder_ == null) {
          if (serverGetCritReward_ != null) {
            serverGetCritReward_ =
              com.kys.util.netty.proto.SignProto.ServerGetCritReward.newBuilder(serverGetCritReward_).mergeFrom(value).buildPartial();
          } else {
            serverGetCritReward_ = value;
          }
          onChanged();
        } else {
          serverGetCritRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      public Builder clearServerGetCritReward() {
        if (serverGetCritRewardBuilder_ == null) {
          serverGetCritReward_ = null;
          onChanged();
        } else {
          serverGetCritReward_ = null;
          serverGetCritRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetCritReward.Builder getServerGetCritRewardBuilder() {
        
        onChanged();
        return getServerGetCritRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetCritRewardOrBuilder getServerGetCritRewardOrBuilder() {
        if (serverGetCritRewardBuilder_ != null) {
          return serverGetCritRewardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetCritReward_ == null ?
              com.kys.util.netty.proto.SignProto.ServerGetCritReward.getDefaultInstance() : serverGetCritReward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回获取暴击奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetCritReward serverGetCritReward = 1103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetCritReward, com.kys.util.netty.proto.SignProto.ServerGetCritReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetCritRewardOrBuilder> 
          getServerGetCritRewardFieldBuilder() {
        if (serverGetCritRewardBuilder_ == null) {
          serverGetCritRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerGetCritReward, com.kys.util.netty.proto.SignProto.ServerGetCritReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetCritRewardOrBuilder>(
                  getServerGetCritReward(),
                  getParentForChildren(),
                  isClean());
          serverGetCritReward_ = null;
        }
        return serverGetCritRewardBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerLTLottery serverLTLottery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerLTLottery, com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder, com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder> serverLTLotteryBuilder_;
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public boolean hasServerLTLottery() {
        return serverLTLotteryBuilder_ != null || serverLTLottery_ != null;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerLTLottery getServerLTLottery() {
        if (serverLTLotteryBuilder_ == null) {
          return serverLTLottery_ == null ? com.kys.util.netty.proto.SignProto.ServerLTLottery.getDefaultInstance() : serverLTLottery_;
        } else {
          return serverLTLotteryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public Builder setServerLTLottery(com.kys.util.netty.proto.SignProto.ServerLTLottery value) {
        if (serverLTLotteryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverLTLottery_ = value;
          onChanged();
        } else {
          serverLTLotteryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public Builder setServerLTLottery(
          com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder builderForValue) {
        if (serverLTLotteryBuilder_ == null) {
          serverLTLottery_ = builderForValue.build();
          onChanged();
        } else {
          serverLTLotteryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public Builder mergeServerLTLottery(com.kys.util.netty.proto.SignProto.ServerLTLottery value) {
        if (serverLTLotteryBuilder_ == null) {
          if (serverLTLottery_ != null) {
            serverLTLottery_ =
              com.kys.util.netty.proto.SignProto.ServerLTLottery.newBuilder(serverLTLottery_).mergeFrom(value).buildPartial();
          } else {
            serverLTLottery_ = value;
          }
          onChanged();
        } else {
          serverLTLotteryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public Builder clearServerLTLottery() {
        if (serverLTLotteryBuilder_ == null) {
          serverLTLottery_ = null;
          onChanged();
        } else {
          serverLTLottery_ = null;
          serverLTLotteryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder getServerLTLotteryBuilder() {
        
        onChanged();
        return getServerLTLotteryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder getServerLTLotteryOrBuilder() {
        if (serverLTLotteryBuilder_ != null) {
          return serverLTLotteryBuilder_.getMessageOrBuilder();
        } else {
          return serverLTLottery_ == null ?
              com.kys.util.netty.proto.SignProto.ServerLTLottery.getDefaultInstance() : serverLTLottery_;
        }
      }
      /**
       * <pre>
       ** 服务器返回幸运时钟抽奖 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerLTLottery serverLTLottery = 1104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerLTLottery, com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder, com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder> 
          getServerLTLotteryFieldBuilder() {
        if (serverLTLotteryBuilder_ == null) {
          serverLTLotteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerLTLottery, com.kys.util.netty.proto.SignProto.ServerLTLottery.Builder, com.kys.util.netty.proto.SignProto.ServerLTLotteryOrBuilder>(
                  getServerLTLottery(),
                  getParentForChildren(),
                  isClean());
          serverLTLottery_ = null;
        }
        return serverLTLotteryBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerGetTSReward serverGetTSReward_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetTSReward, com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder> serverGetTSRewardBuilder_;
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public boolean hasServerGetTSReward() {
        return serverGetTSRewardBuilder_ != null || serverGetTSReward_ != null;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetTSReward getServerGetTSReward() {
        if (serverGetTSRewardBuilder_ == null) {
          return serverGetTSReward_ == null ? com.kys.util.netty.proto.SignProto.ServerGetTSReward.getDefaultInstance() : serverGetTSReward_;
        } else {
          return serverGetTSRewardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public Builder setServerGetTSReward(com.kys.util.netty.proto.SignProto.ServerGetTSReward value) {
        if (serverGetTSRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetTSReward_ = value;
          onChanged();
        } else {
          serverGetTSRewardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public Builder setServerGetTSReward(
          com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder builderForValue) {
        if (serverGetTSRewardBuilder_ == null) {
          serverGetTSReward_ = builderForValue.build();
          onChanged();
        } else {
          serverGetTSRewardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public Builder mergeServerGetTSReward(com.kys.util.netty.proto.SignProto.ServerGetTSReward value) {
        if (serverGetTSRewardBuilder_ == null) {
          if (serverGetTSReward_ != null) {
            serverGetTSReward_ =
              com.kys.util.netty.proto.SignProto.ServerGetTSReward.newBuilder(serverGetTSReward_).mergeFrom(value).buildPartial();
          } else {
            serverGetTSReward_ = value;
          }
          onChanged();
        } else {
          serverGetTSRewardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public Builder clearServerGetTSReward() {
        if (serverGetTSRewardBuilder_ == null) {
          serverGetTSReward_ = null;
          onChanged();
        } else {
          serverGetTSReward_ = null;
          serverGetTSRewardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder getServerGetTSRewardBuilder() {
        
        onChanged();
        return getServerGetTSRewardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder getServerGetTSRewardOrBuilder() {
        if (serverGetTSRewardBuilder_ != null) {
          return serverGetTSRewardBuilder_.getMessageOrBuilder();
        } else {
          return serverGetTSReward_ == null ?
              com.kys.util.netty.proto.SignProto.ServerGetTSReward.getDefaultInstance() : serverGetTSReward_;
        }
      }
      /**
       * <pre>
       ** 服务器返回获取累计签到奖励 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetTSReward serverGetTSReward = 1105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetTSReward, com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder> 
          getServerGetTSRewardFieldBuilder() {
        if (serverGetTSRewardBuilder_ == null) {
          serverGetTSRewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerGetTSReward, com.kys.util.netty.proto.SignProto.ServerGetTSReward.Builder, com.kys.util.netty.proto.SignProto.ServerGetTSRewardOrBuilder>(
                  getServerGetTSReward(),
                  getParentForChildren(),
                  isClean());
          serverGetTSReward_ = null;
        }
        return serverGetTSRewardBuilder_;
      }

      private com.kys.util.netty.proto.SignProto.ServerGetLuckInfo serverGetLuckInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetLuckInfo, com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder> serverGetLuckInfoBuilder_;
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public boolean hasServerGetLuckInfo() {
        return serverGetLuckInfoBuilder_ != null || serverGetLuckInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetLuckInfo getServerGetLuckInfo() {
        if (serverGetLuckInfoBuilder_ == null) {
          return serverGetLuckInfo_ == null ? com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.getDefaultInstance() : serverGetLuckInfo_;
        } else {
          return serverGetLuckInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public Builder setServerGetLuckInfo(com.kys.util.netty.proto.SignProto.ServerGetLuckInfo value) {
        if (serverGetLuckInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetLuckInfo_ = value;
          onChanged();
        } else {
          serverGetLuckInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public Builder setServerGetLuckInfo(
          com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder builderForValue) {
        if (serverGetLuckInfoBuilder_ == null) {
          serverGetLuckInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetLuckInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public Builder mergeServerGetLuckInfo(com.kys.util.netty.proto.SignProto.ServerGetLuckInfo value) {
        if (serverGetLuckInfoBuilder_ == null) {
          if (serverGetLuckInfo_ != null) {
            serverGetLuckInfo_ =
              com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.newBuilder(serverGetLuckInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetLuckInfo_ = value;
          }
          onChanged();
        } else {
          serverGetLuckInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public Builder clearServerGetLuckInfo() {
        if (serverGetLuckInfoBuilder_ == null) {
          serverGetLuckInfo_ = null;
          onChanged();
        } else {
          serverGetLuckInfo_ = null;
          serverGetLuckInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder getServerGetLuckInfoBuilder() {
        
        onChanged();
        return getServerGetLuckInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      public com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder getServerGetLuckInfoOrBuilder() {
        if (serverGetLuckInfoBuilder_ != null) {
          return serverGetLuckInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetLuckInfo_ == null ?
              com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.getDefaultInstance() : serverGetLuckInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器获取幸运抽奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetLuckInfo serverGetLuckInfo = 1106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SignProto.ServerGetLuckInfo, com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder> 
          getServerGetLuckInfoFieldBuilder() {
        if (serverGetLuckInfoBuilder_ == null) {
          serverGetLuckInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SignProto.ServerGetLuckInfo, com.kys.util.netty.proto.SignProto.ServerGetLuckInfo.Builder, com.kys.util.netty.proto.SignProto.ServerGetLuckInfoOrBuilder>(
                  getServerGetLuckInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetLuckInfo_ = null;
        }
        return serverGetLuckInfoBuilder_;
      }

      private com.kys.util.netty.proto.VipProto.ServerGetVipInfo serverGetVipInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ServerGetVipInfo, com.kys.util.netty.proto.VipProto.ServerGetVipInfo.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipInfoOrBuilder> serverGetVipInfoBuilder_;
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      public boolean hasServerGetVipInfo() {
        return serverGetVipInfoBuilder_ != null || serverGetVipInfo_ != null;
      }
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVipInfo getServerGetVipInfo() {
        if (serverGetVipInfoBuilder_ == null) {
          return serverGetVipInfo_ == null ? com.kys.util.netty.proto.VipProto.ServerGetVipInfo.getDefaultInstance() : serverGetVipInfo_;
        } else {
          return serverGetVipInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      public Builder setServerGetVipInfo(com.kys.util.netty.proto.VipProto.ServerGetVipInfo value) {
        if (serverGetVipInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetVipInfo_ = value;
          onChanged();
        } else {
          serverGetVipInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      public Builder setServerGetVipInfo(
          com.kys.util.netty.proto.VipProto.ServerGetVipInfo.Builder builderForValue) {
        if (serverGetVipInfoBuilder_ == null) {
          serverGetVipInfo_ = builderForValue.build();
          onChanged();
        } else {
          serverGetVipInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      public Builder mergeServerGetVipInfo(com.kys.util.netty.proto.VipProto.ServerGetVipInfo value) {
        if (serverGetVipInfoBuilder_ == null) {
          if (serverGetVipInfo_ != null) {
            serverGetVipInfo_ =
              com.kys.util.netty.proto.VipProto.ServerGetVipInfo.newBuilder(serverGetVipInfo_).mergeFrom(value).buildPartial();
          } else {
            serverGetVipInfo_ = value;
          }
          onChanged();
        } else {
          serverGetVipInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      public Builder clearServerGetVipInfo() {
        if (serverGetVipInfoBuilder_ == null) {
          serverGetVipInfo_ = null;
          onChanged();
        } else {
          serverGetVipInfo_ = null;
          serverGetVipInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVipInfo.Builder getServerGetVipInfoBuilder() {
        
        onChanged();
        return getServerGetVipInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVipInfoOrBuilder getServerGetVipInfoOrBuilder() {
        if (serverGetVipInfoBuilder_ != null) {
          return serverGetVipInfoBuilder_.getMessageOrBuilder();
        } else {
          return serverGetVipInfo_ == null ?
              com.kys.util.netty.proto.VipProto.ServerGetVipInfo.getDefaultInstance() : serverGetVipInfo_;
        }
      }
      /**
       * <pre>
       ** 服务器返回VIP界面展示所需的属性 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipInfo serverGetVipInfo = 1201;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ServerGetVipInfo, com.kys.util.netty.proto.VipProto.ServerGetVipInfo.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipInfoOrBuilder> 
          getServerGetVipInfoFieldBuilder() {
        if (serverGetVipInfoBuilder_ == null) {
          serverGetVipInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.VipProto.ServerGetVipInfo, com.kys.util.netty.proto.VipProto.ServerGetVipInfo.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipInfoOrBuilder>(
                  getServerGetVipInfo(),
                  getParentForChildren(),
                  isClean());
          serverGetVipInfo_ = null;
        }
        return serverGetVipInfoBuilder_;
      }

      private com.kys.util.netty.proto.VipProto.ServerGetVipWeek serverGetVipWeek_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ServerGetVipWeek, com.kys.util.netty.proto.VipProto.ServerGetVipWeek.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipWeekOrBuilder> serverGetVipWeekBuilder_;
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      public boolean hasServerGetVipWeek() {
        return serverGetVipWeekBuilder_ != null || serverGetVipWeek_ != null;
      }
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVipWeek getServerGetVipWeek() {
        if (serverGetVipWeekBuilder_ == null) {
          return serverGetVipWeek_ == null ? com.kys.util.netty.proto.VipProto.ServerGetVipWeek.getDefaultInstance() : serverGetVipWeek_;
        } else {
          return serverGetVipWeekBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      public Builder setServerGetVipWeek(com.kys.util.netty.proto.VipProto.ServerGetVipWeek value) {
        if (serverGetVipWeekBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverGetVipWeek_ = value;
          onChanged();
        } else {
          serverGetVipWeekBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      public Builder setServerGetVipWeek(
          com.kys.util.netty.proto.VipProto.ServerGetVipWeek.Builder builderForValue) {
        if (serverGetVipWeekBuilder_ == null) {
          serverGetVipWeek_ = builderForValue.build();
          onChanged();
        } else {
          serverGetVipWeekBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      public Builder mergeServerGetVipWeek(com.kys.util.netty.proto.VipProto.ServerGetVipWeek value) {
        if (serverGetVipWeekBuilder_ == null) {
          if (serverGetVipWeek_ != null) {
            serverGetVipWeek_ =
              com.kys.util.netty.proto.VipProto.ServerGetVipWeek.newBuilder(serverGetVipWeek_).mergeFrom(value).buildPartial();
          } else {
            serverGetVipWeek_ = value;
          }
          onChanged();
        } else {
          serverGetVipWeekBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      public Builder clearServerGetVipWeek() {
        if (serverGetVipWeekBuilder_ == null) {
          serverGetVipWeek_ = null;
          onChanged();
        } else {
          serverGetVipWeek_ = null;
          serverGetVipWeekBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVipWeek.Builder getServerGetVipWeekBuilder() {
        
        onChanged();
        return getServerGetVipWeekFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      public com.kys.util.netty.proto.VipProto.ServerGetVipWeekOrBuilder getServerGetVipWeekOrBuilder() {
        if (serverGetVipWeekBuilder_ != null) {
          return serverGetVipWeekBuilder_.getMessageOrBuilder();
        } else {
          return serverGetVipWeek_ == null ?
              com.kys.util.netty.proto.VipProto.ServerGetVipWeek.getDefaultInstance() : serverGetVipWeek_;
        }
      }
      /**
       * <pre>
       ** 返回领取VIP每周礼包 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.ServerGetVipWeek serverGetVipWeek = 1202;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.VipProto.ServerGetVipWeek, com.kys.util.netty.proto.VipProto.ServerGetVipWeek.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipWeekOrBuilder> 
          getServerGetVipWeekFieldBuilder() {
        if (serverGetVipWeekBuilder_ == null) {
          serverGetVipWeekBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.VipProto.ServerGetVipWeek, com.kys.util.netty.proto.VipProto.ServerGetVipWeek.Builder, com.kys.util.netty.proto.VipProto.ServerGetVipWeekOrBuilder>(
                  getServerGetVipWeek(),
                  getParentForChildren(),
                  isClean());
          serverGetVipWeek_ = null;
        }
        return serverGetVipWeekBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_GameStart bGameStart_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_GameStart, com.kys.util.netty.proto.GameProto.B_GameStart.Builder, com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder> bGameStartBuilder_;
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public boolean hasBGameStart() {
        return bGameStartBuilder_ != null || bGameStart_ != null;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameStart getBGameStart() {
        if (bGameStartBuilder_ == null) {
          return bGameStart_ == null ? com.kys.util.netty.proto.GameProto.B_GameStart.getDefaultInstance() : bGameStart_;
        } else {
          return bGameStartBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public Builder setBGameStart(com.kys.util.netty.proto.GameProto.B_GameStart value) {
        if (bGameStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bGameStart_ = value;
          onChanged();
        } else {
          bGameStartBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public Builder setBGameStart(
          com.kys.util.netty.proto.GameProto.B_GameStart.Builder builderForValue) {
        if (bGameStartBuilder_ == null) {
          bGameStart_ = builderForValue.build();
          onChanged();
        } else {
          bGameStartBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public Builder mergeBGameStart(com.kys.util.netty.proto.GameProto.B_GameStart value) {
        if (bGameStartBuilder_ == null) {
          if (bGameStart_ != null) {
            bGameStart_ =
              com.kys.util.netty.proto.GameProto.B_GameStart.newBuilder(bGameStart_).mergeFrom(value).buildPartial();
          } else {
            bGameStart_ = value;
          }
          onChanged();
        } else {
          bGameStartBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public Builder clearBGameStart() {
        if (bGameStartBuilder_ == null) {
          bGameStart_ = null;
          onChanged();
        } else {
          bGameStart_ = null;
          bGameStartBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameStart.Builder getBGameStartBuilder() {
        
        onChanged();
        return getBGameStartFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder getBGameStartOrBuilder() {
        if (bGameStartBuilder_ != null) {
          return bGameStartBuilder_.getMessageOrBuilder();
        } else {
          return bGameStart_ == null ?
              com.kys.util.netty.proto.GameProto.B_GameStart.getDefaultInstance() : bGameStart_;
        }
      }
      /**
       * <pre>
       ** 服务器发牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameStart b_GameStart = 402;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_GameStart, com.kys.util.netty.proto.GameProto.B_GameStart.Builder, com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder> 
          getBGameStartFieldBuilder() {
        if (bGameStartBuilder_ == null) {
          bGameStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_GameStart, com.kys.util.netty.proto.GameProto.B_GameStart.Builder, com.kys.util.netty.proto.GameProto.B_GameStartOrBuilder>(
                  getBGameStart(),
                  getParentForChildren(),
                  isClean());
          bGameStart_ = null;
        }
        return bGameStartBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_DoCatch bDoCatch_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_DoCatch, com.kys.util.netty.proto.GameProto.B_DoCatch.Builder, com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder> bDoCatchBuilder_;
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public boolean hasBDoCatch() {
        return bDoCatchBuilder_ != null || bDoCatch_ != null;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_DoCatch getBDoCatch() {
        if (bDoCatchBuilder_ == null) {
          return bDoCatch_ == null ? com.kys.util.netty.proto.GameProto.B_DoCatch.getDefaultInstance() : bDoCatch_;
        } else {
          return bDoCatchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public Builder setBDoCatch(com.kys.util.netty.proto.GameProto.B_DoCatch value) {
        if (bDoCatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDoCatch_ = value;
          onChanged();
        } else {
          bDoCatchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public Builder setBDoCatch(
          com.kys.util.netty.proto.GameProto.B_DoCatch.Builder builderForValue) {
        if (bDoCatchBuilder_ == null) {
          bDoCatch_ = builderForValue.build();
          onChanged();
        } else {
          bDoCatchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public Builder mergeBDoCatch(com.kys.util.netty.proto.GameProto.B_DoCatch value) {
        if (bDoCatchBuilder_ == null) {
          if (bDoCatch_ != null) {
            bDoCatch_ =
              com.kys.util.netty.proto.GameProto.B_DoCatch.newBuilder(bDoCatch_).mergeFrom(value).buildPartial();
          } else {
            bDoCatch_ = value;
          }
          onChanged();
        } else {
          bDoCatchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public Builder clearBDoCatch() {
        if (bDoCatchBuilder_ == null) {
          bDoCatch_ = null;
          onChanged();
        } else {
          bDoCatch_ = null;
          bDoCatchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_DoCatch.Builder getBDoCatchBuilder() {
        
        onChanged();
        return getBDoCatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder getBDoCatchOrBuilder() {
        if (bDoCatchBuilder_ != null) {
          return bDoCatchBuilder_.getMessageOrBuilder();
        } else {
          return bDoCatch_ == null ?
              com.kys.util.netty.proto.GameProto.B_DoCatch.getDefaultInstance() : bDoCatch_;
        }
      }
      /**
       * <pre>
       ** 广播通知玩家叫地主 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DoCatch b_DoCatch = 403;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_DoCatch, com.kys.util.netty.proto.GameProto.B_DoCatch.Builder, com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder> 
          getBDoCatchFieldBuilder() {
        if (bDoCatchBuilder_ == null) {
          bDoCatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_DoCatch, com.kys.util.netty.proto.GameProto.B_DoCatch.Builder, com.kys.util.netty.proto.GameProto.B_DoCatchOrBuilder>(
                  getBDoCatch(),
                  getParentForChildren(),
                  isClean());
          bDoCatch_ = null;
        }
        return bDoCatchBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_CatchResult bCatchResult_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_CatchResult, com.kys.util.netty.proto.GameProto.B_CatchResult.Builder, com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder> bCatchResultBuilder_;
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public boolean hasBCatchResult() {
        return bCatchResultBuilder_ != null || bCatchResult_ != null;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_CatchResult getBCatchResult() {
        if (bCatchResultBuilder_ == null) {
          return bCatchResult_ == null ? com.kys.util.netty.proto.GameProto.B_CatchResult.getDefaultInstance() : bCatchResult_;
        } else {
          return bCatchResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public Builder setBCatchResult(com.kys.util.netty.proto.GameProto.B_CatchResult value) {
        if (bCatchResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bCatchResult_ = value;
          onChanged();
        } else {
          bCatchResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public Builder setBCatchResult(
          com.kys.util.netty.proto.GameProto.B_CatchResult.Builder builderForValue) {
        if (bCatchResultBuilder_ == null) {
          bCatchResult_ = builderForValue.build();
          onChanged();
        } else {
          bCatchResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public Builder mergeBCatchResult(com.kys.util.netty.proto.GameProto.B_CatchResult value) {
        if (bCatchResultBuilder_ == null) {
          if (bCatchResult_ != null) {
            bCatchResult_ =
              com.kys.util.netty.proto.GameProto.B_CatchResult.newBuilder(bCatchResult_).mergeFrom(value).buildPartial();
          } else {
            bCatchResult_ = value;
          }
          onChanged();
        } else {
          bCatchResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public Builder clearBCatchResult() {
        if (bCatchResultBuilder_ == null) {
          bCatchResult_ = null;
          onChanged();
        } else {
          bCatchResult_ = null;
          bCatchResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_CatchResult.Builder getBCatchResultBuilder() {
        
        onChanged();
        return getBCatchResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder getBCatchResultOrBuilder() {
        if (bCatchResultBuilder_ != null) {
          return bCatchResultBuilder_.getMessageOrBuilder();
        } else {
          return bCatchResult_ == null ?
              com.kys.util.netty.proto.GameProto.B_CatchResult.getDefaultInstance() : bCatchResult_;
        }
      }
      /**
       * <pre>
       ** Server广播上个玩家叫地主结果 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_CatchResult b_CatchResult = 404;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_CatchResult, com.kys.util.netty.proto.GameProto.B_CatchResult.Builder, com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder> 
          getBCatchResultFieldBuilder() {
        if (bCatchResultBuilder_ == null) {
          bCatchResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_CatchResult, com.kys.util.netty.proto.GameProto.B_CatchResult.Builder, com.kys.util.netty.proto.GameProto.B_CatchResultOrBuilder>(
                  getBCatchResult(),
                  getParentForChildren(),
                  isClean());
          bCatchResult_ = null;
        }
        return bCatchResultBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_PlayCards bPlayCards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_PlayCards, com.kys.util.netty.proto.GameProto.B_PlayCards.Builder, com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder> bPlayCardsBuilder_;
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public boolean hasBPlayCards() {
        return bPlayCardsBuilder_ != null || bPlayCards_ != null;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_PlayCards getBPlayCards() {
        if (bPlayCardsBuilder_ == null) {
          return bPlayCards_ == null ? com.kys.util.netty.proto.GameProto.B_PlayCards.getDefaultInstance() : bPlayCards_;
        } else {
          return bPlayCardsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public Builder setBPlayCards(com.kys.util.netty.proto.GameProto.B_PlayCards value) {
        if (bPlayCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bPlayCards_ = value;
          onChanged();
        } else {
          bPlayCardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public Builder setBPlayCards(
          com.kys.util.netty.proto.GameProto.B_PlayCards.Builder builderForValue) {
        if (bPlayCardsBuilder_ == null) {
          bPlayCards_ = builderForValue.build();
          onChanged();
        } else {
          bPlayCardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public Builder mergeBPlayCards(com.kys.util.netty.proto.GameProto.B_PlayCards value) {
        if (bPlayCardsBuilder_ == null) {
          if (bPlayCards_ != null) {
            bPlayCards_ =
              com.kys.util.netty.proto.GameProto.B_PlayCards.newBuilder(bPlayCards_).mergeFrom(value).buildPartial();
          } else {
            bPlayCards_ = value;
          }
          onChanged();
        } else {
          bPlayCardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public Builder clearBPlayCards() {
        if (bPlayCardsBuilder_ == null) {
          bPlayCards_ = null;
          onChanged();
        } else {
          bPlayCards_ = null;
          bPlayCardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_PlayCards.Builder getBPlayCardsBuilder() {
        
        onChanged();
        return getBPlayCardsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder getBPlayCardsOrBuilder() {
        if (bPlayCardsBuilder_ != null) {
          return bPlayCardsBuilder_.getMessageOrBuilder();
        } else {
          return bPlayCards_ == null ?
              com.kys.util.netty.proto.GameProto.B_PlayCards.getDefaultInstance() : bPlayCards_;
        }
      }
      /**
       * <pre>
       ** Server上个玩家出牌信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_PlayCards b_PlayCards = 405;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_PlayCards, com.kys.util.netty.proto.GameProto.B_PlayCards.Builder, com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder> 
          getBPlayCardsFieldBuilder() {
        if (bPlayCardsBuilder_ == null) {
          bPlayCardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_PlayCards, com.kys.util.netty.proto.GameProto.B_PlayCards.Builder, com.kys.util.netty.proto.GameProto.B_PlayCardsOrBuilder>(
                  getBPlayCards(),
                  getParentForChildren(),
                  isClean());
          bPlayCards_ = null;
        }
        return bPlayCardsBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_SendDiZhuCard bSendDiZhuCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_SendDiZhuCard, com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder, com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder> bSendDiZhuCardBuilder_;
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public boolean hasBSendDiZhuCard() {
        return bSendDiZhuCardBuilder_ != null || bSendDiZhuCard_ != null;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_SendDiZhuCard getBSendDiZhuCard() {
        if (bSendDiZhuCardBuilder_ == null) {
          return bSendDiZhuCard_ == null ? com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.getDefaultInstance() : bSendDiZhuCard_;
        } else {
          return bSendDiZhuCardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public Builder setBSendDiZhuCard(com.kys.util.netty.proto.GameProto.B_SendDiZhuCard value) {
        if (bSendDiZhuCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bSendDiZhuCard_ = value;
          onChanged();
        } else {
          bSendDiZhuCardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public Builder setBSendDiZhuCard(
          com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder builderForValue) {
        if (bSendDiZhuCardBuilder_ == null) {
          bSendDiZhuCard_ = builderForValue.build();
          onChanged();
        } else {
          bSendDiZhuCardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public Builder mergeBSendDiZhuCard(com.kys.util.netty.proto.GameProto.B_SendDiZhuCard value) {
        if (bSendDiZhuCardBuilder_ == null) {
          if (bSendDiZhuCard_ != null) {
            bSendDiZhuCard_ =
              com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.newBuilder(bSendDiZhuCard_).mergeFrom(value).buildPartial();
          } else {
            bSendDiZhuCard_ = value;
          }
          onChanged();
        } else {
          bSendDiZhuCardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public Builder clearBSendDiZhuCard() {
        if (bSendDiZhuCardBuilder_ == null) {
          bSendDiZhuCard_ = null;
          onChanged();
        } else {
          bSendDiZhuCard_ = null;
          bSendDiZhuCardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder getBSendDiZhuCardBuilder() {
        
        onChanged();
        return getBSendDiZhuCardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder getBSendDiZhuCardOrBuilder() {
        if (bSendDiZhuCardBuilder_ != null) {
          return bSendDiZhuCardBuilder_.getMessageOrBuilder();
        } else {
          return bSendDiZhuCard_ == null ?
              com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.getDefaultInstance() : bSendDiZhuCard_;
        }
      }
      /**
       * <pre>
       ** Server广播发地主牌 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_SendDiZhuCard b_SendDiZhuCard = 407;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_SendDiZhuCard, com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder, com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder> 
          getBSendDiZhuCardFieldBuilder() {
        if (bSendDiZhuCardBuilder_ == null) {
          bSendDiZhuCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_SendDiZhuCard, com.kys.util.netty.proto.GameProto.B_SendDiZhuCard.Builder, com.kys.util.netty.proto.GameProto.B_SendDiZhuCardOrBuilder>(
                  getBSendDiZhuCard(),
                  getParentForChildren(),
                  isClean());
          bSendDiZhuCard_ = null;
        }
        return bSendDiZhuCardBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_NextPlayer bNextPlayer_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_NextPlayer, com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder, com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder> bNextPlayerBuilder_;
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public boolean hasBNextPlayer() {
        return bNextPlayerBuilder_ != null || bNextPlayer_ != null;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_NextPlayer getBNextPlayer() {
        if (bNextPlayerBuilder_ == null) {
          return bNextPlayer_ == null ? com.kys.util.netty.proto.GameProto.B_NextPlayer.getDefaultInstance() : bNextPlayer_;
        } else {
          return bNextPlayerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public Builder setBNextPlayer(com.kys.util.netty.proto.GameProto.B_NextPlayer value) {
        if (bNextPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bNextPlayer_ = value;
          onChanged();
        } else {
          bNextPlayerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public Builder setBNextPlayer(
          com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder builderForValue) {
        if (bNextPlayerBuilder_ == null) {
          bNextPlayer_ = builderForValue.build();
          onChanged();
        } else {
          bNextPlayerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public Builder mergeBNextPlayer(com.kys.util.netty.proto.GameProto.B_NextPlayer value) {
        if (bNextPlayerBuilder_ == null) {
          if (bNextPlayer_ != null) {
            bNextPlayer_ =
              com.kys.util.netty.proto.GameProto.B_NextPlayer.newBuilder(bNextPlayer_).mergeFrom(value).buildPartial();
          } else {
            bNextPlayer_ = value;
          }
          onChanged();
        } else {
          bNextPlayerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public Builder clearBNextPlayer() {
        if (bNextPlayerBuilder_ == null) {
          bNextPlayer_ = null;
          onChanged();
        } else {
          bNextPlayer_ = null;
          bNextPlayerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder getBNextPlayerBuilder() {
        
        onChanged();
        return getBNextPlayerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder getBNextPlayerOrBuilder() {
        if (bNextPlayerBuilder_ != null) {
          return bNextPlayerBuilder_.getMessageOrBuilder();
        } else {
          return bNextPlayer_ == null ?
              com.kys.util.netty.proto.GameProto.B_NextPlayer.getDefaultInstance() : bNextPlayer_;
        }
      }
      /**
       * <pre>
       ** Server广播出牌玩家 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_NextPlayer b_NextPlayer = 408;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_NextPlayer, com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder, com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder> 
          getBNextPlayerFieldBuilder() {
        if (bNextPlayerBuilder_ == null) {
          bNextPlayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_NextPlayer, com.kys.util.netty.proto.GameProto.B_NextPlayer.Builder, com.kys.util.netty.proto.GameProto.B_NextPlayerOrBuilder>(
                  getBNextPlayer(),
                  getParentForChildren(),
                  isClean());
          bNextPlayer_ = null;
        }
        return bNextPlayerBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_GameSettle bGameSettle_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_GameSettle, com.kys.util.netty.proto.GameProto.B_GameSettle.Builder, com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder> bGameSettleBuilder_;
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public boolean hasBGameSettle() {
        return bGameSettleBuilder_ != null || bGameSettle_ != null;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameSettle getBGameSettle() {
        if (bGameSettleBuilder_ == null) {
          return bGameSettle_ == null ? com.kys.util.netty.proto.GameProto.B_GameSettle.getDefaultInstance() : bGameSettle_;
        } else {
          return bGameSettleBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public Builder setBGameSettle(com.kys.util.netty.proto.GameProto.B_GameSettle value) {
        if (bGameSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bGameSettle_ = value;
          onChanged();
        } else {
          bGameSettleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public Builder setBGameSettle(
          com.kys.util.netty.proto.GameProto.B_GameSettle.Builder builderForValue) {
        if (bGameSettleBuilder_ == null) {
          bGameSettle_ = builderForValue.build();
          onChanged();
        } else {
          bGameSettleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public Builder mergeBGameSettle(com.kys.util.netty.proto.GameProto.B_GameSettle value) {
        if (bGameSettleBuilder_ == null) {
          if (bGameSettle_ != null) {
            bGameSettle_ =
              com.kys.util.netty.proto.GameProto.B_GameSettle.newBuilder(bGameSettle_).mergeFrom(value).buildPartial();
          } else {
            bGameSettle_ = value;
          }
          onChanged();
        } else {
          bGameSettleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public Builder clearBGameSettle() {
        if (bGameSettleBuilder_ == null) {
          bGameSettle_ = null;
          onChanged();
        } else {
          bGameSettle_ = null;
          bGameSettleBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameSettle.Builder getBGameSettleBuilder() {
        
        onChanged();
        return getBGameSettleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder getBGameSettleOrBuilder() {
        if (bGameSettleBuilder_ != null) {
          return bGameSettleBuilder_.getMessageOrBuilder();
        } else {
          return bGameSettle_ == null ?
              com.kys.util.netty.proto.GameProto.B_GameSettle.getDefaultInstance() : bGameSettle_;
        }
      }
      /**
       * <pre>
       ** 广播牌局结算信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_GameSettle b_GameSettle = 409;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_GameSettle, com.kys.util.netty.proto.GameProto.B_GameSettle.Builder, com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder> 
          getBGameSettleFieldBuilder() {
        if (bGameSettleBuilder_ == null) {
          bGameSettleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_GameSettle, com.kys.util.netty.proto.GameProto.B_GameSettle.Builder, com.kys.util.netty.proto.GameProto.B_GameSettleOrBuilder>(
                  getBGameSettle(),
                  getParentForChildren(),
                  isClean());
          bGameSettle_ = null;
        }
        return bGameSettleBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.B_RewardMessage bRewardMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_RewardMessage, com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder, com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder> bRewardMessageBuilder_;
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public boolean hasBRewardMessage() {
        return bRewardMessageBuilder_ != null || bRewardMessage_ != null;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RewardMessage getBRewardMessage() {
        if (bRewardMessageBuilder_ == null) {
          return bRewardMessage_ == null ? com.kys.util.netty.proto.HallProto.B_RewardMessage.getDefaultInstance() : bRewardMessage_;
        } else {
          return bRewardMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public Builder setBRewardMessage(com.kys.util.netty.proto.HallProto.B_RewardMessage value) {
        if (bRewardMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bRewardMessage_ = value;
          onChanged();
        } else {
          bRewardMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public Builder setBRewardMessage(
          com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder builderForValue) {
        if (bRewardMessageBuilder_ == null) {
          bRewardMessage_ = builderForValue.build();
          onChanged();
        } else {
          bRewardMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public Builder mergeBRewardMessage(com.kys.util.netty.proto.HallProto.B_RewardMessage value) {
        if (bRewardMessageBuilder_ == null) {
          if (bRewardMessage_ != null) {
            bRewardMessage_ =
              com.kys.util.netty.proto.HallProto.B_RewardMessage.newBuilder(bRewardMessage_).mergeFrom(value).buildPartial();
          } else {
            bRewardMessage_ = value;
          }
          onChanged();
        } else {
          bRewardMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public Builder clearBRewardMessage() {
        if (bRewardMessageBuilder_ == null) {
          bRewardMessage_ = null;
          onChanged();
        } else {
          bRewardMessage_ = null;
          bRewardMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder getBRewardMessageBuilder() {
        
        onChanged();
        return getBRewardMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder getBRewardMessageOrBuilder() {
        if (bRewardMessageBuilder_ != null) {
          return bRewardMessageBuilder_.getMessageOrBuilder();
        } else {
          return bRewardMessage_ == null ?
              com.kys.util.netty.proto.HallProto.B_RewardMessage.getDefaultInstance() : bRewardMessage_;
        }
      }
      /**
       * <pre>
       ** 推送奖励公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RewardMessage b_RewardMessage = 410;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_RewardMessage, com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder, com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder> 
          getBRewardMessageFieldBuilder() {
        if (bRewardMessageBuilder_ == null) {
          bRewardMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.B_RewardMessage, com.kys.util.netty.proto.HallProto.B_RewardMessage.Builder, com.kys.util.netty.proto.HallProto.B_RewardMessageOrBuilder>(
                  getBRewardMessage(),
                  getParentForChildren(),
                  isClean());
          bRewardMessage_ = null;
        }
        return bRewardMessageBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_AutoPlay bAutoPlay_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_AutoPlay, com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder, com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder> bAutoPlayBuilder_;
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public boolean hasBAutoPlay() {
        return bAutoPlayBuilder_ != null || bAutoPlay_ != null;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_AutoPlay getBAutoPlay() {
        if (bAutoPlayBuilder_ == null) {
          return bAutoPlay_ == null ? com.kys.util.netty.proto.GameProto.B_AutoPlay.getDefaultInstance() : bAutoPlay_;
        } else {
          return bAutoPlayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public Builder setBAutoPlay(com.kys.util.netty.proto.GameProto.B_AutoPlay value) {
        if (bAutoPlayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bAutoPlay_ = value;
          onChanged();
        } else {
          bAutoPlayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public Builder setBAutoPlay(
          com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder builderForValue) {
        if (bAutoPlayBuilder_ == null) {
          bAutoPlay_ = builderForValue.build();
          onChanged();
        } else {
          bAutoPlayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public Builder mergeBAutoPlay(com.kys.util.netty.proto.GameProto.B_AutoPlay value) {
        if (bAutoPlayBuilder_ == null) {
          if (bAutoPlay_ != null) {
            bAutoPlay_ =
              com.kys.util.netty.proto.GameProto.B_AutoPlay.newBuilder(bAutoPlay_).mergeFrom(value).buildPartial();
          } else {
            bAutoPlay_ = value;
          }
          onChanged();
        } else {
          bAutoPlayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public Builder clearBAutoPlay() {
        if (bAutoPlayBuilder_ == null) {
          bAutoPlay_ = null;
          onChanged();
        } else {
          bAutoPlay_ = null;
          bAutoPlayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder getBAutoPlayBuilder() {
        
        onChanged();
        return getBAutoPlayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder getBAutoPlayOrBuilder() {
        if (bAutoPlayBuilder_ != null) {
          return bAutoPlayBuilder_.getMessageOrBuilder();
        } else {
          return bAutoPlay_ == null ?
              com.kys.util.netty.proto.GameProto.B_AutoPlay.getDefaultInstance() : bAutoPlay_;
        }
      }
      /**
       * <pre>
       ** 广播玩家托管消息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AutoPlay b_AutoPlay = 411;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_AutoPlay, com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder, com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder> 
          getBAutoPlayFieldBuilder() {
        if (bAutoPlayBuilder_ == null) {
          bAutoPlayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_AutoPlay, com.kys.util.netty.proto.GameProto.B_AutoPlay.Builder, com.kys.util.netty.proto.GameProto.B_AutoPlayOrBuilder>(
                  getBAutoPlay(),
                  getParentForChildren(),
                  isClean());
          bAutoPlay_ = null;
        }
        return bAutoPlayBuilder_;
      }

      private com.kys.util.netty.proto.GameProto.B_RoomIdUrl bRoomIdUrl_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_RoomIdUrl, com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder, com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder> bRoomIdUrlBuilder_;
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public boolean hasBRoomIdUrl() {
        return bRoomIdUrlBuilder_ != null || bRoomIdUrl_ != null;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_RoomIdUrl getBRoomIdUrl() {
        if (bRoomIdUrlBuilder_ == null) {
          return bRoomIdUrl_ == null ? com.kys.util.netty.proto.GameProto.B_RoomIdUrl.getDefaultInstance() : bRoomIdUrl_;
        } else {
          return bRoomIdUrlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public Builder setBRoomIdUrl(com.kys.util.netty.proto.GameProto.B_RoomIdUrl value) {
        if (bRoomIdUrlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bRoomIdUrl_ = value;
          onChanged();
        } else {
          bRoomIdUrlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public Builder setBRoomIdUrl(
          com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder builderForValue) {
        if (bRoomIdUrlBuilder_ == null) {
          bRoomIdUrl_ = builderForValue.build();
          onChanged();
        } else {
          bRoomIdUrlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public Builder mergeBRoomIdUrl(com.kys.util.netty.proto.GameProto.B_RoomIdUrl value) {
        if (bRoomIdUrlBuilder_ == null) {
          if (bRoomIdUrl_ != null) {
            bRoomIdUrl_ =
              com.kys.util.netty.proto.GameProto.B_RoomIdUrl.newBuilder(bRoomIdUrl_).mergeFrom(value).buildPartial();
          } else {
            bRoomIdUrl_ = value;
          }
          onChanged();
        } else {
          bRoomIdUrlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public Builder clearBRoomIdUrl() {
        if (bRoomIdUrlBuilder_ == null) {
          bRoomIdUrl_ = null;
          onChanged();
        } else {
          bRoomIdUrl_ = null;
          bRoomIdUrlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder getBRoomIdUrlBuilder() {
        
        onChanged();
        return getBRoomIdUrlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      public com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder getBRoomIdUrlOrBuilder() {
        if (bRoomIdUrlBuilder_ != null) {
          return bRoomIdUrlBuilder_.getMessageOrBuilder();
        } else {
          return bRoomIdUrl_ == null ?
              com.kys.util.netty.proto.GameProto.B_RoomIdUrl.getDefaultInstance() : bRoomIdUrl_;
        }
      }
      /**
       * <pre>
       ** 推送玩家需要加入的房间url和房间号 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RoomIdUrl b_RoomIdUrl = 412;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.GameProto.B_RoomIdUrl, com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder, com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder> 
          getBRoomIdUrlFieldBuilder() {
        if (bRoomIdUrlBuilder_ == null) {
          bRoomIdUrlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.GameProto.B_RoomIdUrl, com.kys.util.netty.proto.GameProto.B_RoomIdUrl.Builder, com.kys.util.netty.proto.GameProto.B_RoomIdUrlOrBuilder>(
                  getBRoomIdUrl(),
                  getParentForChildren(),
                  isClean());
          bRoomIdUrl_ = null;
        }
        return bRoomIdUrlBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.B_AwardDialog bAwardDialog_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_AwardDialog, com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder, com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder> bAwardDialogBuilder_;
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public boolean hasBAwardDialog() {
        return bAwardDialogBuilder_ != null || bAwardDialog_ != null;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_AwardDialog getBAwardDialog() {
        if (bAwardDialogBuilder_ == null) {
          return bAwardDialog_ == null ? com.kys.util.netty.proto.HallProto.B_AwardDialog.getDefaultInstance() : bAwardDialog_;
        } else {
          return bAwardDialogBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public Builder setBAwardDialog(com.kys.util.netty.proto.HallProto.B_AwardDialog value) {
        if (bAwardDialogBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bAwardDialog_ = value;
          onChanged();
        } else {
          bAwardDialogBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public Builder setBAwardDialog(
          com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder builderForValue) {
        if (bAwardDialogBuilder_ == null) {
          bAwardDialog_ = builderForValue.build();
          onChanged();
        } else {
          bAwardDialogBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public Builder mergeBAwardDialog(com.kys.util.netty.proto.HallProto.B_AwardDialog value) {
        if (bAwardDialogBuilder_ == null) {
          if (bAwardDialog_ != null) {
            bAwardDialog_ =
              com.kys.util.netty.proto.HallProto.B_AwardDialog.newBuilder(bAwardDialog_).mergeFrom(value).buildPartial();
          } else {
            bAwardDialog_ = value;
          }
          onChanged();
        } else {
          bAwardDialogBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public Builder clearBAwardDialog() {
        if (bAwardDialogBuilder_ == null) {
          bAwardDialog_ = null;
          onChanged();
        } else {
          bAwardDialog_ = null;
          bAwardDialogBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder getBAwardDialogBuilder() {
        
        onChanged();
        return getBAwardDialogFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder getBAwardDialogOrBuilder() {
        if (bAwardDialogBuilder_ != null) {
          return bAwardDialogBuilder_.getMessageOrBuilder();
        } else {
          return bAwardDialog_ == null ?
              com.kys.util.netty.proto.HallProto.B_AwardDialog.getDefaultInstance() : bAwardDialog_;
        }
      }
      /**
       * <pre>
       ** 奖励弹窗 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_AwardDialog b_AwardDialog = 413;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_AwardDialog, com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder, com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder> 
          getBAwardDialogFieldBuilder() {
        if (bAwardDialogBuilder_ == null) {
          bAwardDialogBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.B_AwardDialog, com.kys.util.netty.proto.HallProto.B_AwardDialog.Builder, com.kys.util.netty.proto.HallProto.B_AwardDialogOrBuilder>(
                  getBAwardDialog(),
                  getParentForChildren(),
                  isClean());
          bAwardDialog_ = null;
        }
        return bAwardDialogBuilder_;
      }

      private com.kys.util.netty.proto.StoreProto.B_BuySuccess bBuySuccess_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.B_BuySuccess, com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder, com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder> bBuySuccessBuilder_;
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public boolean hasBBuySuccess() {
        return bBuySuccessBuilder_ != null || bBuySuccess_ != null;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public com.kys.util.netty.proto.StoreProto.B_BuySuccess getBBuySuccess() {
        if (bBuySuccessBuilder_ == null) {
          return bBuySuccess_ == null ? com.kys.util.netty.proto.StoreProto.B_BuySuccess.getDefaultInstance() : bBuySuccess_;
        } else {
          return bBuySuccessBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public Builder setBBuySuccess(com.kys.util.netty.proto.StoreProto.B_BuySuccess value) {
        if (bBuySuccessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bBuySuccess_ = value;
          onChanged();
        } else {
          bBuySuccessBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public Builder setBBuySuccess(
          com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder builderForValue) {
        if (bBuySuccessBuilder_ == null) {
          bBuySuccess_ = builderForValue.build();
          onChanged();
        } else {
          bBuySuccessBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public Builder mergeBBuySuccess(com.kys.util.netty.proto.StoreProto.B_BuySuccess value) {
        if (bBuySuccessBuilder_ == null) {
          if (bBuySuccess_ != null) {
            bBuySuccess_ =
              com.kys.util.netty.proto.StoreProto.B_BuySuccess.newBuilder(bBuySuccess_).mergeFrom(value).buildPartial();
          } else {
            bBuySuccess_ = value;
          }
          onChanged();
        } else {
          bBuySuccessBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public Builder clearBBuySuccess() {
        if (bBuySuccessBuilder_ == null) {
          bBuySuccess_ = null;
          onChanged();
        } else {
          bBuySuccess_ = null;
          bBuySuccessBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder getBBuySuccessBuilder() {
        
        onChanged();
        return getBBuySuccessFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      public com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder getBBuySuccessOrBuilder() {
        if (bBuySuccessBuilder_ != null) {
          return bBuySuccessBuilder_.getMessageOrBuilder();
        } else {
          return bBuySuccess_ == null ?
              com.kys.util.netty.proto.StoreProto.B_BuySuccess.getDefaultInstance() : bBuySuccess_;
        }
      }
      /**
       * <pre>
       ** 微信回调购买成功 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_BuySuccess b_BuySuccess = 414;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.StoreProto.B_BuySuccess, com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder, com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder> 
          getBBuySuccessFieldBuilder() {
        if (bBuySuccessBuilder_ == null) {
          bBuySuccessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.StoreProto.B_BuySuccess, com.kys.util.netty.proto.StoreProto.B_BuySuccess.Builder, com.kys.util.netty.proto.StoreProto.B_BuySuccessOrBuilder>(
                  getBBuySuccess(),
                  getParentForChildren(),
                  isClean());
          bBuySuccess_ = null;
        }
        return bBuySuccessBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.B_RedDotPush bRedDotPush_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_RedDotPush, com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder, com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder> bRedDotPushBuilder_;
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public boolean hasBRedDotPush() {
        return bRedDotPushBuilder_ != null || bRedDotPush_ != null;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RedDotPush getBRedDotPush() {
        if (bRedDotPushBuilder_ == null) {
          return bRedDotPush_ == null ? com.kys.util.netty.proto.HallProto.B_RedDotPush.getDefaultInstance() : bRedDotPush_;
        } else {
          return bRedDotPushBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public Builder setBRedDotPush(com.kys.util.netty.proto.HallProto.B_RedDotPush value) {
        if (bRedDotPushBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bRedDotPush_ = value;
          onChanged();
        } else {
          bRedDotPushBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public Builder setBRedDotPush(
          com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder builderForValue) {
        if (bRedDotPushBuilder_ == null) {
          bRedDotPush_ = builderForValue.build();
          onChanged();
        } else {
          bRedDotPushBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public Builder mergeBRedDotPush(com.kys.util.netty.proto.HallProto.B_RedDotPush value) {
        if (bRedDotPushBuilder_ == null) {
          if (bRedDotPush_ != null) {
            bRedDotPush_ =
              com.kys.util.netty.proto.HallProto.B_RedDotPush.newBuilder(bRedDotPush_).mergeFrom(value).buildPartial();
          } else {
            bRedDotPush_ = value;
          }
          onChanged();
        } else {
          bRedDotPushBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public Builder clearBRedDotPush() {
        if (bRedDotPushBuilder_ == null) {
          bRedDotPush_ = null;
          onChanged();
        } else {
          bRedDotPush_ = null;
          bRedDotPushBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder getBRedDotPushBuilder() {
        
        onChanged();
        return getBRedDotPushFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder getBRedDotPushOrBuilder() {
        if (bRedDotPushBuilder_ != null) {
          return bRedDotPushBuilder_.getMessageOrBuilder();
        } else {
          return bRedDotPush_ == null ?
              com.kys.util.netty.proto.HallProto.B_RedDotPush.getDefaultInstance() : bRedDotPush_;
        }
      }
      /**
       * <pre>
       ** 红点推送 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_RedDotPush b_RedDotPush = 415;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_RedDotPush, com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder, com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder> 
          getBRedDotPushFieldBuilder() {
        if (bRedDotPushBuilder_ == null) {
          bRedDotPushBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.B_RedDotPush, com.kys.util.netty.proto.HallProto.B_RedDotPush.Builder, com.kys.util.netty.proto.HallProto.B_RedDotPushOrBuilder>(
                  getBRedDotPush(),
                  getParentForChildren(),
                  isClean());
          bRedDotPush_ = null;
        }
        return bRedDotPushBuilder_;
      }

      private com.kys.util.netty.proto.HallProto.B_ForceAnnounce bForceAnnounce_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_ForceAnnounce, com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder, com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder> bForceAnnounceBuilder_;
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public boolean hasBForceAnnounce() {
        return bForceAnnounceBuilder_ != null || bForceAnnounce_ != null;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_ForceAnnounce getBForceAnnounce() {
        if (bForceAnnounceBuilder_ == null) {
          return bForceAnnounce_ == null ? com.kys.util.netty.proto.HallProto.B_ForceAnnounce.getDefaultInstance() : bForceAnnounce_;
        } else {
          return bForceAnnounceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public Builder setBForceAnnounce(com.kys.util.netty.proto.HallProto.B_ForceAnnounce value) {
        if (bForceAnnounceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bForceAnnounce_ = value;
          onChanged();
        } else {
          bForceAnnounceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public Builder setBForceAnnounce(
          com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder builderForValue) {
        if (bForceAnnounceBuilder_ == null) {
          bForceAnnounce_ = builderForValue.build();
          onChanged();
        } else {
          bForceAnnounceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public Builder mergeBForceAnnounce(com.kys.util.netty.proto.HallProto.B_ForceAnnounce value) {
        if (bForceAnnounceBuilder_ == null) {
          if (bForceAnnounce_ != null) {
            bForceAnnounce_ =
              com.kys.util.netty.proto.HallProto.B_ForceAnnounce.newBuilder(bForceAnnounce_).mergeFrom(value).buildPartial();
          } else {
            bForceAnnounce_ = value;
          }
          onChanged();
        } else {
          bForceAnnounceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public Builder clearBForceAnnounce() {
        if (bForceAnnounceBuilder_ == null) {
          bForceAnnounce_ = null;
          onChanged();
        } else {
          bForceAnnounce_ = null;
          bForceAnnounceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder getBForceAnnounceBuilder() {
        
        onChanged();
        return getBForceAnnounceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      public com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder getBForceAnnounceOrBuilder() {
        if (bForceAnnounceBuilder_ != null) {
          return bForceAnnounceBuilder_.getMessageOrBuilder();
        } else {
          return bForceAnnounce_ == null ?
              com.kys.util.netty.proto.HallProto.B_ForceAnnounce.getDefaultInstance() : bForceAnnounce_;
        }
      }
      /**
       * <pre>
       ** 推送强制公告 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_ForceAnnounce b_ForceAnnounce = 416;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.HallProto.B_ForceAnnounce, com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder, com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder> 
          getBForceAnnounceFieldBuilder() {
        if (bForceAnnounceBuilder_ == null) {
          bForceAnnounceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.HallProto.B_ForceAnnounce, com.kys.util.netty.proto.HallProto.B_ForceAnnounce.Builder, com.kys.util.netty.proto.HallProto.B_ForceAnnounceOrBuilder>(
                  getBForceAnnounce(),
                  getParentForChildren(),
                  isClean());
          bForceAnnounce_ = null;
        }
        return bForceAnnounceBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.B_DGameMessage bDGameMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DGameMessage, com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder, com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder> bDGameMessageBuilder_;
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public boolean hasBDGameMessage() {
        return bDGameMessageBuilder_ != null || bDGameMessage_ != null;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGameMessage getBDGameMessage() {
        if (bDGameMessageBuilder_ == null) {
          return bDGameMessage_ == null ? com.kys.util.netty.proto.SnatchProto.B_DGameMessage.getDefaultInstance() : bDGameMessage_;
        } else {
          return bDGameMessageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public Builder setBDGameMessage(com.kys.util.netty.proto.SnatchProto.B_DGameMessage value) {
        if (bDGameMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDGameMessage_ = value;
          onChanged();
        } else {
          bDGameMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public Builder setBDGameMessage(
          com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder builderForValue) {
        if (bDGameMessageBuilder_ == null) {
          bDGameMessage_ = builderForValue.build();
          onChanged();
        } else {
          bDGameMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public Builder mergeBDGameMessage(com.kys.util.netty.proto.SnatchProto.B_DGameMessage value) {
        if (bDGameMessageBuilder_ == null) {
          if (bDGameMessage_ != null) {
            bDGameMessage_ =
              com.kys.util.netty.proto.SnatchProto.B_DGameMessage.newBuilder(bDGameMessage_).mergeFrom(value).buildPartial();
          } else {
            bDGameMessage_ = value;
          }
          onChanged();
        } else {
          bDGameMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public Builder clearBDGameMessage() {
        if (bDGameMessageBuilder_ == null) {
          bDGameMessage_ = null;
          onChanged();
        } else {
          bDGameMessage_ = null;
          bDGameMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder getBDGameMessageBuilder() {
        
        onChanged();
        return getBDGameMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder getBDGameMessageOrBuilder() {
        if (bDGameMessageBuilder_ != null) {
          return bDGameMessageBuilder_.getMessageOrBuilder();
        } else {
          return bDGameMessage_ == null ?
              com.kys.util.netty.proto.SnatchProto.B_DGameMessage.getDefaultInstance() : bDGameMessage_;
        }
      }
      /**
       * <pre>
       ** 钻石宝箱跑马灯 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGameMessage b_DGameMessage = 417;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DGameMessage, com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder, com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder> 
          getBDGameMessageFieldBuilder() {
        if (bDGameMessageBuilder_ == null) {
          bDGameMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.B_DGameMessage, com.kys.util.netty.proto.SnatchProto.B_DGameMessage.Builder, com.kys.util.netty.proto.SnatchProto.B_DGameMessageOrBuilder>(
                  getBDGameMessage(),
                  getParentForChildren(),
                  isClean());
          bDGameMessage_ = null;
        }
        return bDGameMessageBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.B_DGOver bDGOver_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DGOver, com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder> bDGOverBuilder_;
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public boolean hasBDGOver() {
        return bDGOverBuilder_ != null || bDGOver_ != null;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGOver getBDGOver() {
        if (bDGOverBuilder_ == null) {
          return bDGOver_ == null ? com.kys.util.netty.proto.SnatchProto.B_DGOver.getDefaultInstance() : bDGOver_;
        } else {
          return bDGOverBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public Builder setBDGOver(com.kys.util.netty.proto.SnatchProto.B_DGOver value) {
        if (bDGOverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDGOver_ = value;
          onChanged();
        } else {
          bDGOverBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public Builder setBDGOver(
          com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder builderForValue) {
        if (bDGOverBuilder_ == null) {
          bDGOver_ = builderForValue.build();
          onChanged();
        } else {
          bDGOverBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public Builder mergeBDGOver(com.kys.util.netty.proto.SnatchProto.B_DGOver value) {
        if (bDGOverBuilder_ == null) {
          if (bDGOver_ != null) {
            bDGOver_ =
              com.kys.util.netty.proto.SnatchProto.B_DGOver.newBuilder(bDGOver_).mergeFrom(value).buildPartial();
          } else {
            bDGOver_ = value;
          }
          onChanged();
        } else {
          bDGOverBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public Builder clearBDGOver() {
        if (bDGOverBuilder_ == null) {
          bDGOver_ = null;
          onChanged();
        } else {
          bDGOver_ = null;
          bDGOverBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder getBDGOverBuilder() {
        
        onChanged();
        return getBDGOverFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder getBDGOverOrBuilder() {
        if (bDGOverBuilder_ != null) {
          return bDGOverBuilder_.getMessageOrBuilder();
        } else {
          return bDGOver_ == null ?
              com.kys.util.netty.proto.SnatchProto.B_DGOver.getDefaultInstance() : bDGOver_;
        }
      }
      /**
       * <pre>
       ** 钻石宝箱活动已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DGOver b_DGOver = 418;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DGOver, com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder> 
          getBDGOverFieldBuilder() {
        if (bDGOverBuilder_ == null) {
          bDGOverBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.B_DGOver, com.kys.util.netty.proto.SnatchProto.B_DGOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DGOverOrBuilder>(
                  getBDGOver(),
                  getParentForChildren(),
                  isClean());
          bDGOver_ = null;
        }
        return bDGOverBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.B_DDOver bDDOver_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DDOver, com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder> bDDOverBuilder_;
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public boolean hasBDDOver() {
        return bDDOverBuilder_ != null || bDDOver_ != null;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDOver getBDDOver() {
        if (bDDOverBuilder_ == null) {
          return bDDOver_ == null ? com.kys.util.netty.proto.SnatchProto.B_DDOver.getDefaultInstance() : bDDOver_;
        } else {
          return bDDOverBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public Builder setBDDOver(com.kys.util.netty.proto.SnatchProto.B_DDOver value) {
        if (bDDOverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDDOver_ = value;
          onChanged();
        } else {
          bDDOverBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public Builder setBDDOver(
          com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder builderForValue) {
        if (bDDOverBuilder_ == null) {
          bDDOver_ = builderForValue.build();
          onChanged();
        } else {
          bDDOverBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public Builder mergeBDDOver(com.kys.util.netty.proto.SnatchProto.B_DDOver value) {
        if (bDDOverBuilder_ == null) {
          if (bDDOver_ != null) {
            bDDOver_ =
              com.kys.util.netty.proto.SnatchProto.B_DDOver.newBuilder(bDDOver_).mergeFrom(value).buildPartial();
          } else {
            bDDOver_ = value;
          }
          onChanged();
        } else {
          bDDOverBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public Builder clearBDDOver() {
        if (bDDOverBuilder_ == null) {
          bDDOver_ = null;
          onChanged();
        } else {
          bDDOver_ = null;
          bDDOverBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder getBDDOverBuilder() {
        
        onChanged();
        return getBDDOverFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder getBDDOverOrBuilder() {
        if (bDDOverBuilder_ != null) {
          return bDDOverBuilder_.getMessageOrBuilder();
        } else {
          return bDDOver_ == null ?
              com.kys.util.netty.proto.SnatchProto.B_DDOver.getDefaultInstance() : bDDOver_;
        }
      }
      /**
       * <pre>
       ** 钻石滚动抽奖已经结束 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDOver b_DDOver = 419;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DDOver, com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder> 
          getBDDOverFieldBuilder() {
        if (bDDOverBuilder_ == null) {
          bDDOverBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.B_DDOver, com.kys.util.netty.proto.SnatchProto.B_DDOver.Builder, com.kys.util.netty.proto.SnatchProto.B_DDOverOrBuilder>(
                  getBDDOver(),
                  getParentForChildren(),
                  isClean());
          bDDOver_ = null;
        }
        return bDDOverBuilder_;
      }

      private com.kys.util.netty.proto.SnatchProto.B_DDInfo bDDInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DDInfo, com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder, com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder> bDDInfoBuilder_;
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public boolean hasBDDInfo() {
        return bDDInfoBuilder_ != null || bDDInfo_ != null;
      }
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDInfo getBDDInfo() {
        if (bDDInfoBuilder_ == null) {
          return bDDInfo_ == null ? com.kys.util.netty.proto.SnatchProto.B_DDInfo.getDefaultInstance() : bDDInfo_;
        } else {
          return bDDInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public Builder setBDDInfo(com.kys.util.netty.proto.SnatchProto.B_DDInfo value) {
        if (bDDInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bDDInfo_ = value;
          onChanged();
        } else {
          bDDInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public Builder setBDDInfo(
          com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder builderForValue) {
        if (bDDInfoBuilder_ == null) {
          bDDInfo_ = builderForValue.build();
          onChanged();
        } else {
          bDDInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public Builder mergeBDDInfo(com.kys.util.netty.proto.SnatchProto.B_DDInfo value) {
        if (bDDInfoBuilder_ == null) {
          if (bDDInfo_ != null) {
            bDDInfo_ =
              com.kys.util.netty.proto.SnatchProto.B_DDInfo.newBuilder(bDDInfo_).mergeFrom(value).buildPartial();
          } else {
            bDDInfo_ = value;
          }
          onChanged();
        } else {
          bDDInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public Builder clearBDDInfo() {
        if (bDDInfoBuilder_ == null) {
          bDDInfo_ = null;
          onChanged();
        } else {
          bDDInfo_ = null;
          bDDInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder getBDDInfoBuilder() {
        
        onChanged();
        return getBDDInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      public com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder getBDDInfoOrBuilder() {
        if (bDDInfoBuilder_ != null) {
          return bDDInfoBuilder_.getMessageOrBuilder();
        } else {
          return bDDInfo_ == null ?
              com.kys.util.netty.proto.SnatchProto.B_DDInfo.getDefaultInstance() : bDDInfo_;
        }
      }
      /**
       * <pre>
       ** 广播中奖信息 
       * </pre>
       *
       * <code>.com.kys.util.netty.proto.B_DDInfo b_DDInfo = 420;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.kys.util.netty.proto.SnatchProto.B_DDInfo, com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder, com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder> 
          getBDDInfoFieldBuilder() {
        if (bDDInfoBuilder_ == null) {
          bDDInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.kys.util.netty.proto.SnatchProto.B_DDInfo, com.kys.util.netty.proto.SnatchProto.B_DDInfo.Builder, com.kys.util.netty.proto.SnatchProto.B_DDInfoOrBuilder>(
                  getBDDInfo(),
                  getParentForChildren(),
                  isClean());
          bDDInfo_ = null;
        }
        return bDDInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.kys.util.netty.proto.ServerResponse)
    }

    // @@protoc_insertion_point(class_scope:com.kys.util.netty.proto.ServerResponse)
    private static final com.kys.util.netty.proto.ProtoMsg.ServerResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.kys.util.netty.proto.ProtoMsg.ServerResponse();
    }

    public static com.kys.util.netty.proto.ProtoMsg.ServerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerResponse>
        PARSER = new com.google.protobuf.AbstractParser<ServerResponse>() {
      public ServerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ServerResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ServerResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerResponse> getParserForType() {
      return PARSER;
    }

    public com.kys.util.netty.proto.ProtoMsg.ServerResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kys_util_netty_proto_ClientRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_kys_util_netty_proto_ClientRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kys_util_netty_proto_ServerResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_kys_util_netty_proto_ServerResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016protoMsg.proto\022\030com.kys.util.netty.pro" +
      "to\032\020loginProto.proto\032\017userProto.proto\032\017g" +
      "ameProto.proto\032\020storeProto.proto\032\017hallPr" +
      "oto.proto\032\021snatchProto.proto\032\017propProto." +
      "proto\032\017signProto.proto\032\016vipProto.proto\"\221" +
      "6\n\rClientRequest\022\016\n\006userId\030\001 \001(\005\022\020\n\010meth" +
      "odId\030\002 \001(\005\022:\n\013clientLogin\030\003 \001(\0132%.com.ky" +
      "s.util.netty.proto.ClientLogin\022E\n\020client" +
      "PlayerInfo\030\004 \001(\0132+.com.kys.util.netty.pr" +
      "oto.ClientGetUserInfo\022V\n\031clientReturnHal",
      "lHeartBeat\030\005 \001(\01323.com.kys.util.netty.pr" +
      "oto.ClientReturnHallHeartBeat\022V\n\031clientR" +
      "eturnGameHeartBeat\030\006 \001(\01323.com.kys.util." +
      "netty.proto.ClientReturnGameHeartBeat\022F\n" +
      "\021clientGetUserInfo\030\007 \001(\0132+.com.kys.util." +
      "netty.proto.ClientGetUserInfo\022@\n\016clientN" +
      "ewLogin\030\010 \001(\0132(.com.kys.util.netty.proto" +
      ".ClientNewLogin\022B\n\017clientQuickJoin\030d \001(\013" +
      "2).com.kys.util.netty.proto.ClientQuickJ" +
      "oin\022B\n\017clientEnterRoom\030e \001(\0132).com.kys.u",
      "til.netty.proto.ClientEnterRoom\022>\n\rclien" +
      "tDoCatch\030f \001(\0132\'.com.kys.util.netty.prot" +
      "o.ClientDoCatch\022B\n\017clientPlayCards\030g \001(\013" +
      "2).com.kys.util.netty.proto.ClientPlayCa" +
      "rds\022F\n\021clientRecoverGame\030h \001(\0132+.com.kys" +
      ".util.netty.proto.ClientRecoverGame\022@\n\016c" +
      "lientAutoPlay\030i \001(\0132(.com.kys.util.netty" +
      ".proto.ClientAutoPlay\022B\n\017clientLeaveRoom" +
      "\030j \001(\0132).com.kys.util.netty.proto.Client" +
      "LeaveRoom\022D\n\020clientCancleJoin\030k \001(\0132*.co",
      "m.kys.util.netty.proto.ClientCancleJoin\022" +
      "D\n\020clientQueryIndex\030l \001(\0132*.com.kys.util" +
      ".netty.proto.ClientQueryIndex\022N\n\025clientR" +
      "etryReturnGame\030m \001(\0132/.com.kys.util.nett" +
      "y.proto.ClientRetryReturnGame\022G\n\021clientG" +
      "etRankList\030\310\001 \001(\0132+.com.kys.util.netty.p" +
      "roto.ClientGetRankList\022W\n\031clientGetSignu" +
      "pRewardList\030\311\001 \001(\01323.com.kys.util.netty." +
      "proto.ClientGetSignupRewardList\022G\n\021clien" +
      "tGetHallInfo\030\312\001 \001(\0132+.com.kys.util.netty",
      ".proto.ClientGetHallInfo\022=\n\014clientSignup" +
      "\030\313\001 \001(\0132&.com.kys.util.netty.proto.Clien" +
      "tSignup\022E\n\020clientDrawWinCup\030\314\001 \001(\0132*.com" +
      ".kys.util.netty.proto.ClientDrawWinCup\022K" +
      "\n\023clientGetRoomConfig\030\315\001 \001(\0132-.com.kys.u" +
      "til.netty.proto.ClientGetRoomConfig\022K\n\023c" +
      "lientRewardMessage\030\316\001 \001(\0132-.com.kys.util" +
      ".netty.proto.ClientRewardMessage\022S\n\027clie" +
      "ntGetRoomCardConfig\030\317\001 \001(\01321.com.kys.uti" +
      "l.netty.proto.ClientGetRoomCardConfig\022E\n",
      "\020clientCreateRoom\030\320\001 \001(\0132*.com.kys.util." +
      "netty.proto.ClientCreateRoom\022W\n\031clientGe" +
      "tMonthCardDiamond\030\321\001 \001(\01323.com.kys.util." +
      "netty.proto.ClientGetMonthCardDiamond\022O\n" +
      "\025clientGetLotteryCount\030\322\001 \001(\0132/.com.kys." +
      "util.netty.proto.ClientGetLotteryCount\022G" +
      "\n\021clientGetRoomInfo\030\323\001 \001(\0132+.com.kys.uti" +
      "l.netty.proto.ClientGetRoomInfo\022G\n\021clien" +
      "tSendTelCode\030\324\001 \001(\0132+.com.kys.util.netty" +
      ".proto.ClientSendTelCode\022K\n\023clientVerify",
      "TelCode\030\325\001 \001(\0132-.com.kys.util.netty.prot" +
      "o.ClientVerifyTelCode\022M\n\024clientQueryShar" +
      "eList\030\326\001 \001(\0132..com.kys.util.netty.proto." +
      "ClientQueryShareList\022Q\n\026clientQueryShare" +
      "Detail\030\327\001 \001(\01320.com.kys.util.netty.proto" +
      ".ClientQueryShareDetail\022I\n\022clientGetTask" +
      "Award\030\330\001 \001(\0132,.com.kys.util.netty.proto." +
      "ClientGetTaskAward\022I\n\022clientSharePackage" +
      "\030\331\001 \001(\0132,.com.kys.util.netty.proto.Clien" +
      "tSharePackage\022I\n\022clientGetAwardList\030\332\001 \001",
      "(\0132,.com.kys.util.netty.proto.ClientGetA" +
      "wardList\022I\n\022clientPlayerLogout\030\333\001 \001(\0132,." +
      "com.kys.util.netty.proto.ClientPlayerLog" +
      "out\022I\n\022clientCheckConnect\030\334\001 \001(\0132,.com.k" +
      "ys.util.netty.proto.ClientCheckConnect\022C" +
      "\n\017clientGetPFList\030\335\001 \001(\0132).com.kys.util." +
      "netty.proto.ClientGetPFList\022A\n\016clientCho" +
      "osePF\030\336\001 \001(\0132(.com.kys.util.netty.proto." +
      "ClientChoosePF\022M\n\024clientGetHistoryRank\030\337" +
      "\001 \001(\0132..com.kys.util.netty.proto.ClientG",
      "etHistoryRank\022A\n\016clientH5Reward\030\340\001 \001(\0132(" +
      ".com.kys.util.netty.proto.ClientH5Reward" +
      "\022K\n\023clientNewDrawWinCup\030\341\001 \001(\0132-.com.kys" +
      ".util.netty.proto.ClientNewDrawWinCup\022M\n" +
      "\024clientGetNewHallInfo\030\342\001 \001(\0132..com.kys.u" +
      "til.netty.proto.ClientGetNewHallInfo\022G\n\021" +
      "clientGetSkinInfo\030\343\001 \001(\0132+.com.kys.util." +
      "netty.proto.ClientGetSkinInfo\022C\n\017clientE" +
      "quipSkin\030\344\001 \001(\0132).com.kys.util.netty.pro" +
      "to.ClientEquipSkin\022I\n\022clientGetStoreData",
      "\030\254\002 \001(\0132,.com.kys.util.netty.proto.Clien" +
      "tGetStoreData\022I\n\022clientConvertGoods\030\255\002 \001" +
      "(\0132,.com.kys.util.netty.proto.ClientConv" +
      "ertGoods\022Q\n\026clientWXPayResultQuery\030\256\002 \001(" +
      "\01320.com.kys.util.netty.proto.ClientWXPay" +
      "ResultQuery\022K\n\023clientBuyOrderGoods\030\257\002 \001(" +
      "\0132-.com.kys.util.netty.proto.ClientBuyOr" +
      "derGoods\022M\n\024clientGetFirstCharge\030\260\002 \001(\0132" +
      "..com.kys.util.netty.proto.ClientGetFirs" +
      "tCharge\022I\n\022clientGetDailyGift\030\261\002 \001(\0132,.c",
      "om.kys.util.netty.proto.ClientGetDailyGi" +
      "ft\022I\n\022clientGetMonthCard\030\262\002 \001(\0132,.com.ky" +
      "s.util.netty.proto.ClientGetMonthCard\022S\n" +
      "\027clientGetResurgenceGift\030\263\002 \001(\01321.com.ky" +
      "s.util.netty.proto.ClientGetResurgenceGi" +
      "ft\022G\n\021clientGetAnnounce\030\364\003 \001(\0132+.com.kys" +
      ".util.netty.proto.ClientGetAnnounce\022?\n\rc" +
      "lientGetMail\030\330\004 \001(\0132\'.com.kys.util.netty" +
      ".proto.ClientGetMail\022K\n\023clientGetMailRew" +
      "ard\030\331\004 \001(\0132-.com.kys.util.netty.proto.Cl",
      "ientGetMailReward\022?\n\rclientDelMail\030\332\004 \001(" +
      "\0132\'.com.kys.util.netty.proto.ClientDelMa" +
      "il\022A\n\016clientReadMail\030\333\004 \001(\0132(.com.kys.ut" +
      "il.netty.proto.ClientReadMail\022;\n\013clientD" +
      "el2R\030\334\004 \001(\0132%.com.kys.util.netty.proto.C" +
      "lientDel2R\022M\n\024clientQueryDailyTask\030\274\005 \001(" +
      "\0132..com.kys.util.netty.proto.ClientQuery" +
      "DailyTask\022S\n\027clientGetDailyTaskAward\030\275\005 " +
      "\001(\01321.com.kys.util.netty.proto.ClientGet" +
      "DailyTaskAward\022O\n\025clientGetNoviceReward\030",
      "\276\005 \001(\0132/.com.kys.util.netty.proto.Client" +
      "GetNoviceReward\022O\n\025clientQueryNoviceTask" +
      "\030\277\005 \001(\0132/.com.kys.util.netty.proto.Clien" +
      "tQueryNoviceTask\022E\n\020clientGetDTAward\030\300\005 " +
      "\001(\0132*.com.kys.util.netty.proto.ClientGet" +
      "DTAward\022M\n\024clientGetReceiveAddr\030\240\006 \001(\0132." +
      ".com.kys.util.netty.proto.ClientGetRecei" +
      "veAddr\022Q\n\026clientAlterReceiveAddr\030\241\006 \001(\0132" +
      "0.com.kys.util.netty.proto.ClientAlterRe" +
      "ceiveAddr\022E\n\020clientSnatchList\030\242\006 \001(\0132*.c",
      "om.kys.util.netty.proto.ClientSnatchList" +
      "\022Q\n\026clientSnatchItemDetail\030\243\006 \001(\01320.com." +
      "kys.util.netty.proto.ClientSnatchItemDet" +
      "ail\022C\n\017clientSnatchBet\030\244\006 \001(\0132).com.kys." +
      "util.netty.proto.ClientSnatchBet\022O\n\025clie" +
      "ntSnatchAwardList\030\245\006 \001(\0132/.com.kys.util." +
      "netty.proto.ClientSnatchAwardList\022O\n\025cli" +
      "entOwnSnatchRecord\030\246\006 \001(\0132/.com.kys.util" +
      ".netty.proto.ClientOwnSnatchRecord\022S\n\027cl" +
      "ientSnatchItemHistory\030\247\006 \001(\01321.com.kys.u",
      "til.netty.proto.ClientSnatchItemHistory\022" +
      "W\n\031clientSnatchHistoryDetail\030\250\006 \001(\01323.co" +
      "m.kys.util.netty.proto.ClientSnatchHisto" +
      "ryDetail\022M\n\024clientSnatchGetAward\030\251\006 \001(\0132" +
      "..com.kys.util.netty.proto.ClientSnatchG" +
      "etAward\022?\n\rclientEnterDG\030\204\007 \001(\0132\'.com.ky" +
      "s.util.netty.proto.ClientEnterDG\022C\n\017clie" +
      "ntDGLottery\030\205\007 \001(\0132).com.kys.util.netty." +
      "proto.ClientDGLottery\022I\n\022clientResetLott" +
      "ery\030\206\007 \001(\0132,.com.kys.util.netty.proto.Cl",
      "ientResetLottery\022=\n\014clientExitDG\030\207\007 \001(\0132" +
      "&.com.kys.util.netty.proto.ClientExitDG\022" +
      "=\n\014clientOpenDG\030\210\007 \001(\0132&.com.kys.util.ne" +
      "tty.proto.ClientOpenDG\022=\n\014clientOpenDD\030\211" +
      "\007 \001(\0132&.com.kys.util.netty.proto.ClientO" +
      "penDD\022C\n\017clientDDLottery\030\212\007 \001(\0132).com.ky" +
      "s.util.netty.proto.ClientDDLottery\022=\n\014cl" +
      "ientExitDD\030\213\007 \001(\0132&.com.kys.util.netty.p" +
      "roto.ClientExitDD\022C\n\017clientQueryProp\030\351\007 " +
      "\001(\0132).com.kys.util.netty.proto.ClientQue",
      "ryProp\022?\n\rclientUseProp\030\352\007 \001(\0132\'.com.kys" +
      ".util.netty.proto.ClientUseProp\022M\n\024clien" +
      "tQueryPropCount\030\353\007 \001(\0132..com.kys.util.ne" +
      "tty.proto.ClientQueryPropCount\022K\n\023client" +
      "MonthSignInfo\030\315\010 \001(\0132-.com.kys.util.nett" +
      "y.proto.ClientMonthSignInfo\022C\n\017clientMon" +
      "thSign\030\316\010 \001(\0132).com.kys.util.netty.proto" +
      ".ClientMonthSign\022K\n\023clientGetCritReward\030" +
      "\317\010 \001(\0132-.com.kys.util.netty.proto.Client" +
      "GetCritReward\022C\n\017clientLTLottery\030\320\010 \001(\0132",
      ").com.kys.util.netty.proto.ClientLTLotte" +
      "ry\022G\n\021clientGetTSReward\030\321\010 \001(\0132+.com.kys" +
      ".util.netty.proto.ClientGetTSReward\022G\n\021c" +
      "lientGetLuckInfo\030\322\010 \001(\0132+.com.kys.util.n" +
      "etty.proto.ClientGetLuckInfo\022E\n\020clientGe" +
      "tVipInfo\030\261\t \001(\0132*.com.kys.util.netty.pro" +
      "to.ClientGetVipInfo\022E\n\020clientGetVipWeek\030" +
      "\262\t \001(\0132*.com.kys.util.netty.proto.Client" +
      "GetVipWeek\"\211>\n\016ServerResponse\022\020\n\010methodI" +
      "d\030\001 \001(\005\0224\n\006result\030\002 \001(\0162$.com.kys.util.n",
      "etty.proto.ResultCode\022\016\n\006errStr\030c \001(\t\022:\n" +
      "\013serverLogin\030\003 \001(\0132%.com.kys.util.netty." +
      "proto.ServerLogin\022E\n\020serverPlayerInfo\030\004 " +
      "\001(\0132+.com.kys.util.netty.proto.ServerGet" +
      "UserInfo\022R\n\027serverSendHallHeartBeat\030\005 \001(" +
      "\01321.com.kys.util.netty.proto.ServerSendH" +
      "allHeartBeat\022R\n\027serverSendGameHeartBeat\030" +
      "\006 \001(\01321.com.kys.util.netty.proto.ServerS" +
      "endGameHeartBeat\022F\n\021serverGetUserInfo\030\007 " +
      "\001(\0132+.com.kys.util.netty.proto.ServerGet",
      "UserInfo\022B\n\017serverQuickJoin\030d \001(\0132).com." +
      "kys.util.netty.proto.ServerQuickJoin\022B\n\017" +
      "serverEnterRoom\030e \001(\0132).com.kys.util.net" +
      "ty.proto.ServerEnterRoom\022F\n\021serverRecove" +
      "rGame\030f \001(\0132+.com.kys.util.netty.proto.S" +
      "erverRecoverGame\022>\n\rserverDoCatch\030g \001(\0132" +
      "\'.com.kys.util.netty.proto.ServerDoCatch" +
      "\022B\n\017serverPlayCards\030h \001(\0132).com.kys.util" +
      ".netty.proto.ServerPlayCards\022@\n\016serverAu" +
      "toPlay\030i \001(\0132(.com.kys.util.netty.proto.",
      "ServerAutoPlay\022B\n\017serverLeaveRoom\030j \001(\0132" +
      ").com.kys.util.netty.proto.ServerLeaveRo" +
      "om\022D\n\020serverCancleJoin\030k \001(\0132*.com.kys.u" +
      "til.netty.proto.ServerCancleJoin\022D\n\020serv" +
      "erQueryIndex\030l \001(\0132*.com.kys.util.netty." +
      "proto.ServerQueryIndex\022N\n\025serverRetryRet" +
      "urnGame\030m \001(\0132/.com.kys.util.netty.proto" +
      ".ServerRetryReturnGame\022G\n\021serverGetRankL" +
      "ist\030\310\001 \001(\0132+.com.kys.util.netty.proto.Se" +
      "rverGetRankList\022W\n\031serverGetSignupReward",
      "List\030\311\001 \001(\01323.com.kys.util.netty.proto.S" +
      "erverGetSignupRewardList\022G\n\021serverGetHal" +
      "lInfo\030\312\001 \001(\0132+.com.kys.util.netty.proto." +
      "ServerGetHallInfo\022=\n\014serverSignup\030\313\001 \001(\013" +
      "2&.com.kys.util.netty.proto.ServerSignup" +
      "\022K\n\023serverRewardMessage\030\314\001 \001(\0132-.com.kys" +
      ".util.netty.proto.ServerRewardMessage\022E\n" +
      "\020serverDrawWinCup\030\315\001 \001(\0132*.com.kys.util." +
      "netty.proto.ServerDrawWinCup\022K\n\023serverGe" +
      "tRoomConfig\030\316\001 \001(\0132-.com.kys.util.netty.",
      "proto.ServerGetRoomConfig\022S\n\027serverGetRo" +
      "omCardConfig\030\317\001 \001(\01321.com.kys.util.netty" +
      ".proto.ServerGetRoomCardConfig\022E\n\020server" +
      "CreateRoom\030\320\001 \001(\0132*.com.kys.util.netty.p" +
      "roto.ServerCreateRoom\022W\n\031serverGetMonthC" +
      "ardDiamond\030\321\001 \001(\01323.com.kys.util.netty.p" +
      "roto.ServerGetMonthCardDiamond\022O\n\025server" +
      "GetLotteryCount\030\322\001 \001(\0132/.com.kys.util.ne" +
      "tty.proto.ServerGetLotteryCount\022G\n\021serve" +
      "rGetRoomInfo\030\323\001 \001(\0132+.com.kys.util.netty",
      ".proto.ServerGetRoomInfo\022G\n\021serverSendTe" +
      "lCode\030\324\001 \001(\0132+.com.kys.util.netty.proto." +
      "ServerSendTelCode\022K\n\023serverVerifyTelCode" +
      "\030\325\001 \001(\0132-.com.kys.util.netty.proto.Serve" +
      "rVerifyTelCode\022M\n\024serverQueryShareList\030\326" +
      "\001 \001(\0132..com.kys.util.netty.proto.ServerQ" +
      "ueryShareList\022Q\n\026serverQueryShareDetail\030" +
      "\327\001 \001(\01320.com.kys.util.netty.proto.Server" +
      "QueryShareDetail\022I\n\022serverGetTaskAward\030\330" +
      "\001 \001(\0132,.com.kys.util.netty.proto.ServerG",
      "etTaskAward\022I\n\022serverSharePackage\030\331\001 \001(\013" +
      "2,.com.kys.util.netty.proto.ServerShareP" +
      "ackage\022I\n\022serverGetAwardList\030\332\001 \001(\0132,.co" +
      "m.kys.util.netty.proto.ServerGetAwardLis" +
      "t\022I\n\022serverCheckConnect\030\333\001 \001(\0132,.com.kys" +
      ".util.netty.proto.ServerCheckConnect\022C\n\017" +
      "serverGetPFList\030\334\001 \001(\0132).com.kys.util.ne" +
      "tty.proto.ServerGetPFList\022A\n\016serverChoos" +
      "ePF\030\335\001 \001(\0132(.com.kys.util.netty.proto.Se" +
      "rverChoosePF\022M\n\024serverGetHistoryRank\030\336\001 ",
      "\001(\0132..com.kys.util.netty.proto.ServerGet" +
      "HistoryRank\022A\n\016serverH5Reward\030\337\001 \001(\0132(.c" +
      "om.kys.util.netty.proto.ServerH5Reward\022K" +
      "\n\023serverNewDrawWinCup\030\340\001 \001(\0132-.com.kys.u" +
      "til.netty.proto.ServerNewDrawWinCup\022M\n\024s" +
      "erverGetNewHallInfo\030\341\001 \001(\0132..com.kys.uti" +
      "l.netty.proto.ServerGetNewHallInfo\022G\n\021se" +
      "rverGetSkinInfo\030\342\001 \001(\0132+.com.kys.util.ne" +
      "tty.proto.ServerGetSkinInfo\022C\n\017serverEqu" +
      "ipSkin\030\343\001 \001(\0132).com.kys.util.netty.proto",
      ".ServerEquipSkin\022I\n\022serverGetStoreData\030\254" +
      "\002 \001(\0132,.com.kys.util.netty.proto.ServerG" +
      "etStoreData\022I\n\022serverConvertGoods\030\255\002 \001(\013" +
      "2,.com.kys.util.netty.proto.ServerConver" +
      "tGoods\022G\n\021serverWXPayResult\030\257\002 \001(\0132+.com" +
      ".kys.util.netty.proto.ServerWXPayResult\022" +
      "K\n\023serverBuyOrderGoods\030\260\002 \001(\0132-.com.kys." +
      "util.netty.proto.ServerBuyOrderGoods\022M\n\024" +
      "serverGetFirstCharge\030\261\002 \001(\0132..com.kys.ut" +
      "il.netty.proto.ServerGetFirstCharge\022I\n\022s",
      "erverGetDailyGift\030\262\002 \001(\0132,.com.kys.util." +
      "netty.proto.ServerGetDailyGift\022I\n\022server" +
      "GetMonthCard\030\263\002 \001(\0132,.com.kys.util.netty" +
      ".proto.ServerGetMonthCard\022S\n\027serverGetRe" +
      "surgenceGift\030\264\002 \001(\01321.com.kys.util.netty" +
      ".proto.ServerGetResurgenceGift\022G\n\021server" +
      "GetAnnounce\030\364\003 \001(\0132+.com.kys.util.netty." +
      "proto.ServerGetAnnounce\022?\n\rserverGetMail" +
      "\030\330\004 \001(\0132\'.com.kys.util.netty.proto.Serve" +
      "rGetMail\022K\n\023serverGetMailReward\030\331\004 \001(\0132-",
      ".com.kys.util.netty.proto.ServerGetMailR" +
      "eward\022?\n\rserverDelMail\030\332\004 \001(\0132\'.com.kys." +
      "util.netty.proto.ServerDelMail\022A\n\016server" +
      "ReadMail\030\333\004 \001(\0132(.com.kys.util.netty.pro" +
      "to.ServerReadMail\022;\n\013serverDel2R\030\334\004 \001(\0132" +
      "%.com.kys.util.netty.proto.ServerDel2R\022M" +
      "\n\024serverQueryDailyTask\030\274\005 \001(\0132..com.kys." +
      "util.netty.proto.ServerQueryDailyTask\022S\n" +
      "\027serverGetDailyTaskAward\030\275\005 \001(\01321.com.ky" +
      "s.util.netty.proto.ServerGetDailyTaskAwa",
      "rd\022O\n\025serverGetNoviceReward\030\276\005 \001(\0132/.com" +
      ".kys.util.netty.proto.ServerGetNoviceRew" +
      "ard\022O\n\025serverQueryNoviceTask\030\277\005 \001(\0132/.co" +
      "m.kys.util.netty.proto.ServerQueryNovice" +
      "Task\022E\n\020serverGetDTAward\030\300\005 \001(\0132*.com.ky" +
      "s.util.netty.proto.ServerGetDTAward\022M\n\024s" +
      "erverGetReceiveAddr\030\240\006 \001(\0132..com.kys.uti" +
      "l.netty.proto.ServerGetReceiveAddr\022Q\n\026se" +
      "rverAlterReceiveAddr\030\241\006 \001(\01320.com.kys.ut" +
      "il.netty.proto.ServerAlterReceiveAddr\022E\n",
      "\020serverSnatchList\030\242\006 \001(\0132*.com.kys.util." +
      "netty.proto.ServerSnatchList\022Q\n\026serverSn" +
      "atchItemDetail\030\243\006 \001(\01320.com.kys.util.net" +
      "ty.proto.ServerSnatchItemDetail\022C\n\017serve" +
      "rSnatchBet\030\244\006 \001(\0132).com.kys.util.netty.p" +
      "roto.ServerSnatchBet\022O\n\025serverSnatchAwar" +
      "dList\030\245\006 \001(\0132/.com.kys.util.netty.proto." +
      "ServerSnatchAwardList\022O\n\025serverOwnSnatch" +
      "Record\030\246\006 \001(\0132/.com.kys.util.netty.proto" +
      ".ServerOwnSnatchRecord\022S\n\027serverSnatchIt",
      "emHistory\030\247\006 \001(\01321.com.kys.util.netty.pr" +
      "oto.ServerSnatchItemHistory\022W\n\031serverSna" +
      "tchHistoryDetail\030\250\006 \001(\01323.com.kys.util.n" +
      "etty.proto.ServerSnatchHistoryDetail\022M\n\024" +
      "serverSnatchGetAward\030\251\006 \001(\0132..com.kys.ut" +
      "il.netty.proto.ServerSnatchGetAward\022?\n\rs" +
      "erverEnterDG\030\204\007 \001(\0132\'.com.kys.util.netty" +
      ".proto.ServerEnterDG\022C\n\017serverDGLottery\030" +
      "\205\007 \001(\0132).com.kys.util.netty.proto.Server" +
      "DGLottery\022I\n\022serverResetLottery\030\206\007 \001(\0132,",
      ".com.kys.util.netty.proto.ServerResetLot" +
      "tery\022=\n\014serverExitDG\030\207\007 \001(\0132&.com.kys.ut" +
      "il.netty.proto.ServerExitDG\022=\n\014serverOpe" +
      "nDG\030\210\007 \001(\0132&.com.kys.util.netty.proto.Se" +
      "rverOpenDG\022=\n\014serverOpenDD\030\211\007 \001(\0132&.com." +
      "kys.util.netty.proto.ServerOpenDD\022C\n\017ser" +
      "verDDLottery\030\212\007 \001(\0132).com.kys.util.netty" +
      ".proto.ServerDDLottery\022=\n\014serverExitDD\030\213" +
      "\007 \001(\0132&.com.kys.util.netty.proto.ServerE" +
      "xitDD\022C\n\017serverQueryProp\030\351\007 \001(\0132).com.ky",
      "s.util.netty.proto.ServerQueryProp\022?\n\rse" +
      "rverUseProp\030\352\007 \001(\0132\'.com.kys.util.netty." +
      "proto.ServerUseProp\022M\n\024serverQueryPropCo" +
      "unt\030\353\007 \001(\0132..com.kys.util.netty.proto.Se" +
      "rverQueryPropCount\022K\n\023serverMonthSignInf" +
      "o\030\315\010 \001(\0132-.com.kys.util.netty.proto.Serv" +
      "erMonthSignInfo\022C\n\017serverMonthSign\030\316\010 \001(" +
      "\0132).com.kys.util.netty.proto.ServerMonth" +
      "Sign\022K\n\023serverGetCritReward\030\317\010 \001(\0132-.com" +
      ".kys.util.netty.proto.ServerGetCritRewar",
      "d\022C\n\017serverLTLottery\030\320\010 \001(\0132).com.kys.ut" +
      "il.netty.proto.ServerLTLottery\022G\n\021server" +
      "GetTSReward\030\321\010 \001(\0132+.com.kys.util.netty." +
      "proto.ServerGetTSReward\022G\n\021serverGetLuck" +
      "Info\030\322\010 \001(\0132+.com.kys.util.netty.proto.S" +
      "erverGetLuckInfo\022E\n\020serverGetVipInfo\030\261\t " +
      "\001(\0132*.com.kys.util.netty.proto.ServerGet" +
      "VipInfo\022E\n\020serverGetVipWeek\030\262\t \001(\0132*.com" +
      ".kys.util.netty.proto.ServerGetVipWeek\022;" +
      "\n\013b_GameStart\030\222\003 \001(\0132%.com.kys.util.nett",
      "y.proto.B_GameStart\0227\n\tb_DoCatch\030\223\003 \001(\0132" +
      "#.com.kys.util.netty.proto.B_DoCatch\022?\n\r" +
      "b_CatchResult\030\224\003 \001(\0132\'.com.kys.util.nett" +
      "y.proto.B_CatchResult\022;\n\013b_PlayCards\030\225\003 " +
      "\001(\0132%.com.kys.util.netty.proto.B_PlayCar" +
      "ds\022C\n\017b_SendDiZhuCard\030\227\003 \001(\0132).com.kys.u" +
      "til.netty.proto.B_SendDiZhuCard\022=\n\014b_Nex" +
      "tPlayer\030\230\003 \001(\0132&.com.kys.util.netty.prot" +
      "o.B_NextPlayer\022=\n\014b_GameSettle\030\231\003 \001(\0132&." +
      "com.kys.util.netty.proto.B_GameSettle\022C\n",
      "\017b_RewardMessage\030\232\003 \001(\0132).com.kys.util.n" +
      "etty.proto.B_RewardMessage\0229\n\nb_AutoPlay" +
      "\030\233\003 \001(\0132$.com.kys.util.netty.proto.B_Aut" +
      "oPlay\022;\n\013b_RoomIdUrl\030\234\003 \001(\0132%.com.kys.ut" +
      "il.netty.proto.B_RoomIdUrl\022?\n\rb_AwardDia" +
      "log\030\235\003 \001(\0132\'.com.kys.util.netty.proto.B_" +
      "AwardDialog\022=\n\014b_BuySuccess\030\236\003 \001(\0132&.com" +
      ".kys.util.netty.proto.B_BuySuccess\022=\n\014b_" +
      "RedDotPush\030\237\003 \001(\0132&.com.kys.util.netty.p" +
      "roto.B_RedDotPush\022C\n\017b_ForceAnnounce\030\240\003 ",
      "\001(\0132).com.kys.util.netty.proto.B_ForceAn" +
      "nounce\022A\n\016b_DGameMessage\030\241\003 \001(\0132(.com.ky" +
      "s.util.netty.proto.B_DGameMessage\0225\n\010b_D" +
      "GOver\030\242\003 \001(\0132\".com.kys.util.netty.proto." +
      "B_DGOver\0225\n\010b_DDOver\030\243\003 \001(\0132\".com.kys.ut" +
      "il.netty.proto.B_DDOver\0225\n\010b_DDInfo\030\244\003 \001" +
      "(\0132\".com.kys.util.netty.proto.B_DDInfo*\300" +
      "\002\n\013ModelIdEnum\022\013\n\007Unknown\020\000\022\014\n\010LOGIN_ID\020" +
      "\n\022\013\n\007GAME_ID\020\013\022\013\n\007ROOM_ID\020\014\022\013\n\007HALL_ID\020\r" +
      "\022\014\n\010STORE_ID\020\016\022\r\n\tPLAYER_ID\020\017\022\013\n\007CHAT_ID",
      "\020\020\022\r\n\tFRIEND_ID\020\021\022\013\n\007RANK_ID\020\022\022\013\n\007TASK_I" +
      "D\020\023\022\013\n\007MAIL_ID\020\024\022\r\n\tSIGNUP_ID\020\025\022\020\n\014BROAD" +
      "CAST_ID\020\026\022\016\n\nGAME_HEART\020\027\022\r\n\tMARKET_ID\020\030" +
      "\022\017\n\013ANNOUNCE_ID\020\031\022\r\n\tSNATCH_ID\020\032\022\026\n\022DIAM" +
      "OND_LOTTERY_ID\020\033\022\013\n\007PROP_ID\020\034\022\n\n\006VIP_ID\020" +
      "\035*\345&\n\017MessageTypeEnum\022\t\n\005Error\020\000\022\020\n\013clie" +
      "ntLogin\020\364N\022\026\n\021clientGetUserInfo\020\365N\022\036\n\031cl" +
      "ientReturnHallHeartBeat\020\366N\022\023\n\016clientNewL" +
      "ogin\020\367N\022\037\n\031clientReturnGameHeartBeat\020\277\264\001" +
      "\022\022\n\rclientDoCatch\020\216W\022\024\n\017clientPlayCards\020",
      "\217W\022\024\n\017clientEnterRoom\020\220W\022\024\n\017clientLeaveR" +
      "oom\020\222W\022\026\n\021clientRecoverGame\020\223W\022\023\n\016client" +
      "AutoPlay\020\224W\022\025\n\020clientQueryIndex\020\225W\022\024\n\017cl" +
      "ientQuickJoin\020\250_\022\025\n\020clientCancleJoin\020\251_\022" +
      "\032\n\025clientRetryReturnGame\020\252_\022\026\n\021clientGet" +
      "RankList\020\302g\022\021\n\014clientSignup\020\303g\022\036\n\031client" +
      "GetSignupRewardList\020\304g\022\025\n\020clientDrawWinC" +
      "up\020\305g\022\030\n\023clientGetRoomConfig\020\306g\022\026\n\021clien" +
      "tGetHallInfo\020\307g\022\030\n\023clientRewardMessage\020\310" +
      "g\022\034\n\027clientGetRoomCardConfig\020\311g\022\025\n\020clien",
      "tCreateRoom\020\312g\022\036\n\031clientGetMonthCardDiam" +
      "ond\020\313g\022\032\n\025clientGetLotteryCount\020\314g\022\026\n\021cl" +
      "ientGetRoomInfo\020\315g\022\027\n\022clientPlayerLogout" +
      "\020\316g\022\027\n\022clientCheckConnect\020\317g\022\024\n\017clientGe" +
      "tPFList\020\320g\022\023\n\016clientChoosePF\020\321g\022\031\n\024clien" +
      "tGetHistoryRank\020\322g\022\023\n\016clientH5Reward\020\323g\022" +
      "\030\n\023clientNewDrawWinCup\020\324g\022\031\n\024clientGetNe" +
      "wHallInfo\020\325g\022\026\n\021clientGetSkinInfo\020\326g\022\024\n\017" +
      "clientEquipSkin\020\327g\022\027\n\022clientGetStoreData" +
      "\020\334o\022\027\n\022clientConvertGoods\020\335o\022\033\n\026clientWX",
      "PayResultQuery\020\336o\022\030\n\023clientBuyOrderGoods" +
      "\020\337o\022\031\n\024clientGetFirstCharge\020\340o\022\027\n\022client" +
      "GetDailyGift\020\341o\022\027\n\022clientGetMonthCard\020\342o" +
      "\022\034\n\027clientGetResurgenceGift\020\343o\022\032\n\024client" +
      "QueryDailyTask\020\300\226\001\022\035\n\027clientGetDailyTask" +
      "Award\020\301\226\001\022\033\n\025clientGetNoviceReward\020\302\226\001\022\033" +
      "\n\025clientQueryNoviceTask\020\303\226\001\022\026\n\020clientGet" +
      "DTAward\020\304\226\001\022\027\n\021clientGetAnnounce\020\267\305\001\022\027\n\021" +
      "serverGetAnnounce\020\311\311\001\022\023\n\rclientGetMail\020\370" +
      "\240\001\022\031\n\023clientGetMailReward\020\371\240\001\022\023\n\rclientD",
      "elMail\020\372\240\001\022\024\n\016clientReadMail\020\373\240\001\022\021\n\013clie" +
      "ntDel2R\020\374\240\001\022\026\n\020clientGetVipInfo\020\311\342\001\022\026\n\020c" +
      "lientGetVipWeek\020\312\342\001\022\026\n\020serverGetVipInfo\020" +
      "\313\342\001\022\026\n\020serverGetVipWeek\020\314\342\001\022\020\n\013serverLog" +
      "in\020\204R\022\026\n\021serverGetUserInfo\020\205R\022\034\n\027serverS" +
      "endHallHeartBeat\020\206R\022\035\n\027serverSendGameHea" +
      "rtBeat\020\317\267\001\022\024\n\017serverEnterRoom\020\236Z\022\022\n\rserv" +
      "erDoCatch\020\237Z\022\024\n\017serverPlayCards\020\240Z\022\026\n\021se" +
      "rverRecoverGame\020\241Z\022\023\n\016serverAutoPlay\020\242Z\022" +
      "\024\n\017serverLeaveRoom\020\243Z\022\025\n\020serverQueryInde",
      "x\020\244Z\022\032\n\025serverRetryReturnGame\020\245Z\022\024\n\017serv" +
      "erQuickJoin\020\270b\022\025\n\020serverCancleJoin\020\271b\022\026\n" +
      "\021serverGetRankList\020\322j\022\036\n\031serverGetSignup" +
      "RewardList\020\323j\022\026\n\021serverGetHallInfo\020\324j\022\021\n" +
      "\014serverSignup\020\325j\022\030\n\023serverRewardMessage\020" +
      "\326j\022\025\n\020serverDrawWinCup\020\327j\022\030\n\023serverGetRo" +
      "omConfig\020\330j\022\034\n\027serverGetRoomCardConfig\020\331" +
      "j\022\025\n\020serverCreateRoom\020\332j\022\036\n\031serverGetMon" +
      "thCardDiamond\020\333j\022\032\n\025serverGetLotteryCoun" +
      "t\020\334j\022\026\n\021serverGetRoomInfo\020\335j\022\027\n\022serverCh",
      "eckConnect\020\336j\022\024\n\017serverGetPFList\020\337j\022\023\n\016s" +
      "erverChoosePF\020\340j\022\031\n\024serverGetHistoryRank" +
      "\020\341j\022\023\n\016serverH5Reward\020\342j\022\030\n\023serverNewDra" +
      "wWinCup\020\343j\022\031\n\024serverGetNewHallInfo\020\344j\022\026\n" +
      "\021serverGetSkinInfo\020\345j\022\024\n\017serverEquipSkin" +
      "\020\346j\022\027\n\022serverGetStoreData\020\354r\022\027\n\022serverCo" +
      "nvertGoods\020\355r\022\026\n\021serverWXPayResult\020\356r\022\030\n" +
      "\023serverBuyOrderGoods\020\357r\022\031\n\024serverGetFirs" +
      "tCharge\020\360r\022\027\n\022serverGetDailyGift\020\361r\022\027\n\022s" +
      "erverGetMonthCard\020\362r\022\034\n\027serverGetResurge",
      "nceGift\020\363r\022\032\n\024serverQueryDailyTask\020\317\231\001\022\035" +
      "\n\027serverGetDailyTaskAward\020\320\231\001\022\033\n\025serverG" +
      "etNoviceReward\020\321\231\001\022\033\n\025serverQueryNoviceT" +
      "ask\020\322\231\001\022\026\n\020serverGetDTAward\020\323\231\001\022\027\n\021clien" +
      "tSendTelCode\020\306\275\001\022\031\n\023clientVerifyTelCode\020" +
      "\307\275\001\022\030\n\022clientGetTaskAward\020\310\275\001\022\034\n\026clientQ" +
      "ueryShareDetail\020\311\275\001\022\032\n\024clientQueryShareL" +
      "ist\020\312\275\001\022\030\n\022clientSharePackage\020\313\275\001\022\030\n\022cli" +
      "entGetAwardList\020\314\275\001\022\027\n\021serverSendTelCode" +
      "\020\326\300\001\022\031\n\023serverVerifyTelCode\020\327\300\001\022\030\n\022serve",
      "rGetTaskAward\020\330\300\001\022\034\n\026serverQueryShareDet" +
      "ail\020\331\300\001\022\032\n\024serverQueryShareList\020\332\300\001\022\030\n\022s" +
      "erverSharePackage\020\333\300\001\022\030\n\022serverGetAwardL" +
      "ist\020\334\300\001\022\023\n\rserverGetMail\020\252\241\001\022\031\n\023serverGe" +
      "tMailReward\020\253\241\001\022\023\n\rserverDelMail\020\254\241\001\022\024\n\016" +
      "serverReadMail\020\255\241\001\022\021\n\013serverDel2R\020\256\241\001\022\032\n" +
      "\024clientGetReceiveAddr\020\221\313\001\022\034\n\026clientAlter" +
      "ReceiveAddr\020\222\313\001\022\026\n\020clientSnatchList\020\223\313\001\022" +
      "\034\n\026clientSnatchItemDetail\020\224\313\001\022\025\n\017clientS" +
      "natchBet\020\225\313\001\022\033\n\025clientSnatchAwardList\020\226\313",
      "\001\022\033\n\025clientOwnSnatchRecord\020\227\313\001\022\035\n\027client" +
      "SnatchItemHistory\020\230\313\001\022\037\n\031clientSnatchHis" +
      "toryDetail\020\231\313\001\022\032\n\024clientSnatchGetAward\020\232" +
      "\313\001\022\032\n\024serverGetReceiveAddr\020\205\317\001\022\034\n\026server" +
      "AlterReceiveAddr\020\206\317\001\022\026\n\020serverSnatchList" +
      "\020\207\317\001\022\034\n\026serverSnatchItemDetail\020\210\317\001\022\025\n\017se" +
      "rverSnatchBet\020\211\317\001\022\033\n\025serverSnatchAwardLi" +
      "st\020\212\317\001\022\033\n\025serverOwnSnatchRecord\020\213\317\001\022\035\n\027s" +
      "erverSnatchItemHistory\020\214\317\001\022\037\n\031serverSnat" +
      "chHistoryDetail\020\215\317\001\022\032\n\024serverSnatchGetAw",
      "ard\020\216\317\001\022\023\n\rclientEnterDG\020\371\322\001\022\025\n\017clientDG" +
      "Lottery\020\372\322\001\022\030\n\022clientResetLottery\020\373\322\001\022\022\n" +
      "\014clientExitDG\020\374\322\001\022\022\n\014clientOpenDG\020\375\322\001\022\022\n" +
      "\014clientOpenDD\020\376\322\001\022\025\n\017clientDDLottery\020\377\322\001" +
      "\022\022\n\014clientExitDD\020\200\323\001\022\023\n\rserverEnterDG\020\355\326" +
      "\001\022\025\n\017serverDGLottery\020\356\326\001\022\030\n\022serverResetL" +
      "ottery\020\357\326\001\022\022\n\014serverExitDG\020\360\326\001\022\022\n\014server" +
      "OpenDG\020\361\326\001\022\022\n\014serverOpenDD\020\362\326\001\022\025\n\017server" +
      "DDLottery\020\363\326\001\022\022\n\014serverExitDD\020\364\326\001\022\025\n\017cli" +
      "entQueryProp\020\341\332\001\022\023\n\rclientUseProp\020\342\332\001\022\032\n",
      "\024clientQueryPropCount\020\343\332\001\022\025\n\017serverQuery" +
      "Prop\020\325\336\001\022\023\n\rserverUseProp\020\326\336\001\022\032\n\024serverQ" +
      "ueryPropCount\020\327\336\001\022\031\n\023clientMonthSignInfo" +
      "\020\211\244\001\022\025\n\017clientMonthSign\020\212\244\001\022\031\n\023clientGet" +
      "CritReward\020\213\244\001\022\025\n\017clientLTLottery\020\214\244\001\022\027\n" +
      "\021clientGetTSReward\020\215\244\001\022\027\n\021clientGetLuckI" +
      "nfo\020\216\244\001\022\031\n\023serverMonthSignInfo\020\375\247\001\022\025\n\017se" +
      "rverMonthSign\020\376\247\001\022\031\n\023serverGetCritReward" +
      "\020\377\247\001\022\025\n\017serverLTLottery\020\200\250\001\022\027\n\021serverGet" +
      "TSReward\020\201\250\001\022\027\n\021serverGetLuckInfo\020\202\250\001\022\021\n",
      "\013b_EnterRoom\020\361\253\001\022\021\n\013b_GameStart\020\362\253\001\022\017\n\tb" +
      "_DoCatch\020\363\253\001\022\023\n\rb_CatchResult\020\364\253\001\022\021\n\013b_P" +
      "layCards\020\365\253\001\022\025\n\017b_SendDiZhuCard\020\367\253\001\022\022\n\014b" +
      "_NextPlayer\020\370\253\001\022\022\n\014b_GameSettle\020\371\253\001\022\025\n\017b" +
      "_RewardMessage\020\372\253\001\022\020\n\nb_AutoPlay\020\373\253\001\022\021\n\013" +
      "b_RoomIdUrl\020\374\253\001\022\023\n\rb_AwardDialog\020\375\253\001\022\022\n\014" +
      "b_BuySuccess\020\376\253\001\022\022\n\014b_RedDotPush\020\377\253\001\022\025\n\017" +
      "b_ForceAnnounce\020\200\254\001\022\024\n\016b_DGameMessage\020\201\254" +
      "\001\022\016\n\010b_DGOver\020\202\254\001\022\016\n\010b_DDOver\020\203\254\001\022\016\n\010b_D" +
      "DInfo\020\204\254\001*\344\020\n\nResultCode\022\013\n\007success\020\000\022\007\n",
      "\003err\020\001\022\017\n\013errNoMethod\020\002\022\r\n\terrNulMsg\020\003\022\023" +
      "\n\017errLoginInvalid\020\004\022\021\n\rerrNetConnect\020\005\022\022" +
      "\n\016errGameNotOver\020\006\022\014\n\010errLogin\020d\022\030\n\024errL" +
      "oginTokenInvalid\020e\022\017\n\013errLoginBan\020f\022\025\n\021e" +
      "rrLoginReconnect\020g\022\014\n\007errRank\020\254\002\022\021\n\014errR" +
      "ankEmpty\020\255\002\022\017\n\nerrLottery\020\220\003\022\030\n\023errLotte" +
      "ryNotEnough\020\221\003\022\014\n\007errShop\020\364\003\022\030\n\023errShopI" +
      "temNotExist\020\365\003\022\031\n\024errShopChipNotEnough\020\366" +
      "\003\022\027\n\022errDailyGiftNoLeft\020\367\003\022\035\n\030errGoldcoi" +
      "nResGiftNoLeft\020\370\003\022\034\n\027errDiamondResGiftNo",
      "Left\020\371\003\022\031\n\024errUnmatchBuyResGift\020\372\003\022\032\n\025er" +
      "rNotFollowWxAccount\020\373\003\022\025\n\020errConvertFail" +
      "ed\020\374\003\022\022\n\rerrNotBindTel\020\375\003\022\024\n\017errEnPayNoM" +
      "oney\020\376\003\022\024\n\017errWxRedNoMoney\020\377\003\022\022\n\rerrChar" +
      "geOver\020\200\004\022\025\n\020errWxSystemError\020\201\004\022\027\n\022errL" +
      "otteryWaitTime\020\202\004\022\027\n\022errExchangeExhaust\020" +
      "\203\004\022\014\n\007errRoom\020\330\004\022\031\n\024errRoomChipNotEnough" +
      "\020\331\004\022\034\n\027errRoomDiamondNotEnough\020\332\004\022\024\n\017err" +
      "RoomNotExist\020\333\004\022\021\n\014errRoomNotIn\020\334\004\022\026\n\021er" +
      "rRoomChipToMuch\020\335\004\022\031\n\024errRoomDiamondToMu",
      "ch\020\336\004\022\022\n\rerrUserIsNull\020\275\005\022\026\n\021errNotOwnTh" +
      "isSkin\020\276\005\022\014\n\007errGame\020\240\006\022\030\n\023errGameRoomNo" +
      "tExist\020\241\006\022\024\n\017errGameAutoPlay\020\242\006\022\027\n\022errGa" +
      "meInvaildOper\020\243\006\022\035\n\030errGameInvaildCatchP" +
      "oint\020\244\006\022\031\n\024errGameEnterRoomFail\020\245\006\022\027\n\022er" +
      "rGamePlayerNotIn\020\246\006\022\027\n\022errGameCardInvail" +
      "d\020\247\006\022\n\n\005errPm\020\204\007\022\027\n\022errPmTelNumInvaild\020\205" +
      "\007\022\030\n\023errPmVerifyCodeFail\020\206\007\022\033\n\026errPmGetA" +
      "wardNotFinish\020\207\007\022\034\n\027errPmGetAwardNotBind" +
      "Tel\020\210\007\022\025\n\020errPmAlreadyBind\020\211\007\022!\n\034errPmRe",
      "questIntervalTooShort\020\212\007\022\032\n\025errPmSharePa" +
      "ckageFail\020\213\007\022\021\n\014errPmNoSlave\020\214\007\022\031\n\024errPm" +
      "NotRelationship\020\215\007\022\030\n\023errPmTelAlreadyUse" +
      "d\020\216\007\022\025\n\020errAwardMsgIsNul\020\350\007\022\026\n\021errGetDai" +
      "lyFailed\020\314\010\022\031\n\024errNoviceTaskexpired\020\260\t\022\027" +
      "\n\022errGetNoviceFailed\020\261\t\022\022\n\rerrDeleteMail" +
      "\020\224\n\022\016\n\terrSnatch\020\370\n\022\025\n\020errSnatchGetList\020" +
      "\371\n\022\030\n\023errSnatchInvaildBet\020\372\n\022\035\n\030errSnatc" +
      "hWincupNotEnough\020\373\n\022\035\n\030errSnatchInvaildG" +
      "etAward\020\374\n\022\035\n\030errSnatchNoMoreHistories\020\375",
      "\n\022\037\n\032errSnatchRequireAddrDetail\020\376\n\022\n\n\005er" +
      "rDG\020\334\013\022\021\n\014errDGExpired\020\335\013\022\021\n\014errBoxIsOve" +
      "r\020\336\013\022\r\n\010errReset\020\337\013\022\016\n\terrOpenDg\020\340\013\022\022\n\re" +
      "rrNoLeftCont\020\341\013\022\020\n\013errNoChance\020\342\013\022\014\n\007err" +
      "Prop\020\300\014\022\033\n\026errPropNotHaveThisProp\020\301\014\022\014\n\007" +
      "errSign\020\244\r\022\023\n\016errSignRepeate\020\245\r\022\030\n\023errSi" +
      "gnRSCNotEnough\020\246\r\022\030\n\023errSignRSDNotEnough" +
      "\020\247\r\022\020\n\013errSignTime\020\250\r\022\016\n\terrSignLT\020\251\r\022\023\n" +
      "\016errSignVipLack\020\252\r\022\030\n\023errSignRewardHasGe" +
      "t\020\253\r\022\030\n\023errSignDayNotEnough\020\254\r\022\026\n\021errVip",
      "LvNotEnough\020\211\016\022\036\n\031errVipWeekAwardAlready" +
      "Get\020\212\016\022\n\n\005errDD\020\354\016\022\022\n\rerrDNotEnough\020\355\016\022\017" +
      "\n\nerrDDClose\020\356\016\022\027\n\022errDTimesNotEnough\020\357\016" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kys.util.netty.proto.LoginProto.getDescriptor(),
          com.kys.util.netty.proto.UserProto.getDescriptor(),
          com.kys.util.netty.proto.GameProto.getDescriptor(),
          com.kys.util.netty.proto.StoreProto.getDescriptor(),
          com.kys.util.netty.proto.HallProto.getDescriptor(),
          com.kys.util.netty.proto.SnatchProto.getDescriptor(),
          com.kys.util.netty.proto.PropProto.getDescriptor(),
          com.kys.util.netty.proto.SignProto.getDescriptor(),
          com.kys.util.netty.proto.VipProto.getDescriptor(),
        }, assigner);
    internal_static_com_kys_util_netty_proto_ClientRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_kys_util_netty_proto_ClientRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_kys_util_netty_proto_ClientRequest_descriptor,
        new java.lang.String[] { "UserId", "MethodId", "ClientLogin", "ClientPlayerInfo", "ClientReturnHallHeartBeat", "ClientReturnGameHeartBeat", "ClientGetUserInfo", "ClientNewLogin", "ClientQuickJoin", "ClientEnterRoom", "ClientDoCatch", "ClientPlayCards", "ClientRecoverGame", "ClientAutoPlay", "ClientLeaveRoom", "ClientCancleJoin", "ClientQueryIndex", "ClientRetryReturnGame", "ClientGetRankList", "ClientGetSignupRewardList", "ClientGetHallInfo", "ClientSignup", "ClientDrawWinCup", "ClientGetRoomConfig", "ClientRewardMessage", "ClientGetRoomCardConfig", "ClientCreateRoom", "ClientGetMonthCardDiamond", "ClientGetLotteryCount", "ClientGetRoomInfo", "ClientSendTelCode", "ClientVerifyTelCode", "ClientQueryShareList", "ClientQueryShareDetail", "ClientGetTaskAward", "ClientSharePackage", "ClientGetAwardList", "ClientPlayerLogout", "ClientCheckConnect", "ClientGetPFList", "ClientChoosePF", "ClientGetHistoryRank", "ClientH5Reward", "ClientNewDrawWinCup", "ClientGetNewHallInfo", "ClientGetSkinInfo", "ClientEquipSkin", "ClientGetStoreData", "ClientConvertGoods", "ClientWXPayResultQuery", "ClientBuyOrderGoods", "ClientGetFirstCharge", "ClientGetDailyGift", "ClientGetMonthCard", "ClientGetResurgenceGift", "ClientGetAnnounce", "ClientGetMail", "ClientGetMailReward", "ClientDelMail", "ClientReadMail", "ClientDel2R", "ClientQueryDailyTask", "ClientGetDailyTaskAward", "ClientGetNoviceReward", "ClientQueryNoviceTask", "ClientGetDTAward", "ClientGetReceiveAddr", "ClientAlterReceiveAddr", "ClientSnatchList", "ClientSnatchItemDetail", "ClientSnatchBet", "ClientSnatchAwardList", "ClientOwnSnatchRecord", "ClientSnatchItemHistory", "ClientSnatchHistoryDetail", "ClientSnatchGetAward", "ClientEnterDG", "ClientDGLottery", "ClientResetLottery", "ClientExitDG", "ClientOpenDG", "ClientOpenDD", "ClientDDLottery", "ClientExitDD", "ClientQueryProp", "ClientUseProp", "ClientQueryPropCount", "ClientMonthSignInfo", "ClientMonthSign", "ClientGetCritReward", "ClientLTLottery", "ClientGetTSReward", "ClientGetLuckInfo", "ClientGetVipInfo", "ClientGetVipWeek", });
    internal_static_com_kys_util_netty_proto_ServerResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_kys_util_netty_proto_ServerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_kys_util_netty_proto_ServerResponse_descriptor,
        new java.lang.String[] { "MethodId", "Result", "ErrStr", "ServerLogin", "ServerPlayerInfo", "ServerSendHallHeartBeat", "ServerSendGameHeartBeat", "ServerGetUserInfo", "ServerQuickJoin", "ServerEnterRoom", "ServerRecoverGame", "ServerDoCatch", "ServerPlayCards", "ServerAutoPlay", "ServerLeaveRoom", "ServerCancleJoin", "ServerQueryIndex", "ServerRetryReturnGame", "ServerGetRankList", "ServerGetSignupRewardList", "ServerGetHallInfo", "ServerSignup", "ServerRewardMessage", "ServerDrawWinCup", "ServerGetRoomConfig", "ServerGetRoomCardConfig", "ServerCreateRoom", "ServerGetMonthCardDiamond", "ServerGetLotteryCount", "ServerGetRoomInfo", "ServerSendTelCode", "ServerVerifyTelCode", "ServerQueryShareList", "ServerQueryShareDetail", "ServerGetTaskAward", "ServerSharePackage", "ServerGetAwardList", "ServerCheckConnect", "ServerGetPFList", "ServerChoosePF", "ServerGetHistoryRank", "ServerH5Reward", "ServerNewDrawWinCup", "ServerGetNewHallInfo", "ServerGetSkinInfo", "ServerEquipSkin", "ServerGetStoreData", "ServerConvertGoods", "ServerWXPayResult", "ServerBuyOrderGoods", "ServerGetFirstCharge", "ServerGetDailyGift", "ServerGetMonthCard", "ServerGetResurgenceGift", "ServerGetAnnounce", "ServerGetMail", "ServerGetMailReward", "ServerDelMail", "ServerReadMail", "ServerDel2R", "ServerQueryDailyTask", "ServerGetDailyTaskAward", "ServerGetNoviceReward", "ServerQueryNoviceTask", "ServerGetDTAward", "ServerGetReceiveAddr", "ServerAlterReceiveAddr", "ServerSnatchList", "ServerSnatchItemDetail", "ServerSnatchBet", "ServerSnatchAwardList", "ServerOwnSnatchRecord", "ServerSnatchItemHistory", "ServerSnatchHistoryDetail", "ServerSnatchGetAward", "ServerEnterDG", "ServerDGLottery", "ServerResetLottery", "ServerExitDG", "ServerOpenDG", "ServerOpenDD", "ServerDDLottery", "ServerExitDD", "ServerQueryProp", "ServerUseProp", "ServerQueryPropCount", "ServerMonthSignInfo", "ServerMonthSign", "ServerGetCritReward", "ServerLTLottery", "ServerGetTSReward", "ServerGetLuckInfo", "ServerGetVipInfo", "ServerGetVipWeek", "BGameStart", "BDoCatch", "BCatchResult", "BPlayCards", "BSendDiZhuCard", "BNextPlayer", "BGameSettle", "BRewardMessage", "BAutoPlay", "BRoomIdUrl", "BAwardDialog", "BBuySuccess", "BRedDotPush", "BForceAnnounce", "BDGameMessage", "BDGOver", "BDDOver", "BDDInfo", });
    com.kys.util.netty.proto.LoginProto.getDescriptor();
    com.kys.util.netty.proto.UserProto.getDescriptor();
    com.kys.util.netty.proto.GameProto.getDescriptor();
    com.kys.util.netty.proto.StoreProto.getDescriptor();
    com.kys.util.netty.proto.HallProto.getDescriptor();
    com.kys.util.netty.proto.SnatchProto.getDescriptor();
    com.kys.util.netty.proto.PropProto.getDescriptor();
    com.kys.util.netty.proto.SignProto.getDescriptor();
    com.kys.util.netty.proto.VipProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
